// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define.proto

#ifndef PROTOBUF_define_2eproto__INCLUDED
#define PROTOBUF_define_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
class AbilityAppliedAbility;
class AbilityAppliedAbilityDefaultTypeInternal;
extern AbilityAppliedAbilityDefaultTypeInternal _AbilityAppliedAbility_default_instance_;
class AbilityAppliedModifier;
class AbilityAppliedModifierDefaultTypeInternal;
extern AbilityAppliedModifierDefaultTypeInternal _AbilityAppliedModifier_default_instance_;
class AbilityAttachedModifier;
class AbilityAttachedModifierDefaultTypeInternal;
extern AbilityAttachedModifierDefaultTypeInternal _AbilityAttachedModifier_default_instance_;
class AbilityFloatValue;
class AbilityFloatValueDefaultTypeInternal;
extern AbilityFloatValueDefaultTypeInternal _AbilityFloatValue_default_instance_;
class AbilityGadgetInfo;
class AbilityGadgetInfoDefaultTypeInternal;
extern AbilityGadgetInfoDefaultTypeInternal _AbilityGadgetInfo_default_instance_;
class AbilityScalarValueEntry;
class AbilityScalarValueEntryDefaultTypeInternal;
extern AbilityScalarValueEntryDefaultTypeInternal _AbilityScalarValueEntry_default_instance_;
class AbilityString;
class AbilityStringDefaultTypeInternal;
extern AbilityStringDefaultTypeInternal _AbilityString_default_instance_;
class AbilitySyncStateInfo;
class AbilitySyncStateInfoDefaultTypeInternal;
extern AbilitySyncStateInfoDefaultTypeInternal _AbilitySyncStateInfo_default_instance_;
class AnimatorParameterValueInfo;
class AnimatorParameterValueInfoDefaultTypeInternal;
extern AnimatorParameterValueInfoDefaultTypeInternal _AnimatorParameterValueInfo_default_instance_;
class AvatarExpeditionInfo;
class AvatarExpeditionInfoDefaultTypeInternal;
extern AvatarExpeditionInfoDefaultTypeInternal _AvatarExpeditionInfo_default_instance_;
class AvatarFetterInfo;
class AvatarFetterInfoDefaultTypeInternal;
extern AvatarFetterInfoDefaultTypeInternal _AvatarFetterInfo_default_instance_;
class AvatarInfo;
class AvatarInfoDefaultTypeInternal;
extern AvatarInfoDefaultTypeInternal _AvatarInfo_default_instance_;
class AvatarInfo_FightPropMapEntry;
class AvatarInfo_FightPropMapEntryDefaultTypeInternal;
extern AvatarInfo_FightPropMapEntryDefaultTypeInternal _AvatarInfo_FightPropMapEntry_default_instance_;
class AvatarInfo_PropMapEntry;
class AvatarInfo_PropMapEntryDefaultTypeInternal;
extern AvatarInfo_PropMapEntryDefaultTypeInternal _AvatarInfo_PropMapEntry_default_instance_;
class AvatarInfo_ProudSkillExtraLevelMapEntry;
class AvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal;
extern AvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal _AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_;
class AvatarInfo_SkillLevelMapEntry;
class AvatarInfo_SkillLevelMapEntryDefaultTypeInternal;
extern AvatarInfo_SkillLevelMapEntryDefaultTypeInternal _AvatarInfo_SkillLevelMapEntry_default_instance_;
class AvatarInfo_SkillMapEntry;
class AvatarInfo_SkillMapEntryDefaultTypeInternal;
extern AvatarInfo_SkillMapEntryDefaultTypeInternal _AvatarInfo_SkillMapEntry_default_instance_;
class AvatarSkillInfo;
class AvatarSkillInfoDefaultTypeInternal;
extern AvatarSkillInfoDefaultTypeInternal _AvatarSkillInfo_default_instance_;
class Birthday;
class BirthdayDefaultTypeInternal;
extern BirthdayDefaultTypeInternal _Birthday_default_instance_;
class BlockInfo;
class BlockInfoDefaultTypeInternal;
extern BlockInfoDefaultTypeInternal _BlockInfo_default_instance_;
class BlossomChestInfo;
class BlossomChestInfoDefaultTypeInternal;
extern BlossomChestInfoDefaultTypeInternal _BlossomChestInfo_default_instance_;
class BossChestInfo;
class BossChestInfoDefaultTypeInternal;
extern BossChestInfoDefaultTypeInternal _BossChestInfo_default_instance_;
class ClientCustomConfig;
class ClientCustomConfigDefaultTypeInternal;
extern ClientCustomConfigDefaultTypeInternal _ClientCustomConfig_default_instance_;
class ClientCustomConfig_DevicelistEntry;
class ClientCustomConfig_DevicelistEntryDefaultTypeInternal;
extern ClientCustomConfig_DevicelistEntryDefaultTypeInternal _ClientCustomConfig_DevicelistEntry_default_instance_;
class ClientGadgetInfo;
class ClientGadgetInfoDefaultTypeInternal;
extern ClientGadgetInfoDefaultTypeInternal _ClientGadgetInfo_default_instance_;
class ClientMassiveEntity;
class ClientMassiveEntityDefaultTypeInternal;
extern ClientMassiveEntityDefaultTypeInternal _ClientMassiveEntity_default_instance_;
class CreateEntityInfo;
class CreateEntityInfoDefaultTypeInternal;
extern CreateEntityInfoDefaultTypeInternal _CreateEntityInfo_default_instance_;
class CreateGadgetInfo;
class CreateGadgetInfoDefaultTypeInternal;
extern CreateGadgetInfoDefaultTypeInternal _CreateGadgetInfo_default_instance_;
class CreateGadgetInfo_Chest;
class CreateGadgetInfo_ChestDefaultTypeInternal;
extern CreateGadgetInfo_ChestDefaultTypeInternal _CreateGadgetInfo_Chest_default_instance_;
class EntityClientData;
class EntityClientDataDefaultTypeInternal;
extern EntityClientDataDefaultTypeInternal _EntityClientData_default_instance_;
class EntityRendererChangedInfo;
class EntityRendererChangedInfoDefaultTypeInternal;
extern EntityRendererChangedInfoDefaultTypeInternal _EntityRendererChangedInfo_default_instance_;
class EntityRendererChangedInfo_ChangedRenderersEntry;
class EntityRendererChangedInfo_ChangedRenderersEntryDefaultTypeInternal;
extern EntityRendererChangedInfo_ChangedRenderersEntryDefaultTypeInternal _EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_;
class Equip;
class EquipDefaultTypeInternal;
extern EquipDefaultTypeInternal _Equip_default_instance_;
class EquipParam;
class EquipParamDefaultTypeInternal;
extern EquipParamDefaultTypeInternal _EquipParam_default_instance_;
class EquipParamList;
class EquipParamListDefaultTypeInternal;
extern EquipParamListDefaultTypeInternal _EquipParamList_default_instance_;
class ForceUpdateInfo;
class ForceUpdateInfoDefaultTypeInternal;
extern ForceUpdateInfoDefaultTypeInternal _ForceUpdateInfo_default_instance_;
class GatherGadgetInfo;
class GatherGadgetInfoDefaultTypeInternal;
extern GatherGadgetInfoDefaultTypeInternal _GatherGadgetInfo_default_instance_;
class Item;
class ItemDefaultTypeInternal;
extern ItemDefaultTypeInternal _Item_default_instance_;
class ItemParam;
class ItemParamDefaultTypeInternal;
extern ItemParamDefaultTypeInternal _ItemParam_default_instance_;
class MailData;
class MailDataDefaultTypeInternal;
extern MailDataDefaultTypeInternal _MailData_default_instance_;
class MailItem;
class MailItemDefaultTypeInternal;
extern MailItemDefaultTypeInternal _MailItem_default_instance_;
class MailTextContent;
class MailTextContentDefaultTypeInternal;
extern MailTextContentDefaultTypeInternal _MailTextContent_default_instance_;
class MapMarkPoint;
class MapMarkPointDefaultTypeInternal;
extern MapMarkPointDefaultTypeInternal _MapMarkPoint_default_instance_;
class MassiveBoxInfo;
class MassiveBoxInfoDefaultTypeInternal;
extern MassiveBoxInfoDefaultTypeInternal _MassiveBoxInfo_default_instance_;
class MassiveEntityState;
class MassiveEntityStateDefaultTypeInternal;
extern MassiveEntityStateDefaultTypeInternal _MassiveEntityState_default_instance_;
class MassiveGrassInfo;
class MassiveGrassInfoDefaultTypeInternal;
extern MassiveGrassInfoDefaultTypeInternal _MassiveGrassInfo_default_instance_;
class MassiveWaterInfo;
class MassiveWaterInfoDefaultTypeInternal;
extern MassiveWaterInfoDefaultTypeInternal _MassiveWaterInfo_default_instance_;
class Material;
class MaterialDefaultTypeInternal;
extern MaterialDefaultTypeInternal _Material_default_instance_;
class MaterialDeleteInfo;
class MaterialDeleteInfoDefaultTypeInternal;
extern MaterialDeleteInfoDefaultTypeInternal _MaterialDeleteInfo_default_instance_;
class MaterialDeleteInfo_CountDownDelete;
class MaterialDeleteInfo_CountDownDeleteDefaultTypeInternal;
extern MaterialDeleteInfo_CountDownDeleteDefaultTypeInternal _MaterialDeleteInfo_CountDownDelete_default_instance_;
class MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry;
class MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntryDefaultTypeInternal;
extern MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntryDefaultTypeInternal _MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_;
class MaterialDeleteInfo_DateTimeDelete;
class MaterialDeleteInfo_DateTimeDeleteDefaultTypeInternal;
extern MaterialDeleteInfo_DateTimeDeleteDefaultTypeInternal _MaterialDeleteInfo_DateTimeDelete_default_instance_;
class MathQuaternion;
class MathQuaternionDefaultTypeInternal;
extern MathQuaternionDefaultTypeInternal _MathQuaternion_default_instance_;
class ModifierDurability;
class ModifierDurabilityDefaultTypeInternal;
extern ModifierDurabilityDefaultTypeInternal _ModifierDurability_default_instance_;
class MotionInfo;
class MotionInfoDefaultTypeInternal;
extern MotionInfoDefaultTypeInternal _MotionInfo_default_instance_;
class NpcPositionInfo;
class NpcPositionInfoDefaultTypeInternal;
extern NpcPositionInfoDefaultTypeInternal _NpcPositionInfo_default_instance_;
class OnlinePlayerInfo;
class OnlinePlayerInfoDefaultTypeInternal;
extern OnlinePlayerInfoDefaultTypeInternal _OnlinePlayerInfo_default_instance_;
class ParamList;
class ParamListDefaultTypeInternal;
extern ParamListDefaultTypeInternal _ParamList_default_instance_;
class PlaceInfo;
class PlaceInfoDefaultTypeInternal;
extern PlaceInfoDefaultTypeInternal _PlaceInfo_default_instance_;
class PlatformInfo;
class PlatformInfoDefaultTypeInternal;
extern PlatformInfoDefaultTypeInternal _PlatformInfo_default_instance_;
class PropValue;
class PropValueDefaultTypeInternal;
extern PropValueDefaultTypeInternal _PropValue_default_instance_;
class QueryCurrRegionHttpRsp;
class QueryCurrRegionHttpRspDefaultTypeInternal;
extern QueryCurrRegionHttpRspDefaultTypeInternal _QueryCurrRegionHttpRsp_default_instance_;
class QueryRegionListHttpRsp;
class QueryRegionListHttpRspDefaultTypeInternal;
extern QueryRegionListHttpRspDefaultTypeInternal _QueryRegionListHttpRsp_default_instance_;
class Quest;
class QuestDefaultTypeInternal;
extern QuestDefaultTypeInternal _Quest_default_instance_;
class Quest_LackedNpcMapEntry;
class Quest_LackedNpcMapEntryDefaultTypeInternal;
extern Quest_LackedNpcMapEntryDefaultTypeInternal _Quest_LackedNpcMapEntry_default_instance_;
class RegionCustomConfig;
class RegionCustomConfigDefaultTypeInternal;
extern RegionCustomConfigDefaultTypeInternal _RegionCustomConfig_default_instance_;
class RegionInfo;
class RegionInfoDefaultTypeInternal;
extern RegionInfoDefaultTypeInternal _RegionInfo_default_instance_;
class RegionSimpleInfo;
class RegionSimpleInfoDefaultTypeInternal;
extern RegionSimpleInfoDefaultTypeInternal _RegionSimpleInfo_default_instance_;
class Reliquary;
class ReliquaryDefaultTypeInternal;
extern ReliquaryDefaultTypeInternal _Reliquary_default_instance_;
class ResVersionConfig;
class ResVersionConfigDefaultTypeInternal;
extern ResVersionConfigDefaultTypeInternal _ResVersionConfig_default_instance_;
class Reward;
class RewardDefaultTypeInternal;
extern RewardDefaultTypeInternal _Reward_default_instance_;
class SceneAvatarInfo;
class SceneAvatarInfoDefaultTypeInternal;
extern SceneAvatarInfoDefaultTypeInternal _SceneAvatarInfo_default_instance_;
class SceneAvatarInfo_ProudSkillExtraLevelMapEntry;
class SceneAvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal;
extern SceneAvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal _SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_;
class SceneAvatarInfo_SkillLevelMapEntry;
class SceneAvatarInfo_SkillLevelMapEntryDefaultTypeInternal;
extern SceneAvatarInfo_SkillLevelMapEntryDefaultTypeInternal _SceneAvatarInfo_SkillLevelMapEntry_default_instance_;
class SceneEntityAiInfo;
class SceneEntityAiInfoDefaultTypeInternal;
extern SceneEntityAiInfoDefaultTypeInternal _SceneEntityAiInfo_default_instance_;
class SceneEntityAiInfo_AiThreatMapEntry;
class SceneEntityAiInfo_AiThreatMapEntryDefaultTypeInternal;
extern SceneEntityAiInfo_AiThreatMapEntryDefaultTypeInternal _SceneEntityAiInfo_AiThreatMapEntry_default_instance_;
class SceneEntityAiInfo_SkillCdMapEntry;
class SceneEntityAiInfo_SkillCdMapEntryDefaultTypeInternal;
extern SceneEntityAiInfo_SkillCdMapEntryDefaultTypeInternal _SceneEntityAiInfo_SkillCdMapEntry_default_instance_;
class SceneEntityInfo;
class SceneEntityInfoDefaultTypeInternal;
extern SceneEntityInfoDefaultTypeInternal _SceneEntityInfo_default_instance_;
class SceneEntityInfo_AnimatorParaMapEntry;
class SceneEntityInfo_AnimatorParaMapEntryDefaultTypeInternal;
extern SceneEntityInfo_AnimatorParaMapEntryDefaultTypeInternal _SceneEntityInfo_AnimatorParaMapEntry_default_instance_;
class SceneEntityInfo_FightPropMapEntry;
class SceneEntityInfo_FightPropMapEntryDefaultTypeInternal;
extern SceneEntityInfo_FightPropMapEntryDefaultTypeInternal _SceneEntityInfo_FightPropMapEntry_default_instance_;
class SceneEntityInfo_PropMapEntry;
class SceneEntityInfo_PropMapEntryDefaultTypeInternal;
extern SceneEntityInfo_PropMapEntryDefaultTypeInternal _SceneEntityInfo_PropMapEntry_default_instance_;
class SceneGadgetInfo;
class SceneGadgetInfoDefaultTypeInternal;
extern SceneGadgetInfoDefaultTypeInternal _SceneGadgetInfo_default_instance_;
class SceneMonsterInfo;
class SceneMonsterInfoDefaultTypeInternal;
extern SceneMonsterInfoDefaultTypeInternal _SceneMonsterInfo_default_instance_;
class SceneMonsterInfo_SummonTagMapEntry;
class SceneMonsterInfo_SummonTagMapEntryDefaultTypeInternal;
extern SceneMonsterInfo_SummonTagMapEntryDefaultTypeInternal _SceneMonsterInfo_SummonTagMapEntry_default_instance_;
class SceneNpcInfo;
class SceneNpcInfoDefaultTypeInternal;
extern SceneNpcInfoDefaultTypeInternal _SceneNpcInfo_default_instance_;
class SceneReliquaryInfo;
class SceneReliquaryInfoDefaultTypeInternal;
extern SceneReliquaryInfoDefaultTypeInternal _SceneReliquaryInfo_default_instance_;
class SceneWeaponInfo;
class SceneWeaponInfoDefaultTypeInternal;
extern SceneWeaponInfoDefaultTypeInternal _SceneWeaponInfo_default_instance_;
class SceneWeaponInfo_AffixMapEntry;
class SceneWeaponInfo_AffixMapEntryDefaultTypeInternal;
extern SceneWeaponInfo_AffixMapEntryDefaultTypeInternal _SceneWeaponInfo_AffixMapEntry_default_instance_;
class ServantInfo;
class ServantInfoDefaultTypeInternal;
extern ServantInfoDefaultTypeInternal _ServantInfo_default_instance_;
class ServerBuff;
class ServerBuffDefaultTypeInternal;
extern ServerBuffDefaultTypeInternal _ServerBuff_default_instance_;
class ServerMassiveEntity;
class ServerMassiveEntityDefaultTypeInternal;
extern ServerMassiveEntityDefaultTypeInternal _ServerMassiveEntity_default_instance_;
class StatueGadgetInfo;
class StatueGadgetInfoDefaultTypeInternal;
extern StatueGadgetInfoDefaultTypeInternal _StatueGadgetInfo_default_instance_;
class StopServerInfo;
class StopServerInfoDefaultTypeInternal;
extern StopServerInfoDefaultTypeInternal _StopServerInfo_default_instance_;
class TrialAvatarGrantRecord;
class TrialAvatarGrantRecordDefaultTypeInternal;
extern TrialAvatarGrantRecordDefaultTypeInternal _TrialAvatarGrantRecord_default_instance_;
class TrialAvatarInfo;
class TrialAvatarInfoDefaultTypeInternal;
extern TrialAvatarInfoDefaultTypeInternal _TrialAvatarInfo_default_instance_;
class Vector;
class VectorDefaultTypeInternal;
extern VectorDefaultTypeInternal _Vector_default_instance_;
class Vector3Int;
class Vector3IntDefaultTypeInternal;
extern Vector3IntDefaultTypeInternal _Vector3Int_default_instance_;
class Weapon;
class WeaponDefaultTypeInternal;
extern WeaponDefaultTypeInternal _Weapon_default_instance_;
class Weapon_AffixMapEntry;
class Weapon_AffixMapEntryDefaultTypeInternal;
extern Weapon_AffixMapEntryDefaultTypeInternal _Weapon_AffixMapEntry_default_instance_;
class WeatherInfo;
class WeatherInfoDefaultTypeInternal;
extern WeatherInfoDefaultTypeInternal _WeatherInfo_default_instance_;
class WorktopInfo;
class WorktopInfoDefaultTypeInternal;
extern WorktopInfoDefaultTypeInternal _WorktopInfo_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_define_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_define_2eproto

enum TrialAvatarGrantRecord_GrantReason {
  TrialAvatarGrantRecord_GrantReason_INVALID = 0,
  TrialAvatarGrantRecord_GrantReason_GRANT_BY_QUEST = 1,
  TrialAvatarGrantRecord_GrantReason_TrialAvatarGrantRecord_GrantReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TrialAvatarGrantRecord_GrantReason_TrialAvatarGrantRecord_GrantReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TrialAvatarGrantRecord_GrantReason_IsValid(int value);
const TrialAvatarGrantRecord_GrantReason TrialAvatarGrantRecord_GrantReason_GrantReason_MIN = TrialAvatarGrantRecord_GrantReason_INVALID;
const TrialAvatarGrantRecord_GrantReason TrialAvatarGrantRecord_GrantReason_GrantReason_MAX = TrialAvatarGrantRecord_GrantReason_GRANT_BY_QUEST;
const int TrialAvatarGrantRecord_GrantReason_GrantReason_ARRAYSIZE = TrialAvatarGrantRecord_GrantReason_GrantReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* TrialAvatarGrantRecord_GrantReason_descriptor();
inline const ::std::string& TrialAvatarGrantRecord_GrantReason_Name(TrialAvatarGrantRecord_GrantReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    TrialAvatarGrantRecord_GrantReason_descriptor(), value);
}
inline bool TrialAvatarGrantRecord_GrantReason_Parse(
    const ::std::string& name, TrialAvatarGrantRecord_GrantReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TrialAvatarGrantRecord_GrantReason>(
    TrialAvatarGrantRecord_GrantReason_descriptor(), name, value);
}
enum ENetReason {
  ENET_TIMEOUT = 0,
  ENET_CLIENT_CLOSE = 1,
  ENET_CLIENT_REBIND_FAIL = 2,
  ENET_CLIENT_SHUTDOWN = 3,
  ENET_SERVER_RELOGIN = 4,
  ENET_SERVER_KICK = 5,
  ENET_SERVER_SHUTDOWN = 6,
  ENET_NOT_FOUND_SESSION = 7,
  ENET_LOGIN_UNFINISHED = 8,
  ENET_PACKET_FREQ_TOO_HIGH = 9,
  ENET_PING_TIMEOUT = 10,
  ENET_TRANFER_FAILED = 11,
  ENET_SERVER_KILL_CLIENT = 12,
  ENET_CLIENT_CONNECT_KEY = 1234567890,
  ENET_CLIENT_EDITOR_CONNECT_KEY = 987654321,
  ENetReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ENetReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ENetReason_IsValid(int value);
const ENetReason ENetReason_MIN = ENET_TIMEOUT;
const ENetReason ENetReason_MAX = ENET_CLIENT_CONNECT_KEY;
const int ENetReason_ARRAYSIZE = ENetReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* ENetReason_descriptor();
inline const ::std::string& ENetReason_Name(ENetReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    ENetReason_descriptor(), value);
}
inline bool ENetReason_Parse(
    const ::std::string& name, ENetReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ENetReason>(
    ENetReason_descriptor(), name, value);
}
enum AccountType {
  ACCOUNT_NONE = 0,
  ACCOUNT_MIHOYO = 1,
  ACCOUNT_XIAOMI = 11,
  ACCOUNT_COOLPAD = 12,
  ACCOUNT_YYB = 13,
  ACCOUNT_BILI = 14,
  ACCOUNT_HUAWEI = 15,
  ACCOUNT_MEIZU = 16,
  ACCOUNT_360 = 17,
  ACCOUNT_OPPO = 18,
  ACCOUNT_VIVO = 19,
  ACCOUNT_UC = 20,
  ACCOUNT_WANDOJIA = 21,
  ACCOUNT_LENOVO = 22,
  ACCOUNT_JINLI = 23,
  AccountType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AccountType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AccountType_IsValid(int value);
const AccountType AccountType_MIN = ACCOUNT_NONE;
const AccountType AccountType_MAX = ACCOUNT_JINLI;
const int AccountType_ARRAYSIZE = AccountType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AccountType_descriptor();
inline const ::std::string& AccountType_Name(AccountType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AccountType_descriptor(), value);
}
inline bool AccountType_Parse(
    const ::std::string& name, AccountType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AccountType>(
    AccountType_descriptor(), name, value);
}
enum ServiceType {
  SERVICE_NONE = 0,
  SERVICE_CLIENT = 1,
  SERVICE_GATE = 2,
  SERVICE_GAME = 3,
  SERVICE_NODE = 4,
  SERVICE_DB = 5,
  SERVICE_SNS = 6,
  SERVICE_DISPATCH = 7,
  SERVICE_MUIP = 8,
  SERVICE_OFFLINE_MSG = 9,
  SERVICE_MAIL = 10,
  SERVICE_MP = 11,
  SERVICE_HTTPPROXY = 12,
  SERVICE_ACTIVITY = 13,
  SERVICE_PATHFINDING = 14,
  SERVICE_SOCIAL = 15,
  SERVICE_OA = 16,
  ServiceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServiceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServiceType_IsValid(int value);
const ServiceType ServiceType_MIN = SERVICE_NONE;
const ServiceType ServiceType_MAX = SERVICE_OA;
const int ServiceType_ARRAYSIZE = ServiceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceType_descriptor();
inline const ::std::string& ServiceType_Name(ServiceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceType_descriptor(), value);
}
inline bool ServiceType_Parse(
    const ::std::string& name, ServiceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceType>(
    ServiceType_descriptor(), name, value);
}
enum ClientType {
  CLIENT_PRODUCT = 0,
  CLIENT_DEV = 1,
  ClientType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientType_IsValid(int value);
const ClientType ClientType_MIN = CLIENT_PRODUCT;
const ClientType ClientType_MAX = CLIENT_DEV;
const int ClientType_ARRAYSIZE = ClientType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientType_descriptor();
inline const ::std::string& ClientType_Name(ClientType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientType_descriptor(), value);
}
inline bool ClientType_Parse(
    const ::std::string& name, ClientType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientType>(
    ClientType_descriptor(), name, value);
}
enum RegionType {
  REGION_PRODUCT = 0,
  REGION_EXAM = 1,
  REGION_DEV_PUB = 2,
  REGION_DEV_PRI = 3,
  RegionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RegionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RegionType_IsValid(int value);
const RegionType RegionType_MIN = REGION_PRODUCT;
const RegionType RegionType_MAX = REGION_DEV_PRI;
const int RegionType_ARRAYSIZE = RegionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RegionType_descriptor();
inline const ::std::string& RegionType_Name(RegionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RegionType_descriptor(), value);
}
inline bool RegionType_Parse(
    const ::std::string& name, RegionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RegionType>(
    RegionType_descriptor(), name, value);
}
enum ActionReasonType {
  ACTION_REASON_NONE = 0,
  ACTION_REASON_QUEST_ITEM = 1,
  ACTION_REASON_QUEST_REWARD = 2,
  ACTION_REASON_TRIFLE = 3,
  ACTION_REASON_SHOP = 4,
  ACTION_REASON_PLAYER_UPGRADE_REWARD = 5,
  ACTION_REASON_ADD_AVATAR = 6,
  ACTION_REASON_GADGET_ENV_ANIMAL = 7,
  ACTION_REASON_MONSTER_ENV_ANIMAL = 8,
  ACTION_REASON_COMPOUND = 9,
  ACTION_REASON_COOK = 10,
  ACTION_REASON_GATHER = 11,
  ACTION_REASON_MAIL_ATTACHMENT = 12,
  ACTION_REASON_CITY_LEVELUP_RETURN = 15,
  ACTION_REASON_CITY_LEVELUP_REWARD = 17,
  ACTION_REASON_AREA_EXPLORE_REWARD = 18,
  ACTION_REASON_UNLOCK_POINT_REWARD = 19,
  ACTION_REASON_DUNGEON_FIRST_PASS = 20,
  ACTION_REASON_DUNGEON_PASS = 21,
  ACTION_REASON_CHANGE_ELEM_TYPE = 23,
  ACTION_REASON_FETTER_OPEN = 25,
  ACTION_REASON_DAILY_TASK_SCORE = 26,
  ACTION_REASON_DAILY_TASK_HOST = 27,
  ACTION_REASON_RAND_TASK_HOST = 28,
  ACTION_REASON_EXPEDITION = 29,
  ACTION_REASON_GACHA = 30,
  ACTION_REASON_COMBINE = 31,
  ACTION_REASON_RAND_TASK_GUEST = 32,
  ACTION_REASON_DAILY_TASK_GUEST = 33,
  ACTION_REASON_FORGE_OUTPUT = 34,
  ACTION_REASON_FORGE_RETURN = 35,
  ACTION_REASON_INIT_AVATAR = 36,
  ACTION_REASON_MONSTER_DIE = 37,
  ACTION_REASON_GM = 38,
  ACTION_REASON_OPEN_CHEST = 39,
  ACTION_REASON_GADGET_DIE = 40,
  ACTION_REASON_MONSTER_CHANGE_HP = 41,
  ACTION_REASON_SUBFIELD_DROP = 42,
  ACTION_REASON_PUSH_TIPS_REWARD = 43,
  ACTION_REASON_ACTIVITY_MONSTER_DROP = 44,
  ACTION_REASON_ACTIVITY_GATHER = 45,
  ACTION_REASON_ACTIVITY_SUBFIELD_DROP = 46,
  ACTION_REASON_TOWER_SCHEDULE_REWARD = 47,
  ACTION_REASON_TOWER_FLOOR_STAR_REWARD = 48,
  ACTION_REASON_TOWER_FIRST_PASS_REWARD = 49,
  ACTION_REASON_TOWER_DAILY_REWARD = 50,
  ACTION_REASON_HIT_CLIENT_TRIVIAL_ENTITY = 51,
  ACTION_REASON_OPEN_WORLD_BOSS_CHEST = 52,
  ACTION_REASON_MATERIAL_DELETE_RETURN = 53,
  ACTION_REASON_SIGN_IN_REWARD = 54,
  ACTION_REASON_OPEN_BLOSSOM_CHEST = 55,
  ACTION_REASON_RECHARGE = 56,
  ACTION_REASON_BONUS_ACTIVITY_REWARD = 57,
  ACTION_REASON_PLAYER_USE_ITEM = 1001,
  ACTION_REASON_DROP_ITEM = 1002,
  ACTION_REASON_WEAPON_UPGRADE = 1011,
  ACTION_REASON_WEAPON_PROMOTE = 1012,
  ACTION_REASON_WEAPON_AWAKEN = 1013,
  ACTION_REASON_RELIC_UPGRADE = 1014,
  ACTION_REASON_ABILITY = 1015,
  ACTION_REASON_DUNGEON_STATUE_DROP = 1016,
  ACTION_REASON_OFFLINE_MSG = 1017,
  ACTION_REASON_AVATAR_UPGRADE = 1018,
  ACTION_REASON_AVATAR_PROMOTE = 1019,
  ACTION_REASON_QUEST_ACTION = 1021,
  ACTION_REASON_CITY_LEVELUP = 1022,
  ACTION_REASON_UPGRADE_SKILL = 1024,
  ACTION_REASON_UNLOCK_TALENT = 1025,
  ACTION_REASON_UPGRADE_PROUD_SKILL = 1026,
  ACTION_REASON_PLAYER_LEVEL_LIMIT_UP = 1027,
  ACTION_REASON_DUNGEON_DAILY = 1028,
  ACTION_REASON_ITEM_GIVING = 1030,
  ACTION_REASON_FORGE_COST = 1031,
  ACTION_REASON_INVESTIGATION_REWARD = 1032,
  ACTION_REASON_INVESTIGATION_TARGET_REWARD = 1033,
  ACTION_REASON_GADGET_INTERACT = 1034,
  ACTION_REASON_SEA_LAMP_CI_MATERIAL = 1036,
  ACTION_REASON_SEA_LAMP_CONTRIBUTION_REWARD = 1037,
  ACTION_REASON_SEA_LAMP_PHASE_REWARD = 1038,
  ACTION_REASON_SEA_LAMP_FLY_LAMP = 1039,
  ACTION_REASON_AUTO_RECOVER = 1040,
  ACTION_REASON_ACTIVITY_EXPIRE_ITEM = 1041,
  ACTION_REASON_SUB_COIN_NEGATIVE = 1042,
  ACTION_REASON_BARGAIN_DEDUCT = 1043,
  ActionReasonType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ActionReasonType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ActionReasonType_IsValid(int value);
const ActionReasonType ActionReasonType_MIN = ACTION_REASON_NONE;
const ActionReasonType ActionReasonType_MAX = ACTION_REASON_BARGAIN_DEDUCT;
const int ActionReasonType_ARRAYSIZE = ActionReasonType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ActionReasonType_descriptor();
inline const ::std::string& ActionReasonType_Name(ActionReasonType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionReasonType_descriptor(), value);
}
inline bool ActionReasonType_Parse(
    const ::std::string& name, ActionReasonType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionReasonType>(
    ActionReasonType_descriptor(), name, value);
}
enum StoreType {
  STORE_NONE = 0,
  STORE_PACK = 1,
  STORE_DEPOT = 2,
  StoreType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StoreType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StoreType_IsValid(int value);
const StoreType StoreType_MIN = STORE_NONE;
const StoreType StoreType_MAX = STORE_DEPOT;
const int StoreType_ARRAYSIZE = StoreType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StoreType_descriptor();
inline const ::std::string& StoreType_Name(StoreType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StoreType_descriptor(), value);
}
inline bool StoreType_Parse(
    const ::std::string& name, StoreType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StoreType>(
    StoreType_descriptor(), name, value);
}
enum VirtualItem {
  ITEM_VIRTUAL_NONE = 0,
  ITEM_VIRTUAL_AVATAR_EXP = 101,
  ITEM_VIRTUAL_PLAYER_EXP = 102,
  ITEM_VIRTUAL_FETTER_EXP = 105,
  ITEM_VIRTUAL_RESIN = 106,
  ITEM_VIRTUAL_WORLD_RESIN = 107,
  ITEM_VIRTUAL_HCOIN = 201,
  ITEM_VIRTUAL_SCOIN = 202,
  VirtualItem_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VirtualItem_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VirtualItem_IsValid(int value);
const VirtualItem VirtualItem_MIN = ITEM_VIRTUAL_NONE;
const VirtualItem VirtualItem_MAX = ITEM_VIRTUAL_SCOIN;
const int VirtualItem_ARRAYSIZE = VirtualItem_MAX + 1;

const ::google::protobuf::EnumDescriptor* VirtualItem_descriptor();
inline const ::std::string& VirtualItem_Name(VirtualItem value) {
  return ::google::protobuf::internal::NameOfEnum(
    VirtualItem_descriptor(), value);
}
inline bool VirtualItem_Parse(
    const ::std::string& name, VirtualItem* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VirtualItem>(
    VirtualItem_descriptor(), name, value);
}
enum AbilityScalarType {
  ABILITY_SCALAR_TYPE_UNKNOW = 0,
  ABILITY_SCALAR_TYPE_FLOAT = 1,
  ABILITY_SCALAR_TYPE_INT = 2,
  ABILITY_SCALAR_TYPE_BOOL = 3,
  ABILITY_SCALAR_TYPE_TRIGGER = 4,
  ABILITY_SCALAR_TYPE_STRING = 5,
  ABILITY_SCALAR_TYPE_UINT = 6,
  AbilityScalarType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AbilityScalarType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AbilityScalarType_IsValid(int value);
const AbilityScalarType AbilityScalarType_MIN = ABILITY_SCALAR_TYPE_UNKNOW;
const AbilityScalarType AbilityScalarType_MAX = ABILITY_SCALAR_TYPE_UINT;
const int AbilityScalarType_ARRAYSIZE = AbilityScalarType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AbilityScalarType_descriptor();
inline const ::std::string& AbilityScalarType_Name(AbilityScalarType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AbilityScalarType_descriptor(), value);
}
inline bool AbilityScalarType_Parse(
    const ::std::string& name, AbilityScalarType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AbilityScalarType>(
    AbilityScalarType_descriptor(), name, value);
}
enum MotionState {
  MOTION_NONE = 0,
  MOTION_RESET = 1,
  MOTION_STANDBY = 2,
  MOTION_STANDBY_MOVE = 3,
  MOTION_WALK = 4,
  MOTION_RUN = 5,
  MOTION_DASH = 6,
  MOTION_CLIMB = 7,
  MOTION_CLIMB_JUMP = 8,
  MOTION_STANDBY_TO_CLIMB = 9,
  MOTION_FIGHT = 10,
  MOTION_JUMP = 11,
  MOTION_DROP = 12,
  MOTION_FLY = 13,
  MOTION_SWIM_MOVE = 14,
  MOTION_SWIM_IDLE = 15,
  MOTION_SWIM_DASH = 16,
  MOTION_SWIM_JUMP = 17,
  MOTION_SLIP = 18,
  MOTION_GO_UPSTAIRS = 19,
  MOTION_FALL_ON_GROUND = 20,
  MOTION_JUMP_UP_WALL_FOR_STANDBY = 21,
  MOTION_JUMP_OFF_WALL = 22,
  MOTION_POWERED_FLY = 23,
  MOTION_LADDER_IDLE = 24,
  MOTION_LADDER_MOVE = 25,
  MOTION_LADDER_SLIP = 26,
  MOTION_STANDBY_TO_LADDER = 27,
  MOTION_LADDER_TO_STANDBY = 28,
  MOTION_DANGER_STANDBY = 29,
  MOTION_DANGER_STANDBY_MOVE = 30,
  MOTION_DANGER_WALK = 31,
  MOTION_DANGER_RUN = 32,
  MOTION_DANGER_DASH = 33,
  MOTION_CROUCH_IDLE = 34,
  MOTION_CROUCH_MOVE = 35,
  MOTION_CROUCH_ROLL = 36,
  MOTION_NOTIFY = 37,
  MOTION_LAND_SPEED = 38,
  MOTION_MOVE_FAIL_ACK = 39,
  MOTION_WATERFALL = 40,
  MOTION_DASH_BEFORE_SHAKE = 41,
  MOTION_SIT_IDLE = 42,
  MOTION_NUM = 43,
  MotionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MotionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MotionState_IsValid(int value);
const MotionState MotionState_MIN = MOTION_NONE;
const MotionState MotionState_MAX = MOTION_NUM;
const int MotionState_ARRAYSIZE = MotionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* MotionState_descriptor();
inline const ::std::string& MotionState_Name(MotionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    MotionState_descriptor(), value);
}
inline bool MotionState_Parse(
    const ::std::string& name, MotionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MotionState>(
    MotionState_descriptor(), name, value);
}
enum ProtEntityType {
  PROT_ENTITY_NONE = 0,
  PROT_ENTITY_AVATAR = 1,
  PROT_ENTITY_MONSTER = 2,
  PROT_ENTITY_NPC = 3,
  PROT_ENTITY_GADGET = 4,
  PROT_ENTITY_REGION = 5,
  PROT_ENTITY_WEAPON = 6,
  PROT_ENTITY_WEATHER = 7,
  PROT_ENTITY_SCENE = 8,
  PROT_ENTITY_TEAM = 9,
  PROT_ENTITY_MASSIVE_ENTITY = 10,
  PROT_ENTITY_MP_LEVEL = 11,
  PROT_ENTITY_MAX = 12,
  ProtEntityType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProtEntityType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProtEntityType_IsValid(int value);
const ProtEntityType ProtEntityType_MIN = PROT_ENTITY_NONE;
const ProtEntityType ProtEntityType_MAX = PROT_ENTITY_MAX;
const int ProtEntityType_ARRAYSIZE = ProtEntityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProtEntityType_descriptor();
inline const ::std::string& ProtEntityType_Name(ProtEntityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProtEntityType_descriptor(), value);
}
inline bool ProtEntityType_Parse(
    const ::std::string& name, ProtEntityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProtEntityType>(
    ProtEntityType_descriptor(), name, value);
}
enum NpcTalkState {
  NPC_TALK_NONE = 0,
  NPC_TALK_AUTO = 1,
  NPC_TALK_MANUAL = 2,
  NpcTalkState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NpcTalkState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NpcTalkState_IsValid(int value);
const NpcTalkState NpcTalkState_MIN = NPC_TALK_NONE;
const NpcTalkState NpcTalkState_MAX = NPC_TALK_MANUAL;
const int NpcTalkState_ARRAYSIZE = NpcTalkState_MAX + 1;

const ::google::protobuf::EnumDescriptor* NpcTalkState_descriptor();
inline const ::std::string& NpcTalkState_Name(NpcTalkState value) {
  return ::google::protobuf::internal::NameOfEnum(
    NpcTalkState_descriptor(), value);
}
inline bool NpcTalkState_Parse(
    const ::std::string& name, NpcTalkState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NpcTalkState>(
    NpcTalkState_descriptor(), name, value);
}
enum MonsterBornType {
  MONSTER_BORN_NONE = 0,
  MONSTER_BORN_DEFAULT = 1,
  MONSTER_BORN_RANDOM = 2,
  MonsterBornType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterBornType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterBornType_IsValid(int value);
const MonsterBornType MonsterBornType_MIN = MONSTER_BORN_NONE;
const MonsterBornType MonsterBornType_MAX = MONSTER_BORN_RANDOM;
const int MonsterBornType_ARRAYSIZE = MonsterBornType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterBornType_descriptor();
inline const ::std::string& MonsterBornType_Name(MonsterBornType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterBornType_descriptor(), value);
}
inline bool MonsterBornType_Parse(
    const ::std::string& name, MonsterBornType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterBornType>(
    MonsterBornType_descriptor(), name, value);
}
enum GadgetBornType {
  GADGET_BORN_NONE = 0,
  GADGET_BORN_IN_AIR = 1,
  GADGET_BORN_PLAYER = 2,
  GADGET_BORN_MONSTER_HIT = 3,
  GADGET_BORN_MONSTER_DIE = 4,
  GADGET_BORN_GADGET = 5,
  GADGET_BORN_GROUND = 6,
  GadgetBornType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetBornType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetBornType_IsValid(int value);
const GadgetBornType GadgetBornType_MIN = GADGET_BORN_NONE;
const GadgetBornType GadgetBornType_MAX = GADGET_BORN_GROUND;
const int GadgetBornType_ARRAYSIZE = GadgetBornType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetBornType_descriptor();
inline const ::std::string& GadgetBornType_Name(GadgetBornType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetBornType_descriptor(), value);
}
inline bool GadgetBornType_Parse(
    const ::std::string& name, GadgetBornType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetBornType>(
    GadgetBornType_descriptor(), name, value);
}
enum ChangHpReason {
  CHANGE_HP_NONE = 0,
  CHANGE_HP_SUB_AVATAR = 1,
  CHANGE_HP_SUB_MONSTER = 2,
  CHANGE_HP_SUB_GEAR = 3,
  CHANGE_HP_SUB_ENVIR = 4,
  CHANGE_HP_SUB_FALL = 5,
  CHANGE_HP_SUB_DRAWN = 6,
  CHANGE_HP_SUB_ABYSS = 7,
  CHANGE_HP_SUB_ABILITY = 8,
  CHANGE_HP_SUB_SUMMON = 9,
  CHANGE_HP_SUB_SCRIPT = 10,
  CHANGE_HP_SUB_GM = 11,
  CHANGE_HP_SUB_KILL_SELF = 12,
  CHANGE_HP_BY_LUA = 51,
  CHANGE_HP_ADD_ABILITY = 101,
  CHANGE_HP_ADD_ITEM = 102,
  CHANGE_HP_ADD_REVIVE = 103,
  CHANGE_HP_ADD_UPGRADE = 104,
  CHANGE_HP_ADD_STATUE = 105,
  CHANGE_HP_ADD_BACKGROUND = 106,
  CHANGE_HP_ADD_GM = 107,
  ChangHpReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangHpReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangHpReason_IsValid(int value);
const ChangHpReason ChangHpReason_MIN = CHANGE_HP_NONE;
const ChangHpReason ChangHpReason_MAX = CHANGE_HP_ADD_GM;
const int ChangHpReason_ARRAYSIZE = ChangHpReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangHpReason_descriptor();
inline const ::std::string& ChangHpReason_Name(ChangHpReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangHpReason_descriptor(), value);
}
inline bool ChangHpReason_Parse(
    const ::std::string& name, ChangHpReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangHpReason>(
    ChangHpReason_descriptor(), name, value);
}
enum PlayerDieType {
  PLAYER_DIE_NONE = 0,
  PLAYER_DIE_KILL_BY_MONSTER = 1,
  PLAYER_DIE_KILL_BY_GEAR = 2,
  PLAYER_DIE_FALL = 3,
  PLAYER_DIE_DRAWN = 4,
  PLAYER_DIE_ABYSS = 5,
  PLAYER_DIE_GM = 6,
  PlayerDieType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerDieType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerDieType_IsValid(int value);
const PlayerDieType PlayerDieType_MIN = PLAYER_DIE_NONE;
const PlayerDieType PlayerDieType_MAX = PLAYER_DIE_GM;
const int PlayerDieType_ARRAYSIZE = PlayerDieType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerDieType_descriptor();
inline const ::std::string& PlayerDieType_Name(PlayerDieType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerDieType_descriptor(), value);
}
inline bool PlayerDieType_Parse(
    const ::std::string& name, PlayerDieType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerDieType>(
    PlayerDieType_descriptor(), name, value);
}
enum PlayerDieOption {
  DIE_OPT_NONE = 0,
  DIE_OPT_REPLAY = 1,
  DIE_OPT_CANCEL = 2,
  DIE_OPT_REVIVE = 3,
  PlayerDieOption_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerDieOption_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerDieOption_IsValid(int value);
const PlayerDieOption PlayerDieOption_MIN = DIE_OPT_NONE;
const PlayerDieOption PlayerDieOption_MAX = DIE_OPT_REVIVE;
const int PlayerDieOption_ARRAYSIZE = PlayerDieOption_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerDieOption_descriptor();
inline const ::std::string& PlayerDieOption_Name(PlayerDieOption value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerDieOption_descriptor(), value);
}
inline bool PlayerDieOption_Parse(
    const ::std::string& name, PlayerDieOption* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerDieOption>(
    PlayerDieOption_descriptor(), name, value);
}
enum AvatarExpeditionState {
  AVATAR_EXPEDITION_NONE = 0,
  AVATAR_EXPEDITION_DOING = 1,
  AVATAR_EXPEDITION_FINISH_WAIT_REWARD = 2,
  AVATAR_EXPEDITION_CALLBACK_WAIT_REWARD = 3,
  AvatarExpeditionState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarExpeditionState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarExpeditionState_IsValid(int value);
const AvatarExpeditionState AvatarExpeditionState_MIN = AVATAR_EXPEDITION_NONE;
const AvatarExpeditionState AvatarExpeditionState_MAX = AVATAR_EXPEDITION_CALLBACK_WAIT_REWARD;
const int AvatarExpeditionState_ARRAYSIZE = AvatarExpeditionState_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarExpeditionState_descriptor();
inline const ::std::string& AvatarExpeditionState_Name(AvatarExpeditionState value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarExpeditionState_descriptor(), value);
}
inline bool AvatarExpeditionState_Parse(
    const ::std::string& name, AvatarExpeditionState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarExpeditionState>(
    AvatarExpeditionState_descriptor(), name, value);
}
enum AvatarType {
  AVATAR_TYPE_NONE = 0,
  AVATAR_TYPE_FORMAL = 1,
  AVATAR_TYPE_TRIAL = 2,
  AVATAR_TYPE_MIRROR = 3,
  AvatarType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarType_IsValid(int value);
const AvatarType AvatarType_MIN = AVATAR_TYPE_NONE;
const AvatarType AvatarType_MAX = AVATAR_TYPE_MIRROR;
const int AvatarType_ARRAYSIZE = AvatarType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarType_descriptor();
inline const ::std::string& AvatarType_Name(AvatarType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarType_descriptor(), value);
}
inline bool AvatarType_Parse(
    const ::std::string& name, AvatarType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarType>(
    AvatarType_descriptor(), name, value);
}
enum EventTriggerType {
  EVENT_TRIGGER_NONE = 0,
  EVENT_TRIGGER_ENTER_FORCE = 1,
  EventTriggerType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EventTriggerType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EventTriggerType_IsValid(int value);
const EventTriggerType EventTriggerType_MIN = EVENT_TRIGGER_NONE;
const EventTriggerType EventTriggerType_MAX = EVENT_TRIGGER_ENTER_FORCE;
const int EventTriggerType_ARRAYSIZE = EventTriggerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventTriggerType_descriptor();
inline const ::std::string& EventTriggerType_Name(EventTriggerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventTriggerType_descriptor(), value);
}
inline bool EventTriggerType_Parse(
    const ::std::string& name, EventTriggerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventTriggerType>(
    EventTriggerType_descriptor(), name, value);
}
enum MpSettingType {
  MP_SETTING_NO_ENTER = 0,
  MP_SETTING_ENTER_FREELY = 1,
  MP_SETTING_ENTER_AFTER_APPLY = 2,
  MpSettingType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MpSettingType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MpSettingType_IsValid(int value);
const MpSettingType MpSettingType_MIN = MP_SETTING_NO_ENTER;
const MpSettingType MpSettingType_MAX = MP_SETTING_ENTER_AFTER_APPLY;
const int MpSettingType_ARRAYSIZE = MpSettingType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MpSettingType_descriptor();
inline const ::std::string& MpSettingType_Name(MpSettingType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MpSettingType_descriptor(), value);
}
inline bool MpSettingType_Parse(
    const ::std::string& name, MpSettingType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MpSettingType>(
    MpSettingType_descriptor(), name, value);
}
enum MathExpressionType {
  MATH_EXPR_NONE = 0,
  MATH_EXPR_LEVEL = 1,
  MATH_EXPR_REGISTER_TIME = 2,
  MATH_EXPR_LAST_LOGIN_TIME = 3,
  MATH_EXPR_TOTAL_LOGIN_DAYS = 4,
  MathExpressionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MathExpressionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MathExpressionType_IsValid(int value);
const MathExpressionType MathExpressionType_MIN = MATH_EXPR_NONE;
const MathExpressionType MathExpressionType_MAX = MATH_EXPR_TOTAL_LOGIN_DAYS;
const int MathExpressionType_ARRAYSIZE = MathExpressionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MathExpressionType_descriptor();
inline const ::std::string& MathExpressionType_Name(MathExpressionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MathExpressionType_descriptor(), value);
}
inline bool MathExpressionType_Parse(
    const ::std::string& name, MathExpressionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MathExpressionType>(
    MathExpressionType_descriptor(), name, value);
}
enum LoginRewardConfigType {
  LOGIN_REWARD_IMMEDIDATE = 0,
  LOGIN_REWARD_FIRST = 1,
  LoginRewardConfigType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginRewardConfigType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginRewardConfigType_IsValid(int value);
const LoginRewardConfigType LoginRewardConfigType_MIN = LOGIN_REWARD_IMMEDIDATE;
const LoginRewardConfigType LoginRewardConfigType_MAX = LOGIN_REWARD_FIRST;
const int LoginRewardConfigType_ARRAYSIZE = LoginRewardConfigType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginRewardConfigType_descriptor();
inline const ::std::string& LoginRewardConfigType_Name(LoginRewardConfigType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginRewardConfigType_descriptor(), value);
}
inline bool LoginRewardConfigType_Parse(
    const ::std::string& name, LoginRewardConfigType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginRewardConfigType>(
    LoginRewardConfigType_descriptor(), name, value);
}
enum LanguageType {
  LANGUAGE_NONE = 0,
  LANGUAGE_EN = 1,
  LANGUAGE_SC = 2,
  LANGUAGE_TC = 3,
  LANGUAGE_FR = 4,
  LANGUAGE_DE = 5,
  LANGUAGE_ES = 6,
  LANGUAGE_PT = 7,
  LANGUAGE_RU = 8,
  LANGUAGE_JP = 9,
  LANGUAGE_KR = 10,
  LANGUAGE_TH = 11,
  LANGUAGE_VN = 12,
  LANGUAGE_ID = 13,
  LanguageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LanguageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LanguageType_IsValid(int value);
const LanguageType LanguageType_MIN = LANGUAGE_NONE;
const LanguageType LanguageType_MAX = LANGUAGE_ID;
const int LanguageType_ARRAYSIZE = LanguageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LanguageType_descriptor();
inline const ::std::string& LanguageType_Name(LanguageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LanguageType_descriptor(), value);
}
inline bool LanguageType_Parse(
    const ::std::string& name, LanguageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LanguageType>(
    LanguageType_descriptor(), name, value);
}
enum PlatformType {
  EDITOR = 0,
  IOS = 1,
  ANDROID = 2,
  PC = 3,
  PS4 = 4,
  SERVER = 5,
  CLOUD_ANDROID = 6,
  CLOUD_IOS = 7,
  PlatformType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatformType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatformType_IsValid(int value);
const PlatformType PlatformType_MIN = EDITOR;
const PlatformType PlatformType_MAX = CLOUD_IOS;
const int PlatformType_ARRAYSIZE = PlatformType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformType_descriptor();
inline const ::std::string& PlatformType_Name(PlatformType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformType_descriptor(), value);
}
inline bool PlatformType_Parse(
    const ::std::string& name, PlatformType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformType>(
    PlatformType_descriptor(), name, value);
}
enum MapMarkPointType {
  NPC = 0,
  QUEST = 1,
  SPECIAL = 2,
  MINE = 3,
  COLLECTION = 4,
  MONSTER = 5,
  MapMarkPointType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MapMarkPointType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MapMarkPointType_IsValid(int value);
const MapMarkPointType MapMarkPointType_MIN = NPC;
const MapMarkPointType MapMarkPointType_MAX = MONSTER;
const int MapMarkPointType_ARRAYSIZE = MapMarkPointType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MapMarkPointType_descriptor();
inline const ::std::string& MapMarkPointType_Name(MapMarkPointType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MapMarkPointType_descriptor(), value);
}
inline bool MapMarkPointType_Parse(
    const ::std::string& name, MapMarkPointType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapMarkPointType>(
    MapMarkPointType_descriptor(), name, value);
}
enum MapMarkFromType {
  MAP_MARK_FROM_TYPE_NOE = 0,
  MAP_MARK_FROM_TYPE_MONSTER = 1,
  MAP_MARK_FROM_TYPE_QUEST = 2,
  MapMarkFromType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MapMarkFromType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MapMarkFromType_IsValid(int value);
const MapMarkFromType MapMarkFromType_MIN = MAP_MARK_FROM_TYPE_NOE;
const MapMarkFromType MapMarkFromType_MAX = MAP_MARK_FROM_TYPE_QUEST;
const int MapMarkFromType_ARRAYSIZE = MapMarkFromType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MapMarkFromType_descriptor();
inline const ::std::string& MapMarkFromType_Name(MapMarkFromType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MapMarkFromType_descriptor(), value);
}
inline bool MapMarkFromType_Parse(
    const ::std::string& name, MapMarkFromType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MapMarkFromType>(
    MapMarkFromType_descriptor(), name, value);
}
enum DungeonCandidateTeamInviteState {
  DUNGEON_CANDIDATE_TEAM_INVITE_STATE_NONE = 0,
  DUNGEON_CANDIDATE_TEAM_INVITE_STATE_SEND = 1,
  DUNGEON_CANDIDATE_TEAM_INVITE_STATE_ACCEPT = 2,
  DUNGEON_CANDIDATE_TEAM_INVITE_STATE_REFUSE = 3,
  DungeonCandidateTeamInviteState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DungeonCandidateTeamInviteState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DungeonCandidateTeamInviteState_IsValid(int value);
const DungeonCandidateTeamInviteState DungeonCandidateTeamInviteState_MIN = DUNGEON_CANDIDATE_TEAM_INVITE_STATE_NONE;
const DungeonCandidateTeamInviteState DungeonCandidateTeamInviteState_MAX = DUNGEON_CANDIDATE_TEAM_INVITE_STATE_REFUSE;
const int DungeonCandidateTeamInviteState_ARRAYSIZE = DungeonCandidateTeamInviteState_MAX + 1;

const ::google::protobuf::EnumDescriptor* DungeonCandidateTeamInviteState_descriptor();
inline const ::std::string& DungeonCandidateTeamInviteState_Name(DungeonCandidateTeamInviteState value) {
  return ::google::protobuf::internal::NameOfEnum(
    DungeonCandidateTeamInviteState_descriptor(), value);
}
inline bool DungeonCandidateTeamInviteState_Parse(
    const ::std::string& name, DungeonCandidateTeamInviteState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DungeonCandidateTeamInviteState>(
    DungeonCandidateTeamInviteState_descriptor(), name, value);
}
enum MonsterGuestBanDrop {
  MONSTER_GUEST_BAN_NONE = 0,
  MONSTER_GUEST_BAN_DIE_EXP = 1,
  MONSTER_GUEST_BAN_DIE_LUA = 2,
  MONSTER_GUEST_BAN_DIE_EXCEL = 4,
  MONSTER_GUEST_BAN_DIE_ACTIVITY = 8,
  MONSTER_GUEST_BAN_DROP_HP = 16,
  MONSTER_GUEST_BAN_SUBFIELD = 32,
  MonsterGuestBanDrop_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterGuestBanDrop_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterGuestBanDrop_IsValid(int value);
const MonsterGuestBanDrop MonsterGuestBanDrop_MIN = MONSTER_GUEST_BAN_NONE;
const MonsterGuestBanDrop MonsterGuestBanDrop_MAX = MONSTER_GUEST_BAN_SUBFIELD;
const int MonsterGuestBanDrop_ARRAYSIZE = MonsterGuestBanDrop_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterGuestBanDrop_descriptor();
inline const ::std::string& MonsterGuestBanDrop_Name(MonsterGuestBanDrop value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterGuestBanDrop_descriptor(), value);
}
inline bool MonsterGuestBanDrop_Parse(
    const ::std::string& name, MonsterGuestBanDrop* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterGuestBanDrop>(
    MonsterGuestBanDrop_descriptor(), name, value);
}
enum GadgetGuestBanDrop {
  GADGET_GUEST_BAN_NONE = 0,
  GADGET_GUEST_BAN_DIE_LUA = 1,
  GADGET_GUEST_BAN_SUBFIELD = 2,
  GadgetGuestBanDrop_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetGuestBanDrop_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetGuestBanDrop_IsValid(int value);
const GadgetGuestBanDrop GadgetGuestBanDrop_MIN = GADGET_GUEST_BAN_NONE;
const GadgetGuestBanDrop GadgetGuestBanDrop_MAX = GADGET_GUEST_BAN_SUBFIELD;
const int GadgetGuestBanDrop_ARRAYSIZE = GadgetGuestBanDrop_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetGuestBanDrop_descriptor();
inline const ::std::string& GadgetGuestBanDrop_Name(GadgetGuestBanDrop value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetGuestBanDrop_descriptor(), value);
}
inline bool GadgetGuestBanDrop_Parse(
    const ::std::string& name, GadgetGuestBanDrop* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetGuestBanDrop>(
    GadgetGuestBanDrop_descriptor(), name, value);
}
// ===================================================================

class ParamList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ParamList) */ {
 public:
  ParamList();
  virtual ~ParamList();

  ParamList(const ParamList& from);

  inline ParamList& operator=(const ParamList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ParamList(ParamList&& from) noexcept
    : ParamList() {
    *this = ::std::move(from);
  }

  inline ParamList& operator=(ParamList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ParamList& default_instance();

  static inline const ParamList* internal_default_instance() {
    return reinterpret_cast<const ParamList*>(
               &_ParamList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ParamList* other);
  friend void swap(ParamList& a, ParamList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ParamList* New() const PROTOBUF_FINAL { return New(NULL); }

  ParamList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ParamList& from);
  void MergeFrom(const ParamList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ParamList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 param_list = 1;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 1;
  ::google::protobuf::uint32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::uint32 value);
  void add_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_list();

  // @@protoc_insertion_point(class_scope:proto.ParamList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PropValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PropValue) */ {
 public:
  PropValue();
  virtual ~PropValue();

  PropValue(const PropValue& from);

  inline PropValue& operator=(const PropValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PropValue(PropValue&& from) noexcept
    : PropValue() {
    *this = ::std::move(from);
  }

  inline PropValue& operator=(PropValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PropValue& default_instance();

  enum ValueCase {
    kIval = 2,
    kFval = 3,
    VALUE_NOT_SET = 0,
  };

  static inline const PropValue* internal_default_instance() {
    return reinterpret_cast<const PropValue*>(
               &_PropValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PropValue* other);
  friend void swap(PropValue& a, PropValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PropValue* New() const PROTOBUF_FINAL { return New(NULL); }

  PropValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PropValue& from);
  void MergeFrom(const PropValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PropValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // int64 val = 4;
  void clear_val();
  static const int kValFieldNumber = 4;
  ::google::protobuf::int64 val() const;
  void set_val(::google::protobuf::int64 value);

  // int64 ival = 2;
  private:
  bool has_ival() const;
  public:
  void clear_ival();
  static const int kIvalFieldNumber = 2;
  ::google::protobuf::int64 ival() const;
  void set_ival(::google::protobuf::int64 value);

  // float fval = 3;
  private:
  bool has_fval() const;
  public:
  void clear_fval();
  static const int kFvalFieldNumber = 3;
  float fval() const;
  void set_fval(float value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:proto.PropValue)
 private:
  void set_has_ival();
  void set_has_fval();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::int64 val_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::int64 ival_;
    float fval_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionCustomConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionCustomConfig) */ {
 public:
  RegionCustomConfig();
  virtual ~RegionCustomConfig();

  RegionCustomConfig(const RegionCustomConfig& from);

  inline RegionCustomConfig& operator=(const RegionCustomConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionCustomConfig(RegionCustomConfig&& from) noexcept
    : RegionCustomConfig() {
    *this = ::std::move(from);
  }

  inline RegionCustomConfig& operator=(RegionCustomConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionCustomConfig& default_instance();

  static inline const RegionCustomConfig* internal_default_instance() {
    return reinterpret_cast<const RegionCustomConfig*>(
               &_RegionCustomConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RegionCustomConfig* other);
  friend void swap(RegionCustomConfig& a, RegionCustomConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionCustomConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionCustomConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionCustomConfig& from);
  void MergeFrom(const RegionCustomConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionCustomConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool close_antidebug = 1;
  void clear_close_antidebug();
  static const int kCloseAntidebugFieldNumber = 1;
  bool close_antidebug() const;
  void set_close_antidebug(bool value);

  // bool force_kill = 2;
  void clear_force_kill();
  static const int kForceKillFieldNumber = 2;
  bool force_kill() const;
  void set_force_kill(bool value);

  // bool antidebug_pc = 3;
  void clear_antidebug_pc();
  static const int kAntidebugPcFieldNumber = 3;
  bool antidebug_pc() const;
  void set_antidebug_pc(bool value);

  // bool antidubug_ios = 4;
  void clear_antidubug_ios();
  static const int kAntidubugIosFieldNumber = 4;
  bool antidubug_ios() const;
  void set_antidubug_ios(bool value);

  // bool antidubug_androd = 5;
  void clear_antidubug_androd();
  static const int kAntidubugAndrodFieldNumber = 5;
  bool antidubug_androd() const;
  void set_antidubug_androd(bool value);

  // @@protoc_insertion_point(class_scope:proto.RegionCustomConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool close_antidebug_;
  bool force_kill_;
  bool antidebug_pc_;
  bool antidubug_ios_;
  bool antidubug_androd_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionSimpleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionSimpleInfo) */ {
 public:
  RegionSimpleInfo();
  virtual ~RegionSimpleInfo();

  RegionSimpleInfo(const RegionSimpleInfo& from);

  inline RegionSimpleInfo& operator=(const RegionSimpleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionSimpleInfo(RegionSimpleInfo&& from) noexcept
    : RegionSimpleInfo() {
    *this = ::std::move(from);
  }

  inline RegionSimpleInfo& operator=(RegionSimpleInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionSimpleInfo& default_instance();

  static inline const RegionSimpleInfo* internal_default_instance() {
    return reinterpret_cast<const RegionSimpleInfo*>(
               &_RegionSimpleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RegionSimpleInfo* other);
  friend void swap(RegionSimpleInfo& a, RegionSimpleInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionSimpleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionSimpleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionSimpleInfo& from);
  void MergeFrom(const RegionSimpleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionSimpleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // string dispatch_url = 4;
  void clear_dispatch_url();
  static const int kDispatchUrlFieldNumber = 4;
  const ::std::string& dispatch_url() const;
  void set_dispatch_url(const ::std::string& value);
  #if LANG_CXX11
  void set_dispatch_url(::std::string&& value);
  #endif
  void set_dispatch_url(const char* value);
  void set_dispatch_url(const char* value, size_t size);
  ::std::string* mutable_dispatch_url();
  ::std::string* release_dispatch_url();
  void set_allocated_dispatch_url(::std::string* dispatch_url);

  // .proto.RegionCustomConfig region_custom_config = 5;
  bool has_region_custom_config() const;
  void clear_region_custom_config();
  static const int kRegionCustomConfigFieldNumber = 5;
  const ::proto::RegionCustomConfig& region_custom_config() const;
  ::proto::RegionCustomConfig* mutable_region_custom_config();
  ::proto::RegionCustomConfig* release_region_custom_config();
  void set_allocated_region_custom_config(::proto::RegionCustomConfig* region_custom_config);

  // @@protoc_insertion_point(class_scope:proto.RegionSimpleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr dispatch_url_;
  ::proto::RegionCustomConfig* region_custom_config_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ClientCustomConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientCustomConfig) */ {
 public:
  ClientCustomConfig();
  virtual ~ClientCustomConfig();

  ClientCustomConfig(const ClientCustomConfig& from);

  inline ClientCustomConfig& operator=(const ClientCustomConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientCustomConfig(ClientCustomConfig&& from) noexcept
    : ClientCustomConfig() {
    *this = ::std::move(from);
  }

  inline ClientCustomConfig& operator=(ClientCustomConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientCustomConfig& default_instance();

  static inline const ClientCustomConfig* internal_default_instance() {
    return reinterpret_cast<const ClientCustomConfig*>(
               &_ClientCustomConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ClientCustomConfig* other);
  friend void swap(ClientCustomConfig& a, ClientCustomConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientCustomConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientCustomConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientCustomConfig& from);
  void MergeFrom(const ClientCustomConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientCustomConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated int32 debuglogswitch = 4;
  int debuglogswitch_size() const;
  void clear_debuglogswitch();
  static const int kDebuglogswitchFieldNumber = 4;
  ::google::protobuf::int32 debuglogswitch(int index) const;
  void set_debuglogswitch(int index, ::google::protobuf::int32 value);
  void add_debuglogswitch(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      debuglogswitch() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_debuglogswitch();

  // map<string, string> devicelist = 6;
  int devicelist_size() const;
  void clear_devicelist();
  static const int kDevicelistFieldNumber = 6;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      devicelist() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_devicelist();

  // string sdkenv = 2;
  void clear_sdkenv();
  static const int kSdkenvFieldNumber = 2;
  const ::std::string& sdkenv() const;
  void set_sdkenv(const ::std::string& value);
  #if LANG_CXX11
  void set_sdkenv(::std::string&& value);
  #endif
  void set_sdkenv(const char* value);
  void set_sdkenv(const char* value, size_t size);
  ::std::string* mutable_sdkenv();
  ::std::string* release_sdkenv();
  void set_allocated_sdkenv(::std::string* sdkenv);

  // bool visitor = 1;
  void clear_visitor();
  static const int kVisitorFieldNumber = 1;
  bool visitor() const;
  void set_visitor(bool value);

  // bool debugmenu = 3;
  void clear_debugmenu();
  static const int kDebugmenuFieldNumber = 3;
  bool debugmenu() const;
  void set_debugmenu(bool value);

  // bool debuglog = 5;
  void clear_debuglog();
  static const int kDebuglogFieldNumber = 5;
  bool debuglog() const;
  void set_debuglog(bool value);

  // bool loadjsondata = 7;
  void clear_loadjsondata();
  static const int kLoadjsondataFieldNumber = 7;
  bool loadjsondata() const;
  void set_loadjsondata(bool value);

  // bool showexception = 8;
  void clear_showexception();
  static const int kShowexceptionFieldNumber = 8;
  bool showexception() const;
  void set_showexception(bool value);

  // @@protoc_insertion_point(class_scope:proto.ClientCustomConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > debuglogswitch_;
  mutable int _debuglogswitch_cached_byte_size_;
  public:
  class ClientCustomConfig_DevicelistEntry : public ::google::protobuf::internal::MapEntry<ClientCustomConfig_DevicelistEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ClientCustomConfig_DevicelistEntry, 
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    ClientCustomConfig_DevicelistEntry();
    ClientCustomConfig_DevicelistEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ClientCustomConfig_DevicelistEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ClientCustomConfig_DevicelistEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ClientCustomConfig_DevicelistEntry,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > devicelist_;
  private:
  ::google::protobuf::internal::ArenaStringPtr sdkenv_;
  bool visitor_;
  bool debugmenu_;
  bool debuglog_;
  bool loadjsondata_;
  bool showexception_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryRegionListHttpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryRegionListHttpRsp) */ {
 public:
  QueryRegionListHttpRsp();
  virtual ~QueryRegionListHttpRsp();

  QueryRegionListHttpRsp(const QueryRegionListHttpRsp& from);

  inline QueryRegionListHttpRsp& operator=(const QueryRegionListHttpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryRegionListHttpRsp(QueryRegionListHttpRsp&& from) noexcept
    : QueryRegionListHttpRsp() {
    *this = ::std::move(from);
  }

  inline QueryRegionListHttpRsp& operator=(QueryRegionListHttpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryRegionListHttpRsp& default_instance();

  static inline const QueryRegionListHttpRsp* internal_default_instance() {
    return reinterpret_cast<const QueryRegionListHttpRsp*>(
               &_QueryRegionListHttpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(QueryRegionListHttpRsp* other);
  friend void swap(QueryRegionListHttpRsp& a, QueryRegionListHttpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryRegionListHttpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryRegionListHttpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryRegionListHttpRsp& from);
  void MergeFrom(const QueryRegionListHttpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryRegionListHttpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RegionSimpleInfo region_list = 2;
  int region_list_size() const;
  void clear_region_list();
  static const int kRegionListFieldNumber = 2;
  const ::proto::RegionSimpleInfo& region_list(int index) const;
  ::proto::RegionSimpleInfo* mutable_region_list(int index);
  ::proto::RegionSimpleInfo* add_region_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >*
      mutable_region_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >&
      region_list() const;

  // string client_custom_config = 3;
  void clear_client_custom_config();
  static const int kClientCustomConfigFieldNumber = 3;
  const ::std::string& client_custom_config() const;
  void set_client_custom_config(const ::std::string& value);
  #if LANG_CXX11
  void set_client_custom_config(::std::string&& value);
  #endif
  void set_client_custom_config(const char* value);
  void set_client_custom_config(const char* value, size_t size);
  ::std::string* mutable_client_custom_config();
  ::std::string* release_client_custom_config();
  void set_allocated_client_custom_config(::std::string* client_custom_config);

  // bytes client_secret_key = 5;
  void clear_client_secret_key();
  static const int kClientSecretKeyFieldNumber = 5;
  const ::std::string& client_secret_key() const;
  void set_client_secret_key(const ::std::string& value);
  #if LANG_CXX11
  void set_client_secret_key(::std::string&& value);
  #endif
  void set_client_secret_key(const char* value);
  void set_client_secret_key(const void* value, size_t size);
  ::std::string* mutable_client_secret_key();
  ::std::string* release_client_secret_key();
  void set_allocated_client_secret_key(::std::string* client_secret_key);

  // bytes client_custom_config_encrypted = 6;
  void clear_client_custom_config_encrypted();
  static const int kClientCustomConfigEncryptedFieldNumber = 6;
  const ::std::string& client_custom_config_encrypted() const;
  void set_client_custom_config_encrypted(const ::std::string& value);
  #if LANG_CXX11
  void set_client_custom_config_encrypted(::std::string&& value);
  #endif
  void set_client_custom_config_encrypted(const char* value);
  void set_client_custom_config_encrypted(const void* value, size_t size);
  ::std::string* mutable_client_custom_config_encrypted();
  ::std::string* release_client_custom_config_encrypted();
  void set_allocated_client_custom_config_encrypted(::std::string* client_custom_config_encrypted);

  // .proto.ClientCustomConfig client_config = 4;
  bool has_client_config() const;
  void clear_client_config();
  static const int kClientConfigFieldNumber = 4;
  const ::proto::ClientCustomConfig& client_config() const;
  ::proto::ClientCustomConfig* mutable_client_config();
  ::proto::ClientCustomConfig* release_client_config();
  void set_allocated_client_config(::proto::ClientCustomConfig* client_config);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.QueryRegionListHttpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo > region_list_;
  ::google::protobuf::internal::ArenaStringPtr client_custom_config_;
  ::google::protobuf::internal::ArenaStringPtr client_secret_key_;
  ::google::protobuf::internal::ArenaStringPtr client_custom_config_encrypted_;
  ::proto::ClientCustomConfig* client_config_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceUpdateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ForceUpdateInfo) */ {
 public:
  ForceUpdateInfo();
  virtual ~ForceUpdateInfo();

  ForceUpdateInfo(const ForceUpdateInfo& from);

  inline ForceUpdateInfo& operator=(const ForceUpdateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceUpdateInfo(ForceUpdateInfo&& from) noexcept
    : ForceUpdateInfo() {
    *this = ::std::move(from);
  }

  inline ForceUpdateInfo& operator=(ForceUpdateInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceUpdateInfo& default_instance();

  static inline const ForceUpdateInfo* internal_default_instance() {
    return reinterpret_cast<const ForceUpdateInfo*>(
               &_ForceUpdateInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ForceUpdateInfo* other);
  friend void swap(ForceUpdateInfo& a, ForceUpdateInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceUpdateInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ForceUpdateInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForceUpdateInfo& from);
  void MergeFrom(const ForceUpdateInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForceUpdateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string force_update_url = 1;
  void clear_force_update_url();
  static const int kForceUpdateUrlFieldNumber = 1;
  const ::std::string& force_update_url() const;
  void set_force_update_url(const ::std::string& value);
  #if LANG_CXX11
  void set_force_update_url(::std::string&& value);
  #endif
  void set_force_update_url(const char* value);
  void set_force_update_url(const char* value, size_t size);
  ::std::string* mutable_force_update_url();
  ::std::string* release_force_update_url();
  void set_allocated_force_update_url(::std::string* force_update_url);

  // .proto.ClientCustomConfig client_config = 2;
  bool has_client_config() const;
  void clear_client_config();
  static const int kClientConfigFieldNumber = 2;
  const ::proto::ClientCustomConfig& client_config() const;
  ::proto::ClientCustomConfig* mutable_client_config();
  ::proto::ClientCustomConfig* release_client_config();
  void set_allocated_client_config(::proto::ClientCustomConfig* client_config);

  // @@protoc_insertion_point(class_scope:proto.ForceUpdateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr force_update_url_;
  ::proto::ClientCustomConfig* client_config_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopServerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.StopServerInfo) */ {
 public:
  StopServerInfo();
  virtual ~StopServerInfo();

  StopServerInfo(const StopServerInfo& from);

  inline StopServerInfo& operator=(const StopServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopServerInfo(StopServerInfo&& from) noexcept
    : StopServerInfo() {
    *this = ::std::move(from);
  }

  inline StopServerInfo& operator=(StopServerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopServerInfo& default_instance();

  static inline const StopServerInfo* internal_default_instance() {
    return reinterpret_cast<const StopServerInfo*>(
               &_StopServerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(StopServerInfo* other);
  friend void swap(StopServerInfo& a, StopServerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopServerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  StopServerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopServerInfo& from);
  void MergeFrom(const StopServerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopServerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 stop_begin_time = 1;
  void clear_stop_begin_time();
  static const int kStopBeginTimeFieldNumber = 1;
  ::google::protobuf::uint32 stop_begin_time() const;
  void set_stop_begin_time(::google::protobuf::uint32 value);

  // uint32 stop_end_time = 2;
  void clear_stop_end_time();
  static const int kStopEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 stop_end_time() const;
  void set_stop_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.StopServerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 stop_begin_time_;
  ::google::protobuf::uint32 stop_end_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResVersionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResVersionConfig) */ {
 public:
  ResVersionConfig();
  virtual ~ResVersionConfig();

  ResVersionConfig(const ResVersionConfig& from);

  inline ResVersionConfig& operator=(const ResVersionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResVersionConfig(ResVersionConfig&& from) noexcept
    : ResVersionConfig() {
    *this = ::std::move(from);
  }

  inline ResVersionConfig& operator=(ResVersionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResVersionConfig& default_instance();

  static inline const ResVersionConfig* internal_default_instance() {
    return reinterpret_cast<const ResVersionConfig*>(
               &_ResVersionConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ResVersionConfig* other);
  friend void swap(ResVersionConfig& a, ResVersionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResVersionConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ResVersionConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResVersionConfig& from);
  void MergeFrom(const ResVersionConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResVersionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string md5 = 3;
  void clear_md5();
  static const int kMd5FieldNumber = 3;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // string release_total_size = 4;
  void clear_release_total_size();
  static const int kReleaseTotalSizeFieldNumber = 4;
  const ::std::string& release_total_size() const;
  void set_release_total_size(const ::std::string& value);
  #if LANG_CXX11
  void set_release_total_size(::std::string&& value);
  #endif
  void set_release_total_size(const char* value);
  void set_release_total_size(const char* value, size_t size);
  ::std::string* mutable_release_total_size();
  ::std::string* release_release_total_size();
  void set_allocated_release_total_size(::std::string* release_total_size);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // bool relogin = 2;
  void clear_relogin();
  static const int kReloginFieldNumber = 2;
  bool relogin() const;
  void set_relogin(bool value);

  // @@protoc_insertion_point(class_scope:proto.ResVersionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::google::protobuf::internal::ArenaStringPtr release_total_size_;
  ::google::protobuf::uint32 version_;
  bool relogin_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegionInfo) */ {
 public:
  RegionInfo();
  virtual ~RegionInfo();

  RegionInfo(const RegionInfo& from);

  inline RegionInfo& operator=(const RegionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegionInfo(RegionInfo&& from) noexcept
    : RegionInfo() {
    *this = ::std::move(from);
  }

  inline RegionInfo& operator=(RegionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionInfo& default_instance();

  static inline const RegionInfo* internal_default_instance() {
    return reinterpret_cast<const RegionInfo*>(
               &_RegionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(RegionInfo* other);
  friend void swap(RegionInfo& a, RegionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RegionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegionInfo& from);
  void MergeFrom(const RegionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string gateserver_ip = 1;
  void clear_gateserver_ip();
  static const int kGateserverIpFieldNumber = 1;
  const ::std::string& gateserver_ip() const;
  void set_gateserver_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_gateserver_ip(::std::string&& value);
  #endif
  void set_gateserver_ip(const char* value);
  void set_gateserver_ip(const char* value, size_t size);
  ::std::string* mutable_gateserver_ip();
  ::std::string* release_gateserver_ip();
  void set_allocated_gateserver_ip(::std::string* gateserver_ip);

  // string pay_callback_url = 3;
  void clear_pay_callback_url();
  static const int kPayCallbackUrlFieldNumber = 3;
  const ::std::string& pay_callback_url() const;
  void set_pay_callback_url(const ::std::string& value);
  #if LANG_CXX11
  void set_pay_callback_url(::std::string&& value);
  #endif
  void set_pay_callback_url(const char* value);
  void set_pay_callback_url(const char* value, size_t size);
  ::std::string* mutable_pay_callback_url();
  ::std::string* release_pay_callback_url();
  void set_allocated_pay_callback_url(::std::string* pay_callback_url);

  // string area_type = 7;
  void clear_area_type();
  static const int kAreaTypeFieldNumber = 7;
  const ::std::string& area_type() const;
  void set_area_type(const ::std::string& value);
  #if LANG_CXX11
  void set_area_type(::std::string&& value);
  #endif
  void set_area_type(const char* value);
  void set_area_type(const char* value, size_t size);
  ::std::string* mutable_area_type();
  ::std::string* release_area_type();
  void set_allocated_area_type(::std::string* area_type);

  // string resource_url = 8;
  void clear_resource_url();
  static const int kResourceUrlFieldNumber = 8;
  const ::std::string& resource_url() const;
  void set_resource_url(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_url(::std::string&& value);
  #endif
  void set_resource_url(const char* value);
  void set_resource_url(const char* value, size_t size);
  ::std::string* mutable_resource_url();
  ::std::string* release_resource_url();
  void set_allocated_resource_url(::std::string* resource_url);

  // string data_url = 9;
  void clear_data_url();
  static const int kDataUrlFieldNumber = 9;
  const ::std::string& data_url() const;
  void set_data_url(const ::std::string& value);
  #if LANG_CXX11
  void set_data_url(::std::string&& value);
  #endif
  void set_data_url(const char* value);
  void set_data_url(const char* value, size_t size);
  ::std::string* mutable_data_url();
  ::std::string* release_data_url();
  void set_allocated_data_url(::std::string* data_url);

  // string feedback_url = 10;
  void clear_feedback_url();
  static const int kFeedbackUrlFieldNumber = 10;
  const ::std::string& feedback_url() const;
  void set_feedback_url(const ::std::string& value);
  #if LANG_CXX11
  void set_feedback_url(::std::string&& value);
  #endif
  void set_feedback_url(const char* value);
  void set_feedback_url(const char* value, size_t size);
  ::std::string* mutable_feedback_url();
  ::std::string* release_feedback_url();
  void set_allocated_feedback_url(::std::string* feedback_url);

  // string bulletin_url = 11;
  void clear_bulletin_url();
  static const int kBulletinUrlFieldNumber = 11;
  const ::std::string& bulletin_url() const;
  void set_bulletin_url(const ::std::string& value);
  #if LANG_CXX11
  void set_bulletin_url(::std::string&& value);
  #endif
  void set_bulletin_url(const char* value);
  void set_bulletin_url(const char* value, size_t size);
  ::std::string* mutable_bulletin_url();
  ::std::string* release_bulletin_url();
  void set_allocated_bulletin_url(::std::string* bulletin_url);

  // string resource_url_bak = 12;
  void clear_resource_url_bak();
  static const int kResourceUrlBakFieldNumber = 12;
  const ::std::string& resource_url_bak() const;
  void set_resource_url_bak(const ::std::string& value);
  #if LANG_CXX11
  void set_resource_url_bak(::std::string&& value);
  #endif
  void set_resource_url_bak(const char* value);
  void set_resource_url_bak(const char* value, size_t size);
  ::std::string* mutable_resource_url_bak();
  ::std::string* release_resource_url_bak();
  void set_allocated_resource_url_bak(::std::string* resource_url_bak);

  // string data_url_bak = 13;
  void clear_data_url_bak();
  static const int kDataUrlBakFieldNumber = 13;
  const ::std::string& data_url_bak() const;
  void set_data_url_bak(const ::std::string& value);
  #if LANG_CXX11
  void set_data_url_bak(::std::string&& value);
  #endif
  void set_data_url_bak(const char* value);
  void set_data_url_bak(const char* value, size_t size);
  ::std::string* mutable_data_url_bak();
  ::std::string* release_data_url_bak();
  void set_allocated_data_url_bak(::std::string* data_url_bak);

  // string handbook_url = 16;
  void clear_handbook_url();
  static const int kHandbookUrlFieldNumber = 16;
  const ::std::string& handbook_url() const;
  void set_handbook_url(const ::std::string& value);
  #if LANG_CXX11
  void set_handbook_url(::std::string&& value);
  #endif
  void set_handbook_url(const char* value);
  void set_handbook_url(const char* value, size_t size);
  ::std::string* mutable_handbook_url();
  ::std::string* release_handbook_url();
  void set_allocated_handbook_url(::std::string* handbook_url);

  // string client_data_md5 = 19;
  void clear_client_data_md5();
  static const int kClientDataMd5FieldNumber = 19;
  const ::std::string& client_data_md5() const;
  void set_client_data_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_data_md5(::std::string&& value);
  #endif
  void set_client_data_md5(const char* value);
  void set_client_data_md5(const char* value, size_t size);
  ::std::string* mutable_client_data_md5();
  ::std::string* release_client_data_md5();
  void set_allocated_client_data_md5(::std::string* client_data_md5);

  // string client_silence_data_md5 = 20;
  void clear_client_silence_data_md5();
  static const int kClientSilenceDataMd5FieldNumber = 20;
  const ::std::string& client_silence_data_md5() const;
  void set_client_silence_data_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_data_md5(::std::string&& value);
  #endif
  void set_client_silence_data_md5(const char* value);
  void set_client_silence_data_md5(const char* value, size_t size);
  ::std::string* mutable_client_silence_data_md5();
  ::std::string* release_client_silence_data_md5();
  void set_allocated_client_silence_data_md5(::std::string* client_silence_data_md5);

  // string res_md5 = 21;
  void clear_res_md5();
  static const int kResMd5FieldNumber = 21;
  const ::std::string& res_md5() const;
  void set_res_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_res_md5(::std::string&& value);
  #endif
  void set_res_md5(const char* value);
  void set_res_md5(const char* value, size_t size);
  ::std::string* mutable_res_md5();
  ::std::string* release_res_md5();
  void set_allocated_res_md5(::std::string* res_md5);

  // bytes secret_key = 23;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 23;
  const ::std::string& secret_key() const;
  void set_secret_key(const ::std::string& value);
  #if LANG_CXX11
  void set_secret_key(::std::string&& value);
  #endif
  void set_secret_key(const char* value);
  void set_secret_key(const void* value, size_t size);
  ::std::string* mutable_secret_key();
  ::std::string* release_secret_key();
  void set_allocated_secret_key(::std::string* secret_key);

  // string official_community_url = 24;
  void clear_official_community_url();
  static const int kOfficialCommunityUrlFieldNumber = 24;
  const ::std::string& official_community_url() const;
  void set_official_community_url(const ::std::string& value);
  #if LANG_CXX11
  void set_official_community_url(::std::string&& value);
  #endif
  void set_official_community_url(const char* value);
  void set_official_community_url(const char* value, size_t size);
  ::std::string* mutable_official_community_url();
  ::std::string* release_official_community_url();
  void set_allocated_official_community_url(::std::string* official_community_url);

  // .proto.ResVersionConfig res_version_config = 22;
  bool has_res_version_config() const;
  void clear_res_version_config();
  static const int kResVersionConfigFieldNumber = 22;
  const ::proto::ResVersionConfig& res_version_config() const;
  ::proto::ResVersionConfig* mutable_res_version_config();
  ::proto::ResVersionConfig* release_res_version_config();
  void set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config);

  // uint32 gateserver_port = 2;
  void clear_gateserver_port();
  static const int kGateserverPortFieldNumber = 2;
  ::google::protobuf::uint32 gateserver_port() const;
  void set_gateserver_port(::google::protobuf::uint32 value);

  // uint32 client_data_version = 14;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 14;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // uint32 res_version = 15;
  void clear_res_version();
  static const int kResVersionFieldNumber = 15;
  ::google::protobuf::uint32 res_version() const;
  void set_res_version(::google::protobuf::uint32 value);

  // uint32 client_silence_data_version = 18;
  void clear_client_silence_data_version();
  static const int kClientSilenceDataVersionFieldNumber = 18;
  ::google::protobuf::uint32 client_silence_data_version() const;
  void set_client_silence_data_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RegionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr gateserver_ip_;
  ::google::protobuf::internal::ArenaStringPtr pay_callback_url_;
  ::google::protobuf::internal::ArenaStringPtr area_type_;
  ::google::protobuf::internal::ArenaStringPtr resource_url_;
  ::google::protobuf::internal::ArenaStringPtr data_url_;
  ::google::protobuf::internal::ArenaStringPtr feedback_url_;
  ::google::protobuf::internal::ArenaStringPtr bulletin_url_;
  ::google::protobuf::internal::ArenaStringPtr resource_url_bak_;
  ::google::protobuf::internal::ArenaStringPtr data_url_bak_;
  ::google::protobuf::internal::ArenaStringPtr handbook_url_;
  ::google::protobuf::internal::ArenaStringPtr client_data_md5_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_data_md5_;
  ::google::protobuf::internal::ArenaStringPtr res_md5_;
  ::google::protobuf::internal::ArenaStringPtr secret_key_;
  ::google::protobuf::internal::ArenaStringPtr official_community_url_;
  ::proto::ResVersionConfig* res_version_config_;
  ::google::protobuf::uint32 gateserver_port_;
  ::google::protobuf::uint32 client_data_version_;
  ::google::protobuf::uint32 res_version_;
  ::google::protobuf::uint32 client_silence_data_version_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryCurrRegionHttpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryCurrRegionHttpRsp) */ {
 public:
  QueryCurrRegionHttpRsp();
  virtual ~QueryCurrRegionHttpRsp();

  QueryCurrRegionHttpRsp(const QueryCurrRegionHttpRsp& from);

  inline QueryCurrRegionHttpRsp& operator=(const QueryCurrRegionHttpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryCurrRegionHttpRsp(QueryCurrRegionHttpRsp&& from) noexcept
    : QueryCurrRegionHttpRsp() {
    *this = ::std::move(from);
  }

  inline QueryCurrRegionHttpRsp& operator=(QueryCurrRegionHttpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryCurrRegionHttpRsp& default_instance();

  enum DetailCase {
    kForceUdpate = 4,
    kStopServer = 5,
    DETAIL_NOT_SET = 0,
  };

  static inline const QueryCurrRegionHttpRsp* internal_default_instance() {
    return reinterpret_cast<const QueryCurrRegionHttpRsp*>(
               &_QueryCurrRegionHttpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(QueryCurrRegionHttpRsp* other);
  friend void swap(QueryCurrRegionHttpRsp& a, QueryCurrRegionHttpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryCurrRegionHttpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryCurrRegionHttpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryCurrRegionHttpRsp& from);
  void MergeFrom(const QueryCurrRegionHttpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryCurrRegionHttpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // bytes client_secret_key = 11;
  void clear_client_secret_key();
  static const int kClientSecretKeyFieldNumber = 11;
  const ::std::string& client_secret_key() const;
  void set_client_secret_key(const ::std::string& value);
  #if LANG_CXX11
  void set_client_secret_key(::std::string&& value);
  #endif
  void set_client_secret_key(const char* value);
  void set_client_secret_key(const void* value, size_t size);
  ::std::string* mutable_client_secret_key();
  ::std::string* release_client_secret_key();
  void set_allocated_client_secret_key(::std::string* client_secret_key);

  // bytes region_custom_config_encrypted = 12;
  void clear_region_custom_config_encrypted();
  static const int kRegionCustomConfigEncryptedFieldNumber = 12;
  const ::std::string& region_custom_config_encrypted() const;
  void set_region_custom_config_encrypted(const ::std::string& value);
  #if LANG_CXX11
  void set_region_custom_config_encrypted(::std::string&& value);
  #endif
  void set_region_custom_config_encrypted(const char* value);
  void set_region_custom_config_encrypted(const void* value, size_t size);
  ::std::string* mutable_region_custom_config_encrypted();
  ::std::string* release_region_custom_config_encrypted();
  void set_allocated_region_custom_config_encrypted(::std::string* region_custom_config_encrypted);

  // bytes client_region_custom_config_encrypted = 13;
  void clear_client_region_custom_config_encrypted();
  static const int kClientRegionCustomConfigEncryptedFieldNumber = 13;
  const ::std::string& client_region_custom_config_encrypted() const;
  void set_client_region_custom_config_encrypted(const ::std::string& value);
  #if LANG_CXX11
  void set_client_region_custom_config_encrypted(::std::string&& value);
  #endif
  void set_client_region_custom_config_encrypted(const char* value);
  void set_client_region_custom_config_encrypted(const void* value, size_t size);
  ::std::string* mutable_client_region_custom_config_encrypted();
  ::std::string* release_client_region_custom_config_encrypted();
  void set_allocated_client_region_custom_config_encrypted(::std::string* client_region_custom_config_encrypted);

  // .proto.RegionInfo region_info = 3;
  bool has_region_info() const;
  void clear_region_info();
  static const int kRegionInfoFieldNumber = 3;
  const ::proto::RegionInfo& region_info() const;
  ::proto::RegionInfo* mutable_region_info();
  ::proto::RegionInfo* release_region_info();
  void set_allocated_region_info(::proto::RegionInfo* region_info);

  // .proto.ClientCustomConfig client_config = 10;
  bool has_client_config() const;
  void clear_client_config();
  static const int kClientConfigFieldNumber = 10;
  const ::proto::ClientCustomConfig& client_config() const;
  ::proto::ClientCustomConfig* mutable_client_config();
  ::proto::ClientCustomConfig* release_client_config();
  void set_allocated_client_config(::proto::ClientCustomConfig* client_config);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.ForceUpdateInfo force_udpate = 4;
  bool has_force_udpate() const;
  void clear_force_udpate();
  static const int kForceUdpateFieldNumber = 4;
  const ::proto::ForceUpdateInfo& force_udpate() const;
  ::proto::ForceUpdateInfo* mutable_force_udpate();
  ::proto::ForceUpdateInfo* release_force_udpate();
  void set_allocated_force_udpate(::proto::ForceUpdateInfo* force_udpate);

  // .proto.StopServerInfo stop_server = 5;
  bool has_stop_server() const;
  void clear_stop_server();
  static const int kStopServerFieldNumber = 5;
  const ::proto::StopServerInfo& stop_server() const;
  ::proto::StopServerInfo* mutable_stop_server();
  ::proto::StopServerInfo* release_stop_server();
  void set_allocated_stop_server(::proto::StopServerInfo* stop_server);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.QueryCurrRegionHttpRsp)
 private:
  void set_has_force_udpate();
  void set_has_stop_server();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr client_secret_key_;
  ::google::protobuf::internal::ArenaStringPtr region_custom_config_encrypted_;
  ::google::protobuf::internal::ArenaStringPtr client_region_custom_config_encrypted_;
  ::proto::RegionInfo* region_info_;
  ::proto::ClientCustomConfig* client_config_;
  ::google::protobuf::int32 retcode_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::ForceUpdateInfo* force_udpate_;
    ::proto::StopServerInfo* stop_server_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Reliquary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Reliquary) */ {
 public:
  Reliquary();
  virtual ~Reliquary();

  Reliquary(const Reliquary& from);

  inline Reliquary& operator=(const Reliquary& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Reliquary(Reliquary&& from) noexcept
    : Reliquary() {
    *this = ::std::move(from);
  }

  inline Reliquary& operator=(Reliquary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Reliquary& default_instance();

  static inline const Reliquary* internal_default_instance() {
    return reinterpret_cast<const Reliquary*>(
               &_Reliquary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Reliquary* other);
  friend void swap(Reliquary& a, Reliquary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Reliquary* New() const PROTOBUF_FINAL { return New(NULL); }

  Reliquary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reliquary& from);
  void MergeFrom(const Reliquary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reliquary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 append_prop_id_list = 5;
  int append_prop_id_list_size() const;
  void clear_append_prop_id_list();
  static const int kAppendPropIdListFieldNumber = 5;
  ::google::protobuf::uint32 append_prop_id_list(int index) const;
  void set_append_prop_id_list(int index, ::google::protobuf::uint32 value);
  void add_append_prop_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      append_prop_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_append_prop_id_list();

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // uint32 promote_level = 3;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 3;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // uint32 main_prop_id = 4;
  void clear_main_prop_id();
  static const int kMainPropIdFieldNumber = 4;
  ::google::protobuf::uint32 main_prop_id() const;
  void set_main_prop_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Reliquary)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > append_prop_id_list_;
  mutable int _append_prop_id_list_cached_byte_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 promote_level_;
  ::google::protobuf::uint32 main_prop_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Weapon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Weapon) */ {
 public:
  Weapon();
  virtual ~Weapon();

  Weapon(const Weapon& from);

  inline Weapon& operator=(const Weapon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Weapon(Weapon&& from) noexcept
    : Weapon() {
    *this = ::std::move(from);
  }

  inline Weapon& operator=(Weapon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Weapon& default_instance();

  static inline const Weapon* internal_default_instance() {
    return reinterpret_cast<const Weapon*>(
               &_Weapon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Weapon* other);
  friend void swap(Weapon& a, Weapon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Weapon* New() const PROTOBUF_FINAL { return New(NULL); }

  Weapon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Weapon& from);
  void MergeFrom(const Weapon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Weapon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> affix_map = 4;
  int affix_map_size() const;
  void clear_affix_map();
  static const int kAffixMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      affix_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_affix_map();

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // uint32 promote_level = 3;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 3;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Weapon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class Weapon_AffixMapEntry : public ::google::protobuf::internal::MapEntry<Weapon_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Weapon_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    Weapon_AffixMapEntry();
    Weapon_AffixMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Weapon_AffixMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Weapon_AffixMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      Weapon_AffixMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > affix_map_;
  private:
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class MaterialDeleteInfo_CountDownDelete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MaterialDeleteInfo.CountDownDelete) */ {
 public:
  MaterialDeleteInfo_CountDownDelete();
  virtual ~MaterialDeleteInfo_CountDownDelete();

  MaterialDeleteInfo_CountDownDelete(const MaterialDeleteInfo_CountDownDelete& from);

  inline MaterialDeleteInfo_CountDownDelete& operator=(const MaterialDeleteInfo_CountDownDelete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaterialDeleteInfo_CountDownDelete(MaterialDeleteInfo_CountDownDelete&& from) noexcept
    : MaterialDeleteInfo_CountDownDelete() {
    *this = ::std::move(from);
  }

  inline MaterialDeleteInfo_CountDownDelete& operator=(MaterialDeleteInfo_CountDownDelete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaterialDeleteInfo_CountDownDelete& default_instance();

  static inline const MaterialDeleteInfo_CountDownDelete* internal_default_instance() {
    return reinterpret_cast<const MaterialDeleteInfo_CountDownDelete*>(
               &_MaterialDeleteInfo_CountDownDelete_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(MaterialDeleteInfo_CountDownDelete* other);
  friend void swap(MaterialDeleteInfo_CountDownDelete& a, MaterialDeleteInfo_CountDownDelete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaterialDeleteInfo_CountDownDelete* New() const PROTOBUF_FINAL { return New(NULL); }

  MaterialDeleteInfo_CountDownDelete* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MaterialDeleteInfo_CountDownDelete& from);
  void MergeFrom(const MaterialDeleteInfo_CountDownDelete& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MaterialDeleteInfo_CountDownDelete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> delete_time_num_map = 1;
  int delete_time_num_map_size() const;
  void clear_delete_time_num_map();
  static const int kDeleteTimeNumMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      delete_time_num_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_delete_time_num_map();

  // uint32 config_count_down_time = 2;
  void clear_config_count_down_time();
  static const int kConfigCountDownTimeFieldNumber = 2;
  ::google::protobuf::uint32 config_count_down_time() const;
  void set_config_count_down_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MaterialDeleteInfo.CountDownDelete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry : public ::google::protobuf::internal::MapEntry<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry();
    MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > delete_time_num_map_;
  private:
  ::google::protobuf::uint32 config_count_down_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaterialDeleteInfo_DateTimeDelete : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MaterialDeleteInfo.DateTimeDelete) */ {
 public:
  MaterialDeleteInfo_DateTimeDelete();
  virtual ~MaterialDeleteInfo_DateTimeDelete();

  MaterialDeleteInfo_DateTimeDelete(const MaterialDeleteInfo_DateTimeDelete& from);

  inline MaterialDeleteInfo_DateTimeDelete& operator=(const MaterialDeleteInfo_DateTimeDelete& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaterialDeleteInfo_DateTimeDelete(MaterialDeleteInfo_DateTimeDelete&& from) noexcept
    : MaterialDeleteInfo_DateTimeDelete() {
    *this = ::std::move(from);
  }

  inline MaterialDeleteInfo_DateTimeDelete& operator=(MaterialDeleteInfo_DateTimeDelete&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaterialDeleteInfo_DateTimeDelete& default_instance();

  static inline const MaterialDeleteInfo_DateTimeDelete* internal_default_instance() {
    return reinterpret_cast<const MaterialDeleteInfo_DateTimeDelete*>(
               &_MaterialDeleteInfo_DateTimeDelete_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(MaterialDeleteInfo_DateTimeDelete* other);
  friend void swap(MaterialDeleteInfo_DateTimeDelete& a, MaterialDeleteInfo_DateTimeDelete& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaterialDeleteInfo_DateTimeDelete* New() const PROTOBUF_FINAL { return New(NULL); }

  MaterialDeleteInfo_DateTimeDelete* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MaterialDeleteInfo_DateTimeDelete& from);
  void MergeFrom(const MaterialDeleteInfo_DateTimeDelete& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MaterialDeleteInfo_DateTimeDelete* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 delete_time = 1;
  void clear_delete_time();
  static const int kDeleteTimeFieldNumber = 1;
  ::google::protobuf::uint32 delete_time() const;
  void set_delete_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MaterialDeleteInfo.DateTimeDelete)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 delete_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MaterialDeleteInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MaterialDeleteInfo) */ {
 public:
  MaterialDeleteInfo();
  virtual ~MaterialDeleteInfo();

  MaterialDeleteInfo(const MaterialDeleteInfo& from);

  inline MaterialDeleteInfo& operator=(const MaterialDeleteInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MaterialDeleteInfo(MaterialDeleteInfo&& from) noexcept
    : MaterialDeleteInfo() {
    *this = ::std::move(from);
  }

  inline MaterialDeleteInfo& operator=(MaterialDeleteInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MaterialDeleteInfo& default_instance();

  enum DeleteInfoCase {
    kCountDownDelete = 2,
    kDateDelete = 3,
    DELETE_INFO_NOT_SET = 0,
  };

  static inline const MaterialDeleteInfo* internal_default_instance() {
    return reinterpret_cast<const MaterialDeleteInfo*>(
               &_MaterialDeleteInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(MaterialDeleteInfo* other);
  friend void swap(MaterialDeleteInfo& a, MaterialDeleteInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MaterialDeleteInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MaterialDeleteInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MaterialDeleteInfo& from);
  void MergeFrom(const MaterialDeleteInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MaterialDeleteInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MaterialDeleteInfo_CountDownDelete CountDownDelete;
  typedef MaterialDeleteInfo_DateTimeDelete DateTimeDelete;

  // accessors -------------------------------------------------------

  // bool has_delete_config = 1;
  void clear_has_delete_config();
  static const int kHasDeleteConfigFieldNumber = 1;
  bool has_delete_config() const;
  void set_has_delete_config(bool value);

  // .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
  bool has_count_down_delete() const;
  void clear_count_down_delete();
  static const int kCountDownDeleteFieldNumber = 2;
  const ::proto::MaterialDeleteInfo_CountDownDelete& count_down_delete() const;
  ::proto::MaterialDeleteInfo_CountDownDelete* mutable_count_down_delete();
  ::proto::MaterialDeleteInfo_CountDownDelete* release_count_down_delete();
  void set_allocated_count_down_delete(::proto::MaterialDeleteInfo_CountDownDelete* count_down_delete);

  // .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
  bool has_date_delete() const;
  void clear_date_delete();
  static const int kDateDeleteFieldNumber = 3;
  const ::proto::MaterialDeleteInfo_DateTimeDelete& date_delete() const;
  ::proto::MaterialDeleteInfo_DateTimeDelete* mutable_date_delete();
  ::proto::MaterialDeleteInfo_DateTimeDelete* release_date_delete();
  void set_allocated_date_delete(::proto::MaterialDeleteInfo_DateTimeDelete* date_delete);

  DeleteInfoCase delete_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.MaterialDeleteInfo)
 private:
  void set_has_count_down_delete();
  void set_has_date_delete();

  inline bool has_delete_info() const;
  void clear_delete_info();
  inline void clear_has_delete_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool has_delete_config_;
  union DeleteInfoUnion {
    DeleteInfoUnion() {}
    ::proto::MaterialDeleteInfo_CountDownDelete* count_down_delete_;
    ::proto::MaterialDeleteInfo_DateTimeDelete* date_delete_;
  } delete_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Material : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Material) */ {
 public:
  Material();
  virtual ~Material();

  Material(const Material& from);

  inline Material& operator=(const Material& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Material(Material&& from) noexcept
    : Material() {
    *this = ::std::move(from);
  }

  inline Material& operator=(Material&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Material& default_instance();

  static inline const Material* internal_default_instance() {
    return reinterpret_cast<const Material*>(
               &_Material_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(Material* other);
  friend void swap(Material& a, Material& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Material* New() const PROTOBUF_FINAL { return New(NULL); }

  Material* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Material& from);
  void MergeFrom(const Material& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Material* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MaterialDeleteInfo delete_info = 2;
  bool has_delete_info() const;
  void clear_delete_info();
  static const int kDeleteInfoFieldNumber = 2;
  const ::proto::MaterialDeleteInfo& delete_info() const;
  ::proto::MaterialDeleteInfo* mutable_delete_info();
  ::proto::MaterialDeleteInfo* release_delete_info();
  void set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info);

  // uint32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Material)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MaterialDeleteInfo* delete_info_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Equip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Equip) */ {
 public:
  Equip();
  virtual ~Equip();

  Equip(const Equip& from);

  inline Equip& operator=(const Equip& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Equip(Equip&& from) noexcept
    : Equip() {
    *this = ::std::move(from);
  }

  inline Equip& operator=(Equip&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Equip& default_instance();

  enum DetailCase {
    kReliquary = 1,
    kWeapon = 2,
    DETAIL_NOT_SET = 0,
  };

  static inline const Equip* internal_default_instance() {
    return reinterpret_cast<const Equip*>(
               &_Equip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(Equip* other);
  friend void swap(Equip& a, Equip& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Equip* New() const PROTOBUF_FINAL { return New(NULL); }

  Equip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Equip& from);
  void MergeFrom(const Equip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Equip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Reliquary reliquary = 1;
  bool has_reliquary() const;
  void clear_reliquary();
  static const int kReliquaryFieldNumber = 1;
  const ::proto::Reliquary& reliquary() const;
  ::proto::Reliquary* mutable_reliquary();
  ::proto::Reliquary* release_reliquary();
  void set_allocated_reliquary(::proto::Reliquary* reliquary);

  // .proto.Weapon weapon = 2;
  bool has_weapon() const;
  void clear_weapon();
  static const int kWeaponFieldNumber = 2;
  const ::proto::Weapon& weapon() const;
  ::proto::Weapon* mutable_weapon();
  ::proto::Weapon* release_weapon();
  void set_allocated_weapon(::proto::Weapon* weapon);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.Equip)
 private:
  void set_has_reliquary();
  void set_has_weapon();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::Reliquary* reliquary_;
    ::proto::Weapon* weapon_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Item) */ {
 public:
  Item();
  virtual ~Item();

  Item(const Item& from);

  inline Item& operator=(const Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Item(Item&& from) noexcept
    : Item() {
    *this = ::std::move(from);
  }

  inline Item& operator=(Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Item& default_instance();

  enum DetailCase {
    kMaterial = 5,
    kEquip = 6,
    DETAIL_NOT_SET = 0,
  };

  static inline const Item* internal_default_instance() {
    return reinterpret_cast<const Item*>(
               &_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(Item* other);
  friend void swap(Item& a, Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Item* New() const PROTOBUF_FINAL { return New(NULL); }

  Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Item& from);
  void MergeFrom(const Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // .proto.Material material = 5;
  bool has_material() const;
  void clear_material();
  static const int kMaterialFieldNumber = 5;
  const ::proto::Material& material() const;
  ::proto::Material* mutable_material();
  ::proto::Material* release_material();
  void set_allocated_material(::proto::Material* material);

  // .proto.Equip equip = 6;
  bool has_equip() const;
  void clear_equip();
  static const int kEquipFieldNumber = 6;
  const ::proto::Equip& equip() const;
  ::proto::Equip* mutable_equip();
  ::proto::Equip* release_equip();
  void set_allocated_equip(::proto::Equip* equip);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.Item)
 private:
  void set_has_material();
  void set_has_equip();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 item_id_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::Material* material_;
    ::proto::Equip* equip_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ItemParam) */ {
 public:
  ItemParam();
  virtual ~ItemParam();

  ItemParam(const ItemParam& from);

  inline ItemParam& operator=(const ItemParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemParam(ItemParam&& from) noexcept
    : ItemParam() {
    *this = ::std::move(from);
  }

  inline ItemParam& operator=(ItemParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemParam& default_instance();

  static inline const ItemParam* internal_default_instance() {
    return reinterpret_cast<const ItemParam*>(
               &_ItemParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ItemParam* other);
  friend void swap(ItemParam& a, ItemParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemParam& from);
  void MergeFrom(const ItemParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ItemParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EquipParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EquipParam) */ {
 public:
  EquipParam();
  virtual ~EquipParam();

  EquipParam(const EquipParam& from);

  inline EquipParam& operator=(const EquipParam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EquipParam(EquipParam&& from) noexcept
    : EquipParam() {
    *this = ::std::move(from);
  }

  inline EquipParam& operator=(EquipParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipParam& default_instance();

  static inline const EquipParam* internal_default_instance() {
    return reinterpret_cast<const EquipParam*>(
               &_EquipParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(EquipParam* other);
  friend void swap(EquipParam& a, EquipParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EquipParam* New() const PROTOBUF_FINAL { return New(NULL); }

  EquipParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EquipParam& from);
  void MergeFrom(const EquipParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EquipParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 item_num = 2;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::uint32 item_num() const;
  void set_item_num(::google::protobuf::uint32 value);

  // uint32 item_level = 3;
  void clear_item_level();
  static const int kItemLevelFieldNumber = 3;
  ::google::protobuf::uint32 item_level() const;
  void set_item_level(::google::protobuf::uint32 value);

  // uint32 promote_level = 4;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 4;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EquipParam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::uint32 item_level_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EquipParamList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EquipParamList) */ {
 public:
  EquipParamList();
  virtual ~EquipParamList();

  EquipParamList(const EquipParamList& from);

  inline EquipParamList& operator=(const EquipParamList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EquipParamList(EquipParamList&& from) noexcept
    : EquipParamList() {
    *this = ::std::move(from);
  }

  inline EquipParamList& operator=(EquipParamList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipParamList& default_instance();

  static inline const EquipParamList* internal_default_instance() {
    return reinterpret_cast<const EquipParamList*>(
               &_EquipParamList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(EquipParamList* other);
  friend void swap(EquipParamList& a, EquipParamList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EquipParamList* New() const PROTOBUF_FINAL { return New(NULL); }

  EquipParamList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EquipParamList& from);
  void MergeFrom(const EquipParamList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EquipParamList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.EquipParam item_list = 1;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 1;
  const ::proto::EquipParam& item_list(int index) const;
  ::proto::EquipParam* mutable_item_list(int index);
  ::proto::EquipParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >&
      item_list() const;

  // @@protoc_insertion_point(class_scope:proto.EquipParamList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EquipParam > item_list_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Reward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Reward) */ {
 public:
  Reward();
  virtual ~Reward();

  Reward(const Reward& from);

  inline Reward& operator=(const Reward& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Reward(Reward&& from) noexcept
    : Reward() {
    *this = ::std::move(from);
  }

  inline Reward& operator=(Reward&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Reward& default_instance();

  static inline const Reward* internal_default_instance() {
    return reinterpret_cast<const Reward*>(
               &_Reward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(Reward* other);
  friend void swap(Reward& a, Reward& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Reward* New() const PROTOBUF_FINAL { return New(NULL); }

  Reward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reward& from);
  void MergeFrom(const Reward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_list = 2;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 2;
  const ::proto::ItemParam& item_list(int index) const;
  ::proto::ItemParam* mutable_item_list(int index);
  ::proto::ItemParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_list() const;

  // uint32 reward_id = 1;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Reward)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_list_;
  ::google::protobuf::uint32 reward_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityString) */ {
 public:
  AbilityString();
  virtual ~AbilityString();

  AbilityString(const AbilityString& from);

  inline AbilityString& operator=(const AbilityString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityString(AbilityString&& from) noexcept
    : AbilityString() {
    *this = ::std::move(from);
  }

  inline AbilityString& operator=(AbilityString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityString& default_instance();

  enum TypeCase {
    kStr = 1,
    kHash = 2,
    TYPE_NOT_SET = 0,
  };

  static inline const AbilityString* internal_default_instance() {
    return reinterpret_cast<const AbilityString*>(
               &_AbilityString_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(AbilityString* other);
  friend void swap(AbilityString& a, AbilityString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityString* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityString* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityString& from);
  void MergeFrom(const AbilityString& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string str = 1;
  private:
  bool has_str() const;
  public:
  void clear_str();
  static const int kStrFieldNumber = 1;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // uint32 hash = 2;
  private:
  bool has_hash() const;
  public:
  void clear_hash();
  static const int kHashFieldNumber = 2;
  ::google::protobuf::uint32 hash() const;
  void set_hash(::google::protobuf::uint32 value);

  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:proto.AbilityString)
 private:
  void set_has_str();
  void set_has_hash();

  inline bool has_type() const;
  void clear_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TypeUnion {
    TypeUnion() {}
    ::google::protobuf::internal::ArenaStringPtr str_;
    ::google::protobuf::uint32 hash_;
  } type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityFloatValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityFloatValue) */ {
 public:
  AbilityFloatValue();
  virtual ~AbilityFloatValue();

  AbilityFloatValue(const AbilityFloatValue& from);

  inline AbilityFloatValue& operator=(const AbilityFloatValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityFloatValue(AbilityFloatValue&& from) noexcept
    : AbilityFloatValue() {
    *this = ::std::move(from);
  }

  inline AbilityFloatValue& operator=(AbilityFloatValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityFloatValue& default_instance();

  static inline const AbilityFloatValue* internal_default_instance() {
    return reinterpret_cast<const AbilityFloatValue*>(
               &_AbilityFloatValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(AbilityFloatValue* other);
  friend void swap(AbilityFloatValue& a, AbilityFloatValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityFloatValue* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityFloatValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityFloatValue& from);
  void MergeFrom(const AbilityFloatValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityFloatValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  float value() const;
  void set_value(float value);

  // @@protoc_insertion_point(class_scope:proto.AbilityFloatValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float value_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityScalarValueEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityScalarValueEntry) */ {
 public:
  AbilityScalarValueEntry();
  virtual ~AbilityScalarValueEntry();

  AbilityScalarValueEntry(const AbilityScalarValueEntry& from);

  inline AbilityScalarValueEntry& operator=(const AbilityScalarValueEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityScalarValueEntry(AbilityScalarValueEntry&& from) noexcept
    : AbilityScalarValueEntry() {
    *this = ::std::move(from);
  }

  inline AbilityScalarValueEntry& operator=(AbilityScalarValueEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityScalarValueEntry& default_instance();

  enum ValueCase {
    kFloatValue = 3,
    kStringValue = 4,
    kIntValue = 5,
    kUintValue = 6,
    VALUE_NOT_SET = 0,
  };

  static inline const AbilityScalarValueEntry* internal_default_instance() {
    return reinterpret_cast<const AbilityScalarValueEntry*>(
               &_AbilityScalarValueEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(AbilityScalarValueEntry* other);
  friend void swap(AbilityScalarValueEntry& a, AbilityScalarValueEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityScalarValueEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityScalarValueEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityScalarValueEntry& from);
  void MergeFrom(const AbilityScalarValueEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityScalarValueEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityString key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::proto::AbilityString& key() const;
  ::proto::AbilityString* mutable_key();
  ::proto::AbilityString* release_key();
  void set_allocated_key(::proto::AbilityString* key);

  // .proto.AbilityScalarType value_type = 2;
  void clear_value_type();
  static const int kValueTypeFieldNumber = 2;
  ::proto::AbilityScalarType value_type() const;
  void set_value_type(::proto::AbilityScalarType value);

  // float float_value = 3;
  private:
  bool has_float_value() const;
  public:
  void clear_float_value();
  static const int kFloatValueFieldNumber = 3;
  float float_value() const;
  void set_float_value(float value);

  // string string_value = 4;
  private:
  bool has_string_value() const;
  public:
  void clear_string_value();
  static const int kStringValueFieldNumber = 4;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // int32 int_value = 5;
  private:
  bool has_int_value() const;
  public:
  void clear_int_value();
  static const int kIntValueFieldNumber = 5;
  ::google::protobuf::int32 int_value() const;
  void set_int_value(::google::protobuf::int32 value);

  // uint32 uint_value = 6;
  private:
  bool has_uint_value() const;
  public:
  void clear_uint_value();
  static const int kUintValueFieldNumber = 6;
  ::google::protobuf::uint32 uint_value() const;
  void set_uint_value(::google::protobuf::uint32 value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:proto.AbilityScalarValueEntry)
 private:
  void set_has_float_value();
  void set_has_string_value();
  void set_has_int_value();
  void set_has_uint_value();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityString* key_;
  int value_type_;
  union ValueUnion {
    ValueUnion() {}
    float float_value_;
    ::google::protobuf::internal::ArenaStringPtr string_value_;
    ::google::protobuf::int32 int_value_;
    ::google::protobuf::uint32 uint_value_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityAppliedAbility : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityAppliedAbility) */ {
 public:
  AbilityAppliedAbility();
  virtual ~AbilityAppliedAbility();

  AbilityAppliedAbility(const AbilityAppliedAbility& from);

  inline AbilityAppliedAbility& operator=(const AbilityAppliedAbility& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityAppliedAbility(AbilityAppliedAbility&& from) noexcept
    : AbilityAppliedAbility() {
    *this = ::std::move(from);
  }

  inline AbilityAppliedAbility& operator=(AbilityAppliedAbility&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityAppliedAbility& default_instance();

  static inline const AbilityAppliedAbility* internal_default_instance() {
    return reinterpret_cast<const AbilityAppliedAbility*>(
               &_AbilityAppliedAbility_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(AbilityAppliedAbility* other);
  friend void swap(AbilityAppliedAbility& a, AbilityAppliedAbility& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityAppliedAbility* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityAppliedAbility* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityAppliedAbility& from);
  void MergeFrom(const AbilityAppliedAbility& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityAppliedAbility* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityScalarValueEntry override_map = 3;
  int override_map_size() const;
  void clear_override_map();
  static const int kOverrideMapFieldNumber = 3;
  const ::proto::AbilityScalarValueEntry& override_map(int index) const;
  ::proto::AbilityScalarValueEntry* mutable_override_map(int index);
  ::proto::AbilityScalarValueEntry* add_override_map();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
      mutable_override_map();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
      override_map() const;

  // .proto.AbilityString ability_name = 1;
  bool has_ability_name() const;
  void clear_ability_name();
  static const int kAbilityNameFieldNumber = 1;
  const ::proto::AbilityString& ability_name() const;
  ::proto::AbilityString* mutable_ability_name();
  ::proto::AbilityString* release_ability_name();
  void set_allocated_ability_name(::proto::AbilityString* ability_name);

  // .proto.AbilityString ability_override = 2;
  bool has_ability_override() const;
  void clear_ability_override();
  static const int kAbilityOverrideFieldNumber = 2;
  const ::proto::AbilityString& ability_override() const;
  ::proto::AbilityString* mutable_ability_override();
  ::proto::AbilityString* release_ability_override();
  void set_allocated_ability_override(::proto::AbilityString* ability_override);

  // uint32 instanced_ability_id = 4;
  void clear_instanced_ability_id();
  static const int kInstancedAbilityIdFieldNumber = 4;
  ::google::protobuf::uint32 instanced_ability_id() const;
  void set_instanced_ability_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityAppliedAbility)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry > override_map_;
  ::proto::AbilityString* ability_name_;
  ::proto::AbilityString* ability_override_;
  ::google::protobuf::uint32 instanced_ability_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityAttachedModifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityAttachedModifier) */ {
 public:
  AbilityAttachedModifier();
  virtual ~AbilityAttachedModifier();

  AbilityAttachedModifier(const AbilityAttachedModifier& from);

  inline AbilityAttachedModifier& operator=(const AbilityAttachedModifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityAttachedModifier(AbilityAttachedModifier&& from) noexcept
    : AbilityAttachedModifier() {
    *this = ::std::move(from);
  }

  inline AbilityAttachedModifier& operator=(AbilityAttachedModifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityAttachedModifier& default_instance();

  static inline const AbilityAttachedModifier* internal_default_instance() {
    return reinterpret_cast<const AbilityAttachedModifier*>(
               &_AbilityAttachedModifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(AbilityAttachedModifier* other);
  friend void swap(AbilityAttachedModifier& a, AbilityAttachedModifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityAttachedModifier* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityAttachedModifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityAttachedModifier& from);
  void MergeFrom(const AbilityAttachedModifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityAttachedModifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_invalid = 1;
  void clear_is_invalid();
  static const int kIsInvalidFieldNumber = 1;
  bool is_invalid() const;
  void set_is_invalid(bool value);

  // uint32 owner_entity_id = 2;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // uint32 instanced_modifier_id = 3;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 3;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityAttachedModifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_invalid_;
  ::google::protobuf::uint32 owner_entity_id_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifierDurability : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ModifierDurability) */ {
 public:
  ModifierDurability();
  virtual ~ModifierDurability();

  ModifierDurability(const ModifierDurability& from);

  inline ModifierDurability& operator=(const ModifierDurability& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModifierDurability(ModifierDurability&& from) noexcept
    : ModifierDurability() {
    *this = ::std::move(from);
  }

  inline ModifierDurability& operator=(ModifierDurability&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifierDurability& default_instance();

  static inline const ModifierDurability* internal_default_instance() {
    return reinterpret_cast<const ModifierDurability*>(
               &_ModifierDurability_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(ModifierDurability* other);
  friend void swap(ModifierDurability& a, ModifierDurability& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModifierDurability* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifierDurability* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifierDurability& from);
  void MergeFrom(const ModifierDurability& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifierDurability* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float reduce_ratio = 1;
  void clear_reduce_ratio();
  static const int kReduceRatioFieldNumber = 1;
  float reduce_ratio() const;
  void set_reduce_ratio(float value);

  // float remaining_durability = 2;
  void clear_remaining_durability();
  static const int kRemainingDurabilityFieldNumber = 2;
  float remaining_durability() const;
  void set_remaining_durability(float value);

  // @@protoc_insertion_point(class_scope:proto.ModifierDurability)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float reduce_ratio_;
  float remaining_durability_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityAppliedModifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityAppliedModifier) */ {
 public:
  AbilityAppliedModifier();
  virtual ~AbilityAppliedModifier();

  AbilityAppliedModifier(const AbilityAppliedModifier& from);

  inline AbilityAppliedModifier& operator=(const AbilityAppliedModifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityAppliedModifier(AbilityAppliedModifier&& from) noexcept
    : AbilityAppliedModifier() {
    *this = ::std::move(from);
  }

  inline AbilityAppliedModifier& operator=(AbilityAppliedModifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityAppliedModifier& default_instance();

  static inline const AbilityAppliedModifier* internal_default_instance() {
    return reinterpret_cast<const AbilityAppliedModifier*>(
               &_AbilityAppliedModifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(AbilityAppliedModifier* other);
  friend void swap(AbilityAppliedModifier& a, AbilityAppliedModifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityAppliedModifier* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityAppliedModifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityAppliedModifier& from);
  void MergeFrom(const AbilityAppliedModifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityAppliedModifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilityString parent_ability_name = 3;
  bool has_parent_ability_name() const;
  void clear_parent_ability_name();
  static const int kParentAbilityNameFieldNumber = 3;
  const ::proto::AbilityString& parent_ability_name() const;
  ::proto::AbilityString* mutable_parent_ability_name();
  ::proto::AbilityString* release_parent_ability_name();
  void set_allocated_parent_ability_name(::proto::AbilityString* parent_ability_name);

  // .proto.AbilityString parent_ability_override = 4;
  bool has_parent_ability_override() const;
  void clear_parent_ability_override();
  static const int kParentAbilityOverrideFieldNumber = 4;
  const ::proto::AbilityString& parent_ability_override() const;
  ::proto::AbilityString* mutable_parent_ability_override();
  ::proto::AbilityString* release_parent_ability_override();
  void set_allocated_parent_ability_override(::proto::AbilityString* parent_ability_override);

  // .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
  bool has_attached_instanced_modifier() const;
  void clear_attached_instanced_modifier();
  static const int kAttachedInstancedModifierFieldNumber = 8;
  const ::proto::AbilityAttachedModifier& attached_instanced_modifier() const;
  ::proto::AbilityAttachedModifier* mutable_attached_instanced_modifier();
  ::proto::AbilityAttachedModifier* release_attached_instanced_modifier();
  void set_allocated_attached_instanced_modifier(::proto::AbilityAttachedModifier* attached_instanced_modifier);

  // .proto.ModifierDurability modifier_durability = 11;
  bool has_modifier_durability() const;
  void clear_modifier_durability();
  static const int kModifierDurabilityFieldNumber = 11;
  const ::proto::ModifierDurability& modifier_durability() const;
  ::proto::ModifierDurability* mutable_modifier_durability();
  ::proto::ModifierDurability* release_modifier_durability();
  void set_allocated_modifier_durability(::proto::ModifierDurability* modifier_durability);

  // int32 modifier_local_id = 1;
  void clear_modifier_local_id();
  static const int kModifierLocalIdFieldNumber = 1;
  ::google::protobuf::int32 modifier_local_id() const;
  void set_modifier_local_id(::google::protobuf::int32 value);

  // uint32 parent_ability_entity_id = 2;
  void clear_parent_ability_entity_id();
  static const int kParentAbilityEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 parent_ability_entity_id() const;
  void set_parent_ability_entity_id(::google::protobuf::uint32 value);

  // uint32 instanced_ability_id = 5;
  void clear_instanced_ability_id();
  static const int kInstancedAbilityIdFieldNumber = 5;
  ::google::protobuf::uint32 instanced_ability_id() const;
  void set_instanced_ability_id(::google::protobuf::uint32 value);

  // uint32 instanced_modifier_id = 6;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 6;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // float exist_duration = 7;
  void clear_exist_duration();
  static const int kExistDurationFieldNumber = 7;
  float exist_duration() const;
  void set_exist_duration(float value);

  // uint32 apply_entity_id = 9;
  void clear_apply_entity_id();
  static const int kApplyEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 apply_entity_id() const;
  void set_apply_entity_id(::google::protobuf::uint32 value);

  // bool is_attached_parent_ability = 10;
  void clear_is_attached_parent_ability();
  static const int kIsAttachedParentAbilityFieldNumber = 10;
  bool is_attached_parent_ability() const;
  void set_is_attached_parent_ability(bool value);

  // @@protoc_insertion_point(class_scope:proto.AbilityAppliedModifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilityString* parent_ability_name_;
  ::proto::AbilityString* parent_ability_override_;
  ::proto::AbilityAttachedModifier* attached_instanced_modifier_;
  ::proto::ModifierDurability* modifier_durability_;
  ::google::protobuf::int32 modifier_local_id_;
  ::google::protobuf::uint32 parent_ability_entity_id_;
  ::google::protobuf::uint32 instanced_ability_id_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  float exist_duration_;
  ::google::protobuf::uint32 apply_entity_id_;
  bool is_attached_parent_ability_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilitySyncStateInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilitySyncStateInfo) */ {
 public:
  AbilitySyncStateInfo();
  virtual ~AbilitySyncStateInfo();

  AbilitySyncStateInfo(const AbilitySyncStateInfo& from);

  inline AbilitySyncStateInfo& operator=(const AbilitySyncStateInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilitySyncStateInfo(AbilitySyncStateInfo&& from) noexcept
    : AbilitySyncStateInfo() {
    *this = ::std::move(from);
  }

  inline AbilitySyncStateInfo& operator=(AbilitySyncStateInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilitySyncStateInfo& default_instance();

  static inline const AbilitySyncStateInfo* internal_default_instance() {
    return reinterpret_cast<const AbilitySyncStateInfo*>(
               &_AbilitySyncStateInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(AbilitySyncStateInfo* other);
  friend void swap(AbilitySyncStateInfo& a, AbilitySyncStateInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilitySyncStateInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilitySyncStateInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilitySyncStateInfo& from);
  void MergeFrom(const AbilitySyncStateInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilitySyncStateInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
  int dynamic_value_map_size() const;
  void clear_dynamic_value_map();
  static const int kDynamicValueMapFieldNumber = 2;
  const ::proto::AbilityScalarValueEntry& dynamic_value_map(int index) const;
  ::proto::AbilityScalarValueEntry* mutable_dynamic_value_map(int index);
  ::proto::AbilityScalarValueEntry* add_dynamic_value_map();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
      mutable_dynamic_value_map();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
      dynamic_value_map() const;

  // repeated .proto.AbilityAppliedAbility applied_abilities = 3;
  int applied_abilities_size() const;
  void clear_applied_abilities();
  static const int kAppliedAbilitiesFieldNumber = 3;
  const ::proto::AbilityAppliedAbility& applied_abilities(int index) const;
  ::proto::AbilityAppliedAbility* mutable_applied_abilities(int index);
  ::proto::AbilityAppliedAbility* add_applied_abilities();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >*
      mutable_applied_abilities();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >&
      applied_abilities() const;

  // repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
  int applied_modifiers_size() const;
  void clear_applied_modifiers();
  static const int kAppliedModifiersFieldNumber = 4;
  const ::proto::AbilityAppliedModifier& applied_modifiers(int index) const;
  ::proto::AbilityAppliedModifier* mutable_applied_modifiers(int index);
  ::proto::AbilityAppliedModifier* add_applied_modifiers();
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >*
      mutable_applied_modifiers();
  const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >&
      applied_modifiers() const;

  // bool is_inited = 1;
  void clear_is_inited();
  static const int kIsInitedFieldNumber = 1;
  bool is_inited() const;
  void set_is_inited(bool value);

  // @@protoc_insertion_point(class_scope:proto.AbilitySyncStateInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry > dynamic_value_map_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility > applied_abilities_;
  ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier > applied_modifiers_;
  bool is_inited_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Vector) */ {
 public:
  Vector();
  virtual ~Vector();

  Vector(const Vector& from);

  inline Vector& operator=(const Vector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector(Vector&& from) noexcept
    : Vector() {
    *this = ::std::move(from);
  }

  inline Vector& operator=(Vector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector& default_instance();

  static inline const Vector* internal_default_instance() {
    return reinterpret_cast<const Vector*>(
               &_Vector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(Vector* other);
  friend void swap(Vector& a, Vector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector& from);
  void MergeFrom(const Vector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:proto.Vector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector3Int : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Vector3Int) */ {
 public:
  Vector3Int();
  virtual ~Vector3Int();

  Vector3Int(const Vector3Int& from);

  inline Vector3Int& operator=(const Vector3Int& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector3Int(Vector3Int&& from) noexcept
    : Vector3Int() {
    *this = ::std::move(from);
  }

  inline Vector3Int& operator=(Vector3Int&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector3Int& default_instance();

  static inline const Vector3Int* internal_default_instance() {
    return reinterpret_cast<const Vector3Int*>(
               &_Vector3Int_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(Vector3Int* other);
  friend void swap(Vector3Int& a, Vector3Int& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector3Int* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector3Int* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector3Int& from);
  void MergeFrom(const Vector3Int& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector3Int* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // int32 z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.Vector3Int)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 z_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MotionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MotionInfo) */ {
 public:
  MotionInfo();
  virtual ~MotionInfo();

  MotionInfo(const MotionInfo& from);

  inline MotionInfo& operator=(const MotionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MotionInfo(MotionInfo&& from) noexcept
    : MotionInfo() {
    *this = ::std::move(from);
  }

  inline MotionInfo& operator=(MotionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MotionInfo& default_instance();

  static inline const MotionInfo* internal_default_instance() {
    return reinterpret_cast<const MotionInfo*>(
               &_MotionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(MotionInfo* other);
  friend void swap(MotionInfo& a, MotionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MotionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MotionInfo& from);
  void MergeFrom(const MotionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MotionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Vector params = 5;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 5;
  const ::proto::Vector& params(int index) const;
  ::proto::Vector* mutable_params(int index);
  ::proto::Vector* add_params();
  ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
      mutable_params();
  const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
      params() const;

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // .proto.Vector speed = 3;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 3;
  const ::proto::Vector& speed() const;
  ::proto::Vector* mutable_speed();
  ::proto::Vector* release_speed();
  void set_allocated_speed(::proto::Vector* speed);

  // .proto.MotionState state = 4;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::proto::MotionState state() const;
  void set_state(::proto::MotionState value);

  // @@protoc_insertion_point(class_scope:proto.MotionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Vector > params_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::proto::Vector* speed_;
  int state_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlaceInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlaceInfo) */ {
 public:
  PlaceInfo();
  virtual ~PlaceInfo();

  PlaceInfo(const PlaceInfo& from);

  inline PlaceInfo& operator=(const PlaceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaceInfo(PlaceInfo&& from) noexcept
    : PlaceInfo() {
    *this = ::std::move(from);
  }

  inline PlaceInfo& operator=(PlaceInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaceInfo& default_instance();

  static inline const PlaceInfo* internal_default_instance() {
    return reinterpret_cast<const PlaceInfo*>(
               &_PlaceInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(PlaceInfo* other);
  friend void swap(PlaceInfo& a, PlaceInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaceInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaceInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaceInfo& from);
  void MergeFrom(const PlaceInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaceInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // @@protoc_insertion_point(class_scope:proto.PlaceInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneWeaponInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneWeaponInfo) */ {
 public:
  SceneWeaponInfo();
  virtual ~SceneWeaponInfo();

  SceneWeaponInfo(const SceneWeaponInfo& from);

  inline SceneWeaponInfo& operator=(const SceneWeaponInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneWeaponInfo(SceneWeaponInfo&& from) noexcept
    : SceneWeaponInfo() {
    *this = ::std::move(from);
  }

  inline SceneWeaponInfo& operator=(SceneWeaponInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneWeaponInfo& default_instance();

  static inline const SceneWeaponInfo* internal_default_instance() {
    return reinterpret_cast<const SceneWeaponInfo*>(
               &_SceneWeaponInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(SceneWeaponInfo* other);
  friend void swap(SceneWeaponInfo& a, SceneWeaponInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneWeaponInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneWeaponInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneWeaponInfo& from);
  void MergeFrom(const SceneWeaponInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneWeaponInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> affix_map = 8;
  int affix_map_size() const;
  void clear_affix_map();
  static const int kAffixMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      affix_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_affix_map();

  // .proto.AbilitySyncStateInfo ability_info = 7;
  bool has_ability_info() const;
  void clear_ability_info();
  static const int kAbilityInfoFieldNumber = 7;
  const ::proto::AbilitySyncStateInfo& ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_ability_info();
  ::proto::AbilitySyncStateInfo* release_ability_info();
  void set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 gadget_id = 2;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 2;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // uint64 guid = 4;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 item_id = 3;
  void clear_item_id();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 promote_level = 6;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 6;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneWeaponInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneWeaponInfo_AffixMapEntry : public ::google::protobuf::internal::MapEntry<SceneWeaponInfo_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneWeaponInfo_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneWeaponInfo_AffixMapEntry();
    SceneWeaponInfo_AffixMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneWeaponInfo_AffixMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneWeaponInfo_AffixMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneWeaponInfo_AffixMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > affix_map_;
  private:
  ::proto::AbilitySyncStateInfo* ability_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 gadget_id_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneReliquaryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneReliquaryInfo) */ {
 public:
  SceneReliquaryInfo();
  virtual ~SceneReliquaryInfo();

  SceneReliquaryInfo(const SceneReliquaryInfo& from);

  inline SceneReliquaryInfo& operator=(const SceneReliquaryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneReliquaryInfo(SceneReliquaryInfo&& from) noexcept
    : SceneReliquaryInfo() {
    *this = ::std::move(from);
  }

  inline SceneReliquaryInfo& operator=(SceneReliquaryInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneReliquaryInfo& default_instance();

  static inline const SceneReliquaryInfo* internal_default_instance() {
    return reinterpret_cast<const SceneReliquaryInfo*>(
               &_SceneReliquaryInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(SceneReliquaryInfo* other);
  friend void swap(SceneReliquaryInfo& a, SceneReliquaryInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneReliquaryInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneReliquaryInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneReliquaryInfo& from);
  void MergeFrom(const SceneReliquaryInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneReliquaryInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 promote_level = 4;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 4;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneReliquaryInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerBuff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerBuff) */ {
 public:
  ServerBuff();
  virtual ~ServerBuff();

  ServerBuff(const ServerBuff& from);

  inline ServerBuff& operator=(const ServerBuff& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerBuff(ServerBuff&& from) noexcept
    : ServerBuff() {
    *this = ::std::move(from);
  }

  inline ServerBuff& operator=(ServerBuff&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerBuff& default_instance();

  static inline const ServerBuff* internal_default_instance() {
    return reinterpret_cast<const ServerBuff*>(
               &_ServerBuff_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ServerBuff* other);
  friend void swap(ServerBuff& a, ServerBuff& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerBuff* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerBuff* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerBuff& from);
  void MergeFrom(const ServerBuff& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerBuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 server_buff_uid = 1;
  void clear_server_buff_uid();
  static const int kServerBuffUidFieldNumber = 1;
  ::google::protobuf::uint32 server_buff_uid() const;
  void set_server_buff_uid(::google::protobuf::uint32 value);

  // uint32 server_buff_id = 2;
  void clear_server_buff_id();
  static const int kServerBuffIdFieldNumber = 2;
  ::google::protobuf::uint32 server_buff_id() const;
  void set_server_buff_id(::google::protobuf::uint32 value);

  // uint32 server_buff_type = 3;
  void clear_server_buff_type();
  static const int kServerBuffTypeFieldNumber = 3;
  ::google::protobuf::uint32 server_buff_type() const;
  void set_server_buff_type(::google::protobuf::uint32 value);

  // uint32 instanced_modifier_id = 4;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 4;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerBuff)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 server_buff_uid_;
  ::google::protobuf::uint32 server_buff_id_;
  ::google::protobuf::uint32 server_buff_type_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneAvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAvatarInfo) */ {
 public:
  SceneAvatarInfo();
  virtual ~SceneAvatarInfo();

  SceneAvatarInfo(const SceneAvatarInfo& from);

  inline SceneAvatarInfo& operator=(const SceneAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAvatarInfo(SceneAvatarInfo&& from) noexcept
    : SceneAvatarInfo() {
    *this = ::std::move(from);
  }

  inline SceneAvatarInfo& operator=(SceneAvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAvatarInfo& default_instance();

  static inline const SceneAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const SceneAvatarInfo*>(
               &_SceneAvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(SceneAvatarInfo* other);
  friend void swap(SceneAvatarInfo& a, SceneAvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAvatarInfo& from);
  void MergeFrom(const SceneAvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 equip_id_list = 5;
  int equip_id_list_size() const;
  void clear_equip_id_list();
  static const int kEquipIdListFieldNumber = 5;
  ::google::protobuf::uint32 equip_id_list(int index) const;
  void set_equip_id_list(int index, ::google::protobuf::uint32 value);
  void add_equip_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equip_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equip_id_list();

  // repeated uint32 talent_id_list = 7;
  int talent_id_list_size() const;
  void clear_talent_id_list();
  static const int kTalentIdListFieldNumber = 7;
  ::google::protobuf::uint32 talent_id_list(int index) const;
  void set_talent_id_list(int index, ::google::protobuf::uint32 value);
  void add_talent_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      talent_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_talent_id_list();

  // repeated .proto.SceneReliquaryInfo reliquary_list = 9;
  int reliquary_list_size() const;
  void clear_reliquary_list();
  static const int kReliquaryListFieldNumber = 9;
  const ::proto::SceneReliquaryInfo& reliquary_list(int index) const;
  ::proto::SceneReliquaryInfo* mutable_reliquary_list(int index);
  ::proto::SceneReliquaryInfo* add_reliquary_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >*
      mutable_reliquary_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >&
      reliquary_list() const;

  // repeated uint32 buff_id_list = 10;
  int buff_id_list_size() const;
  void clear_buff_id_list();
  static const int kBuffIdListFieldNumber = 10;
  ::google::protobuf::uint32 buff_id_list(int index) const;
  void set_buff_id_list(int index, ::google::protobuf::uint32 value);
  void add_buff_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buff_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buff_id_list();

  // repeated uint32 inherent_proud_skill_list = 12;
  int inherent_proud_skill_list_size() const;
  void clear_inherent_proud_skill_list();
  static const int kInherentProudSkillListFieldNumber = 12;
  ::google::protobuf::uint32 inherent_proud_skill_list(int index) const;
  void set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value);
  void add_inherent_proud_skill_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      inherent_proud_skill_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_inherent_proud_skill_list();

  // map<uint32, uint32> skill_level_map = 13;
  int skill_level_map_size() const;
  void clear_skill_level_map();
  static const int kSkillLevelMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_level_map();

  // map<uint32, uint32> proud_skill_extra_level_map = 14;
  int proud_skill_extra_level_map_size() const;
  void clear_proud_skill_extra_level_map();
  static const int kProudSkillExtraLevelMapFieldNumber = 14;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      proud_skill_extra_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_proud_skill_extra_level_map();

  // repeated .proto.ServerBuff server_buff_list = 15;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 15;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // .proto.SceneWeaponInfo weapon = 8;
  bool has_weapon() const;
  void clear_weapon();
  static const int kWeaponFieldNumber = 8;
  const ::proto::SceneWeaponInfo& weapon() const;
  ::proto::SceneWeaponInfo* mutable_weapon();
  ::proto::SceneWeaponInfo* release_weapon();
  void set_allocated_weapon(::proto::SceneWeaponInfo* weapon);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 avatar_id = 2;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 2;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 peer_id = 4;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 4;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // uint32 skill_depot_id = 6;
  void clear_skill_depot_id();
  static const int kSkillDepotIdFieldNumber = 6;
  ::google::protobuf::uint32 skill_depot_id() const;
  void set_skill_depot_id(::google::protobuf::uint32 value);

  // uint32 core_proud_skill_level = 11;
  void clear_core_proud_skill_level();
  static const int kCoreProudSkillLevelFieldNumber = 11;
  ::google::protobuf::uint32 core_proud_skill_level() const;
  void set_core_proud_skill_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneAvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equip_id_list_;
  mutable int _equip_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > talent_id_list_;
  mutable int _talent_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo > reliquary_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buff_id_list_;
  mutable int _buff_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inherent_proud_skill_list_;
  mutable int _inherent_proud_skill_list_cached_byte_size_;
  public:
  class SceneAvatarInfo_SkillLevelMapEntry : public ::google::protobuf::internal::MapEntry<SceneAvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneAvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneAvatarInfo_SkillLevelMapEntry();
    SceneAvatarInfo_SkillLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneAvatarInfo_SkillLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneAvatarInfo_SkillLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneAvatarInfo_SkillLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_level_map_;
  private:
  public:
  class SceneAvatarInfo_ProudSkillExtraLevelMapEntry : public ::google::protobuf::internal::MapEntry<SceneAvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneAvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneAvatarInfo_ProudSkillExtraLevelMapEntry();
    SceneAvatarInfo_ProudSkillExtraLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneAvatarInfo_ProudSkillExtraLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneAvatarInfo_ProudSkillExtraLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > proud_skill_extra_level_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  ::proto::SceneWeaponInfo* weapon_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 skill_depot_id_;
  ::google::protobuf::uint32 core_proud_skill_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneMonsterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneMonsterInfo) */ {
 public:
  SceneMonsterInfo();
  virtual ~SceneMonsterInfo();

  SceneMonsterInfo(const SceneMonsterInfo& from);

  inline SceneMonsterInfo& operator=(const SceneMonsterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneMonsterInfo(SceneMonsterInfo&& from) noexcept
    : SceneMonsterInfo() {
    *this = ::std::move(from);
  }

  inline SceneMonsterInfo& operator=(SceneMonsterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneMonsterInfo& default_instance();

  static inline const SceneMonsterInfo* internal_default_instance() {
    return reinterpret_cast<const SceneMonsterInfo*>(
               &_SceneMonsterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(SceneMonsterInfo* other);
  friend void swap(SceneMonsterInfo& a, SceneMonsterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneMonsterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneMonsterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneMonsterInfo& from);
  void MergeFrom(const SceneMonsterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneMonsterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated .proto.SceneWeaponInfo weapon_list = 4;
  int weapon_list_size() const;
  void clear_weapon_list();
  static const int kWeaponListFieldNumber = 4;
  const ::proto::SceneWeaponInfo& weapon_list(int index) const;
  ::proto::SceneWeaponInfo* mutable_weapon_list(int index);
  ::proto::SceneWeaponInfo* add_weapon_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >*
      mutable_weapon_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >&
      weapon_list() const;

  // repeated uint32 affix_list = 6;
  int affix_list_size() const;
  void clear_affix_list();
  static const int kAffixListFieldNumber = 6;
  ::google::protobuf::uint32 affix_list(int index) const;
  void set_affix_list(int index, ::google::protobuf::uint32 value);
  void add_affix_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      affix_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_affix_list();

  // map<uint32, uint32> summon_tag_map = 10;
  int summon_tag_map_size() const;
  void clear_summon_tag_map();
  static const int kSummonTagMapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      summon_tag_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_summon_tag_map();

  // uint32 monster_id = 1;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 config_id = 3;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 5;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 5;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // bool is_elite = 7;
  void clear_is_elite();
  static const int kIsEliteFieldNumber = 7;
  bool is_elite() const;
  void set_is_elite(bool value);

  // uint32 owner_entity_id = 8;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 8;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // uint32 summoned_tag = 9;
  void clear_summoned_tag();
  static const int kSummonedTagFieldNumber = 9;
  ::google::protobuf::uint32 summoned_tag() const;
  void set_summoned_tag(::google::protobuf::uint32 value);

  // uint32 pose_id = 11;
  void clear_pose_id();
  static const int kPoseIdFieldNumber = 11;
  ::google::protobuf::uint32 pose_id() const;
  void set_pose_id(::google::protobuf::uint32 value);

  // .proto.MonsterBornType born_type = 12;
  void clear_born_type();
  static const int kBornTypeFieldNumber = 12;
  ::proto::MonsterBornType born_type() const;
  void set_born_type(::proto::MonsterBornType value);

  // uint32 block_id = 13;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 13;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // uint32 mark_flag = 14;
  void clear_mark_flag();
  static const int kMarkFlagFieldNumber = 14;
  ::google::protobuf::uint32 mark_flag() const;
  void set_mark_flag(::google::protobuf::uint32 value);

  // uint32 title_id = 15;
  void clear_title_id();
  static const int kTitleIdFieldNumber = 15;
  ::google::protobuf::uint32 title_id() const;
  void set_title_id(::google::protobuf::uint32 value);

  // uint32 special_name_id = 16;
  void clear_special_name_id();
  static const int kSpecialNameIdFieldNumber = 16;
  ::google::protobuf::uint32 special_name_id() const;
  void set_special_name_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneMonsterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo > weapon_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > affix_list_;
  mutable int _affix_list_cached_byte_size_;
  public:
  class SceneMonsterInfo_SummonTagMapEntry : public ::google::protobuf::internal::MapEntry<SceneMonsterInfo_SummonTagMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneMonsterInfo_SummonTagMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneMonsterInfo_SummonTagMapEntry();
    SceneMonsterInfo_SummonTagMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneMonsterInfo_SummonTagMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneMonsterInfo_SummonTagMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneMonsterInfo_SummonTagMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > summon_tag_map_;
  private:
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 authority_peer_id_;
  bool is_elite_;
  ::google::protobuf::uint32 owner_entity_id_;
  ::google::protobuf::uint32 summoned_tag_;
  ::google::protobuf::uint32 pose_id_;
  int born_type_;
  ::google::protobuf::uint32 block_id_;
  ::google::protobuf::uint32 mark_flag_;
  ::google::protobuf::uint32 title_id_;
  ::google::protobuf::uint32 special_name_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneNpcInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneNpcInfo) */ {
 public:
  SceneNpcInfo();
  virtual ~SceneNpcInfo();

  SceneNpcInfo(const SceneNpcInfo& from);

  inline SceneNpcInfo& operator=(const SceneNpcInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneNpcInfo(SceneNpcInfo&& from) noexcept
    : SceneNpcInfo() {
    *this = ::std::move(from);
  }

  inline SceneNpcInfo& operator=(SceneNpcInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneNpcInfo& default_instance();

  static inline const SceneNpcInfo* internal_default_instance() {
    return reinterpret_cast<const SceneNpcInfo*>(
               &_SceneNpcInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(SceneNpcInfo* other);
  friend void swap(SceneNpcInfo& a, SceneNpcInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneNpcInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneNpcInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneNpcInfo& from);
  void MergeFrom(const SceneNpcInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneNpcInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 npc_id = 1;
  void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  ::google::protobuf::uint32 npc_id() const;
  void set_npc_id(::google::protobuf::uint32 value);

  // uint32 room_id = 2;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 parent_quest_id = 3;
  void clear_parent_quest_id();
  static const int kParentQuestIdFieldNumber = 3;
  ::google::protobuf::uint32 parent_quest_id() const;
  void set_parent_quest_id(::google::protobuf::uint32 value);

  // uint32 block_id = 4;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 4;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneNpcInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 npc_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 parent_quest_id_;
  ::google::protobuf::uint32 block_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorktopInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorktopInfo) */ {
 public:
  WorktopInfo();
  virtual ~WorktopInfo();

  WorktopInfo(const WorktopInfo& from);

  inline WorktopInfo& operator=(const WorktopInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorktopInfo(WorktopInfo&& from) noexcept
    : WorktopInfo() {
    *this = ::std::move(from);
  }

  inline WorktopInfo& operator=(WorktopInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorktopInfo& default_instance();

  static inline const WorktopInfo* internal_default_instance() {
    return reinterpret_cast<const WorktopInfo*>(
               &_WorktopInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(WorktopInfo* other);
  friend void swap(WorktopInfo& a, WorktopInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorktopInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WorktopInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorktopInfo& from);
  void MergeFrom(const WorktopInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorktopInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 option_list = 1;
  int option_list_size() const;
  void clear_option_list();
  static const int kOptionListFieldNumber = 1;
  ::google::protobuf::uint32 option_list(int index) const;
  void set_option_list(int index, ::google::protobuf::uint32 value);
  void add_option_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      option_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_option_list();

  // bool is_guest_can_operate = 2;
  void clear_is_guest_can_operate();
  static const int kIsGuestCanOperateFieldNumber = 2;
  bool is_guest_can_operate() const;
  void set_is_guest_can_operate(bool value);

  // @@protoc_insertion_point(class_scope:proto.WorktopInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > option_list_;
  mutable int _option_list_cached_byte_size_;
  bool is_guest_can_operate_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MathQuaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MathQuaternion) */ {
 public:
  MathQuaternion();
  virtual ~MathQuaternion();

  MathQuaternion(const MathQuaternion& from);

  inline MathQuaternion& operator=(const MathQuaternion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MathQuaternion(MathQuaternion&& from) noexcept
    : MathQuaternion() {
    *this = ::std::move(from);
  }

  inline MathQuaternion& operator=(MathQuaternion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MathQuaternion& default_instance();

  static inline const MathQuaternion* internal_default_instance() {
    return reinterpret_cast<const MathQuaternion*>(
               &_MathQuaternion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(MathQuaternion* other);
  friend void swap(MathQuaternion& a, MathQuaternion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MathQuaternion* New() const PROTOBUF_FINAL { return New(NULL); }

  MathQuaternion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MathQuaternion& from);
  void MergeFrom(const MathQuaternion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MathQuaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float w = 4;
  void clear_w();
  static const int kWFieldNumber = 4;
  float w() const;
  void set_w(float value);

  // @@protoc_insertion_point(class_scope:proto.MathQuaternion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float w_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformInfo) */ {
 public:
  PlatformInfo();
  virtual ~PlatformInfo();

  PlatformInfo(const PlatformInfo& from);

  inline PlatformInfo& operator=(const PlatformInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformInfo(PlatformInfo&& from) noexcept
    : PlatformInfo() {
    *this = ::std::move(from);
  }

  inline PlatformInfo& operator=(PlatformInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformInfo& default_instance();

  static inline const PlatformInfo* internal_default_instance() {
    return reinterpret_cast<const PlatformInfo*>(
               &_PlatformInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(PlatformInfo* other);
  friend void swap(PlatformInfo& a, PlatformInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformInfo& from);
  void MergeFrom(const PlatformInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector start_pos = 7;
  bool has_start_pos() const;
  void clear_start_pos();
  static const int kStartPosFieldNumber = 7;
  const ::proto::Vector& start_pos() const;
  ::proto::Vector* mutable_start_pos();
  ::proto::Vector* release_start_pos();
  void set_allocated_start_pos(::proto::Vector* start_pos);

  // .proto.MathQuaternion start_rot = 9;
  bool has_start_rot() const;
  void clear_start_rot();
  static const int kStartRotFieldNumber = 9;
  const ::proto::MathQuaternion& start_rot() const;
  ::proto::MathQuaternion* mutable_start_rot();
  ::proto::MathQuaternion* release_start_rot();
  void set_allocated_start_rot(::proto::MathQuaternion* start_rot);

  // uint32 route_id = 1;
  void clear_route_id();
  static const int kRouteIdFieldNumber = 1;
  ::google::protobuf::uint32 route_id() const;
  void set_route_id(::google::protobuf::uint32 value);

  // int32 start_index = 2;
  void clear_start_index();
  static const int kStartIndexFieldNumber = 2;
  ::google::protobuf::int32 start_index() const;
  void set_start_index(::google::protobuf::int32 value);

  // uint32 start_route_time = 3;
  void clear_start_route_time();
  static const int kStartRouteTimeFieldNumber = 3;
  ::google::protobuf::uint32 start_route_time() const;
  void set_start_route_time(::google::protobuf::uint32 value);

  // uint32 start_scene_time = 4;
  void clear_start_scene_time();
  static const int kStartSceneTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_scene_time() const;
  void set_start_scene_time(::google::protobuf::uint32 value);

  // uint32 temp_route_time = 5;
  void clear_temp_route_time();
  static const int kTempRouteTimeFieldNumber = 5;
  ::google::protobuf::uint32 temp_route_time() const;
  void set_temp_route_time(::google::protobuf::uint32 value);

  // uint32 temp_start_route_time = 6;
  void clear_temp_start_route_time();
  static const int kTempStartRouteTimeFieldNumber = 6;
  ::google::protobuf::uint32 temp_start_route_time() const;
  void set_temp_start_route_time(::google::protobuf::uint32 value);

  // bool is_started = 8;
  void clear_is_started();
  static const int kIsStartedFieldNumber = 8;
  bool is_started() const;
  void set_is_started(bool value);

  // uint32 stop_scene_time = 10;
  void clear_stop_scene_time();
  static const int kStopSceneTimeFieldNumber = 10;
  ::google::protobuf::uint32 stop_scene_time() const;
  void set_stop_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* start_pos_;
  ::proto::MathQuaternion* start_rot_;
  ::google::protobuf::uint32 route_id_;
  ::google::protobuf::int32 start_index_;
  ::google::protobuf::uint32 start_route_time_;
  ::google::protobuf::uint32 start_scene_time_;
  ::google::protobuf::uint32 temp_route_time_;
  ::google::protobuf::uint32 temp_start_route_time_;
  bool is_started_;
  ::google::protobuf::uint32 stop_scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WeatherInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WeatherInfo) */ {
 public:
  WeatherInfo();
  virtual ~WeatherInfo();

  WeatherInfo(const WeatherInfo& from);

  inline WeatherInfo& operator=(const WeatherInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WeatherInfo(WeatherInfo&& from) noexcept
    : WeatherInfo() {
    *this = ::std::move(from);
  }

  inline WeatherInfo& operator=(WeatherInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WeatherInfo& default_instance();

  static inline const WeatherInfo* internal_default_instance() {
    return reinterpret_cast<const WeatherInfo*>(
               &_WeatherInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(WeatherInfo* other);
  friend void swap(WeatherInfo& a, WeatherInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WeatherInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  WeatherInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeatherInfo& from);
  void MergeFrom(const WeatherInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeatherInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 weather_area_id = 1;
  void clear_weather_area_id();
  static const int kWeatherAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 weather_area_id() const;
  void set_weather_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WeatherInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 weather_area_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientGadgetInfo) */ {
 public:
  ClientGadgetInfo();
  virtual ~ClientGadgetInfo();

  ClientGadgetInfo(const ClientGadgetInfo& from);

  inline ClientGadgetInfo& operator=(const ClientGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientGadgetInfo(ClientGadgetInfo&& from) noexcept
    : ClientGadgetInfo() {
    *this = ::std::move(from);
  }

  inline ClientGadgetInfo& operator=(ClientGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGadgetInfo& default_instance();

  static inline const ClientGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const ClientGadgetInfo*>(
               &_ClientGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(ClientGadgetInfo* other);
  friend void swap(ClientGadgetInfo& a, ClientGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientGadgetInfo& from);
  void MergeFrom(const ClientGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 camp_id = 1;
  void clear_camp_id();
  static const int kCampIdFieldNumber = 1;
  ::google::protobuf::uint32 camp_id() const;
  void set_camp_id(::google::protobuf::uint32 value);

  // uint32 camp_type = 2;
  void clear_camp_type();
  static const int kCampTypeFieldNumber = 2;
  ::google::protobuf::uint32 camp_type() const;
  void set_camp_type(::google::protobuf::uint32 value);

  // uint64 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 owner_entity_id = 4;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 5;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 5;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // bool async_load = 6;
  void clear_async_load();
  static const int kAsyncLoadFieldNumber = 6;
  bool async_load() const;
  void set_async_load(bool value);

  // @@protoc_insertion_point(class_scope:proto.ClientGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 camp_id_;
  ::google::protobuf::uint32 camp_type_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 owner_entity_id_;
  ::google::protobuf::uint32 target_entity_id_;
  bool async_load_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityGadgetInfo) */ {
 public:
  AbilityGadgetInfo();
  virtual ~AbilityGadgetInfo();

  AbilityGadgetInfo(const AbilityGadgetInfo& from);

  inline AbilityGadgetInfo& operator=(const AbilityGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityGadgetInfo(AbilityGadgetInfo&& from) noexcept
    : AbilityGadgetInfo() {
    *this = ::std::move(from);
  }

  inline AbilityGadgetInfo& operator=(AbilityGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityGadgetInfo& default_instance();

  static inline const AbilityGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const AbilityGadgetInfo*>(
               &_AbilityGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(AbilityGadgetInfo* other);
  friend void swap(AbilityGadgetInfo& a, AbilityGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityGadgetInfo& from);
  void MergeFrom(const AbilityGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 camp_id = 1;
  void clear_camp_id();
  static const int kCampIdFieldNumber = 1;
  ::google::protobuf::uint32 camp_id() const;
  void set_camp_id(::google::protobuf::uint32 value);

  // uint32 camp_target_type = 2;
  void clear_camp_target_type();
  static const int kCampTargetTypeFieldNumber = 2;
  ::google::protobuf::uint32 camp_target_type() const;
  void set_camp_target_type(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 3;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 camp_id_;
  ::google::protobuf::uint32 camp_target_type_;
  ::google::protobuf::uint32 target_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GatherGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GatherGadgetInfo) */ {
 public:
  GatherGadgetInfo();
  virtual ~GatherGadgetInfo();

  GatherGadgetInfo(const GatherGadgetInfo& from);

  inline GatherGadgetInfo& operator=(const GatherGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GatherGadgetInfo(GatherGadgetInfo&& from) noexcept
    : GatherGadgetInfo() {
    *this = ::std::move(from);
  }

  inline GatherGadgetInfo& operator=(GatherGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GatherGadgetInfo& default_instance();

  static inline const GatherGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const GatherGadgetInfo*>(
               &_GatherGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(GatherGadgetInfo* other);
  friend void swap(GatherGadgetInfo& a, GatherGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GatherGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GatherGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GatherGadgetInfo& from);
  void MergeFrom(const GatherGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GatherGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // bool is_forbid_guest = 2;
  void clear_is_forbid_guest();
  static const int kIsForbidGuestFieldNumber = 2;
  bool is_forbid_guest() const;
  void set_is_forbid_guest(bool value);

  // @@protoc_insertion_point(class_scope:proto.GatherGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  bool is_forbid_guest_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StatueGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.StatueGadgetInfo) */ {
 public:
  StatueGadgetInfo();
  virtual ~StatueGadgetInfo();

  StatueGadgetInfo(const StatueGadgetInfo& from);

  inline StatueGadgetInfo& operator=(const StatueGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StatueGadgetInfo(StatueGadgetInfo&& from) noexcept
    : StatueGadgetInfo() {
    *this = ::std::move(from);
  }

  inline StatueGadgetInfo& operator=(StatueGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StatueGadgetInfo& default_instance();

  static inline const StatueGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const StatueGadgetInfo*>(
               &_StatueGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(StatueGadgetInfo* other);
  friend void swap(StatueGadgetInfo& a, StatueGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StatueGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  StatueGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StatueGadgetInfo& from);
  void MergeFrom(const StatueGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StatueGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 opened_statue_uid_list = 1;
  int opened_statue_uid_list_size() const;
  void clear_opened_statue_uid_list();
  static const int kOpenedStatueUidListFieldNumber = 1;
  ::google::protobuf::uint32 opened_statue_uid_list(int index) const;
  void set_opened_statue_uid_list(int index, ::google::protobuf::uint32 value);
  void add_opened_statue_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      opened_statue_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_opened_statue_uid_list();

  // @@protoc_insertion_point(class_scope:proto.StatueGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > opened_statue_uid_list_;
  mutable int _opened_statue_uid_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BossChestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BossChestInfo) */ {
 public:
  BossChestInfo();
  virtual ~BossChestInfo();

  BossChestInfo(const BossChestInfo& from);

  inline BossChestInfo& operator=(const BossChestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BossChestInfo(BossChestInfo&& from) noexcept
    : BossChestInfo() {
    *this = ::std::move(from);
  }

  inline BossChestInfo& operator=(BossChestInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BossChestInfo& default_instance();

  static inline const BossChestInfo* internal_default_instance() {
    return reinterpret_cast<const BossChestInfo*>(
               &_BossChestInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(BossChestInfo* other);
  friend void swap(BossChestInfo& a, BossChestInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BossChestInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BossChestInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BossChestInfo& from);
  void MergeFrom(const BossChestInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BossChestInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 remain_uid_list = 3;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 3;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // repeated uint32 qualify_uid_list = 4;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 4;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // uint32 monster_config_id = 1;
  void clear_monster_config_id();
  static const int kMonsterConfigIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_config_id() const;
  void set_monster_config_id(::google::protobuf::uint32 value);

  // uint32 world_resin = 2;
  void clear_world_resin();
  static const int kWorldResinFieldNumber = 2;
  ::google::protobuf::uint32 world_resin() const;
  void set_world_resin(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BossChestInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 monster_config_id_;
  ::google::protobuf::uint32 world_resin_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlossomChestInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlossomChestInfo) */ {
 public:
  BlossomChestInfo();
  virtual ~BlossomChestInfo();

  BlossomChestInfo(const BlossomChestInfo& from);

  inline BlossomChestInfo& operator=(const BlossomChestInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlossomChestInfo(BlossomChestInfo&& from) noexcept
    : BlossomChestInfo() {
    *this = ::std::move(from);
  }

  inline BlossomChestInfo& operator=(BlossomChestInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlossomChestInfo& default_instance();

  static inline const BlossomChestInfo* internal_default_instance() {
    return reinterpret_cast<const BlossomChestInfo*>(
               &_BlossomChestInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(BlossomChestInfo* other);
  friend void swap(BlossomChestInfo& a, BlossomChestInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlossomChestInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BlossomChestInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlossomChestInfo& from);
  void MergeFrom(const BlossomChestInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlossomChestInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 qualify_uid_list = 2;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 2;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // repeated uint32 remain_uid_list = 3;
  int remain_uid_list_size() const;
  void clear_remain_uid_list();
  static const int kRemainUidListFieldNumber = 3;
  ::google::protobuf::uint32 remain_uid_list(int index) const;
  void set_remain_uid_list(int index, ::google::protobuf::uint32 value);
  void add_remain_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remain_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remain_uid_list();

  // uint32 world_resin = 1;
  void clear_world_resin();
  static const int kWorldResinFieldNumber = 1;
  ::google::protobuf::uint32 world_resin() const;
  void set_world_resin(::google::protobuf::uint32 value);

  // uint32 dead_time = 4;
  void clear_dead_time();
  static const int kDeadTimeFieldNumber = 4;
  ::google::protobuf::uint32 dead_time() const;
  void set_dead_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BlossomChestInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remain_uid_list_;
  mutable int _remain_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 world_resin_;
  ::google::protobuf::uint32 dead_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGadgetInfo) */ {
 public:
  SceneGadgetInfo();
  virtual ~SceneGadgetInfo();

  SceneGadgetInfo(const SceneGadgetInfo& from);

  inline SceneGadgetInfo& operator=(const SceneGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGadgetInfo(SceneGadgetInfo&& from) noexcept
    : SceneGadgetInfo() {
    *this = ::std::move(from);
  }

  inline SceneGadgetInfo& operator=(SceneGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGadgetInfo& default_instance();

  enum ContentCase {
    kTrifleItem = 12,
    kGatherGadget = 13,
    kWorktop = 14,
    kClientGadget = 15,
    kPlatform = 16,
    kWeather = 17,
    kAbilityGadget = 18,
    kStatueGadget = 19,
    kBossChest = 20,
    kBlossomChest = 41,
    CONTENT_NOT_SET = 0,
  };

  static inline const SceneGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const SceneGadgetInfo*>(
               &_SceneGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(SceneGadgetInfo* other);
  friend void swap(SceneGadgetInfo& a, SceneGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGadgetInfo& from);
  void MergeFrom(const SceneGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gadget_id = 1;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 1;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // uint32 group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 config_id = 3;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 owner_entity_id = 4;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // .proto.GadgetBornType born_type = 5;
  void clear_born_type();
  static const int kBornTypeFieldNumber = 5;
  ::proto::GadgetBornType born_type() const;
  void set_born_type(::proto::GadgetBornType value);

  // uint32 gadget_state = 6;
  void clear_gadget_state();
  static const int kGadgetStateFieldNumber = 6;
  ::google::protobuf::uint32 gadget_state() const;
  void set_gadget_state(::google::protobuf::uint32 value);

  // uint32 gadget_type = 7;
  void clear_gadget_type();
  static const int kGadgetTypeFieldNumber = 7;
  ::google::protobuf::uint32 gadget_type() const;
  void set_gadget_type(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 9;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 9;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // bool is_show_cutscene = 8;
  void clear_is_show_cutscene();
  static const int kIsShowCutsceneFieldNumber = 8;
  bool is_show_cutscene() const;
  void set_is_show_cutscene(bool value);

  // bool is_enable_interact = 10;
  void clear_is_enable_interact();
  static const int kIsEnableInteractFieldNumber = 10;
  bool is_enable_interact() const;
  void set_is_enable_interact(bool value);

  // uint32 interact_id = 11;
  void clear_interact_id();
  static const int kInteractIdFieldNumber = 11;
  ::google::protobuf::uint32 interact_id() const;
  void set_interact_id(::google::protobuf::uint32 value);

  // uint32 mark_flag = 21;
  void clear_mark_flag();
  static const int kMarkFlagFieldNumber = 21;
  ::google::protobuf::uint32 mark_flag() const;
  void set_mark_flag(::google::protobuf::uint32 value);

  // .proto.Item trifle_item = 12;
  bool has_trifle_item() const;
  void clear_trifle_item();
  static const int kTrifleItemFieldNumber = 12;
  const ::proto::Item& trifle_item() const;
  ::proto::Item* mutable_trifle_item();
  ::proto::Item* release_trifle_item();
  void set_allocated_trifle_item(::proto::Item* trifle_item);

  // .proto.GatherGadgetInfo gather_gadget = 13;
  bool has_gather_gadget() const;
  void clear_gather_gadget();
  static const int kGatherGadgetFieldNumber = 13;
  const ::proto::GatherGadgetInfo& gather_gadget() const;
  ::proto::GatherGadgetInfo* mutable_gather_gadget();
  ::proto::GatherGadgetInfo* release_gather_gadget();
  void set_allocated_gather_gadget(::proto::GatherGadgetInfo* gather_gadget);

  // .proto.WorktopInfo worktop = 14;
  bool has_worktop() const;
  void clear_worktop();
  static const int kWorktopFieldNumber = 14;
  const ::proto::WorktopInfo& worktop() const;
  ::proto::WorktopInfo* mutable_worktop();
  ::proto::WorktopInfo* release_worktop();
  void set_allocated_worktop(::proto::WorktopInfo* worktop);

  // .proto.ClientGadgetInfo client_gadget = 15;
  bool has_client_gadget() const;
  void clear_client_gadget();
  static const int kClientGadgetFieldNumber = 15;
  const ::proto::ClientGadgetInfo& client_gadget() const;
  ::proto::ClientGadgetInfo* mutable_client_gadget();
  ::proto::ClientGadgetInfo* release_client_gadget();
  void set_allocated_client_gadget(::proto::ClientGadgetInfo* client_gadget);

  // .proto.PlatformInfo platform = 16;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 16;
  const ::proto::PlatformInfo& platform() const;
  ::proto::PlatformInfo* mutable_platform();
  ::proto::PlatformInfo* release_platform();
  void set_allocated_platform(::proto::PlatformInfo* platform);

  // .proto.WeatherInfo weather = 17;
  bool has_weather() const;
  void clear_weather();
  static const int kWeatherFieldNumber = 17;
  const ::proto::WeatherInfo& weather() const;
  ::proto::WeatherInfo* mutable_weather();
  ::proto::WeatherInfo* release_weather();
  void set_allocated_weather(::proto::WeatherInfo* weather);

  // .proto.AbilityGadgetInfo ability_gadget = 18;
  bool has_ability_gadget() const;
  void clear_ability_gadget();
  static const int kAbilityGadgetFieldNumber = 18;
  const ::proto::AbilityGadgetInfo& ability_gadget() const;
  ::proto::AbilityGadgetInfo* mutable_ability_gadget();
  ::proto::AbilityGadgetInfo* release_ability_gadget();
  void set_allocated_ability_gadget(::proto::AbilityGadgetInfo* ability_gadget);

  // .proto.StatueGadgetInfo statue_gadget = 19;
  bool has_statue_gadget() const;
  void clear_statue_gadget();
  static const int kStatueGadgetFieldNumber = 19;
  const ::proto::StatueGadgetInfo& statue_gadget() const;
  ::proto::StatueGadgetInfo* mutable_statue_gadget();
  ::proto::StatueGadgetInfo* release_statue_gadget();
  void set_allocated_statue_gadget(::proto::StatueGadgetInfo* statue_gadget);

  // .proto.BossChestInfo boss_chest = 20;
  bool has_boss_chest() const;
  void clear_boss_chest();
  static const int kBossChestFieldNumber = 20;
  const ::proto::BossChestInfo& boss_chest() const;
  ::proto::BossChestInfo* mutable_boss_chest();
  ::proto::BossChestInfo* release_boss_chest();
  void set_allocated_boss_chest(::proto::BossChestInfo* boss_chest);

  // .proto.BlossomChestInfo blossom_chest = 41;
  bool has_blossom_chest() const;
  void clear_blossom_chest();
  static const int kBlossomChestFieldNumber = 41;
  const ::proto::BlossomChestInfo& blossom_chest() const;
  ::proto::BlossomChestInfo* mutable_blossom_chest();
  ::proto::BlossomChestInfo* release_blossom_chest();
  void set_allocated_blossom_chest(::proto::BlossomChestInfo* blossom_chest);

  ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:proto.SceneGadgetInfo)
 private:
  void set_has_trifle_item();
  void set_has_gather_gadget();
  void set_has_worktop();
  void set_has_client_gadget();
  void set_has_platform();
  void set_has_weather();
  void set_has_ability_gadget();
  void set_has_statue_gadget();
  void set_has_boss_chest();
  void set_has_blossom_chest();

  inline bool has_content() const;
  void clear_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadget_id_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 owner_entity_id_;
  int born_type_;
  ::google::protobuf::uint32 gadget_state_;
  ::google::protobuf::uint32 gadget_type_;
  ::google::protobuf::uint32 authority_peer_id_;
  bool is_show_cutscene_;
  bool is_enable_interact_;
  ::google::protobuf::uint32 interact_id_;
  ::google::protobuf::uint32 mark_flag_;
  union ContentUnion {
    ContentUnion() {}
    ::proto::Item* trifle_item_;
    ::proto::GatherGadgetInfo* gather_gadget_;
    ::proto::WorktopInfo* worktop_;
    ::proto::ClientGadgetInfo* client_gadget_;
    ::proto::PlatformInfo* platform_;
    ::proto::WeatherInfo* weather_;
    ::proto::AbilityGadgetInfo* ability_gadget_;
    ::proto::StatueGadgetInfo* statue_gadget_;
    ::proto::BossChestInfo* boss_chest_;
    ::proto::BlossomChestInfo* blossom_chest_;
  } content_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnimatorParameterValueInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AnimatorParameterValueInfo) */ {
 public:
  AnimatorParameterValueInfo();
  virtual ~AnimatorParameterValueInfo();

  AnimatorParameterValueInfo(const AnimatorParameterValueInfo& from);

  inline AnimatorParameterValueInfo& operator=(const AnimatorParameterValueInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnimatorParameterValueInfo(AnimatorParameterValueInfo&& from) noexcept
    : AnimatorParameterValueInfo() {
    *this = ::std::move(from);
  }

  inline AnimatorParameterValueInfo& operator=(AnimatorParameterValueInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnimatorParameterValueInfo& default_instance();

  enum ParaValCase {
    kIntVal = 2,
    kFloatVal = 3,
    kBoolVal = 4,
    PARAVAL_NOT_SET = 0,
  };

  static inline const AnimatorParameterValueInfo* internal_default_instance() {
    return reinterpret_cast<const AnimatorParameterValueInfo*>(
               &_AnimatorParameterValueInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(AnimatorParameterValueInfo* other);
  friend void swap(AnimatorParameterValueInfo& a, AnimatorParameterValueInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnimatorParameterValueInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AnimatorParameterValueInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnimatorParameterValueInfo& from);
  void MergeFrom(const AnimatorParameterValueInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnimatorParameterValueInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 para_type = 1;
  void clear_para_type();
  static const int kParaTypeFieldNumber = 1;
  ::google::protobuf::uint32 para_type() const;
  void set_para_type(::google::protobuf::uint32 value);

  // int32 int_val = 2;
  private:
  bool has_int_val() const;
  public:
  void clear_int_val();
  static const int kIntValFieldNumber = 2;
  ::google::protobuf::int32 int_val() const;
  void set_int_val(::google::protobuf::int32 value);

  // float float_val = 3;
  private:
  bool has_float_val() const;
  public:
  void clear_float_val();
  static const int kFloatValFieldNumber = 3;
  float float_val() const;
  void set_float_val(float value);

  // bool bool_val = 4;
  private:
  bool has_bool_val() const;
  public:
  void clear_bool_val();
  static const int kBoolValFieldNumber = 4;
  bool bool_val() const;
  void set_bool_val(bool value);

  ParaValCase paraVal_case() const;
  // @@protoc_insertion_point(class_scope:proto.AnimatorParameterValueInfo)
 private:
  void set_has_int_val();
  void set_has_float_val();
  void set_has_bool_val();

  inline bool has_paraVal() const;
  void clear_paraVal();
  inline void clear_has_paraVal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 para_type_;
  union ParaValUnion {
    ParaValUnion() {}
    ::google::protobuf::int32 int_val_;
    float float_val_;
    bool bool_val_;
  } paraVal_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServantInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServantInfo) */ {
 public:
  ServantInfo();
  virtual ~ServantInfo();

  ServantInfo(const ServantInfo& from);

  inline ServantInfo& operator=(const ServantInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServantInfo(ServantInfo&& from) noexcept
    : ServantInfo() {
    *this = ::std::move(from);
  }

  inline ServantInfo& operator=(ServantInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServantInfo& default_instance();

  static inline const ServantInfo* internal_default_instance() {
    return reinterpret_cast<const ServantInfo*>(
               &_ServantInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(ServantInfo* other);
  friend void swap(ServantInfo& a, ServantInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServantInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ServantInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServantInfo& from);
  void MergeFrom(const ServantInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServantInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 master_entity_id = 1;
  void clear_master_entity_id();
  static const int kMasterEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 master_entity_id() const;
  void set_master_entity_id(::google::protobuf::uint32 value);

  // uint32 born_slot_index = 2;
  void clear_born_slot_index();
  static const int kBornSlotIndexFieldNumber = 2;
  ::google::protobuf::uint32 born_slot_index() const;
  void set_born_slot_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServantInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 master_entity_id_;
  ::google::protobuf::uint32 born_slot_index_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneEntityAiInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityAiInfo) */ {
 public:
  SceneEntityAiInfo();
  virtual ~SceneEntityAiInfo();

  SceneEntityAiInfo(const SceneEntityAiInfo& from);

  inline SceneEntityAiInfo& operator=(const SceneEntityAiInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityAiInfo(SceneEntityAiInfo&& from) noexcept
    : SceneEntityAiInfo() {
    *this = ::std::move(from);
  }

  inline SceneEntityAiInfo& operator=(SceneEntityAiInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityAiInfo& default_instance();

  static inline const SceneEntityAiInfo* internal_default_instance() {
    return reinterpret_cast<const SceneEntityAiInfo*>(
               &_SceneEntityAiInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(SceneEntityAiInfo* other);
  friend void swap(SceneEntityAiInfo& a, SceneEntityAiInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityAiInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityAiInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityAiInfo& from);
  void MergeFrom(const SceneEntityAiInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityAiInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> skill_cd_map = 3;
  int skill_cd_map_size() const;
  void clear_skill_cd_map();
  static const int kSkillCdMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_cd_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_cd_map();

  // map<uint32, uint32> ai_threat_map = 5;
  int ai_threat_map_size() const;
  void clear_ai_threat_map();
  static const int kAiThreatMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      ai_threat_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_ai_threat_map();

  // .proto.Vector born_pos = 2;
  bool has_born_pos() const;
  void clear_born_pos();
  static const int kBornPosFieldNumber = 2;
  const ::proto::Vector& born_pos() const;
  ::proto::Vector* mutable_born_pos();
  ::proto::Vector* release_born_pos();
  void set_allocated_born_pos(::proto::Vector* born_pos);

  // .proto.ServantInfo servant_info = 4;
  bool has_servant_info() const;
  void clear_servant_info();
  static const int kServantInfoFieldNumber = 4;
  const ::proto::ServantInfo& servant_info() const;
  ::proto::ServantInfo* mutable_servant_info();
  ::proto::ServantInfo* release_servant_info();
  void set_allocated_servant_info(::proto::ServantInfo* servant_info);

  // bool is_ai_open = 1;
  void clear_is_ai_open();
  static const int kIsAiOpenFieldNumber = 1;
  bool is_ai_open() const;
  void set_is_ai_open(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityAiInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneEntityAiInfo_SkillCdMapEntry : public ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_SkillCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_SkillCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneEntityAiInfo_SkillCdMapEntry();
    SceneEntityAiInfo_SkillCdMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEntityAiInfo_SkillCdMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEntityAiInfo_SkillCdMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEntityAiInfo_SkillCdMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_cd_map_;
  private:
  public:
  class SceneEntityAiInfo_AiThreatMapEntry : public ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_AiThreatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEntityAiInfo_AiThreatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SceneEntityAiInfo_AiThreatMapEntry();
    SceneEntityAiInfo_AiThreatMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEntityAiInfo_AiThreatMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEntityAiInfo_AiThreatMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEntityAiInfo_AiThreatMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > ai_threat_map_;
  private:
  ::proto::Vector* born_pos_;
  ::proto::ServantInfo* servant_info_;
  bool is_ai_open_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class EntityRendererChangedInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityRendererChangedInfo) */ {
 public:
  EntityRendererChangedInfo();
  virtual ~EntityRendererChangedInfo();

  EntityRendererChangedInfo(const EntityRendererChangedInfo& from);

  inline EntityRendererChangedInfo& operator=(const EntityRendererChangedInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityRendererChangedInfo(EntityRendererChangedInfo&& from) noexcept
    : EntityRendererChangedInfo() {
    *this = ::std::move(from);
  }

  inline EntityRendererChangedInfo& operator=(EntityRendererChangedInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityRendererChangedInfo& default_instance();

  static inline const EntityRendererChangedInfo* internal_default_instance() {
    return reinterpret_cast<const EntityRendererChangedInfo*>(
               &_EntityRendererChangedInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(EntityRendererChangedInfo* other);
  friend void swap(EntityRendererChangedInfo& a, EntityRendererChangedInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityRendererChangedInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityRendererChangedInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityRendererChangedInfo& from);
  void MergeFrom(const EntityRendererChangedInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityRendererChangedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, int32> changed_renderers = 1;
  int changed_renderers_size() const;
  void clear_changed_renderers();
  static const int kChangedRenderersFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      changed_renderers() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_changed_renderers();

  // @@protoc_insertion_point(class_scope:proto.EntityRendererChangedInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EntityRendererChangedInfo_ChangedRenderersEntry : public ::google::protobuf::internal::MapEntry<EntityRendererChangedInfo_ChangedRenderersEntry, 
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EntityRendererChangedInfo_ChangedRenderersEntry, 
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    EntityRendererChangedInfo_ChangedRenderersEntry();
    EntityRendererChangedInfo_ChangedRenderersEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EntityRendererChangedInfo_ChangedRenderersEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EntityRendererChangedInfo_ChangedRenderersEntry,
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > changed_renderers_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityInfo) */ {
 public:
  SceneEntityInfo();
  virtual ~SceneEntityInfo();

  SceneEntityInfo(const SceneEntityInfo& from);

  inline SceneEntityInfo& operator=(const SceneEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityInfo(SceneEntityInfo&& from) noexcept
    : SceneEntityInfo() {
    *this = ::std::move(from);
  }

  inline SceneEntityInfo& operator=(SceneEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityInfo& default_instance();

  enum EntityCase {
    kAvatar = 10,
    kMonster = 11,
    kNpc = 12,
    kGadget = 13,
    ENTITY_NOT_SET = 0,
  };

  static inline const SceneEntityInfo* internal_default_instance() {
    return reinterpret_cast<const SceneEntityInfo*>(
               &_SceneEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(SceneEntityInfo* other);
  friend void swap(SceneEntityInfo& a, SceneEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityInfo& from);
  void MergeFrom(const SceneEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 5;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // map<uint32, float> fight_prop_map = 6;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // map<int32, .proto.AnimatorParameterValueInfo> animator_para_map = 9;
  int animator_para_map_size() const;
  void clear_animator_para_map();
  static const int kAnimatorParaMapFieldNumber = 9;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >&
      animator_para_map() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >*
      mutable_animator_para_map();

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes entity_client_data = 19;
  void clear_entity_client_data();
  static const int kEntityClientDataFieldNumber = 19;
  const ::std::string& entity_client_data() const;
  void set_entity_client_data(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_client_data(::std::string&& value);
  #endif
  void set_entity_client_data(const char* value);
  void set_entity_client_data(const void* value, size_t size);
  ::std::string* mutable_entity_client_data();
  ::std::string* release_entity_client_data();
  void set_allocated_entity_client_data(::std::string* entity_client_data);

  // .proto.MotionInfo motion_info = 4;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 4;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // .proto.AbilitySyncStateInfo ability_info = 8;
  bool has_ability_info() const;
  void clear_ability_info();
  static const int kAbilityInfoFieldNumber = 8;
  const ::proto::AbilitySyncStateInfo& ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_ability_info();
  ::proto::AbilitySyncStateInfo* release_ability_info();
  void set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info);

  // .proto.EntityRendererChangedInfo renderer_changed_info = 14;
  bool has_renderer_changed_info() const;
  void clear_renderer_changed_info();
  static const int kRendererChangedInfoFieldNumber = 14;
  const ::proto::EntityRendererChangedInfo& renderer_changed_info() const;
  ::proto::EntityRendererChangedInfo* mutable_renderer_changed_info();
  ::proto::EntityRendererChangedInfo* release_renderer_changed_info();
  void set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info);

  // .proto.SceneEntityAiInfo ai_info = 15;
  bool has_ai_info() const;
  void clear_ai_info();
  static const int kAiInfoFieldNumber = 15;
  const ::proto::SceneEntityAiInfo& ai_info() const;
  ::proto::SceneEntityAiInfo* mutable_ai_info();
  ::proto::SceneEntityAiInfo* release_ai_info();
  void set_allocated_ai_info(::proto::SceneEntityAiInfo* ai_info);

  // .proto.ProtEntityType entity_type = 1;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  ::proto::ProtEntityType entity_type() const;
  void set_entity_type(::proto::ProtEntityType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 life_state = 7;
  void clear_life_state();
  static const int kLifeStateFieldNumber = 7;
  ::google::protobuf::uint32 life_state() const;
  void set_life_state(::google::protobuf::uint32 value);

  // uint32 last_move_scene_time_ms = 17;
  void clear_last_move_scene_time_ms();
  static const int kLastMoveSceneTimeMsFieldNumber = 17;
  ::google::protobuf::uint32 last_move_scene_time_ms() const;
  void set_last_move_scene_time_ms(::google::protobuf::uint32 value);

  // uint32 last_move_reliable_seq = 18;
  void clear_last_move_reliable_seq();
  static const int kLastMoveReliableSeqFieldNumber = 18;
  ::google::protobuf::uint32 last_move_reliable_seq() const;
  void set_last_move_reliable_seq(::google::protobuf::uint32 value);

  // .proto.SceneAvatarInfo avatar = 10;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 10;
  const ::proto::SceneAvatarInfo& avatar() const;
  ::proto::SceneAvatarInfo* mutable_avatar();
  ::proto::SceneAvatarInfo* release_avatar();
  void set_allocated_avatar(::proto::SceneAvatarInfo* avatar);

  // .proto.SceneMonsterInfo monster = 11;
  bool has_monster() const;
  void clear_monster();
  static const int kMonsterFieldNumber = 11;
  const ::proto::SceneMonsterInfo& monster() const;
  ::proto::SceneMonsterInfo* mutable_monster();
  ::proto::SceneMonsterInfo* release_monster();
  void set_allocated_monster(::proto::SceneMonsterInfo* monster);

  // .proto.SceneNpcInfo npc = 12;
  bool has_npc() const;
  void clear_npc();
  static const int kNpcFieldNumber = 12;
  const ::proto::SceneNpcInfo& npc() const;
  ::proto::SceneNpcInfo* mutable_npc();
  ::proto::SceneNpcInfo* release_npc();
  void set_allocated_npc(::proto::SceneNpcInfo* npc);

  // .proto.SceneGadgetInfo gadget = 13;
  bool has_gadget() const;
  void clear_gadget();
  static const int kGadgetFieldNumber = 13;
  const ::proto::SceneGadgetInfo& gadget() const;
  ::proto::SceneGadgetInfo* mutable_gadget();
  ::proto::SceneGadgetInfo* release_gadget();
  void set_allocated_gadget(::proto::SceneGadgetInfo* gadget);

  EntityCase entity_case() const;
  // @@protoc_insertion_point(class_scope:proto.SceneEntityInfo)
 private:
  void set_has_avatar();
  void set_has_monster();
  void set_has_npc();
  void set_has_gadget();

  inline bool has_entity() const;
  void clear_entity();
  inline void clear_has_entity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneEntityInfo_PropMapEntry : public ::google::protobuf::internal::MapEntry<SceneEntityInfo_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEntityInfo_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    SceneEntityInfo_PropMapEntry();
    SceneEntityInfo_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEntityInfo_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEntityInfo_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEntityInfo_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  public:
  class SceneEntityInfo_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<SceneEntityInfo_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEntityInfo_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    SceneEntityInfo_FightPropMapEntry();
    SceneEntityInfo_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEntityInfo_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEntityInfo_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEntityInfo_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  public:
  class SceneEntityInfo_AnimatorParaMapEntry : public ::google::protobuf::internal::MapEntry<SceneEntityInfo_AnimatorParaMapEntry, 
      ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEntityInfo_AnimatorParaMapEntry, 
      ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    SceneEntityInfo_AnimatorParaMapEntry();
    SceneEntityInfo_AnimatorParaMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEntityInfo_AnimatorParaMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEntityInfo_AnimatorParaMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEntityInfo_AnimatorParaMapEntry,
      ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > animator_para_map_;
  private:
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr entity_client_data_;
  ::proto::MotionInfo* motion_info_;
  ::proto::AbilitySyncStateInfo* ability_info_;
  ::proto::EntityRendererChangedInfo* renderer_changed_info_;
  ::proto::SceneEntityAiInfo* ai_info_;
  int entity_type_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 life_state_;
  ::google::protobuf::uint32 last_move_scene_time_ms_;
  ::google::protobuf::uint32 last_move_reliable_seq_;
  union EntityUnion {
    EntityUnion() {}
    ::proto::SceneAvatarInfo* avatar_;
    ::proto::SceneMonsterInfo* monster_;
    ::proto::SceneNpcInfo* npc_;
    ::proto::SceneGadgetInfo* gadget_;
  } entity_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateGadgetInfo_Chest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateGadgetInfo.Chest) */ {
 public:
  CreateGadgetInfo_Chest();
  virtual ~CreateGadgetInfo_Chest();

  CreateGadgetInfo_Chest(const CreateGadgetInfo_Chest& from);

  inline CreateGadgetInfo_Chest& operator=(const CreateGadgetInfo_Chest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateGadgetInfo_Chest(CreateGadgetInfo_Chest&& from) noexcept
    : CreateGadgetInfo_Chest() {
    *this = ::std::move(from);
  }

  inline CreateGadgetInfo_Chest& operator=(CreateGadgetInfo_Chest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGadgetInfo_Chest& default_instance();

  static inline const CreateGadgetInfo_Chest* internal_default_instance() {
    return reinterpret_cast<const CreateGadgetInfo_Chest*>(
               &_CreateGadgetInfo_Chest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(CreateGadgetInfo_Chest* other);
  friend void swap(CreateGadgetInfo_Chest& a, CreateGadgetInfo_Chest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateGadgetInfo_Chest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateGadgetInfo_Chest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateGadgetInfo_Chest& from);
  void MergeFrom(const CreateGadgetInfo_Chest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateGadgetInfo_Chest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 chest_drop_id = 1;
  void clear_chest_drop_id();
  static const int kChestDropIdFieldNumber = 1;
  ::google::protobuf::uint32 chest_drop_id() const;
  void set_chest_drop_id(::google::protobuf::uint32 value);

  // bool is_show_cutscene = 2;
  void clear_is_show_cutscene();
  static const int kIsShowCutsceneFieldNumber = 2;
  bool is_show_cutscene() const;
  void set_is_show_cutscene(bool value);

  // @@protoc_insertion_point(class_scope:proto.CreateGadgetInfo.Chest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chest_drop_id_;
  bool is_show_cutscene_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateGadgetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateGadgetInfo) */ {
 public:
  CreateGadgetInfo();
  virtual ~CreateGadgetInfo();

  CreateGadgetInfo(const CreateGadgetInfo& from);

  inline CreateGadgetInfo& operator=(const CreateGadgetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateGadgetInfo(CreateGadgetInfo&& from) noexcept
    : CreateGadgetInfo() {
    *this = ::std::move(from);
  }

  inline CreateGadgetInfo& operator=(CreateGadgetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateGadgetInfo& default_instance();

  static inline const CreateGadgetInfo* internal_default_instance() {
    return reinterpret_cast<const CreateGadgetInfo*>(
               &_CreateGadgetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(CreateGadgetInfo* other);
  friend void swap(CreateGadgetInfo& a, CreateGadgetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateGadgetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateGadgetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateGadgetInfo& from);
  void MergeFrom(const CreateGadgetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateGadgetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateGadgetInfo_Chest Chest;

  // accessors -------------------------------------------------------

  // .proto.CreateGadgetInfo.Chest chest = 2;
  bool has_chest() const;
  void clear_chest();
  static const int kChestFieldNumber = 2;
  const ::proto::CreateGadgetInfo_Chest& chest() const;
  ::proto::CreateGadgetInfo_Chest* mutable_chest();
  ::proto::CreateGadgetInfo_Chest* release_chest();
  void set_allocated_chest(::proto::CreateGadgetInfo_Chest* chest);

  // .proto.GadgetBornType born_type = 1;
  void clear_born_type();
  static const int kBornTypeFieldNumber = 1;
  ::proto::GadgetBornType born_type() const;
  void set_born_type(::proto::GadgetBornType value);

  // @@protoc_insertion_point(class_scope:proto.CreateGadgetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CreateGadgetInfo_Chest* chest_;
  int born_type_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateEntityInfo) */ {
 public:
  CreateEntityInfo();
  virtual ~CreateEntityInfo();

  CreateEntityInfo(const CreateEntityInfo& from);

  inline CreateEntityInfo& operator=(const CreateEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateEntityInfo(CreateEntityInfo&& from) noexcept
    : CreateEntityInfo() {
    *this = ::std::move(from);
  }

  inline CreateEntityInfo& operator=(CreateEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateEntityInfo& default_instance();

  enum EntityCase {
    kMonsterId = 1,
    kNpcId = 2,
    kGadgetId = 3,
    kItemId = 4,
    ENTITY_NOT_SET = 0,
  };

  enum EntityCreateInfoCase {
    kGadget = 13,
    ENTITY_CREATE_INFO_NOT_SET = 0,
  };

  static inline const CreateEntityInfo* internal_default_instance() {
    return reinterpret_cast<const CreateEntityInfo*>(
               &_CreateEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(CreateEntityInfo* other);
  friend void swap(CreateEntityInfo& a, CreateEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateEntityInfo& from);
  void MergeFrom(const CreateEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 6;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 6;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 7;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 7;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 scene_id = 10;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 10;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 room_id = 11;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 11;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 client_unique_id = 12;
  void clear_client_unique_id();
  static const int kClientUniqueIdFieldNumber = 12;
  ::google::protobuf::uint32 client_unique_id() const;
  void set_client_unique_id(::google::protobuf::uint32 value);

  // uint32 monster_id = 1;
  private:
  bool has_monster_id() const;
  public:
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 npc_id = 2;
  private:
  bool has_npc_id() const;
  public:
  void clear_npc_id();
  static const int kNpcIdFieldNumber = 2;
  ::google::protobuf::uint32 npc_id() const;
  void set_npc_id(::google::protobuf::uint32 value);

  // uint32 gadget_id = 3;
  private:
  bool has_gadget_id() const;
  public:
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 3;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // uint32 item_id = 4;
  private:
  bool has_item_id() const;
  public:
  void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // .proto.CreateGadgetInfo gadget = 13;
  bool has_gadget() const;
  void clear_gadget();
  static const int kGadgetFieldNumber = 13;
  const ::proto::CreateGadgetInfo& gadget() const;
  ::proto::CreateGadgetInfo* mutable_gadget();
  ::proto::CreateGadgetInfo* release_gadget();
  void set_allocated_gadget(::proto::CreateGadgetInfo* gadget);

  EntityCase entity_case() const;
  EntityCreateInfoCase entity_create_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.CreateEntityInfo)
 private:
  void set_has_monster_id();
  void set_has_npc_id();
  void set_has_gadget_id();
  void set_has_item_id();
  void set_has_gadget();

  inline bool has_entity() const;
  void clear_entity();
  inline void clear_has_entity();

  inline bool has_entity_create_info() const;
  void clear_entity_create_info();
  inline void clear_has_entity_create_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 client_unique_id_;
  union EntityUnion {
    EntityUnion() {}
    ::google::protobuf::uint32 monster_id_;
    ::google::protobuf::uint32 npc_id_;
    ::google::protobuf::uint32 gadget_id_;
    ::google::protobuf::uint32 item_id_;
  } entity_;
  union EntityCreateInfoUnion {
    EntityCreateInfoUnion() {}
    ::proto::CreateGadgetInfo* gadget_;
  } entity_create_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrialAvatarGrantRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TrialAvatarGrantRecord) */ {
 public:
  TrialAvatarGrantRecord();
  virtual ~TrialAvatarGrantRecord();

  TrialAvatarGrantRecord(const TrialAvatarGrantRecord& from);

  inline TrialAvatarGrantRecord& operator=(const TrialAvatarGrantRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrialAvatarGrantRecord(TrialAvatarGrantRecord&& from) noexcept
    : TrialAvatarGrantRecord() {
    *this = ::std::move(from);
  }

  inline TrialAvatarGrantRecord& operator=(TrialAvatarGrantRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrialAvatarGrantRecord& default_instance();

  static inline const TrialAvatarGrantRecord* internal_default_instance() {
    return reinterpret_cast<const TrialAvatarGrantRecord*>(
               &_TrialAvatarGrantRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(TrialAvatarGrantRecord* other);
  friend void swap(TrialAvatarGrantRecord& a, TrialAvatarGrantRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrialAvatarGrantRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  TrialAvatarGrantRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrialAvatarGrantRecord& from);
  void MergeFrom(const TrialAvatarGrantRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrialAvatarGrantRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TrialAvatarGrantRecord_GrantReason GrantReason;
  static const GrantReason INVALID =
    TrialAvatarGrantRecord_GrantReason_INVALID;
  static const GrantReason GRANT_BY_QUEST =
    TrialAvatarGrantRecord_GrantReason_GRANT_BY_QUEST;
  static inline bool GrantReason_IsValid(int value) {
    return TrialAvatarGrantRecord_GrantReason_IsValid(value);
  }
  static const GrantReason GrantReason_MIN =
    TrialAvatarGrantRecord_GrantReason_GrantReason_MIN;
  static const GrantReason GrantReason_MAX =
    TrialAvatarGrantRecord_GrantReason_GrantReason_MAX;
  static const int GrantReason_ARRAYSIZE =
    TrialAvatarGrantRecord_GrantReason_GrantReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  GrantReason_descriptor() {
    return TrialAvatarGrantRecord_GrantReason_descriptor();
  }
  static inline const ::std::string& GrantReason_Name(GrantReason value) {
    return TrialAvatarGrantRecord_GrantReason_Name(value);
  }
  static inline bool GrantReason_Parse(const ::std::string& name,
      GrantReason* value) {
    return TrialAvatarGrantRecord_GrantReason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 grant_reason = 1;
  void clear_grant_reason();
  static const int kGrantReasonFieldNumber = 1;
  ::google::protobuf::uint32 grant_reason() const;
  void set_grant_reason(::google::protobuf::uint32 value);

  // uint32 from_parent_quest_id = 2;
  void clear_from_parent_quest_id();
  static const int kFromParentQuestIdFieldNumber = 2;
  ::google::protobuf::uint32 from_parent_quest_id() const;
  void set_from_parent_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TrialAvatarGrantRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 grant_reason_;
  ::google::protobuf::uint32 from_parent_quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TrialAvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TrialAvatarInfo) */ {
 public:
  TrialAvatarInfo();
  virtual ~TrialAvatarInfo();

  TrialAvatarInfo(const TrialAvatarInfo& from);

  inline TrialAvatarInfo& operator=(const TrialAvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TrialAvatarInfo(TrialAvatarInfo&& from) noexcept
    : TrialAvatarInfo() {
    *this = ::std::move(from);
  }

  inline TrialAvatarInfo& operator=(TrialAvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TrialAvatarInfo& default_instance();

  static inline const TrialAvatarInfo* internal_default_instance() {
    return reinterpret_cast<const TrialAvatarInfo*>(
               &_TrialAvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(TrialAvatarInfo* other);
  friend void swap(TrialAvatarInfo& a, TrialAvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TrialAvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TrialAvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TrialAvatarInfo& from);
  void MergeFrom(const TrialAvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TrialAvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Item trial_equip_list = 2;
  int trial_equip_list_size() const;
  void clear_trial_equip_list();
  static const int kTrialEquipListFieldNumber = 2;
  const ::proto::Item& trial_equip_list(int index) const;
  ::proto::Item* mutable_trial_equip_list(int index);
  ::proto::Item* add_trial_equip_list();
  ::google::protobuf::RepeatedPtrField< ::proto::Item >*
      mutable_trial_equip_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::Item >&
      trial_equip_list() const;

  // .proto.TrialAvatarGrantRecord grant_record = 3;
  bool has_grant_record() const;
  void clear_grant_record();
  static const int kGrantRecordFieldNumber = 3;
  const ::proto::TrialAvatarGrantRecord& grant_record() const;
  ::proto::TrialAvatarGrantRecord* mutable_grant_record();
  ::proto::TrialAvatarGrantRecord* release_grant_record();
  void set_allocated_grant_record(::proto::TrialAvatarGrantRecord* grant_record);

  // uint32 trial_avatar_id = 1;
  void clear_trial_avatar_id();
  static const int kTrialAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 trial_avatar_id() const;
  void set_trial_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TrialAvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Item > trial_equip_list_;
  ::proto::TrialAvatarGrantRecord* grant_record_;
  ::google::protobuf::uint32 trial_avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarSkillInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarSkillInfo) */ {
 public:
  AvatarSkillInfo();
  virtual ~AvatarSkillInfo();

  AvatarSkillInfo(const AvatarSkillInfo& from);

  inline AvatarSkillInfo& operator=(const AvatarSkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarSkillInfo(AvatarSkillInfo&& from) noexcept
    : AvatarSkillInfo() {
    *this = ::std::move(from);
  }

  inline AvatarSkillInfo& operator=(AvatarSkillInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarSkillInfo& default_instance();

  static inline const AvatarSkillInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarSkillInfo*>(
               &_AvatarSkillInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(AvatarSkillInfo* other);
  friend void swap(AvatarSkillInfo& a, AvatarSkillInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarSkillInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarSkillInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarSkillInfo& from);
  void MergeFrom(const AvatarSkillInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarSkillInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 full_cd_time_list = 2;
  int full_cd_time_list_size() const;
  void clear_full_cd_time_list();
  static const int kFullCdTimeListFieldNumber = 2;
  ::google::protobuf::uint32 full_cd_time_list(int index) const;
  void set_full_cd_time_list(int index, ::google::protobuf::uint32 value);
  void add_full_cd_time_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      full_cd_time_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_full_cd_time_list();

  // uint32 pass_cd_time = 1;
  void clear_pass_cd_time();
  static const int kPassCdTimeFieldNumber = 1;
  ::google::protobuf::uint32 pass_cd_time() const;
  void set_pass_cd_time(::google::protobuf::uint32 value);

  // uint32 max_charge_count = 3;
  void clear_max_charge_count();
  static const int kMaxChargeCountFieldNumber = 3;
  ::google::protobuf::uint32 max_charge_count() const;
  void set_max_charge_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarSkillInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > full_cd_time_list_;
  mutable int _full_cd_time_list_cached_byte_size_;
  ::google::protobuf::uint32 pass_cd_time_;
  ::google::protobuf::uint32 max_charge_count_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarFetterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarFetterInfo) */ {
 public:
  AvatarFetterInfo();
  virtual ~AvatarFetterInfo();

  AvatarFetterInfo(const AvatarFetterInfo& from);

  inline AvatarFetterInfo& operator=(const AvatarFetterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarFetterInfo(AvatarFetterInfo&& from) noexcept
    : AvatarFetterInfo() {
    *this = ::std::move(from);
  }

  inline AvatarFetterInfo& operator=(AvatarFetterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarFetterInfo& default_instance();

  static inline const AvatarFetterInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarFetterInfo*>(
               &_AvatarFetterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(AvatarFetterInfo* other);
  friend void swap(AvatarFetterInfo& a, AvatarFetterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarFetterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarFetterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarFetterInfo& from);
  void MergeFrom(const AvatarFetterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarFetterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 open_id_list = 3;
  int open_id_list_size() const;
  void clear_open_id_list();
  static const int kOpenIdListFieldNumber = 3;
  ::google::protobuf::uint32 open_id_list(int index) const;
  void set_open_id_list(int index, ::google::protobuf::uint32 value);
  void add_open_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      open_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_open_id_list();

  // uint32 exp_number = 1;
  void clear_exp_number();
  static const int kExpNumberFieldNumber = 1;
  ::google::protobuf::uint32 exp_number() const;
  void set_exp_number(::google::protobuf::uint32 value);

  // uint32 exp_level = 2;
  void clear_exp_level();
  static const int kExpLevelFieldNumber = 2;
  ::google::protobuf::uint32 exp_level() const;
  void set_exp_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarFetterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > open_id_list_;
  mutable int _open_id_list_cached_byte_size_;
  ::google::protobuf::uint32 exp_number_;
  ::google::protobuf::uint32 exp_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarExpeditionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarExpeditionInfo) */ {
 public:
  AvatarExpeditionInfo();
  virtual ~AvatarExpeditionInfo();

  AvatarExpeditionInfo(const AvatarExpeditionInfo& from);

  inline AvatarExpeditionInfo& operator=(const AvatarExpeditionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarExpeditionInfo(AvatarExpeditionInfo&& from) noexcept
    : AvatarExpeditionInfo() {
    *this = ::std::move(from);
  }

  inline AvatarExpeditionInfo& operator=(AvatarExpeditionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarExpeditionInfo& default_instance();

  static inline const AvatarExpeditionInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarExpeditionInfo*>(
               &_AvatarExpeditionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(AvatarExpeditionInfo* other);
  friend void swap(AvatarExpeditionInfo& a, AvatarExpeditionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarExpeditionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarExpeditionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarExpeditionInfo& from);
  void MergeFrom(const AvatarExpeditionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarExpeditionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AvatarExpeditionState state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::proto::AvatarExpeditionState state() const;
  void set_state(::proto::AvatarExpeditionState value);

  // uint32 exp_id = 2;
  void clear_exp_id();
  static const int kExpIdFieldNumber = 2;
  ::google::protobuf::uint32 exp_id() const;
  void set_exp_id(::google::protobuf::uint32 value);

  // uint32 hour_time = 3;
  void clear_hour_time();
  static const int kHourTimeFieldNumber = 3;
  ::google::protobuf::uint32 hour_time() const;
  void set_hour_time(::google::protobuf::uint32 value);

  // uint32 start_time = 4;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarExpeditionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  ::google::protobuf::uint32 exp_id_;
  ::google::protobuf::uint32 hour_time_;
  ::google::protobuf::uint32 start_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AvatarInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarInfo) */ {
 public:
  AvatarInfo();
  virtual ~AvatarInfo();

  AvatarInfo(const AvatarInfo& from);

  inline AvatarInfo& operator=(const AvatarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarInfo(AvatarInfo&& from) noexcept
    : AvatarInfo() {
    *this = ::std::move(from);
  }

  inline AvatarInfo& operator=(AvatarInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarInfo& default_instance();

  static inline const AvatarInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarInfo*>(
               &_AvatarInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(AvatarInfo* other);
  friend void swap(AvatarInfo& a, AvatarInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarInfo& from);
  void MergeFrom(const AvatarInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 3;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // repeated uint64 equip_guid_list = 5;
  int equip_guid_list_size() const;
  void clear_equip_guid_list();
  static const int kEquipGuidListFieldNumber = 5;
  ::google::protobuf::uint64 equip_guid_list(int index) const;
  void set_equip_guid_list(int index, ::google::protobuf::uint64 value);
  void add_equip_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equip_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equip_guid_list();

  // repeated uint32 talent_id_list = 6;
  int talent_id_list_size() const;
  void clear_talent_id_list();
  static const int kTalentIdListFieldNumber = 6;
  ::google::protobuf::uint32 talent_id_list(int index) const;
  void set_talent_id_list(int index, ::google::protobuf::uint32 value);
  void add_talent_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      talent_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_talent_id_list();

  // map<uint32, float> fight_prop_map = 7;
  int fight_prop_map_size() const;
  void clear_fight_prop_map();
  static const int kFightPropMapFieldNumber = 7;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      fight_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_fight_prop_map();

  // map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
  int skill_map_size() const;
  void clear_skill_map();
  static const int kSkillMapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >&
      skill_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >*
      mutable_skill_map();

  // repeated uint32 inherent_proud_skill_list = 14;
  int inherent_proud_skill_list_size() const;
  void clear_inherent_proud_skill_list();
  static const int kInherentProudSkillListFieldNumber = 14;
  ::google::protobuf::uint32 inherent_proud_skill_list(int index) const;
  void set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value);
  void add_inherent_proud_skill_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      inherent_proud_skill_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_inherent_proud_skill_list();

  // map<uint32, uint32> skill_level_map = 15;
  int skill_level_map_size() const;
  void clear_skill_level_map();
  static const int kSkillLevelMapFieldNumber = 15;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_level_map();

  // map<uint32, uint32> proud_skill_extra_level_map = 17;
  int proud_skill_extra_level_map_size() const;
  void clear_proud_skill_extra_level_map();
  static const int kProudSkillExtraLevelMapFieldNumber = 17;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      proud_skill_extra_level_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_proud_skill_extra_level_map();

  // .proto.TrialAvatarInfo trial_avatar_info = 9;
  bool has_trial_avatar_info() const;
  void clear_trial_avatar_info();
  static const int kTrialAvatarInfoFieldNumber = 9;
  const ::proto::TrialAvatarInfo& trial_avatar_info() const;
  ::proto::TrialAvatarInfo* mutable_trial_avatar_info();
  ::proto::TrialAvatarInfo* release_trial_avatar_info();
  void set_allocated_trial_avatar_info(::proto::TrialAvatarInfo* trial_avatar_info);

  // .proto.AvatarFetterInfo fetter_info = 12;
  bool has_fetter_info() const;
  void clear_fetter_info();
  static const int kFetterInfoFieldNumber = 12;
  const ::proto::AvatarFetterInfo& fetter_info() const;
  ::proto::AvatarFetterInfo* mutable_fetter_info();
  ::proto::AvatarFetterInfo* release_fetter_info();
  void set_allocated_fetter_info(::proto::AvatarFetterInfo* fetter_info);

  // uint64 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 life_state = 4;
  void clear_life_state();
  static const int kLifeStateFieldNumber = 4;
  ::google::protobuf::uint32 life_state() const;
  void set_life_state(::google::protobuf::uint32 value);

  // uint32 skill_depot_id = 11;
  void clear_skill_depot_id();
  static const int kSkillDepotIdFieldNumber = 11;
  ::google::protobuf::uint32 skill_depot_id() const;
  void set_skill_depot_id(::google::protobuf::uint32 value);

  // uint32 core_proud_skill_level = 13;
  void clear_core_proud_skill_level();
  static const int kCoreProudSkillLevelFieldNumber = 13;
  ::google::protobuf::uint32 core_proud_skill_level() const;
  void set_core_proud_skill_level(::google::protobuf::uint32 value);

  // .proto.AvatarExpeditionState expedition_state = 16;
  void clear_expedition_state();
  static const int kExpeditionStateFieldNumber = 16;
  ::proto::AvatarExpeditionState expedition_state() const;
  void set_expedition_state(::proto::AvatarExpeditionState value);

  // bool is_focus = 18;
  void clear_is_focus();
  static const int kIsFocusFieldNumber = 18;
  bool is_focus() const;
  void set_is_focus(bool value);

  // uint32 avatar_type = 19;
  void clear_avatar_type();
  static const int kAvatarTypeFieldNumber = 19;
  ::google::protobuf::uint32 avatar_type() const;
  void set_avatar_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AvatarInfo_PropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarInfo_PropMapEntry();
    AvatarInfo_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equip_guid_list_;
  mutable int _equip_guid_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > talent_id_list_;
  mutable int _talent_id_list_cached_byte_size_;
  public:
  class AvatarInfo_FightPropMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_FightPropMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    AvatarInfo_FightPropMapEntry();
    AvatarInfo_FightPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_FightPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_FightPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_FightPropMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > fight_prop_map_;
  private:
  public:
  class AvatarInfo_SkillMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_SkillMapEntry, 
      ::google::protobuf::uint32, ::proto::AvatarSkillInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_SkillMapEntry, 
      ::google::protobuf::uint32, ::proto::AvatarSkillInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    AvatarInfo_SkillMapEntry();
    AvatarInfo_SkillMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_SkillMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_SkillMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_SkillMapEntry,
      ::google::protobuf::uint32, ::proto::AvatarSkillInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > skill_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > inherent_proud_skill_list_;
  mutable int _inherent_proud_skill_list_cached_byte_size_;
  public:
  class AvatarInfo_SkillLevelMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_SkillLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AvatarInfo_SkillLevelMapEntry();
    AvatarInfo_SkillLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_SkillLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_SkillLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_SkillLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_level_map_;
  private:
  public:
  class AvatarInfo_ProudSkillExtraLevelMapEntry : public ::google::protobuf::internal::MapEntry<AvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AvatarInfo_ProudSkillExtraLevelMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AvatarInfo_ProudSkillExtraLevelMapEntry();
    AvatarInfo_ProudSkillExtraLevelMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AvatarInfo_ProudSkillExtraLevelMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AvatarInfo_ProudSkillExtraLevelMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > proud_skill_extra_level_map_;
  private:
  ::proto::TrialAvatarInfo* trial_avatar_info_;
  ::proto::AvatarFetterInfo* fetter_info_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 life_state_;
  ::google::protobuf::uint32 skill_depot_id_;
  ::google::protobuf::uint32 core_proud_skill_level_;
  int expedition_state_;
  bool is_focus_;
  ::google::protobuf::uint32 avatar_type_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Quest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Quest) */ {
 public:
  Quest();
  virtual ~Quest();

  Quest(const Quest& from);

  inline Quest& operator=(const Quest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Quest(Quest&& from) noexcept
    : Quest() {
    *this = ::std::move(from);
  }

  inline Quest& operator=(Quest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Quest& default_instance();

  static inline const Quest* internal_default_instance() {
    return reinterpret_cast<const Quest*>(
               &_Quest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(Quest* other);
  friend void swap(Quest& a, Quest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Quest* New() const PROTOBUF_FINAL { return New(NULL); }

  Quest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Quest& from);
  void MergeFrom(const Quest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Quest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 lacked_npc_list = 10;
  int lacked_npc_list_size() const;
  void clear_lacked_npc_list();
  static const int kLackedNpcListFieldNumber = 10;
  ::google::protobuf::uint32 lacked_npc_list(int index) const;
  void set_lacked_npc_list(int index, ::google::protobuf::uint32 value);
  void add_lacked_npc_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lacked_npc_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lacked_npc_list();

  // repeated uint32 finish_progress_list = 11;
  int finish_progress_list_size() const;
  void clear_finish_progress_list();
  static const int kFinishProgressListFieldNumber = 11;
  ::google::protobuf::uint32 finish_progress_list(int index) const;
  void set_finish_progress_list(int index, ::google::protobuf::uint32 value);
  void add_finish_progress_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      finish_progress_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_finish_progress_list();

  // repeated uint32 fail_progress_list = 12;
  int fail_progress_list_size() const;
  void clear_fail_progress_list();
  static const int kFailProgressListFieldNumber = 12;
  ::google::protobuf::uint32 fail_progress_list(int index) const;
  void set_fail_progress_list(int index, ::google::protobuf::uint32 value);
  void add_fail_progress_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fail_progress_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fail_progress_list();

  // map<uint32, uint32> lacked_npc_map = 13;
  int lacked_npc_map_size() const;
  void clear_lacked_npc_map();
  static const int kLackedNpcMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      lacked_npc_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_lacked_npc_map();

  // uint32 quest_id = 1;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // uint32 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // uint32 start_time = 4;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // bool is_random = 5;
  void clear_is_random();
  static const int kIsRandomFieldNumber = 5;
  bool is_random() const;
  void set_is_random(bool value);

  // uint32 parent_quest_id = 6;
  void clear_parent_quest_id();
  static const int kParentQuestIdFieldNumber = 6;
  ::google::protobuf::uint32 parent_quest_id() const;
  void set_parent_quest_id(::google::protobuf::uint32 value);

  // uint32 quest_config_id = 7;
  void clear_quest_config_id();
  static const int kQuestConfigIdFieldNumber = 7;
  ::google::protobuf::uint32 quest_config_id() const;
  void set_quest_config_id(::google::protobuf::uint32 value);

  // uint32 start_game_time = 8;
  void clear_start_game_time();
  static const int kStartGameTimeFieldNumber = 8;
  ::google::protobuf::uint32 start_game_time() const;
  void set_start_game_time(::google::protobuf::uint32 value);

  // uint32 accept_time = 9;
  void clear_accept_time();
  static const int kAcceptTimeFieldNumber = 9;
  ::google::protobuf::uint32 accept_time() const;
  void set_accept_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Quest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lacked_npc_list_;
  mutable int _lacked_npc_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > finish_progress_list_;
  mutable int _finish_progress_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fail_progress_list_;
  mutable int _fail_progress_list_cached_byte_size_;
  public:
  class Quest_LackedNpcMapEntry : public ::google::protobuf::internal::MapEntry<Quest_LackedNpcMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Quest_LackedNpcMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    Quest_LackedNpcMapEntry();
    Quest_LackedNpcMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Quest_LackedNpcMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Quest_LackedNpcMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      Quest_LackedNpcMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > lacked_npc_map_;
  private:
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 start_time_;
  bool is_random_;
  ::google::protobuf::uint32 parent_quest_id_;
  ::google::protobuf::uint32 quest_config_id_;
  ::google::protobuf::uint32 start_game_time_;
  ::google::protobuf::uint32 accept_time_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NpcPositionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NpcPositionInfo) */ {
 public:
  NpcPositionInfo();
  virtual ~NpcPositionInfo();

  NpcPositionInfo(const NpcPositionInfo& from);

  inline NpcPositionInfo& operator=(const NpcPositionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NpcPositionInfo(NpcPositionInfo&& from) noexcept
    : NpcPositionInfo() {
    *this = ::std::move(from);
  }

  inline NpcPositionInfo& operator=(NpcPositionInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NpcPositionInfo& default_instance();

  static inline const NpcPositionInfo* internal_default_instance() {
    return reinterpret_cast<const NpcPositionInfo*>(
               &_NpcPositionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(NpcPositionInfo* other);
  friend void swap(NpcPositionInfo& a, NpcPositionInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NpcPositionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  NpcPositionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NpcPositionInfo& from);
  void MergeFrom(const NpcPositionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NpcPositionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 npc_id = 1;
  void clear_npc_id();
  static const int kNpcIdFieldNumber = 1;
  ::google::protobuf::uint32 npc_id() const;
  void set_npc_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.NpcPositionInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 npc_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailTextContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MailTextContent) */ {
 public:
  MailTextContent();
  virtual ~MailTextContent();

  MailTextContent(const MailTextContent& from);

  inline MailTextContent& operator=(const MailTextContent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailTextContent(MailTextContent&& from) noexcept
    : MailTextContent() {
    *this = ::std::move(from);
  }

  inline MailTextContent& operator=(MailTextContent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailTextContent& default_instance();

  static inline const MailTextContent* internal_default_instance() {
    return reinterpret_cast<const MailTextContent*>(
               &_MailTextContent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(MailTextContent* other);
  friend void swap(MailTextContent& a, MailTextContent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailTextContent* New() const PROTOBUF_FINAL { return New(NULL); }

  MailTextContent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailTextContent& from);
  void MergeFrom(const MailTextContent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailTextContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // string sender = 3;
  void clear_sender();
  static const int kSenderFieldNumber = 3;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // @@protoc_insertion_point(class_scope:proto.MailTextContent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MailItem) */ {
 public:
  MailItem();
  virtual ~MailItem();

  MailItem(const MailItem& from);

  inline MailItem& operator=(const MailItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailItem(MailItem&& from) noexcept
    : MailItem() {
    *this = ::std::move(from);
  }

  inline MailItem& operator=(MailItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailItem& default_instance();

  static inline const MailItem* internal_default_instance() {
    return reinterpret_cast<const MailItem*>(
               &_MailItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(MailItem* other);
  friend void swap(MailItem& a, MailItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailItem* New() const PROTOBUF_FINAL { return New(NULL); }

  MailItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailItem& from);
  void MergeFrom(const MailItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.EquipParam equip_param = 1;
  bool has_equip_param() const;
  void clear_equip_param();
  static const int kEquipParamFieldNumber = 1;
  const ::proto::EquipParam& equip_param() const;
  ::proto::EquipParam* mutable_equip_param();
  ::proto::EquipParam* release_equip_param();
  void set_allocated_equip_param(::proto::EquipParam* equip_param);

  // .proto.MaterialDeleteInfo delete_info = 2;
  bool has_delete_info() const;
  void clear_delete_info();
  static const int kDeleteInfoFieldNumber = 2;
  const ::proto::MaterialDeleteInfo& delete_info() const;
  ::proto::MaterialDeleteInfo* mutable_delete_info();
  ::proto::MaterialDeleteInfo* release_delete_info();
  void set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info);

  // @@protoc_insertion_point(class_scope:proto.MailItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EquipParam* equip_param_;
  ::proto::MaterialDeleteInfo* delete_info_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MailData) */ {
 public:
  MailData();
  virtual ~MailData();

  MailData(const MailData& from);

  inline MailData& operator=(const MailData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailData(MailData&& from) noexcept
    : MailData() {
    *this = ::std::move(from);
  }

  inline MailData& operator=(MailData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailData& default_instance();

  static inline const MailData* internal_default_instance() {
    return reinterpret_cast<const MailData*>(
               &_MailData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(MailData* other);
  friend void swap(MailData& a, MailData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailData* New() const PROTOBUF_FINAL { return New(NULL); }

  MailData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailData& from);
  void MergeFrom(const MailData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MailItem item_list = 7;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 7;
  const ::proto::MailItem& item_list(int index) const;
  ::proto::MailItem* mutable_item_list(int index);
  ::proto::MailItem* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MailItem >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MailItem >&
      item_list() const;

  // repeated string argument_list = 14;
  int argument_list_size() const;
  void clear_argument_list();
  static const int kArgumentListFieldNumber = 14;
  const ::std::string& argument_list(int index) const;
  ::std::string* mutable_argument_list(int index);
  void set_argument_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_argument_list(int index, ::std::string&& value);
  #endif
  void set_argument_list(int index, const char* value);
  void set_argument_list(int index, const char* value, size_t size);
  ::std::string* add_argument_list();
  void add_argument_list(const ::std::string& value);
  #if LANG_CXX11
  void add_argument_list(::std::string&& value);
  #endif
  void add_argument_list(const char* value);
  void add_argument_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& argument_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_argument_list();

  // .proto.MailTextContent mail_text_content = 4;
  bool has_mail_text_content() const;
  void clear_mail_text_content();
  static const int kMailTextContentFieldNumber = 4;
  const ::proto::MailTextContent& mail_text_content() const;
  ::proto::MailTextContent* mutable_mail_text_content();
  ::proto::MailTextContent* release_mail_text_content();
  void set_allocated_mail_text_content(::proto::MailTextContent* mail_text_content);

  // uint32 mail_id = 1;
  void clear_mail_id();
  static const int kMailIdFieldNumber = 1;
  ::google::protobuf::uint32 mail_id() const;
  void set_mail_id(::google::protobuf::uint32 value);

  // uint32 send_time = 8;
  void clear_send_time();
  static const int kSendTimeFieldNumber = 8;
  ::google::protobuf::uint32 send_time() const;
  void set_send_time(::google::protobuf::uint32 value);

  // uint32 expire_time = 9;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 9;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // uint32 importance = 10;
  void clear_importance();
  static const int kImportanceFieldNumber = 10;
  ::google::protobuf::uint32 importance() const;
  void set_importance(::google::protobuf::uint32 value);

  // bool is_read = 11;
  void clear_is_read();
  static const int kIsReadFieldNumber = 11;
  bool is_read() const;
  void set_is_read(bool value);

  // bool is_attachment_got = 12;
  void clear_is_attachment_got();
  static const int kIsAttachmentGotFieldNumber = 12;
  bool is_attachment_got() const;
  void set_is_attachment_got(bool value);

  // uint32 config_id = 13;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 13;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MailData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MailItem > item_list_;
  ::google::protobuf::RepeatedPtrField< ::std::string> argument_list_;
  ::proto::MailTextContent* mail_text_content_;
  ::google::protobuf::uint32 mail_id_;
  ::google::protobuf::uint32 send_time_;
  ::google::protobuf::uint32 expire_time_;
  ::google::protobuf::uint32 importance_;
  bool is_read_;
  bool is_attachment_got_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnlinePlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OnlinePlayerInfo) */ {
 public:
  OnlinePlayerInfo();
  virtual ~OnlinePlayerInfo();

  OnlinePlayerInfo(const OnlinePlayerInfo& from);

  inline OnlinePlayerInfo& operator=(const OnlinePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnlinePlayerInfo(OnlinePlayerInfo&& from) noexcept
    : OnlinePlayerInfo() {
    *this = ::std::move(from);
  }

  inline OnlinePlayerInfo& operator=(OnlinePlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlinePlayerInfo& default_instance();

  static inline const OnlinePlayerInfo* internal_default_instance() {
    return reinterpret_cast<const OnlinePlayerInfo*>(
               &_OnlinePlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(OnlinePlayerInfo* other);
  friend void swap(OnlinePlayerInfo& a, OnlinePlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnlinePlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  OnlinePlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnlinePlayerInfo& from);
  void MergeFrom(const OnlinePlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnlinePlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 player_level = 3;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 3;
  ::google::protobuf::uint32 player_level() const;
  void set_player_level(::google::protobuf::uint32 value);

  // uint32 avatar_id = 4;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // .proto.MpSettingType mp_setting_type = 5;
  void clear_mp_setting_type();
  static const int kMpSettingTypeFieldNumber = 5;
  ::proto::MpSettingType mp_setting_type() const;
  void set_mp_setting_type(::proto::MpSettingType value);

  // uint32 cur_player_num_in_world = 6;
  void clear_cur_player_num_in_world();
  static const int kCurPlayerNumInWorldFieldNumber = 6;
  ::google::protobuf::uint32 cur_player_num_in_world() const;
  void set_cur_player_num_in_world(::google::protobuf::uint32 value);

  // uint32 world_level = 7;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 7;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OnlinePlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 player_level_;
  ::google::protobuf::uint32 avatar_id_;
  int mp_setting_type_;
  ::google::protobuf::uint32 cur_player_num_in_world_;
  ::google::protobuf::uint32 world_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Birthday : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Birthday) */ {
 public:
  Birthday();
  virtual ~Birthday();

  Birthday(const Birthday& from);

  inline Birthday& operator=(const Birthday& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Birthday(Birthday&& from) noexcept
    : Birthday() {
    *this = ::std::move(from);
  }

  inline Birthday& operator=(Birthday&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Birthday& default_instance();

  static inline const Birthday* internal_default_instance() {
    return reinterpret_cast<const Birthday*>(
               &_Birthday_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(Birthday* other);
  friend void swap(Birthday& a, Birthday& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Birthday* New() const PROTOBUF_FINAL { return New(NULL); }

  Birthday* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Birthday& from);
  void MergeFrom(const Birthday& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Birthday* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 month = 1;
  void clear_month();
  static const int kMonthFieldNumber = 1;
  ::google::protobuf::uint32 month() const;
  void set_month(::google::protobuf::uint32 value);

  // uint32 day = 2;
  void clear_day();
  static const int kDayFieldNumber = 2;
  ::google::protobuf::uint32 day() const;
  void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Birthday)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 day_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapMarkPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MapMarkPoint) */ {
 public:
  MapMarkPoint();
  virtual ~MapMarkPoint();

  MapMarkPoint(const MapMarkPoint& from);

  inline MapMarkPoint& operator=(const MapMarkPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MapMarkPoint(MapMarkPoint&& from) noexcept
    : MapMarkPoint() {
    *this = ::std::move(from);
  }

  inline MapMarkPoint& operator=(MapMarkPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MapMarkPoint& default_instance();

  static inline const MapMarkPoint* internal_default_instance() {
    return reinterpret_cast<const MapMarkPoint*>(
               &_MapMarkPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(MapMarkPoint* other);
  friend void swap(MapMarkPoint& a, MapMarkPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MapMarkPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  MapMarkPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapMarkPoint& from);
  void MergeFrom(const MapMarkPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapMarkPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .proto.Vector pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // .proto.MapMarkPointType point_type = 4;
  void clear_point_type();
  static const int kPointTypeFieldNumber = 4;
  ::proto::MapMarkPointType point_type() const;
  void set_point_type(::proto::MapMarkPointType value);

  // uint32 monster_id = 5;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 5;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // .proto.MapMarkFromType from_type = 6;
  void clear_from_type();
  static const int kFromTypeFieldNumber = 6;
  ::proto::MapMarkFromType from_type() const;
  void set_from_type(::proto::MapMarkFromType value);

  // uint32 quest_id = 7;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 7;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MapMarkPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 scene_id_;
  int point_type_;
  ::google::protobuf::uint32 monster_id_;
  int from_type_;
  ::google::protobuf::uint32 quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveWaterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveWaterInfo) */ {
 public:
  MassiveWaterInfo();
  virtual ~MassiveWaterInfo();

  MassiveWaterInfo(const MassiveWaterInfo& from);

  inline MassiveWaterInfo& operator=(const MassiveWaterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveWaterInfo(MassiveWaterInfo&& from) noexcept
    : MassiveWaterInfo() {
    *this = ::std::move(from);
  }

  inline MassiveWaterInfo& operator=(MassiveWaterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveWaterInfo& default_instance();

  static inline const MassiveWaterInfo* internal_default_instance() {
    return reinterpret_cast<const MassiveWaterInfo*>(
               &_MassiveWaterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(MassiveWaterInfo* other);
  friend void swap(MassiveWaterInfo& a, MassiveWaterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveWaterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveWaterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveWaterInfo& from);
  void MergeFrom(const MassiveWaterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveWaterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:proto.MassiveWaterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveGrassInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveGrassInfo) */ {
 public:
  MassiveGrassInfo();
  virtual ~MassiveGrassInfo();

  MassiveGrassInfo(const MassiveGrassInfo& from);

  inline MassiveGrassInfo& operator=(const MassiveGrassInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveGrassInfo(MassiveGrassInfo&& from) noexcept
    : MassiveGrassInfo() {
    *this = ::std::move(from);
  }

  inline MassiveGrassInfo& operator=(MassiveGrassInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveGrassInfo& default_instance();

  static inline const MassiveGrassInfo* internal_default_instance() {
    return reinterpret_cast<const MassiveGrassInfo*>(
               &_MassiveGrassInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(MassiveGrassInfo* other);
  friend void swap(MassiveGrassInfo& a, MassiveGrassInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveGrassInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveGrassInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveGrassInfo& from);
  void MergeFrom(const MassiveGrassInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveGrassInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector center = 2;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 2;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // .proto.Vector size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  const ::proto::Vector& size() const;
  ::proto::Vector* mutable_size();
  ::proto::Vector* release_size();
  void set_allocated_size(::proto::Vector* size);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MassiveGrassInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* center_;
  ::proto::Vector* size_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveBoxInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveBoxInfo) */ {
 public:
  MassiveBoxInfo();
  virtual ~MassiveBoxInfo();

  MassiveBoxInfo(const MassiveBoxInfo& from);

  inline MassiveBoxInfo& operator=(const MassiveBoxInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveBoxInfo(MassiveBoxInfo&& from) noexcept
    : MassiveBoxInfo() {
    *this = ::std::move(from);
  }

  inline MassiveBoxInfo& operator=(MassiveBoxInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveBoxInfo& default_instance();

  static inline const MassiveBoxInfo* internal_default_instance() {
    return reinterpret_cast<const MassiveBoxInfo*>(
               &_MassiveBoxInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(MassiveBoxInfo* other);
  friend void swap(MassiveBoxInfo& a, MassiveBoxInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveBoxInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveBoxInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveBoxInfo& from);
  void MergeFrom(const MassiveBoxInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveBoxInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector center = 3;
  bool has_center() const;
  void clear_center();
  static const int kCenterFieldNumber = 3;
  const ::proto::Vector& center() const;
  ::proto::Vector* mutable_center();
  ::proto::Vector* release_center();
  void set_allocated_center(::proto::Vector* center);

  // .proto.Vector extents = 4;
  bool has_extents() const;
  void clear_extents();
  static const int kExtentsFieldNumber = 4;
  const ::proto::Vector& extents() const;
  ::proto::Vector* mutable_extents();
  ::proto::Vector* release_extents();
  void set_allocated_extents(::proto::Vector* extents);

  // .proto.Vector up = 5;
  bool has_up() const;
  void clear_up();
  static const int kUpFieldNumber = 5;
  const ::proto::Vector& up() const;
  ::proto::Vector* mutable_up();
  ::proto::Vector* release_up();
  void set_allocated_up(::proto::Vector* up);

  // .proto.Vector forward = 6;
  bool has_forward() const;
  void clear_forward();
  static const int kForwardFieldNumber = 6;
  const ::proto::Vector& forward() const;
  ::proto::Vector* mutable_forward();
  ::proto::Vector* release_forward();
  void set_allocated_forward(::proto::Vector* forward);

  // .proto.Vector right = 7;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 7;
  const ::proto::Vector& right() const;
  ::proto::Vector* mutable_right();
  ::proto::Vector* release_right();
  void set_allocated_right(::proto::Vector* right);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // uint32 configId = 2;
  void clear_configid();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 configid() const;
  void set_configid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MassiveBoxInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* center_;
  ::proto::Vector* extents_;
  ::proto::Vector* up_;
  ::proto::Vector* forward_;
  ::proto::Vector* right_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::uint32 configid_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientMassiveEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientMassiveEntity) */ {
 public:
  ClientMassiveEntity();
  virtual ~ClientMassiveEntity();

  ClientMassiveEntity(const ClientMassiveEntity& from);

  inline ClientMassiveEntity& operator=(const ClientMassiveEntity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientMassiveEntity(ClientMassiveEntity&& from) noexcept
    : ClientMassiveEntity() {
    *this = ::std::move(from);
  }

  inline ClientMassiveEntity& operator=(ClientMassiveEntity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientMassiveEntity& default_instance();

  enum EntityInfoCase {
    kWaterInfo = 4,
    kGrassInfo = 5,
    kBoxInfo = 6,
    ENTITY_INFO_NOT_SET = 0,
  };

  static inline const ClientMassiveEntity* internal_default_instance() {
    return reinterpret_cast<const ClientMassiveEntity*>(
               &_ClientMassiveEntity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(ClientMassiveEntity* other);
  friend void swap(ClientMassiveEntity& a, ClientMassiveEntity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientMassiveEntity* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientMassiveEntity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientMassiveEntity& from);
  void MergeFrom(const ClientMassiveEntity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientMassiveEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_type = 1;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  ::google::protobuf::uint32 entity_type() const;
  void set_entity_type(::google::protobuf::uint32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // int64 obj_id = 3;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 3;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // .proto.MassiveWaterInfo water_info = 4;
  bool has_water_info() const;
  void clear_water_info();
  static const int kWaterInfoFieldNumber = 4;
  const ::proto::MassiveWaterInfo& water_info() const;
  ::proto::MassiveWaterInfo* mutable_water_info();
  ::proto::MassiveWaterInfo* release_water_info();
  void set_allocated_water_info(::proto::MassiveWaterInfo* water_info);

  // .proto.MassiveGrassInfo grass_info = 5;
  bool has_grass_info() const;
  void clear_grass_info();
  static const int kGrassInfoFieldNumber = 5;
  const ::proto::MassiveGrassInfo& grass_info() const;
  ::proto::MassiveGrassInfo* mutable_grass_info();
  ::proto::MassiveGrassInfo* release_grass_info();
  void set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info);

  // .proto.MassiveBoxInfo box_info = 6;
  bool has_box_info() const;
  void clear_box_info();
  static const int kBoxInfoFieldNumber = 6;
  const ::proto::MassiveBoxInfo& box_info() const;
  ::proto::MassiveBoxInfo* mutable_box_info();
  ::proto::MassiveBoxInfo* release_box_info();
  void set_allocated_box_info(::proto::MassiveBoxInfo* box_info);

  EntityInfoCase entity_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.ClientMassiveEntity)
 private:
  void set_has_water_info();
  void set_has_grass_info();
  void set_has_box_info();

  inline bool has_entity_info() const;
  void clear_entity_info();
  inline void clear_has_entity_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_type_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::int64 obj_id_;
  union EntityInfoUnion {
    EntityInfoUnion() {}
    ::proto::MassiveWaterInfo* water_info_;
    ::proto::MassiveGrassInfo* grass_info_;
    ::proto::MassiveBoxInfo* box_info_;
  } entity_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerMassiveEntity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerMassiveEntity) */ {
 public:
  ServerMassiveEntity();
  virtual ~ServerMassiveEntity();

  ServerMassiveEntity(const ServerMassiveEntity& from);

  inline ServerMassiveEntity& operator=(const ServerMassiveEntity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerMassiveEntity(ServerMassiveEntity&& from) noexcept
    : ServerMassiveEntity() {
    *this = ::std::move(from);
  }

  inline ServerMassiveEntity& operator=(ServerMassiveEntity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerMassiveEntity& default_instance();

  enum EntityInfoCase {
    kWaterInfo = 6,
    kGrassInfo = 7,
    kBoxInfo = 8,
    ENTITY_INFO_NOT_SET = 0,
  };

  static inline const ServerMassiveEntity* internal_default_instance() {
    return reinterpret_cast<const ServerMassiveEntity*>(
               &_ServerMassiveEntity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(ServerMassiveEntity* other);
  friend void swap(ServerMassiveEntity& a, ServerMassiveEntity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerMassiveEntity* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerMassiveEntity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerMassiveEntity& from);
  void MergeFrom(const ServerMassiveEntity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerMassiveEntity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_type = 1;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  ::google::protobuf::uint32 entity_type() const;
  void set_entity_type(::google::protobuf::uint32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 runtime_id = 3;
  void clear_runtime_id();
  static const int kRuntimeIdFieldNumber = 3;
  ::google::protobuf::uint32 runtime_id() const;
  void set_runtime_id(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 4;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 4;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // int64 obj_id = 5;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 5;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // .proto.MassiveWaterInfo water_info = 6;
  bool has_water_info() const;
  void clear_water_info();
  static const int kWaterInfoFieldNumber = 6;
  const ::proto::MassiveWaterInfo& water_info() const;
  ::proto::MassiveWaterInfo* mutable_water_info();
  ::proto::MassiveWaterInfo* release_water_info();
  void set_allocated_water_info(::proto::MassiveWaterInfo* water_info);

  // .proto.MassiveGrassInfo grass_info = 7;
  bool has_grass_info() const;
  void clear_grass_info();
  static const int kGrassInfoFieldNumber = 7;
  const ::proto::MassiveGrassInfo& grass_info() const;
  ::proto::MassiveGrassInfo* mutable_grass_info();
  ::proto::MassiveGrassInfo* release_grass_info();
  void set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info);

  // .proto.MassiveBoxInfo box_info = 8;
  bool has_box_info() const;
  void clear_box_info();
  static const int kBoxInfoFieldNumber = 8;
  const ::proto::MassiveBoxInfo& box_info() const;
  ::proto::MassiveBoxInfo* mutable_box_info();
  ::proto::MassiveBoxInfo* release_box_info();
  void set_allocated_box_info(::proto::MassiveBoxInfo* box_info);

  EntityInfoCase entity_info_case() const;
  // @@protoc_insertion_point(class_scope:proto.ServerMassiveEntity)
 private:
  void set_has_water_info();
  void set_has_grass_info();
  void set_has_box_info();

  inline bool has_entity_info() const;
  void clear_entity_info();
  inline void clear_has_entity_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_type_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 runtime_id_;
  ::google::protobuf::uint32 authority_peer_id_;
  ::google::protobuf::int64 obj_id_;
  union EntityInfoUnion {
    EntityInfoUnion() {}
    ::proto::MassiveWaterInfo* water_info_;
    ::proto::MassiveGrassInfo* grass_info_;
    ::proto::MassiveBoxInfo* box_info_;
  } entity_info_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveEntityState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveEntityState) */ {
 public:
  MassiveEntityState();
  virtual ~MassiveEntityState();

  MassiveEntityState(const MassiveEntityState& from);

  inline MassiveEntityState& operator=(const MassiveEntityState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveEntityState(MassiveEntityState&& from) noexcept
    : MassiveEntityState() {
    *this = ::std::move(from);
  }

  inline MassiveEntityState& operator=(MassiveEntityState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveEntityState& default_instance();

  static inline const MassiveEntityState* internal_default_instance() {
    return reinterpret_cast<const MassiveEntityState*>(
               &_MassiveEntityState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(MassiveEntityState* other);
  friend void swap(MassiveEntityState& a, MassiveEntityState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveEntityState* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveEntityState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveEntityState& from);
  void MergeFrom(const MassiveEntityState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveEntityState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 obj_id = 2;
  void clear_obj_id();
  static const int kObjIdFieldNumber = 2;
  ::google::protobuf::int64 obj_id() const;
  void set_obj_id(::google::protobuf::int64 value);

  // uint32 entity_type = 1;
  void clear_entity_type();
  static const int kEntityTypeFieldNumber = 1;
  ::google::protobuf::uint32 entity_type() const;
  void set_entity_type(::google::protobuf::uint32 value);

  // uint32 element_state = 3;
  void clear_element_state();
  static const int kElementStateFieldNumber = 3;
  ::google::protobuf::uint32 element_state() const;
  void set_element_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MassiveEntityState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 obj_id_;
  ::google::protobuf::uint32 entity_type_;
  ::google::protobuf::uint32 element_state_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityClientData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityClientData) */ {
 public:
  EntityClientData();
  virtual ~EntityClientData();

  EntityClientData(const EntityClientData& from);

  inline EntityClientData& operator=(const EntityClientData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityClientData(EntityClientData&& from) noexcept
    : EntityClientData() {
    *this = ::std::move(from);
  }

  inline EntityClientData& operator=(EntityClientData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityClientData& default_instance();

  static inline const EntityClientData* internal_default_instance() {
    return reinterpret_cast<const EntityClientData*>(
               &_EntityClientData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(EntityClientData* other);
  friend void swap(EntityClientData& a, EntityClientData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityClientData* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityClientData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityClientData& from);
  void MergeFrom(const EntityClientData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityClientData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 wind_change_scene_time = 1;
  void clear_wind_change_scene_time();
  static const int kWindChangeSceneTimeFieldNumber = 1;
  ::google::protobuf::uint32 wind_change_scene_time() const;
  void set_wind_change_scene_time(::google::protobuf::uint32 value);

  // float windmill_sync_angle = 2;
  void clear_windmill_sync_angle();
  static const int kWindmillSyncAngleFieldNumber = 2;
  float windmill_sync_angle() const;
  void set_windmill_sync_angle(float value);

  // int32 wind_change_target_level = 3;
  void clear_wind_change_target_level();
  static const int kWindChangeTargetLevelFieldNumber = 3;
  ::google::protobuf::int32 wind_change_target_level() const;
  void set_wind_change_target_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityClientData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 wind_change_scene_time_;
  float windmill_sync_angle_;
  ::google::protobuf::int32 wind_change_target_level_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlockInfo) */ {
 public:
  BlockInfo();
  virtual ~BlockInfo();

  BlockInfo(const BlockInfo& from);

  inline BlockInfo& operator=(const BlockInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlockInfo(BlockInfo&& from) noexcept
    : BlockInfo() {
    *this = ::std::move(from);
  }

  inline BlockInfo& operator=(BlockInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfo& default_instance();

  static inline const BlockInfo* internal_default_instance() {
    return reinterpret_cast<const BlockInfo*>(
               &_BlockInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(BlockInfo* other);
  friend void swap(BlockInfo& a, BlockInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlockInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfo& from);
  void MergeFrom(const BlockInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bin_data = 3;
  void clear_bin_data();
  static const int kBinDataFieldNumber = 3;
  const ::std::string& bin_data() const;
  void set_bin_data(const ::std::string& value);
  #if LANG_CXX11
  void set_bin_data(::std::string&& value);
  #endif
  void set_bin_data(const char* value);
  void set_bin_data(const void* value, size_t size);
  ::std::string* mutable_bin_data();
  ::std::string* release_bin_data();
  void set_allocated_bin_data(::std::string* bin_data);

  // uint32 block_id = 1;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 1;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // uint32 data_version = 2;
  void clear_data_version();
  static const int kDataVersionFieldNumber = 2;
  ::google::protobuf::uint32 data_version() const;
  void set_data_version(::google::protobuf::uint32 value);

  // bool is_dirty = 4;
  void clear_is_dirty();
  static const int kIsDirtyFieldNumber = 4;
  bool is_dirty() const;
  void set_is_dirty(bool value);

  // @@protoc_insertion_point(class_scope:proto.BlockInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bin_data_;
  ::google::protobuf::uint32 block_id_;
  ::google::protobuf::uint32 data_version_;
  bool is_dirty_;
  mutable int _cached_size_;
  friend struct protobuf_define_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParamList

// repeated uint32 param_list = 1;
inline int ParamList::param_list_size() const {
  return param_list_.size();
}
inline void ParamList::clear_param_list() {
  param_list_.Clear();
}
inline ::google::protobuf::uint32 ParamList::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParamList.param_list)
  return param_list_.Get(index);
}
inline void ParamList::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ParamList.param_list)
}
inline void ParamList::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ParamList.param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ParamList::param_list() const {
  // @@protoc_insertion_point(field_list:proto.ParamList.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ParamList::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParamList.param_list)
  return &param_list_;
}

// -------------------------------------------------------------------

// PropValue

// uint32 type = 1;
inline void PropValue::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 PropValue::type() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.type)
  return type_;
}
inline void PropValue::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.type)
}

// int64 ival = 2;
inline bool PropValue::has_ival() const {
  return value_case() == kIval;
}
inline void PropValue::set_has_ival() {
  _oneof_case_[0] = kIval;
}
inline void PropValue::clear_ival() {
  if (has_ival()) {
    value_.ival_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 PropValue::ival() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.ival)
  if (has_ival()) {
    return value_.ival_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void PropValue::set_ival(::google::protobuf::int64 value) {
  if (!has_ival()) {
    clear_value();
    set_has_ival();
  }
  value_.ival_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.ival)
}

// float fval = 3;
inline bool PropValue::has_fval() const {
  return value_case() == kFval;
}
inline void PropValue::set_has_fval() {
  _oneof_case_[0] = kFval;
}
inline void PropValue::clear_fval() {
  if (has_fval()) {
    value_.fval_ = 0;
    clear_has_value();
  }
}
inline float PropValue::fval() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.fval)
  if (has_fval()) {
    return value_.fval_;
  }
  return 0;
}
inline void PropValue::set_fval(float value) {
  if (!has_fval()) {
    clear_value();
    set_has_fval();
  }
  value_.fval_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.fval)
}

// int64 val = 4;
inline void PropValue::clear_val() {
  val_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PropValue::val() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.val)
  return val_;
}
inline void PropValue::set_val(::google::protobuf::int64 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.val)
}

inline bool PropValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void PropValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline PropValue::ValueCase PropValue::value_case() const {
  return PropValue::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// RegionCustomConfig

// bool close_antidebug = 1;
inline void RegionCustomConfig::clear_close_antidebug() {
  close_antidebug_ = false;
}
inline bool RegionCustomConfig::close_antidebug() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.close_antidebug)
  return close_antidebug_;
}
inline void RegionCustomConfig::set_close_antidebug(bool value) {
  
  close_antidebug_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.close_antidebug)
}

// bool force_kill = 2;
inline void RegionCustomConfig::clear_force_kill() {
  force_kill_ = false;
}
inline bool RegionCustomConfig::force_kill() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.force_kill)
  return force_kill_;
}
inline void RegionCustomConfig::set_force_kill(bool value) {
  
  force_kill_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.force_kill)
}

// bool antidebug_pc = 3;
inline void RegionCustomConfig::clear_antidebug_pc() {
  antidebug_pc_ = false;
}
inline bool RegionCustomConfig::antidebug_pc() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.antidebug_pc)
  return antidebug_pc_;
}
inline void RegionCustomConfig::set_antidebug_pc(bool value) {
  
  antidebug_pc_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.antidebug_pc)
}

// bool antidubug_ios = 4;
inline void RegionCustomConfig::clear_antidubug_ios() {
  antidubug_ios_ = false;
}
inline bool RegionCustomConfig::antidubug_ios() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.antidubug_ios)
  return antidubug_ios_;
}
inline void RegionCustomConfig::set_antidubug_ios(bool value) {
  
  antidubug_ios_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.antidubug_ios)
}

// bool antidubug_androd = 5;
inline void RegionCustomConfig::clear_antidubug_androd() {
  antidubug_androd_ = false;
}
inline bool RegionCustomConfig::antidubug_androd() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.antidubug_androd)
  return antidubug_androd_;
}
inline void RegionCustomConfig::set_antidubug_androd(bool value) {
  
  antidubug_androd_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.antidubug_androd)
}

// -------------------------------------------------------------------

// RegionSimpleInfo

// string name = 1;
inline void RegionSimpleInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionSimpleInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.name)
  return name_.GetNoArena();
}
inline void RegionSimpleInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.name)
}
#if LANG_CXX11
inline void RegionSimpleInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.name)
}
#endif
inline void RegionSimpleInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.name)
}
inline void RegionSimpleInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.name)
}
inline ::std::string* RegionSimpleInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionSimpleInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionSimpleInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.name)
}

// string title = 2;
inline void RegionSimpleInfo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionSimpleInfo::title() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.title)
  return title_.GetNoArena();
}
inline void RegionSimpleInfo::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.title)
}
#if LANG_CXX11
inline void RegionSimpleInfo::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.title)
}
#endif
inline void RegionSimpleInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.title)
}
inline void RegionSimpleInfo::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.title)
}
inline ::std::string* RegionSimpleInfo::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionSimpleInfo::release_title() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionSimpleInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.title)
}

// string type = 3;
inline void RegionSimpleInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionSimpleInfo::type() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.type)
  return type_.GetNoArena();
}
inline void RegionSimpleInfo::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.type)
}
#if LANG_CXX11
inline void RegionSimpleInfo::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.type)
}
#endif
inline void RegionSimpleInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.type)
}
inline void RegionSimpleInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.type)
}
inline ::std::string* RegionSimpleInfo::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionSimpleInfo::release_type() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionSimpleInfo::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.type)
}

// string dispatch_url = 4;
inline void RegionSimpleInfo::clear_dispatch_url() {
  dispatch_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionSimpleInfo::dispatch_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.dispatch_url)
  return dispatch_url_.GetNoArena();
}
inline void RegionSimpleInfo::set_dispatch_url(const ::std::string& value) {
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.dispatch_url)
}
#if LANG_CXX11
inline void RegionSimpleInfo::set_dispatch_url(::std::string&& value) {
  
  dispatch_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.dispatch_url)
}
#endif
inline void RegionSimpleInfo::set_dispatch_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.dispatch_url)
}
inline void RegionSimpleInfo::set_dispatch_url(const char* value, size_t size) {
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.dispatch_url)
}
inline ::std::string* RegionSimpleInfo::mutable_dispatch_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.dispatch_url)
  return dispatch_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionSimpleInfo::release_dispatch_url() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.dispatch_url)
  
  return dispatch_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionSimpleInfo::set_allocated_dispatch_url(::std::string* dispatch_url) {
  if (dispatch_url != NULL) {
    
  } else {
    
  }
  dispatch_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatch_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.dispatch_url)
}

// .proto.RegionCustomConfig region_custom_config = 5;
inline bool RegionSimpleInfo::has_region_custom_config() const {
  return this != internal_default_instance() && region_custom_config_ != NULL;
}
inline void RegionSimpleInfo::clear_region_custom_config() {
  if (GetArenaNoVirtual() == NULL && region_custom_config_ != NULL) delete region_custom_config_;
  region_custom_config_ = NULL;
}
inline const ::proto::RegionCustomConfig& RegionSimpleInfo::region_custom_config() const {
  const ::proto::RegionCustomConfig* p = region_custom_config_;
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.region_custom_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::RegionCustomConfig*>(
      &::proto::_RegionCustomConfig_default_instance_);
}
inline ::proto::RegionCustomConfig* RegionSimpleInfo::mutable_region_custom_config() {
  
  if (region_custom_config_ == NULL) {
    region_custom_config_ = new ::proto::RegionCustomConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.region_custom_config)
  return region_custom_config_;
}
inline ::proto::RegionCustomConfig* RegionSimpleInfo::release_region_custom_config() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.region_custom_config)
  
  ::proto::RegionCustomConfig* temp = region_custom_config_;
  region_custom_config_ = NULL;
  return temp;
}
inline void RegionSimpleInfo::set_allocated_region_custom_config(::proto::RegionCustomConfig* region_custom_config) {
  delete region_custom_config_;
  region_custom_config_ = region_custom_config;
  if (region_custom_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.region_custom_config)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClientCustomConfig

// bool visitor = 1;
inline void ClientCustomConfig::clear_visitor() {
  visitor_ = false;
}
inline bool ClientCustomConfig::visitor() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.visitor)
  return visitor_;
}
inline void ClientCustomConfig::set_visitor(bool value) {
  
  visitor_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.visitor)
}

// string sdkenv = 2;
inline void ClientCustomConfig::clear_sdkenv() {
  sdkenv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientCustomConfig::sdkenv() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.sdkenv)
  return sdkenv_.GetNoArena();
}
inline void ClientCustomConfig::set_sdkenv(const ::std::string& value) {
  
  sdkenv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.sdkenv)
}
#if LANG_CXX11
inline void ClientCustomConfig::set_sdkenv(::std::string&& value) {
  
  sdkenv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClientCustomConfig.sdkenv)
}
#endif
inline void ClientCustomConfig::set_sdkenv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sdkenv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClientCustomConfig.sdkenv)
}
inline void ClientCustomConfig::set_sdkenv(const char* value, size_t size) {
  
  sdkenv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClientCustomConfig.sdkenv)
}
inline ::std::string* ClientCustomConfig::mutable_sdkenv() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClientCustomConfig.sdkenv)
  return sdkenv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientCustomConfig::release_sdkenv() {
  // @@protoc_insertion_point(field_release:proto.ClientCustomConfig.sdkenv)
  
  return sdkenv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientCustomConfig::set_allocated_sdkenv(::std::string* sdkenv) {
  if (sdkenv != NULL) {
    
  } else {
    
  }
  sdkenv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdkenv);
  // @@protoc_insertion_point(field_set_allocated:proto.ClientCustomConfig.sdkenv)
}

// bool debugmenu = 3;
inline void ClientCustomConfig::clear_debugmenu() {
  debugmenu_ = false;
}
inline bool ClientCustomConfig::debugmenu() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.debugmenu)
  return debugmenu_;
}
inline void ClientCustomConfig::set_debugmenu(bool value) {
  
  debugmenu_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.debugmenu)
}

// repeated int32 debuglogswitch = 4;
inline int ClientCustomConfig::debuglogswitch_size() const {
  return debuglogswitch_.size();
}
inline void ClientCustomConfig::clear_debuglogswitch() {
  debuglogswitch_.Clear();
}
inline ::google::protobuf::int32 ClientCustomConfig::debuglogswitch(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.debuglogswitch)
  return debuglogswitch_.Get(index);
}
inline void ClientCustomConfig::set_debuglogswitch(int index, ::google::protobuf::int32 value) {
  debuglogswitch_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.debuglogswitch)
}
inline void ClientCustomConfig::add_debuglogswitch(::google::protobuf::int32 value) {
  debuglogswitch_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ClientCustomConfig.debuglogswitch)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientCustomConfig::debuglogswitch() const {
  // @@protoc_insertion_point(field_list:proto.ClientCustomConfig.debuglogswitch)
  return debuglogswitch_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientCustomConfig::mutable_debuglogswitch() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientCustomConfig.debuglogswitch)
  return &debuglogswitch_;
}

// bool debuglog = 5;
inline void ClientCustomConfig::clear_debuglog() {
  debuglog_ = false;
}
inline bool ClientCustomConfig::debuglog() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.debuglog)
  return debuglog_;
}
inline void ClientCustomConfig::set_debuglog(bool value) {
  
  debuglog_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.debuglog)
}

// map<string, string> devicelist = 6;
inline int ClientCustomConfig::devicelist_size() const {
  return devicelist_.size();
}
inline void ClientCustomConfig::clear_devicelist() {
  devicelist_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
ClientCustomConfig::devicelist() const {
  // @@protoc_insertion_point(field_map:proto.ClientCustomConfig.devicelist)
  return devicelist_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
ClientCustomConfig::mutable_devicelist() {
  // @@protoc_insertion_point(field_mutable_map:proto.ClientCustomConfig.devicelist)
  return devicelist_.MutableMap();
}

// bool loadjsondata = 7;
inline void ClientCustomConfig::clear_loadjsondata() {
  loadjsondata_ = false;
}
inline bool ClientCustomConfig::loadjsondata() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.loadjsondata)
  return loadjsondata_;
}
inline void ClientCustomConfig::set_loadjsondata(bool value) {
  
  loadjsondata_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.loadjsondata)
}

// bool showexception = 8;
inline void ClientCustomConfig::clear_showexception() {
  showexception_ = false;
}
inline bool ClientCustomConfig::showexception() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.showexception)
  return showexception_;
}
inline void ClientCustomConfig::set_showexception(bool value) {
  
  showexception_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.showexception)
}

// -------------------------------------------------------------------

// QueryRegionListHttpRsp

// int32 retcode = 1;
inline void QueryRegionListHttpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 QueryRegionListHttpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.retcode)
  return retcode_;
}
inline void QueryRegionListHttpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.retcode)
}

// repeated .proto.RegionSimpleInfo region_list = 2;
inline int QueryRegionListHttpRsp::region_list_size() const {
  return region_list_.size();
}
inline void QueryRegionListHttpRsp::clear_region_list() {
  region_list_.Clear();
}
inline const ::proto::RegionSimpleInfo& QueryRegionListHttpRsp::region_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Get(index);
}
inline ::proto::RegionSimpleInfo* QueryRegionListHttpRsp::mutable_region_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Mutable(index);
}
inline ::proto::RegionSimpleInfo* QueryRegionListHttpRsp::add_region_list() {
  // @@protoc_insertion_point(field_add:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >*
QueryRegionListHttpRsp::mutable_region_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QueryRegionListHttpRsp.region_list)
  return &region_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >&
QueryRegionListHttpRsp::region_list() const {
  // @@protoc_insertion_point(field_list:proto.QueryRegionListHttpRsp.region_list)
  return region_list_;
}

// string client_custom_config = 3;
inline void QueryRegionListHttpRsp::clear_client_custom_config() {
  client_custom_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRegionListHttpRsp::client_custom_config() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_custom_config)
  return client_custom_config_.GetNoArena();
}
inline void QueryRegionListHttpRsp::set_client_custom_config(const ::std::string& value) {
  
  client_custom_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.client_custom_config)
}
#if LANG_CXX11
inline void QueryRegionListHttpRsp::set_client_custom_config(::std::string&& value) {
  
  client_custom_config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryRegionListHttpRsp.client_custom_config)
}
#endif
inline void QueryRegionListHttpRsp::set_client_custom_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_custom_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryRegionListHttpRsp.client_custom_config)
}
inline void QueryRegionListHttpRsp::set_client_custom_config(const char* value, size_t size) {
  
  client_custom_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryRegionListHttpRsp.client_custom_config)
}
inline ::std::string* QueryRegionListHttpRsp::mutable_client_custom_config() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_custom_config)
  return client_custom_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRegionListHttpRsp::release_client_custom_config() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_custom_config)
  
  return client_custom_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRegionListHttpRsp::set_allocated_client_custom_config(::std::string* client_custom_config) {
  if (client_custom_config != NULL) {
    
  } else {
    
  }
  client_custom_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_custom_config);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_custom_config)
}

// .proto.ClientCustomConfig client_config = 4;
inline bool QueryRegionListHttpRsp::has_client_config() const {
  return this != internal_default_instance() && client_config_ != NULL;
}
inline void QueryRegionListHttpRsp::clear_client_config() {
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) delete client_config_;
  client_config_ = NULL;
}
inline const ::proto::ClientCustomConfig& QueryRegionListHttpRsp::client_config() const {
  const ::proto::ClientCustomConfig* p = client_config_;
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ClientCustomConfig*>(
      &::proto::_ClientCustomConfig_default_instance_);
}
inline ::proto::ClientCustomConfig* QueryRegionListHttpRsp::mutable_client_config() {
  
  if (client_config_ == NULL) {
    client_config_ = new ::proto::ClientCustomConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_config)
  return client_config_;
}
inline ::proto::ClientCustomConfig* QueryRegionListHttpRsp::release_client_config() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_config)
  
  ::proto::ClientCustomConfig* temp = client_config_;
  client_config_ = NULL;
  return temp;
}
inline void QueryRegionListHttpRsp::set_allocated_client_config(::proto::ClientCustomConfig* client_config) {
  delete client_config_;
  client_config_ = client_config;
  if (client_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_config)
}

// bytes client_secret_key = 5;
inline void QueryRegionListHttpRsp::clear_client_secret_key() {
  client_secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRegionListHttpRsp::client_secret_key() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_secret_key)
  return client_secret_key_.GetNoArena();
}
inline void QueryRegionListHttpRsp::set_client_secret_key(const ::std::string& value) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.client_secret_key)
}
#if LANG_CXX11
inline void QueryRegionListHttpRsp::set_client_secret_key(::std::string&& value) {
  
  client_secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryRegionListHttpRsp.client_secret_key)
}
#endif
inline void QueryRegionListHttpRsp::set_client_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryRegionListHttpRsp.client_secret_key)
}
inline void QueryRegionListHttpRsp::set_client_secret_key(const void* value, size_t size) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryRegionListHttpRsp.client_secret_key)
}
inline ::std::string* QueryRegionListHttpRsp::mutable_client_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_secret_key)
  return client_secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRegionListHttpRsp::release_client_secret_key() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_secret_key)
  
  return client_secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRegionListHttpRsp::set_allocated_client_secret_key(::std::string* client_secret_key) {
  if (client_secret_key != NULL) {
    
  } else {
    
  }
  client_secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_secret_key)
}

// bytes client_custom_config_encrypted = 6;
inline void QueryRegionListHttpRsp::clear_client_custom_config_encrypted() {
  client_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryRegionListHttpRsp::client_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  return client_custom_config_encrypted_.GetNoArena();
}
inline void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const ::std::string& value) {
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
#if LANG_CXX11
inline void QueryRegionListHttpRsp::set_client_custom_config_encrypted(::std::string&& value) {
  
  client_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
#endif
inline void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
inline void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const void* value, size_t size) {
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
inline ::std::string* QueryRegionListHttpRsp::mutable_client_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  return client_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryRegionListHttpRsp::release_client_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  
  return client_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryRegionListHttpRsp::set_allocated_client_custom_config_encrypted(::std::string* client_custom_config_encrypted) {
  if (client_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  client_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}

// -------------------------------------------------------------------

// ForceUpdateInfo

// string force_update_url = 1;
inline void ForceUpdateInfo::clear_force_update_url() {
  force_update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForceUpdateInfo::force_update_url() const {
  // @@protoc_insertion_point(field_get:proto.ForceUpdateInfo.force_update_url)
  return force_update_url_.GetNoArena();
}
inline void ForceUpdateInfo::set_force_update_url(const ::std::string& value) {
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ForceUpdateInfo.force_update_url)
}
#if LANG_CXX11
inline void ForceUpdateInfo::set_force_update_url(::std::string&& value) {
  
  force_update_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ForceUpdateInfo.force_update_url)
}
#endif
inline void ForceUpdateInfo::set_force_update_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ForceUpdateInfo.force_update_url)
}
inline void ForceUpdateInfo::set_force_update_url(const char* value, size_t size) {
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ForceUpdateInfo.force_update_url)
}
inline ::std::string* ForceUpdateInfo::mutable_force_update_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.ForceUpdateInfo.force_update_url)
  return force_update_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForceUpdateInfo::release_force_update_url() {
  // @@protoc_insertion_point(field_release:proto.ForceUpdateInfo.force_update_url)
  
  return force_update_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForceUpdateInfo::set_allocated_force_update_url(::std::string* force_update_url) {
  if (force_update_url != NULL) {
    
  } else {
    
  }
  force_update_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), force_update_url);
  // @@protoc_insertion_point(field_set_allocated:proto.ForceUpdateInfo.force_update_url)
}

// .proto.ClientCustomConfig client_config = 2;
inline bool ForceUpdateInfo::has_client_config() const {
  return this != internal_default_instance() && client_config_ != NULL;
}
inline void ForceUpdateInfo::clear_client_config() {
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) delete client_config_;
  client_config_ = NULL;
}
inline const ::proto::ClientCustomConfig& ForceUpdateInfo::client_config() const {
  const ::proto::ClientCustomConfig* p = client_config_;
  // @@protoc_insertion_point(field_get:proto.ForceUpdateInfo.client_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ClientCustomConfig*>(
      &::proto::_ClientCustomConfig_default_instance_);
}
inline ::proto::ClientCustomConfig* ForceUpdateInfo::mutable_client_config() {
  
  if (client_config_ == NULL) {
    client_config_ = new ::proto::ClientCustomConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.ForceUpdateInfo.client_config)
  return client_config_;
}
inline ::proto::ClientCustomConfig* ForceUpdateInfo::release_client_config() {
  // @@protoc_insertion_point(field_release:proto.ForceUpdateInfo.client_config)
  
  ::proto::ClientCustomConfig* temp = client_config_;
  client_config_ = NULL;
  return temp;
}
inline void ForceUpdateInfo::set_allocated_client_config(::proto::ClientCustomConfig* client_config) {
  delete client_config_;
  client_config_ = client_config;
  if (client_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ForceUpdateInfo.client_config)
}

// -------------------------------------------------------------------

// StopServerInfo

// uint32 stop_begin_time = 1;
inline void StopServerInfo::clear_stop_begin_time() {
  stop_begin_time_ = 0u;
}
inline ::google::protobuf::uint32 StopServerInfo::stop_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.StopServerInfo.stop_begin_time)
  return stop_begin_time_;
}
inline void StopServerInfo::set_stop_begin_time(::google::protobuf::uint32 value) {
  
  stop_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.StopServerInfo.stop_begin_time)
}

// uint32 stop_end_time = 2;
inline void StopServerInfo::clear_stop_end_time() {
  stop_end_time_ = 0u;
}
inline ::google::protobuf::uint32 StopServerInfo::stop_end_time() const {
  // @@protoc_insertion_point(field_get:proto.StopServerInfo.stop_end_time)
  return stop_end_time_;
}
inline void StopServerInfo::set_stop_end_time(::google::protobuf::uint32 value) {
  
  stop_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.StopServerInfo.stop_end_time)
}

// -------------------------------------------------------------------

// ResVersionConfig

// uint32 version = 1;
inline void ResVersionConfig::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 ResVersionConfig::version() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.version)
  return version_;
}
inline void ResVersionConfig::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.version)
}

// bool relogin = 2;
inline void ResVersionConfig::clear_relogin() {
  relogin_ = false;
}
inline bool ResVersionConfig::relogin() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.relogin)
  return relogin_;
}
inline void ResVersionConfig::set_relogin(bool value) {
  
  relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.relogin)
}

// string md5 = 3;
inline void ResVersionConfig::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResVersionConfig::md5() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.md5)
  return md5_.GetNoArena();
}
inline void ResVersionConfig::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.md5)
}
#if LANG_CXX11
inline void ResVersionConfig::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.md5)
}
#endif
inline void ResVersionConfig::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.md5)
}
inline void ResVersionConfig::set_md5(const char* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.md5)
}
inline ::std::string* ResVersionConfig::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResVersionConfig::release_md5() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResVersionConfig::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.md5)
}

// string release_total_size = 4;
inline void ResVersionConfig::clear_release_total_size() {
  release_total_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResVersionConfig::release_total_size() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.release_total_size)
  return release_total_size_.GetNoArena();
}
inline void ResVersionConfig::set_release_total_size(const ::std::string& value) {
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.release_total_size)
}
#if LANG_CXX11
inline void ResVersionConfig::set_release_total_size(::std::string&& value) {
  
  release_total_size_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.release_total_size)
}
#endif
inline void ResVersionConfig::set_release_total_size(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.release_total_size)
}
inline void ResVersionConfig::set_release_total_size(const char* value, size_t size) {
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.release_total_size)
}
inline ::std::string* ResVersionConfig::mutable_release_total_size() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.release_total_size)
  return release_total_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResVersionConfig::release_release_total_size() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.release_total_size)
  
  return release_total_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResVersionConfig::set_allocated_release_total_size(::std::string* release_total_size) {
  if (release_total_size != NULL) {
    
  } else {
    
  }
  release_total_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), release_total_size);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.release_total_size)
}

// -------------------------------------------------------------------

// RegionInfo

// string gateserver_ip = 1;
inline void RegionInfo::clear_gateserver_ip() {
  gateserver_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::gateserver_ip() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.gateserver_ip)
  return gateserver_ip_.GetNoArena();
}
inline void RegionInfo::set_gateserver_ip(const ::std::string& value) {
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.gateserver_ip)
}
#if LANG_CXX11
inline void RegionInfo::set_gateserver_ip(::std::string&& value) {
  
  gateserver_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.gateserver_ip)
}
#endif
inline void RegionInfo::set_gateserver_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.gateserver_ip)
}
inline void RegionInfo::set_gateserver_ip(const char* value, size_t size) {
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.gateserver_ip)
}
inline ::std::string* RegionInfo::mutable_gateserver_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.gateserver_ip)
  return gateserver_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_gateserver_ip() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.gateserver_ip)
  
  return gateserver_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_gateserver_ip(::std::string* gateserver_ip) {
  if (gateserver_ip != NULL) {
    
  } else {
    
  }
  gateserver_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateserver_ip);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.gateserver_ip)
}

// uint32 gateserver_port = 2;
inline void RegionInfo::clear_gateserver_port() {
  gateserver_port_ = 0u;
}
inline ::google::protobuf::uint32 RegionInfo::gateserver_port() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.gateserver_port)
  return gateserver_port_;
}
inline void RegionInfo::set_gateserver_port(::google::protobuf::uint32 value) {
  
  gateserver_port_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.gateserver_port)
}

// string pay_callback_url = 3;
inline void RegionInfo::clear_pay_callback_url() {
  pay_callback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::pay_callback_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.pay_callback_url)
  return pay_callback_url_.GetNoArena();
}
inline void RegionInfo::set_pay_callback_url(const ::std::string& value) {
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.pay_callback_url)
}
#if LANG_CXX11
inline void RegionInfo::set_pay_callback_url(::std::string&& value) {
  
  pay_callback_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.pay_callback_url)
}
#endif
inline void RegionInfo::set_pay_callback_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.pay_callback_url)
}
inline void RegionInfo::set_pay_callback_url(const char* value, size_t size) {
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.pay_callback_url)
}
inline ::std::string* RegionInfo::mutable_pay_callback_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.pay_callback_url)
  return pay_callback_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_pay_callback_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.pay_callback_url)
  
  return pay_callback_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_pay_callback_url(::std::string* pay_callback_url) {
  if (pay_callback_url != NULL) {
    
  } else {
    
  }
  pay_callback_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_callback_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.pay_callback_url)
}

// string area_type = 7;
inline void RegionInfo::clear_area_type() {
  area_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::area_type() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.area_type)
  return area_type_.GetNoArena();
}
inline void RegionInfo::set_area_type(const ::std::string& value) {
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.area_type)
}
#if LANG_CXX11
inline void RegionInfo::set_area_type(::std::string&& value) {
  
  area_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.area_type)
}
#endif
inline void RegionInfo::set_area_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.area_type)
}
inline void RegionInfo::set_area_type(const char* value, size_t size) {
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.area_type)
}
inline ::std::string* RegionInfo::mutable_area_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.area_type)
  return area_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_area_type() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.area_type)
  
  return area_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_area_type(::std::string* area_type) {
  if (area_type != NULL) {
    
  } else {
    
  }
  area_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area_type);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.area_type)
}

// string resource_url = 8;
inline void RegionInfo::clear_resource_url() {
  resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::resource_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.resource_url)
  return resource_url_.GetNoArena();
}
inline void RegionInfo::set_resource_url(const ::std::string& value) {
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.resource_url)
}
#if LANG_CXX11
inline void RegionInfo::set_resource_url(::std::string&& value) {
  
  resource_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.resource_url)
}
#endif
inline void RegionInfo::set_resource_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.resource_url)
}
inline void RegionInfo::set_resource_url(const char* value, size_t size) {
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.resource_url)
}
inline ::std::string* RegionInfo::mutable_resource_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.resource_url)
  return resource_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_resource_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.resource_url)
  
  return resource_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_resource_url(::std::string* resource_url) {
  if (resource_url != NULL) {
    
  } else {
    
  }
  resource_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.resource_url)
}

// string data_url = 9;
inline void RegionInfo::clear_data_url() {
  data_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::data_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.data_url)
  return data_url_.GetNoArena();
}
inline void RegionInfo::set_data_url(const ::std::string& value) {
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.data_url)
}
#if LANG_CXX11
inline void RegionInfo::set_data_url(::std::string&& value) {
  
  data_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.data_url)
}
#endif
inline void RegionInfo::set_data_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.data_url)
}
inline void RegionInfo::set_data_url(const char* value, size_t size) {
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.data_url)
}
inline ::std::string* RegionInfo::mutable_data_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.data_url)
  return data_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_data_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.data_url)
  
  return data_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_data_url(::std::string* data_url) {
  if (data_url != NULL) {
    
  } else {
    
  }
  data_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.data_url)
}

// string feedback_url = 10;
inline void RegionInfo::clear_feedback_url() {
  feedback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::feedback_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.feedback_url)
  return feedback_url_.GetNoArena();
}
inline void RegionInfo::set_feedback_url(const ::std::string& value) {
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.feedback_url)
}
#if LANG_CXX11
inline void RegionInfo::set_feedback_url(::std::string&& value) {
  
  feedback_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.feedback_url)
}
#endif
inline void RegionInfo::set_feedback_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.feedback_url)
}
inline void RegionInfo::set_feedback_url(const char* value, size_t size) {
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.feedback_url)
}
inline ::std::string* RegionInfo::mutable_feedback_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.feedback_url)
  return feedback_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_feedback_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.feedback_url)
  
  return feedback_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_feedback_url(::std::string* feedback_url) {
  if (feedback_url != NULL) {
    
  } else {
    
  }
  feedback_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feedback_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.feedback_url)
}

// string bulletin_url = 11;
inline void RegionInfo::clear_bulletin_url() {
  bulletin_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::bulletin_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.bulletin_url)
  return bulletin_url_.GetNoArena();
}
inline void RegionInfo::set_bulletin_url(const ::std::string& value) {
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.bulletin_url)
}
#if LANG_CXX11
inline void RegionInfo::set_bulletin_url(::std::string&& value) {
  
  bulletin_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.bulletin_url)
}
#endif
inline void RegionInfo::set_bulletin_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.bulletin_url)
}
inline void RegionInfo::set_bulletin_url(const char* value, size_t size) {
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.bulletin_url)
}
inline ::std::string* RegionInfo::mutable_bulletin_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.bulletin_url)
  return bulletin_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_bulletin_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.bulletin_url)
  
  return bulletin_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_bulletin_url(::std::string* bulletin_url) {
  if (bulletin_url != NULL) {
    
  } else {
    
  }
  bulletin_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bulletin_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.bulletin_url)
}

// string resource_url_bak = 12;
inline void RegionInfo::clear_resource_url_bak() {
  resource_url_bak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::resource_url_bak() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.resource_url_bak)
  return resource_url_bak_.GetNoArena();
}
inline void RegionInfo::set_resource_url_bak(const ::std::string& value) {
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.resource_url_bak)
}
#if LANG_CXX11
inline void RegionInfo::set_resource_url_bak(::std::string&& value) {
  
  resource_url_bak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.resource_url_bak)
}
#endif
inline void RegionInfo::set_resource_url_bak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.resource_url_bak)
}
inline void RegionInfo::set_resource_url_bak(const char* value, size_t size) {
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.resource_url_bak)
}
inline ::std::string* RegionInfo::mutable_resource_url_bak() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.resource_url_bak)
  return resource_url_bak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_resource_url_bak() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.resource_url_bak)
  
  return resource_url_bak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_resource_url_bak(::std::string* resource_url_bak) {
  if (resource_url_bak != NULL) {
    
  } else {
    
  }
  resource_url_bak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_url_bak);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.resource_url_bak)
}

// string data_url_bak = 13;
inline void RegionInfo::clear_data_url_bak() {
  data_url_bak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::data_url_bak() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.data_url_bak)
  return data_url_bak_.GetNoArena();
}
inline void RegionInfo::set_data_url_bak(const ::std::string& value) {
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.data_url_bak)
}
#if LANG_CXX11
inline void RegionInfo::set_data_url_bak(::std::string&& value) {
  
  data_url_bak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.data_url_bak)
}
#endif
inline void RegionInfo::set_data_url_bak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.data_url_bak)
}
inline void RegionInfo::set_data_url_bak(const char* value, size_t size) {
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.data_url_bak)
}
inline ::std::string* RegionInfo::mutable_data_url_bak() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.data_url_bak)
  return data_url_bak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_data_url_bak() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.data_url_bak)
  
  return data_url_bak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_data_url_bak(::std::string* data_url_bak) {
  if (data_url_bak != NULL) {
    
  } else {
    
  }
  data_url_bak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_url_bak);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.data_url_bak)
}

// uint32 client_data_version = 14;
inline void RegionInfo::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 RegionInfo::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_data_version)
  return client_data_version_;
}
inline void RegionInfo::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_data_version)
}

// uint32 res_version = 15;
inline void RegionInfo::clear_res_version() {
  res_version_ = 0u;
}
inline ::google::protobuf::uint32 RegionInfo::res_version() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.res_version)
  return res_version_;
}
inline void RegionInfo::set_res_version(::google::protobuf::uint32 value) {
  
  res_version_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.res_version)
}

// string handbook_url = 16;
inline void RegionInfo::clear_handbook_url() {
  handbook_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::handbook_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.handbook_url)
  return handbook_url_.GetNoArena();
}
inline void RegionInfo::set_handbook_url(const ::std::string& value) {
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.handbook_url)
}
#if LANG_CXX11
inline void RegionInfo::set_handbook_url(::std::string&& value) {
  
  handbook_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.handbook_url)
}
#endif
inline void RegionInfo::set_handbook_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.handbook_url)
}
inline void RegionInfo::set_handbook_url(const char* value, size_t size) {
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.handbook_url)
}
inline ::std::string* RegionInfo::mutable_handbook_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.handbook_url)
  return handbook_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_handbook_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.handbook_url)
  
  return handbook_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_handbook_url(::std::string* handbook_url) {
  if (handbook_url != NULL) {
    
  } else {
    
  }
  handbook_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handbook_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.handbook_url)
}

// uint32 client_silence_data_version = 18;
inline void RegionInfo::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
inline ::google::protobuf::uint32 RegionInfo::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_silence_data_version)
  return client_silence_data_version_;
}
inline void RegionInfo::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_silence_data_version)
}

// string client_data_md5 = 19;
inline void RegionInfo::clear_client_data_md5() {
  client_data_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::client_data_md5() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_data_md5)
  return client_data_md5_.GetNoArena();
}
inline void RegionInfo::set_client_data_md5(const ::std::string& value) {
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_data_md5)
}
#if LANG_CXX11
inline void RegionInfo::set_client_data_md5(::std::string&& value) {
  
  client_data_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.client_data_md5)
}
#endif
inline void RegionInfo::set_client_data_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.client_data_md5)
}
inline void RegionInfo::set_client_data_md5(const char* value, size_t size) {
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.client_data_md5)
}
inline ::std::string* RegionInfo::mutable_client_data_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.client_data_md5)
  return client_data_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_client_data_md5() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.client_data_md5)
  
  return client_data_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_client_data_md5(::std::string* client_data_md5) {
  if (client_data_md5 != NULL) {
    
  } else {
    
  }
  client_data_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_data_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.client_data_md5)
}

// string client_silence_data_md5 = 20;
inline void RegionInfo::clear_client_silence_data_md5() {
  client_silence_data_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::client_silence_data_md5() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_silence_data_md5)
  return client_silence_data_md5_.GetNoArena();
}
inline void RegionInfo::set_client_silence_data_md5(const ::std::string& value) {
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_silence_data_md5)
}
#if LANG_CXX11
inline void RegionInfo::set_client_silence_data_md5(::std::string&& value) {
  
  client_silence_data_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.client_silence_data_md5)
}
#endif
inline void RegionInfo::set_client_silence_data_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.client_silence_data_md5)
}
inline void RegionInfo::set_client_silence_data_md5(const char* value, size_t size) {
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.client_silence_data_md5)
}
inline ::std::string* RegionInfo::mutable_client_silence_data_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.client_silence_data_md5)
  return client_silence_data_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_client_silence_data_md5() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.client_silence_data_md5)
  
  return client_silence_data_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_client_silence_data_md5(::std::string* client_silence_data_md5) {
  if (client_silence_data_md5 != NULL) {
    
  } else {
    
  }
  client_silence_data_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_data_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.client_silence_data_md5)
}

// string res_md5 = 21;
inline void RegionInfo::clear_res_md5() {
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::res_md5() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.res_md5)
  return res_md5_.GetNoArena();
}
inline void RegionInfo::set_res_md5(const ::std::string& value) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.res_md5)
}
#if LANG_CXX11
inline void RegionInfo::set_res_md5(::std::string&& value) {
  
  res_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.res_md5)
}
#endif
inline void RegionInfo::set_res_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.res_md5)
}
inline void RegionInfo::set_res_md5(const char* value, size_t size) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.res_md5)
}
inline ::std::string* RegionInfo::mutable_res_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.res_md5)
  return res_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_res_md5() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.res_md5)
  
  return res_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_res_md5(::std::string* res_md5) {
  if (res_md5 != NULL) {
    
  } else {
    
  }
  res_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.res_md5)
}

// .proto.ResVersionConfig res_version_config = 22;
inline bool RegionInfo::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
inline void RegionInfo::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& RegionInfo::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.RegionInfo.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* RegionInfo::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.res_version_config)
  return res_version_config_;
}
inline ::proto::ResVersionConfig* RegionInfo::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
inline void RegionInfo::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.res_version_config)
}

// bytes secret_key = 23;
inline void RegionInfo::clear_secret_key() {
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::secret_key() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.secret_key)
  return secret_key_.GetNoArena();
}
inline void RegionInfo::set_secret_key(const ::std::string& value) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.secret_key)
}
#if LANG_CXX11
inline void RegionInfo::set_secret_key(::std::string&& value) {
  
  secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.secret_key)
}
#endif
inline void RegionInfo::set_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.secret_key)
}
inline void RegionInfo::set_secret_key(const void* value, size_t size) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.secret_key)
}
inline ::std::string* RegionInfo::mutable_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.secret_key)
  return secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_secret_key() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.secret_key)
  
  return secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_secret_key(::std::string* secret_key) {
  if (secret_key != NULL) {
    
  } else {
    
  }
  secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.secret_key)
}

// string official_community_url = 24;
inline void RegionInfo::clear_official_community_url() {
  official_community_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegionInfo::official_community_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.official_community_url)
  return official_community_url_.GetNoArena();
}
inline void RegionInfo::set_official_community_url(const ::std::string& value) {
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.official_community_url)
}
#if LANG_CXX11
inline void RegionInfo::set_official_community_url(::std::string&& value) {
  
  official_community_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.official_community_url)
}
#endif
inline void RegionInfo::set_official_community_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.official_community_url)
}
inline void RegionInfo::set_official_community_url(const char* value, size_t size) {
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.official_community_url)
}
inline ::std::string* RegionInfo::mutable_official_community_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.official_community_url)
  return official_community_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegionInfo::release_official_community_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.official_community_url)
  
  return official_community_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegionInfo::set_allocated_official_community_url(::std::string* official_community_url) {
  if (official_community_url != NULL) {
    
  } else {
    
  }
  official_community_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), official_community_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.official_community_url)
}

// -------------------------------------------------------------------

// QueryCurrRegionHttpRsp

// int32 retcode = 1;
inline void QueryCurrRegionHttpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 QueryCurrRegionHttpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.retcode)
  return retcode_;
}
inline void QueryCurrRegionHttpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.retcode)
}

// string msg = 2;
inline void QueryCurrRegionHttpRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCurrRegionHttpRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.msg)
  return msg_.GetNoArena();
}
inline void QueryCurrRegionHttpRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.msg)
}
#if LANG_CXX11
inline void QueryCurrRegionHttpRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.msg)
}
#endif
inline void QueryCurrRegionHttpRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.msg)
}
inline void QueryCurrRegionHttpRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.msg)
}
inline ::std::string* QueryCurrRegionHttpRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCurrRegionHttpRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCurrRegionHttpRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.msg)
}

// .proto.RegionInfo region_info = 3;
inline bool QueryCurrRegionHttpRsp::has_region_info() const {
  return this != internal_default_instance() && region_info_ != NULL;
}
inline void QueryCurrRegionHttpRsp::clear_region_info() {
  if (GetArenaNoVirtual() == NULL && region_info_ != NULL) delete region_info_;
  region_info_ = NULL;
}
inline const ::proto::RegionInfo& QueryCurrRegionHttpRsp::region_info() const {
  const ::proto::RegionInfo* p = region_info_;
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.region_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::RegionInfo*>(
      &::proto::_RegionInfo_default_instance_);
}
inline ::proto::RegionInfo* QueryCurrRegionHttpRsp::mutable_region_info() {
  
  if (region_info_ == NULL) {
    region_info_ = new ::proto::RegionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.region_info)
  return region_info_;
}
inline ::proto::RegionInfo* QueryCurrRegionHttpRsp::release_region_info() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.region_info)
  
  ::proto::RegionInfo* temp = region_info_;
  region_info_ = NULL;
  return temp;
}
inline void QueryCurrRegionHttpRsp::set_allocated_region_info(::proto::RegionInfo* region_info) {
  delete region_info_;
  region_info_ = region_info;
  if (region_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.region_info)
}

// .proto.ForceUpdateInfo force_udpate = 4;
inline bool QueryCurrRegionHttpRsp::has_force_udpate() const {
  return detail_case() == kForceUdpate;
}
inline void QueryCurrRegionHttpRsp::set_has_force_udpate() {
  _oneof_case_[0] = kForceUdpate;
}
inline void QueryCurrRegionHttpRsp::clear_force_udpate() {
  if (has_force_udpate()) {
    delete detail_.force_udpate_;
    clear_has_detail();
  }
}
inline  const ::proto::ForceUpdateInfo& QueryCurrRegionHttpRsp::force_udpate() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.force_udpate)
  return has_force_udpate()
      ? *detail_.force_udpate_
      : ::proto::ForceUpdateInfo::default_instance();
}
inline ::proto::ForceUpdateInfo* QueryCurrRegionHttpRsp::mutable_force_udpate() {
  if (!has_force_udpate()) {
    clear_detail();
    set_has_force_udpate();
    detail_.force_udpate_ = new ::proto::ForceUpdateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.force_udpate)
  return detail_.force_udpate_;
}
inline ::proto::ForceUpdateInfo* QueryCurrRegionHttpRsp::release_force_udpate() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.force_udpate)
  if (has_force_udpate()) {
    clear_has_detail();
    ::proto::ForceUpdateInfo* temp = detail_.force_udpate_;
    detail_.force_udpate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryCurrRegionHttpRsp::set_allocated_force_udpate(::proto::ForceUpdateInfo* force_udpate) {
  clear_detail();
  if (force_udpate) {
    set_has_force_udpate();
    detail_.force_udpate_ = force_udpate;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.force_udpate)
}

// .proto.StopServerInfo stop_server = 5;
inline bool QueryCurrRegionHttpRsp::has_stop_server() const {
  return detail_case() == kStopServer;
}
inline void QueryCurrRegionHttpRsp::set_has_stop_server() {
  _oneof_case_[0] = kStopServer;
}
inline void QueryCurrRegionHttpRsp::clear_stop_server() {
  if (has_stop_server()) {
    delete detail_.stop_server_;
    clear_has_detail();
  }
}
inline  const ::proto::StopServerInfo& QueryCurrRegionHttpRsp::stop_server() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.stop_server)
  return has_stop_server()
      ? *detail_.stop_server_
      : ::proto::StopServerInfo::default_instance();
}
inline ::proto::StopServerInfo* QueryCurrRegionHttpRsp::mutable_stop_server() {
  if (!has_stop_server()) {
    clear_detail();
    set_has_stop_server();
    detail_.stop_server_ = new ::proto::StopServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.stop_server)
  return detail_.stop_server_;
}
inline ::proto::StopServerInfo* QueryCurrRegionHttpRsp::release_stop_server() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.stop_server)
  if (has_stop_server()) {
    clear_has_detail();
    ::proto::StopServerInfo* temp = detail_.stop_server_;
    detail_.stop_server_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryCurrRegionHttpRsp::set_allocated_stop_server(::proto::StopServerInfo* stop_server) {
  clear_detail();
  if (stop_server) {
    set_has_stop_server();
    detail_.stop_server_ = stop_server;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.stop_server)
}

// .proto.ClientCustomConfig client_config = 10;
inline bool QueryCurrRegionHttpRsp::has_client_config() const {
  return this != internal_default_instance() && client_config_ != NULL;
}
inline void QueryCurrRegionHttpRsp::clear_client_config() {
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) delete client_config_;
  client_config_ = NULL;
}
inline const ::proto::ClientCustomConfig& QueryCurrRegionHttpRsp::client_config() const {
  const ::proto::ClientCustomConfig* p = client_config_;
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.client_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ClientCustomConfig*>(
      &::proto::_ClientCustomConfig_default_instance_);
}
inline ::proto::ClientCustomConfig* QueryCurrRegionHttpRsp::mutable_client_config() {
  
  if (client_config_ == NULL) {
    client_config_ = new ::proto::ClientCustomConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.client_config)
  return client_config_;
}
inline ::proto::ClientCustomConfig* QueryCurrRegionHttpRsp::release_client_config() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.client_config)
  
  ::proto::ClientCustomConfig* temp = client_config_;
  client_config_ = NULL;
  return temp;
}
inline void QueryCurrRegionHttpRsp::set_allocated_client_config(::proto::ClientCustomConfig* client_config) {
  delete client_config_;
  client_config_ = client_config;
  if (client_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.client_config)
}

// bytes client_secret_key = 11;
inline void QueryCurrRegionHttpRsp::clear_client_secret_key() {
  client_secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCurrRegionHttpRsp::client_secret_key() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.client_secret_key)
  return client_secret_key_.GetNoArena();
}
inline void QueryCurrRegionHttpRsp::set_client_secret_key(const ::std::string& value) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
#if LANG_CXX11
inline void QueryCurrRegionHttpRsp::set_client_secret_key(::std::string&& value) {
  
  client_secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
#endif
inline void QueryCurrRegionHttpRsp::set_client_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
inline void QueryCurrRegionHttpRsp::set_client_secret_key(const void* value, size_t size) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
inline ::std::string* QueryCurrRegionHttpRsp::mutable_client_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.client_secret_key)
  return client_secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCurrRegionHttpRsp::release_client_secret_key() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.client_secret_key)
  
  return client_secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCurrRegionHttpRsp::set_allocated_client_secret_key(::std::string* client_secret_key) {
  if (client_secret_key != NULL) {
    
  } else {
    
  }
  client_secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.client_secret_key)
}

// bytes region_custom_config_encrypted = 12;
inline void QueryCurrRegionHttpRsp::clear_region_custom_config_encrypted() {
  region_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCurrRegionHttpRsp::region_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  return region_custom_config_encrypted_.GetNoArena();
}
inline void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const ::std::string& value) {
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
#if LANG_CXX11
inline void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(::std::string&& value) {
  
  region_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
#endif
inline void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
inline void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const void* value, size_t size) {
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
inline ::std::string* QueryCurrRegionHttpRsp::mutable_region_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  return region_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCurrRegionHttpRsp::release_region_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  
  return region_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCurrRegionHttpRsp::set_allocated_region_custom_config_encrypted(::std::string* region_custom_config_encrypted) {
  if (region_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  region_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}

// bytes client_region_custom_config_encrypted = 13;
inline void QueryCurrRegionHttpRsp::clear_client_region_custom_config_encrypted() {
  client_region_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryCurrRegionHttpRsp::client_region_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  return client_region_custom_config_encrypted_.GetNoArena();
}
inline void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const ::std::string& value) {
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
#if LANG_CXX11
inline void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(::std::string&& value) {
  
  client_region_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
#endif
inline void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
inline void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const void* value, size_t size) {
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
inline ::std::string* QueryCurrRegionHttpRsp::mutable_client_region_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  return client_region_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryCurrRegionHttpRsp::release_client_region_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  
  return client_region_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryCurrRegionHttpRsp::set_allocated_client_region_custom_config_encrypted(::std::string* client_region_custom_config_encrypted) {
  if (client_region_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  client_region_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_region_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}

inline bool QueryCurrRegionHttpRsp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void QueryCurrRegionHttpRsp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline QueryCurrRegionHttpRsp::DetailCase QueryCurrRegionHttpRsp::detail_case() const {
  return QueryCurrRegionHttpRsp::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Reliquary

// uint32 level = 1;
inline void Reliquary::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 Reliquary::level() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.level)
  return level_;
}
inline void Reliquary::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.level)
}

// uint32 exp = 2;
inline void Reliquary::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 Reliquary::exp() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.exp)
  return exp_;
}
inline void Reliquary::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.exp)
}

// uint32 promote_level = 3;
inline void Reliquary::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 Reliquary::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.promote_level)
  return promote_level_;
}
inline void Reliquary::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.promote_level)
}

// uint32 main_prop_id = 4;
inline void Reliquary::clear_main_prop_id() {
  main_prop_id_ = 0u;
}
inline ::google::protobuf::uint32 Reliquary::main_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.main_prop_id)
  return main_prop_id_;
}
inline void Reliquary::set_main_prop_id(::google::protobuf::uint32 value) {
  
  main_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.main_prop_id)
}

// repeated uint32 append_prop_id_list = 5;
inline int Reliquary::append_prop_id_list_size() const {
  return append_prop_id_list_.size();
}
inline void Reliquary::clear_append_prop_id_list() {
  append_prop_id_list_.Clear();
}
inline ::google::protobuf::uint32 Reliquary::append_prop_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.append_prop_id_list)
  return append_prop_id_list_.Get(index);
}
inline void Reliquary::set_append_prop_id_list(int index, ::google::protobuf::uint32 value) {
  append_prop_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Reliquary.append_prop_id_list)
}
inline void Reliquary::add_append_prop_id_list(::google::protobuf::uint32 value) {
  append_prop_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Reliquary.append_prop_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Reliquary::append_prop_id_list() const {
  // @@protoc_insertion_point(field_list:proto.Reliquary.append_prop_id_list)
  return append_prop_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Reliquary::mutable_append_prop_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Reliquary.append_prop_id_list)
  return &append_prop_id_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Weapon

// uint32 level = 1;
inline void Weapon::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 Weapon::level() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.level)
  return level_;
}
inline void Weapon::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.level)
}

// uint32 exp = 2;
inline void Weapon::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 Weapon::exp() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.exp)
  return exp_;
}
inline void Weapon::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.exp)
}

// uint32 promote_level = 3;
inline void Weapon::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 Weapon::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.promote_level)
  return promote_level_;
}
inline void Weapon::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.promote_level)
}

// map<uint32, uint32> affix_map = 4;
inline int Weapon::affix_map_size() const {
  return affix_map_.size();
}
inline void Weapon::clear_affix_map() {
  affix_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
Weapon::affix_map() const {
  // @@protoc_insertion_point(field_map:proto.Weapon.affix_map)
  return affix_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
Weapon::mutable_affix_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.Weapon.affix_map)
  return affix_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MaterialDeleteInfo_CountDownDelete

// map<uint32, uint32> delete_time_num_map = 1;
inline int MaterialDeleteInfo_CountDownDelete::delete_time_num_map_size() const {
  return delete_time_num_map_.size();
}
inline void MaterialDeleteInfo_CountDownDelete::clear_delete_time_num_map() {
  delete_time_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
MaterialDeleteInfo_CountDownDelete::delete_time_num_map() const {
  // @@protoc_insertion_point(field_map:proto.MaterialDeleteInfo.CountDownDelete.delete_time_num_map)
  return delete_time_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
MaterialDeleteInfo_CountDownDelete::mutable_delete_time_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MaterialDeleteInfo.CountDownDelete.delete_time_num_map)
  return delete_time_num_map_.MutableMap();
}

// uint32 config_count_down_time = 2;
inline void MaterialDeleteInfo_CountDownDelete::clear_config_count_down_time() {
  config_count_down_time_ = 0u;
}
inline ::google::protobuf::uint32 MaterialDeleteInfo_CountDownDelete::config_count_down_time() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.CountDownDelete.config_count_down_time)
  return config_count_down_time_;
}
inline void MaterialDeleteInfo_CountDownDelete::set_config_count_down_time(::google::protobuf::uint32 value) {
  
  config_count_down_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.CountDownDelete.config_count_down_time)
}

// -------------------------------------------------------------------

// MaterialDeleteInfo_DateTimeDelete

// uint32 delete_time = 1;
inline void MaterialDeleteInfo_DateTimeDelete::clear_delete_time() {
  delete_time_ = 0u;
}
inline ::google::protobuf::uint32 MaterialDeleteInfo_DateTimeDelete::delete_time() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.DateTimeDelete.delete_time)
  return delete_time_;
}
inline void MaterialDeleteInfo_DateTimeDelete::set_delete_time(::google::protobuf::uint32 value) {
  
  delete_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.DateTimeDelete.delete_time)
}

// -------------------------------------------------------------------

// MaterialDeleteInfo

// bool has_delete_config = 1;
inline void MaterialDeleteInfo::clear_has_delete_config() {
  has_delete_config_ = false;
}
inline bool MaterialDeleteInfo::has_delete_config() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.has_delete_config)
  return has_delete_config_;
}
inline void MaterialDeleteInfo::set_has_delete_config(bool value) {
  
  has_delete_config_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.has_delete_config)
}

// .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
inline bool MaterialDeleteInfo::has_count_down_delete() const {
  return delete_info_case() == kCountDownDelete;
}
inline void MaterialDeleteInfo::set_has_count_down_delete() {
  _oneof_case_[0] = kCountDownDelete;
}
inline void MaterialDeleteInfo::clear_count_down_delete() {
  if (has_count_down_delete()) {
    delete delete_info_.count_down_delete_;
    clear_has_delete_info();
  }
}
inline  const ::proto::MaterialDeleteInfo_CountDownDelete& MaterialDeleteInfo::count_down_delete() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.count_down_delete)
  return has_count_down_delete()
      ? *delete_info_.count_down_delete_
      : ::proto::MaterialDeleteInfo_CountDownDelete::default_instance();
}
inline ::proto::MaterialDeleteInfo_CountDownDelete* MaterialDeleteInfo::mutable_count_down_delete() {
  if (!has_count_down_delete()) {
    clear_delete_info();
    set_has_count_down_delete();
    delete_info_.count_down_delete_ = new ::proto::MaterialDeleteInfo_CountDownDelete;
  }
  // @@protoc_insertion_point(field_mutable:proto.MaterialDeleteInfo.count_down_delete)
  return delete_info_.count_down_delete_;
}
inline ::proto::MaterialDeleteInfo_CountDownDelete* MaterialDeleteInfo::release_count_down_delete() {
  // @@protoc_insertion_point(field_release:proto.MaterialDeleteInfo.count_down_delete)
  if (has_count_down_delete()) {
    clear_has_delete_info();
    ::proto::MaterialDeleteInfo_CountDownDelete* temp = delete_info_.count_down_delete_;
    delete_info_.count_down_delete_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MaterialDeleteInfo::set_allocated_count_down_delete(::proto::MaterialDeleteInfo_CountDownDelete* count_down_delete) {
  clear_delete_info();
  if (count_down_delete) {
    set_has_count_down_delete();
    delete_info_.count_down_delete_ = count_down_delete;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MaterialDeleteInfo.count_down_delete)
}

// .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
inline bool MaterialDeleteInfo::has_date_delete() const {
  return delete_info_case() == kDateDelete;
}
inline void MaterialDeleteInfo::set_has_date_delete() {
  _oneof_case_[0] = kDateDelete;
}
inline void MaterialDeleteInfo::clear_date_delete() {
  if (has_date_delete()) {
    delete delete_info_.date_delete_;
    clear_has_delete_info();
  }
}
inline  const ::proto::MaterialDeleteInfo_DateTimeDelete& MaterialDeleteInfo::date_delete() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.date_delete)
  return has_date_delete()
      ? *delete_info_.date_delete_
      : ::proto::MaterialDeleteInfo_DateTimeDelete::default_instance();
}
inline ::proto::MaterialDeleteInfo_DateTimeDelete* MaterialDeleteInfo::mutable_date_delete() {
  if (!has_date_delete()) {
    clear_delete_info();
    set_has_date_delete();
    delete_info_.date_delete_ = new ::proto::MaterialDeleteInfo_DateTimeDelete;
  }
  // @@protoc_insertion_point(field_mutable:proto.MaterialDeleteInfo.date_delete)
  return delete_info_.date_delete_;
}
inline ::proto::MaterialDeleteInfo_DateTimeDelete* MaterialDeleteInfo::release_date_delete() {
  // @@protoc_insertion_point(field_release:proto.MaterialDeleteInfo.date_delete)
  if (has_date_delete()) {
    clear_has_delete_info();
    ::proto::MaterialDeleteInfo_DateTimeDelete* temp = delete_info_.date_delete_;
    delete_info_.date_delete_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void MaterialDeleteInfo::set_allocated_date_delete(::proto::MaterialDeleteInfo_DateTimeDelete* date_delete) {
  clear_delete_info();
  if (date_delete) {
    set_has_date_delete();
    delete_info_.date_delete_ = date_delete;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MaterialDeleteInfo.date_delete)
}

inline bool MaterialDeleteInfo::has_delete_info() const {
  return delete_info_case() != DELETE_INFO_NOT_SET;
}
inline void MaterialDeleteInfo::clear_has_delete_info() {
  _oneof_case_[0] = DELETE_INFO_NOT_SET;
}
inline MaterialDeleteInfo::DeleteInfoCase MaterialDeleteInfo::delete_info_case() const {
  return MaterialDeleteInfo::DeleteInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Material

// uint32 count = 1;
inline void Material::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 Material::count() const {
  // @@protoc_insertion_point(field_get:proto.Material.count)
  return count_;
}
inline void Material::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.Material.count)
}

// .proto.MaterialDeleteInfo delete_info = 2;
inline bool Material::has_delete_info() const {
  return this != internal_default_instance() && delete_info_ != NULL;
}
inline void Material::clear_delete_info() {
  if (GetArenaNoVirtual() == NULL && delete_info_ != NULL) delete delete_info_;
  delete_info_ = NULL;
}
inline const ::proto::MaterialDeleteInfo& Material::delete_info() const {
  const ::proto::MaterialDeleteInfo* p = delete_info_;
  // @@protoc_insertion_point(field_get:proto.Material.delete_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MaterialDeleteInfo*>(
      &::proto::_MaterialDeleteInfo_default_instance_);
}
inline ::proto::MaterialDeleteInfo* Material::mutable_delete_info() {
  
  if (delete_info_ == NULL) {
    delete_info_ = new ::proto::MaterialDeleteInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.Material.delete_info)
  return delete_info_;
}
inline ::proto::MaterialDeleteInfo* Material::release_delete_info() {
  // @@protoc_insertion_point(field_release:proto.Material.delete_info)
  
  ::proto::MaterialDeleteInfo* temp = delete_info_;
  delete_info_ = NULL;
  return temp;
}
inline void Material::set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info) {
  delete delete_info_;
  delete_info_ = delete_info;
  if (delete_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Material.delete_info)
}

// -------------------------------------------------------------------

// Equip

// .proto.Reliquary reliquary = 1;
inline bool Equip::has_reliquary() const {
  return detail_case() == kReliquary;
}
inline void Equip::set_has_reliquary() {
  _oneof_case_[0] = kReliquary;
}
inline void Equip::clear_reliquary() {
  if (has_reliquary()) {
    delete detail_.reliquary_;
    clear_has_detail();
  }
}
inline  const ::proto::Reliquary& Equip::reliquary() const {
  // @@protoc_insertion_point(field_get:proto.Equip.reliquary)
  return has_reliquary()
      ? *detail_.reliquary_
      : ::proto::Reliquary::default_instance();
}
inline ::proto::Reliquary* Equip::mutable_reliquary() {
  if (!has_reliquary()) {
    clear_detail();
    set_has_reliquary();
    detail_.reliquary_ = new ::proto::Reliquary;
  }
  // @@protoc_insertion_point(field_mutable:proto.Equip.reliquary)
  return detail_.reliquary_;
}
inline ::proto::Reliquary* Equip::release_reliquary() {
  // @@protoc_insertion_point(field_release:proto.Equip.reliquary)
  if (has_reliquary()) {
    clear_has_detail();
    ::proto::Reliquary* temp = detail_.reliquary_;
    detail_.reliquary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Equip::set_allocated_reliquary(::proto::Reliquary* reliquary) {
  clear_detail();
  if (reliquary) {
    set_has_reliquary();
    detail_.reliquary_ = reliquary;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Equip.reliquary)
}

// .proto.Weapon weapon = 2;
inline bool Equip::has_weapon() const {
  return detail_case() == kWeapon;
}
inline void Equip::set_has_weapon() {
  _oneof_case_[0] = kWeapon;
}
inline void Equip::clear_weapon() {
  if (has_weapon()) {
    delete detail_.weapon_;
    clear_has_detail();
  }
}
inline  const ::proto::Weapon& Equip::weapon() const {
  // @@protoc_insertion_point(field_get:proto.Equip.weapon)
  return has_weapon()
      ? *detail_.weapon_
      : ::proto::Weapon::default_instance();
}
inline ::proto::Weapon* Equip::mutable_weapon() {
  if (!has_weapon()) {
    clear_detail();
    set_has_weapon();
    detail_.weapon_ = new ::proto::Weapon;
  }
  // @@protoc_insertion_point(field_mutable:proto.Equip.weapon)
  return detail_.weapon_;
}
inline ::proto::Weapon* Equip::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.Equip.weapon)
  if (has_weapon()) {
    clear_has_detail();
    ::proto::Weapon* temp = detail_.weapon_;
    detail_.weapon_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Equip::set_allocated_weapon(::proto::Weapon* weapon) {
  clear_detail();
  if (weapon) {
    set_has_weapon();
    detail_.weapon_ = weapon;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Equip.weapon)
}

inline bool Equip::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void Equip::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline Equip::DetailCase Equip::detail_case() const {
  return Equip::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Item

// uint32 item_id = 1;
inline void Item::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 Item::item_id() const {
  // @@protoc_insertion_point(field_get:proto.Item.item_id)
  return item_id_;
}
inline void Item::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Item.item_id)
}

// uint64 guid = 2;
inline void Item::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Item::guid() const {
  // @@protoc_insertion_point(field_get:proto.Item.guid)
  return guid_;
}
inline void Item::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.Item.guid)
}

// .proto.Material material = 5;
inline bool Item::has_material() const {
  return detail_case() == kMaterial;
}
inline void Item::set_has_material() {
  _oneof_case_[0] = kMaterial;
}
inline void Item::clear_material() {
  if (has_material()) {
    delete detail_.material_;
    clear_has_detail();
  }
}
inline  const ::proto::Material& Item::material() const {
  // @@protoc_insertion_point(field_get:proto.Item.material)
  return has_material()
      ? *detail_.material_
      : ::proto::Material::default_instance();
}
inline ::proto::Material* Item::mutable_material() {
  if (!has_material()) {
    clear_detail();
    set_has_material();
    detail_.material_ = new ::proto::Material;
  }
  // @@protoc_insertion_point(field_mutable:proto.Item.material)
  return detail_.material_;
}
inline ::proto::Material* Item::release_material() {
  // @@protoc_insertion_point(field_release:proto.Item.material)
  if (has_material()) {
    clear_has_detail();
    ::proto::Material* temp = detail_.material_;
    detail_.material_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item::set_allocated_material(::proto::Material* material) {
  clear_detail();
  if (material) {
    set_has_material();
    detail_.material_ = material;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Item.material)
}

// .proto.Equip equip = 6;
inline bool Item::has_equip() const {
  return detail_case() == kEquip;
}
inline void Item::set_has_equip() {
  _oneof_case_[0] = kEquip;
}
inline void Item::clear_equip() {
  if (has_equip()) {
    delete detail_.equip_;
    clear_has_detail();
  }
}
inline  const ::proto::Equip& Item::equip() const {
  // @@protoc_insertion_point(field_get:proto.Item.equip)
  return has_equip()
      ? *detail_.equip_
      : ::proto::Equip::default_instance();
}
inline ::proto::Equip* Item::mutable_equip() {
  if (!has_equip()) {
    clear_detail();
    set_has_equip();
    detail_.equip_ = new ::proto::Equip;
  }
  // @@protoc_insertion_point(field_mutable:proto.Item.equip)
  return detail_.equip_;
}
inline ::proto::Equip* Item::release_equip() {
  // @@protoc_insertion_point(field_release:proto.Item.equip)
  if (has_equip()) {
    clear_has_detail();
    ::proto::Equip* temp = detail_.equip_;
    detail_.equip_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Item::set_allocated_equip(::proto::Equip* equip) {
  clear_detail();
  if (equip) {
    set_has_equip();
    detail_.equip_ = equip;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Item.equip)
}

inline bool Item::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void Item::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline Item::DetailCase Item::detail_case() const {
  return Item::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ItemParam

// uint32 item_id = 1;
inline void ItemParam::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 ItemParam::item_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemParam.item_id)
  return item_id_;
}
inline void ItemParam::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParam.item_id)
}

// uint32 count = 2;
inline void ItemParam::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 ItemParam::count() const {
  // @@protoc_insertion_point(field_get:proto.ItemParam.count)
  return count_;
}
inline void ItemParam::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParam.count)
}

// -------------------------------------------------------------------

// EquipParam

// uint32 item_id = 1;
inline void EquipParam::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 EquipParam::item_id() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_id)
  return item_id_;
}
inline void EquipParam::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_id)
}

// uint32 item_num = 2;
inline void EquipParam::clear_item_num() {
  item_num_ = 0u;
}
inline ::google::protobuf::uint32 EquipParam::item_num() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_num)
  return item_num_;
}
inline void EquipParam::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_num)
}

// uint32 item_level = 3;
inline void EquipParam::clear_item_level() {
  item_level_ = 0u;
}
inline ::google::protobuf::uint32 EquipParam::item_level() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_level)
  return item_level_;
}
inline void EquipParam::set_item_level(::google::protobuf::uint32 value) {
  
  item_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_level)
}

// uint32 promote_level = 4;
inline void EquipParam::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 EquipParam::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.promote_level)
  return promote_level_;
}
inline void EquipParam::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.promote_level)
}

// -------------------------------------------------------------------

// EquipParamList

// repeated .proto.EquipParam item_list = 1;
inline int EquipParamList::item_list_size() const {
  return item_list_.size();
}
inline void EquipParamList::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::EquipParam& EquipParamList::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EquipParamList.item_list)
  return item_list_.Get(index);
}
inline ::proto::EquipParam* EquipParamList::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EquipParamList.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::EquipParam* EquipParamList::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.EquipParamList.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >*
EquipParamList::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EquipParamList.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >&
EquipParamList::item_list() const {
  // @@protoc_insertion_point(field_list:proto.EquipParamList.item_list)
  return item_list_;
}

// -------------------------------------------------------------------

// Reward

// uint32 reward_id = 1;
inline void Reward::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 Reward::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.Reward.reward_id)
  return reward_id_;
}
inline void Reward::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Reward.reward_id)
}

// repeated .proto.ItemParam item_list = 2;
inline int Reward::item_list_size() const {
  return item_list_.size();
}
inline void Reward::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::ItemParam& Reward::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Reward.item_list)
  return item_list_.Get(index);
}
inline ::proto::ItemParam* Reward::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Reward.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::ItemParam* Reward::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.Reward.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
Reward::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Reward.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
Reward::item_list() const {
  // @@protoc_insertion_point(field_list:proto.Reward.item_list)
  return item_list_;
}

// -------------------------------------------------------------------

// AbilityString

// string str = 1;
inline bool AbilityString::has_str() const {
  return type_case() == kStr;
}
inline void AbilityString::set_has_str() {
  _oneof_case_[0] = kStr;
}
inline void AbilityString::clear_str() {
  if (has_str()) {
    type_.str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_type();
  }
}
inline const ::std::string& AbilityString::str() const {
  // @@protoc_insertion_point(field_get:proto.AbilityString.str)
  if (has_str()) {
    return type_.str_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AbilityString::set_str(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
}
#if LANG_CXX11
inline void AbilityString::set_str(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityString.str)
}
#endif
inline void AbilityString::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityString.str)
}
inline void AbilityString::set_str(const char* value, size_t size) {
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityString.str)
}
inline ::std::string* AbilityString::mutable_str() {
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityString.str)
  return type_.str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbilityString::release_str() {
  // @@protoc_insertion_point(field_release:proto.AbilityString.str)
  if (has_str()) {
    clear_has_type();
    return type_.str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AbilityString::set_allocated_str(::std::string* str) {
  if (!has_str()) {
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_type();
  if (str != NULL) {
    set_has_str();
    type_.str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        str);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityString.str)
}

// uint32 hash = 2;
inline bool AbilityString::has_hash() const {
  return type_case() == kHash;
}
inline void AbilityString::set_has_hash() {
  _oneof_case_[0] = kHash;
}
inline void AbilityString::clear_hash() {
  if (has_hash()) {
    type_.hash_ = 0u;
    clear_has_type();
  }
}
inline ::google::protobuf::uint32 AbilityString::hash() const {
  // @@protoc_insertion_point(field_get:proto.AbilityString.hash)
  if (has_hash()) {
    return type_.hash_;
  }
  return 0u;
}
inline void AbilityString::set_hash(::google::protobuf::uint32 value) {
  if (!has_hash()) {
    clear_type();
    set_has_hash();
  }
  type_.hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityString.hash)
}

inline bool AbilityString::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void AbilityString::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline AbilityString::TypeCase AbilityString::type_case() const {
  return AbilityString::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AbilityFloatValue

// float value = 1;
inline void AbilityFloatValue::clear_value() {
  value_ = 0;
}
inline float AbilityFloatValue::value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityFloatValue.value)
  return value_;
}
inline void AbilityFloatValue::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityFloatValue.value)
}

// -------------------------------------------------------------------

// AbilityScalarValueEntry

// .proto.AbilityString key = 1;
inline bool AbilityScalarValueEntry::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void AbilityScalarValueEntry::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::proto::AbilityString& AbilityScalarValueEntry::key() const {
  const ::proto::AbilityString* p = key_;
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.key)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityScalarValueEntry::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityScalarValueEntry.key)
  return key_;
}
inline ::proto::AbilityString* AbilityScalarValueEntry::release_key() {
  // @@protoc_insertion_point(field_release:proto.AbilityScalarValueEntry.key)
  
  ::proto::AbilityString* temp = key_;
  key_ = NULL;
  return temp;
}
inline void AbilityScalarValueEntry::set_allocated_key(::proto::AbilityString* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityScalarValueEntry.key)
}

// .proto.AbilityScalarType value_type = 2;
inline void AbilityScalarValueEntry::clear_value_type() {
  value_type_ = 0;
}
inline ::proto::AbilityScalarType AbilityScalarValueEntry::value_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.value_type)
  return static_cast< ::proto::AbilityScalarType >(value_type_);
}
inline void AbilityScalarValueEntry::set_value_type(::proto::AbilityScalarType value) {
  
  value_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.value_type)
}

// float float_value = 3;
inline bool AbilityScalarValueEntry::has_float_value() const {
  return value_case() == kFloatValue;
}
inline void AbilityScalarValueEntry::set_has_float_value() {
  _oneof_case_[0] = kFloatValue;
}
inline void AbilityScalarValueEntry::clear_float_value() {
  if (has_float_value()) {
    value_.float_value_ = 0;
    clear_has_value();
  }
}
inline float AbilityScalarValueEntry::float_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.float_value)
  if (has_float_value()) {
    return value_.float_value_;
  }
  return 0;
}
inline void AbilityScalarValueEntry::set_float_value(float value) {
  if (!has_float_value()) {
    clear_value();
    set_has_float_value();
  }
  value_.float_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.float_value)
}

// string string_value = 4;
inline bool AbilityScalarValueEntry::has_string_value() const {
  return value_case() == kStringValue;
}
inline void AbilityScalarValueEntry::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
inline void AbilityScalarValueEntry::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& AbilityScalarValueEntry::string_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.string_value)
  if (has_string_value()) {
    return value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AbilityScalarValueEntry::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
}
#if LANG_CXX11
inline void AbilityScalarValueEntry::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityScalarValueEntry.string_value)
}
#endif
inline void AbilityScalarValueEntry::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityScalarValueEntry.string_value)
}
inline void AbilityScalarValueEntry::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityScalarValueEntry.string_value)
}
inline ::std::string* AbilityScalarValueEntry::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityScalarValueEntry.string_value)
  return value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbilityScalarValueEntry::release_string_value() {
  // @@protoc_insertion_point(field_release:proto.AbilityScalarValueEntry.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AbilityScalarValueEntry::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityScalarValueEntry.string_value)
}

// int32 int_value = 5;
inline bool AbilityScalarValueEntry::has_int_value() const {
  return value_case() == kIntValue;
}
inline void AbilityScalarValueEntry::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
inline void AbilityScalarValueEntry::clear_int_value() {
  if (has_int_value()) {
    value_.int_value_ = 0;
    clear_has_value();
  }
}
inline ::google::protobuf::int32 AbilityScalarValueEntry::int_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.int_value)
  if (has_int_value()) {
    return value_.int_value_;
  }
  return 0;
}
inline void AbilityScalarValueEntry::set_int_value(::google::protobuf::int32 value) {
  if (!has_int_value()) {
    clear_value();
    set_has_int_value();
  }
  value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.int_value)
}

// uint32 uint_value = 6;
inline bool AbilityScalarValueEntry::has_uint_value() const {
  return value_case() == kUintValue;
}
inline void AbilityScalarValueEntry::set_has_uint_value() {
  _oneof_case_[0] = kUintValue;
}
inline void AbilityScalarValueEntry::clear_uint_value() {
  if (has_uint_value()) {
    value_.uint_value_ = 0u;
    clear_has_value();
  }
}
inline ::google::protobuf::uint32 AbilityScalarValueEntry::uint_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.uint_value)
  if (has_uint_value()) {
    return value_.uint_value_;
  }
  return 0u;
}
inline void AbilityScalarValueEntry::set_uint_value(::google::protobuf::uint32 value) {
  if (!has_uint_value()) {
    clear_value();
    set_has_uint_value();
  }
  value_.uint_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.uint_value)
}

inline bool AbilityScalarValueEntry::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void AbilityScalarValueEntry::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline AbilityScalarValueEntry::ValueCase AbilityScalarValueEntry::value_case() const {
  return AbilityScalarValueEntry::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AbilityAppliedAbility

// .proto.AbilityString ability_name = 1;
inline bool AbilityAppliedAbility::has_ability_name() const {
  return this != internal_default_instance() && ability_name_ != NULL;
}
inline void AbilityAppliedAbility::clear_ability_name() {
  if (GetArenaNoVirtual() == NULL && ability_name_ != NULL) delete ability_name_;
  ability_name_ = NULL;
}
inline const ::proto::AbilityString& AbilityAppliedAbility::ability_name() const {
  const ::proto::AbilityString* p = ability_name_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.ability_name)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityAppliedAbility::mutable_ability_name() {
  
  if (ability_name_ == NULL) {
    ability_name_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.ability_name)
  return ability_name_;
}
inline ::proto::AbilityString* AbilityAppliedAbility::release_ability_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedAbility.ability_name)
  
  ::proto::AbilityString* temp = ability_name_;
  ability_name_ = NULL;
  return temp;
}
inline void AbilityAppliedAbility::set_allocated_ability_name(::proto::AbilityString* ability_name) {
  delete ability_name_;
  ability_name_ = ability_name;
  if (ability_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedAbility.ability_name)
}

// .proto.AbilityString ability_override = 2;
inline bool AbilityAppliedAbility::has_ability_override() const {
  return this != internal_default_instance() && ability_override_ != NULL;
}
inline void AbilityAppliedAbility::clear_ability_override() {
  if (GetArenaNoVirtual() == NULL && ability_override_ != NULL) delete ability_override_;
  ability_override_ = NULL;
}
inline const ::proto::AbilityString& AbilityAppliedAbility::ability_override() const {
  const ::proto::AbilityString* p = ability_override_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.ability_override)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityAppliedAbility::mutable_ability_override() {
  
  if (ability_override_ == NULL) {
    ability_override_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.ability_override)
  return ability_override_;
}
inline ::proto::AbilityString* AbilityAppliedAbility::release_ability_override() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedAbility.ability_override)
  
  ::proto::AbilityString* temp = ability_override_;
  ability_override_ = NULL;
  return temp;
}
inline void AbilityAppliedAbility::set_allocated_ability_override(::proto::AbilityString* ability_override) {
  delete ability_override_;
  ability_override_ = ability_override;
  if (ability_override) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedAbility.ability_override)
}

// repeated .proto.AbilityScalarValueEntry override_map = 3;
inline int AbilityAppliedAbility::override_map_size() const {
  return override_map_.size();
}
inline void AbilityAppliedAbility::clear_override_map() {
  override_map_.Clear();
}
inline const ::proto::AbilityScalarValueEntry& AbilityAppliedAbility::override_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.override_map)
  return override_map_.Get(index);
}
inline ::proto::AbilityScalarValueEntry* AbilityAppliedAbility::mutable_override_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.override_map)
  return override_map_.Mutable(index);
}
inline ::proto::AbilityScalarValueEntry* AbilityAppliedAbility::add_override_map() {
  // @@protoc_insertion_point(field_add:proto.AbilityAppliedAbility.override_map)
  return override_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
AbilityAppliedAbility::mutable_override_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityAppliedAbility.override_map)
  return &override_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
AbilityAppliedAbility::override_map() const {
  // @@protoc_insertion_point(field_list:proto.AbilityAppliedAbility.override_map)
  return override_map_;
}

// uint32 instanced_ability_id = 4;
inline void AbilityAppliedAbility::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedAbility::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.instanced_ability_id)
  return instanced_ability_id_;
}
inline void AbilityAppliedAbility::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedAbility.instanced_ability_id)
}

// -------------------------------------------------------------------

// AbilityAttachedModifier

// bool is_invalid = 1;
inline void AbilityAttachedModifier::clear_is_invalid() {
  is_invalid_ = false;
}
inline bool AbilityAttachedModifier::is_invalid() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.is_invalid)
  return is_invalid_;
}
inline void AbilityAttachedModifier::set_is_invalid(bool value) {
  
  is_invalid_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.is_invalid)
}

// uint32 owner_entity_id = 2;
inline void AbilityAttachedModifier::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAttachedModifier::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.owner_entity_id)
  return owner_entity_id_;
}
inline void AbilityAttachedModifier::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.owner_entity_id)
}

// uint32 instanced_modifier_id = 3;
inline void AbilityAttachedModifier::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAttachedModifier::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.instanced_modifier_id)
  return instanced_modifier_id_;
}
inline void AbilityAttachedModifier::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.instanced_modifier_id)
}

// -------------------------------------------------------------------

// ModifierDurability

// float reduce_ratio = 1;
inline void ModifierDurability::clear_reduce_ratio() {
  reduce_ratio_ = 0;
}
inline float ModifierDurability::reduce_ratio() const {
  // @@protoc_insertion_point(field_get:proto.ModifierDurability.reduce_ratio)
  return reduce_ratio_;
}
inline void ModifierDurability::set_reduce_ratio(float value) {
  
  reduce_ratio_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifierDurability.reduce_ratio)
}

// float remaining_durability = 2;
inline void ModifierDurability::clear_remaining_durability() {
  remaining_durability_ = 0;
}
inline float ModifierDurability::remaining_durability() const {
  // @@protoc_insertion_point(field_get:proto.ModifierDurability.remaining_durability)
  return remaining_durability_;
}
inline void ModifierDurability::set_remaining_durability(float value) {
  
  remaining_durability_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifierDurability.remaining_durability)
}

// -------------------------------------------------------------------

// AbilityAppliedModifier

// int32 modifier_local_id = 1;
inline void AbilityAppliedModifier::clear_modifier_local_id() {
  modifier_local_id_ = 0;
}
inline ::google::protobuf::int32 AbilityAppliedModifier::modifier_local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.modifier_local_id)
  return modifier_local_id_;
}
inline void AbilityAppliedModifier::set_modifier_local_id(::google::protobuf::int32 value) {
  
  modifier_local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.modifier_local_id)
}

// uint32 parent_ability_entity_id = 2;
inline void AbilityAppliedModifier::clear_parent_ability_entity_id() {
  parent_ability_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::parent_ability_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_entity_id)
  return parent_ability_entity_id_;
}
inline void AbilityAppliedModifier::set_parent_ability_entity_id(::google::protobuf::uint32 value) {
  
  parent_ability_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.parent_ability_entity_id)
}

// .proto.AbilityString parent_ability_name = 3;
inline bool AbilityAppliedModifier::has_parent_ability_name() const {
  return this != internal_default_instance() && parent_ability_name_ != NULL;
}
inline void AbilityAppliedModifier::clear_parent_ability_name() {
  if (GetArenaNoVirtual() == NULL && parent_ability_name_ != NULL) delete parent_ability_name_;
  parent_ability_name_ = NULL;
}
inline const ::proto::AbilityString& AbilityAppliedModifier::parent_ability_name() const {
  const ::proto::AbilityString* p = parent_ability_name_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_name)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityAppliedModifier::mutable_parent_ability_name() {
  
  if (parent_ability_name_ == NULL) {
    parent_ability_name_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.parent_ability_name)
  return parent_ability_name_;
}
inline ::proto::AbilityString* AbilityAppliedModifier::release_parent_ability_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.parent_ability_name)
  
  ::proto::AbilityString* temp = parent_ability_name_;
  parent_ability_name_ = NULL;
  return temp;
}
inline void AbilityAppliedModifier::set_allocated_parent_ability_name(::proto::AbilityString* parent_ability_name) {
  delete parent_ability_name_;
  parent_ability_name_ = parent_ability_name;
  if (parent_ability_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.parent_ability_name)
}

// .proto.AbilityString parent_ability_override = 4;
inline bool AbilityAppliedModifier::has_parent_ability_override() const {
  return this != internal_default_instance() && parent_ability_override_ != NULL;
}
inline void AbilityAppliedModifier::clear_parent_ability_override() {
  if (GetArenaNoVirtual() == NULL && parent_ability_override_ != NULL) delete parent_ability_override_;
  parent_ability_override_ = NULL;
}
inline const ::proto::AbilityString& AbilityAppliedModifier::parent_ability_override() const {
  const ::proto::AbilityString* p = parent_ability_override_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_override)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
inline ::proto::AbilityString* AbilityAppliedModifier::mutable_parent_ability_override() {
  
  if (parent_ability_override_ == NULL) {
    parent_ability_override_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.parent_ability_override)
  return parent_ability_override_;
}
inline ::proto::AbilityString* AbilityAppliedModifier::release_parent_ability_override() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.parent_ability_override)
  
  ::proto::AbilityString* temp = parent_ability_override_;
  parent_ability_override_ = NULL;
  return temp;
}
inline void AbilityAppliedModifier::set_allocated_parent_ability_override(::proto::AbilityString* parent_ability_override) {
  delete parent_ability_override_;
  parent_ability_override_ = parent_ability_override;
  if (parent_ability_override) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.parent_ability_override)
}

// uint32 instanced_ability_id = 5;
inline void AbilityAppliedModifier::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.instanced_ability_id)
  return instanced_ability_id_;
}
inline void AbilityAppliedModifier::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.instanced_ability_id)
}

// uint32 instanced_modifier_id = 6;
inline void AbilityAppliedModifier::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.instanced_modifier_id)
  return instanced_modifier_id_;
}
inline void AbilityAppliedModifier::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.instanced_modifier_id)
}

// float exist_duration = 7;
inline void AbilityAppliedModifier::clear_exist_duration() {
  exist_duration_ = 0;
}
inline float AbilityAppliedModifier::exist_duration() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.exist_duration)
  return exist_duration_;
}
inline void AbilityAppliedModifier::set_exist_duration(float value) {
  
  exist_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.exist_duration)
}

// .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
inline bool AbilityAppliedModifier::has_attached_instanced_modifier() const {
  return this != internal_default_instance() && attached_instanced_modifier_ != NULL;
}
inline void AbilityAppliedModifier::clear_attached_instanced_modifier() {
  if (GetArenaNoVirtual() == NULL && attached_instanced_modifier_ != NULL) delete attached_instanced_modifier_;
  attached_instanced_modifier_ = NULL;
}
inline const ::proto::AbilityAttachedModifier& AbilityAppliedModifier::attached_instanced_modifier() const {
  const ::proto::AbilityAttachedModifier* p = attached_instanced_modifier_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.attached_instanced_modifier)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityAttachedModifier*>(
      &::proto::_AbilityAttachedModifier_default_instance_);
}
inline ::proto::AbilityAttachedModifier* AbilityAppliedModifier::mutable_attached_instanced_modifier() {
  
  if (attached_instanced_modifier_ == NULL) {
    attached_instanced_modifier_ = new ::proto::AbilityAttachedModifier;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.attached_instanced_modifier)
  return attached_instanced_modifier_;
}
inline ::proto::AbilityAttachedModifier* AbilityAppliedModifier::release_attached_instanced_modifier() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.attached_instanced_modifier)
  
  ::proto::AbilityAttachedModifier* temp = attached_instanced_modifier_;
  attached_instanced_modifier_ = NULL;
  return temp;
}
inline void AbilityAppliedModifier::set_allocated_attached_instanced_modifier(::proto::AbilityAttachedModifier* attached_instanced_modifier) {
  delete attached_instanced_modifier_;
  attached_instanced_modifier_ = attached_instanced_modifier;
  if (attached_instanced_modifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.attached_instanced_modifier)
}

// uint32 apply_entity_id = 9;
inline void AbilityAppliedModifier::clear_apply_entity_id() {
  apply_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityAppliedModifier::apply_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.apply_entity_id)
  return apply_entity_id_;
}
inline void AbilityAppliedModifier::set_apply_entity_id(::google::protobuf::uint32 value) {
  
  apply_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.apply_entity_id)
}

// bool is_attached_parent_ability = 10;
inline void AbilityAppliedModifier::clear_is_attached_parent_ability() {
  is_attached_parent_ability_ = false;
}
inline bool AbilityAppliedModifier::is_attached_parent_ability() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.is_attached_parent_ability)
  return is_attached_parent_ability_;
}
inline void AbilityAppliedModifier::set_is_attached_parent_ability(bool value) {
  
  is_attached_parent_ability_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.is_attached_parent_ability)
}

// .proto.ModifierDurability modifier_durability = 11;
inline bool AbilityAppliedModifier::has_modifier_durability() const {
  return this != internal_default_instance() && modifier_durability_ != NULL;
}
inline void AbilityAppliedModifier::clear_modifier_durability() {
  if (GetArenaNoVirtual() == NULL && modifier_durability_ != NULL) delete modifier_durability_;
  modifier_durability_ = NULL;
}
inline const ::proto::ModifierDurability& AbilityAppliedModifier::modifier_durability() const {
  const ::proto::ModifierDurability* p = modifier_durability_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.modifier_durability)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ModifierDurability*>(
      &::proto::_ModifierDurability_default_instance_);
}
inline ::proto::ModifierDurability* AbilityAppliedModifier::mutable_modifier_durability() {
  
  if (modifier_durability_ == NULL) {
    modifier_durability_ = new ::proto::ModifierDurability;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.modifier_durability)
  return modifier_durability_;
}
inline ::proto::ModifierDurability* AbilityAppliedModifier::release_modifier_durability() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.modifier_durability)
  
  ::proto::ModifierDurability* temp = modifier_durability_;
  modifier_durability_ = NULL;
  return temp;
}
inline void AbilityAppliedModifier::set_allocated_modifier_durability(::proto::ModifierDurability* modifier_durability) {
  delete modifier_durability_;
  modifier_durability_ = modifier_durability;
  if (modifier_durability) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.modifier_durability)
}

// -------------------------------------------------------------------

// AbilitySyncStateInfo

// bool is_inited = 1;
inline void AbilitySyncStateInfo::clear_is_inited() {
  is_inited_ = false;
}
inline bool AbilitySyncStateInfo::is_inited() const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.is_inited)
  return is_inited_;
}
inline void AbilitySyncStateInfo::set_is_inited(bool value) {
  
  is_inited_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilitySyncStateInfo.is_inited)
}

// repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
inline int AbilitySyncStateInfo::dynamic_value_map_size() const {
  return dynamic_value_map_.size();
}
inline void AbilitySyncStateInfo::clear_dynamic_value_map() {
  dynamic_value_map_.Clear();
}
inline const ::proto::AbilityScalarValueEntry& AbilitySyncStateInfo::dynamic_value_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Get(index);
}
inline ::proto::AbilityScalarValueEntry* AbilitySyncStateInfo::mutable_dynamic_value_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Mutable(index);
}
inline ::proto::AbilityScalarValueEntry* AbilitySyncStateInfo::add_dynamic_value_map() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
AbilitySyncStateInfo::mutable_dynamic_value_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.dynamic_value_map)
  return &dynamic_value_map_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
AbilitySyncStateInfo::dynamic_value_map() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_;
}

// repeated .proto.AbilityAppliedAbility applied_abilities = 3;
inline int AbilitySyncStateInfo::applied_abilities_size() const {
  return applied_abilities_.size();
}
inline void AbilitySyncStateInfo::clear_applied_abilities() {
  applied_abilities_.Clear();
}
inline const ::proto::AbilityAppliedAbility& AbilitySyncStateInfo::applied_abilities(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Get(index);
}
inline ::proto::AbilityAppliedAbility* AbilitySyncStateInfo::mutable_applied_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Mutable(index);
}
inline ::proto::AbilityAppliedAbility* AbilitySyncStateInfo::add_applied_abilities() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >*
AbilitySyncStateInfo::mutable_applied_abilities() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.applied_abilities)
  return &applied_abilities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >&
AbilitySyncStateInfo::applied_abilities() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_;
}

// repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
inline int AbilitySyncStateInfo::applied_modifiers_size() const {
  return applied_modifiers_.size();
}
inline void AbilitySyncStateInfo::clear_applied_modifiers() {
  applied_modifiers_.Clear();
}
inline const ::proto::AbilityAppliedModifier& AbilitySyncStateInfo::applied_modifiers(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Get(index);
}
inline ::proto::AbilityAppliedModifier* AbilitySyncStateInfo::mutable_applied_modifiers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Mutable(index);
}
inline ::proto::AbilityAppliedModifier* AbilitySyncStateInfo::add_applied_modifiers() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >*
AbilitySyncStateInfo::mutable_applied_modifiers() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.applied_modifiers)
  return &applied_modifiers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >&
AbilitySyncStateInfo::applied_modifiers() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_;
}

// -------------------------------------------------------------------

// Vector

// float x = 1;
inline void Vector::clear_x() {
  x_ = 0;
}
inline float Vector::x() const {
  // @@protoc_insertion_point(field_get:proto.Vector.x)
  return x_;
}
inline void Vector::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.x)
}

// float y = 2;
inline void Vector::clear_y() {
  y_ = 0;
}
inline float Vector::y() const {
  // @@protoc_insertion_point(field_get:proto.Vector.y)
  return y_;
}
inline void Vector::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.y)
}

// float z = 3;
inline void Vector::clear_z() {
  z_ = 0;
}
inline float Vector::z() const {
  // @@protoc_insertion_point(field_get:proto.Vector.z)
  return z_;
}
inline void Vector::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.z)
}

// -------------------------------------------------------------------

// Vector3Int

// int32 x = 1;
inline void Vector3Int::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Vector3Int::x() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.x)
  return x_;
}
inline void Vector3Int::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.x)
}

// int32 y = 2;
inline void Vector3Int::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Vector3Int::y() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.y)
  return y_;
}
inline void Vector3Int::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.y)
}

// int32 z = 3;
inline void Vector3Int::clear_z() {
  z_ = 0;
}
inline ::google::protobuf::int32 Vector3Int::z() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.z)
  return z_;
}
inline void Vector3Int::set_z(::google::protobuf::int32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.z)
}

// -------------------------------------------------------------------

// MotionInfo

// .proto.Vector pos = 1;
inline bool MotionInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void MotionInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& MotionInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MotionInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.pos)
  return pos_;
}
inline ::proto::Vector* MotionInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MotionInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.pos)
}

// .proto.Vector rot = 2;
inline bool MotionInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void MotionInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& MotionInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MotionInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.rot)
  return rot_;
}
inline ::proto::Vector* MotionInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void MotionInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.rot)
}

// .proto.Vector speed = 3;
inline bool MotionInfo::has_speed() const {
  return this != internal_default_instance() && speed_ != NULL;
}
inline void MotionInfo::clear_speed() {
  if (GetArenaNoVirtual() == NULL && speed_ != NULL) delete speed_;
  speed_ = NULL;
}
inline const ::proto::Vector& MotionInfo::speed() const {
  const ::proto::Vector* p = speed_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.speed)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MotionInfo::mutable_speed() {
  
  if (speed_ == NULL) {
    speed_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.speed)
  return speed_;
}
inline ::proto::Vector* MotionInfo::release_speed() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.speed)
  
  ::proto::Vector* temp = speed_;
  speed_ = NULL;
  return temp;
}
inline void MotionInfo::set_allocated_speed(::proto::Vector* speed) {
  delete speed_;
  speed_ = speed;
  if (speed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.speed)
}

// .proto.MotionState state = 4;
inline void MotionInfo::clear_state() {
  state_ = 0;
}
inline ::proto::MotionState MotionInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.state)
  return static_cast< ::proto::MotionState >(state_);
}
inline void MotionInfo::set_state(::proto::MotionState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.MotionInfo.state)
}

// repeated .proto.Vector params = 5;
inline int MotionInfo::params_size() const {
  return params_.size();
}
inline void MotionInfo::clear_params() {
  params_.Clear();
}
inline const ::proto::Vector& MotionInfo::params(int index) const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.params)
  return params_.Get(index);
}
inline ::proto::Vector* MotionInfo::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.params)
  return params_.Mutable(index);
}
inline ::proto::Vector* MotionInfo::add_params() {
  // @@protoc_insertion_point(field_add:proto.MotionInfo.params)
  return params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Vector >*
MotionInfo::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.MotionInfo.params)
  return &params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
MotionInfo::params() const {
  // @@protoc_insertion_point(field_list:proto.MotionInfo.params)
  return params_;
}

// -------------------------------------------------------------------

// PlaceInfo

// .proto.Vector pos = 1;
inline bool PlaceInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PlaceInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& PlaceInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlaceInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlaceInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlaceInfo.pos)
  return pos_;
}
inline ::proto::Vector* PlaceInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlaceInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlaceInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlaceInfo.pos)
}

// .proto.Vector rot = 2;
inline bool PlaceInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void PlaceInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& PlaceInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.PlaceInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlaceInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlaceInfo.rot)
  return rot_;
}
inline ::proto::Vector* PlaceInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.PlaceInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void PlaceInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlaceInfo.rot)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneWeaponInfo

// uint32 entity_id = 1;
inline void SceneWeaponInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.entity_id)
  return entity_id_;
}
inline void SceneWeaponInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.entity_id)
}

// uint32 gadget_id = 2;
inline void SceneWeaponInfo::clear_gadget_id() {
  gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.gadget_id)
  return gadget_id_;
}
inline void SceneWeaponInfo::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.gadget_id)
}

// uint32 item_id = 3;
inline void SceneWeaponInfo::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.item_id)
  return item_id_;
}
inline void SceneWeaponInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.item_id)
}

// uint64 guid = 4;
inline void SceneWeaponInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneWeaponInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.guid)
  return guid_;
}
inline void SceneWeaponInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.guid)
}

// uint32 level = 5;
inline void SceneWeaponInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.level)
  return level_;
}
inline void SceneWeaponInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.level)
}

// uint32 promote_level = 6;
inline void SceneWeaponInfo::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeaponInfo::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.promote_level)
  return promote_level_;
}
inline void SceneWeaponInfo::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.promote_level)
}

// .proto.AbilitySyncStateInfo ability_info = 7;
inline bool SceneWeaponInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
inline void SceneWeaponInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& SceneWeaponInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* SceneWeaponInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneWeaponInfo.ability_info)
  return ability_info_;
}
inline ::proto::AbilitySyncStateInfo* SceneWeaponInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.SceneWeaponInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
inline void SceneWeaponInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneWeaponInfo.ability_info)
}

// map<uint32, uint32> affix_map = 8;
inline int SceneWeaponInfo::affix_map_size() const {
  return affix_map_.size();
}
inline void SceneWeaponInfo::clear_affix_map() {
  affix_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneWeaponInfo::affix_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneWeaponInfo.affix_map)
  return affix_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneWeaponInfo::mutable_affix_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneWeaponInfo.affix_map)
  return affix_map_.MutableMap();
}

// -------------------------------------------------------------------

// SceneReliquaryInfo

// uint32 item_id = 1;
inline void SceneReliquaryInfo::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneReliquaryInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.item_id)
  return item_id_;
}
inline void SceneReliquaryInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.item_id)
}

// uint64 guid = 2;
inline void SceneReliquaryInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneReliquaryInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.guid)
  return guid_;
}
inline void SceneReliquaryInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.guid)
}

// uint32 level = 3;
inline void SceneReliquaryInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SceneReliquaryInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.level)
  return level_;
}
inline void SceneReliquaryInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.level)
}

// uint32 promote_level = 4;
inline void SceneReliquaryInfo::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 SceneReliquaryInfo::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.promote_level)
  return promote_level_;
}
inline void SceneReliquaryInfo::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.promote_level)
}

// -------------------------------------------------------------------

// ServerBuff

// uint32 server_buff_uid = 1;
inline void ServerBuff::clear_server_buff_uid() {
  server_buff_uid_ = 0u;
}
inline ::google::protobuf::uint32 ServerBuff::server_buff_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_uid)
  return server_buff_uid_;
}
inline void ServerBuff::set_server_buff_uid(::google::protobuf::uint32 value) {
  
  server_buff_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_uid)
}

// uint32 server_buff_id = 2;
inline void ServerBuff::clear_server_buff_id() {
  server_buff_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerBuff::server_buff_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_id)
  return server_buff_id_;
}
inline void ServerBuff::set_server_buff_id(::google::protobuf::uint32 value) {
  
  server_buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_id)
}

// uint32 server_buff_type = 3;
inline void ServerBuff::clear_server_buff_type() {
  server_buff_type_ = 0u;
}
inline ::google::protobuf::uint32 ServerBuff::server_buff_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_type)
  return server_buff_type_;
}
inline void ServerBuff::set_server_buff_type(::google::protobuf::uint32 value) {
  
  server_buff_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_type)
}

// uint32 instanced_modifier_id = 4;
inline void ServerBuff::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerBuff::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.instanced_modifier_id)
  return instanced_modifier_id_;
}
inline void ServerBuff::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.instanced_modifier_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneAvatarInfo

// uint32 uid = 1;
inline void SceneAvatarInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.uid)
  return uid_;
}
inline void SceneAvatarInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.uid)
}

// uint32 avatar_id = 2;
inline void SceneAvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.avatar_id)
  return avatar_id_;
}
inline void SceneAvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.avatar_id)
}

// uint64 guid = 3;
inline void SceneAvatarInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneAvatarInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.guid)
  return guid_;
}
inline void SceneAvatarInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.guid)
}

// uint32 peer_id = 4;
inline void SceneAvatarInfo::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.peer_id)
  return peer_id_;
}
inline void SceneAvatarInfo::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.peer_id)
}

// repeated uint32 equip_id_list = 5;
inline int SceneAvatarInfo::equip_id_list_size() const {
  return equip_id_list_.size();
}
inline void SceneAvatarInfo::clear_equip_id_list() {
  equip_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAvatarInfo::equip_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.equip_id_list)
  return equip_id_list_.Get(index);
}
inline void SceneAvatarInfo::set_equip_id_list(int index, ::google::protobuf::uint32 value) {
  equip_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.equip_id_list)
}
inline void SceneAvatarInfo::add_equip_id_list(::google::protobuf::uint32 value) {
  equip_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.equip_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::equip_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.equip_id_list)
  return equip_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_equip_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.equip_id_list)
  return &equip_id_list_;
}

// uint32 skill_depot_id = 6;
inline void SceneAvatarInfo::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.skill_depot_id)
  return skill_depot_id_;
}
inline void SceneAvatarInfo::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.skill_depot_id)
}

// repeated uint32 talent_id_list = 7;
inline int SceneAvatarInfo::talent_id_list_size() const {
  return talent_id_list_.size();
}
inline void SceneAvatarInfo::clear_talent_id_list() {
  talent_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAvatarInfo::talent_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.talent_id_list)
  return talent_id_list_.Get(index);
}
inline void SceneAvatarInfo::set_talent_id_list(int index, ::google::protobuf::uint32 value) {
  talent_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.talent_id_list)
}
inline void SceneAvatarInfo::add_talent_id_list(::google::protobuf::uint32 value) {
  talent_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.talent_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::talent_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.talent_id_list)
  return talent_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_talent_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.talent_id_list)
  return &talent_id_list_;
}

// .proto.SceneWeaponInfo weapon = 8;
inline bool SceneAvatarInfo::has_weapon() const {
  return this != internal_default_instance() && weapon_ != NULL;
}
inline void SceneAvatarInfo::clear_weapon() {
  if (GetArenaNoVirtual() == NULL && weapon_ != NULL) delete weapon_;
  weapon_ = NULL;
}
inline const ::proto::SceneWeaponInfo& SceneAvatarInfo::weapon() const {
  const ::proto::SceneWeaponInfo* p = weapon_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.weapon)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneWeaponInfo*>(
      &::proto::_SceneWeaponInfo_default_instance_);
}
inline ::proto::SceneWeaponInfo* SceneAvatarInfo::mutable_weapon() {
  
  if (weapon_ == NULL) {
    weapon_ = new ::proto::SceneWeaponInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.weapon)
  return weapon_;
}
inline ::proto::SceneWeaponInfo* SceneAvatarInfo::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarInfo.weapon)
  
  ::proto::SceneWeaponInfo* temp = weapon_;
  weapon_ = NULL;
  return temp;
}
inline void SceneAvatarInfo::set_allocated_weapon(::proto::SceneWeaponInfo* weapon) {
  delete weapon_;
  weapon_ = weapon;
  if (weapon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarInfo.weapon)
}

// repeated .proto.SceneReliquaryInfo reliquary_list = 9;
inline int SceneAvatarInfo::reliquary_list_size() const {
  return reliquary_list_.size();
}
inline void SceneAvatarInfo::clear_reliquary_list() {
  reliquary_list_.Clear();
}
inline const ::proto::SceneReliquaryInfo& SceneAvatarInfo::reliquary_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Get(index);
}
inline ::proto::SceneReliquaryInfo* SceneAvatarInfo::mutable_reliquary_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Mutable(index);
}
inline ::proto::SceneReliquaryInfo* SceneAvatarInfo::add_reliquary_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >*
SceneAvatarInfo::mutable_reliquary_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.reliquary_list)
  return &reliquary_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >&
SceneAvatarInfo::reliquary_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_;
}

// repeated uint32 buff_id_list = 10;
inline int SceneAvatarInfo::buff_id_list_size() const {
  return buff_id_list_.size();
}
inline void SceneAvatarInfo::clear_buff_id_list() {
  buff_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAvatarInfo::buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.buff_id_list)
  return buff_id_list_.Get(index);
}
inline void SceneAvatarInfo::set_buff_id_list(int index, ::google::protobuf::uint32 value) {
  buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.buff_id_list)
}
inline void SceneAvatarInfo::add_buff_id_list(::google::protobuf::uint32 value) {
  buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.buff_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.buff_id_list)
  return buff_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.buff_id_list)
  return &buff_id_list_;
}

// uint32 core_proud_skill_level = 11;
inline void SceneAvatarInfo::clear_core_proud_skill_level() {
  core_proud_skill_level_ = 0u;
}
inline ::google::protobuf::uint32 SceneAvatarInfo::core_proud_skill_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.core_proud_skill_level)
  return core_proud_skill_level_;
}
inline void SceneAvatarInfo::set_core_proud_skill_level(::google::protobuf::uint32 value) {
  
  core_proud_skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.core_proud_skill_level)
}

// repeated uint32 inherent_proud_skill_list = 12;
inline int SceneAvatarInfo::inherent_proud_skill_list_size() const {
  return inherent_proud_skill_list_.size();
}
inline void SceneAvatarInfo::clear_inherent_proud_skill_list() {
  inherent_proud_skill_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAvatarInfo::inherent_proud_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_.Get(index);
}
inline void SceneAvatarInfo::set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.inherent_proud_skill_list)
}
inline void SceneAvatarInfo::add_inherent_proud_skill_list(::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.inherent_proud_skill_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::inherent_proud_skill_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_inherent_proud_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return &inherent_proud_skill_list_;
}

// map<uint32, uint32> skill_level_map = 13;
inline int SceneAvatarInfo::skill_level_map_size() const {
  return skill_level_map_.size();
}
inline void SceneAvatarInfo::clear_skill_level_map() {
  skill_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneAvatarInfo::skill_level_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAvatarInfo.skill_level_map)
  return skill_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_skill_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAvatarInfo.skill_level_map)
  return skill_level_map_.MutableMap();
}

// map<uint32, uint32> proud_skill_extra_level_map = 14;
inline int SceneAvatarInfo::proud_skill_extra_level_map_size() const {
  return proud_skill_extra_level_map_.size();
}
inline void SceneAvatarInfo::clear_proud_skill_extra_level_map() {
  proud_skill_extra_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneAvatarInfo::proud_skill_extra_level_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_proud_skill_extra_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.MutableMap();
}

// repeated .proto.ServerBuff server_buff_list = 15;
inline int SceneAvatarInfo::server_buff_list_size() const {
  return server_buff_list_.size();
}
inline void SceneAvatarInfo::clear_server_buff_list() {
  server_buff_list_.Clear();
}
inline const ::proto::ServerBuff& SceneAvatarInfo::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Get(index);
}
inline ::proto::ServerBuff* SceneAvatarInfo::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Mutable(index);
}
inline ::proto::ServerBuff* SceneAvatarInfo::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
SceneAvatarInfo::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.server_buff_list)
  return &server_buff_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
SceneAvatarInfo::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneMonsterInfo

// uint32 monster_id = 1;
inline void SceneMonsterInfo::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.monster_id)
  return monster_id_;
}
inline void SceneMonsterInfo::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.monster_id)
}

// uint32 group_id = 2;
inline void SceneMonsterInfo::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::group_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.group_id)
  return group_id_;
}
inline void SceneMonsterInfo::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.group_id)
}

// uint32 config_id = 3;
inline void SceneMonsterInfo::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.config_id)
  return config_id_;
}
inline void SceneMonsterInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.config_id)
}

// repeated .proto.SceneWeaponInfo weapon_list = 4;
inline int SceneMonsterInfo::weapon_list_size() const {
  return weapon_list_.size();
}
inline void SceneMonsterInfo::clear_weapon_list() {
  weapon_list_.Clear();
}
inline const ::proto::SceneWeaponInfo& SceneMonsterInfo::weapon_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Get(index);
}
inline ::proto::SceneWeaponInfo* SceneMonsterInfo::mutable_weapon_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Mutable(index);
}
inline ::proto::SceneWeaponInfo* SceneMonsterInfo::add_weapon_list() {
  // @@protoc_insertion_point(field_add:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >*
SceneMonsterInfo::mutable_weapon_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneMonsterInfo.weapon_list)
  return &weapon_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >&
SceneMonsterInfo::weapon_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_;
}

// uint32 authority_peer_id = 5;
inline void SceneMonsterInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.authority_peer_id)
  return authority_peer_id_;
}
inline void SceneMonsterInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.authority_peer_id)
}

// repeated uint32 affix_list = 6;
inline int SceneMonsterInfo::affix_list_size() const {
  return affix_list_.size();
}
inline void SceneMonsterInfo::clear_affix_list() {
  affix_list_.Clear();
}
inline ::google::protobuf::uint32 SceneMonsterInfo::affix_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.affix_list)
  return affix_list_.Get(index);
}
inline void SceneMonsterInfo::set_affix_list(int index, ::google::protobuf::uint32 value) {
  affix_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.affix_list)
}
inline void SceneMonsterInfo::add_affix_list(::google::protobuf::uint32 value) {
  affix_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneMonsterInfo.affix_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneMonsterInfo::affix_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneMonsterInfo.affix_list)
  return affix_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneMonsterInfo::mutable_affix_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneMonsterInfo.affix_list)
  return &affix_list_;
}

// bool is_elite = 7;
inline void SceneMonsterInfo::clear_is_elite() {
  is_elite_ = false;
}
inline bool SceneMonsterInfo::is_elite() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.is_elite)
  return is_elite_;
}
inline void SceneMonsterInfo::set_is_elite(bool value) {
  
  is_elite_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.is_elite)
}

// uint32 owner_entity_id = 8;
inline void SceneMonsterInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.owner_entity_id)
  return owner_entity_id_;
}
inline void SceneMonsterInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.owner_entity_id)
}

// uint32 summoned_tag = 9;
inline void SceneMonsterInfo::clear_summoned_tag() {
  summoned_tag_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::summoned_tag() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.summoned_tag)
  return summoned_tag_;
}
inline void SceneMonsterInfo::set_summoned_tag(::google::protobuf::uint32 value) {
  
  summoned_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.summoned_tag)
}

// map<uint32, uint32> summon_tag_map = 10;
inline int SceneMonsterInfo::summon_tag_map_size() const {
  return summon_tag_map_.size();
}
inline void SceneMonsterInfo::clear_summon_tag_map() {
  summon_tag_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneMonsterInfo::summon_tag_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneMonsterInfo.summon_tag_map)
  return summon_tag_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneMonsterInfo::mutable_summon_tag_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneMonsterInfo.summon_tag_map)
  return summon_tag_map_.MutableMap();
}

// uint32 pose_id = 11;
inline void SceneMonsterInfo::clear_pose_id() {
  pose_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::pose_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.pose_id)
  return pose_id_;
}
inline void SceneMonsterInfo::set_pose_id(::google::protobuf::uint32 value) {
  
  pose_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.pose_id)
}

// .proto.MonsterBornType born_type = 12;
inline void SceneMonsterInfo::clear_born_type() {
  born_type_ = 0;
}
inline ::proto::MonsterBornType SceneMonsterInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.born_type)
  return static_cast< ::proto::MonsterBornType >(born_type_);
}
inline void SceneMonsterInfo::set_born_type(::proto::MonsterBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.born_type)
}

// uint32 block_id = 13;
inline void SceneMonsterInfo::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.block_id)
  return block_id_;
}
inline void SceneMonsterInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.block_id)
}

// uint32 mark_flag = 14;
inline void SceneMonsterInfo::clear_mark_flag() {
  mark_flag_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::mark_flag() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.mark_flag)
  return mark_flag_;
}
inline void SceneMonsterInfo::set_mark_flag(::google::protobuf::uint32 value) {
  
  mark_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.mark_flag)
}

// uint32 title_id = 15;
inline void SceneMonsterInfo::clear_title_id() {
  title_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::title_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.title_id)
  return title_id_;
}
inline void SceneMonsterInfo::set_title_id(::google::protobuf::uint32 value) {
  
  title_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.title_id)
}

// uint32 special_name_id = 16;
inline void SceneMonsterInfo::clear_special_name_id() {
  special_name_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneMonsterInfo::special_name_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.special_name_id)
  return special_name_id_;
}
inline void SceneMonsterInfo::set_special_name_id(::google::protobuf::uint32 value) {
  
  special_name_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.special_name_id)
}

// -------------------------------------------------------------------

// SceneNpcInfo

// uint32 npc_id = 1;
inline void SceneNpcInfo::clear_npc_id() {
  npc_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneNpcInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.npc_id)
  return npc_id_;
}
inline void SceneNpcInfo::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.npc_id)
}

// uint32 room_id = 2;
inline void SceneNpcInfo::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneNpcInfo::room_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.room_id)
  return room_id_;
}
inline void SceneNpcInfo::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.room_id)
}

// uint32 parent_quest_id = 3;
inline void SceneNpcInfo::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneNpcInfo::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.parent_quest_id)
  return parent_quest_id_;
}
inline void SceneNpcInfo::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.parent_quest_id)
}

// uint32 block_id = 4;
inline void SceneNpcInfo::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneNpcInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.block_id)
  return block_id_;
}
inline void SceneNpcInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.block_id)
}

// -------------------------------------------------------------------

// WorktopInfo

// repeated uint32 option_list = 1;
inline int WorktopInfo::option_list_size() const {
  return option_list_.size();
}
inline void WorktopInfo::clear_option_list() {
  option_list_.Clear();
}
inline ::google::protobuf::uint32 WorktopInfo::option_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorktopInfo.option_list)
  return option_list_.Get(index);
}
inline void WorktopInfo::set_option_list(int index, ::google::protobuf::uint32 value) {
  option_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorktopInfo.option_list)
}
inline void WorktopInfo::add_option_list(::google::protobuf::uint32 value) {
  option_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorktopInfo.option_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorktopInfo::option_list() const {
  // @@protoc_insertion_point(field_list:proto.WorktopInfo.option_list)
  return option_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorktopInfo::mutable_option_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorktopInfo.option_list)
  return &option_list_;
}

// bool is_guest_can_operate = 2;
inline void WorktopInfo::clear_is_guest_can_operate() {
  is_guest_can_operate_ = false;
}
inline bool WorktopInfo::is_guest_can_operate() const {
  // @@protoc_insertion_point(field_get:proto.WorktopInfo.is_guest_can_operate)
  return is_guest_can_operate_;
}
inline void WorktopInfo::set_is_guest_can_operate(bool value) {
  
  is_guest_can_operate_ = value;
  // @@protoc_insertion_point(field_set:proto.WorktopInfo.is_guest_can_operate)
}

// -------------------------------------------------------------------

// MathQuaternion

// float x = 1;
inline void MathQuaternion::clear_x() {
  x_ = 0;
}
inline float MathQuaternion::x() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.x)
  return x_;
}
inline void MathQuaternion::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.x)
}

// float y = 2;
inline void MathQuaternion::clear_y() {
  y_ = 0;
}
inline float MathQuaternion::y() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.y)
  return y_;
}
inline void MathQuaternion::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.y)
}

// float z = 3;
inline void MathQuaternion::clear_z() {
  z_ = 0;
}
inline float MathQuaternion::z() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.z)
  return z_;
}
inline void MathQuaternion::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.z)
}

// float w = 4;
inline void MathQuaternion::clear_w() {
  w_ = 0;
}
inline float MathQuaternion::w() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.w)
  return w_;
}
inline void MathQuaternion::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.w)
}

// -------------------------------------------------------------------

// PlatformInfo

// uint32 route_id = 1;
inline void PlatformInfo::clear_route_id() {
  route_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::route_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.route_id)
  return route_id_;
}
inline void PlatformInfo::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.route_id)
}

// int32 start_index = 2;
inline void PlatformInfo::clear_start_index() {
  start_index_ = 0;
}
inline ::google::protobuf::int32 PlatformInfo::start_index() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_index)
  return start_index_;
}
inline void PlatformInfo::set_start_index(::google::protobuf::int32 value) {
  
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_index)
}

// uint32 start_route_time = 3;
inline void PlatformInfo::clear_start_route_time() {
  start_route_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::start_route_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_route_time)
  return start_route_time_;
}
inline void PlatformInfo::set_start_route_time(::google::protobuf::uint32 value) {
  
  start_route_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_route_time)
}

// uint32 start_scene_time = 4;
inline void PlatformInfo::clear_start_scene_time() {
  start_scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::start_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_scene_time)
  return start_scene_time_;
}
inline void PlatformInfo::set_start_scene_time(::google::protobuf::uint32 value) {
  
  start_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_scene_time)
}

// uint32 temp_route_time = 5;
inline void PlatformInfo::clear_temp_route_time() {
  temp_route_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::temp_route_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.temp_route_time)
  return temp_route_time_;
}
inline void PlatformInfo::set_temp_route_time(::google::protobuf::uint32 value) {
  
  temp_route_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.temp_route_time)
}

// uint32 temp_start_route_time = 6;
inline void PlatformInfo::clear_temp_start_route_time() {
  temp_start_route_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::temp_start_route_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.temp_start_route_time)
  return temp_start_route_time_;
}
inline void PlatformInfo::set_temp_start_route_time(::google::protobuf::uint32 value) {
  
  temp_start_route_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.temp_start_route_time)
}

// .proto.Vector start_pos = 7;
inline bool PlatformInfo::has_start_pos() const {
  return this != internal_default_instance() && start_pos_ != NULL;
}
inline void PlatformInfo::clear_start_pos() {
  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) delete start_pos_;
  start_pos_ = NULL;
}
inline const ::proto::Vector& PlatformInfo::start_pos() const {
  const ::proto::Vector* p = start_pos_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlatformInfo::mutable_start_pos() {
  
  if (start_pos_ == NULL) {
    start_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.start_pos)
  return start_pos_;
}
inline ::proto::Vector* PlatformInfo::release_start_pos() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.start_pos)
  
  ::proto::Vector* temp = start_pos_;
  start_pos_ = NULL;
  return temp;
}
inline void PlatformInfo::set_allocated_start_pos(::proto::Vector* start_pos) {
  delete start_pos_;
  start_pos_ = start_pos;
  if (start_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.start_pos)
}

// bool is_started = 8;
inline void PlatformInfo::clear_is_started() {
  is_started_ = false;
}
inline bool PlatformInfo::is_started() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.is_started)
  return is_started_;
}
inline void PlatformInfo::set_is_started(bool value) {
  
  is_started_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.is_started)
}

// .proto.MathQuaternion start_rot = 9;
inline bool PlatformInfo::has_start_rot() const {
  return this != internal_default_instance() && start_rot_ != NULL;
}
inline void PlatformInfo::clear_start_rot() {
  if (GetArenaNoVirtual() == NULL && start_rot_ != NULL) delete start_rot_;
  start_rot_ = NULL;
}
inline const ::proto::MathQuaternion& PlatformInfo::start_rot() const {
  const ::proto::MathQuaternion* p = start_rot_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MathQuaternion*>(
      &::proto::_MathQuaternion_default_instance_);
}
inline ::proto::MathQuaternion* PlatformInfo::mutable_start_rot() {
  
  if (start_rot_ == NULL) {
    start_rot_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.start_rot)
  return start_rot_;
}
inline ::proto::MathQuaternion* PlatformInfo::release_start_rot() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.start_rot)
  
  ::proto::MathQuaternion* temp = start_rot_;
  start_rot_ = NULL;
  return temp;
}
inline void PlatformInfo::set_allocated_start_rot(::proto::MathQuaternion* start_rot) {
  delete start_rot_;
  start_rot_ = start_rot;
  if (start_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.start_rot)
}

// uint32 stop_scene_time = 10;
inline void PlatformInfo::clear_stop_scene_time() {
  stop_scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformInfo::stop_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.stop_scene_time)
  return stop_scene_time_;
}
inline void PlatformInfo::set_stop_scene_time(::google::protobuf::uint32 value) {
  
  stop_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.stop_scene_time)
}

// -------------------------------------------------------------------

// WeatherInfo

// uint32 weather_area_id = 1;
inline void WeatherInfo::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
inline ::google::protobuf::uint32 WeatherInfo::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.WeatherInfo.weather_area_id)
  return weather_area_id_;
}
inline void WeatherInfo::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WeatherInfo.weather_area_id)
}

// -------------------------------------------------------------------

// ClientGadgetInfo

// uint32 camp_id = 1;
inline void ClientGadgetInfo::clear_camp_id() {
  camp_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientGadgetInfo::camp_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.camp_id)
  return camp_id_;
}
inline void ClientGadgetInfo::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.camp_id)
}

// uint32 camp_type = 2;
inline void ClientGadgetInfo::clear_camp_type() {
  camp_type_ = 0u;
}
inline ::google::protobuf::uint32 ClientGadgetInfo::camp_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.camp_type)
  return camp_type_;
}
inline void ClientGadgetInfo::set_camp_type(::google::protobuf::uint32 value) {
  
  camp_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.camp_type)
}

// uint64 guid = 3;
inline void ClientGadgetInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientGadgetInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.guid)
  return guid_;
}
inline void ClientGadgetInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.guid)
}

// uint32 owner_entity_id = 4;
inline void ClientGadgetInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientGadgetInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.owner_entity_id)
  return owner_entity_id_;
}
inline void ClientGadgetInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.owner_entity_id)
}

// uint32 target_entity_id = 5;
inline void ClientGadgetInfo::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientGadgetInfo::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.target_entity_id)
  return target_entity_id_;
}
inline void ClientGadgetInfo::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.target_entity_id)
}

// bool async_load = 6;
inline void ClientGadgetInfo::clear_async_load() {
  async_load_ = false;
}
inline bool ClientGadgetInfo::async_load() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.async_load)
  return async_load_;
}
inline void ClientGadgetInfo::set_async_load(bool value) {
  
  async_load_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.async_load)
}

// -------------------------------------------------------------------

// AbilityGadgetInfo

// uint32 camp_id = 1;
inline void AbilityGadgetInfo::clear_camp_id() {
  camp_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityGadgetInfo::camp_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.camp_id)
  return camp_id_;
}
inline void AbilityGadgetInfo::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.camp_id)
}

// uint32 camp_target_type = 2;
inline void AbilityGadgetInfo::clear_camp_target_type() {
  camp_target_type_ = 0u;
}
inline ::google::protobuf::uint32 AbilityGadgetInfo::camp_target_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.camp_target_type)
  return camp_target_type_;
}
inline void AbilityGadgetInfo::set_camp_target_type(::google::protobuf::uint32 value) {
  
  camp_target_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.camp_target_type)
}

// uint32 target_entity_id = 3;
inline void AbilityGadgetInfo::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityGadgetInfo::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.target_entity_id)
  return target_entity_id_;
}
inline void AbilityGadgetInfo::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.target_entity_id)
}

// -------------------------------------------------------------------

// GatherGadgetInfo

// uint32 item_id = 1;
inline void GatherGadgetInfo::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 GatherGadgetInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.GatherGadgetInfo.item_id)
  return item_id_;
}
inline void GatherGadgetInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GatherGadgetInfo.item_id)
}

// bool is_forbid_guest = 2;
inline void GatherGadgetInfo::clear_is_forbid_guest() {
  is_forbid_guest_ = false;
}
inline bool GatherGadgetInfo::is_forbid_guest() const {
  // @@protoc_insertion_point(field_get:proto.GatherGadgetInfo.is_forbid_guest)
  return is_forbid_guest_;
}
inline void GatherGadgetInfo::set_is_forbid_guest(bool value) {
  
  is_forbid_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GatherGadgetInfo.is_forbid_guest)
}

// -------------------------------------------------------------------

// StatueGadgetInfo

// repeated uint32 opened_statue_uid_list = 1;
inline int StatueGadgetInfo::opened_statue_uid_list_size() const {
  return opened_statue_uid_list_.size();
}
inline void StatueGadgetInfo::clear_opened_statue_uid_list() {
  opened_statue_uid_list_.Clear();
}
inline ::google::protobuf::uint32 StatueGadgetInfo::opened_statue_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.StatueGadgetInfo.opened_statue_uid_list)
  return opened_statue_uid_list_.Get(index);
}
inline void StatueGadgetInfo::set_opened_statue_uid_list(int index, ::google::protobuf::uint32 value) {
  opened_statue_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.StatueGadgetInfo.opened_statue_uid_list)
}
inline void StatueGadgetInfo::add_opened_statue_uid_list(::google::protobuf::uint32 value) {
  opened_statue_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.StatueGadgetInfo.opened_statue_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StatueGadgetInfo::opened_statue_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.StatueGadgetInfo.opened_statue_uid_list)
  return opened_statue_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StatueGadgetInfo::mutable_opened_statue_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.StatueGadgetInfo.opened_statue_uid_list)
  return &opened_statue_uid_list_;
}

// -------------------------------------------------------------------

// BossChestInfo

// uint32 monster_config_id = 1;
inline void BossChestInfo::clear_monster_config_id() {
  monster_config_id_ = 0u;
}
inline ::google::protobuf::uint32 BossChestInfo::monster_config_id() const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.monster_config_id)
  return monster_config_id_;
}
inline void BossChestInfo::set_monster_config_id(::google::protobuf::uint32 value) {
  
  monster_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.monster_config_id)
}

// uint32 world_resin = 2;
inline void BossChestInfo::clear_world_resin() {
  world_resin_ = 0u;
}
inline ::google::protobuf::uint32 BossChestInfo::world_resin() const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.world_resin)
  return world_resin_;
}
inline void BossChestInfo::set_world_resin(::google::protobuf::uint32 value) {
  
  world_resin_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.world_resin)
}

// repeated uint32 remain_uid_list = 3;
inline int BossChestInfo::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void BossChestInfo::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BossChestInfo::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void BossChestInfo::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.remain_uid_list)
}
inline void BossChestInfo::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestInfo.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestInfo::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestInfo.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestInfo::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestInfo.remain_uid_list)
  return &remain_uid_list_;
}

// repeated uint32 qualify_uid_list = 4;
inline int BossChestInfo::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void BossChestInfo::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BossChestInfo::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void BossChestInfo::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.qualify_uid_list)
}
inline void BossChestInfo::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestInfo.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestInfo::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestInfo.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestInfo::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestInfo.qualify_uid_list)
  return &qualify_uid_list_;
}

// -------------------------------------------------------------------

// BlossomChestInfo

// uint32 world_resin = 1;
inline void BlossomChestInfo::clear_world_resin() {
  world_resin_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestInfo::world_resin() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.world_resin)
  return world_resin_;
}
inline void BlossomChestInfo::set_world_resin(::google::protobuf::uint32 value) {
  
  world_resin_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.world_resin)
}

// repeated uint32 qualify_uid_list = 2;
inline int BlossomChestInfo::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void BlossomChestInfo::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BlossomChestInfo::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void BlossomChestInfo::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.qualify_uid_list)
}
inline void BlossomChestInfo::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestInfo.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestInfo::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestInfo.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestInfo::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestInfo.qualify_uid_list)
  return &qualify_uid_list_;
}

// repeated uint32 remain_uid_list = 3;
inline int BlossomChestInfo::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
inline void BlossomChestInfo::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BlossomChestInfo::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.remain_uid_list)
  return remain_uid_list_.Get(index);
}
inline void BlossomChestInfo::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.remain_uid_list)
}
inline void BlossomChestInfo::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestInfo.remain_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestInfo::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestInfo.remain_uid_list)
  return remain_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestInfo::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestInfo.remain_uid_list)
  return &remain_uid_list_;
}

// uint32 dead_time = 4;
inline void BlossomChestInfo::clear_dead_time() {
  dead_time_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestInfo::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.dead_time)
  return dead_time_;
}
inline void BlossomChestInfo::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.dead_time)
}

// -------------------------------------------------------------------

// SceneGadgetInfo

// uint32 gadget_id = 1;
inline void SceneGadgetInfo::clear_gadget_id() {
  gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_id)
  return gadget_id_;
}
inline void SceneGadgetInfo::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_id)
}

// uint32 group_id = 2;
inline void SceneGadgetInfo::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::group_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.group_id)
  return group_id_;
}
inline void SceneGadgetInfo::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.group_id)
}

// uint32 config_id = 3;
inline void SceneGadgetInfo::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.config_id)
  return config_id_;
}
inline void SceneGadgetInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.config_id)
}

// uint32 owner_entity_id = 4;
inline void SceneGadgetInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.owner_entity_id)
  return owner_entity_id_;
}
inline void SceneGadgetInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.owner_entity_id)
}

// .proto.GadgetBornType born_type = 5;
inline void SceneGadgetInfo::clear_born_type() {
  born_type_ = 0;
}
inline ::proto::GadgetBornType SceneGadgetInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.born_type)
  return static_cast< ::proto::GadgetBornType >(born_type_);
}
inline void SceneGadgetInfo::set_born_type(::proto::GadgetBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.born_type)
}

// uint32 gadget_state = 6;
inline void SceneGadgetInfo::clear_gadget_state() {
  gadget_state_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_state)
  return gadget_state_;
}
inline void SceneGadgetInfo::set_gadget_state(::google::protobuf::uint32 value) {
  
  gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_state)
}

// uint32 gadget_type = 7;
inline void SceneGadgetInfo::clear_gadget_type() {
  gadget_type_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::gadget_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_type)
  return gadget_type_;
}
inline void SceneGadgetInfo::set_gadget_type(::google::protobuf::uint32 value) {
  
  gadget_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_type)
}

// bool is_show_cutscene = 8;
inline void SceneGadgetInfo::clear_is_show_cutscene() {
  is_show_cutscene_ = false;
}
inline bool SceneGadgetInfo::is_show_cutscene() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.is_show_cutscene)
  return is_show_cutscene_;
}
inline void SceneGadgetInfo::set_is_show_cutscene(bool value) {
  
  is_show_cutscene_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.is_show_cutscene)
}

// uint32 authority_peer_id = 9;
inline void SceneGadgetInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.authority_peer_id)
  return authority_peer_id_;
}
inline void SceneGadgetInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.authority_peer_id)
}

// bool is_enable_interact = 10;
inline void SceneGadgetInfo::clear_is_enable_interact() {
  is_enable_interact_ = false;
}
inline bool SceneGadgetInfo::is_enable_interact() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.is_enable_interact)
  return is_enable_interact_;
}
inline void SceneGadgetInfo::set_is_enable_interact(bool value) {
  
  is_enable_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.is_enable_interact)
}

// uint32 interact_id = 11;
inline void SceneGadgetInfo::clear_interact_id() {
  interact_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::interact_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.interact_id)
  return interact_id_;
}
inline void SceneGadgetInfo::set_interact_id(::google::protobuf::uint32 value) {
  
  interact_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.interact_id)
}

// .proto.Item trifle_item = 12;
inline bool SceneGadgetInfo::has_trifle_item() const {
  return content_case() == kTrifleItem;
}
inline void SceneGadgetInfo::set_has_trifle_item() {
  _oneof_case_[0] = kTrifleItem;
}
inline void SceneGadgetInfo::clear_trifle_item() {
  if (has_trifle_item()) {
    delete content_.trifle_item_;
    clear_has_content();
  }
}
inline  const ::proto::Item& SceneGadgetInfo::trifle_item() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.trifle_item)
  return has_trifle_item()
      ? *content_.trifle_item_
      : ::proto::Item::default_instance();
}
inline ::proto::Item* SceneGadgetInfo::mutable_trifle_item() {
  if (!has_trifle_item()) {
    clear_content();
    set_has_trifle_item();
    content_.trifle_item_ = new ::proto::Item;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.trifle_item)
  return content_.trifle_item_;
}
inline ::proto::Item* SceneGadgetInfo::release_trifle_item() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.trifle_item)
  if (has_trifle_item()) {
    clear_has_content();
    ::proto::Item* temp = content_.trifle_item_;
    content_.trifle_item_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_trifle_item(::proto::Item* trifle_item) {
  clear_content();
  if (trifle_item) {
    set_has_trifle_item();
    content_.trifle_item_ = trifle_item;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.trifle_item)
}

// .proto.GatherGadgetInfo gather_gadget = 13;
inline bool SceneGadgetInfo::has_gather_gadget() const {
  return content_case() == kGatherGadget;
}
inline void SceneGadgetInfo::set_has_gather_gadget() {
  _oneof_case_[0] = kGatherGadget;
}
inline void SceneGadgetInfo::clear_gather_gadget() {
  if (has_gather_gadget()) {
    delete content_.gather_gadget_;
    clear_has_content();
  }
}
inline  const ::proto::GatherGadgetInfo& SceneGadgetInfo::gather_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gather_gadget)
  return has_gather_gadget()
      ? *content_.gather_gadget_
      : ::proto::GatherGadgetInfo::default_instance();
}
inline ::proto::GatherGadgetInfo* SceneGadgetInfo::mutable_gather_gadget() {
  if (!has_gather_gadget()) {
    clear_content();
    set_has_gather_gadget();
    content_.gather_gadget_ = new ::proto::GatherGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.gather_gadget)
  return content_.gather_gadget_;
}
inline ::proto::GatherGadgetInfo* SceneGadgetInfo::release_gather_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.gather_gadget)
  if (has_gather_gadget()) {
    clear_has_content();
    ::proto::GatherGadgetInfo* temp = content_.gather_gadget_;
    content_.gather_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_gather_gadget(::proto::GatherGadgetInfo* gather_gadget) {
  clear_content();
  if (gather_gadget) {
    set_has_gather_gadget();
    content_.gather_gadget_ = gather_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.gather_gadget)
}

// .proto.WorktopInfo worktop = 14;
inline bool SceneGadgetInfo::has_worktop() const {
  return content_case() == kWorktop;
}
inline void SceneGadgetInfo::set_has_worktop() {
  _oneof_case_[0] = kWorktop;
}
inline void SceneGadgetInfo::clear_worktop() {
  if (has_worktop()) {
    delete content_.worktop_;
    clear_has_content();
  }
}
inline  const ::proto::WorktopInfo& SceneGadgetInfo::worktop() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.worktop)
  return has_worktop()
      ? *content_.worktop_
      : ::proto::WorktopInfo::default_instance();
}
inline ::proto::WorktopInfo* SceneGadgetInfo::mutable_worktop() {
  if (!has_worktop()) {
    clear_content();
    set_has_worktop();
    content_.worktop_ = new ::proto::WorktopInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.worktop)
  return content_.worktop_;
}
inline ::proto::WorktopInfo* SceneGadgetInfo::release_worktop() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.worktop)
  if (has_worktop()) {
    clear_has_content();
    ::proto::WorktopInfo* temp = content_.worktop_;
    content_.worktop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_worktop(::proto::WorktopInfo* worktop) {
  clear_content();
  if (worktop) {
    set_has_worktop();
    content_.worktop_ = worktop;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.worktop)
}

// .proto.ClientGadgetInfo client_gadget = 15;
inline bool SceneGadgetInfo::has_client_gadget() const {
  return content_case() == kClientGadget;
}
inline void SceneGadgetInfo::set_has_client_gadget() {
  _oneof_case_[0] = kClientGadget;
}
inline void SceneGadgetInfo::clear_client_gadget() {
  if (has_client_gadget()) {
    delete content_.client_gadget_;
    clear_has_content();
  }
}
inline  const ::proto::ClientGadgetInfo& SceneGadgetInfo::client_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.client_gadget)
  return has_client_gadget()
      ? *content_.client_gadget_
      : ::proto::ClientGadgetInfo::default_instance();
}
inline ::proto::ClientGadgetInfo* SceneGadgetInfo::mutable_client_gadget() {
  if (!has_client_gadget()) {
    clear_content();
    set_has_client_gadget();
    content_.client_gadget_ = new ::proto::ClientGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.client_gadget)
  return content_.client_gadget_;
}
inline ::proto::ClientGadgetInfo* SceneGadgetInfo::release_client_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.client_gadget)
  if (has_client_gadget()) {
    clear_has_content();
    ::proto::ClientGadgetInfo* temp = content_.client_gadget_;
    content_.client_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_client_gadget(::proto::ClientGadgetInfo* client_gadget) {
  clear_content();
  if (client_gadget) {
    set_has_client_gadget();
    content_.client_gadget_ = client_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.client_gadget)
}

// .proto.PlatformInfo platform = 16;
inline bool SceneGadgetInfo::has_platform() const {
  return content_case() == kPlatform;
}
inline void SceneGadgetInfo::set_has_platform() {
  _oneof_case_[0] = kPlatform;
}
inline void SceneGadgetInfo::clear_platform() {
  if (has_platform()) {
    delete content_.platform_;
    clear_has_content();
  }
}
inline  const ::proto::PlatformInfo& SceneGadgetInfo::platform() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.platform)
  return has_platform()
      ? *content_.platform_
      : ::proto::PlatformInfo::default_instance();
}
inline ::proto::PlatformInfo* SceneGadgetInfo::mutable_platform() {
  if (!has_platform()) {
    clear_content();
    set_has_platform();
    content_.platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.platform)
  return content_.platform_;
}
inline ::proto::PlatformInfo* SceneGadgetInfo::release_platform() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.platform)
  if (has_platform()) {
    clear_has_content();
    ::proto::PlatformInfo* temp = content_.platform_;
    content_.platform_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_platform(::proto::PlatformInfo* platform) {
  clear_content();
  if (platform) {
    set_has_platform();
    content_.platform_ = platform;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.platform)
}

// .proto.WeatherInfo weather = 17;
inline bool SceneGadgetInfo::has_weather() const {
  return content_case() == kWeather;
}
inline void SceneGadgetInfo::set_has_weather() {
  _oneof_case_[0] = kWeather;
}
inline void SceneGadgetInfo::clear_weather() {
  if (has_weather()) {
    delete content_.weather_;
    clear_has_content();
  }
}
inline  const ::proto::WeatherInfo& SceneGadgetInfo::weather() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.weather)
  return has_weather()
      ? *content_.weather_
      : ::proto::WeatherInfo::default_instance();
}
inline ::proto::WeatherInfo* SceneGadgetInfo::mutable_weather() {
  if (!has_weather()) {
    clear_content();
    set_has_weather();
    content_.weather_ = new ::proto::WeatherInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.weather)
  return content_.weather_;
}
inline ::proto::WeatherInfo* SceneGadgetInfo::release_weather() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.weather)
  if (has_weather()) {
    clear_has_content();
    ::proto::WeatherInfo* temp = content_.weather_;
    content_.weather_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_weather(::proto::WeatherInfo* weather) {
  clear_content();
  if (weather) {
    set_has_weather();
    content_.weather_ = weather;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.weather)
}

// .proto.AbilityGadgetInfo ability_gadget = 18;
inline bool SceneGadgetInfo::has_ability_gadget() const {
  return content_case() == kAbilityGadget;
}
inline void SceneGadgetInfo::set_has_ability_gadget() {
  _oneof_case_[0] = kAbilityGadget;
}
inline void SceneGadgetInfo::clear_ability_gadget() {
  if (has_ability_gadget()) {
    delete content_.ability_gadget_;
    clear_has_content();
  }
}
inline  const ::proto::AbilityGadgetInfo& SceneGadgetInfo::ability_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.ability_gadget)
  return has_ability_gadget()
      ? *content_.ability_gadget_
      : ::proto::AbilityGadgetInfo::default_instance();
}
inline ::proto::AbilityGadgetInfo* SceneGadgetInfo::mutable_ability_gadget() {
  if (!has_ability_gadget()) {
    clear_content();
    set_has_ability_gadget();
    content_.ability_gadget_ = new ::proto::AbilityGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.ability_gadget)
  return content_.ability_gadget_;
}
inline ::proto::AbilityGadgetInfo* SceneGadgetInfo::release_ability_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.ability_gadget)
  if (has_ability_gadget()) {
    clear_has_content();
    ::proto::AbilityGadgetInfo* temp = content_.ability_gadget_;
    content_.ability_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_ability_gadget(::proto::AbilityGadgetInfo* ability_gadget) {
  clear_content();
  if (ability_gadget) {
    set_has_ability_gadget();
    content_.ability_gadget_ = ability_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.ability_gadget)
}

// .proto.StatueGadgetInfo statue_gadget = 19;
inline bool SceneGadgetInfo::has_statue_gadget() const {
  return content_case() == kStatueGadget;
}
inline void SceneGadgetInfo::set_has_statue_gadget() {
  _oneof_case_[0] = kStatueGadget;
}
inline void SceneGadgetInfo::clear_statue_gadget() {
  if (has_statue_gadget()) {
    delete content_.statue_gadget_;
    clear_has_content();
  }
}
inline  const ::proto::StatueGadgetInfo& SceneGadgetInfo::statue_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.statue_gadget)
  return has_statue_gadget()
      ? *content_.statue_gadget_
      : ::proto::StatueGadgetInfo::default_instance();
}
inline ::proto::StatueGadgetInfo* SceneGadgetInfo::mutable_statue_gadget() {
  if (!has_statue_gadget()) {
    clear_content();
    set_has_statue_gadget();
    content_.statue_gadget_ = new ::proto::StatueGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.statue_gadget)
  return content_.statue_gadget_;
}
inline ::proto::StatueGadgetInfo* SceneGadgetInfo::release_statue_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.statue_gadget)
  if (has_statue_gadget()) {
    clear_has_content();
    ::proto::StatueGadgetInfo* temp = content_.statue_gadget_;
    content_.statue_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_statue_gadget(::proto::StatueGadgetInfo* statue_gadget) {
  clear_content();
  if (statue_gadget) {
    set_has_statue_gadget();
    content_.statue_gadget_ = statue_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.statue_gadget)
}

// .proto.BossChestInfo boss_chest = 20;
inline bool SceneGadgetInfo::has_boss_chest() const {
  return content_case() == kBossChest;
}
inline void SceneGadgetInfo::set_has_boss_chest() {
  _oneof_case_[0] = kBossChest;
}
inline void SceneGadgetInfo::clear_boss_chest() {
  if (has_boss_chest()) {
    delete content_.boss_chest_;
    clear_has_content();
  }
}
inline  const ::proto::BossChestInfo& SceneGadgetInfo::boss_chest() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.boss_chest)
  return has_boss_chest()
      ? *content_.boss_chest_
      : ::proto::BossChestInfo::default_instance();
}
inline ::proto::BossChestInfo* SceneGadgetInfo::mutable_boss_chest() {
  if (!has_boss_chest()) {
    clear_content();
    set_has_boss_chest();
    content_.boss_chest_ = new ::proto::BossChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.boss_chest)
  return content_.boss_chest_;
}
inline ::proto::BossChestInfo* SceneGadgetInfo::release_boss_chest() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.boss_chest)
  if (has_boss_chest()) {
    clear_has_content();
    ::proto::BossChestInfo* temp = content_.boss_chest_;
    content_.boss_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_boss_chest(::proto::BossChestInfo* boss_chest) {
  clear_content();
  if (boss_chest) {
    set_has_boss_chest();
    content_.boss_chest_ = boss_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.boss_chest)
}

// .proto.BlossomChestInfo blossom_chest = 41;
inline bool SceneGadgetInfo::has_blossom_chest() const {
  return content_case() == kBlossomChest;
}
inline void SceneGadgetInfo::set_has_blossom_chest() {
  _oneof_case_[0] = kBlossomChest;
}
inline void SceneGadgetInfo::clear_blossom_chest() {
  if (has_blossom_chest()) {
    delete content_.blossom_chest_;
    clear_has_content();
  }
}
inline  const ::proto::BlossomChestInfo& SceneGadgetInfo::blossom_chest() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.blossom_chest)
  return has_blossom_chest()
      ? *content_.blossom_chest_
      : ::proto::BlossomChestInfo::default_instance();
}
inline ::proto::BlossomChestInfo* SceneGadgetInfo::mutable_blossom_chest() {
  if (!has_blossom_chest()) {
    clear_content();
    set_has_blossom_chest();
    content_.blossom_chest_ = new ::proto::BlossomChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.blossom_chest)
  return content_.blossom_chest_;
}
inline ::proto::BlossomChestInfo* SceneGadgetInfo::release_blossom_chest() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.blossom_chest)
  if (has_blossom_chest()) {
    clear_has_content();
    ::proto::BlossomChestInfo* temp = content_.blossom_chest_;
    content_.blossom_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneGadgetInfo::set_allocated_blossom_chest(::proto::BlossomChestInfo* blossom_chest) {
  clear_content();
  if (blossom_chest) {
    set_has_blossom_chest();
    content_.blossom_chest_ = blossom_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.blossom_chest)
}

// uint32 mark_flag = 21;
inline void SceneGadgetInfo::clear_mark_flag() {
  mark_flag_ = 0u;
}
inline ::google::protobuf::uint32 SceneGadgetInfo::mark_flag() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.mark_flag)
  return mark_flag_;
}
inline void SceneGadgetInfo::set_mark_flag(::google::protobuf::uint32 value) {
  
  mark_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.mark_flag)
}

inline bool SceneGadgetInfo::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
inline void SceneGadgetInfo::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline SceneGadgetInfo::ContentCase SceneGadgetInfo::content_case() const {
  return SceneGadgetInfo::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// AnimatorParameterValueInfo

// uint32 para_type = 1;
inline void AnimatorParameterValueInfo::clear_para_type() {
  para_type_ = 0u;
}
inline ::google::protobuf::uint32 AnimatorParameterValueInfo::para_type() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.para_type)
  return para_type_;
}
inline void AnimatorParameterValueInfo::set_para_type(::google::protobuf::uint32 value) {
  
  para_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.para_type)
}

// int32 int_val = 2;
inline bool AnimatorParameterValueInfo::has_int_val() const {
  return paraVal_case() == kIntVal;
}
inline void AnimatorParameterValueInfo::set_has_int_val() {
  _oneof_case_[0] = kIntVal;
}
inline void AnimatorParameterValueInfo::clear_int_val() {
  if (has_int_val()) {
    paraVal_.int_val_ = 0;
    clear_has_paraVal();
  }
}
inline ::google::protobuf::int32 AnimatorParameterValueInfo::int_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.int_val)
  if (has_int_val()) {
    return paraVal_.int_val_;
  }
  return 0;
}
inline void AnimatorParameterValueInfo::set_int_val(::google::protobuf::int32 value) {
  if (!has_int_val()) {
    clear_paraVal();
    set_has_int_val();
  }
  paraVal_.int_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.int_val)
}

// float float_val = 3;
inline bool AnimatorParameterValueInfo::has_float_val() const {
  return paraVal_case() == kFloatVal;
}
inline void AnimatorParameterValueInfo::set_has_float_val() {
  _oneof_case_[0] = kFloatVal;
}
inline void AnimatorParameterValueInfo::clear_float_val() {
  if (has_float_val()) {
    paraVal_.float_val_ = 0;
    clear_has_paraVal();
  }
}
inline float AnimatorParameterValueInfo::float_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.float_val)
  if (has_float_val()) {
    return paraVal_.float_val_;
  }
  return 0;
}
inline void AnimatorParameterValueInfo::set_float_val(float value) {
  if (!has_float_val()) {
    clear_paraVal();
    set_has_float_val();
  }
  paraVal_.float_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.float_val)
}

// bool bool_val = 4;
inline bool AnimatorParameterValueInfo::has_bool_val() const {
  return paraVal_case() == kBoolVal;
}
inline void AnimatorParameterValueInfo::set_has_bool_val() {
  _oneof_case_[0] = kBoolVal;
}
inline void AnimatorParameterValueInfo::clear_bool_val() {
  if (has_bool_val()) {
    paraVal_.bool_val_ = false;
    clear_has_paraVal();
  }
}
inline bool AnimatorParameterValueInfo::bool_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.bool_val)
  if (has_bool_val()) {
    return paraVal_.bool_val_;
  }
  return false;
}
inline void AnimatorParameterValueInfo::set_bool_val(bool value) {
  if (!has_bool_val()) {
    clear_paraVal();
    set_has_bool_val();
  }
  paraVal_.bool_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.bool_val)
}

inline bool AnimatorParameterValueInfo::has_paraVal() const {
  return paraVal_case() != PARAVAL_NOT_SET;
}
inline void AnimatorParameterValueInfo::clear_has_paraVal() {
  _oneof_case_[0] = PARAVAL_NOT_SET;
}
inline AnimatorParameterValueInfo::ParaValCase AnimatorParameterValueInfo::paraVal_case() const {
  return AnimatorParameterValueInfo::ParaValCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ServantInfo

// uint32 master_entity_id = 1;
inline void ServantInfo::clear_master_entity_id() {
  master_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ServantInfo::master_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ServantInfo.master_entity_id)
  return master_entity_id_;
}
inline void ServantInfo::set_master_entity_id(::google::protobuf::uint32 value) {
  
  master_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServantInfo.master_entity_id)
}

// uint32 born_slot_index = 2;
inline void ServantInfo::clear_born_slot_index() {
  born_slot_index_ = 0u;
}
inline ::google::protobuf::uint32 ServantInfo::born_slot_index() const {
  // @@protoc_insertion_point(field_get:proto.ServantInfo.born_slot_index)
  return born_slot_index_;
}
inline void ServantInfo::set_born_slot_index(::google::protobuf::uint32 value) {
  
  born_slot_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ServantInfo.born_slot_index)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneEntityAiInfo

// bool is_ai_open = 1;
inline void SceneEntityAiInfo::clear_is_ai_open() {
  is_ai_open_ = false;
}
inline bool SceneEntityAiInfo::is_ai_open() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.is_ai_open)
  return is_ai_open_;
}
inline void SceneEntityAiInfo::set_is_ai_open(bool value) {
  
  is_ai_open_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAiInfo.is_ai_open)
}

// .proto.Vector born_pos = 2;
inline bool SceneEntityAiInfo::has_born_pos() const {
  return this != internal_default_instance() && born_pos_ != NULL;
}
inline void SceneEntityAiInfo::clear_born_pos() {
  if (GetArenaNoVirtual() == NULL && born_pos_ != NULL) delete born_pos_;
  born_pos_ = NULL;
}
inline const ::proto::Vector& SceneEntityAiInfo::born_pos() const {
  const ::proto::Vector* p = born_pos_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.born_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* SceneEntityAiInfo::mutable_born_pos() {
  
  if (born_pos_ == NULL) {
    born_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAiInfo.born_pos)
  return born_pos_;
}
inline ::proto::Vector* SceneEntityAiInfo::release_born_pos() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityAiInfo.born_pos)
  
  ::proto::Vector* temp = born_pos_;
  born_pos_ = NULL;
  return temp;
}
inline void SceneEntityAiInfo::set_allocated_born_pos(::proto::Vector* born_pos) {
  delete born_pos_;
  born_pos_ = born_pos;
  if (born_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityAiInfo.born_pos)
}

// map<uint32, uint32> skill_cd_map = 3;
inline int SceneEntityAiInfo::skill_cd_map_size() const {
  return skill_cd_map_.size();
}
inline void SceneEntityAiInfo::clear_skill_cd_map() {
  skill_cd_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneEntityAiInfo::skill_cd_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityAiInfo.skill_cd_map)
  return skill_cd_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneEntityAiInfo::mutable_skill_cd_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityAiInfo.skill_cd_map)
  return skill_cd_map_.MutableMap();
}

// .proto.ServantInfo servant_info = 4;
inline bool SceneEntityAiInfo::has_servant_info() const {
  return this != internal_default_instance() && servant_info_ != NULL;
}
inline void SceneEntityAiInfo::clear_servant_info() {
  if (GetArenaNoVirtual() == NULL && servant_info_ != NULL) delete servant_info_;
  servant_info_ = NULL;
}
inline const ::proto::ServantInfo& SceneEntityAiInfo::servant_info() const {
  const ::proto::ServantInfo* p = servant_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.servant_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServantInfo*>(
      &::proto::_ServantInfo_default_instance_);
}
inline ::proto::ServantInfo* SceneEntityAiInfo::mutable_servant_info() {
  
  if (servant_info_ == NULL) {
    servant_info_ = new ::proto::ServantInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAiInfo.servant_info)
  return servant_info_;
}
inline ::proto::ServantInfo* SceneEntityAiInfo::release_servant_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityAiInfo.servant_info)
  
  ::proto::ServantInfo* temp = servant_info_;
  servant_info_ = NULL;
  return temp;
}
inline void SceneEntityAiInfo::set_allocated_servant_info(::proto::ServantInfo* servant_info) {
  delete servant_info_;
  servant_info_ = servant_info;
  if (servant_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityAiInfo.servant_info)
}

// map<uint32, uint32> ai_threat_map = 5;
inline int SceneEntityAiInfo::ai_threat_map_size() const {
  return ai_threat_map_.size();
}
inline void SceneEntityAiInfo::clear_ai_threat_map() {
  ai_threat_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneEntityAiInfo::ai_threat_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityAiInfo.ai_threat_map)
  return ai_threat_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneEntityAiInfo::mutable_ai_threat_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityAiInfo.ai_threat_map)
  return ai_threat_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EntityRendererChangedInfo

// map<string, int32> changed_renderers = 1;
inline int EntityRendererChangedInfo::changed_renderers_size() const {
  return changed_renderers_.size();
}
inline void EntityRendererChangedInfo::clear_changed_renderers() {
  changed_renderers_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
EntityRendererChangedInfo::changed_renderers() const {
  // @@protoc_insertion_point(field_map:proto.EntityRendererChangedInfo.changed_renderers)
  return changed_renderers_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
EntityRendererChangedInfo::mutable_changed_renderers() {
  // @@protoc_insertion_point(field_mutable_map:proto.EntityRendererChangedInfo.changed_renderers)
  return changed_renderers_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneEntityInfo

// .proto.ProtEntityType entity_type = 1;
inline void SceneEntityInfo::clear_entity_type() {
  entity_type_ = 0;
}
inline ::proto::ProtEntityType SceneEntityInfo::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_type)
  return static_cast< ::proto::ProtEntityType >(entity_type_);
}
inline void SceneEntityInfo::set_entity_type(::proto::ProtEntityType value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.entity_type)
}

// uint32 entity_id = 2;
inline void SceneEntityInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_id)
  return entity_id_;
}
inline void SceneEntityInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.entity_id)
}

// string name = 3;
inline void SceneEntityInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SceneEntityInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.name)
  return name_.GetNoArena();
}
inline void SceneEntityInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.name)
}
#if LANG_CXX11
inline void SceneEntityInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SceneEntityInfo.name)
}
#endif
inline void SceneEntityInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SceneEntityInfo.name)
}
inline void SceneEntityInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SceneEntityInfo.name)
}
inline ::std::string* SceneEntityInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SceneEntityInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SceneEntityInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.name)
}

// .proto.MotionInfo motion_info = 4;
inline bool SceneEntityInfo::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void SceneEntityInfo::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& SceneEntityInfo::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* SceneEntityInfo::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* SceneEntityInfo::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void SceneEntityInfo::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.motion_info)
}

// map<uint32, .proto.PropValue> prop_map = 5;
inline int SceneEntityInfo::prop_map_size() const {
  return prop_map_.size();
}
inline void SceneEntityInfo::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
SceneEntityInfo::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityInfo.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
SceneEntityInfo::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityInfo.prop_map)
  return prop_map_.MutableMap();
}

// map<uint32, float> fight_prop_map = 6;
inline int SceneEntityInfo::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void SceneEntityInfo::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
SceneEntityInfo::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityInfo.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
SceneEntityInfo::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityInfo.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// uint32 life_state = 7;
inline void SceneEntityInfo::clear_life_state() {
  life_state_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityInfo::life_state() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.life_state)
  return life_state_;
}
inline void SceneEntityInfo::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.life_state)
}

// .proto.AbilitySyncStateInfo ability_info = 8;
inline bool SceneEntityInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
inline void SceneEntityInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& SceneEntityInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* SceneEntityInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.ability_info)
  return ability_info_;
}
inline ::proto::AbilitySyncStateInfo* SceneEntityInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
inline void SceneEntityInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.ability_info)
}

// map<int32, .proto.AnimatorParameterValueInfo> animator_para_map = 9;
inline int SceneEntityInfo::animator_para_map_size() const {
  return animator_para_map_.size();
}
inline void SceneEntityInfo::clear_animator_para_map() {
  animator_para_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >&
SceneEntityInfo::animator_para_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityInfo.animator_para_map)
  return animator_para_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >*
SceneEntityInfo::mutable_animator_para_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityInfo.animator_para_map)
  return animator_para_map_.MutableMap();
}

// .proto.SceneAvatarInfo avatar = 10;
inline bool SceneEntityInfo::has_avatar() const {
  return entity_case() == kAvatar;
}
inline void SceneEntityInfo::set_has_avatar() {
  _oneof_case_[0] = kAvatar;
}
inline void SceneEntityInfo::clear_avatar() {
  if (has_avatar()) {
    delete entity_.avatar_;
    clear_has_entity();
  }
}
inline  const ::proto::SceneAvatarInfo& SceneEntityInfo::avatar() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.avatar)
  return has_avatar()
      ? *entity_.avatar_
      : ::proto::SceneAvatarInfo::default_instance();
}
inline ::proto::SceneAvatarInfo* SceneEntityInfo::mutable_avatar() {
  if (!has_avatar()) {
    clear_entity();
    set_has_avatar();
    entity_.avatar_ = new ::proto::SceneAvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.avatar)
  return entity_.avatar_;
}
inline ::proto::SceneAvatarInfo* SceneEntityInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.avatar)
  if (has_avatar()) {
    clear_has_entity();
    ::proto::SceneAvatarInfo* temp = entity_.avatar_;
    entity_.avatar_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneEntityInfo::set_allocated_avatar(::proto::SceneAvatarInfo* avatar) {
  clear_entity();
  if (avatar) {
    set_has_avatar();
    entity_.avatar_ = avatar;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.avatar)
}

// .proto.SceneMonsterInfo monster = 11;
inline bool SceneEntityInfo::has_monster() const {
  return entity_case() == kMonster;
}
inline void SceneEntityInfo::set_has_monster() {
  _oneof_case_[0] = kMonster;
}
inline void SceneEntityInfo::clear_monster() {
  if (has_monster()) {
    delete entity_.monster_;
    clear_has_entity();
  }
}
inline  const ::proto::SceneMonsterInfo& SceneEntityInfo::monster() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.monster)
  return has_monster()
      ? *entity_.monster_
      : ::proto::SceneMonsterInfo::default_instance();
}
inline ::proto::SceneMonsterInfo* SceneEntityInfo::mutable_monster() {
  if (!has_monster()) {
    clear_entity();
    set_has_monster();
    entity_.monster_ = new ::proto::SceneMonsterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.monster)
  return entity_.monster_;
}
inline ::proto::SceneMonsterInfo* SceneEntityInfo::release_monster() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.monster)
  if (has_monster()) {
    clear_has_entity();
    ::proto::SceneMonsterInfo* temp = entity_.monster_;
    entity_.monster_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneEntityInfo::set_allocated_monster(::proto::SceneMonsterInfo* monster) {
  clear_entity();
  if (monster) {
    set_has_monster();
    entity_.monster_ = monster;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.monster)
}

// .proto.SceneNpcInfo npc = 12;
inline bool SceneEntityInfo::has_npc() const {
  return entity_case() == kNpc;
}
inline void SceneEntityInfo::set_has_npc() {
  _oneof_case_[0] = kNpc;
}
inline void SceneEntityInfo::clear_npc() {
  if (has_npc()) {
    delete entity_.npc_;
    clear_has_entity();
  }
}
inline  const ::proto::SceneNpcInfo& SceneEntityInfo::npc() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.npc)
  return has_npc()
      ? *entity_.npc_
      : ::proto::SceneNpcInfo::default_instance();
}
inline ::proto::SceneNpcInfo* SceneEntityInfo::mutable_npc() {
  if (!has_npc()) {
    clear_entity();
    set_has_npc();
    entity_.npc_ = new ::proto::SceneNpcInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.npc)
  return entity_.npc_;
}
inline ::proto::SceneNpcInfo* SceneEntityInfo::release_npc() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.npc)
  if (has_npc()) {
    clear_has_entity();
    ::proto::SceneNpcInfo* temp = entity_.npc_;
    entity_.npc_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneEntityInfo::set_allocated_npc(::proto::SceneNpcInfo* npc) {
  clear_entity();
  if (npc) {
    set_has_npc();
    entity_.npc_ = npc;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.npc)
}

// .proto.SceneGadgetInfo gadget = 13;
inline bool SceneEntityInfo::has_gadget() const {
  return entity_case() == kGadget;
}
inline void SceneEntityInfo::set_has_gadget() {
  _oneof_case_[0] = kGadget;
}
inline void SceneEntityInfo::clear_gadget() {
  if (has_gadget()) {
    delete entity_.gadget_;
    clear_has_entity();
  }
}
inline  const ::proto::SceneGadgetInfo& SceneEntityInfo::gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.gadget)
  return has_gadget()
      ? *entity_.gadget_
      : ::proto::SceneGadgetInfo::default_instance();
}
inline ::proto::SceneGadgetInfo* SceneEntityInfo::mutable_gadget() {
  if (!has_gadget()) {
    clear_entity();
    set_has_gadget();
    entity_.gadget_ = new ::proto::SceneGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.gadget)
  return entity_.gadget_;
}
inline ::proto::SceneGadgetInfo* SceneEntityInfo::release_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.gadget)
  if (has_gadget()) {
    clear_has_entity();
    ::proto::SceneGadgetInfo* temp = entity_.gadget_;
    entity_.gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneEntityInfo::set_allocated_gadget(::proto::SceneGadgetInfo* gadget) {
  clear_entity();
  if (gadget) {
    set_has_gadget();
    entity_.gadget_ = gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.gadget)
}

// .proto.EntityRendererChangedInfo renderer_changed_info = 14;
inline bool SceneEntityInfo::has_renderer_changed_info() const {
  return this != internal_default_instance() && renderer_changed_info_ != NULL;
}
inline void SceneEntityInfo::clear_renderer_changed_info() {
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) delete renderer_changed_info_;
  renderer_changed_info_ = NULL;
}
inline const ::proto::EntityRendererChangedInfo& SceneEntityInfo::renderer_changed_info() const {
  const ::proto::EntityRendererChangedInfo* p = renderer_changed_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.renderer_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityRendererChangedInfo*>(
      &::proto::_EntityRendererChangedInfo_default_instance_);
}
inline ::proto::EntityRendererChangedInfo* SceneEntityInfo::mutable_renderer_changed_info() {
  
  if (renderer_changed_info_ == NULL) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.renderer_changed_info)
  return renderer_changed_info_;
}
inline ::proto::EntityRendererChangedInfo* SceneEntityInfo::release_renderer_changed_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.renderer_changed_info)
  
  ::proto::EntityRendererChangedInfo* temp = renderer_changed_info_;
  renderer_changed_info_ = NULL;
  return temp;
}
inline void SceneEntityInfo::set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info) {
  delete renderer_changed_info_;
  renderer_changed_info_ = renderer_changed_info;
  if (renderer_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.renderer_changed_info)
}

// .proto.SceneEntityAiInfo ai_info = 15;
inline bool SceneEntityInfo::has_ai_info() const {
  return this != internal_default_instance() && ai_info_ != NULL;
}
inline void SceneEntityInfo::clear_ai_info() {
  if (GetArenaNoVirtual() == NULL && ai_info_ != NULL) delete ai_info_;
  ai_info_ = NULL;
}
inline const ::proto::SceneEntityAiInfo& SceneEntityInfo::ai_info() const {
  const ::proto::SceneEntityAiInfo* p = ai_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.ai_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEntityAiInfo*>(
      &::proto::_SceneEntityAiInfo_default_instance_);
}
inline ::proto::SceneEntityAiInfo* SceneEntityInfo::mutable_ai_info() {
  
  if (ai_info_ == NULL) {
    ai_info_ = new ::proto::SceneEntityAiInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.ai_info)
  return ai_info_;
}
inline ::proto::SceneEntityAiInfo* SceneEntityInfo::release_ai_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.ai_info)
  
  ::proto::SceneEntityAiInfo* temp = ai_info_;
  ai_info_ = NULL;
  return temp;
}
inline void SceneEntityInfo::set_allocated_ai_info(::proto::SceneEntityAiInfo* ai_info) {
  delete ai_info_;
  ai_info_ = ai_info;
  if (ai_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.ai_info)
}

// uint32 last_move_scene_time_ms = 17;
inline void SceneEntityInfo::clear_last_move_scene_time_ms() {
  last_move_scene_time_ms_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityInfo::last_move_scene_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.last_move_scene_time_ms)
  return last_move_scene_time_ms_;
}
inline void SceneEntityInfo::set_last_move_scene_time_ms(::google::protobuf::uint32 value) {
  
  last_move_scene_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.last_move_scene_time_ms)
}

// uint32 last_move_reliable_seq = 18;
inline void SceneEntityInfo::clear_last_move_reliable_seq() {
  last_move_reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityInfo::last_move_reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.last_move_reliable_seq)
  return last_move_reliable_seq_;
}
inline void SceneEntityInfo::set_last_move_reliable_seq(::google::protobuf::uint32 value) {
  
  last_move_reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.last_move_reliable_seq)
}

// bytes entity_client_data = 19;
inline void SceneEntityInfo::clear_entity_client_data() {
  entity_client_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SceneEntityInfo::entity_client_data() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_client_data)
  return entity_client_data_.GetNoArena();
}
inline void SceneEntityInfo::set_entity_client_data(const ::std::string& value) {
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.entity_client_data)
}
#if LANG_CXX11
inline void SceneEntityInfo::set_entity_client_data(::std::string&& value) {
  
  entity_client_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SceneEntityInfo.entity_client_data)
}
#endif
inline void SceneEntityInfo::set_entity_client_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SceneEntityInfo.entity_client_data)
}
inline void SceneEntityInfo::set_entity_client_data(const void* value, size_t size) {
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SceneEntityInfo.entity_client_data)
}
inline ::std::string* SceneEntityInfo::mutable_entity_client_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.entity_client_data)
  return entity_client_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SceneEntityInfo::release_entity_client_data() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.entity_client_data)
  
  return entity_client_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SceneEntityInfo::set_allocated_entity_client_data(::std::string* entity_client_data) {
  if (entity_client_data != NULL) {
    
  } else {
    
  }
  entity_client_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_client_data);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.entity_client_data)
}

inline bool SceneEntityInfo::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
inline void SceneEntityInfo::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
inline SceneEntityInfo::EntityCase SceneEntityInfo::entity_case() const {
  return SceneEntityInfo::EntityCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CreateGadgetInfo_Chest

// uint32 chest_drop_id = 1;
inline void CreateGadgetInfo_Chest::clear_chest_drop_id() {
  chest_drop_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateGadgetInfo_Chest::chest_drop_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.Chest.chest_drop_id)
  return chest_drop_id_;
}
inline void CreateGadgetInfo_Chest::set_chest_drop_id(::google::protobuf::uint32 value) {
  
  chest_drop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.Chest.chest_drop_id)
}

// bool is_show_cutscene = 2;
inline void CreateGadgetInfo_Chest::clear_is_show_cutscene() {
  is_show_cutscene_ = false;
}
inline bool CreateGadgetInfo_Chest::is_show_cutscene() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.Chest.is_show_cutscene)
  return is_show_cutscene_;
}
inline void CreateGadgetInfo_Chest::set_is_show_cutscene(bool value) {
  
  is_show_cutscene_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.Chest.is_show_cutscene)
}

// -------------------------------------------------------------------

// CreateGadgetInfo

// .proto.GadgetBornType born_type = 1;
inline void CreateGadgetInfo::clear_born_type() {
  born_type_ = 0;
}
inline ::proto::GadgetBornType CreateGadgetInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.born_type)
  return static_cast< ::proto::GadgetBornType >(born_type_);
}
inline void CreateGadgetInfo::set_born_type(::proto::GadgetBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.born_type)
}

// .proto.CreateGadgetInfo.Chest chest = 2;
inline bool CreateGadgetInfo::has_chest() const {
  return this != internal_default_instance() && chest_ != NULL;
}
inline void CreateGadgetInfo::clear_chest() {
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) delete chest_;
  chest_ = NULL;
}
inline const ::proto::CreateGadgetInfo_Chest& CreateGadgetInfo::chest() const {
  const ::proto::CreateGadgetInfo_Chest* p = chest_;
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.chest)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateGadgetInfo_Chest*>(
      &::proto::_CreateGadgetInfo_Chest_default_instance_);
}
inline ::proto::CreateGadgetInfo_Chest* CreateGadgetInfo::mutable_chest() {
  
  if (chest_ == NULL) {
    chest_ = new ::proto::CreateGadgetInfo_Chest;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateGadgetInfo.chest)
  return chest_;
}
inline ::proto::CreateGadgetInfo_Chest* CreateGadgetInfo::release_chest() {
  // @@protoc_insertion_point(field_release:proto.CreateGadgetInfo.chest)
  
  ::proto::CreateGadgetInfo_Chest* temp = chest_;
  chest_ = NULL;
  return temp;
}
inline void CreateGadgetInfo::set_allocated_chest(::proto::CreateGadgetInfo_Chest* chest) {
  delete chest_;
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateGadgetInfo.chest)
}

// -------------------------------------------------------------------

// CreateEntityInfo

// uint32 monster_id = 1;
inline bool CreateEntityInfo::has_monster_id() const {
  return entity_case() == kMonsterId;
}
inline void CreateEntityInfo::set_has_monster_id() {
  _oneof_case_[0] = kMonsterId;
}
inline void CreateEntityInfo::clear_monster_id() {
  if (has_monster_id()) {
    entity_.monster_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 CreateEntityInfo::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.monster_id)
  if (has_monster_id()) {
    return entity_.monster_id_;
  }
  return 0u;
}
inline void CreateEntityInfo::set_monster_id(::google::protobuf::uint32 value) {
  if (!has_monster_id()) {
    clear_entity();
    set_has_monster_id();
  }
  entity_.monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.monster_id)
}

// uint32 npc_id = 2;
inline bool CreateEntityInfo::has_npc_id() const {
  return entity_case() == kNpcId;
}
inline void CreateEntityInfo::set_has_npc_id() {
  _oneof_case_[0] = kNpcId;
}
inline void CreateEntityInfo::clear_npc_id() {
  if (has_npc_id()) {
    entity_.npc_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 CreateEntityInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.npc_id)
  if (has_npc_id()) {
    return entity_.npc_id_;
  }
  return 0u;
}
inline void CreateEntityInfo::set_npc_id(::google::protobuf::uint32 value) {
  if (!has_npc_id()) {
    clear_entity();
    set_has_npc_id();
  }
  entity_.npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.npc_id)
}

// uint32 gadget_id = 3;
inline bool CreateEntityInfo::has_gadget_id() const {
  return entity_case() == kGadgetId;
}
inline void CreateEntityInfo::set_has_gadget_id() {
  _oneof_case_[0] = kGadgetId;
}
inline void CreateEntityInfo::clear_gadget_id() {
  if (has_gadget_id()) {
    entity_.gadget_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 CreateEntityInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.gadget_id)
  if (has_gadget_id()) {
    return entity_.gadget_id_;
  }
  return 0u;
}
inline void CreateEntityInfo::set_gadget_id(::google::protobuf::uint32 value) {
  if (!has_gadget_id()) {
    clear_entity();
    set_has_gadget_id();
  }
  entity_.gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.gadget_id)
}

// uint32 item_id = 4;
inline bool CreateEntityInfo::has_item_id() const {
  return entity_case() == kItemId;
}
inline void CreateEntityInfo::set_has_item_id() {
  _oneof_case_[0] = kItemId;
}
inline void CreateEntityInfo::clear_item_id() {
  if (has_item_id()) {
    entity_.item_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 CreateEntityInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.item_id)
  if (has_item_id()) {
    return entity_.item_id_;
  }
  return 0u;
}
inline void CreateEntityInfo::set_item_id(::google::protobuf::uint32 value) {
  if (!has_item_id()) {
    clear_entity();
    set_has_item_id();
  }
  entity_.item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.item_id)
}

// uint32 level = 5;
inline void CreateEntityInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 CreateEntityInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.level)
  return level_;
}
inline void CreateEntityInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.level)
}

// .proto.Vector pos = 6;
inline bool CreateEntityInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void CreateEntityInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& CreateEntityInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* CreateEntityInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.pos)
  return pos_;
}
inline ::proto::Vector* CreateEntityInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CreateEntityInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.pos)
}

// .proto.Vector rot = 7;
inline bool CreateEntityInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void CreateEntityInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& CreateEntityInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* CreateEntityInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.rot)
  return rot_;
}
inline ::proto::Vector* CreateEntityInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void CreateEntityInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.rot)
}

// uint32 scene_id = 10;
inline void CreateEntityInfo::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateEntityInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.scene_id)
  return scene_id_;
}
inline void CreateEntityInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.scene_id)
}

// uint32 room_id = 11;
inline void CreateEntityInfo::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateEntityInfo::room_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.room_id)
  return room_id_;
}
inline void CreateEntityInfo::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.room_id)
}

// uint32 client_unique_id = 12;
inline void CreateEntityInfo::clear_client_unique_id() {
  client_unique_id_ = 0u;
}
inline ::google::protobuf::uint32 CreateEntityInfo::client_unique_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.client_unique_id)
  return client_unique_id_;
}
inline void CreateEntityInfo::set_client_unique_id(::google::protobuf::uint32 value) {
  
  client_unique_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.client_unique_id)
}

// .proto.CreateGadgetInfo gadget = 13;
inline bool CreateEntityInfo::has_gadget() const {
  return entity_create_info_case() == kGadget;
}
inline void CreateEntityInfo::set_has_gadget() {
  _oneof_case_[1] = kGadget;
}
inline void CreateEntityInfo::clear_gadget() {
  if (has_gadget()) {
    delete entity_create_info_.gadget_;
    clear_has_entity_create_info();
  }
}
inline  const ::proto::CreateGadgetInfo& CreateEntityInfo::gadget() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.gadget)
  return has_gadget()
      ? *entity_create_info_.gadget_
      : ::proto::CreateGadgetInfo::default_instance();
}
inline ::proto::CreateGadgetInfo* CreateEntityInfo::mutable_gadget() {
  if (!has_gadget()) {
    clear_entity_create_info();
    set_has_gadget();
    entity_create_info_.gadget_ = new ::proto::CreateGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.gadget)
  return entity_create_info_.gadget_;
}
inline ::proto::CreateGadgetInfo* CreateEntityInfo::release_gadget() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.gadget)
  if (has_gadget()) {
    clear_has_entity_create_info();
    ::proto::CreateGadgetInfo* temp = entity_create_info_.gadget_;
    entity_create_info_.gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void CreateEntityInfo::set_allocated_gadget(::proto::CreateGadgetInfo* gadget) {
  clear_entity_create_info();
  if (gadget) {
    set_has_gadget();
    entity_create_info_.gadget_ = gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.gadget)
}

inline bool CreateEntityInfo::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
inline void CreateEntityInfo::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
inline bool CreateEntityInfo::has_entity_create_info() const {
  return entity_create_info_case() != ENTITY_CREATE_INFO_NOT_SET;
}
inline void CreateEntityInfo::clear_has_entity_create_info() {
  _oneof_case_[1] = ENTITY_CREATE_INFO_NOT_SET;
}
inline CreateEntityInfo::EntityCase CreateEntityInfo::entity_case() const {
  return CreateEntityInfo::EntityCase(_oneof_case_[0]);
}
inline CreateEntityInfo::EntityCreateInfoCase CreateEntityInfo::entity_create_info_case() const {
  return CreateEntityInfo::EntityCreateInfoCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// TrialAvatarGrantRecord

// uint32 grant_reason = 1;
inline void TrialAvatarGrantRecord::clear_grant_reason() {
  grant_reason_ = 0u;
}
inline ::google::protobuf::uint32 TrialAvatarGrantRecord::grant_reason() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarGrantRecord.grant_reason)
  return grant_reason_;
}
inline void TrialAvatarGrantRecord::set_grant_reason(::google::protobuf::uint32 value) {
  
  grant_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarGrantRecord.grant_reason)
}

// uint32 from_parent_quest_id = 2;
inline void TrialAvatarGrantRecord::clear_from_parent_quest_id() {
  from_parent_quest_id_ = 0u;
}
inline ::google::protobuf::uint32 TrialAvatarGrantRecord::from_parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarGrantRecord.from_parent_quest_id)
  return from_parent_quest_id_;
}
inline void TrialAvatarGrantRecord::set_from_parent_quest_id(::google::protobuf::uint32 value) {
  
  from_parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarGrantRecord.from_parent_quest_id)
}

// -------------------------------------------------------------------

// TrialAvatarInfo

// uint32 trial_avatar_id = 1;
inline void TrialAvatarInfo::clear_trial_avatar_id() {
  trial_avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 TrialAvatarInfo::trial_avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.trial_avatar_id)
  return trial_avatar_id_;
}
inline void TrialAvatarInfo::set_trial_avatar_id(::google::protobuf::uint32 value) {
  
  trial_avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarInfo.trial_avatar_id)
}

// repeated .proto.Item trial_equip_list = 2;
inline int TrialAvatarInfo::trial_equip_list_size() const {
  return trial_equip_list_.size();
}
inline void TrialAvatarInfo::clear_trial_equip_list() {
  trial_equip_list_.Clear();
}
inline const ::proto::Item& TrialAvatarInfo::trial_equip_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Get(index);
}
inline ::proto::Item* TrialAvatarInfo::mutable_trial_equip_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Mutable(index);
}
inline ::proto::Item* TrialAvatarInfo::add_trial_equip_list() {
  // @@protoc_insertion_point(field_add:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Item >*
TrialAvatarInfo::mutable_trial_equip_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TrialAvatarInfo.trial_equip_list)
  return &trial_equip_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Item >&
TrialAvatarInfo::trial_equip_list() const {
  // @@protoc_insertion_point(field_list:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_;
}

// .proto.TrialAvatarGrantRecord grant_record = 3;
inline bool TrialAvatarInfo::has_grant_record() const {
  return this != internal_default_instance() && grant_record_ != NULL;
}
inline void TrialAvatarInfo::clear_grant_record() {
  if (GetArenaNoVirtual() == NULL && grant_record_ != NULL) delete grant_record_;
  grant_record_ = NULL;
}
inline const ::proto::TrialAvatarGrantRecord& TrialAvatarInfo::grant_record() const {
  const ::proto::TrialAvatarGrantRecord* p = grant_record_;
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.grant_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TrialAvatarGrantRecord*>(
      &::proto::_TrialAvatarGrantRecord_default_instance_);
}
inline ::proto::TrialAvatarGrantRecord* TrialAvatarInfo::mutable_grant_record() {
  
  if (grant_record_ == NULL) {
    grant_record_ = new ::proto::TrialAvatarGrantRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TrialAvatarInfo.grant_record)
  return grant_record_;
}
inline ::proto::TrialAvatarGrantRecord* TrialAvatarInfo::release_grant_record() {
  // @@protoc_insertion_point(field_release:proto.TrialAvatarInfo.grant_record)
  
  ::proto::TrialAvatarGrantRecord* temp = grant_record_;
  grant_record_ = NULL;
  return temp;
}
inline void TrialAvatarInfo::set_allocated_grant_record(::proto::TrialAvatarGrantRecord* grant_record) {
  delete grant_record_;
  grant_record_ = grant_record;
  if (grant_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TrialAvatarInfo.grant_record)
}

// -------------------------------------------------------------------

// AvatarSkillInfo

// uint32 pass_cd_time = 1;
inline void AvatarSkillInfo::clear_pass_cd_time() {
  pass_cd_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarSkillInfo::pass_cd_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.pass_cd_time)
  return pass_cd_time_;
}
inline void AvatarSkillInfo::set_pass_cd_time(::google::protobuf::uint32 value) {
  
  pass_cd_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.pass_cd_time)
}

// repeated uint32 full_cd_time_list = 2;
inline int AvatarSkillInfo::full_cd_time_list_size() const {
  return full_cd_time_list_.size();
}
inline void AvatarSkillInfo::clear_full_cd_time_list() {
  full_cd_time_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarSkillInfo::full_cd_time_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.full_cd_time_list)
  return full_cd_time_list_.Get(index);
}
inline void AvatarSkillInfo::set_full_cd_time_list(int index, ::google::protobuf::uint32 value) {
  full_cd_time_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.full_cd_time_list)
}
inline void AvatarSkillInfo::add_full_cd_time_list(::google::protobuf::uint32 value) {
  full_cd_time_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarSkillInfo.full_cd_time_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarSkillInfo::full_cd_time_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarSkillInfo.full_cd_time_list)
  return full_cd_time_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarSkillInfo::mutable_full_cd_time_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarSkillInfo.full_cd_time_list)
  return &full_cd_time_list_;
}

// uint32 max_charge_count = 3;
inline void AvatarSkillInfo::clear_max_charge_count() {
  max_charge_count_ = 0u;
}
inline ::google::protobuf::uint32 AvatarSkillInfo::max_charge_count() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.max_charge_count)
  return max_charge_count_;
}
inline void AvatarSkillInfo::set_max_charge_count(::google::protobuf::uint32 value) {
  
  max_charge_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.max_charge_count)
}

// -------------------------------------------------------------------

// AvatarFetterInfo

// uint32 exp_number = 1;
inline void AvatarFetterInfo::clear_exp_number() {
  exp_number_ = 0u;
}
inline ::google::protobuf::uint32 AvatarFetterInfo::exp_number() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.exp_number)
  return exp_number_;
}
inline void AvatarFetterInfo::set_exp_number(::google::protobuf::uint32 value) {
  
  exp_number_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.exp_number)
}

// uint32 exp_level = 2;
inline void AvatarFetterInfo::clear_exp_level() {
  exp_level_ = 0u;
}
inline ::google::protobuf::uint32 AvatarFetterInfo::exp_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.exp_level)
  return exp_level_;
}
inline void AvatarFetterInfo::set_exp_level(::google::protobuf::uint32 value) {
  
  exp_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.exp_level)
}

// repeated uint32 open_id_list = 3;
inline int AvatarFetterInfo::open_id_list_size() const {
  return open_id_list_.size();
}
inline void AvatarFetterInfo::clear_open_id_list() {
  open_id_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarFetterInfo::open_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.open_id_list)
  return open_id_list_.Get(index);
}
inline void AvatarFetterInfo::set_open_id_list(int index, ::google::protobuf::uint32 value) {
  open_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.open_id_list)
}
inline void AvatarFetterInfo::add_open_id_list(::google::protobuf::uint32 value) {
  open_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarFetterInfo.open_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarFetterInfo::open_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarFetterInfo.open_id_list)
  return open_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarFetterInfo::mutable_open_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarFetterInfo.open_id_list)
  return &open_id_list_;
}

// -------------------------------------------------------------------

// AvatarExpeditionInfo

// .proto.AvatarExpeditionState state = 1;
inline void AvatarExpeditionInfo::clear_state() {
  state_ = 0;
}
inline ::proto::AvatarExpeditionState AvatarExpeditionInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.state)
  return static_cast< ::proto::AvatarExpeditionState >(state_);
}
inline void AvatarExpeditionInfo::set_state(::proto::AvatarExpeditionState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.state)
}

// uint32 exp_id = 2;
inline void AvatarExpeditionInfo::clear_exp_id() {
  exp_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionInfo::exp_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.exp_id)
  return exp_id_;
}
inline void AvatarExpeditionInfo::set_exp_id(::google::protobuf::uint32 value) {
  
  exp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.exp_id)
}

// uint32 hour_time = 3;
inline void AvatarExpeditionInfo::clear_hour_time() {
  hour_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionInfo::hour_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.hour_time)
  return hour_time_;
}
inline void AvatarExpeditionInfo::set_hour_time(::google::protobuf::uint32 value) {
  
  hour_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.hour_time)
}

// uint32 start_time = 4;
inline void AvatarExpeditionInfo::clear_start_time() {
  start_time_ = 0u;
}
inline ::google::protobuf::uint32 AvatarExpeditionInfo::start_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.start_time)
  return start_time_;
}
inline void AvatarExpeditionInfo::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.start_time)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AvatarInfo

// uint32 avatar_id = 1;
inline void AvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.avatar_id)
  return avatar_id_;
}
inline void AvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.avatar_id)
}

// uint64 guid = 2;
inline void AvatarInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.guid)
  return guid_;
}
inline void AvatarInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.guid)
}

// map<uint32, .proto.PropValue> prop_map = 3;
inline int AvatarInfo::prop_map_size() const {
  return prop_map_.size();
}
inline void AvatarInfo::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
AvatarInfo::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
AvatarInfo::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.prop_map)
  return prop_map_.MutableMap();
}

// uint32 life_state = 4;
inline void AvatarInfo::clear_life_state() {
  life_state_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::life_state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.life_state)
  return life_state_;
}
inline void AvatarInfo::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.life_state)
}

// repeated uint64 equip_guid_list = 5;
inline int AvatarInfo::equip_guid_list_size() const {
  return equip_guid_list_.size();
}
inline void AvatarInfo::clear_equip_guid_list() {
  equip_guid_list_.Clear();
}
inline ::google::protobuf::uint64 AvatarInfo::equip_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.equip_guid_list)
  return equip_guid_list_.Get(index);
}
inline void AvatarInfo::set_equip_guid_list(int index, ::google::protobuf::uint64 value) {
  equip_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.equip_guid_list)
}
inline void AvatarInfo::add_equip_guid_list(::google::protobuf::uint64 value) {
  equip_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.equip_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarInfo::equip_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.equip_guid_list)
  return equip_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarInfo::mutable_equip_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.equip_guid_list)
  return &equip_guid_list_;
}

// repeated uint32 talent_id_list = 6;
inline int AvatarInfo::talent_id_list_size() const {
  return talent_id_list_.size();
}
inline void AvatarInfo::clear_talent_id_list() {
  talent_id_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarInfo::talent_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.talent_id_list)
  return talent_id_list_.Get(index);
}
inline void AvatarInfo::set_talent_id_list(int index, ::google::protobuf::uint32 value) {
  talent_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.talent_id_list)
}
inline void AvatarInfo::add_talent_id_list(::google::protobuf::uint32 value) {
  talent_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.talent_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarInfo::talent_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.talent_id_list)
  return talent_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarInfo::mutable_talent_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.talent_id_list)
  return &talent_id_list_;
}

// map<uint32, float> fight_prop_map = 7;
inline int AvatarInfo::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
inline void AvatarInfo::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarInfo::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.fight_prop_map)
  return fight_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarInfo::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// .proto.TrialAvatarInfo trial_avatar_info = 9;
inline bool AvatarInfo::has_trial_avatar_info() const {
  return this != internal_default_instance() && trial_avatar_info_ != NULL;
}
inline void AvatarInfo::clear_trial_avatar_info() {
  if (GetArenaNoVirtual() == NULL && trial_avatar_info_ != NULL) delete trial_avatar_info_;
  trial_avatar_info_ = NULL;
}
inline const ::proto::TrialAvatarInfo& AvatarInfo::trial_avatar_info() const {
  const ::proto::TrialAvatarInfo* p = trial_avatar_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.trial_avatar_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TrialAvatarInfo*>(
      &::proto::_TrialAvatarInfo_default_instance_);
}
inline ::proto::TrialAvatarInfo* AvatarInfo::mutable_trial_avatar_info() {
  
  if (trial_avatar_info_ == NULL) {
    trial_avatar_info_ = new ::proto::TrialAvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarInfo.trial_avatar_info)
  return trial_avatar_info_;
}
inline ::proto::TrialAvatarInfo* AvatarInfo::release_trial_avatar_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarInfo.trial_avatar_info)
  
  ::proto::TrialAvatarInfo* temp = trial_avatar_info_;
  trial_avatar_info_ = NULL;
  return temp;
}
inline void AvatarInfo::set_allocated_trial_avatar_info(::proto::TrialAvatarInfo* trial_avatar_info) {
  delete trial_avatar_info_;
  trial_avatar_info_ = trial_avatar_info;
  if (trial_avatar_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarInfo.trial_avatar_info)
}

// map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
inline int AvatarInfo::skill_map_size() const {
  return skill_map_.size();
}
inline void AvatarInfo::clear_skill_map() {
  skill_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >&
AvatarInfo::skill_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.skill_map)
  return skill_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >*
AvatarInfo::mutable_skill_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.skill_map)
  return skill_map_.MutableMap();
}

// uint32 skill_depot_id = 11;
inline void AvatarInfo::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.skill_depot_id)
  return skill_depot_id_;
}
inline void AvatarInfo::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.skill_depot_id)
}

// .proto.AvatarFetterInfo fetter_info = 12;
inline bool AvatarInfo::has_fetter_info() const {
  return this != internal_default_instance() && fetter_info_ != NULL;
}
inline void AvatarInfo::clear_fetter_info() {
  if (GetArenaNoVirtual() == NULL && fetter_info_ != NULL) delete fetter_info_;
  fetter_info_ = NULL;
}
inline const ::proto::AvatarFetterInfo& AvatarInfo::fetter_info() const {
  const ::proto::AvatarFetterInfo* p = fetter_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.fetter_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarFetterInfo*>(
      &::proto::_AvatarFetterInfo_default_instance_);
}
inline ::proto::AvatarFetterInfo* AvatarInfo::mutable_fetter_info() {
  
  if (fetter_info_ == NULL) {
    fetter_info_ = new ::proto::AvatarFetterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarInfo.fetter_info)
  return fetter_info_;
}
inline ::proto::AvatarFetterInfo* AvatarInfo::release_fetter_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarInfo.fetter_info)
  
  ::proto::AvatarFetterInfo* temp = fetter_info_;
  fetter_info_ = NULL;
  return temp;
}
inline void AvatarInfo::set_allocated_fetter_info(::proto::AvatarFetterInfo* fetter_info) {
  delete fetter_info_;
  fetter_info_ = fetter_info;
  if (fetter_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarInfo.fetter_info)
}

// uint32 core_proud_skill_level = 13;
inline void AvatarInfo::clear_core_proud_skill_level() {
  core_proud_skill_level_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::core_proud_skill_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.core_proud_skill_level)
  return core_proud_skill_level_;
}
inline void AvatarInfo::set_core_proud_skill_level(::google::protobuf::uint32 value) {
  
  core_proud_skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.core_proud_skill_level)
}

// repeated uint32 inherent_proud_skill_list = 14;
inline int AvatarInfo::inherent_proud_skill_list_size() const {
  return inherent_proud_skill_list_.size();
}
inline void AvatarInfo::clear_inherent_proud_skill_list() {
  inherent_proud_skill_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarInfo::inherent_proud_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_.Get(index);
}
inline void AvatarInfo::set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.inherent_proud_skill_list)
}
inline void AvatarInfo::add_inherent_proud_skill_list(::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.inherent_proud_skill_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarInfo::inherent_proud_skill_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarInfo::mutable_inherent_proud_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.inherent_proud_skill_list)
  return &inherent_proud_skill_list_;
}

// map<uint32, uint32> skill_level_map = 15;
inline int AvatarInfo::skill_level_map_size() const {
  return skill_level_map_.size();
}
inline void AvatarInfo::clear_skill_level_map() {
  skill_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AvatarInfo::skill_level_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.skill_level_map)
  return skill_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AvatarInfo::mutable_skill_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.skill_level_map)
  return skill_level_map_.MutableMap();
}

// .proto.AvatarExpeditionState expedition_state = 16;
inline void AvatarInfo::clear_expedition_state() {
  expedition_state_ = 0;
}
inline ::proto::AvatarExpeditionState AvatarInfo::expedition_state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.expedition_state)
  return static_cast< ::proto::AvatarExpeditionState >(expedition_state_);
}
inline void AvatarInfo::set_expedition_state(::proto::AvatarExpeditionState value) {
  
  expedition_state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.expedition_state)
}

// map<uint32, uint32> proud_skill_extra_level_map = 17;
inline int AvatarInfo::proud_skill_extra_level_map_size() const {
  return proud_skill_extra_level_map_.size();
}
inline void AvatarInfo::clear_proud_skill_extra_level_map() {
  proud_skill_extra_level_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AvatarInfo::proud_skill_extra_level_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AvatarInfo::mutable_proud_skill_extra_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.MutableMap();
}

// bool is_focus = 18;
inline void AvatarInfo::clear_is_focus() {
  is_focus_ = false;
}
inline bool AvatarInfo::is_focus() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.is_focus)
  return is_focus_;
}
inline void AvatarInfo::set_is_focus(bool value) {
  
  is_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.is_focus)
}

// uint32 avatar_type = 19;
inline void AvatarInfo::clear_avatar_type() {
  avatar_type_ = 0u;
}
inline ::google::protobuf::uint32 AvatarInfo::avatar_type() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.avatar_type)
  return avatar_type_;
}
inline void AvatarInfo::set_avatar_type(::google::protobuf::uint32 value) {
  
  avatar_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.avatar_type)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Quest

// uint32 quest_id = 1;
inline void Quest::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 Quest::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.quest_id)
  return quest_id_;
}
inline void Quest::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.quest_id)
}

// uint32 state = 2;
inline void Quest::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 Quest::state() const {
  // @@protoc_insertion_point(field_get:proto.Quest.state)
  return state_;
}
inline void Quest::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.state)
}

// uint32 start_time = 4;
inline void Quest::clear_start_time() {
  start_time_ = 0u;
}
inline ::google::protobuf::uint32 Quest::start_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.start_time)
  return start_time_;
}
inline void Quest::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.start_time)
}

// bool is_random = 5;
inline void Quest::clear_is_random() {
  is_random_ = false;
}
inline bool Quest::is_random() const {
  // @@protoc_insertion_point(field_get:proto.Quest.is_random)
  return is_random_;
}
inline void Quest::set_is_random(bool value) {
  
  is_random_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.is_random)
}

// uint32 parent_quest_id = 6;
inline void Quest::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
inline ::google::protobuf::uint32 Quest::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.parent_quest_id)
  return parent_quest_id_;
}
inline void Quest::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.parent_quest_id)
}

// uint32 quest_config_id = 7;
inline void Quest::clear_quest_config_id() {
  quest_config_id_ = 0u;
}
inline ::google::protobuf::uint32 Quest::quest_config_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.quest_config_id)
  return quest_config_id_;
}
inline void Quest::set_quest_config_id(::google::protobuf::uint32 value) {
  
  quest_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.quest_config_id)
}

// uint32 start_game_time = 8;
inline void Quest::clear_start_game_time() {
  start_game_time_ = 0u;
}
inline ::google::protobuf::uint32 Quest::start_game_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.start_game_time)
  return start_game_time_;
}
inline void Quest::set_start_game_time(::google::protobuf::uint32 value) {
  
  start_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.start_game_time)
}

// uint32 accept_time = 9;
inline void Quest::clear_accept_time() {
  accept_time_ = 0u;
}
inline ::google::protobuf::uint32 Quest::accept_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.accept_time)
  return accept_time_;
}
inline void Quest::set_accept_time(::google::protobuf::uint32 value) {
  
  accept_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.accept_time)
}

// repeated uint32 lacked_npc_list = 10;
inline int Quest::lacked_npc_list_size() const {
  return lacked_npc_list_.size();
}
inline void Quest::clear_lacked_npc_list() {
  lacked_npc_list_.Clear();
}
inline ::google::protobuf::uint32 Quest::lacked_npc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.lacked_npc_list)
  return lacked_npc_list_.Get(index);
}
inline void Quest::set_lacked_npc_list(int index, ::google::protobuf::uint32 value) {
  lacked_npc_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.lacked_npc_list)
}
inline void Quest::add_lacked_npc_list(::google::protobuf::uint32 value) {
  lacked_npc_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.lacked_npc_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::lacked_npc_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.lacked_npc_list)
  return lacked_npc_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_lacked_npc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.lacked_npc_list)
  return &lacked_npc_list_;
}

// repeated uint32 finish_progress_list = 11;
inline int Quest::finish_progress_list_size() const {
  return finish_progress_list_.size();
}
inline void Quest::clear_finish_progress_list() {
  finish_progress_list_.Clear();
}
inline ::google::protobuf::uint32 Quest::finish_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.finish_progress_list)
  return finish_progress_list_.Get(index);
}
inline void Quest::set_finish_progress_list(int index, ::google::protobuf::uint32 value) {
  finish_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.finish_progress_list)
}
inline void Quest::add_finish_progress_list(::google::protobuf::uint32 value) {
  finish_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.finish_progress_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::finish_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.finish_progress_list)
  return finish_progress_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_finish_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.finish_progress_list)
  return &finish_progress_list_;
}

// repeated uint32 fail_progress_list = 12;
inline int Quest::fail_progress_list_size() const {
  return fail_progress_list_.size();
}
inline void Quest::clear_fail_progress_list() {
  fail_progress_list_.Clear();
}
inline ::google::protobuf::uint32 Quest::fail_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.fail_progress_list)
  return fail_progress_list_.Get(index);
}
inline void Quest::set_fail_progress_list(int index, ::google::protobuf::uint32 value) {
  fail_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.fail_progress_list)
}
inline void Quest::add_fail_progress_list(::google::protobuf::uint32 value) {
  fail_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.fail_progress_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::fail_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.fail_progress_list)
  return fail_progress_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_fail_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.fail_progress_list)
  return &fail_progress_list_;
}

// map<uint32, uint32> lacked_npc_map = 13;
inline int Quest::lacked_npc_map_size() const {
  return lacked_npc_map_.size();
}
inline void Quest::clear_lacked_npc_map() {
  lacked_npc_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
Quest::lacked_npc_map() const {
  // @@protoc_insertion_point(field_map:proto.Quest.lacked_npc_map)
  return lacked_npc_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
Quest::mutable_lacked_npc_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.Quest.lacked_npc_map)
  return lacked_npc_map_.MutableMap();
}

// -------------------------------------------------------------------

// NpcPositionInfo

// uint32 npc_id = 1;
inline void NpcPositionInfo::clear_npc_id() {
  npc_id_ = 0u;
}
inline ::google::protobuf::uint32 NpcPositionInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.NpcPositionInfo.npc_id)
  return npc_id_;
}
inline void NpcPositionInfo::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.NpcPositionInfo.npc_id)
}

// .proto.Vector pos = 2;
inline bool NpcPositionInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void NpcPositionInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& NpcPositionInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.NpcPositionInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* NpcPositionInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.NpcPositionInfo.pos)
  return pos_;
}
inline ::proto::Vector* NpcPositionInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.NpcPositionInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void NpcPositionInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.NpcPositionInfo.pos)
}

// -------------------------------------------------------------------

// MailTextContent

// string title = 1;
inline void MailTextContent::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailTextContent::title() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.title)
  return title_.GetNoArena();
}
inline void MailTextContent::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.title)
}
#if LANG_CXX11
inline void MailTextContent::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.title)
}
#endif
inline void MailTextContent::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.title)
}
inline void MailTextContent::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.title)
}
inline ::std::string* MailTextContent::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailTextContent::release_title() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailTextContent::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.title)
}

// string content = 2;
inline void MailTextContent::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailTextContent::content() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.content)
  return content_.GetNoArena();
}
inline void MailTextContent::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.content)
}
#if LANG_CXX11
inline void MailTextContent::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.content)
}
#endif
inline void MailTextContent::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.content)
}
inline void MailTextContent::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.content)
}
inline ::std::string* MailTextContent::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailTextContent::release_content() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailTextContent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.content)
}

// string sender = 3;
inline void MailTextContent::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailTextContent::sender() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.sender)
  return sender_.GetNoArena();
}
inline void MailTextContent::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.sender)
}
#if LANG_CXX11
inline void MailTextContent::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.sender)
}
#endif
inline void MailTextContent::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.sender)
}
inline void MailTextContent::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.sender)
}
inline ::std::string* MailTextContent::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailTextContent::release_sender() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailTextContent::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.sender)
}

// -------------------------------------------------------------------

// MailItem

// .proto.EquipParam equip_param = 1;
inline bool MailItem::has_equip_param() const {
  return this != internal_default_instance() && equip_param_ != NULL;
}
inline void MailItem::clear_equip_param() {
  if (GetArenaNoVirtual() == NULL && equip_param_ != NULL) delete equip_param_;
  equip_param_ = NULL;
}
inline const ::proto::EquipParam& MailItem::equip_param() const {
  const ::proto::EquipParam* p = equip_param_;
  // @@protoc_insertion_point(field_get:proto.MailItem.equip_param)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EquipParam*>(
      &::proto::_EquipParam_default_instance_);
}
inline ::proto::EquipParam* MailItem::mutable_equip_param() {
  
  if (equip_param_ == NULL) {
    equip_param_ = new ::proto::EquipParam;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailItem.equip_param)
  return equip_param_;
}
inline ::proto::EquipParam* MailItem::release_equip_param() {
  // @@protoc_insertion_point(field_release:proto.MailItem.equip_param)
  
  ::proto::EquipParam* temp = equip_param_;
  equip_param_ = NULL;
  return temp;
}
inline void MailItem::set_allocated_equip_param(::proto::EquipParam* equip_param) {
  delete equip_param_;
  equip_param_ = equip_param;
  if (equip_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailItem.equip_param)
}

// .proto.MaterialDeleteInfo delete_info = 2;
inline bool MailItem::has_delete_info() const {
  return this != internal_default_instance() && delete_info_ != NULL;
}
inline void MailItem::clear_delete_info() {
  if (GetArenaNoVirtual() == NULL && delete_info_ != NULL) delete delete_info_;
  delete_info_ = NULL;
}
inline const ::proto::MaterialDeleteInfo& MailItem::delete_info() const {
  const ::proto::MaterialDeleteInfo* p = delete_info_;
  // @@protoc_insertion_point(field_get:proto.MailItem.delete_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MaterialDeleteInfo*>(
      &::proto::_MaterialDeleteInfo_default_instance_);
}
inline ::proto::MaterialDeleteInfo* MailItem::mutable_delete_info() {
  
  if (delete_info_ == NULL) {
    delete_info_ = new ::proto::MaterialDeleteInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailItem.delete_info)
  return delete_info_;
}
inline ::proto::MaterialDeleteInfo* MailItem::release_delete_info() {
  // @@protoc_insertion_point(field_release:proto.MailItem.delete_info)
  
  ::proto::MaterialDeleteInfo* temp = delete_info_;
  delete_info_ = NULL;
  return temp;
}
inline void MailItem::set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info) {
  delete delete_info_;
  delete_info_ = delete_info;
  if (delete_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailItem.delete_info)
}

// -------------------------------------------------------------------

// MailData

// uint32 mail_id = 1;
inline void MailData::clear_mail_id() {
  mail_id_ = 0u;
}
inline ::google::protobuf::uint32 MailData::mail_id() const {
  // @@protoc_insertion_point(field_get:proto.MailData.mail_id)
  return mail_id_;
}
inline void MailData::set_mail_id(::google::protobuf::uint32 value) {
  
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.mail_id)
}

// .proto.MailTextContent mail_text_content = 4;
inline bool MailData::has_mail_text_content() const {
  return this != internal_default_instance() && mail_text_content_ != NULL;
}
inline void MailData::clear_mail_text_content() {
  if (GetArenaNoVirtual() == NULL && mail_text_content_ != NULL) delete mail_text_content_;
  mail_text_content_ = NULL;
}
inline const ::proto::MailTextContent& MailData::mail_text_content() const {
  const ::proto::MailTextContent* p = mail_text_content_;
  // @@protoc_insertion_point(field_get:proto.MailData.mail_text_content)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MailTextContent*>(
      &::proto::_MailTextContent_default_instance_);
}
inline ::proto::MailTextContent* MailData::mutable_mail_text_content() {
  
  if (mail_text_content_ == NULL) {
    mail_text_content_ = new ::proto::MailTextContent;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailData.mail_text_content)
  return mail_text_content_;
}
inline ::proto::MailTextContent* MailData::release_mail_text_content() {
  // @@protoc_insertion_point(field_release:proto.MailData.mail_text_content)
  
  ::proto::MailTextContent* temp = mail_text_content_;
  mail_text_content_ = NULL;
  return temp;
}
inline void MailData::set_allocated_mail_text_content(::proto::MailTextContent* mail_text_content) {
  delete mail_text_content_;
  mail_text_content_ = mail_text_content;
  if (mail_text_content) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailData.mail_text_content)
}

// repeated .proto.MailItem item_list = 7;
inline int MailData::item_list_size() const {
  return item_list_.size();
}
inline void MailData::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::MailItem& MailData::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailData.item_list)
  return item_list_.Get(index);
}
inline ::proto::MailItem* MailData::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailData.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::MailItem* MailData::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.MailData.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MailItem >*
MailData::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailData.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MailItem >&
MailData::item_list() const {
  // @@protoc_insertion_point(field_list:proto.MailData.item_list)
  return item_list_;
}

// uint32 send_time = 8;
inline void MailData::clear_send_time() {
  send_time_ = 0u;
}
inline ::google::protobuf::uint32 MailData::send_time() const {
  // @@protoc_insertion_point(field_get:proto.MailData.send_time)
  return send_time_;
}
inline void MailData::set_send_time(::google::protobuf::uint32 value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.send_time)
}

// uint32 expire_time = 9;
inline void MailData::clear_expire_time() {
  expire_time_ = 0u;
}
inline ::google::protobuf::uint32 MailData::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.MailData.expire_time)
  return expire_time_;
}
inline void MailData::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.expire_time)
}

// uint32 importance = 10;
inline void MailData::clear_importance() {
  importance_ = 0u;
}
inline ::google::protobuf::uint32 MailData::importance() const {
  // @@protoc_insertion_point(field_get:proto.MailData.importance)
  return importance_;
}
inline void MailData::set_importance(::google::protobuf::uint32 value) {
  
  importance_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.importance)
}

// bool is_read = 11;
inline void MailData::clear_is_read() {
  is_read_ = false;
}
inline bool MailData::is_read() const {
  // @@protoc_insertion_point(field_get:proto.MailData.is_read)
  return is_read_;
}
inline void MailData::set_is_read(bool value) {
  
  is_read_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.is_read)
}

// bool is_attachment_got = 12;
inline void MailData::clear_is_attachment_got() {
  is_attachment_got_ = false;
}
inline bool MailData::is_attachment_got() const {
  // @@protoc_insertion_point(field_get:proto.MailData.is_attachment_got)
  return is_attachment_got_;
}
inline void MailData::set_is_attachment_got(bool value) {
  
  is_attachment_got_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.is_attachment_got)
}

// uint32 config_id = 13;
inline void MailData::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 MailData::config_id() const {
  // @@protoc_insertion_point(field_get:proto.MailData.config_id)
  return config_id_;
}
inline void MailData::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.config_id)
}

// repeated string argument_list = 14;
inline int MailData::argument_list_size() const {
  return argument_list_.size();
}
inline void MailData::clear_argument_list() {
  argument_list_.Clear();
}
inline const ::std::string& MailData::argument_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailData.argument_list)
  return argument_list_.Get(index);
}
inline ::std::string* MailData::mutable_argument_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailData.argument_list)
  return argument_list_.Mutable(index);
}
inline void MailData::set_argument_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MailData.argument_list)
  argument_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MailData::set_argument_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MailData.argument_list)
  argument_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MailData::set_argument_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MailData.argument_list)
}
inline void MailData::set_argument_list(int index, const char* value, size_t size) {
  argument_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MailData.argument_list)
}
inline ::std::string* MailData::add_argument_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.MailData.argument_list)
  return argument_list_.Add();
}
inline void MailData::add_argument_list(const ::std::string& value) {
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MailData.argument_list)
}
#if LANG_CXX11
inline void MailData::add_argument_list(::std::string&& value) {
  argument_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MailData.argument_list)
}
#endif
inline void MailData::add_argument_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MailData.argument_list)
}
inline void MailData::add_argument_list(const char* value, size_t size) {
  argument_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MailData.argument_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailData::argument_list() const {
  // @@protoc_insertion_point(field_list:proto.MailData.argument_list)
  return argument_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MailData::mutable_argument_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailData.argument_list)
  return &argument_list_;
}

// -------------------------------------------------------------------

// OnlinePlayerInfo

// uint32 uid = 1;
inline void OnlinePlayerInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.uid)
  return uid_;
}
inline void OnlinePlayerInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.uid)
}

// string nickname = 2;
inline void OnlinePlayerInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnlinePlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.nickname)
  return nickname_.GetNoArena();
}
inline void OnlinePlayerInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.nickname)
}
#if LANG_CXX11
inline void OnlinePlayerInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OnlinePlayerInfo.nickname)
}
#endif
inline void OnlinePlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OnlinePlayerInfo.nickname)
}
inline void OnlinePlayerInfo::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OnlinePlayerInfo.nickname)
}
inline ::std::string* OnlinePlayerInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.OnlinePlayerInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnlinePlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.OnlinePlayerInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlinePlayerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.OnlinePlayerInfo.nickname)
}

// uint32 player_level = 3;
inline void OnlinePlayerInfo::clear_player_level() {
  player_level_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::player_level() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.player_level)
  return player_level_;
}
inline void OnlinePlayerInfo::set_player_level(::google::protobuf::uint32 value) {
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.player_level)
}

// uint32 avatar_id = 4;
inline void OnlinePlayerInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.avatar_id)
  return avatar_id_;
}
inline void OnlinePlayerInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.avatar_id)
}

// .proto.MpSettingType mp_setting_type = 5;
inline void OnlinePlayerInfo::clear_mp_setting_type() {
  mp_setting_type_ = 0;
}
inline ::proto::MpSettingType OnlinePlayerInfo::mp_setting_type() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.mp_setting_type)
  return static_cast< ::proto::MpSettingType >(mp_setting_type_);
}
inline void OnlinePlayerInfo::set_mp_setting_type(::proto::MpSettingType value) {
  
  mp_setting_type_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.mp_setting_type)
}

// uint32 cur_player_num_in_world = 6;
inline void OnlinePlayerInfo::clear_cur_player_num_in_world() {
  cur_player_num_in_world_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::cur_player_num_in_world() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.cur_player_num_in_world)
  return cur_player_num_in_world_;
}
inline void OnlinePlayerInfo::set_cur_player_num_in_world(::google::protobuf::uint32 value) {
  
  cur_player_num_in_world_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.cur_player_num_in_world)
}

// uint32 world_level = 7;
inline void OnlinePlayerInfo::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerInfo::world_level() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.world_level)
  return world_level_;
}
inline void OnlinePlayerInfo::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.world_level)
}

// -------------------------------------------------------------------

// Birthday

// uint32 month = 1;
inline void Birthday::clear_month() {
  month_ = 0u;
}
inline ::google::protobuf::uint32 Birthday::month() const {
  // @@protoc_insertion_point(field_get:proto.Birthday.month)
  return month_;
}
inline void Birthday::set_month(::google::protobuf::uint32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:proto.Birthday.month)
}

// uint32 day = 2;
inline void Birthday::clear_day() {
  day_ = 0u;
}
inline ::google::protobuf::uint32 Birthday::day() const {
  // @@protoc_insertion_point(field_get:proto.Birthday.day)
  return day_;
}
inline void Birthday::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:proto.Birthday.day)
}

// -------------------------------------------------------------------

// MapMarkPoint

// uint32 scene_id = 1;
inline void MapMarkPoint::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 MapMarkPoint::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.scene_id)
  return scene_id_;
}
inline void MapMarkPoint::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.scene_id)
}

// string name = 2;
inline void MapMarkPoint::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MapMarkPoint::name() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.name)
  return name_.GetNoArena();
}
inline void MapMarkPoint::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.name)
}
#if LANG_CXX11
inline void MapMarkPoint::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MapMarkPoint.name)
}
#endif
inline void MapMarkPoint::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MapMarkPoint.name)
}
inline void MapMarkPoint::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MapMarkPoint.name)
}
inline ::std::string* MapMarkPoint::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.MapMarkPoint.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MapMarkPoint::release_name() {
  // @@protoc_insertion_point(field_release:proto.MapMarkPoint.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MapMarkPoint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.MapMarkPoint.name)
}

// .proto.Vector pos = 3;
inline bool MapMarkPoint::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void MapMarkPoint::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& MapMarkPoint::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MapMarkPoint::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MapMarkPoint.pos)
  return pos_;
}
inline ::proto::Vector* MapMarkPoint::release_pos() {
  // @@protoc_insertion_point(field_release:proto.MapMarkPoint.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void MapMarkPoint::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MapMarkPoint.pos)
}

// .proto.MapMarkPointType point_type = 4;
inline void MapMarkPoint::clear_point_type() {
  point_type_ = 0;
}
inline ::proto::MapMarkPointType MapMarkPoint::point_type() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.point_type)
  return static_cast< ::proto::MapMarkPointType >(point_type_);
}
inline void MapMarkPoint::set_point_type(::proto::MapMarkPointType value) {
  
  point_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.point_type)
}

// uint32 monster_id = 5;
inline void MapMarkPoint::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 MapMarkPoint::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.monster_id)
  return monster_id_;
}
inline void MapMarkPoint::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.monster_id)
}

// .proto.MapMarkFromType from_type = 6;
inline void MapMarkPoint::clear_from_type() {
  from_type_ = 0;
}
inline ::proto::MapMarkFromType MapMarkPoint::from_type() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.from_type)
  return static_cast< ::proto::MapMarkFromType >(from_type_);
}
inline void MapMarkPoint::set_from_type(::proto::MapMarkFromType value) {
  
  from_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.from_type)
}

// uint32 quest_id = 7;
inline void MapMarkPoint::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 MapMarkPoint::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.quest_id)
  return quest_id_;
}
inline void MapMarkPoint::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.quest_id)
}

// -------------------------------------------------------------------

// MassiveWaterInfo

// int64 id = 1;
inline void MassiveWaterInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MassiveWaterInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveWaterInfo.id)
  return id_;
}
inline void MassiveWaterInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveWaterInfo.id)
}

// -------------------------------------------------------------------

// MassiveGrassInfo

// uint32 id = 1;
inline void MassiveGrassInfo::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MassiveGrassInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.id)
  return id_;
}
inline void MassiveGrassInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveGrassInfo.id)
}

// .proto.Vector center = 2;
inline bool MassiveGrassInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void MassiveGrassInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& MassiveGrassInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveGrassInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveGrassInfo.center)
  return center_;
}
inline ::proto::Vector* MassiveGrassInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.MassiveGrassInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void MassiveGrassInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveGrassInfo.center)
}

// .proto.Vector size = 3;
inline bool MassiveGrassInfo::has_size() const {
  return this != internal_default_instance() && size_ != NULL;
}
inline void MassiveGrassInfo::clear_size() {
  if (GetArenaNoVirtual() == NULL && size_ != NULL) delete size_;
  size_ = NULL;
}
inline const ::proto::Vector& MassiveGrassInfo::size() const {
  const ::proto::Vector* p = size_;
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.size)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveGrassInfo::mutable_size() {
  
  if (size_ == NULL) {
    size_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveGrassInfo.size)
  return size_;
}
inline ::proto::Vector* MassiveGrassInfo::release_size() {
  // @@protoc_insertion_point(field_release:proto.MassiveGrassInfo.size)
  
  ::proto::Vector* temp = size_;
  size_ = NULL;
  return temp;
}
inline void MassiveGrassInfo::set_allocated_size(::proto::Vector* size) {
  delete size_;
  size_ = size;
  if (size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveGrassInfo.size)
}

// -------------------------------------------------------------------

// MassiveBoxInfo

// int32 id = 1;
inline void MassiveBoxInfo::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 MassiveBoxInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.id)
  return id_;
}
inline void MassiveBoxInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveBoxInfo.id)
}

// uint32 configId = 2;
inline void MassiveBoxInfo::clear_configid() {
  configid_ = 0u;
}
inline ::google::protobuf::uint32 MassiveBoxInfo::configid() const {
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.configId)
  return configid_;
}
inline void MassiveBoxInfo::set_configid(::google::protobuf::uint32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveBoxInfo.configId)
}

// .proto.Vector center = 3;
inline bool MassiveBoxInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
inline void MassiveBoxInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.center)
  return center_;
}
inline ::proto::Vector* MassiveBoxInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.center)
}

// .proto.Vector extents = 4;
inline bool MassiveBoxInfo::has_extents() const {
  return this != internal_default_instance() && extents_ != NULL;
}
inline void MassiveBoxInfo::clear_extents() {
  if (GetArenaNoVirtual() == NULL && extents_ != NULL) delete extents_;
  extents_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::extents() const {
  const ::proto::Vector* p = extents_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.extents)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_extents() {
  
  if (extents_ == NULL) {
    extents_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.extents)
  return extents_;
}
inline ::proto::Vector* MassiveBoxInfo::release_extents() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.extents)
  
  ::proto::Vector* temp = extents_;
  extents_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_extents(::proto::Vector* extents) {
  delete extents_;
  extents_ = extents;
  if (extents) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.extents)
}

// .proto.Vector up = 5;
inline bool MassiveBoxInfo::has_up() const {
  return this != internal_default_instance() && up_ != NULL;
}
inline void MassiveBoxInfo::clear_up() {
  if (GetArenaNoVirtual() == NULL && up_ != NULL) delete up_;
  up_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::up() const {
  const ::proto::Vector* p = up_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.up)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_up() {
  
  if (up_ == NULL) {
    up_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.up)
  return up_;
}
inline ::proto::Vector* MassiveBoxInfo::release_up() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.up)
  
  ::proto::Vector* temp = up_;
  up_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_up(::proto::Vector* up) {
  delete up_;
  up_ = up;
  if (up) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.up)
}

// .proto.Vector forward = 6;
inline bool MassiveBoxInfo::has_forward() const {
  return this != internal_default_instance() && forward_ != NULL;
}
inline void MassiveBoxInfo::clear_forward() {
  if (GetArenaNoVirtual() == NULL && forward_ != NULL) delete forward_;
  forward_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::forward() const {
  const ::proto::Vector* p = forward_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_forward() {
  
  if (forward_ == NULL) {
    forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.forward)
  return forward_;
}
inline ::proto::Vector* MassiveBoxInfo::release_forward() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.forward)
  
  ::proto::Vector* temp = forward_;
  forward_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_forward(::proto::Vector* forward) {
  delete forward_;
  forward_ = forward;
  if (forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.forward)
}

// .proto.Vector right = 7;
inline bool MassiveBoxInfo::has_right() const {
  return this != internal_default_instance() && right_ != NULL;
}
inline void MassiveBoxInfo::clear_right() {
  if (GetArenaNoVirtual() == NULL && right_ != NULL) delete right_;
  right_ = NULL;
}
inline const ::proto::Vector& MassiveBoxInfo::right() const {
  const ::proto::Vector* p = right_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.right)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MassiveBoxInfo::mutable_right() {
  
  if (right_ == NULL) {
    right_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.right)
  return right_;
}
inline ::proto::Vector* MassiveBoxInfo::release_right() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.right)
  
  ::proto::Vector* temp = right_;
  right_ = NULL;
  return temp;
}
inline void MassiveBoxInfo::set_allocated_right(::proto::Vector* right) {
  delete right_;
  right_ = right;
  if (right) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.right)
}

// -------------------------------------------------------------------

// ClientMassiveEntity

// uint32 entity_type = 1;
inline void ClientMassiveEntity::clear_entity_type() {
  entity_type_ = 0u;
}
inline ::google::protobuf::uint32 ClientMassiveEntity::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.entity_type)
  return entity_type_;
}
inline void ClientMassiveEntity::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.entity_type)
}

// uint32 config_id = 2;
inline void ClientMassiveEntity::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientMassiveEntity::config_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.config_id)
  return config_id_;
}
inline void ClientMassiveEntity::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.config_id)
}

// int64 obj_id = 3;
inline void ClientMassiveEntity::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ClientMassiveEntity::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.obj_id)
  return obj_id_;
}
inline void ClientMassiveEntity::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.obj_id)
}

// .proto.MassiveWaterInfo water_info = 4;
inline bool ClientMassiveEntity::has_water_info() const {
  return entity_info_case() == kWaterInfo;
}
inline void ClientMassiveEntity::set_has_water_info() {
  _oneof_case_[0] = kWaterInfo;
}
inline void ClientMassiveEntity::clear_water_info() {
  if (has_water_info()) {
    delete entity_info_.water_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveWaterInfo& ClientMassiveEntity::water_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.water_info)
  return has_water_info()
      ? *entity_info_.water_info_
      : ::proto::MassiveWaterInfo::default_instance();
}
inline ::proto::MassiveWaterInfo* ClientMassiveEntity::mutable_water_info() {
  if (!has_water_info()) {
    clear_entity_info();
    set_has_water_info();
    entity_info_.water_info_ = new ::proto::MassiveWaterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.water_info)
  return entity_info_.water_info_;
}
inline ::proto::MassiveWaterInfo* ClientMassiveEntity::release_water_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.water_info)
  if (has_water_info()) {
    clear_has_entity_info();
    ::proto::MassiveWaterInfo* temp = entity_info_.water_info_;
    entity_info_.water_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ClientMassiveEntity::set_allocated_water_info(::proto::MassiveWaterInfo* water_info) {
  clear_entity_info();
  if (water_info) {
    set_has_water_info();
    entity_info_.water_info_ = water_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.water_info)
}

// .proto.MassiveGrassInfo grass_info = 5;
inline bool ClientMassiveEntity::has_grass_info() const {
  return entity_info_case() == kGrassInfo;
}
inline void ClientMassiveEntity::set_has_grass_info() {
  _oneof_case_[0] = kGrassInfo;
}
inline void ClientMassiveEntity::clear_grass_info() {
  if (has_grass_info()) {
    delete entity_info_.grass_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveGrassInfo& ClientMassiveEntity::grass_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.grass_info)
  return has_grass_info()
      ? *entity_info_.grass_info_
      : ::proto::MassiveGrassInfo::default_instance();
}
inline ::proto::MassiveGrassInfo* ClientMassiveEntity::mutable_grass_info() {
  if (!has_grass_info()) {
    clear_entity_info();
    set_has_grass_info();
    entity_info_.grass_info_ = new ::proto::MassiveGrassInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.grass_info)
  return entity_info_.grass_info_;
}
inline ::proto::MassiveGrassInfo* ClientMassiveEntity::release_grass_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.grass_info)
  if (has_grass_info()) {
    clear_has_entity_info();
    ::proto::MassiveGrassInfo* temp = entity_info_.grass_info_;
    entity_info_.grass_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ClientMassiveEntity::set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info) {
  clear_entity_info();
  if (grass_info) {
    set_has_grass_info();
    entity_info_.grass_info_ = grass_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.grass_info)
}

// .proto.MassiveBoxInfo box_info = 6;
inline bool ClientMassiveEntity::has_box_info() const {
  return entity_info_case() == kBoxInfo;
}
inline void ClientMassiveEntity::set_has_box_info() {
  _oneof_case_[0] = kBoxInfo;
}
inline void ClientMassiveEntity::clear_box_info() {
  if (has_box_info()) {
    delete entity_info_.box_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveBoxInfo& ClientMassiveEntity::box_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.box_info)
  return has_box_info()
      ? *entity_info_.box_info_
      : ::proto::MassiveBoxInfo::default_instance();
}
inline ::proto::MassiveBoxInfo* ClientMassiveEntity::mutable_box_info() {
  if (!has_box_info()) {
    clear_entity_info();
    set_has_box_info();
    entity_info_.box_info_ = new ::proto::MassiveBoxInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.box_info)
  return entity_info_.box_info_;
}
inline ::proto::MassiveBoxInfo* ClientMassiveEntity::release_box_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.box_info)
  if (has_box_info()) {
    clear_has_entity_info();
    ::proto::MassiveBoxInfo* temp = entity_info_.box_info_;
    entity_info_.box_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ClientMassiveEntity::set_allocated_box_info(::proto::MassiveBoxInfo* box_info) {
  clear_entity_info();
  if (box_info) {
    set_has_box_info();
    entity_info_.box_info_ = box_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.box_info)
}

inline bool ClientMassiveEntity::has_entity_info() const {
  return entity_info_case() != ENTITY_INFO_NOT_SET;
}
inline void ClientMassiveEntity::clear_has_entity_info() {
  _oneof_case_[0] = ENTITY_INFO_NOT_SET;
}
inline ClientMassiveEntity::EntityInfoCase ClientMassiveEntity::entity_info_case() const {
  return ClientMassiveEntity::EntityInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ServerMassiveEntity

// uint32 entity_type = 1;
inline void ServerMassiveEntity::clear_entity_type() {
  entity_type_ = 0u;
}
inline ::google::protobuf::uint32 ServerMassiveEntity::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.entity_type)
  return entity_type_;
}
inline void ServerMassiveEntity::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.entity_type)
}

// uint32 config_id = 2;
inline void ServerMassiveEntity::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerMassiveEntity::config_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.config_id)
  return config_id_;
}
inline void ServerMassiveEntity::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.config_id)
}

// uint32 runtime_id = 3;
inline void ServerMassiveEntity::clear_runtime_id() {
  runtime_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerMassiveEntity::runtime_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.runtime_id)
  return runtime_id_;
}
inline void ServerMassiveEntity::set_runtime_id(::google::protobuf::uint32 value) {
  
  runtime_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.runtime_id)
}

// uint32 authority_peer_id = 4;
inline void ServerMassiveEntity::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 ServerMassiveEntity::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.authority_peer_id)
  return authority_peer_id_;
}
inline void ServerMassiveEntity::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.authority_peer_id)
}

// int64 obj_id = 5;
inline void ServerMassiveEntity::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ServerMassiveEntity::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.obj_id)
  return obj_id_;
}
inline void ServerMassiveEntity::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.obj_id)
}

// .proto.MassiveWaterInfo water_info = 6;
inline bool ServerMassiveEntity::has_water_info() const {
  return entity_info_case() == kWaterInfo;
}
inline void ServerMassiveEntity::set_has_water_info() {
  _oneof_case_[0] = kWaterInfo;
}
inline void ServerMassiveEntity::clear_water_info() {
  if (has_water_info()) {
    delete entity_info_.water_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveWaterInfo& ServerMassiveEntity::water_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.water_info)
  return has_water_info()
      ? *entity_info_.water_info_
      : ::proto::MassiveWaterInfo::default_instance();
}
inline ::proto::MassiveWaterInfo* ServerMassiveEntity::mutable_water_info() {
  if (!has_water_info()) {
    clear_entity_info();
    set_has_water_info();
    entity_info_.water_info_ = new ::proto::MassiveWaterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.water_info)
  return entity_info_.water_info_;
}
inline ::proto::MassiveWaterInfo* ServerMassiveEntity::release_water_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.water_info)
  if (has_water_info()) {
    clear_has_entity_info();
    ::proto::MassiveWaterInfo* temp = entity_info_.water_info_;
    entity_info_.water_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerMassiveEntity::set_allocated_water_info(::proto::MassiveWaterInfo* water_info) {
  clear_entity_info();
  if (water_info) {
    set_has_water_info();
    entity_info_.water_info_ = water_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.water_info)
}

// .proto.MassiveGrassInfo grass_info = 7;
inline bool ServerMassiveEntity::has_grass_info() const {
  return entity_info_case() == kGrassInfo;
}
inline void ServerMassiveEntity::set_has_grass_info() {
  _oneof_case_[0] = kGrassInfo;
}
inline void ServerMassiveEntity::clear_grass_info() {
  if (has_grass_info()) {
    delete entity_info_.grass_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveGrassInfo& ServerMassiveEntity::grass_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.grass_info)
  return has_grass_info()
      ? *entity_info_.grass_info_
      : ::proto::MassiveGrassInfo::default_instance();
}
inline ::proto::MassiveGrassInfo* ServerMassiveEntity::mutable_grass_info() {
  if (!has_grass_info()) {
    clear_entity_info();
    set_has_grass_info();
    entity_info_.grass_info_ = new ::proto::MassiveGrassInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.grass_info)
  return entity_info_.grass_info_;
}
inline ::proto::MassiveGrassInfo* ServerMassiveEntity::release_grass_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.grass_info)
  if (has_grass_info()) {
    clear_has_entity_info();
    ::proto::MassiveGrassInfo* temp = entity_info_.grass_info_;
    entity_info_.grass_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerMassiveEntity::set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info) {
  clear_entity_info();
  if (grass_info) {
    set_has_grass_info();
    entity_info_.grass_info_ = grass_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.grass_info)
}

// .proto.MassiveBoxInfo box_info = 8;
inline bool ServerMassiveEntity::has_box_info() const {
  return entity_info_case() == kBoxInfo;
}
inline void ServerMassiveEntity::set_has_box_info() {
  _oneof_case_[0] = kBoxInfo;
}
inline void ServerMassiveEntity::clear_box_info() {
  if (has_box_info()) {
    delete entity_info_.box_info_;
    clear_has_entity_info();
  }
}
inline  const ::proto::MassiveBoxInfo& ServerMassiveEntity::box_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.box_info)
  return has_box_info()
      ? *entity_info_.box_info_
      : ::proto::MassiveBoxInfo::default_instance();
}
inline ::proto::MassiveBoxInfo* ServerMassiveEntity::mutable_box_info() {
  if (!has_box_info()) {
    clear_entity_info();
    set_has_box_info();
    entity_info_.box_info_ = new ::proto::MassiveBoxInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.box_info)
  return entity_info_.box_info_;
}
inline ::proto::MassiveBoxInfo* ServerMassiveEntity::release_box_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.box_info)
  if (has_box_info()) {
    clear_has_entity_info();
    ::proto::MassiveBoxInfo* temp = entity_info_.box_info_;
    entity_info_.box_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ServerMassiveEntity::set_allocated_box_info(::proto::MassiveBoxInfo* box_info) {
  clear_entity_info();
  if (box_info) {
    set_has_box_info();
    entity_info_.box_info_ = box_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.box_info)
}

inline bool ServerMassiveEntity::has_entity_info() const {
  return entity_info_case() != ENTITY_INFO_NOT_SET;
}
inline void ServerMassiveEntity::clear_has_entity_info() {
  _oneof_case_[0] = ENTITY_INFO_NOT_SET;
}
inline ServerMassiveEntity::EntityInfoCase ServerMassiveEntity::entity_info_case() const {
  return ServerMassiveEntity::EntityInfoCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MassiveEntityState

// uint32 entity_type = 1;
inline void MassiveEntityState::clear_entity_type() {
  entity_type_ = 0u;
}
inline ::google::protobuf::uint32 MassiveEntityState::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.entity_type)
  return entity_type_;
}
inline void MassiveEntityState::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.entity_type)
}

// int64 obj_id = 2;
inline void MassiveEntityState::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MassiveEntityState::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.obj_id)
  return obj_id_;
}
inline void MassiveEntityState::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.obj_id)
}

// uint32 element_state = 3;
inline void MassiveEntityState::clear_element_state() {
  element_state_ = 0u;
}
inline ::google::protobuf::uint32 MassiveEntityState::element_state() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.element_state)
  return element_state_;
}
inline void MassiveEntityState::set_element_state(::google::protobuf::uint32 value) {
  
  element_state_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.element_state)
}

// -------------------------------------------------------------------

// EntityClientData

// uint32 wind_change_scene_time = 1;
inline void EntityClientData::clear_wind_change_scene_time() {
  wind_change_scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityClientData::wind_change_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.wind_change_scene_time)
  return wind_change_scene_time_;
}
inline void EntityClientData::set_wind_change_scene_time(::google::protobuf::uint32 value) {
  
  wind_change_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.wind_change_scene_time)
}

// float windmill_sync_angle = 2;
inline void EntityClientData::clear_windmill_sync_angle() {
  windmill_sync_angle_ = 0;
}
inline float EntityClientData::windmill_sync_angle() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.windmill_sync_angle)
  return windmill_sync_angle_;
}
inline void EntityClientData::set_windmill_sync_angle(float value) {
  
  windmill_sync_angle_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.windmill_sync_angle)
}

// int32 wind_change_target_level = 3;
inline void EntityClientData::clear_wind_change_target_level() {
  wind_change_target_level_ = 0;
}
inline ::google::protobuf::int32 EntityClientData::wind_change_target_level() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.wind_change_target_level)
  return wind_change_target_level_;
}
inline void EntityClientData::set_wind_change_target_level(::google::protobuf::int32 value) {
  
  wind_change_target_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.wind_change_target_level)
}

// -------------------------------------------------------------------

// BlockInfo

// uint32 block_id = 1;
inline void BlockInfo::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 BlockInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.block_id)
  return block_id_;
}
inline void BlockInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.block_id)
}

// uint32 data_version = 2;
inline void BlockInfo::clear_data_version() {
  data_version_ = 0u;
}
inline ::google::protobuf::uint32 BlockInfo::data_version() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.data_version)
  return data_version_;
}
inline void BlockInfo::set_data_version(::google::protobuf::uint32 value) {
  
  data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.data_version)
}

// bytes bin_data = 3;
inline void BlockInfo::clear_bin_data() {
  bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo::bin_data() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.bin_data)
  return bin_data_.GetNoArena();
}
inline void BlockInfo::set_bin_data(const ::std::string& value) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.BlockInfo.bin_data)
}
#if LANG_CXX11
inline void BlockInfo::set_bin_data(::std::string&& value) {
  
  bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.BlockInfo.bin_data)
}
#endif
inline void BlockInfo::set_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.BlockInfo.bin_data)
}
inline void BlockInfo::set_bin_data(const void* value, size_t size) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.BlockInfo.bin_data)
}
inline ::std::string* BlockInfo::mutable_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.BlockInfo.bin_data)
  return bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo::release_bin_data() {
  // @@protoc_insertion_point(field_release:proto.BlockInfo.bin_data)
  
  return bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo::set_allocated_bin_data(::std::string* bin_data) {
  if (bin_data != NULL) {
    
  } else {
    
  }
  bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.BlockInfo.bin_data)
}

// bool is_dirty = 4;
inline void BlockInfo::clear_is_dirty() {
  is_dirty_ = false;
}
inline bool BlockInfo::is_dirty() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.is_dirty)
  return is_dirty_;
}
inline void BlockInfo::set_is_dirty(bool value) {
  
  is_dirty_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.is_dirty)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::TrialAvatarGrantRecord_GrantReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TrialAvatarGrantRecord_GrantReason>() {
  return ::proto::TrialAvatarGrantRecord_GrantReason_descriptor();
}
template <> struct is_proto_enum< ::proto::ENetReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ENetReason>() {
  return ::proto::ENetReason_descriptor();
}
template <> struct is_proto_enum< ::proto::AccountType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AccountType>() {
  return ::proto::AccountType_descriptor();
}
template <> struct is_proto_enum< ::proto::ServiceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ServiceType>() {
  return ::proto::ServiceType_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientType>() {
  return ::proto::ClientType_descriptor();
}
template <> struct is_proto_enum< ::proto::RegionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RegionType>() {
  return ::proto::RegionType_descriptor();
}
template <> struct is_proto_enum< ::proto::ActionReasonType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ActionReasonType>() {
  return ::proto::ActionReasonType_descriptor();
}
template <> struct is_proto_enum< ::proto::StoreType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::StoreType>() {
  return ::proto::StoreType_descriptor();
}
template <> struct is_proto_enum< ::proto::VirtualItem> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VirtualItem>() {
  return ::proto::VirtualItem_descriptor();
}
template <> struct is_proto_enum< ::proto::AbilityScalarType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AbilityScalarType>() {
  return ::proto::AbilityScalarType_descriptor();
}
template <> struct is_proto_enum< ::proto::MotionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MotionState>() {
  return ::proto::MotionState_descriptor();
}
template <> struct is_proto_enum< ::proto::ProtEntityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ProtEntityType>() {
  return ::proto::ProtEntityType_descriptor();
}
template <> struct is_proto_enum< ::proto::NpcTalkState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::NpcTalkState>() {
  return ::proto::NpcTalkState_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterBornType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterBornType>() {
  return ::proto::MonsterBornType_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetBornType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetBornType>() {
  return ::proto::GadgetBornType_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangHpReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangHpReason>() {
  return ::proto::ChangHpReason_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerDieType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerDieType>() {
  return ::proto::PlayerDieType_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerDieOption> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerDieOption>() {
  return ::proto::PlayerDieOption_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarExpeditionState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarExpeditionState>() {
  return ::proto::AvatarExpeditionState_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarType>() {
  return ::proto::AvatarType_descriptor();
}
template <> struct is_proto_enum< ::proto::EventTriggerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EventTriggerType>() {
  return ::proto::EventTriggerType_descriptor();
}
template <> struct is_proto_enum< ::proto::MpSettingType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MpSettingType>() {
  return ::proto::MpSettingType_descriptor();
}
template <> struct is_proto_enum< ::proto::MathExpressionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MathExpressionType>() {
  return ::proto::MathExpressionType_descriptor();
}
template <> struct is_proto_enum< ::proto::LoginRewardConfigType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LoginRewardConfigType>() {
  return ::proto::LoginRewardConfigType_descriptor();
}
template <> struct is_proto_enum< ::proto::LanguageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LanguageType>() {
  return ::proto::LanguageType_descriptor();
}
template <> struct is_proto_enum< ::proto::PlatformType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlatformType>() {
  return ::proto::PlatformType_descriptor();
}
template <> struct is_proto_enum< ::proto::MapMarkPointType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MapMarkPointType>() {
  return ::proto::MapMarkPointType_descriptor();
}
template <> struct is_proto_enum< ::proto::MapMarkFromType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MapMarkFromType>() {
  return ::proto::MapMarkFromType_descriptor();
}
template <> struct is_proto_enum< ::proto::DungeonCandidateTeamInviteState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DungeonCandidateTeamInviteState>() {
  return ::proto::DungeonCandidateTeamInviteState_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterGuestBanDrop> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterGuestBanDrop>() {
  return ::proto::MonsterGuestBanDrop_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetGuestBanDrop> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetGuestBanDrop>() {
  return ::proto::GadgetGuestBanDrop_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_define_2eproto__INCLUDED
