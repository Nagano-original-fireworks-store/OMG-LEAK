// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: define.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "define.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class ParamListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParamList>
     _instance;
} _ParamList_default_instance_;
class PropValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PropValue>
     _instance;
  ::google::protobuf::int64 ival_;
  float fval_;
} _PropValue_default_instance_;
class RegionCustomConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegionCustomConfig>
     _instance;
} _RegionCustomConfig_default_instance_;
class RegionSimpleInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegionSimpleInfo>
     _instance;
} _RegionSimpleInfo_default_instance_;
class ClientCustomConfig_DevicelistEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientCustomConfig::ClientCustomConfig_DevicelistEntry>
     _instance;
} _ClientCustomConfig_DevicelistEntry_default_instance_;
class ClientCustomConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientCustomConfig>
     _instance;
} _ClientCustomConfig_default_instance_;
class QueryRegionListHttpRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QueryRegionListHttpRsp>
     _instance;
} _QueryRegionListHttpRsp_default_instance_;
class ForceUpdateInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ForceUpdateInfo>
     _instance;
} _ForceUpdateInfo_default_instance_;
class StopServerInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StopServerInfo>
     _instance;
} _StopServerInfo_default_instance_;
class ResVersionConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResVersionConfig>
     _instance;
} _ResVersionConfig_default_instance_;
class RegionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegionInfo>
     _instance;
} _RegionInfo_default_instance_;
class QueryCurrRegionHttpRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QueryCurrRegionHttpRsp>
     _instance;
  const ::proto::ForceUpdateInfo* force_udpate_;
  const ::proto::StopServerInfo* stop_server_;
} _QueryCurrRegionHttpRsp_default_instance_;
class ReliquaryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Reliquary>
     _instance;
} _Reliquary_default_instance_;
class Weapon_AffixMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Weapon::Weapon_AffixMapEntry>
     _instance;
} _Weapon_AffixMapEntry_default_instance_;
class WeaponDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Weapon>
     _instance;
} _Weapon_default_instance_;
class MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry>
     _instance;
} _MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_;
class MaterialDeleteInfo_CountDownDeleteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MaterialDeleteInfo_CountDownDelete>
     _instance;
} _MaterialDeleteInfo_CountDownDelete_default_instance_;
class MaterialDeleteInfo_DateTimeDeleteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MaterialDeleteInfo_DateTimeDelete>
     _instance;
} _MaterialDeleteInfo_DateTimeDelete_default_instance_;
class MaterialDeleteInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MaterialDeleteInfo>
     _instance;
  const ::proto::MaterialDeleteInfo_CountDownDelete* count_down_delete_;
  const ::proto::MaterialDeleteInfo_DateTimeDelete* date_delete_;
} _MaterialDeleteInfo_default_instance_;
class MaterialDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Material>
     _instance;
} _Material_default_instance_;
class EquipDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Equip>
     _instance;
  const ::proto::Reliquary* reliquary_;
  const ::proto::Weapon* weapon_;
} _Equip_default_instance_;
class ItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Item>
     _instance;
  const ::proto::Material* material_;
  const ::proto::Equip* equip_;
} _Item_default_instance_;
class ItemParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ItemParam>
     _instance;
} _ItemParam_default_instance_;
class EquipParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EquipParam>
     _instance;
} _EquipParam_default_instance_;
class EquipParamListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EquipParamList>
     _instance;
} _EquipParamList_default_instance_;
class RewardDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Reward>
     _instance;
} _Reward_default_instance_;
class AbilityStringDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityString>
     _instance;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::uint32 hash_;
} _AbilityString_default_instance_;
class AbilityFloatValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityFloatValue>
     _instance;
} _AbilityFloatValue_default_instance_;
class AbilityScalarValueEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityScalarValueEntry>
     _instance;
  float float_value_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::int32 int_value_;
  ::google::protobuf::uint32 uint_value_;
} _AbilityScalarValueEntry_default_instance_;
class AbilityAppliedAbilityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityAppliedAbility>
     _instance;
} _AbilityAppliedAbility_default_instance_;
class AbilityAttachedModifierDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityAttachedModifier>
     _instance;
} _AbilityAttachedModifier_default_instance_;
class ModifierDurabilityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ModifierDurability>
     _instance;
} _ModifierDurability_default_instance_;
class AbilityAppliedModifierDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityAppliedModifier>
     _instance;
} _AbilityAppliedModifier_default_instance_;
class AbilitySyncStateInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilitySyncStateInfo>
     _instance;
} _AbilitySyncStateInfo_default_instance_;
class VectorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector>
     _instance;
} _Vector_default_instance_;
class Vector3IntDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector3Int>
     _instance;
} _Vector3Int_default_instance_;
class MotionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MotionInfo>
     _instance;
} _MotionInfo_default_instance_;
class PlaceInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlaceInfo>
     _instance;
} _PlaceInfo_default_instance_;
class SceneWeaponInfo_AffixMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneWeaponInfo::SceneWeaponInfo_AffixMapEntry>
     _instance;
} _SceneWeaponInfo_AffixMapEntry_default_instance_;
class SceneWeaponInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneWeaponInfo>
     _instance;
} _SceneWeaponInfo_default_instance_;
class SceneReliquaryInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneReliquaryInfo>
     _instance;
} _SceneReliquaryInfo_default_instance_;
class ServerBuffDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerBuff>
     _instance;
} _ServerBuff_default_instance_;
class SceneAvatarInfo_SkillLevelMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAvatarInfo::SceneAvatarInfo_SkillLevelMapEntry>
     _instance;
} _SceneAvatarInfo_SkillLevelMapEntry_default_instance_;
class SceneAvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAvatarInfo::SceneAvatarInfo_ProudSkillExtraLevelMapEntry>
     _instance;
} _SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_;
class SceneAvatarInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAvatarInfo>
     _instance;
} _SceneAvatarInfo_default_instance_;
class SceneMonsterInfo_SummonTagMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneMonsterInfo::SceneMonsterInfo_SummonTagMapEntry>
     _instance;
} _SceneMonsterInfo_SummonTagMapEntry_default_instance_;
class SceneMonsterInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneMonsterInfo>
     _instance;
} _SceneMonsterInfo_default_instance_;
class SceneNpcInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneNpcInfo>
     _instance;
} _SceneNpcInfo_default_instance_;
class WorktopInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorktopInfo>
     _instance;
} _WorktopInfo_default_instance_;
class MathQuaternionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MathQuaternion>
     _instance;
} _MathQuaternion_default_instance_;
class PlatformInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformInfo>
     _instance;
} _PlatformInfo_default_instance_;
class WeatherInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WeatherInfo>
     _instance;
} _WeatherInfo_default_instance_;
class ClientGadgetInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientGadgetInfo>
     _instance;
} _ClientGadgetInfo_default_instance_;
class AbilityGadgetInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityGadgetInfo>
     _instance;
} _AbilityGadgetInfo_default_instance_;
class GatherGadgetInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GatherGadgetInfo>
     _instance;
} _GatherGadgetInfo_default_instance_;
class StatueGadgetInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StatueGadgetInfo>
     _instance;
} _StatueGadgetInfo_default_instance_;
class BossChestInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BossChestInfo>
     _instance;
} _BossChestInfo_default_instance_;
class BlossomChestInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlossomChestInfo>
     _instance;
} _BlossomChestInfo_default_instance_;
class SceneGadgetInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneGadgetInfo>
     _instance;
  const ::proto::Item* trifle_item_;
  const ::proto::GatherGadgetInfo* gather_gadget_;
  const ::proto::WorktopInfo* worktop_;
  const ::proto::ClientGadgetInfo* client_gadget_;
  const ::proto::PlatformInfo* platform_;
  const ::proto::WeatherInfo* weather_;
  const ::proto::AbilityGadgetInfo* ability_gadget_;
  const ::proto::StatueGadgetInfo* statue_gadget_;
  const ::proto::BossChestInfo* boss_chest_;
  const ::proto::BlossomChestInfo* blossom_chest_;
} _SceneGadgetInfo_default_instance_;
class AnimatorParameterValueInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnimatorParameterValueInfo>
     _instance;
  ::google::protobuf::int32 int_val_;
  float float_val_;
  bool bool_val_;
} _AnimatorParameterValueInfo_default_instance_;
class ServantInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServantInfo>
     _instance;
} _ServantInfo_default_instance_;
class SceneEntityAiInfo_SkillCdMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityAiInfo::SceneEntityAiInfo_SkillCdMapEntry>
     _instance;
} _SceneEntityAiInfo_SkillCdMapEntry_default_instance_;
class SceneEntityAiInfo_AiThreatMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityAiInfo::SceneEntityAiInfo_AiThreatMapEntry>
     _instance;
} _SceneEntityAiInfo_AiThreatMapEntry_default_instance_;
class SceneEntityAiInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityAiInfo>
     _instance;
} _SceneEntityAiInfo_default_instance_;
class EntityRendererChangedInfo_ChangedRenderersEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityRendererChangedInfo::EntityRendererChangedInfo_ChangedRenderersEntry>
     _instance;
} _EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_;
class EntityRendererChangedInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityRendererChangedInfo>
     _instance;
} _EntityRendererChangedInfo_default_instance_;
class SceneEntityInfo_PropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityInfo::SceneEntityInfo_PropMapEntry>
     _instance;
} _SceneEntityInfo_PropMapEntry_default_instance_;
class SceneEntityInfo_FightPropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityInfo::SceneEntityInfo_FightPropMapEntry>
     _instance;
} _SceneEntityInfo_FightPropMapEntry_default_instance_;
class SceneEntityInfo_AnimatorParaMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityInfo::SceneEntityInfo_AnimatorParaMapEntry>
     _instance;
} _SceneEntityInfo_AnimatorParaMapEntry_default_instance_;
class SceneEntityInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityInfo>
     _instance;
  const ::proto::SceneAvatarInfo* avatar_;
  const ::proto::SceneMonsterInfo* monster_;
  const ::proto::SceneNpcInfo* npc_;
  const ::proto::SceneGadgetInfo* gadget_;
} _SceneEntityInfo_default_instance_;
class CreateGadgetInfo_ChestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateGadgetInfo_Chest>
     _instance;
} _CreateGadgetInfo_Chest_default_instance_;
class CreateGadgetInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateGadgetInfo>
     _instance;
} _CreateGadgetInfo_default_instance_;
class CreateEntityInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateEntityInfo>
     _instance;
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 npc_id_;
  ::google::protobuf::uint32 gadget_id_;
  ::google::protobuf::uint32 item_id_;
  const ::proto::CreateGadgetInfo* gadget_;
} _CreateEntityInfo_default_instance_;
class TrialAvatarGrantRecordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TrialAvatarGrantRecord>
     _instance;
} _TrialAvatarGrantRecord_default_instance_;
class TrialAvatarInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TrialAvatarInfo>
     _instance;
} _TrialAvatarInfo_default_instance_;
class AvatarSkillInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarSkillInfo>
     _instance;
} _AvatarSkillInfo_default_instance_;
class AvatarFetterInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarFetterInfo>
     _instance;
} _AvatarFetterInfo_default_instance_;
class AvatarExpeditionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarExpeditionInfo>
     _instance;
} _AvatarExpeditionInfo_default_instance_;
class AvatarInfo_PropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarInfo::AvatarInfo_PropMapEntry>
     _instance;
} _AvatarInfo_PropMapEntry_default_instance_;
class AvatarInfo_FightPropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarInfo::AvatarInfo_FightPropMapEntry>
     _instance;
} _AvatarInfo_FightPropMapEntry_default_instance_;
class AvatarInfo_SkillMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarInfo::AvatarInfo_SkillMapEntry>
     _instance;
} _AvatarInfo_SkillMapEntry_default_instance_;
class AvatarInfo_SkillLevelMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarInfo::AvatarInfo_SkillLevelMapEntry>
     _instance;
} _AvatarInfo_SkillLevelMapEntry_default_instance_;
class AvatarInfo_ProudSkillExtraLevelMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarInfo::AvatarInfo_ProudSkillExtraLevelMapEntry>
     _instance;
} _AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_;
class AvatarInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarInfo>
     _instance;
} _AvatarInfo_default_instance_;
class Quest_LackedNpcMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Quest::Quest_LackedNpcMapEntry>
     _instance;
} _Quest_LackedNpcMapEntry_default_instance_;
class QuestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Quest>
     _instance;
} _Quest_default_instance_;
class NpcPositionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NpcPositionInfo>
     _instance;
} _NpcPositionInfo_default_instance_;
class MailTextContentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MailTextContent>
     _instance;
} _MailTextContent_default_instance_;
class MailItemDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MailItem>
     _instance;
} _MailItem_default_instance_;
class MailDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MailData>
     _instance;
} _MailData_default_instance_;
class OnlinePlayerInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OnlinePlayerInfo>
     _instance;
} _OnlinePlayerInfo_default_instance_;
class BirthdayDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Birthday>
     _instance;
} _Birthday_default_instance_;
class MapMarkPointDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MapMarkPoint>
     _instance;
} _MapMarkPoint_default_instance_;
class MassiveWaterInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MassiveWaterInfo>
     _instance;
} _MassiveWaterInfo_default_instance_;
class MassiveGrassInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MassiveGrassInfo>
     _instance;
} _MassiveGrassInfo_default_instance_;
class MassiveBoxInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MassiveBoxInfo>
     _instance;
} _MassiveBoxInfo_default_instance_;
class ClientMassiveEntityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientMassiveEntity>
     _instance;
  const ::proto::MassiveWaterInfo* water_info_;
  const ::proto::MassiveGrassInfo* grass_info_;
  const ::proto::MassiveBoxInfo* box_info_;
} _ClientMassiveEntity_default_instance_;
class ServerMassiveEntityDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerMassiveEntity>
     _instance;
  const ::proto::MassiveWaterInfo* water_info_;
  const ::proto::MassiveGrassInfo* grass_info_;
  const ::proto::MassiveBoxInfo* box_info_;
} _ServerMassiveEntity_default_instance_;
class MassiveEntityStateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MassiveEntityState>
     _instance;
} _MassiveEntityState_default_instance_;
class EntityClientDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityClientData>
     _instance;
} _EntityClientData_default_instance_;
class BlockInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockInfo>
     _instance;
} _BlockInfo_default_instance_;

namespace protobuf_define_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[101];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[31];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParamList, param_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropValue, type_),
  offsetof(PropValueDefaultTypeInternal, ival_),
  offsetof(PropValueDefaultTypeInternal, fval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropValue, val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PropValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionCustomConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionCustomConfig, close_antidebug_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionCustomConfig, force_kill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionCustomConfig, antidebug_pc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionCustomConfig, antidubug_ios_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionCustomConfig, antidubug_androd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSimpleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSimpleInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSimpleInfo, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSimpleInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSimpleInfo, dispatch_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionSimpleInfo, region_custom_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, visitor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, sdkenv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, debugmenu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, debuglogswitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, debuglog_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, devicelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, loadjsondata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientCustomConfig, showexception_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionListHttpRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionListHttpRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionListHttpRsp, region_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionListHttpRsp, client_custom_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionListHttpRsp, client_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionListHttpRsp, client_secret_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryRegionListHttpRsp, client_custom_config_encrypted_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceUpdateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceUpdateInfo, force_update_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ForceUpdateInfo, client_config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopServerInfo, stop_begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopServerInfo, stop_end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResVersionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResVersionConfig, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResVersionConfig, relogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResVersionConfig, md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResVersionConfig, release_total_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, gateserver_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, gateserver_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, pay_callback_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, area_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, resource_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, data_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, feedback_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, bulletin_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, resource_url_bak_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, data_url_bak_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, client_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, res_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, handbook_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, client_silence_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, client_data_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, client_silence_data_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, res_md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, res_version_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, secret_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionInfo, official_community_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, region_info_),
  offsetof(QueryCurrRegionHttpRspDefaultTypeInternal, force_udpate_),
  offsetof(QueryCurrRegionHttpRspDefaultTypeInternal, stop_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, client_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, client_secret_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, region_custom_config_encrypted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, client_region_custom_config_encrypted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryCurrRegionHttpRsp, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reliquary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reliquary, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reliquary, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reliquary, promote_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reliquary, main_prop_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reliquary, append_prop_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, promote_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Weapon, affix_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo_CountDownDelete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo_CountDownDelete, delete_time_num_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo_CountDownDelete, config_count_down_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo_DateTimeDelete, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo_DateTimeDelete, delete_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo, has_delete_config_),
  offsetof(MaterialDeleteInfoDefaultTypeInternal, count_down_delete_),
  offsetof(MaterialDeleteInfoDefaultTypeInternal, date_delete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MaterialDeleteInfo, delete_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Material, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Material, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Material, delete_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(EquipDefaultTypeInternal, reliquary_),
  offsetof(EquipDefaultTypeInternal, weapon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Equip, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, guid_),
  offsetof(ItemDefaultTypeInternal, material_),
  offsetof(ItemDefaultTypeInternal, equip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Item, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemParam, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemParam, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipParam, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipParam, item_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipParam, item_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipParam, promote_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipParamList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EquipParamList, item_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward, reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reward, item_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityString, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityString, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(AbilityStringDefaultTypeInternal, str_),
  offsetof(AbilityStringDefaultTypeInternal, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityString, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityFloatValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityFloatValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityScalarValueEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityScalarValueEntry, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityScalarValueEntry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityScalarValueEntry, value_type_),
  offsetof(AbilityScalarValueEntryDefaultTypeInternal, float_value_),
  offsetof(AbilityScalarValueEntryDefaultTypeInternal, string_value_),
  offsetof(AbilityScalarValueEntryDefaultTypeInternal, int_value_),
  offsetof(AbilityScalarValueEntryDefaultTypeInternal, uint_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityScalarValueEntry, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedAbility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedAbility, ability_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedAbility, ability_override_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedAbility, override_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedAbility, instanced_ability_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAttachedModifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAttachedModifier, is_invalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAttachedModifier, owner_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAttachedModifier, instanced_modifier_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifierDurability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifierDurability, reduce_ratio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModifierDurability, remaining_durability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, modifier_local_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, parent_ability_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, parent_ability_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, parent_ability_override_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, instanced_ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, instanced_modifier_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, exist_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, attached_instanced_modifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, apply_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, is_attached_parent_ability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityAppliedModifier, modifier_durability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilitySyncStateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilitySyncStateInfo, is_inited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilitySyncStateInfo, dynamic_value_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilitySyncStateInfo, applied_abilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilitySyncStateInfo, applied_modifiers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3Int, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3Int, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3Int, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector3Int, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotionInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotionInfo, rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotionInfo, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotionInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotionInfo, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlaceInfo, rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, promote_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, ability_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeaponInfo, affix_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneReliquaryInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneReliquaryInfo, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneReliquaryInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneReliquaryInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneReliquaryInfo, promote_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuff, server_buff_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuff, server_buff_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuff, server_buff_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuff, instanced_modifier_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, equip_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, skill_depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, talent_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, weapon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, reliquary_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, buff_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, core_proud_skill_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, inherent_proud_skill_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, skill_level_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, proud_skill_extra_level_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarInfo, server_buff_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, monster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, weapon_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, authority_peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, affix_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, is_elite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, owner_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, summoned_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, summon_tag_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, pose_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, born_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, block_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, mark_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, title_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneMonsterInfo, special_name_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneNpcInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneNpcInfo, npc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneNpcInfo, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneNpcInfo, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneNpcInfo, block_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopInfo, option_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopInfo, is_guest_can_operate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MathQuaternion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MathQuaternion, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MathQuaternion, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MathQuaternion, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MathQuaternion, w_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, route_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, start_route_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, start_scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, temp_route_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, temp_start_route_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, start_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, is_started_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, start_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformInfo, stop_scene_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeatherInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WeatherInfo, weather_area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientGadgetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientGadgetInfo, camp_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientGadgetInfo, camp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientGadgetInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientGadgetInfo, owner_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientGadgetInfo, target_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientGadgetInfo, async_load_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityGadgetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityGadgetInfo, camp_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityGadgetInfo, camp_target_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityGadgetInfo, target_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatherGadgetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatherGadgetInfo, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GatherGadgetInfo, is_forbid_guest_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatueGadgetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatueGadgetInfo, opened_statue_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestInfo, monster_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestInfo, world_resin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestInfo, remain_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestInfo, qualify_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfo, world_resin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfo, qualify_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfo, remain_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfo, dead_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, owner_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, born_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, gadget_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, gadget_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, is_show_cutscene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, authority_peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, is_enable_interact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, interact_id_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, trifle_item_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, gather_gadget_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, worktop_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, client_gadget_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, platform_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, weather_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, ability_gadget_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, statue_gadget_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, boss_chest_),
  offsetof(SceneGadgetInfoDefaultTypeInternal, blossom_chest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, mark_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGadgetInfo, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimatorParameterValueInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimatorParameterValueInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimatorParameterValueInfo, para_type_),
  offsetof(AnimatorParameterValueInfoDefaultTypeInternal, int_val_),
  offsetof(AnimatorParameterValueInfoDefaultTypeInternal, float_val_),
  offsetof(AnimatorParameterValueInfoDefaultTypeInternal, bool_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimatorParameterValueInfo, paraVal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServantInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServantInfo, master_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServantInfo, born_slot_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAiInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAiInfo, is_ai_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAiInfo, born_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAiInfo, skill_cd_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAiInfo, servant_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAiInfo, ai_threat_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRendererChangedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityRendererChangedInfo, changed_renderers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, entity_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, motion_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, prop_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, fight_prop_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, life_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, ability_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, animator_para_map_),
  offsetof(SceneEntityInfoDefaultTypeInternal, avatar_),
  offsetof(SceneEntityInfoDefaultTypeInternal, monster_),
  offsetof(SceneEntityInfoDefaultTypeInternal, npc_),
  offsetof(SceneEntityInfoDefaultTypeInternal, gadget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, renderer_changed_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, ai_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, last_move_scene_time_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, last_move_reliable_seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, entity_client_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityInfo, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGadgetInfo_Chest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGadgetInfo_Chest, chest_drop_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGadgetInfo_Chest, is_show_cutscene_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGadgetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGadgetInfo, born_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateGadgetInfo, chest_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(CreateEntityInfoDefaultTypeInternal, monster_id_),
  offsetof(CreateEntityInfoDefaultTypeInternal, npc_id_),
  offsetof(CreateEntityInfoDefaultTypeInternal, gadget_id_),
  offsetof(CreateEntityInfoDefaultTypeInternal, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, client_unique_id_),
  offsetof(CreateEntityInfoDefaultTypeInternal, gadget_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateEntityInfo, entity_create_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrialAvatarGrantRecord, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrialAvatarGrantRecord, grant_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrialAvatarGrantRecord, from_parent_quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrialAvatarInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrialAvatarInfo, trial_avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrialAvatarInfo, trial_equip_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrialAvatarInfo, grant_record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSkillInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSkillInfo, pass_cd_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSkillInfo, full_cd_time_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarSkillInfo, max_charge_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterInfo, exp_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterInfo, exp_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarFetterInfo, open_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionInfo, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionInfo, exp_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionInfo, hour_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarExpeditionInfo, start_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, prop_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, life_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, equip_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, talent_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, fight_prop_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, trial_avatar_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, skill_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, skill_depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, fetter_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, core_proud_skill_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, inherent_proud_skill_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, skill_level_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, expedition_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, proud_skill_extra_level_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, is_focus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarInfo, avatar_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, start_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, is_random_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, parent_quest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, quest_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, start_game_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, accept_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, lacked_npc_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, finish_progress_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, fail_progress_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Quest, lacked_npc_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NpcPositionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NpcPositionInfo, npc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NpcPositionInfo, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTextContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTextContent, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTextContent, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailTextContent, sender_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, equip_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailItem, delete_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, mail_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, mail_text_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, send_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, expire_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, importance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, is_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, is_attachment_got_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailData, argument_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerInfo, player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerInfo, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerInfo, mp_setting_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerInfo, cur_player_num_in_world_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerInfo, world_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Birthday, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Birthday, month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Birthday, day_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapMarkPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapMarkPoint, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapMarkPoint, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapMarkPoint, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapMarkPoint, point_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapMarkPoint, monster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapMarkPoint, from_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MapMarkPoint, quest_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveWaterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveWaterInfo, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveGrassInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveGrassInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveGrassInfo, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveGrassInfo, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveBoxInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveBoxInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveBoxInfo, configid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveBoxInfo, center_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveBoxInfo, extents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveBoxInfo, up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveBoxInfo, forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveBoxInfo, right_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMassiveEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMassiveEntity, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMassiveEntity, entity_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMassiveEntity, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMassiveEntity, obj_id_),
  offsetof(ClientMassiveEntityDefaultTypeInternal, water_info_),
  offsetof(ClientMassiveEntityDefaultTypeInternal, grass_info_),
  offsetof(ClientMassiveEntityDefaultTypeInternal, box_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientMassiveEntity, entity_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMassiveEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMassiveEntity, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMassiveEntity, entity_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMassiveEntity, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMassiveEntity, runtime_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMassiveEntity, authority_peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMassiveEntity, obj_id_),
  offsetof(ServerMassiveEntityDefaultTypeInternal, water_info_),
  offsetof(ServerMassiveEntityDefaultTypeInternal, grass_info_),
  offsetof(ServerMassiveEntityDefaultTypeInternal, box_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMassiveEntity, entity_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveEntityState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveEntityState, entity_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveEntityState, obj_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveEntityState, element_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityClientData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityClientData, wind_change_scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityClientData, windmill_sync_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityClientData, wind_change_target_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, block_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, bin_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, is_dirty_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ParamList)},
  { 6, -1, sizeof(PropValue)},
  { 16, -1, sizeof(RegionCustomConfig)},
  { 26, -1, sizeof(RegionSimpleInfo)},
  { 36, -1, sizeof(ClientCustomConfig)},
  { 49, -1, sizeof(QueryRegionListHttpRsp)},
  { 60, -1, sizeof(ForceUpdateInfo)},
  { 67, -1, sizeof(StopServerInfo)},
  { 74, -1, sizeof(ResVersionConfig)},
  { 83, -1, sizeof(RegionInfo)},
  { 108, -1, sizeof(QueryCurrRegionHttpRsp)},
  { 123, -1, sizeof(Reliquary)},
  { 133, -1, sizeof(Weapon)},
  { 142, -1, sizeof(MaterialDeleteInfo_CountDownDelete)},
  { 149, -1, sizeof(MaterialDeleteInfo_DateTimeDelete)},
  { 155, -1, sizeof(MaterialDeleteInfo)},
  { 164, -1, sizeof(Material)},
  { 171, -1, sizeof(Equip)},
  { 179, -1, sizeof(Item)},
  { 189, -1, sizeof(ItemParam)},
  { 196, -1, sizeof(EquipParam)},
  { 205, -1, sizeof(EquipParamList)},
  { 211, -1, sizeof(Reward)},
  { 218, -1, sizeof(AbilityString)},
  { 226, -1, sizeof(AbilityFloatValue)},
  { 232, -1, sizeof(AbilityScalarValueEntry)},
  { 244, -1, sizeof(AbilityAppliedAbility)},
  { 253, -1, sizeof(AbilityAttachedModifier)},
  { 261, -1, sizeof(ModifierDurability)},
  { 268, -1, sizeof(AbilityAppliedModifier)},
  { 284, -1, sizeof(AbilitySyncStateInfo)},
  { 293, -1, sizeof(Vector)},
  { 301, -1, sizeof(Vector3Int)},
  { 309, -1, sizeof(MotionInfo)},
  { 319, -1, sizeof(PlaceInfo)},
  { 326, -1, sizeof(SceneWeaponInfo)},
  { 339, -1, sizeof(SceneReliquaryInfo)},
  { 348, -1, sizeof(ServerBuff)},
  { 357, -1, sizeof(SceneAvatarInfo)},
  { 377, -1, sizeof(SceneMonsterInfo)},
  { 398, -1, sizeof(SceneNpcInfo)},
  { 407, -1, sizeof(WorktopInfo)},
  { 414, -1, sizeof(MathQuaternion)},
  { 423, -1, sizeof(PlatformInfo)},
  { 438, -1, sizeof(WeatherInfo)},
  { 444, -1, sizeof(ClientGadgetInfo)},
  { 455, -1, sizeof(AbilityGadgetInfo)},
  { 463, -1, sizeof(GatherGadgetInfo)},
  { 470, -1, sizeof(StatueGadgetInfo)},
  { 476, -1, sizeof(BossChestInfo)},
  { 485, -1, sizeof(BlossomChestInfo)},
  { 494, -1, sizeof(SceneGadgetInfo)},
  { 522, -1, sizeof(AnimatorParameterValueInfo)},
  { 532, -1, sizeof(ServantInfo)},
  { 539, -1, sizeof(SceneEntityAiInfo)},
  { 549, -1, sizeof(EntityRendererChangedInfo)},
  { 555, -1, sizeof(SceneEntityInfo)},
  { 579, -1, sizeof(CreateGadgetInfo_Chest)},
  { 586, -1, sizeof(CreateGadgetInfo)},
  { 593, -1, sizeof(CreateEntityInfo)},
  { 611, -1, sizeof(TrialAvatarGrantRecord)},
  { 618, -1, sizeof(TrialAvatarInfo)},
  { 626, -1, sizeof(AvatarSkillInfo)},
  { 634, -1, sizeof(AvatarFetterInfo)},
  { 642, -1, sizeof(AvatarExpeditionInfo)},
  { 651, -1, sizeof(AvatarInfo)},
  { 674, -1, sizeof(Quest)},
  { 691, -1, sizeof(NpcPositionInfo)},
  { 698, -1, sizeof(MailTextContent)},
  { 706, -1, sizeof(MailItem)},
  { 713, -1, sizeof(MailData)},
  { 728, -1, sizeof(OnlinePlayerInfo)},
  { 740, -1, sizeof(Birthday)},
  { 747, -1, sizeof(MapMarkPoint)},
  { 759, -1, sizeof(MassiveWaterInfo)},
  { 765, -1, sizeof(MassiveGrassInfo)},
  { 773, -1, sizeof(MassiveBoxInfo)},
  { 785, -1, sizeof(ClientMassiveEntity)},
  { 797, -1, sizeof(ServerMassiveEntity)},
  { 811, -1, sizeof(MassiveEntityState)},
  { 819, -1, sizeof(EntityClientData)},
  { 827, -1, sizeof(BlockInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParamList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PropValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegionCustomConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegionSimpleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientCustomConfig_DevicelistEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientCustomConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryRegionListHttpRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ForceUpdateInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StopServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResVersionConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryCurrRegionHttpRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Reliquary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Weapon_AffixMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Weapon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MaterialDeleteInfo_CountDownDelete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MaterialDeleteInfo_DateTimeDelete_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MaterialDeleteInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Material_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Equip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ItemParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EquipParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EquipParamList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Reward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityFloatValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityScalarValueEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityAppliedAbility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityAttachedModifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModifierDurability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityAppliedModifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilitySyncStateInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector3Int_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MotionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlaceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneWeaponInfo_AffixMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneWeaponInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneReliquaryInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerBuff_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAvatarInfo_SkillLevelMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAvatarInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneMonsterInfo_SummonTagMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneMonsterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneNpcInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorktopInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MathQuaternion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WeatherInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientGadgetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityGadgetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GatherGadgetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StatueGadgetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BossChestInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlossomChestInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneGadgetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnimatorParameterValueInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServantInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityAiInfo_SkillCdMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityAiInfo_AiThreatMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityAiInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityRendererChangedInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityInfo_PropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityInfo_FightPropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityInfo_AnimatorParaMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateGadgetInfo_Chest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateGadgetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateEntityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrialAvatarGrantRecord_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TrialAvatarInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarSkillInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarFetterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarExpeditionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarInfo_PropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarInfo_FightPropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarInfo_SkillMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarInfo_SkillLevelMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Quest_LackedNpcMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Quest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NpcPositionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailTextContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MailData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnlinePlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Birthday_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MapMarkPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MassiveWaterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MassiveGrassInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MassiveBoxInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientMassiveEntity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerMassiveEntity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MassiveEntityState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityClientData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "define.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[4].reflection = ClientCustomConfig::ClientCustomConfig_DevicelistEntry::CreateReflection(file_level_metadata[4].descriptor, _ClientCustomConfig_DevicelistEntry_default_instance_._instance.get_mutable());
file_level_metadata[13].reflection = Weapon::Weapon_AffixMapEntry::CreateReflection(file_level_metadata[13].descriptor, _Weapon_AffixMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[15].reflection = MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry::CreateReflection(file_level_metadata[15].descriptor, _MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[38].reflection = SceneWeaponInfo::SceneWeaponInfo_AffixMapEntry::CreateReflection(file_level_metadata[38].descriptor, _SceneWeaponInfo_AffixMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[42].reflection = SceneAvatarInfo::SceneAvatarInfo_SkillLevelMapEntry::CreateReflection(file_level_metadata[42].descriptor, _SceneAvatarInfo_SkillLevelMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[43].reflection = SceneAvatarInfo::SceneAvatarInfo_ProudSkillExtraLevelMapEntry::CreateReflection(file_level_metadata[43].descriptor, _SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[45].reflection = SceneMonsterInfo::SceneMonsterInfo_SummonTagMapEntry::CreateReflection(file_level_metadata[45].descriptor, _SceneMonsterInfo_SummonTagMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[61].reflection = SceneEntityAiInfo::SceneEntityAiInfo_SkillCdMapEntry::CreateReflection(file_level_metadata[61].descriptor, _SceneEntityAiInfo_SkillCdMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[62].reflection = SceneEntityAiInfo::SceneEntityAiInfo_AiThreatMapEntry::CreateReflection(file_level_metadata[62].descriptor, _SceneEntityAiInfo_AiThreatMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[64].reflection = EntityRendererChangedInfo::EntityRendererChangedInfo_ChangedRenderersEntry::CreateReflection(file_level_metadata[64].descriptor, _EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_._instance.get_mutable());
file_level_metadata[66].reflection = SceneEntityInfo::SceneEntityInfo_PropMapEntry::CreateReflection(file_level_metadata[66].descriptor, _SceneEntityInfo_PropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[67].reflection = SceneEntityInfo::SceneEntityInfo_FightPropMapEntry::CreateReflection(file_level_metadata[67].descriptor, _SceneEntityInfo_FightPropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[68].reflection = SceneEntityInfo::SceneEntityInfo_AnimatorParaMapEntry::CreateReflection(file_level_metadata[68].descriptor, _SceneEntityInfo_AnimatorParaMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[78].reflection = AvatarInfo::AvatarInfo_PropMapEntry::CreateReflection(file_level_metadata[78].descriptor, _AvatarInfo_PropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[79].reflection = AvatarInfo::AvatarInfo_FightPropMapEntry::CreateReflection(file_level_metadata[79].descriptor, _AvatarInfo_FightPropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[80].reflection = AvatarInfo::AvatarInfo_SkillMapEntry::CreateReflection(file_level_metadata[80].descriptor, _AvatarInfo_SkillMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[81].reflection = AvatarInfo::AvatarInfo_SkillLevelMapEntry::CreateReflection(file_level_metadata[81].descriptor, _AvatarInfo_SkillLevelMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[82].reflection = AvatarInfo::AvatarInfo_ProudSkillExtraLevelMapEntry::CreateReflection(file_level_metadata[82].descriptor, _AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[84].reflection = Quest::Quest_LackedNpcMapEntry::CreateReflection(file_level_metadata[84].descriptor, _Quest_LackedNpcMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 101);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ParamList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParamList_default_instance_);_PropValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PropValue_default_instance_);_RegionCustomConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegionCustomConfig_default_instance_);_RegionSimpleInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegionSimpleInfo_default_instance_);_ClientCustomConfig_DevicelistEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientCustomConfig_DevicelistEntry_default_instance_);_ClientCustomConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientCustomConfig_default_instance_);_QueryRegionListHttpRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QueryRegionListHttpRsp_default_instance_);_ForceUpdateInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ForceUpdateInfo_default_instance_);_StopServerInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StopServerInfo_default_instance_);_ResVersionConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResVersionConfig_default_instance_);_RegionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegionInfo_default_instance_);_QueryCurrRegionHttpRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QueryCurrRegionHttpRsp_default_instance_);_Reliquary_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Reliquary_default_instance_);_Weapon_AffixMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Weapon_AffixMapEntry_default_instance_);_Weapon_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Weapon_default_instance_);_MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_);_MaterialDeleteInfo_CountDownDelete_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MaterialDeleteInfo_CountDownDelete_default_instance_);_MaterialDeleteInfo_DateTimeDelete_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MaterialDeleteInfo_DateTimeDelete_default_instance_);_MaterialDeleteInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MaterialDeleteInfo_default_instance_);_Material_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Material_default_instance_);_Equip_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Equip_default_instance_);_Item_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Item_default_instance_);_ItemParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ItemParam_default_instance_);_EquipParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EquipParam_default_instance_);_EquipParamList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EquipParamList_default_instance_);_Reward_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Reward_default_instance_);_AbilityString_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityString_default_instance_);_AbilityFloatValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityFloatValue_default_instance_);_AbilityScalarValueEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityScalarValueEntry_default_instance_);_AbilityAppliedAbility_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityAppliedAbility_default_instance_);_AbilityAttachedModifier_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityAttachedModifier_default_instance_);_ModifierDurability_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ModifierDurability_default_instance_);_AbilityAppliedModifier_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityAppliedModifier_default_instance_);_AbilitySyncStateInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilitySyncStateInfo_default_instance_);_Vector_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_default_instance_);_Vector3Int_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector3Int_default_instance_);_MotionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MotionInfo_default_instance_);_PlaceInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlaceInfo_default_instance_);_SceneWeaponInfo_AffixMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneWeaponInfo_AffixMapEntry_default_instance_);_SceneWeaponInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneWeaponInfo_default_instance_);_SceneReliquaryInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneReliquaryInfo_default_instance_);_ServerBuff_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerBuff_default_instance_);_SceneAvatarInfo_SkillLevelMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAvatarInfo_SkillLevelMapEntry_default_instance_);_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_);_SceneAvatarInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAvatarInfo_default_instance_);_SceneMonsterInfo_SummonTagMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneMonsterInfo_SummonTagMapEntry_default_instance_);_SceneMonsterInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneMonsterInfo_default_instance_);_SceneNpcInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneNpcInfo_default_instance_);_WorktopInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorktopInfo_default_instance_);_MathQuaternion_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MathQuaternion_default_instance_);_PlatformInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformInfo_default_instance_);_WeatherInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WeatherInfo_default_instance_);_ClientGadgetInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientGadgetInfo_default_instance_);_AbilityGadgetInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityGadgetInfo_default_instance_);_GatherGadgetInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GatherGadgetInfo_default_instance_);_StatueGadgetInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StatueGadgetInfo_default_instance_);_BossChestInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BossChestInfo_default_instance_);_BlossomChestInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlossomChestInfo_default_instance_);_SceneGadgetInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneGadgetInfo_default_instance_);_AnimatorParameterValueInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnimatorParameterValueInfo_default_instance_);_ServantInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServantInfo_default_instance_);_SceneEntityAiInfo_SkillCdMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityAiInfo_SkillCdMapEntry_default_instance_);_SceneEntityAiInfo_AiThreatMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityAiInfo_AiThreatMapEntry_default_instance_);_SceneEntityAiInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityAiInfo_default_instance_);_EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_);_EntityRendererChangedInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityRendererChangedInfo_default_instance_);_SceneEntityInfo_PropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityInfo_PropMapEntry_default_instance_);_SceneEntityInfo_FightPropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityInfo_FightPropMapEntry_default_instance_);_SceneEntityInfo_AnimatorParaMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityInfo_AnimatorParaMapEntry_default_instance_);_SceneEntityInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityInfo_default_instance_);_CreateGadgetInfo_Chest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateGadgetInfo_Chest_default_instance_);_CreateGadgetInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateGadgetInfo_default_instance_);_CreateEntityInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateEntityInfo_default_instance_);_TrialAvatarGrantRecord_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TrialAvatarGrantRecord_default_instance_);_TrialAvatarInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TrialAvatarInfo_default_instance_);_AvatarSkillInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarSkillInfo_default_instance_);_AvatarFetterInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarFetterInfo_default_instance_);_AvatarExpeditionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarExpeditionInfo_default_instance_);_AvatarInfo_PropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarInfo_PropMapEntry_default_instance_);_AvatarInfo_FightPropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarInfo_FightPropMapEntry_default_instance_);_AvatarInfo_SkillMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarInfo_SkillMapEntry_default_instance_);_AvatarInfo_SkillLevelMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarInfo_SkillLevelMapEntry_default_instance_);_AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_);_AvatarInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarInfo_default_instance_);_Quest_LackedNpcMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Quest_LackedNpcMapEntry_default_instance_);_Quest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Quest_default_instance_);_NpcPositionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NpcPositionInfo_default_instance_);_MailTextContent_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MailTextContent_default_instance_);_MailItem_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MailItem_default_instance_);_MailData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MailData_default_instance_);_OnlinePlayerInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OnlinePlayerInfo_default_instance_);_Birthday_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Birthday_default_instance_);_MapMarkPoint_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MapMarkPoint_default_instance_);_MassiveWaterInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MassiveWaterInfo_default_instance_);_MassiveGrassInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MassiveGrassInfo_default_instance_);_MassiveBoxInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MassiveBoxInfo_default_instance_);_ClientMassiveEntity_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientMassiveEntity_default_instance_);_ServerMassiveEntity_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerMassiveEntity_default_instance_);_MassiveEntityState_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MassiveEntityState_default_instance_);_EntityClientData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityClientData_default_instance_);_BlockInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockInfo_default_instance_);_PropValue_default_instance_.ival_ = GOOGLE_LONGLONG(0);
  _PropValue_default_instance_.fval_ = 0;
  _RegionSimpleInfo_default_instance_._instance.get_mutable()->region_custom_config_ = const_cast< ::proto::RegionCustomConfig*>(
      ::proto::RegionCustomConfig::internal_default_instance());
  _ClientCustomConfig_DevicelistEntry_default_instance_._instance.get_mutable()->set_default_instance(_ClientCustomConfig_DevicelistEntry_default_instance_._instance.get_mutable());
  _ClientCustomConfig_DevicelistEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _QueryRegionListHttpRsp_default_instance_._instance.get_mutable()->client_config_ = const_cast< ::proto::ClientCustomConfig*>(
      ::proto::ClientCustomConfig::internal_default_instance());
  _ForceUpdateInfo_default_instance_._instance.get_mutable()->client_config_ = const_cast< ::proto::ClientCustomConfig*>(
      ::proto::ClientCustomConfig::internal_default_instance());
  _RegionInfo_default_instance_._instance.get_mutable()->res_version_config_ = const_cast< ::proto::ResVersionConfig*>(
      ::proto::ResVersionConfig::internal_default_instance());
  _QueryCurrRegionHttpRsp_default_instance_._instance.get_mutable()->region_info_ = const_cast< ::proto::RegionInfo*>(
      ::proto::RegionInfo::internal_default_instance());
  _QueryCurrRegionHttpRsp_default_instance_.force_udpate_ = const_cast< ::proto::ForceUpdateInfo*>(
      ::proto::ForceUpdateInfo::internal_default_instance());
  _QueryCurrRegionHttpRsp_default_instance_.stop_server_ = const_cast< ::proto::StopServerInfo*>(
      ::proto::StopServerInfo::internal_default_instance());
  _QueryCurrRegionHttpRsp_default_instance_._instance.get_mutable()->client_config_ = const_cast< ::proto::ClientCustomConfig*>(
      ::proto::ClientCustomConfig::internal_default_instance());
  _Weapon_AffixMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_Weapon_AffixMapEntry_default_instance_._instance.get_mutable());
  _Weapon_AffixMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_._instance.get_mutable());
  _MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _MaterialDeleteInfo_default_instance_.count_down_delete_ = const_cast< ::proto::MaterialDeleteInfo_CountDownDelete*>(
      ::proto::MaterialDeleteInfo_CountDownDelete::internal_default_instance());
  _MaterialDeleteInfo_default_instance_.date_delete_ = const_cast< ::proto::MaterialDeleteInfo_DateTimeDelete*>(
      ::proto::MaterialDeleteInfo_DateTimeDelete::internal_default_instance());
  _Material_default_instance_._instance.get_mutable()->delete_info_ = const_cast< ::proto::MaterialDeleteInfo*>(
      ::proto::MaterialDeleteInfo::internal_default_instance());
  _Equip_default_instance_.reliquary_ = const_cast< ::proto::Reliquary*>(
      ::proto::Reliquary::internal_default_instance());
  _Equip_default_instance_.weapon_ = const_cast< ::proto::Weapon*>(
      ::proto::Weapon::internal_default_instance());
  _Item_default_instance_.material_ = const_cast< ::proto::Material*>(
      ::proto::Material::internal_default_instance());
  _Item_default_instance_.equip_ = const_cast< ::proto::Equip*>(
      ::proto::Equip::internal_default_instance());
  _AbilityString_default_instance_.str_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _AbilityString_default_instance_.hash_ = 0u;
  _AbilityScalarValueEntry_default_instance_._instance.get_mutable()->key_ = const_cast< ::proto::AbilityString*>(
      ::proto::AbilityString::internal_default_instance());
  _AbilityScalarValueEntry_default_instance_.float_value_ = 0;
  _AbilityScalarValueEntry_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _AbilityScalarValueEntry_default_instance_.int_value_ = 0;
  _AbilityScalarValueEntry_default_instance_.uint_value_ = 0u;
  _AbilityAppliedAbility_default_instance_._instance.get_mutable()->ability_name_ = const_cast< ::proto::AbilityString*>(
      ::proto::AbilityString::internal_default_instance());
  _AbilityAppliedAbility_default_instance_._instance.get_mutable()->ability_override_ = const_cast< ::proto::AbilityString*>(
      ::proto::AbilityString::internal_default_instance());
  _AbilityAppliedModifier_default_instance_._instance.get_mutable()->parent_ability_name_ = const_cast< ::proto::AbilityString*>(
      ::proto::AbilityString::internal_default_instance());
  _AbilityAppliedModifier_default_instance_._instance.get_mutable()->parent_ability_override_ = const_cast< ::proto::AbilityString*>(
      ::proto::AbilityString::internal_default_instance());
  _AbilityAppliedModifier_default_instance_._instance.get_mutable()->attached_instanced_modifier_ = const_cast< ::proto::AbilityAttachedModifier*>(
      ::proto::AbilityAttachedModifier::internal_default_instance());
  _AbilityAppliedModifier_default_instance_._instance.get_mutable()->modifier_durability_ = const_cast< ::proto::ModifierDurability*>(
      ::proto::ModifierDurability::internal_default_instance());
  _MotionInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MotionInfo_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MotionInfo_default_instance_._instance.get_mutable()->speed_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _PlaceInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _PlaceInfo_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SceneWeaponInfo_AffixMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneWeaponInfo_AffixMapEntry_default_instance_._instance.get_mutable());
  _SceneWeaponInfo_AffixMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneWeaponInfo_default_instance_._instance.get_mutable()->ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _SceneAvatarInfo_SkillLevelMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneAvatarInfo_SkillLevelMapEntry_default_instance_._instance.get_mutable());
  _SceneAvatarInfo_SkillLevelMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.get_mutable());
  _SceneAvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneAvatarInfo_default_instance_._instance.get_mutable()->weapon_ = const_cast< ::proto::SceneWeaponInfo*>(
      ::proto::SceneWeaponInfo::internal_default_instance());
  _SceneMonsterInfo_SummonTagMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneMonsterInfo_SummonTagMapEntry_default_instance_._instance.get_mutable());
  _SceneMonsterInfo_SummonTagMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlatformInfo_default_instance_._instance.get_mutable()->start_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _PlatformInfo_default_instance_._instance.get_mutable()->start_rot_ = const_cast< ::proto::MathQuaternion*>(
      ::proto::MathQuaternion::internal_default_instance());
  _SceneGadgetInfo_default_instance_.trifle_item_ = const_cast< ::proto::Item*>(
      ::proto::Item::internal_default_instance());
  _SceneGadgetInfo_default_instance_.gather_gadget_ = const_cast< ::proto::GatherGadgetInfo*>(
      ::proto::GatherGadgetInfo::internal_default_instance());
  _SceneGadgetInfo_default_instance_.worktop_ = const_cast< ::proto::WorktopInfo*>(
      ::proto::WorktopInfo::internal_default_instance());
  _SceneGadgetInfo_default_instance_.client_gadget_ = const_cast< ::proto::ClientGadgetInfo*>(
      ::proto::ClientGadgetInfo::internal_default_instance());
  _SceneGadgetInfo_default_instance_.platform_ = const_cast< ::proto::PlatformInfo*>(
      ::proto::PlatformInfo::internal_default_instance());
  _SceneGadgetInfo_default_instance_.weather_ = const_cast< ::proto::WeatherInfo*>(
      ::proto::WeatherInfo::internal_default_instance());
  _SceneGadgetInfo_default_instance_.ability_gadget_ = const_cast< ::proto::AbilityGadgetInfo*>(
      ::proto::AbilityGadgetInfo::internal_default_instance());
  _SceneGadgetInfo_default_instance_.statue_gadget_ = const_cast< ::proto::StatueGadgetInfo*>(
      ::proto::StatueGadgetInfo::internal_default_instance());
  _SceneGadgetInfo_default_instance_.boss_chest_ = const_cast< ::proto::BossChestInfo*>(
      ::proto::BossChestInfo::internal_default_instance());
  _SceneGadgetInfo_default_instance_.blossom_chest_ = const_cast< ::proto::BlossomChestInfo*>(
      ::proto::BlossomChestInfo::internal_default_instance());
  _AnimatorParameterValueInfo_default_instance_.int_val_ = 0;
  _AnimatorParameterValueInfo_default_instance_.float_val_ = 0;
  _AnimatorParameterValueInfo_default_instance_.bool_val_ = false;
  _SceneEntityAiInfo_SkillCdMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneEntityAiInfo_SkillCdMapEntry_default_instance_._instance.get_mutable());
  _SceneEntityAiInfo_SkillCdMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneEntityAiInfo_AiThreatMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneEntityAiInfo_AiThreatMapEntry_default_instance_._instance.get_mutable());
  _SceneEntityAiInfo_AiThreatMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneEntityAiInfo_default_instance_._instance.get_mutable()->born_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SceneEntityAiInfo_default_instance_._instance.get_mutable()->servant_info_ = const_cast< ::proto::ServantInfo*>(
      ::proto::ServantInfo::internal_default_instance());
  _EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_._instance.get_mutable()->set_default_instance(_EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_._instance.get_mutable());
  _EntityRendererChangedInfo_ChangedRenderersEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneEntityInfo_PropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneEntityInfo_PropMapEntry_default_instance_._instance.get_mutable());
  _SceneEntityInfo_PropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneEntityInfo_FightPropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneEntityInfo_FightPropMapEntry_default_instance_._instance.get_mutable());
  _SceneEntityInfo_FightPropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneEntityInfo_AnimatorParaMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneEntityInfo_AnimatorParaMapEntry_default_instance_._instance.get_mutable());
  _SceneEntityInfo_AnimatorParaMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SceneEntityInfo_default_instance_._instance.get_mutable()->motion_info_ = const_cast< ::proto::MotionInfo*>(
      ::proto::MotionInfo::internal_default_instance());
  _SceneEntityInfo_default_instance_._instance.get_mutable()->ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _SceneEntityInfo_default_instance_.avatar_ = const_cast< ::proto::SceneAvatarInfo*>(
      ::proto::SceneAvatarInfo::internal_default_instance());
  _SceneEntityInfo_default_instance_.monster_ = const_cast< ::proto::SceneMonsterInfo*>(
      ::proto::SceneMonsterInfo::internal_default_instance());
  _SceneEntityInfo_default_instance_.npc_ = const_cast< ::proto::SceneNpcInfo*>(
      ::proto::SceneNpcInfo::internal_default_instance());
  _SceneEntityInfo_default_instance_.gadget_ = const_cast< ::proto::SceneGadgetInfo*>(
      ::proto::SceneGadgetInfo::internal_default_instance());
  _SceneEntityInfo_default_instance_._instance.get_mutable()->renderer_changed_info_ = const_cast< ::proto::EntityRendererChangedInfo*>(
      ::proto::EntityRendererChangedInfo::internal_default_instance());
  _SceneEntityInfo_default_instance_._instance.get_mutable()->ai_info_ = const_cast< ::proto::SceneEntityAiInfo*>(
      ::proto::SceneEntityAiInfo::internal_default_instance());
  _CreateGadgetInfo_default_instance_._instance.get_mutable()->chest_ = const_cast< ::proto::CreateGadgetInfo_Chest*>(
      ::proto::CreateGadgetInfo_Chest::internal_default_instance());
  _CreateEntityInfo_default_instance_.monster_id_ = 0u;
  _CreateEntityInfo_default_instance_.npc_id_ = 0u;
  _CreateEntityInfo_default_instance_.gadget_id_ = 0u;
  _CreateEntityInfo_default_instance_.item_id_ = 0u;
  _CreateEntityInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _CreateEntityInfo_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _CreateEntityInfo_default_instance_.gadget_ = const_cast< ::proto::CreateGadgetInfo*>(
      ::proto::CreateGadgetInfo::internal_default_instance());
  _TrialAvatarInfo_default_instance_._instance.get_mutable()->grant_record_ = const_cast< ::proto::TrialAvatarGrantRecord*>(
      ::proto::TrialAvatarGrantRecord::internal_default_instance());
  _AvatarInfo_PropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarInfo_PropMapEntry_default_instance_._instance.get_mutable());
  _AvatarInfo_PropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarInfo_FightPropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarInfo_FightPropMapEntry_default_instance_._instance.get_mutable());
  _AvatarInfo_FightPropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarInfo_SkillMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarInfo_SkillMapEntry_default_instance_._instance.get_mutable());
  _AvatarInfo_SkillMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarInfo_SkillLevelMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarInfo_SkillLevelMapEntry_default_instance_._instance.get_mutable());
  _AvatarInfo_SkillLevelMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.get_mutable());
  _AvatarInfo_ProudSkillExtraLevelMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _AvatarInfo_default_instance_._instance.get_mutable()->trial_avatar_info_ = const_cast< ::proto::TrialAvatarInfo*>(
      ::proto::TrialAvatarInfo::internal_default_instance());
  _AvatarInfo_default_instance_._instance.get_mutable()->fetter_info_ = const_cast< ::proto::AvatarFetterInfo*>(
      ::proto::AvatarFetterInfo::internal_default_instance());
  _Quest_LackedNpcMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_Quest_LackedNpcMapEntry_default_instance_._instance.get_mutable());
  _Quest_LackedNpcMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _NpcPositionInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MailItem_default_instance_._instance.get_mutable()->equip_param_ = const_cast< ::proto::EquipParam*>(
      ::proto::EquipParam::internal_default_instance());
  _MailItem_default_instance_._instance.get_mutable()->delete_info_ = const_cast< ::proto::MaterialDeleteInfo*>(
      ::proto::MaterialDeleteInfo::internal_default_instance());
  _MailData_default_instance_._instance.get_mutable()->mail_text_content_ = const_cast< ::proto::MailTextContent*>(
      ::proto::MailTextContent::internal_default_instance());
  _MapMarkPoint_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MassiveGrassInfo_default_instance_._instance.get_mutable()->center_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MassiveGrassInfo_default_instance_._instance.get_mutable()->size_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MassiveBoxInfo_default_instance_._instance.get_mutable()->center_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MassiveBoxInfo_default_instance_._instance.get_mutable()->extents_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MassiveBoxInfo_default_instance_._instance.get_mutable()->up_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MassiveBoxInfo_default_instance_._instance.get_mutable()->forward_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MassiveBoxInfo_default_instance_._instance.get_mutable()->right_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _ClientMassiveEntity_default_instance_.water_info_ = const_cast< ::proto::MassiveWaterInfo*>(
      ::proto::MassiveWaterInfo::internal_default_instance());
  _ClientMassiveEntity_default_instance_.grass_info_ = const_cast< ::proto::MassiveGrassInfo*>(
      ::proto::MassiveGrassInfo::internal_default_instance());
  _ClientMassiveEntity_default_instance_.box_info_ = const_cast< ::proto::MassiveBoxInfo*>(
      ::proto::MassiveBoxInfo::internal_default_instance());
  _ServerMassiveEntity_default_instance_.water_info_ = const_cast< ::proto::MassiveWaterInfo*>(
      ::proto::MassiveWaterInfo::internal_default_instance());
  _ServerMassiveEntity_default_instance_.grass_info_ = const_cast< ::proto::MassiveGrassInfo*>(
      ::proto::MassiveGrassInfo::internal_default_instance());
  _ServerMassiveEntity_default_instance_.box_info_ = const_cast< ::proto::MassiveBoxInfo*>(
      ::proto::MassiveBoxInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014define.proto\022\005proto\"\037\n\tParamList\022\022\n\npa"
      "ram_list\030\001 \003(\r\"O\n\tPropValue\022\014\n\004type\030\001 \001("
      "\r\022\016\n\004ival\030\002 \001(\003H\000\022\016\n\004fval\030\003 \001(\002H\000\022\013\n\003val"
      "\030\004 \001(\003B\007\n\005value\"\210\001\n\022RegionCustomConfig\022\027"
      "\n\017close_antidebug\030\001 \001(\010\022\022\n\nforce_kill\030\002 "
      "\001(\010\022\024\n\014antidebug_pc\030\003 \001(\010\022\025\n\rantidubug_i"
      "os\030\004 \001(\010\022\030\n\020antidubug_androd\030\005 \001(\010\"\214\001\n\020R"
      "egionSimpleInfo\022\014\n\004name\030\001 \001(\t\022\r\n\005title\030\002"
      " \001(\t\022\014\n\004type\030\003 \001(\t\022\024\n\014dispatch_url\030\004 \001(\t"
      "\0227\n\024region_custom_config\030\005 \001(\0132\031.proto.R"
      "egionCustomConfig\"\221\002\n\022ClientCustomConfig"
      "\022\017\n\007visitor\030\001 \001(\010\022\016\n\006sdkenv\030\002 \001(\t\022\021\n\tdeb"
      "ugmenu\030\003 \001(\010\022\026\n\016debuglogswitch\030\004 \003(\005\022\020\n\010"
      "debuglog\030\005 \001(\010\022=\n\ndevicelist\030\006 \003(\0132).pro"
      "to.ClientCustomConfig.DevicelistEntry\022\024\n"
      "\014loadjsondata\030\007 \001(\010\022\025\n\rshowexception\030\010 \001"
      "(\010\0321\n\017DevicelistEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
      "lue\030\002 \001(\t:\0028\001\"\352\001\n\026QueryRegionListHttpRsp"
      "\022\017\n\007retcode\030\001 \001(\005\022,\n\013region_list\030\002 \003(\0132\027"
      ".proto.RegionSimpleInfo\022\034\n\024client_custom"
      "_config\030\003 \001(\t\0220\n\rclient_config\030\004 \001(\0132\031.p"
      "roto.ClientCustomConfig\022\031\n\021client_secret"
      "_key\030\005 \001(\014\022&\n\036client_custom_config_encry"
      "pted\030\006 \001(\014\"]\n\017ForceUpdateInfo\022\030\n\020force_u"
      "pdate_url\030\001 \001(\t\0220\n\rclient_config\030\002 \001(\0132\031"
      ".proto.ClientCustomConfig\"@\n\016StopServerI"
      "nfo\022\027\n\017stop_begin_time\030\001 \001(\r\022\025\n\rstop_end"
      "_time\030\002 \001(\r\"]\n\020ResVersionConfig\022\017\n\007versi"
      "on\030\001 \001(\r\022\017\n\007relogin\030\002 \001(\010\022\013\n\003md5\030\003 \001(\t\022\032"
      "\n\022release_total_size\030\004 \001(\t\"\216\004\n\nRegionInf"
      "o\022\025\n\rgateserver_ip\030\001 \001(\t\022\027\n\017gateserver_p"
      "ort\030\002 \001(\r\022\030\n\020pay_callback_url\030\003 \001(\t\022\021\n\ta"
      "rea_type\030\007 \001(\t\022\024\n\014resource_url\030\010 \001(\t\022\020\n\010"
      "data_url\030\t \001(\t\022\024\n\014feedback_url\030\n \001(\t\022\024\n\014"
      "bulletin_url\030\013 \001(\t\022\030\n\020resource_url_bak\030\014"
      " \001(\t\022\024\n\014data_url_bak\030\r \001(\t\022\033\n\023client_dat"
      "a_version\030\016 \001(\r\022\023\n\013res_version\030\017 \001(\r\022\024\n\014"
      "handbook_url\030\020 \001(\t\022#\n\033client_silence_dat"
      "a_version\030\022 \001(\r\022\027\n\017client_data_md5\030\023 \001(\t"
      "\022\037\n\027client_silence_data_md5\030\024 \001(\t\022\017\n\007res"
      "_md5\030\025 \001(\t\0223\n\022res_version_config\030\026 \001(\0132\027"
      ".proto.ResVersionConfig\022\022\n\nsecret_key\030\027 "
      "\001(\014\022\036\n\026official_community_url\030\030 \001(\t\"\352\002\n\026"
      "QueryCurrRegionHttpRsp\022\017\n\007retcode\030\001 \001(\005\022"
      "\013\n\003msg\030\002 \001(\t\022&\n\013region_info\030\003 \001(\0132\021.prot"
      "o.RegionInfo\022.\n\014force_udpate\030\004 \001(\0132\026.pro"
      "to.ForceUpdateInfoH\000\022,\n\013stop_server\030\005 \001("
      "\0132\025.proto.StopServerInfoH\000\0220\n\rclient_con"
      "fig\030\n \001(\0132\031.proto.ClientCustomConfig\022\031\n\021"
      "client_secret_key\030\013 \001(\014\022&\n\036region_custom"
      "_config_encrypted\030\014 \001(\014\022-\n%client_region"
      "_custom_config_encrypted\030\r \001(\014B\010\n\006detail"
      "\"q\n\tReliquary\022\r\n\005level\030\001 \001(\r\022\013\n\003exp\030\002 \001("
      "\r\022\025\n\rpromote_level\030\003 \001(\r\022\024\n\014main_prop_id"
      "\030\004 \001(\r\022\033\n\023append_prop_id_list\030\005 \003(\r\"\234\001\n\006"
      "Weapon\022\r\n\005level\030\001 \001(\r\022\013\n\003exp\030\002 \001(\r\022\025\n\rpr"
      "omote_level\030\003 \001(\r\022.\n\taffix_map\030\004 \003(\0132\033.p"
      "roto.Weapon.AffixMapEntry\032/\n\rAffixMapEnt"
      "ry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\271\003\n\022M"
      "aterialDeleteInfo\022\031\n\021has_delete_config\030\001"
      " \001(\010\022F\n\021count_down_delete\030\002 \001(\0132).proto."
      "MaterialDeleteInfo.CountDownDeleteH\000\022\?\n\013"
      "date_delete\030\003 \001(\0132(.proto.MaterialDelete"
      "Info.DateTimeDeleteH\000\032\310\001\n\017CountDownDelet"
      "e\022\\\n\023delete_time_num_map\030\001 \003(\0132\?.proto.M"
      "aterialDeleteInfo.CountDownDelete.Delete"
      "TimeNumMapEntry\022\036\n\026config_count_down_tim"
      "e\030\002 \001(\r\0327\n\025DeleteTimeNumMapEntry\022\013\n\003key\030"
      "\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\032%\n\016DateTimeDele"
      "te\022\023\n\013delete_time\030\001 \001(\rB\r\n\013delete_info\"I"
      "\n\010Material\022\r\n\005count\030\001 \001(\r\022.\n\013delete_info"
      "\030\002 \001(\0132\031.proto.MaterialDeleteInfo\"Y\n\005Equ"
      "ip\022%\n\treliquary\030\001 \001(\0132\020.proto.ReliquaryH"
      "\000\022\037\n\006weapon\030\002 \001(\0132\r.proto.WeaponH\000B\010\n\006de"
      "tail\"s\n\004Item\022\017\n\007item_id\030\001 \001(\r\022\014\n\004guid\030\002 "
      "\001(\004\022#\n\010material\030\005 \001(\0132\017.proto.MaterialH\000"
      "\022\035\n\005equip\030\006 \001(\0132\014.proto.EquipH\000B\010\n\006detai"
      "l\"+\n\tItemParam\022\017\n\007item_id\030\001 \001(\r\022\r\n\005count"
      "\030\002 \001(\r\"Z\n\nEquipParam\022\017\n\007item_id\030\001 \001(\r\022\020\n"
      "\010item_num\030\002 \001(\r\022\022\n\nitem_level\030\003 \001(\r\022\025\n\rp"
      "romote_level\030\004 \001(\r\"6\n\016EquipParamList\022$\n\t"
      "item_list\030\001 \003(\0132\021.proto.EquipParam\"@\n\006Re"
      "ward\022\021\n\treward_id\030\001 \001(\r\022#\n\titem_list\030\002 \003"
      "(\0132\020.proto.ItemParam\"6\n\rAbilityString\022\r\n"
      "\003str\030\001 \001(\tH\000\022\016\n\004hash\030\002 \001(\rH\000B\006\n\004type\"\"\n\021"
      "AbilityFloatValue\022\r\n\005value\030\001 \001(\002\"\315\001\n\027Abi"
      "lityScalarValueEntry\022!\n\003key\030\001 \001(\0132\024.prot"
      "o.AbilityString\022,\n\nvalue_type\030\002 \001(\0162\030.pr"
      "oto.AbilityScalarType\022\025\n\013float_value\030\003 \001"
      "(\002H\000\022\026\n\014string_value\030\004 \001(\tH\000\022\023\n\tint_valu"
      "e\030\005 \001(\005H\000\022\024\n\nuint_value\030\006 \001(\rH\000B\007\n\005value"
      "\"\307\001\n\025AbilityAppliedAbility\022*\n\014ability_na"
      "me\030\001 \001(\0132\024.proto.AbilityString\022.\n\020abilit"
      "y_override\030\002 \001(\0132\024.proto.AbilityString\0224"
      "\n\014override_map\030\003 \003(\0132\036.proto.AbilityScal"
      "arValueEntry\022\034\n\024instanced_ability_id\030\004 \001"
      "(\r\"e\n\027AbilityAttachedModifier\022\022\n\nis_inva"
      "lid\030\001 \001(\010\022\027\n\017owner_entity_id\030\002 \001(\r\022\035\n\025in"
      "stanced_modifier_id\030\003 \001(\r\"H\n\022ModifierDur"
      "ability\022\024\n\014reduce_ratio\030\001 \001(\002\022\034\n\024remaini"
      "ng_durability\030\002 \001(\002\"\316\003\n\026AbilityAppliedMo"
      "difier\022\031\n\021modifier_local_id\030\001 \001(\005\022 \n\030par"
      "ent_ability_entity_id\030\002 \001(\r\0221\n\023parent_ab"
      "ility_name\030\003 \001(\0132\024.proto.AbilityString\0225"
      "\n\027parent_ability_override\030\004 \001(\0132\024.proto."
      "AbilityString\022\034\n\024instanced_ability_id\030\005 "
      "\001(\r\022\035\n\025instanced_modifier_id\030\006 \001(\r\022\026\n\016ex"
      "ist_duration\030\007 \001(\002\022C\n\033attached_instanced"
      "_modifier\030\010 \001(\0132\036.proto.AbilityAttachedM"
      "odifier\022\027\n\017apply_entity_id\030\t \001(\r\022\"\n\032is_a"
      "ttached_parent_ability\030\n \001(\010\0226\n\023modifier"
      "_durability\030\013 \001(\0132\031.proto.ModifierDurabi"
      "lity\"\327\001\n\024AbilitySyncStateInfo\022\021\n\tis_init"
      "ed\030\001 \001(\010\0229\n\021dynamic_value_map\030\002 \003(\0132\036.pr"
      "oto.AbilityScalarValueEntry\0227\n\021applied_a"
      "bilities\030\003 \003(\0132\034.proto.AbilityAppliedAbi"
      "lity\0228\n\021applied_modifiers\030\004 \003(\0132\035.proto."
      "AbilityAppliedModifier\")\n\006Vector\022\t\n\001x\030\001 "
      "\001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"-\n\nVector3Int\022"
      "\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\t\n\001z\030\003 \001(\005\"\244\001\n\nMot"
      "ionInfo\022\032\n\003pos\030\001 \001(\0132\r.proto.Vector\022\032\n\003r"
      "ot\030\002 \001(\0132\r.proto.Vector\022\034\n\005speed\030\003 \001(\0132\r"
      ".proto.Vector\022!\n\005state\030\004 \001(\0162\022.proto.Mot"
      "ionState\022\035\n\006params\030\005 \003(\0132\r.proto.Vector\""
      "C\n\tPlaceInfo\022\032\n\003pos\030\001 \001(\0132\r.proto.Vector"
      "\022\032\n\003rot\030\002 \001(\0132\r.proto.Vector\"\231\002\n\017SceneWe"
      "aponInfo\022\021\n\tentity_id\030\001 \001(\r\022\021\n\tgadget_id"
      "\030\002 \001(\r\022\017\n\007item_id\030\003 \001(\r\022\014\n\004guid\030\004 \001(\004\022\r\n"
      "\005level\030\005 \001(\r\022\025\n\rpromote_level\030\006 \001(\r\0221\n\014a"
      "bility_info\030\007 \001(\0132\033.proto.AbilitySyncSta"
      "teInfo\0227\n\taffix_map\030\010 \003(\0132$.proto.SceneW"
      "eaponInfo.AffixMapEntry\032/\n\rAffixMapEntry"
      "\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"Y\n\022Scen"
      "eReliquaryInfo\022\017\n\007item_id\030\001 \001(\r\022\014\n\004guid\030"
      "\002 \001(\004\022\r\n\005level\030\003 \001(\r\022\025\n\rpromote_level\030\004 "
      "\001(\r\"v\n\nServerBuff\022\027\n\017server_buff_uid\030\001 \001"
      "(\r\022\026\n\016server_buff_id\030\002 \001(\r\022\030\n\020server_buf"
      "f_type\030\003 \001(\r\022\035\n\025instanced_modifier_id\030\004 "
      "\001(\r\"\214\005\n\017SceneAvatarInfo\022\013\n\003uid\030\001 \001(\r\022\021\n\t"
      "avatar_id\030\002 \001(\r\022\014\n\004guid\030\003 \001(\004\022\017\n\007peer_id"
      "\030\004 \001(\r\022\025\n\requip_id_list\030\005 \003(\r\022\026\n\016skill_d"
      "epot_id\030\006 \001(\r\022\026\n\016talent_id_list\030\007 \003(\r\022&\n"
      "\006weapon\030\010 \001(\0132\026.proto.SceneWeaponInfo\0221\n"
      "\016reliquary_list\030\t \003(\0132\031.proto.SceneReliq"
      "uaryInfo\022\024\n\014buff_id_list\030\n \003(\r\022\036\n\026core_p"
      "roud_skill_level\030\013 \001(\r\022!\n\031inherent_proud"
      "_skill_list\030\014 \003(\r\022B\n\017skill_level_map\030\r \003"
      "(\0132).proto.SceneAvatarInfo.SkillLevelMap"
      "Entry\022X\n\033proud_skill_extra_level_map\030\016 \003"
      "(\01323.proto.SceneAvatarInfo.ProudSkillExt"
      "raLevelMapEntry\022+\n\020server_buff_list\030\017 \003("
      "\0132\021.proto.ServerBuff\0324\n\022SkillLevelMapEnt"
      "ry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\032>\n\034Pr"
      "oudSkillExtraLevelMapEntry\022\013\n\003key\030\001 \001(\r\022"
      "\r\n\005value\030\002 \001(\r:\0028\001\"\354\003\n\020SceneMonsterInfo\022"
      "\022\n\nmonster_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001(\r\022\021\n"
      "\tconfig_id\030\003 \001(\r\022+\n\013weapon_list\030\004 \003(\0132\026."
      "proto.SceneWeaponInfo\022\031\n\021authority_peer_"
      "id\030\005 \001(\r\022\022\n\naffix_list\030\006 \003(\r\022\020\n\010is_elite"
      "\030\007 \001(\010\022\027\n\017owner_entity_id\030\010 \001(\r\022\024\n\014summo"
      "ned_tag\030\t \001(\r\022A\n\016summon_tag_map\030\n \003(\0132)."
      "proto.SceneMonsterInfo.SummonTagMapEntry"
      "\022\017\n\007pose_id\030\013 \001(\r\022)\n\tborn_type\030\014 \001(\0162\026.p"
      "roto.MonsterBornType\022\020\n\010block_id\030\r \001(\r\022\021"
      "\n\tmark_flag\030\016 \001(\r\022\020\n\010title_id\030\017 \001(\r\022\027\n\017s"
      "pecial_name_id\030\020 \001(\r\0323\n\021SummonTagMapEntr"
      "y\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"Z\n\014Sce"
      "neNpcInfo\022\016\n\006npc_id\030\001 \001(\r\022\017\n\007room_id\030\002 \001"
      "(\r\022\027\n\017parent_quest_id\030\003 \001(\r\022\020\n\010block_id\030"
      "\004 \001(\r\"@\n\013WorktopInfo\022\023\n\013option_list\030\001 \003("
      "\r\022\034\n\024is_guest_can_operate\030\002 \001(\010\"<\n\016MathQ"
      "uaternion\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001"
      "(\002\022\t\n\001w\030\004 \001(\002\"\232\002\n\014PlatformInfo\022\020\n\010route_"
      "id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\005\022\030\n\020start_r"
      "oute_time\030\003 \001(\r\022\030\n\020start_scene_time\030\004 \001("
      "\r\022\027\n\017temp_route_time\030\005 \001(\r\022\035\n\025temp_start"
      "_route_time\030\006 \001(\r\022 \n\tstart_pos\030\007 \001(\0132\r.p"
      "roto.Vector\022\022\n\nis_started\030\010 \001(\010\022(\n\tstart"
      "_rot\030\t \001(\0132\025.proto.MathQuaternion\022\027\n\017sto"
      "p_scene_time\030\n \001(\r\"&\n\013WeatherInfo\022\027\n\017wea"
      "ther_area_id\030\001 \001(\r\"\213\001\n\020ClientGadgetInfo\022"
      "\017\n\007camp_id\030\001 \001(\r\022\021\n\tcamp_type\030\002 \001(\r\022\014\n\004g"
      "uid\030\003 \001(\004\022\027\n\017owner_entity_id\030\004 \001(\r\022\030\n\020ta"
      "rget_entity_id\030\005 \001(\r\022\022\n\nasync_load\030\006 \001(\010"
      "\"X\n\021AbilityGadgetInfo\022\017\n\007camp_id\030\001 \001(\r\022\030"
      "\n\020camp_target_type\030\002 \001(\r\022\030\n\020target_entit"
      "y_id\030\003 \001(\r\"<\n\020GatherGadgetInfo\022\017\n\007item_i"
      "d\030\001 \001(\r\022\027\n\017is_forbid_guest\030\002 \001(\010\"2\n\020Stat"
      "ueGadgetInfo\022\036\n\026opened_statue_uid_list\030\001"
      " \003(\r\"r\n\rBossChestInfo\022\031\n\021monster_config_"
      "id\030\001 \001(\r\022\023\n\013world_resin\030\002 \001(\r\022\027\n\017remain_"
      "uid_list\030\003 \003(\r\022\030\n\020qualify_uid_list\030\004 \003(\r"
      "\"m\n\020BlossomChestInfo\022\023\n\013world_resin\030\001 \001("
      "\r\022\030\n\020qualify_uid_list\030\002 \003(\r\022\027\n\017remain_ui"
      "d_list\030\003 \003(\r\022\021\n\tdead_time\030\004 \001(\r\"\376\005\n\017Scen"
      "eGadgetInfo\022\021\n\tgadget_id\030\001 \001(\r\022\020\n\010group_"
      "id\030\002 \001(\r\022\021\n\tconfig_id\030\003 \001(\r\022\027\n\017owner_ent"
      "ity_id\030\004 \001(\r\022(\n\tborn_type\030\005 \001(\0162\025.proto."
      "GadgetBornType\022\024\n\014gadget_state\030\006 \001(\r\022\023\n\013"
      "gadget_type\030\007 \001(\r\022\030\n\020is_show_cutscene\030\010 "
      "\001(\010\022\031\n\021authority_peer_id\030\t \001(\r\022\032\n\022is_ena"
      "ble_interact\030\n \001(\010\022\023\n\013interact_id\030\013 \001(\r\022"
      "\"\n\013trifle_item\030\014 \001(\0132\013.proto.ItemH\000\0220\n\rg"
      "ather_gadget\030\r \001(\0132\027.proto.GatherGadgetI"
      "nfoH\000\022%\n\007worktop\030\016 \001(\0132\022.proto.WorktopIn"
      "foH\000\0220\n\rclient_gadget\030\017 \001(\0132\027.proto.Clie"
      "ntGadgetInfoH\000\022\'\n\010platform\030\020 \001(\0132\023.proto"
      ".PlatformInfoH\000\022%\n\007weather\030\021 \001(\0132\022.proto"
      ".WeatherInfoH\000\0222\n\016ability_gadget\030\022 \001(\0132\030"
      ".proto.AbilityGadgetInfoH\000\0220\n\rstatue_gad"
      "get\030\023 \001(\0132\027.proto.StatueGadgetInfoH\000\022*\n\n"
      "boss_chest\030\024 \001(\0132\024.proto.BossChestInfoH\000"
      "\0220\n\rblossom_chest\030) \001(\0132\027.proto.BlossomC"
      "hestInfoH\000\022\021\n\tmark_flag\030\025 \001(\rB\t\n\007content"
      "\"v\n\032AnimatorParameterValueInfo\022\021\n\tpara_t"
      "ype\030\001 \001(\r\022\021\n\007int_val\030\002 \001(\005H\000\022\023\n\tfloat_va"
      "l\030\003 \001(\002H\000\022\022\n\010bool_val\030\004 \001(\010H\000B\t\n\007paraVal"
      "\"@\n\013ServantInfo\022\030\n\020master_entity_id\030\001 \001("
      "\r\022\027\n\017born_slot_index\030\002 \001(\r\"\333\002\n\021SceneEnti"
      "tyAiInfo\022\022\n\nis_ai_open\030\001 \001(\010\022\037\n\010born_pos"
      "\030\002 \001(\0132\r.proto.Vector\022>\n\014skill_cd_map\030\003 "
      "\003(\0132(.proto.SceneEntityAiInfo.SkillCdMap"
      "Entry\022(\n\014servant_info\030\004 \001(\0132\022.proto.Serv"
      "antInfo\022@\n\rai_threat_map\030\005 \003(\0132).proto.S"
      "ceneEntityAiInfo.AiThreatMapEntry\0321\n\017Ski"
      "llCdMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r"
      ":\0028\001\0322\n\020AiThreatMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n"
      "\005value\030\002 \001(\r:\0028\001\"\247\001\n\031EntityRendererChang"
      "edInfo\022Q\n\021changed_renderers\030\001 \003(\01326.prot"
      "o.EntityRendererChangedInfo.ChangedRende"
      "rersEntry\0327\n\025ChangedRenderersEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"\327\007\n\017SceneEnti"
      "tyInfo\022*\n\013entity_type\030\001 \001(\0162\025.proto.Prot"
      "EntityType\022\021\n\tentity_id\030\002 \001(\r\022\014\n\004name\030\003 "
      "\001(\t\022&\n\013motion_info\030\004 \001(\0132\021.proto.MotionI"
      "nfo\0225\n\010prop_map\030\005 \003(\0132#.proto.SceneEntit"
      "yInfo.PropMapEntry\022@\n\016fight_prop_map\030\006 \003"
      "(\0132(.proto.SceneEntityInfo.FightPropMapE"
      "ntry\022\022\n\nlife_state\030\007 \001(\r\0221\n\014ability_info"
      "\030\010 \001(\0132\033.proto.AbilitySyncStateInfo\022F\n\021a"
      "nimator_para_map\030\t \003(\0132+.proto.SceneEnti"
      "tyInfo.AnimatorParaMapEntry\022(\n\006avatar\030\n "
      "\001(\0132\026.proto.SceneAvatarInfoH\000\022*\n\007monster"
      "\030\013 \001(\0132\027.proto.SceneMonsterInfoH\000\022\"\n\003npc"
      "\030\014 \001(\0132\023.proto.SceneNpcInfoH\000\022(\n\006gadget\030"
      "\r \001(\0132\026.proto.SceneGadgetInfoH\000\022\?\n\025rende"
      "rer_changed_info\030\016 \001(\0132 .proto.EntityRen"
      "dererChangedInfo\022)\n\007ai_info\030\017 \001(\0132\030.prot"
      "o.SceneEntityAiInfo\022\037\n\027last_move_scene_t"
      "ime_ms\030\021 \001(\r\022\036\n\026last_move_reliable_seq\030\022"
      " \001(\r\022\032\n\022entity_client_data\030\023 \001(\014\032@\n\014Prop"
      "MapEntry\022\013\n\003key\030\001 \001(\r\022\037\n\005value\030\002 \001(\0132\020.p"
      "roto.PropValue:\0028\001\0323\n\021FightPropMapEntry\022"
      "\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\002:\0028\001\032Y\n\024Anima"
      "torParaMapEntry\022\013\n\003key\030\001 \001(\005\0220\n\005value\030\002 "
      "\001(\0132!.proto.AnimatorParameterValueInfo:\002"
      "8\001B\010\n\006entity\"\244\001\n\020CreateGadgetInfo\022(\n\tbor"
      "n_type\030\001 \001(\0162\025.proto.GadgetBornType\022,\n\005c"
      "hest\030\002 \001(\0132\035.proto.CreateGadgetInfo.Ches"
      "t\0328\n\005Chest\022\025\n\rchest_drop_id\030\001 \001(\r\022\030\n\020is_"
      "show_cutscene\030\002 \001(\010\"\261\002\n\020CreateEntityInfo"
      "\022\024\n\nmonster_id\030\001 \001(\rH\000\022\020\n\006npc_id\030\002 \001(\rH\000"
      "\022\023\n\tgadget_id\030\003 \001(\rH\000\022\021\n\007item_id\030\004 \001(\rH\000"
      "\022\r\n\005level\030\005 \001(\r\022\032\n\003pos\030\006 \001(\0132\r.proto.Vec"
      "tor\022\032\n\003rot\030\007 \001(\0132\r.proto.Vector\022\020\n\010scene"
      "_id\030\n \001(\r\022\017\n\007room_id\030\013 \001(\r\022\030\n\020client_uni"
      "que_id\030\014 \001(\r\022)\n\006gadget\030\r \001(\0132\027.proto.Cre"
      "ateGadgetInfoH\001B\010\n\006entityB\024\n\022entity_crea"
      "te_info\"|\n\026TrialAvatarGrantRecord\022\024\n\014gra"
      "nt_reason\030\001 \001(\r\022\034\n\024from_parent_quest_id\030"
      "\002 \001(\r\".\n\013GrantReason\022\013\n\007INVALID\020\000\022\022\n\016GRA"
      "NT_BY_QUEST\020\001\"\206\001\n\017TrialAvatarInfo\022\027\n\017tri"
      "al_avatar_id\030\001 \001(\r\022%\n\020trial_equip_list\030\002"
      " \003(\0132\013.proto.Item\0223\n\014grant_record\030\003 \001(\0132"
      "\035.proto.TrialAvatarGrantRecord\"\\\n\017Avatar"
      "SkillInfo\022\024\n\014pass_cd_time\030\001 \001(\r\022\031\n\021full_"
      "cd_time_list\030\002 \003(\r\022\030\n\020max_charge_count\030\003"
      " \001(\r\"O\n\020AvatarFetterInfo\022\022\n\nexp_number\030\001"
      " \001(\r\022\021\n\texp_level\030\002 \001(\r\022\024\n\014open_id_list\030"
      "\003 \003(\r\"z\n\024AvatarExpeditionInfo\022+\n\005state\030\001"
      " \001(\0162\034.proto.AvatarExpeditionState\022\016\n\006ex"
      "p_id\030\002 \001(\r\022\021\n\thour_time\030\003 \001(\r\022\022\n\nstart_t"
      "ime\030\004 \001(\r\"\372\007\n\nAvatarInfo\022\021\n\tavatar_id\030\001 "
      "\001(\r\022\014\n\004guid\030\002 \001(\004\0220\n\010prop_map\030\003 \003(\0132\036.pr"
      "oto.AvatarInfo.PropMapEntry\022\022\n\nlife_stat"
      "e\030\004 \001(\r\022\027\n\017equip_guid_list\030\005 \003(\004\022\026\n\016tale"
      "nt_id_list\030\006 \003(\r\022;\n\016fight_prop_map\030\007 \003(\013"
      "2#.proto.AvatarInfo.FightPropMapEntry\0221\n"
      "\021trial_avatar_info\030\t \001(\0132\026.proto.TrialAv"
      "atarInfo\0222\n\tskill_map\030\n \003(\0132\037.proto.Avat"
      "arInfo.SkillMapEntry\022\026\n\016skill_depot_id\030\013"
      " \001(\r\022,\n\013fetter_info\030\014 \001(\0132\027.proto.Avatar"
      "FetterInfo\022\036\n\026core_proud_skill_level\030\r \001"
      "(\r\022!\n\031inherent_proud_skill_list\030\016 \003(\r\022=\n"
      "\017skill_level_map\030\017 \003(\0132$.proto.AvatarInf"
      "o.SkillLevelMapEntry\0226\n\020expedition_state"
      "\030\020 \001(\0162\034.proto.AvatarExpeditionState\022S\n\033"
      "proud_skill_extra_level_map\030\021 \003(\0132..prot"
      "o.AvatarInfo.ProudSkillExtraLevelMapEntr"
      "y\022\020\n\010is_focus\030\022 \001(\010\022\023\n\013avatar_type\030\023 \001(\r"
      "\032@\n\014PropMapEntry\022\013\n\003key\030\001 \001(\r\022\037\n\005value\030\002"
      " \001(\0132\020.proto.PropValue:\0028\001\0323\n\021FightPropM"
      "apEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\002:\0028\001\032"
      "G\n\rSkillMapEntry\022\013\n\003key\030\001 \001(\r\022%\n\005value\030\002"
      " \001(\0132\026.proto.AvatarSkillInfo:\0028\001\0324\n\022Skil"
      "lLevelMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001"
      "(\r:\0028\001\032>\n\034ProudSkillExtraLevelMapEntry\022\013"
      "\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\357\002\n\005Quest"
      "\022\020\n\010quest_id\030\001 \001(\r\022\r\n\005state\030\002 \001(\r\022\022\n\nsta"
      "rt_time\030\004 \001(\r\022\021\n\tis_random\030\005 \001(\010\022\027\n\017pare"
      "nt_quest_id\030\006 \001(\r\022\027\n\017quest_config_id\030\007 \001"
      "(\r\022\027\n\017start_game_time\030\010 \001(\r\022\023\n\013accept_ti"
      "me\030\t \001(\r\022\027\n\017lacked_npc_list\030\n \003(\r\022\034\n\024fin"
      "ish_progress_list\030\013 \003(\r\022\032\n\022fail_progress"
      "_list\030\014 \003(\r\0226\n\016lacked_npc_map\030\r \003(\0132\036.pr"
      "oto.Quest.LackedNpcMapEntry\0323\n\021LackedNpc"
      "MapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001"
      "\"=\n\017NpcPositionInfo\022\016\n\006npc_id\030\001 \001(\r\022\032\n\003p"
      "os\030\002 \001(\0132\r.proto.Vector\"A\n\017MailTextConte"
      "nt\022\r\n\005title\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\016\n\006se"
      "nder\030\003 \001(\t\"b\n\010MailItem\022&\n\013equip_param\030\001 "
      "\001(\0132\021.proto.EquipParam\022.\n\013delete_info\030\002 "
      "\001(\0132\031.proto.MaterialDeleteInfo\"\234\002\n\010MailD"
      "ata\022\017\n\007mail_id\030\001 \001(\r\0221\n\021mail_text_conten"
      "t\030\004 \001(\0132\026.proto.MailTextContent\022\"\n\titem_"
      "list\030\007 \003(\0132\017.proto.MailItem\022\021\n\tsend_time"
      "\030\010 \001(\r\022\023\n\013expire_time\030\t \001(\r\022\022\n\nimportanc"
      "e\030\n \001(\r\022\017\n\007is_read\030\013 \001(\010\022\031\n\021is_attachmen"
      "t_got\030\014 \001(\010\022\021\n\tconfig_id\030\r \001(\r\022\025\n\rargume"
      "nt_list\030\016 \003(\tJ\004\010\002\020\003J\004\010\003\020\004J\004\010\005\020\006J\004\010\006\020\007\"\277\001"
      "\n\020OnlinePlayerInfo\022\013\n\003uid\030\001 \001(\r\022\020\n\010nickn"
      "ame\030\002 \001(\t\022\024\n\014player_level\030\003 \001(\r\022\021\n\tavata"
      "r_id\030\004 \001(\r\022-\n\017mp_setting_type\030\005 \001(\0162\024.pr"
      "oto.MpSettingType\022\037\n\027cur_player_num_in_w"
      "orld\030\006 \001(\r\022\023\n\013world_level\030\007 \001(\r\"&\n\010Birth"
      "day\022\r\n\005month\030\001 \001(\r\022\013\n\003day\030\002 \001(\r\"\310\001\n\014MapM"
      "arkPoint\022\020\n\010scene_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t"
      "\022\032\n\003pos\030\003 \001(\0132\r.proto.Vector\022+\n\npoint_ty"
      "pe\030\004 \001(\0162\027.proto.MapMarkPointType\022\022\n\nmon"
      "ster_id\030\005 \001(\r\022)\n\tfrom_type\030\006 \001(\0162\026.proto"
      ".MapMarkFromType\022\020\n\010quest_id\030\007 \001(\r\"\036\n\020Ma"
      "ssiveWaterInfo\022\n\n\002id\030\001 \001(\003\"Z\n\020MassiveGra"
      "ssInfo\022\n\n\002id\030\001 \001(\r\022\035\n\006center\030\002 \001(\0132\r.pro"
      "to.Vector\022\033\n\004size\030\003 \001(\0132\r.proto.Vector\"\306"
      "\001\n\016MassiveBoxInfo\022\n\n\002id\030\001 \001(\005\022\020\n\010configI"
      "d\030\002 \001(\r\022\035\n\006center\030\003 \001(\0132\r.proto.Vector\022\036"
      "\n\007extents\030\004 \001(\0132\r.proto.Vector\022\031\n\002up\030\005 \001"
      "(\0132\r.proto.Vector\022\036\n\007forward\030\006 \001(\0132\r.pro"
      "to.Vector\022\034\n\005right\030\007 \001(\0132\r.proto.Vector\""
      "\345\001\n\023ClientMassiveEntity\022\023\n\013entity_type\030\001"
      " \001(\r\022\021\n\tconfig_id\030\002 \001(\r\022\016\n\006obj_id\030\003 \001(\003\022"
      "-\n\nwater_info\030\004 \001(\0132\027.proto.MassiveWater"
      "InfoH\000\022-\n\ngrass_info\030\005 \001(\0132\027.proto.Massi"
      "veGrassInfoH\000\022)\n\010box_info\030\006 \001(\0132\025.proto."
      "MassiveBoxInfoH\000B\r\n\013entity_info\"\224\002\n\023Serv"
      "erMassiveEntity\022\023\n\013entity_type\030\001 \001(\r\022\021\n\t"
      "config_id\030\002 \001(\r\022\022\n\nruntime_id\030\003 \001(\r\022\031\n\021a"
      "uthority_peer_id\030\004 \001(\r\022\016\n\006obj_id\030\005 \001(\003\022-"
      "\n\nwater_info\030\006 \001(\0132\027.proto.MassiveWaterI"
      "nfoH\000\022-\n\ngrass_info\030\007 \001(\0132\027.proto.Massiv"
      "eGrassInfoH\000\022)\n\010box_info\030\010 \001(\0132\025.proto.M"
      "assiveBoxInfoH\000B\r\n\013entity_info\"P\n\022Massiv"
      "eEntityState\022\023\n\013entity_type\030\001 \001(\r\022\016\n\006obj"
      "_id\030\002 \001(\003\022\025\n\relement_state\030\003 \001(\r\"q\n\020Enti"
      "tyClientData\022\036\n\026wind_change_scene_time\030\001"
      " \001(\r\022\033\n\023windmill_sync_angle\030\002 \001(\002\022 \n\030win"
      "d_change_target_level\030\003 \001(\005\"W\n\tBlockInfo"
      "\022\020\n\010block_id\030\001 \001(\r\022\024\n\014data_version\030\002 \001(\r"
      "\022\020\n\010bin_data\030\003 \001(\014\022\020\n\010is_dirty\030\004 \001(\010*\241\003\n"
      "\nENetReason\022\020\n\014ENET_TIMEOUT\020\000\022\025\n\021ENET_CL"
      "IENT_CLOSE\020\001\022\033\n\027ENET_CLIENT_REBIND_FAIL\020"
      "\002\022\030\n\024ENET_CLIENT_SHUTDOWN\020\003\022\027\n\023ENET_SERV"
      "ER_RELOGIN\020\004\022\024\n\020ENET_SERVER_KICK\020\005\022\030\n\024EN"
      "ET_SERVER_SHUTDOWN\020\006\022\032\n\026ENET_NOT_FOUND_S"
      "ESSION\020\007\022\031\n\025ENET_LOGIN_UNFINISHED\020\010\022\035\n\031E"
      "NET_PACKET_FREQ_TOO_HIGH\020\t\022\025\n\021ENET_PING_"
      "TIMEOUT\020\n\022\027\n\023ENET_TRANFER_FAILED\020\013\022\033\n\027EN"
      "ET_SERVER_KILL_CLIENT\020\014\022\037\n\027ENET_CLIENT_C"
      "ONNECT_KEY\020\322\205\330\314\004\022&\n\036ENET_CLIENT_EDITOR_C"
      "ONNECT_KEY\020\261\321\371\326\003*\250\002\n\013AccountType\022\020\n\014ACCO"
      "UNT_NONE\020\000\022\022\n\016ACCOUNT_MIHOYO\020\001\022\022\n\016ACCOUN"
      "T_XIAOMI\020\013\022\023\n\017ACCOUNT_COOLPAD\020\014\022\017\n\013ACCOU"
      "NT_YYB\020\r\022\020\n\014ACCOUNT_BILI\020\016\022\022\n\016ACCOUNT_HU"
      "AWEI\020\017\022\021\n\rACCOUNT_MEIZU\020\020\022\017\n\013ACCOUNT_360"
      "\020\021\022\020\n\014ACCOUNT_OPPO\020\022\022\020\n\014ACCOUNT_VIVO\020\023\022\016"
      "\n\nACCOUNT_UC\020\024\022\024\n\020ACCOUNT_WANDOJIA\020\025\022\022\n\016"
      "ACCOUNT_LENOVO\020\026\022\021\n\rACCOUNT_JINLI\020\027*\327\002\n\013"
      "ServiceType\022\020\n\014SERVICE_NONE\020\000\022\022\n\016SERVICE"
      "_CLIENT\020\001\022\020\n\014SERVICE_GATE\020\002\022\020\n\014SERVICE_G"
      "AME\020\003\022\020\n\014SERVICE_NODE\020\004\022\016\n\nSERVICE_DB\020\005\022"
      "\017\n\013SERVICE_SNS\020\006\022\024\n\020SERVICE_DISPATCH\020\007\022\020"
      "\n\014SERVICE_MUIP\020\010\022\027\n\023SERVICE_OFFLINE_MSG\020"
      "\t\022\020\n\014SERVICE_MAIL\020\n\022\016\n\nSERVICE_MP\020\013\022\025\n\021S"
      "ERVICE_HTTPPROXY\020\014\022\024\n\020SERVICE_ACTIVITY\020\r"
      "\022\027\n\023SERVICE_PATHFINDING\020\016\022\022\n\016SERVICE_SOC"
      "IAL\020\017\022\016\n\nSERVICE_OA\020\020*0\n\nClientType\022\022\n\016C"
      "LIENT_PRODUCT\020\000\022\016\n\nCLIENT_DEV\020\001*Y\n\nRegio"
      "nType\022\022\n\016REGION_PRODUCT\020\000\022\017\n\013REGION_EXAM"
      "\020\001\022\022\n\016REGION_DEV_PUB\020\002\022\022\n\016REGION_DEV_PRI"
      "\020\003*\217\027\n\020ActionReasonType\022\026\n\022ACTION_REASON"
      "_NONE\020\000\022\034\n\030ACTION_REASON_QUEST_ITEM\020\001\022\036\n"
      "\032ACTION_REASON_QUEST_REWARD\020\002\022\030\n\024ACTION_"
      "REASON_TRIFLE\020\003\022\026\n\022ACTION_REASON_SHOP\020\004\022"
      "\'\n#ACTION_REASON_PLAYER_UPGRADE_REWARD\020\005"
      "\022\034\n\030ACTION_REASON_ADD_AVATAR\020\006\022#\n\037ACTION"
      "_REASON_GADGET_ENV_ANIMAL\020\007\022$\n ACTION_RE"
      "ASON_MONSTER_ENV_ANIMAL\020\010\022\032\n\026ACTION_REAS"
      "ON_COMPOUND\020\t\022\026\n\022ACTION_REASON_COOK\020\n\022\030\n"
      "\024ACTION_REASON_GATHER\020\013\022!\n\035ACTION_REASON"
      "_MAIL_ATTACHMENT\020\014\022%\n!ACTION_REASON_CITY"
      "_LEVELUP_RETURN\020\017\022%\n!ACTION_REASON_CITY_"
      "LEVELUP_REWARD\020\021\022%\n!ACTION_REASON_AREA_E"
      "XPLORE_REWARD\020\022\022%\n!ACTION_REASON_UNLOCK_"
      "POINT_REWARD\020\023\022$\n ACTION_REASON_DUNGEON_"
      "FIRST_PASS\020\024\022\036\n\032ACTION_REASON_DUNGEON_PA"
      "SS\020\025\022\"\n\036ACTION_REASON_CHANGE_ELEM_TYPE\020\027"
      "\022\035\n\031ACTION_REASON_FETTER_OPEN\020\031\022\"\n\036ACTIO"
      "N_REASON_DAILY_TASK_SCORE\020\032\022!\n\035ACTION_RE"
      "ASON_DAILY_TASK_HOST\020\033\022 \n\034ACTION_REASON_"
      "RAND_TASK_HOST\020\034\022\034\n\030ACTION_REASON_EXPEDI"
      "TION\020\035\022\027\n\023ACTION_REASON_GACHA\020\036\022\031\n\025ACTIO"
      "N_REASON_COMBINE\020\037\022!\n\035ACTION_REASON_RAND"
      "_TASK_GUEST\020 \022\"\n\036ACTION_REASON_DAILY_TAS"
      "K_GUEST\020!\022\036\n\032ACTION_REASON_FORGE_OUTPUT\020"
      "\"\022\036\n\032ACTION_REASON_FORGE_RETURN\020#\022\035\n\031ACT"
      "ION_REASON_INIT_AVATAR\020$\022\035\n\031ACTION_REASO"
      "N_MONSTER_DIE\020%\022\024\n\020ACTION_REASON_GM\020&\022\034\n"
      "\030ACTION_REASON_OPEN_CHEST\020\'\022\034\n\030ACTION_RE"
      "ASON_GADGET_DIE\020(\022#\n\037ACTION_REASON_MONST"
      "ER_CHANGE_HP\020)\022\037\n\033ACTION_REASON_SUBFIELD"
      "_DROP\020*\022\"\n\036ACTION_REASON_PUSH_TIPS_REWAR"
      "D\020+\022\'\n#ACTION_REASON_ACTIVITY_MONSTER_DR"
      "OP\020,\022!\n\035ACTION_REASON_ACTIVITY_GATHER\020-\022"
      "(\n$ACTION_REASON_ACTIVITY_SUBFIELD_DROP\020"
      ".\022\'\n#ACTION_REASON_TOWER_SCHEDULE_REWARD"
      "\020/\022)\n%ACTION_REASON_TOWER_FLOOR_STAR_REW"
      "ARD\0200\022)\n%ACTION_REASON_TOWER_FIRST_PASS_"
      "REWARD\0201\022$\n ACTION_REASON_TOWER_DAILY_RE"
      "WARD\0202\022+\n\'ACTION_REASON_HIT_CLIENT_TRIVI"
      "AL_ENTITY\0203\022\'\n#ACTION_REASON_OPEN_WORLD_"
      "BOSS_CHEST\0204\022(\n$ACTION_REASON_MATERIAL_D"
      "ELETE_RETURN\0205\022 \n\034ACTION_REASON_SIGN_IN_"
      "REWARD\0206\022$\n ACTION_REASON_OPEN_BLOSSOM_C"
      "HEST\0207\022\032\n\026ACTION_REASON_RECHARGE\0208\022\'\n#AC"
      "TION_REASON_BONUS_ACTIVITY_REWARD\0209\022\"\n\035A"
      "CTION_REASON_PLAYER_USE_ITEM\020\351\007\022\034\n\027ACTIO"
      "N_REASON_DROP_ITEM\020\352\007\022!\n\034ACTION_REASON_W"
      "EAPON_UPGRADE\020\363\007\022!\n\034ACTION_REASON_WEAPON"
      "_PROMOTE\020\364\007\022 \n\033ACTION_REASON_WEAPON_AWAK"
      "EN\020\365\007\022 \n\033ACTION_REASON_RELIC_UPGRADE\020\366\007\022"
      "\032\n\025ACTION_REASON_ABILITY\020\367\007\022&\n!ACTION_RE"
      "ASON_DUNGEON_STATUE_DROP\020\370\007\022\036\n\031ACTION_RE"
      "ASON_OFFLINE_MSG\020\371\007\022!\n\034ACTION_REASON_AVA"
      "TAR_UPGRADE\020\372\007\022!\n\034ACTION_REASON_AVATAR_P"
      "ROMOTE\020\373\007\022\037\n\032ACTION_REASON_QUEST_ACTION\020"
      "\375\007\022\037\n\032ACTION_REASON_CITY_LEVELUP\020\376\007\022 \n\033A"
      "CTION_REASON_UPGRADE_SKILL\020\200\010\022 \n\033ACTION_"
      "REASON_UNLOCK_TALENT\020\201\010\022&\n!ACTION_REASON"
      "_UPGRADE_PROUD_SKILL\020\202\010\022(\n#ACTION_REASON"
      "_PLAYER_LEVEL_LIMIT_UP\020\203\010\022 \n\033ACTION_REAS"
      "ON_DUNGEON_DAILY\020\204\010\022\036\n\031ACTION_REASON_ITE"
      "M_GIVING\020\206\010\022\035\n\030ACTION_REASON_FORGE_COST\020"
      "\207\010\022\'\n\"ACTION_REASON_INVESTIGATION_REWARD"
      "\020\210\010\022.\n)ACTION_REASON_INVESTIGATION_TARGE"
      "T_REWARD\020\211\010\022\"\n\035ACTION_REASON_GADGET_INTE"
      "RACT\020\212\010\022\'\n\"ACTION_REASON_SEA_LAMP_CI_MAT"
      "ERIAL\020\214\010\022/\n*ACTION_REASON_SEA_LAMP_CONTR"
      "IBUTION_REWARD\020\215\010\022(\n#ACTION_REASON_SEA_L"
      "AMP_PHASE_REWARD\020\216\010\022$\n\037ACTION_REASON_SEA"
      "_LAMP_FLY_LAMP\020\217\010\022\037\n\032ACTION_REASON_AUTO_"
      "RECOVER\020\220\010\022\'\n\"ACTION_REASON_ACTIVITY_EXP"
      "IRE_ITEM\020\221\010\022$\n\037ACTION_REASON_SUB_COIN_NE"
      "GATIVE\020\222\010\022!\n\034ACTION_REASON_BARGAIN_DEDUC"
      "T\020\223\010*<\n\tStoreType\022\016\n\nSTORE_NONE\020\000\022\016\n\nSTO"
      "RE_PACK\020\001\022\017\n\013STORE_DEPOT\020\002*\343\001\n\013VirtualIt"
      "em\022\025\n\021ITEM_VIRTUAL_NONE\020\000\022\033\n\027ITEM_VIRTUA"
      "L_AVATAR_EXP\020e\022\033\n\027ITEM_VIRTUAL_PLAYER_EX"
      "P\020f\022\033\n\027ITEM_VIRTUAL_FETTER_EXP\020i\022\026\n\022ITEM"
      "_VIRTUAL_RESIN\020j\022\034\n\030ITEM_VIRTUAL_WORLD_R"
      "ESIN\020k\022\027\n\022ITEM_VIRTUAL_HCOIN\020\311\001\022\027\n\022ITEM_"
      "VIRTUAL_SCOIN\020\312\001*\354\001\n\021AbilityScalarType\022\036"
      "\n\032ABILITY_SCALAR_TYPE_UNKNOW\020\000\022\035\n\031ABILIT"
      "Y_SCALAR_TYPE_FLOAT\020\001\022\033\n\027ABILITY_SCALAR_"
      "TYPE_INT\020\002\022\034\n\030ABILITY_SCALAR_TYPE_BOOL\020\003"
      "\022\037\n\033ABILITY_SCALAR_TYPE_TRIGGER\020\004\022\036\n\032ABI"
      "LITY_SCALAR_TYPE_STRING\020\005\022\034\n\030ABILITY_SCA"
      "LAR_TYPE_UINT\020\006*\367\007\n\013MotionState\022\017\n\013MOTIO"
      "N_NONE\020\000\022\020\n\014MOTION_RESET\020\001\022\022\n\016MOTION_STA"
      "NDBY\020\002\022\027\n\023MOTION_STANDBY_MOVE\020\003\022\017\n\013MOTIO"
      "N_WALK\020\004\022\016\n\nMOTION_RUN\020\005\022\017\n\013MOTION_DASH\020"
      "\006\022\020\n\014MOTION_CLIMB\020\007\022\025\n\021MOTION_CLIMB_JUMP"
      "\020\010\022\033\n\027MOTION_STANDBY_TO_CLIMB\020\t\022\020\n\014MOTIO"
      "N_FIGHT\020\n\022\017\n\013MOTION_JUMP\020\013\022\017\n\013MOTION_DRO"
      "P\020\014\022\016\n\nMOTION_FLY\020\r\022\024\n\020MOTION_SWIM_MOVE\020"
      "\016\022\024\n\020MOTION_SWIM_IDLE\020\017\022\024\n\020MOTION_SWIM_D"
      "ASH\020\020\022\024\n\020MOTION_SWIM_JUMP\020\021\022\017\n\013MOTION_SL"
      "IP\020\022\022\026\n\022MOTION_GO_UPSTAIRS\020\023\022\031\n\025MOTION_F"
      "ALL_ON_GROUND\020\024\022#\n\037MOTION_JUMP_UP_WALL_F"
      "OR_STANDBY\020\025\022\030\n\024MOTION_JUMP_OFF_WALL\020\026\022\026"
      "\n\022MOTION_POWERED_FLY\020\027\022\026\n\022MOTION_LADDER_"
      "IDLE\020\030\022\026\n\022MOTION_LADDER_MOVE\020\031\022\026\n\022MOTION"
      "_LADDER_SLIP\020\032\022\034\n\030MOTION_STANDBY_TO_LADD"
      "ER\020\033\022\034\n\030MOTION_LADDER_TO_STANDBY\020\034\022\031\n\025MO"
      "TION_DANGER_STANDBY\020\035\022\036\n\032MOTION_DANGER_S"
      "TANDBY_MOVE\020\036\022\026\n\022MOTION_DANGER_WALK\020\037\022\025\n"
      "\021MOTION_DANGER_RUN\020 \022\026\n\022MOTION_DANGER_DA"
      "SH\020!\022\026\n\022MOTION_CROUCH_IDLE\020\"\022\026\n\022MOTION_C"
      "ROUCH_MOVE\020#\022\026\n\022MOTION_CROUCH_ROLL\020$\022\021\n\r"
      "MOTION_NOTIFY\020%\022\025\n\021MOTION_LAND_SPEED\020&\022\030"
      "\n\024MOTION_MOVE_FAIL_ACK\020\'\022\024\n\020MOTION_WATER"
      "FALL\020(\022\034\n\030MOTION_DASH_BEFORE_SHAKE\020)\022\023\n\017"
      "MOTION_SIT_IDLE\020*\022\016\n\nMOTION_NUM\020+*\311\002\n\016Pr"
      "otEntityType\022\024\n\020PROT_ENTITY_NONE\020\000\022\026\n\022PR"
      "OT_ENTITY_AVATAR\020\001\022\027\n\023PROT_ENTITY_MONSTE"
      "R\020\002\022\023\n\017PROT_ENTITY_NPC\020\003\022\026\n\022PROT_ENTITY_"
      "GADGET\020\004\022\026\n\022PROT_ENTITY_REGION\020\005\022\026\n\022PROT"
      "_ENTITY_WEAPON\020\006\022\027\n\023PROT_ENTITY_WEATHER\020"
      "\007\022\025\n\021PROT_ENTITY_SCENE\020\010\022\024\n\020PROT_ENTITY_"
      "TEAM\020\t\022\036\n\032PROT_ENTITY_MASSIVE_ENTITY\020\n\022\030"
      "\n\024PROT_ENTITY_MP_LEVEL\020\013\022\023\n\017PROT_ENTITY_"
      "MAX\020\014*I\n\014NpcTalkState\022\021\n\rNPC_TALK_NONE\020\000"
      "\022\021\n\rNPC_TALK_AUTO\020\001\022\023\n\017NPC_TALK_MANUAL\020\002"
      "*[\n\017MonsterBornType\022\025\n\021MONSTER_BORN_NONE"
      "\020\000\022\030\n\024MONSTER_BORN_DEFAULT\020\001\022\027\n\023MONSTER_"
      "BORN_RANDOM\020\002*\300\001\n\016GadgetBornType\022\024\n\020GADG"
      "ET_BORN_NONE\020\000\022\026\n\022GADGET_BORN_IN_AIR\020\001\022\026"
      "\n\022GADGET_BORN_PLAYER\020\002\022\033\n\027GADGET_BORN_MO"
      "NSTER_HIT\020\003\022\033\n\027GADGET_BORN_MONSTER_DIE\020\004"
      "\022\026\n\022GADGET_BORN_GADGET\020\005\022\026\n\022GADGET_BORN_"
      "GROUND\020\006*\241\004\n\rChangHpReason\022\022\n\016CHANGE_HP_"
      "NONE\020\000\022\030\n\024CHANGE_HP_SUB_AVATAR\020\001\022\031\n\025CHAN"
      "GE_HP_SUB_MONSTER\020\002\022\026\n\022CHANGE_HP_SUB_GEA"
      "R\020\003\022\027\n\023CHANGE_HP_SUB_ENVIR\020\004\022\026\n\022CHANGE_H"
      "P_SUB_FALL\020\005\022\027\n\023CHANGE_HP_SUB_DRAWN\020\006\022\027\n"
      "\023CHANGE_HP_SUB_ABYSS\020\007\022\031\n\025CHANGE_HP_SUB_"
      "ABILITY\020\010\022\030\n\024CHANGE_HP_SUB_SUMMON\020\t\022\030\n\024C"
      "HANGE_HP_SUB_SCRIPT\020\n\022\024\n\020CHANGE_HP_SUB_G"
      "M\020\013\022\033\n\027CHANGE_HP_SUB_KILL_SELF\020\014\022\024\n\020CHAN"
      "GE_HP_BY_LUA\0203\022\031\n\025CHANGE_HP_ADD_ABILITY\020"
      "e\022\026\n\022CHANGE_HP_ADD_ITEM\020f\022\030\n\024CHANGE_HP_A"
      "DD_REVIVE\020g\022\031\n\025CHANGE_HP_ADD_UPGRADE\020h\022\030"
      "\n\024CHANGE_HP_ADD_STATUE\020i\022\034\n\030CHANGE_HP_AD"
      "D_BACKGROUND\020j\022\024\n\020CHANGE_HP_ADD_GM\020k*\265\001\n"
      "\rPlayerDieType\022\023\n\017PLAYER_DIE_NONE\020\000\022\036\n\032P"
      "LAYER_DIE_KILL_BY_MONSTER\020\001\022\033\n\027PLAYER_DI"
      "E_KILL_BY_GEAR\020\002\022\023\n\017PLAYER_DIE_FALL\020\003\022\024\n"
      "\020PLAYER_DIE_DRAWN\020\004\022\024\n\020PLAYER_DIE_ABYSS\020"
      "\005\022\021\n\rPLAYER_DIE_GM\020\006*_\n\017PlayerDieOption\022"
      "\020\n\014DIE_OPT_NONE\020\000\022\022\n\016DIE_OPT_REPLAY\020\001\022\022\n"
      "\016DIE_OPT_CANCEL\020\002\022\022\n\016DIE_OPT_REVIVE\020\003*\246\001"
      "\n\025AvatarExpeditionState\022\032\n\026AVATAR_EXPEDI"
      "TION_NONE\020\000\022\033\n\027AVATAR_EXPEDITION_DOING\020\001"
      "\022(\n$AVATAR_EXPEDITION_FINISH_WAIT_REWARD"
      "\020\002\022*\n&AVATAR_EXPEDITION_CALLBACK_WAIT_RE"
      "WARD\020\003*i\n\nAvatarType\022\024\n\020AVATAR_TYPE_NONE"
      "\020\000\022\026\n\022AVATAR_TYPE_FORMAL\020\001\022\025\n\021AVATAR_TYP"
      "E_TRIAL\020\002\022\026\n\022AVATAR_TYPE_MIRROR\020\003*I\n\020Eve"
      "ntTriggerType\022\026\n\022EVENT_TRIGGER_NONE\020\000\022\035\n"
      "\031EVENT_TRIGGER_ENTER_FORCE\020\001*g\n\rMpSettin"
      "gType\022\027\n\023MP_SETTING_NO_ENTER\020\000\022\033\n\027MP_SET"
      "TING_ENTER_FREELY\020\001\022 \n\034MP_SETTING_ENTER_"
      "AFTER_APPLY\020\002*\231\001\n\022MathExpressionType\022\022\n\016"
      "MATH_EXPR_NONE\020\000\022\023\n\017MATH_EXPR_LEVEL\020\001\022\033\n"
      "\027MATH_EXPR_REGISTER_TIME\020\002\022\035\n\031MATH_EXPR_"
      "LAST_LOGIN_TIME\020\003\022\036\n\032MATH_EXPR_TOTAL_LOG"
      "IN_DAYS\020\004*L\n\025LoginRewardConfigType\022\033\n\027LO"
      "GIN_REWARD_IMMEDIDATE\020\000\022\026\n\022LOGIN_REWARD_"
      "FIRST\020\001*\376\001\n\014LanguageType\022\021\n\rLANGUAGE_NON"
      "E\020\000\022\017\n\013LANGUAGE_EN\020\001\022\017\n\013LANGUAGE_SC\020\002\022\017\n"
      "\013LANGUAGE_TC\020\003\022\017\n\013LANGUAGE_FR\020\004\022\017\n\013LANGU"
      "AGE_DE\020\005\022\017\n\013LANGUAGE_ES\020\006\022\017\n\013LANGUAGE_PT"
      "\020\007\022\017\n\013LANGUAGE_RU\020\010\022\017\n\013LANGUAGE_JP\020\t\022\017\n\013"
      "LANGUAGE_KR\020\n\022\017\n\013LANGUAGE_TH\020\013\022\017\n\013LANGUA"
      "GE_VN\020\014\022\017\n\013LANGUAGE_ID\020\r*o\n\014PlatformType"
      "\022\n\n\006EDITOR\020\000\022\007\n\003IOS\020\001\022\013\n\007ANDROID\020\002\022\006\n\002PC"
      "\020\003\022\007\n\003PS4\020\004\022\n\n\006SERVER\020\005\022\021\n\rCLOUD_ANDROID"
      "\020\006\022\r\n\tCLOUD_IOS\020\007*Z\n\020MapMarkPointType\022\007\n"
      "\003NPC\020\000\022\t\n\005QUEST\020\001\022\013\n\007SPECIAL\020\002\022\010\n\004MINE\020\003"
      "\022\016\n\nCOLLECTION\020\004\022\013\n\007MONSTER\020\005*k\n\017MapMark"
      "FromType\022\032\n\026MAP_MARK_FROM_TYPE_NOE\020\000\022\036\n\032"
      "MAP_MARK_FROM_TYPE_MONSTER\020\001\022\034\n\030MAP_MARK"
      "_FROM_TYPE_QUEST\020\002*\335\001\n\037DungeonCandidateT"
      "eamInviteState\022,\n(DUNGEON_CANDIDATE_TEAM"
      "_INVITE_STATE_NONE\020\000\022,\n(DUNGEON_CANDIDAT"
      "E_TEAM_INVITE_STATE_SEND\020\001\022.\n*DUNGEON_CA"
      "NDIDATE_TEAM_INVITE_STATE_ACCEPT\020\002\022.\n*DU"
      "NGEON_CANDIDATE_TEAM_INVITE_STATE_REFUSE"
      "\020\003*\363\001\n\023MonsterGuestBanDrop\022\032\n\026MONSTER_GU"
      "EST_BAN_NONE\020\000\022\035\n\031MONSTER_GUEST_BAN_DIE_"
      "EXP\020\001\022\035\n\031MONSTER_GUEST_BAN_DIE_LUA\020\002\022\037\n\033"
      "MONSTER_GUEST_BAN_DIE_EXCEL\020\004\022\"\n\036MONSTER"
      "_GUEST_BAN_DIE_ACTIVITY\020\010\022\035\n\031MONSTER_GUE"
      "ST_BAN_DROP_HP\020\020\022\036\n\032MONSTER_GUEST_BAN_SU"
      "BFIELD\020 *l\n\022GadgetGuestBanDrop\022\031\n\025GADGET"
      "_GUEST_BAN_NONE\020\000\022\034\n\030GADGET_GUEST_BAN_DI"
      "E_LUA\020\001\022\035\n\031GADGET_GUEST_BAN_SUBFIELD\020\002b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 23846);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "define.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_define_2eproto

const ::google::protobuf::EnumDescriptor* TrialAvatarGrantRecord_GrantReason_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[0];
}
bool TrialAvatarGrantRecord_GrantReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TrialAvatarGrantRecord_GrantReason TrialAvatarGrantRecord::INVALID;
const TrialAvatarGrantRecord_GrantReason TrialAvatarGrantRecord::GRANT_BY_QUEST;
const TrialAvatarGrantRecord_GrantReason TrialAvatarGrantRecord::GrantReason_MIN;
const TrialAvatarGrantRecord_GrantReason TrialAvatarGrantRecord::GrantReason_MAX;
const int TrialAvatarGrantRecord::GrantReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ENetReason_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[1];
}
bool ENetReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 987654321:
    case 1234567890:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AccountType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[2];
}
bool AccountType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServiceType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[3];
}
bool ServiceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[4];
}
bool ClientType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RegionType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[5];
}
bool RegionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ActionReasonType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[6];
}
bool ActionReasonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 23:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 1001:
    case 1002:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1021:
    case 1022:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1036:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1043:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* StoreType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[7];
}
bool StoreType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VirtualItem_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[8];
}
bool VirtualItem_IsValid(int value) {
  switch (value) {
    case 0:
    case 101:
    case 102:
    case 105:
    case 106:
    case 107:
    case 201:
    case 202:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AbilityScalarType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[9];
}
bool AbilityScalarType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MotionState_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[10];
}
bool MotionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ProtEntityType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[11];
}
bool ProtEntityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* NpcTalkState_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[12];
}
bool NpcTalkState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MonsterBornType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[13];
}
bool MonsterBornType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GadgetBornType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[14];
}
bool GadgetBornType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ChangHpReason_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[15];
}
bool ChangHpReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 51:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayerDieType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[16];
}
bool PlayerDieType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayerDieOption_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[17];
}
bool PlayerDieOption_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AvatarExpeditionState_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[18];
}
bool AvatarExpeditionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AvatarType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[19];
}
bool AvatarType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EventTriggerType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[20];
}
bool EventTriggerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MpSettingType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[21];
}
bool MpSettingType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MathExpressionType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[22];
}
bool MathExpressionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginRewardConfigType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[23];
}
bool LoginRewardConfigType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LanguageType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[24];
}
bool LanguageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlatformType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[25];
}
bool PlatformType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MapMarkPointType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[26];
}
bool MapMarkPointType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MapMarkFromType_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[27];
}
bool MapMarkFromType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DungeonCandidateTeamInviteState_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[28];
}
bool DungeonCandidateTeamInviteState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MonsterGuestBanDrop_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[29];
}
bool MonsterGuestBanDrop_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GadgetGuestBanDrop_descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_enum_descriptors[30];
}
bool GadgetGuestBanDrop_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParamList::kParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParamList::ParamList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ParamList)
}
ParamList::ParamList(const ParamList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      param_list_(from.param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ParamList)
}

void ParamList::SharedCtor() {
  _cached_size_ = 0;
}

ParamList::~ParamList() {
  // @@protoc_insertion_point(destructor:proto.ParamList)
  SharedDtor();
}

void ParamList::SharedDtor() {
}

void ParamList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParamList::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParamList& ParamList::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParamList* ParamList::New(::google::protobuf::Arena* arena) const {
  ParamList* n = new ParamList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParamList::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_list_.Clear();
  _internal_metadata_.Clear();
}

bool ParamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ParamList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 param_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ParamList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ParamList)
  return false;
#undef DO_
}

void ParamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 param_list = 1;
  if (this->param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->param_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ParamList)
}

::google::protobuf::uint8* ParamList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 param_list = 1;
  if (this->param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->param_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ParamList)
  return target;
}

size_t ParamList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ParamList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 param_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParamList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ParamList)
  GOOGLE_DCHECK_NE(&from, this);
  const ParamList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParamList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ParamList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ParamList)
    MergeFrom(*source);
  }
}

void ParamList::MergeFrom(const ParamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ParamList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_list_.MergeFrom(from.param_list_);
}

void ParamList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParamList::CopyFrom(const ParamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParamList::IsInitialized() const {
  return true;
}

void ParamList::Swap(ParamList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParamList::InternalSwap(ParamList* other) {
  using std::swap;
  param_list_.InternalSwap(&other->param_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParamList::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParamList

// repeated uint32 param_list = 1;
int ParamList::param_list_size() const {
  return param_list_.size();
}
void ParamList::clear_param_list() {
  param_list_.Clear();
}
::google::protobuf::uint32 ParamList::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ParamList.param_list)
  return param_list_.Get(index);
}
void ParamList::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ParamList.param_list)
}
void ParamList::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ParamList.param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ParamList::param_list() const {
  // @@protoc_insertion_point(field_list:proto.ParamList.param_list)
  return param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ParamList::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ParamList.param_list)
  return &param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropValue::kTypeFieldNumber;
const int PropValue::kIvalFieldNumber;
const int PropValue::kFvalFieldNumber;
const int PropValue::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropValue::PropValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PropValue)
}
PropValue::PropValue(const PropValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&val_) -
    reinterpret_cast<char*>(&type_)) + sizeof(val_));
  clear_has_value();
  switch (from.value_case()) {
    case kIval: {
      set_ival(from.ival());
      break;
    }
    case kFval: {
      set_fval(from.fval());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.PropValue)
}

void PropValue::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_) -
      reinterpret_cast<char*>(&type_)) + sizeof(val_));
  clear_has_value();
  _cached_size_ = 0;
}

PropValue::~PropValue() {
  // @@protoc_insertion_point(destructor:proto.PropValue)
  SharedDtor();
}

void PropValue::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void PropValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropValue::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropValue& PropValue::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

PropValue* PropValue::New(::google::protobuf::Arena* arena) const {
  PropValue* n = new PropValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:proto.PropValue)
  switch (value_case()) {
    case kIval: {
      // No need to clear
      break;
    }
    case kFval: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void PropValue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PropValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&val_) -
      reinterpret_cast<char*>(&type_)) + sizeof(val_));
  clear_value();
  _internal_metadata_.Clear();
}

bool PropValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PropValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 ival = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.ival_)));
          set_has_ival();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.fval_)));
          set_has_fval();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 val = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &val_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PropValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PropValue)
  return false;
#undef DO_
}

void PropValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PropValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // int64 ival = 2;
  if (has_ival()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->ival(), output);
  }

  // float fval = 3;
  if (has_fval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->fval(), output);
  }

  // int64 val = 4;
  if (this->val() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PropValue)
}

::google::protobuf::uint8* PropValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PropValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // int64 ival = 2;
  if (has_ival()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->ival(), target);
  }

  // float fval = 3;
  if (has_fval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->fval(), target);
  }

  // int64 val = 4;
  if (this->val() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PropValue)
  return target;
}

size_t PropValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PropValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // int64 val = 4;
  if (this->val() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->val());
  }

  switch (value_case()) {
    // int64 ival = 2;
    case kIval: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ival());
      break;
    }
    // float fval = 3;
    case kFval: {
      total_size += 1 + 4;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PropValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PropValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PropValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PropValue)
    MergeFrom(*source);
  }
}

void PropValue::MergeFrom(const PropValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PropValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.val() != 0) {
    set_val(from.val());
  }
  switch (from.value_case()) {
    case kIval: {
      set_ival(from.ival());
      break;
    }
    case kFval: {
      set_fval(from.fval());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void PropValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PropValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropValue::CopyFrom(const PropValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PropValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropValue::IsInitialized() const {
  return true;
}

void PropValue::Swap(PropValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropValue::InternalSwap(PropValue* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(val_, other->val_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropValue::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PropValue

// uint32 type = 1;
void PropValue::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 PropValue::type() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.type)
  return type_;
}
void PropValue::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.type)
}

// int64 ival = 2;
bool PropValue::has_ival() const {
  return value_case() == kIval;
}
void PropValue::set_has_ival() {
  _oneof_case_[0] = kIval;
}
void PropValue::clear_ival() {
  if (has_ival()) {
    value_.ival_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 PropValue::ival() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.ival)
  if (has_ival()) {
    return value_.ival_;
  }
  return GOOGLE_LONGLONG(0);
}
void PropValue::set_ival(::google::protobuf::int64 value) {
  if (!has_ival()) {
    clear_value();
    set_has_ival();
  }
  value_.ival_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.ival)
}

// float fval = 3;
bool PropValue::has_fval() const {
  return value_case() == kFval;
}
void PropValue::set_has_fval() {
  _oneof_case_[0] = kFval;
}
void PropValue::clear_fval() {
  if (has_fval()) {
    value_.fval_ = 0;
    clear_has_value();
  }
}
float PropValue::fval() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.fval)
  if (has_fval()) {
    return value_.fval_;
  }
  return 0;
}
void PropValue::set_fval(float value) {
  if (!has_fval()) {
    clear_value();
    set_has_fval();
  }
  value_.fval_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.fval)
}

// int64 val = 4;
void PropValue::clear_val() {
  val_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PropValue::val() const {
  // @@protoc_insertion_point(field_get:proto.PropValue.val)
  return val_;
}
void PropValue::set_val(::google::protobuf::int64 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:proto.PropValue.val)
}

bool PropValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void PropValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
PropValue::ValueCase PropValue::value_case() const {
  return PropValue::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionCustomConfig::kCloseAntidebugFieldNumber;
const int RegionCustomConfig::kForceKillFieldNumber;
const int RegionCustomConfig::kAntidebugPcFieldNumber;
const int RegionCustomConfig::kAntidubugIosFieldNumber;
const int RegionCustomConfig::kAntidubugAndrodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionCustomConfig::RegionCustomConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegionCustomConfig)
}
RegionCustomConfig::RegionCustomConfig(const RegionCustomConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&close_antidebug_, &from.close_antidebug_,
    static_cast<size_t>(reinterpret_cast<char*>(&antidubug_androd_) -
    reinterpret_cast<char*>(&close_antidebug_)) + sizeof(antidubug_androd_));
  // @@protoc_insertion_point(copy_constructor:proto.RegionCustomConfig)
}

void RegionCustomConfig::SharedCtor() {
  ::memset(&close_antidebug_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&antidubug_androd_) -
      reinterpret_cast<char*>(&close_antidebug_)) + sizeof(antidubug_androd_));
  _cached_size_ = 0;
}

RegionCustomConfig::~RegionCustomConfig() {
  // @@protoc_insertion_point(destructor:proto.RegionCustomConfig)
  SharedDtor();
}

void RegionCustomConfig::SharedDtor() {
}

void RegionCustomConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionCustomConfig::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionCustomConfig& RegionCustomConfig::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegionCustomConfig* RegionCustomConfig::New(::google::protobuf::Arena* arena) const {
  RegionCustomConfig* n = new RegionCustomConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionCustomConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegionCustomConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&close_antidebug_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&antidubug_androd_) -
      reinterpret_cast<char*>(&close_antidebug_)) + sizeof(antidubug_androd_));
  _internal_metadata_.Clear();
}

bool RegionCustomConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegionCustomConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool close_antidebug = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &close_antidebug_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool force_kill = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &force_kill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool antidebug_pc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &antidebug_pc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool antidubug_ios = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &antidubug_ios_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool antidubug_androd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &antidubug_androd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegionCustomConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegionCustomConfig)
  return false;
#undef DO_
}

void RegionCustomConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegionCustomConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool close_antidebug = 1;
  if (this->close_antidebug() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->close_antidebug(), output);
  }

  // bool force_kill = 2;
  if (this->force_kill() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->force_kill(), output);
  }

  // bool antidebug_pc = 3;
  if (this->antidebug_pc() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->antidebug_pc(), output);
  }

  // bool antidubug_ios = 4;
  if (this->antidubug_ios() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->antidubug_ios(), output);
  }

  // bool antidubug_androd = 5;
  if (this->antidubug_androd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->antidubug_androd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegionCustomConfig)
}

::google::protobuf::uint8* RegionCustomConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegionCustomConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool close_antidebug = 1;
  if (this->close_antidebug() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->close_antidebug(), target);
  }

  // bool force_kill = 2;
  if (this->force_kill() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->force_kill(), target);
  }

  // bool antidebug_pc = 3;
  if (this->antidebug_pc() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->antidebug_pc(), target);
  }

  // bool antidubug_ios = 4;
  if (this->antidubug_ios() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->antidubug_ios(), target);
  }

  // bool antidubug_androd = 5;
  if (this->antidubug_androd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->antidubug_androd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegionCustomConfig)
  return target;
}

size_t RegionCustomConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegionCustomConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool close_antidebug = 1;
  if (this->close_antidebug() != 0) {
    total_size += 1 + 1;
  }

  // bool force_kill = 2;
  if (this->force_kill() != 0) {
    total_size += 1 + 1;
  }

  // bool antidebug_pc = 3;
  if (this->antidebug_pc() != 0) {
    total_size += 1 + 1;
  }

  // bool antidubug_ios = 4;
  if (this->antidubug_ios() != 0) {
    total_size += 1 + 1;
  }

  // bool antidubug_androd = 5;
  if (this->antidubug_androd() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionCustomConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegionCustomConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionCustomConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionCustomConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegionCustomConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegionCustomConfig)
    MergeFrom(*source);
  }
}

void RegionCustomConfig::MergeFrom(const RegionCustomConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegionCustomConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.close_antidebug() != 0) {
    set_close_antidebug(from.close_antidebug());
  }
  if (from.force_kill() != 0) {
    set_force_kill(from.force_kill());
  }
  if (from.antidebug_pc() != 0) {
    set_antidebug_pc(from.antidebug_pc());
  }
  if (from.antidubug_ios() != 0) {
    set_antidubug_ios(from.antidubug_ios());
  }
  if (from.antidubug_androd() != 0) {
    set_antidubug_androd(from.antidubug_androd());
  }
}

void RegionCustomConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegionCustomConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionCustomConfig::CopyFrom(const RegionCustomConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegionCustomConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionCustomConfig::IsInitialized() const {
  return true;
}

void RegionCustomConfig::Swap(RegionCustomConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionCustomConfig::InternalSwap(RegionCustomConfig* other) {
  using std::swap;
  swap(close_antidebug_, other->close_antidebug_);
  swap(force_kill_, other->force_kill_);
  swap(antidebug_pc_, other->antidebug_pc_);
  swap(antidubug_ios_, other->antidubug_ios_);
  swap(antidubug_androd_, other->antidubug_androd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionCustomConfig::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionCustomConfig

// bool close_antidebug = 1;
void RegionCustomConfig::clear_close_antidebug() {
  close_antidebug_ = false;
}
bool RegionCustomConfig::close_antidebug() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.close_antidebug)
  return close_antidebug_;
}
void RegionCustomConfig::set_close_antidebug(bool value) {
  
  close_antidebug_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.close_antidebug)
}

// bool force_kill = 2;
void RegionCustomConfig::clear_force_kill() {
  force_kill_ = false;
}
bool RegionCustomConfig::force_kill() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.force_kill)
  return force_kill_;
}
void RegionCustomConfig::set_force_kill(bool value) {
  
  force_kill_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.force_kill)
}

// bool antidebug_pc = 3;
void RegionCustomConfig::clear_antidebug_pc() {
  antidebug_pc_ = false;
}
bool RegionCustomConfig::antidebug_pc() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.antidebug_pc)
  return antidebug_pc_;
}
void RegionCustomConfig::set_antidebug_pc(bool value) {
  
  antidebug_pc_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.antidebug_pc)
}

// bool antidubug_ios = 4;
void RegionCustomConfig::clear_antidubug_ios() {
  antidubug_ios_ = false;
}
bool RegionCustomConfig::antidubug_ios() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.antidubug_ios)
  return antidubug_ios_;
}
void RegionCustomConfig::set_antidubug_ios(bool value) {
  
  antidubug_ios_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.antidubug_ios)
}

// bool antidubug_androd = 5;
void RegionCustomConfig::clear_antidubug_androd() {
  antidubug_androd_ = false;
}
bool RegionCustomConfig::antidubug_androd() const {
  // @@protoc_insertion_point(field_get:proto.RegionCustomConfig.antidubug_androd)
  return antidubug_androd_;
}
void RegionCustomConfig::set_antidubug_androd(bool value) {
  
  antidubug_androd_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionCustomConfig.antidubug_androd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionSimpleInfo::kNameFieldNumber;
const int RegionSimpleInfo::kTitleFieldNumber;
const int RegionSimpleInfo::kTypeFieldNumber;
const int RegionSimpleInfo::kDispatchUrlFieldNumber;
const int RegionSimpleInfo::kRegionCustomConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionSimpleInfo::RegionSimpleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegionSimpleInfo)
}
RegionSimpleInfo::RegionSimpleInfo(const RegionSimpleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  dispatch_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dispatch_url().size() > 0) {
    dispatch_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatch_url_);
  }
  if (from.has_region_custom_config()) {
    region_custom_config_ = new ::proto::RegionCustomConfig(*from.region_custom_config_);
  } else {
    region_custom_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.RegionSimpleInfo)
}

void RegionSimpleInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatch_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_custom_config_ = NULL;
  _cached_size_ = 0;
}

RegionSimpleInfo::~RegionSimpleInfo() {
  // @@protoc_insertion_point(destructor:proto.RegionSimpleInfo)
  SharedDtor();
}

void RegionSimpleInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatch_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_custom_config_;
}

void RegionSimpleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionSimpleInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionSimpleInfo& RegionSimpleInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegionSimpleInfo* RegionSimpleInfo::New(::google::protobuf::Arena* arena) const {
  RegionSimpleInfo* n = new RegionSimpleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionSimpleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegionSimpleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dispatch_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_custom_config_ != NULL) {
    delete region_custom_config_;
  }
  region_custom_config_ = NULL;
  _internal_metadata_.Clear();
}

bool RegionSimpleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegionSimpleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionSimpleInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionSimpleInfo.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionSimpleInfo.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dispatch_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dispatch_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dispatch_url().data(), static_cast<int>(this->dispatch_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionSimpleInfo.dispatch_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RegionCustomConfig region_custom_config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region_custom_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegionSimpleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegionSimpleInfo)
  return false;
#undef DO_
}

void RegionSimpleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegionSimpleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionSimpleInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionSimpleInfo.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionSimpleInfo.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // string dispatch_url = 4;
  if (this->dispatch_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatch_url().data(), static_cast<int>(this->dispatch_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionSimpleInfo.dispatch_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->dispatch_url(), output);
  }

  // .proto.RegionCustomConfig region_custom_config = 5;
  if (this->has_region_custom_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->region_custom_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegionSimpleInfo)
}

::google::protobuf::uint8* RegionSimpleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegionSimpleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionSimpleInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionSimpleInfo.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionSimpleInfo.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // string dispatch_url = 4;
  if (this->dispatch_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dispatch_url().data(), static_cast<int>(this->dispatch_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionSimpleInfo.dispatch_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->dispatch_url(), target);
  }

  // .proto.RegionCustomConfig region_custom_config = 5;
  if (this->has_region_custom_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->region_custom_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegionSimpleInfo)
  return target;
}

size_t RegionSimpleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegionSimpleInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string dispatch_url = 4;
  if (this->dispatch_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dispatch_url());
  }

  // .proto.RegionCustomConfig region_custom_config = 5;
  if (this->has_region_custom_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->region_custom_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionSimpleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegionSimpleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionSimpleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionSimpleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegionSimpleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegionSimpleInfo)
    MergeFrom(*source);
  }
}

void RegionSimpleInfo::MergeFrom(const RegionSimpleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegionSimpleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.dispatch_url().size() > 0) {

    dispatch_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dispatch_url_);
  }
  if (from.has_region_custom_config()) {
    mutable_region_custom_config()->::proto::RegionCustomConfig::MergeFrom(from.region_custom_config());
  }
}

void RegionSimpleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegionSimpleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionSimpleInfo::CopyFrom(const RegionSimpleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegionSimpleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionSimpleInfo::IsInitialized() const {
  return true;
}

void RegionSimpleInfo::Swap(RegionSimpleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionSimpleInfo::InternalSwap(RegionSimpleInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  title_.Swap(&other->title_);
  type_.Swap(&other->type_);
  dispatch_url_.Swap(&other->dispatch_url_);
  swap(region_custom_config_, other->region_custom_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionSimpleInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionSimpleInfo

// string name = 1;
void RegionSimpleInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionSimpleInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.name)
  return name_.GetNoArena();
}
void RegionSimpleInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.name)
}
#if LANG_CXX11
void RegionSimpleInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.name)
}
#endif
void RegionSimpleInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.name)
}
void RegionSimpleInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.name)
}
::std::string* RegionSimpleInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionSimpleInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionSimpleInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.name)
}

// string title = 2;
void RegionSimpleInfo::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionSimpleInfo::title() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.title)
  return title_.GetNoArena();
}
void RegionSimpleInfo::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.title)
}
#if LANG_CXX11
void RegionSimpleInfo::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.title)
}
#endif
void RegionSimpleInfo::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.title)
}
void RegionSimpleInfo::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.title)
}
::std::string* RegionSimpleInfo::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionSimpleInfo::release_title() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionSimpleInfo::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.title)
}

// string type = 3;
void RegionSimpleInfo::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionSimpleInfo::type() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.type)
  return type_.GetNoArena();
}
void RegionSimpleInfo::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.type)
}
#if LANG_CXX11
void RegionSimpleInfo::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.type)
}
#endif
void RegionSimpleInfo::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.type)
}
void RegionSimpleInfo::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.type)
}
::std::string* RegionSimpleInfo::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionSimpleInfo::release_type() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionSimpleInfo::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.type)
}

// string dispatch_url = 4;
void RegionSimpleInfo::clear_dispatch_url() {
  dispatch_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionSimpleInfo::dispatch_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.dispatch_url)
  return dispatch_url_.GetNoArena();
}
void RegionSimpleInfo::set_dispatch_url(const ::std::string& value) {
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionSimpleInfo.dispatch_url)
}
#if LANG_CXX11
void RegionSimpleInfo::set_dispatch_url(::std::string&& value) {
  
  dispatch_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionSimpleInfo.dispatch_url)
}
#endif
void RegionSimpleInfo::set_dispatch_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionSimpleInfo.dispatch_url)
}
void RegionSimpleInfo::set_dispatch_url(const char* value, size_t size) {
  
  dispatch_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionSimpleInfo.dispatch_url)
}
::std::string* RegionSimpleInfo::mutable_dispatch_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.dispatch_url)
  return dispatch_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionSimpleInfo::release_dispatch_url() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.dispatch_url)
  
  return dispatch_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionSimpleInfo::set_allocated_dispatch_url(::std::string* dispatch_url) {
  if (dispatch_url != NULL) {
    
  } else {
    
  }
  dispatch_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dispatch_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.dispatch_url)
}

// .proto.RegionCustomConfig region_custom_config = 5;
bool RegionSimpleInfo::has_region_custom_config() const {
  return this != internal_default_instance() && region_custom_config_ != NULL;
}
void RegionSimpleInfo::clear_region_custom_config() {
  if (GetArenaNoVirtual() == NULL && region_custom_config_ != NULL) delete region_custom_config_;
  region_custom_config_ = NULL;
}
const ::proto::RegionCustomConfig& RegionSimpleInfo::region_custom_config() const {
  const ::proto::RegionCustomConfig* p = region_custom_config_;
  // @@protoc_insertion_point(field_get:proto.RegionSimpleInfo.region_custom_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::RegionCustomConfig*>(
      &::proto::_RegionCustomConfig_default_instance_);
}
::proto::RegionCustomConfig* RegionSimpleInfo::mutable_region_custom_config() {
  
  if (region_custom_config_ == NULL) {
    region_custom_config_ = new ::proto::RegionCustomConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.RegionSimpleInfo.region_custom_config)
  return region_custom_config_;
}
::proto::RegionCustomConfig* RegionSimpleInfo::release_region_custom_config() {
  // @@protoc_insertion_point(field_release:proto.RegionSimpleInfo.region_custom_config)
  
  ::proto::RegionCustomConfig* temp = region_custom_config_;
  region_custom_config_ = NULL;
  return temp;
}
void RegionSimpleInfo::set_allocated_region_custom_config(::proto::RegionCustomConfig* region_custom_config) {
  delete region_custom_config_;
  region_custom_config_ = region_custom_config;
  if (region_custom_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RegionSimpleInfo.region_custom_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ClientCustomConfig::ClientCustomConfig_DevicelistEntry::ClientCustomConfig_DevicelistEntry() {}
ClientCustomConfig::ClientCustomConfig_DevicelistEntry::ClientCustomConfig_DevicelistEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ClientCustomConfig::ClientCustomConfig_DevicelistEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[4];
}
void ClientCustomConfig::ClientCustomConfig_DevicelistEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ClientCustomConfig::ClientCustomConfig_DevicelistEntry::MergeFrom(const ClientCustomConfig_DevicelistEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCustomConfig::kVisitorFieldNumber;
const int ClientCustomConfig::kSdkenvFieldNumber;
const int ClientCustomConfig::kDebugmenuFieldNumber;
const int ClientCustomConfig::kDebuglogswitchFieldNumber;
const int ClientCustomConfig::kDebuglogFieldNumber;
const int ClientCustomConfig::kDevicelistFieldNumber;
const int ClientCustomConfig::kLoadjsondataFieldNumber;
const int ClientCustomConfig::kShowexceptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCustomConfig::ClientCustomConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientCustomConfig)
}
ClientCustomConfig::ClientCustomConfig(const ClientCustomConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      debuglogswitch_(from.debuglogswitch_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devicelist_.MergeFrom(from.devicelist_);
  sdkenv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sdkenv().size() > 0) {
    sdkenv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkenv_);
  }
  ::memcpy(&visitor_, &from.visitor_,
    static_cast<size_t>(reinterpret_cast<char*>(&showexception_) -
    reinterpret_cast<char*>(&visitor_)) + sizeof(showexception_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientCustomConfig)
}

void ClientCustomConfig::SharedCtor() {
  sdkenv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&visitor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&showexception_) -
      reinterpret_cast<char*>(&visitor_)) + sizeof(showexception_));
  _cached_size_ = 0;
}

ClientCustomConfig::~ClientCustomConfig() {
  // @@protoc_insertion_point(destructor:proto.ClientCustomConfig)
  SharedDtor();
}

void ClientCustomConfig::SharedDtor() {
  sdkenv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientCustomConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientCustomConfig::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientCustomConfig& ClientCustomConfig::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientCustomConfig* ClientCustomConfig::New(::google::protobuf::Arena* arena) const {
  ClientCustomConfig* n = new ClientCustomConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientCustomConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientCustomConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  debuglogswitch_.Clear();
  devicelist_.Clear();
  sdkenv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&visitor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&showexception_) -
      reinterpret_cast<char*>(&visitor_)) + sizeof(showexception_));
  _internal_metadata_.Clear();
}

bool ClientCustomConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientCustomConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool visitor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visitor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sdkenv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sdkenv()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sdkenv().data(), static_cast<int>(this->sdkenv().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ClientCustomConfig.sdkenv"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool debugmenu = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &debugmenu_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 debuglogswitch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_debuglogswitch())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_debuglogswitch())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool debuglog = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &debuglog_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> devicelist = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          ClientCustomConfig_DevicelistEntry::Parser< ::google::protobuf::internal::MapField<
              ClientCustomConfig_DevicelistEntry,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&devicelist_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ClientCustomConfig.DevicelistEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ClientCustomConfig.DevicelistEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool loadjsondata = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &loadjsondata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool showexception = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &showexception_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientCustomConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientCustomConfig)
  return false;
#undef DO_
}

void ClientCustomConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientCustomConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visitor = 1;
  if (this->visitor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->visitor(), output);
  }

  // string sdkenv = 2;
  if (this->sdkenv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdkenv().data(), static_cast<int>(this->sdkenv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientCustomConfig.sdkenv");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sdkenv(), output);
  }

  // bool debugmenu = 3;
  if (this->debugmenu() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->debugmenu(), output);
  }

  // repeated int32 debuglogswitch = 4;
  if (this->debuglogswitch_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _debuglogswitch_cached_byte_size_));
  }
  for (int i = 0, n = this->debuglogswitch_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->debuglogswitch(i), output);
  }

  // bool debuglog = 5;
  if (this->debuglog() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->debuglog(), output);
  }

  // map<string, string> devicelist = 6;
  if (!this->devicelist().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.ClientCustomConfig.DevicelistEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.ClientCustomConfig.DevicelistEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->devicelist().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->devicelist().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->devicelist().begin();
          it != this->devicelist().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClientCustomConfig_DevicelistEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(devicelist_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ClientCustomConfig_DevicelistEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->devicelist().begin();
          it != this->devicelist().end(); ++it) {
        entry.reset(devicelist_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool loadjsondata = 7;
  if (this->loadjsondata() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->loadjsondata(), output);
  }

  // bool showexception = 8;
  if (this->showexception() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->showexception(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientCustomConfig)
}

::google::protobuf::uint8* ClientCustomConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientCustomConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool visitor = 1;
  if (this->visitor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->visitor(), target);
  }

  // string sdkenv = 2;
  if (this->sdkenv().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sdkenv().data(), static_cast<int>(this->sdkenv().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientCustomConfig.sdkenv");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sdkenv(), target);
  }

  // bool debugmenu = 3;
  if (this->debugmenu() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->debugmenu(), target);
  }

  // repeated int32 debuglogswitch = 4;
  if (this->debuglogswitch_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _debuglogswitch_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->debuglogswitch_, target);
  }

  // bool debuglog = 5;
  if (this->debuglog() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->debuglog(), target);
  }

  // map<string, string> devicelist = 6;
  if (!this->devicelist().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.ClientCustomConfig.DevicelistEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.ClientCustomConfig.DevicelistEntry.value");
      }
    };

    if (deterministic &&
        this->devicelist().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->devicelist().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->devicelist().begin();
          it != this->devicelist().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClientCustomConfig_DevicelistEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(devicelist_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ClientCustomConfig_DevicelistEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->devicelist().begin();
          it != this->devicelist().end(); ++it) {
        entry.reset(devicelist_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool loadjsondata = 7;
  if (this->loadjsondata() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->loadjsondata(), target);
  }

  // bool showexception = 8;
  if (this->showexception() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->showexception(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientCustomConfig)
  return target;
}

size_t ClientCustomConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientCustomConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 debuglogswitch = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->debuglogswitch_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _debuglogswitch_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<string, string> devicelist = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->devicelist_size());
  {
    ::google::protobuf::scoped_ptr<ClientCustomConfig_DevicelistEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->devicelist().begin();
        it != this->devicelist().end(); ++it) {
      entry.reset(devicelist_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string sdkenv = 2;
  if (this->sdkenv().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sdkenv());
  }

  // bool visitor = 1;
  if (this->visitor() != 0) {
    total_size += 1 + 1;
  }

  // bool debugmenu = 3;
  if (this->debugmenu() != 0) {
    total_size += 1 + 1;
  }

  // bool debuglog = 5;
  if (this->debuglog() != 0) {
    total_size += 1 + 1;
  }

  // bool loadjsondata = 7;
  if (this->loadjsondata() != 0) {
    total_size += 1 + 1;
  }

  // bool showexception = 8;
  if (this->showexception() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientCustomConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientCustomConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCustomConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientCustomConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientCustomConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientCustomConfig)
    MergeFrom(*source);
  }
}

void ClientCustomConfig::MergeFrom(const ClientCustomConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientCustomConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  debuglogswitch_.MergeFrom(from.debuglogswitch_);
  devicelist_.MergeFrom(from.devicelist_);
  if (from.sdkenv().size() > 0) {

    sdkenv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sdkenv_);
  }
  if (from.visitor() != 0) {
    set_visitor(from.visitor());
  }
  if (from.debugmenu() != 0) {
    set_debugmenu(from.debugmenu());
  }
  if (from.debuglog() != 0) {
    set_debuglog(from.debuglog());
  }
  if (from.loadjsondata() != 0) {
    set_loadjsondata(from.loadjsondata());
  }
  if (from.showexception() != 0) {
    set_showexception(from.showexception());
  }
}

void ClientCustomConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientCustomConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCustomConfig::CopyFrom(const ClientCustomConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientCustomConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCustomConfig::IsInitialized() const {
  return true;
}

void ClientCustomConfig::Swap(ClientCustomConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCustomConfig::InternalSwap(ClientCustomConfig* other) {
  using std::swap;
  debuglogswitch_.InternalSwap(&other->debuglogswitch_);
  devicelist_.Swap(&other->devicelist_);
  sdkenv_.Swap(&other->sdkenv_);
  swap(visitor_, other->visitor_);
  swap(debugmenu_, other->debugmenu_);
  swap(debuglog_, other->debuglog_);
  swap(loadjsondata_, other->loadjsondata_);
  swap(showexception_, other->showexception_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientCustomConfig::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientCustomConfig

// bool visitor = 1;
void ClientCustomConfig::clear_visitor() {
  visitor_ = false;
}
bool ClientCustomConfig::visitor() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.visitor)
  return visitor_;
}
void ClientCustomConfig::set_visitor(bool value) {
  
  visitor_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.visitor)
}

// string sdkenv = 2;
void ClientCustomConfig::clear_sdkenv() {
  sdkenv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientCustomConfig::sdkenv() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.sdkenv)
  return sdkenv_.GetNoArena();
}
void ClientCustomConfig::set_sdkenv(const ::std::string& value) {
  
  sdkenv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.sdkenv)
}
#if LANG_CXX11
void ClientCustomConfig::set_sdkenv(::std::string&& value) {
  
  sdkenv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClientCustomConfig.sdkenv)
}
#endif
void ClientCustomConfig::set_sdkenv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sdkenv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClientCustomConfig.sdkenv)
}
void ClientCustomConfig::set_sdkenv(const char* value, size_t size) {
  
  sdkenv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClientCustomConfig.sdkenv)
}
::std::string* ClientCustomConfig::mutable_sdkenv() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClientCustomConfig.sdkenv)
  return sdkenv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientCustomConfig::release_sdkenv() {
  // @@protoc_insertion_point(field_release:proto.ClientCustomConfig.sdkenv)
  
  return sdkenv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientCustomConfig::set_allocated_sdkenv(::std::string* sdkenv) {
  if (sdkenv != NULL) {
    
  } else {
    
  }
  sdkenv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sdkenv);
  // @@protoc_insertion_point(field_set_allocated:proto.ClientCustomConfig.sdkenv)
}

// bool debugmenu = 3;
void ClientCustomConfig::clear_debugmenu() {
  debugmenu_ = false;
}
bool ClientCustomConfig::debugmenu() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.debugmenu)
  return debugmenu_;
}
void ClientCustomConfig::set_debugmenu(bool value) {
  
  debugmenu_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.debugmenu)
}

// repeated int32 debuglogswitch = 4;
int ClientCustomConfig::debuglogswitch_size() const {
  return debuglogswitch_.size();
}
void ClientCustomConfig::clear_debuglogswitch() {
  debuglogswitch_.Clear();
}
::google::protobuf::int32 ClientCustomConfig::debuglogswitch(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.debuglogswitch)
  return debuglogswitch_.Get(index);
}
void ClientCustomConfig::set_debuglogswitch(int index, ::google::protobuf::int32 value) {
  debuglogswitch_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.debuglogswitch)
}
void ClientCustomConfig::add_debuglogswitch(::google::protobuf::int32 value) {
  debuglogswitch_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ClientCustomConfig.debuglogswitch)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientCustomConfig::debuglogswitch() const {
  // @@protoc_insertion_point(field_list:proto.ClientCustomConfig.debuglogswitch)
  return debuglogswitch_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientCustomConfig::mutable_debuglogswitch() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientCustomConfig.debuglogswitch)
  return &debuglogswitch_;
}

// bool debuglog = 5;
void ClientCustomConfig::clear_debuglog() {
  debuglog_ = false;
}
bool ClientCustomConfig::debuglog() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.debuglog)
  return debuglog_;
}
void ClientCustomConfig::set_debuglog(bool value) {
  
  debuglog_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.debuglog)
}

// map<string, string> devicelist = 6;
int ClientCustomConfig::devicelist_size() const {
  return devicelist_.size();
}
void ClientCustomConfig::clear_devicelist() {
  devicelist_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
ClientCustomConfig::devicelist() const {
  // @@protoc_insertion_point(field_map:proto.ClientCustomConfig.devicelist)
  return devicelist_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
ClientCustomConfig::mutable_devicelist() {
  // @@protoc_insertion_point(field_mutable_map:proto.ClientCustomConfig.devicelist)
  return devicelist_.MutableMap();
}

// bool loadjsondata = 7;
void ClientCustomConfig::clear_loadjsondata() {
  loadjsondata_ = false;
}
bool ClientCustomConfig::loadjsondata() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.loadjsondata)
  return loadjsondata_;
}
void ClientCustomConfig::set_loadjsondata(bool value) {
  
  loadjsondata_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.loadjsondata)
}

// bool showexception = 8;
void ClientCustomConfig::clear_showexception() {
  showexception_ = false;
}
bool ClientCustomConfig::showexception() const {
  // @@protoc_insertion_point(field_get:proto.ClientCustomConfig.showexception)
  return showexception_;
}
void ClientCustomConfig::set_showexception(bool value) {
  
  showexception_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientCustomConfig.showexception)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryRegionListHttpRsp::kRetcodeFieldNumber;
const int QueryRegionListHttpRsp::kRegionListFieldNumber;
const int QueryRegionListHttpRsp::kClientCustomConfigFieldNumber;
const int QueryRegionListHttpRsp::kClientConfigFieldNumber;
const int QueryRegionListHttpRsp::kClientSecretKeyFieldNumber;
const int QueryRegionListHttpRsp::kClientCustomConfigEncryptedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryRegionListHttpRsp::QueryRegionListHttpRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QueryRegionListHttpRsp)
}
QueryRegionListHttpRsp::QueryRegionListHttpRsp(const QueryRegionListHttpRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      region_list_(from.region_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_custom_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_custom_config().size() > 0) {
    client_custom_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_custom_config_);
  }
  client_secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_secret_key().size() > 0) {
    client_secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_secret_key_);
  }
  client_custom_config_encrypted_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_custom_config_encrypted().size() > 0) {
    client_custom_config_encrypted_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_custom_config_encrypted_);
  }
  if (from.has_client_config()) {
    client_config_ = new ::proto::ClientCustomConfig(*from.client_config_);
  } else {
    client_config_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.QueryRegionListHttpRsp)
}

void QueryRegionListHttpRsp::SharedCtor() {
  client_custom_config_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_custom_config_encrypted_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&client_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&client_config_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

QueryRegionListHttpRsp::~QueryRegionListHttpRsp() {
  // @@protoc_insertion_point(destructor:proto.QueryRegionListHttpRsp)
  SharedDtor();
}

void QueryRegionListHttpRsp::SharedDtor() {
  client_custom_config_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_custom_config_encrypted_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_config_;
}

void QueryRegionListHttpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryRegionListHttpRsp::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryRegionListHttpRsp& QueryRegionListHttpRsp::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryRegionListHttpRsp* QueryRegionListHttpRsp::New(::google::protobuf::Arena* arena) const {
  QueryRegionListHttpRsp* n = new QueryRegionListHttpRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryRegionListHttpRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QueryRegionListHttpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  region_list_.Clear();
  client_custom_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) {
    delete client_config_;
  }
  client_config_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool QueryRegionListHttpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QueryRegionListHttpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.RegionSimpleInfo region_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_region_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_custom_config = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_custom_config()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_custom_config().data(), static_cast<int>(this->client_custom_config().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.QueryRegionListHttpRsp.client_custom_config"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ClientCustomConfig client_config = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_client_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes client_secret_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_secret_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes client_custom_config_encrypted = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_custom_config_encrypted()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QueryRegionListHttpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QueryRegionListHttpRsp)
  return false;
#undef DO_
}

void QueryRegionListHttpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QueryRegionListHttpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.RegionSimpleInfo region_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->region_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->region_list(static_cast<int>(i)), output);
  }

  // string client_custom_config = 3;
  if (this->client_custom_config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_custom_config().data(), static_cast<int>(this->client_custom_config().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.QueryRegionListHttpRsp.client_custom_config");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->client_custom_config(), output);
  }

  // .proto.ClientCustomConfig client_config = 4;
  if (this->has_client_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->client_config_, output);
  }

  // bytes client_secret_key = 5;
  if (this->client_secret_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->client_secret_key(), output);
  }

  // bytes client_custom_config_encrypted = 6;
  if (this->client_custom_config_encrypted().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->client_custom_config_encrypted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QueryRegionListHttpRsp)
}

::google::protobuf::uint8* QueryRegionListHttpRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QueryRegionListHttpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.RegionSimpleInfo region_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->region_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->region_list(static_cast<int>(i)), deterministic, target);
  }

  // string client_custom_config = 3;
  if (this->client_custom_config().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_custom_config().data(), static_cast<int>(this->client_custom_config().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.QueryRegionListHttpRsp.client_custom_config");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->client_custom_config(), target);
  }

  // .proto.ClientCustomConfig client_config = 4;
  if (this->has_client_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->client_config_, deterministic, target);
  }

  // bytes client_secret_key = 5;
  if (this->client_secret_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->client_secret_key(), target);
  }

  // bytes client_custom_config_encrypted = 6;
  if (this->client_custom_config_encrypted().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->client_custom_config_encrypted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QueryRegionListHttpRsp)
  return target;
}

size_t QueryRegionListHttpRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QueryRegionListHttpRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.RegionSimpleInfo region_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->region_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->region_list(static_cast<int>(i)));
    }
  }

  // string client_custom_config = 3;
  if (this->client_custom_config().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_custom_config());
  }

  // bytes client_secret_key = 5;
  if (this->client_secret_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_secret_key());
  }

  // bytes client_custom_config_encrypted = 6;
  if (this->client_custom_config_encrypted().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_custom_config_encrypted());
  }

  // .proto.ClientCustomConfig client_config = 4;
  if (this->has_client_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->client_config_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryRegionListHttpRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QueryRegionListHttpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryRegionListHttpRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryRegionListHttpRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QueryRegionListHttpRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QueryRegionListHttpRsp)
    MergeFrom(*source);
  }
}

void QueryRegionListHttpRsp::MergeFrom(const QueryRegionListHttpRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QueryRegionListHttpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  region_list_.MergeFrom(from.region_list_);
  if (from.client_custom_config().size() > 0) {

    client_custom_config_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_custom_config_);
  }
  if (from.client_secret_key().size() > 0) {

    client_secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_secret_key_);
  }
  if (from.client_custom_config_encrypted().size() > 0) {

    client_custom_config_encrypted_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_custom_config_encrypted_);
  }
  if (from.has_client_config()) {
    mutable_client_config()->::proto::ClientCustomConfig::MergeFrom(from.client_config());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void QueryRegionListHttpRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QueryRegionListHttpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryRegionListHttpRsp::CopyFrom(const QueryRegionListHttpRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QueryRegionListHttpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryRegionListHttpRsp::IsInitialized() const {
  return true;
}

void QueryRegionListHttpRsp::Swap(QueryRegionListHttpRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryRegionListHttpRsp::InternalSwap(QueryRegionListHttpRsp* other) {
  using std::swap;
  region_list_.InternalSwap(&other->region_list_);
  client_custom_config_.Swap(&other->client_custom_config_);
  client_secret_key_.Swap(&other->client_secret_key_);
  client_custom_config_encrypted_.Swap(&other->client_custom_config_encrypted_);
  swap(client_config_, other->client_config_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryRegionListHttpRsp::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryRegionListHttpRsp

// int32 retcode = 1;
void QueryRegionListHttpRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QueryRegionListHttpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.retcode)
  return retcode_;
}
void QueryRegionListHttpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.retcode)
}

// repeated .proto.RegionSimpleInfo region_list = 2;
int QueryRegionListHttpRsp::region_list_size() const {
  return region_list_.size();
}
void QueryRegionListHttpRsp::clear_region_list() {
  region_list_.Clear();
}
const ::proto::RegionSimpleInfo& QueryRegionListHttpRsp::region_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Get(index);
}
::proto::RegionSimpleInfo* QueryRegionListHttpRsp::mutable_region_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Mutable(index);
}
::proto::RegionSimpleInfo* QueryRegionListHttpRsp::add_region_list() {
  // @@protoc_insertion_point(field_add:proto.QueryRegionListHttpRsp.region_list)
  return region_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >*
QueryRegionListHttpRsp::mutable_region_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QueryRegionListHttpRsp.region_list)
  return &region_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::RegionSimpleInfo >&
QueryRegionListHttpRsp::region_list() const {
  // @@protoc_insertion_point(field_list:proto.QueryRegionListHttpRsp.region_list)
  return region_list_;
}

// string client_custom_config = 3;
void QueryRegionListHttpRsp::clear_client_custom_config() {
  client_custom_config_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryRegionListHttpRsp::client_custom_config() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_custom_config)
  return client_custom_config_.GetNoArena();
}
void QueryRegionListHttpRsp::set_client_custom_config(const ::std::string& value) {
  
  client_custom_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.client_custom_config)
}
#if LANG_CXX11
void QueryRegionListHttpRsp::set_client_custom_config(::std::string&& value) {
  
  client_custom_config_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryRegionListHttpRsp.client_custom_config)
}
#endif
void QueryRegionListHttpRsp::set_client_custom_config(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_custom_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryRegionListHttpRsp.client_custom_config)
}
void QueryRegionListHttpRsp::set_client_custom_config(const char* value, size_t size) {
  
  client_custom_config_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryRegionListHttpRsp.client_custom_config)
}
::std::string* QueryRegionListHttpRsp::mutable_client_custom_config() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_custom_config)
  return client_custom_config_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryRegionListHttpRsp::release_client_custom_config() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_custom_config)
  
  return client_custom_config_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryRegionListHttpRsp::set_allocated_client_custom_config(::std::string* client_custom_config) {
  if (client_custom_config != NULL) {
    
  } else {
    
  }
  client_custom_config_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_custom_config);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_custom_config)
}

// .proto.ClientCustomConfig client_config = 4;
bool QueryRegionListHttpRsp::has_client_config() const {
  return this != internal_default_instance() && client_config_ != NULL;
}
void QueryRegionListHttpRsp::clear_client_config() {
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) delete client_config_;
  client_config_ = NULL;
}
const ::proto::ClientCustomConfig& QueryRegionListHttpRsp::client_config() const {
  const ::proto::ClientCustomConfig* p = client_config_;
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ClientCustomConfig*>(
      &::proto::_ClientCustomConfig_default_instance_);
}
::proto::ClientCustomConfig* QueryRegionListHttpRsp::mutable_client_config() {
  
  if (client_config_ == NULL) {
    client_config_ = new ::proto::ClientCustomConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_config)
  return client_config_;
}
::proto::ClientCustomConfig* QueryRegionListHttpRsp::release_client_config() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_config)
  
  ::proto::ClientCustomConfig* temp = client_config_;
  client_config_ = NULL;
  return temp;
}
void QueryRegionListHttpRsp::set_allocated_client_config(::proto::ClientCustomConfig* client_config) {
  delete client_config_;
  client_config_ = client_config;
  if (client_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_config)
}

// bytes client_secret_key = 5;
void QueryRegionListHttpRsp::clear_client_secret_key() {
  client_secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryRegionListHttpRsp::client_secret_key() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_secret_key)
  return client_secret_key_.GetNoArena();
}
void QueryRegionListHttpRsp::set_client_secret_key(const ::std::string& value) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.client_secret_key)
}
#if LANG_CXX11
void QueryRegionListHttpRsp::set_client_secret_key(::std::string&& value) {
  
  client_secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryRegionListHttpRsp.client_secret_key)
}
#endif
void QueryRegionListHttpRsp::set_client_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryRegionListHttpRsp.client_secret_key)
}
void QueryRegionListHttpRsp::set_client_secret_key(const void* value, size_t size) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryRegionListHttpRsp.client_secret_key)
}
::std::string* QueryRegionListHttpRsp::mutable_client_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_secret_key)
  return client_secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryRegionListHttpRsp::release_client_secret_key() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_secret_key)
  
  return client_secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryRegionListHttpRsp::set_allocated_client_secret_key(::std::string* client_secret_key) {
  if (client_secret_key != NULL) {
    
  } else {
    
  }
  client_secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_secret_key)
}

// bytes client_custom_config_encrypted = 6;
void QueryRegionListHttpRsp::clear_client_custom_config_encrypted() {
  client_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryRegionListHttpRsp::client_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  return client_custom_config_encrypted_.GetNoArena();
}
void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const ::std::string& value) {
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
#if LANG_CXX11
void QueryRegionListHttpRsp::set_client_custom_config_encrypted(::std::string&& value) {
  
  client_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
#endif
void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
void QueryRegionListHttpRsp::set_client_custom_config_encrypted(const void* value, size_t size) {
  
  client_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}
::std::string* QueryRegionListHttpRsp::mutable_client_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  return client_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryRegionListHttpRsp::release_client_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
  
  return client_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryRegionListHttpRsp::set_allocated_client_custom_config_encrypted(::std::string* client_custom_config_encrypted) {
  if (client_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  client_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryRegionListHttpRsp.client_custom_config_encrypted)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForceUpdateInfo::kForceUpdateUrlFieldNumber;
const int ForceUpdateInfo::kClientConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForceUpdateInfo::ForceUpdateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ForceUpdateInfo)
}
ForceUpdateInfo::ForceUpdateInfo(const ForceUpdateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  force_update_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.force_update_url().size() > 0) {
    force_update_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.force_update_url_);
  }
  if (from.has_client_config()) {
    client_config_ = new ::proto::ClientCustomConfig(*from.client_config_);
  } else {
    client_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ForceUpdateInfo)
}

void ForceUpdateInfo::SharedCtor() {
  force_update_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_config_ = NULL;
  _cached_size_ = 0;
}

ForceUpdateInfo::~ForceUpdateInfo() {
  // @@protoc_insertion_point(destructor:proto.ForceUpdateInfo)
  SharedDtor();
}

void ForceUpdateInfo::SharedDtor() {
  force_update_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete client_config_;
}

void ForceUpdateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ForceUpdateInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForceUpdateInfo& ForceUpdateInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ForceUpdateInfo* ForceUpdateInfo::New(::google::protobuf::Arena* arena) const {
  ForceUpdateInfo* n = new ForceUpdateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ForceUpdateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ForceUpdateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  force_update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) {
    delete client_config_;
  }
  client_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ForceUpdateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ForceUpdateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string force_update_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_force_update_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->force_update_url().data(), static_cast<int>(this->force_update_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ForceUpdateInfo.force_update_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ClientCustomConfig client_config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_client_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ForceUpdateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ForceUpdateInfo)
  return false;
#undef DO_
}

void ForceUpdateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ForceUpdateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string force_update_url = 1;
  if (this->force_update_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->force_update_url().data(), static_cast<int>(this->force_update_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ForceUpdateInfo.force_update_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->force_update_url(), output);
  }

  // .proto.ClientCustomConfig client_config = 2;
  if (this->has_client_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->client_config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ForceUpdateInfo)
}

::google::protobuf::uint8* ForceUpdateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ForceUpdateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string force_update_url = 1;
  if (this->force_update_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->force_update_url().data(), static_cast<int>(this->force_update_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ForceUpdateInfo.force_update_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->force_update_url(), target);
  }

  // .proto.ClientCustomConfig client_config = 2;
  if (this->has_client_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->client_config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ForceUpdateInfo)
  return target;
}

size_t ForceUpdateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ForceUpdateInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string force_update_url = 1;
  if (this->force_update_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->force_update_url());
  }

  // .proto.ClientCustomConfig client_config = 2;
  if (this->has_client_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->client_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ForceUpdateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ForceUpdateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ForceUpdateInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForceUpdateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ForceUpdateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ForceUpdateInfo)
    MergeFrom(*source);
  }
}

void ForceUpdateInfo::MergeFrom(const ForceUpdateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ForceUpdateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.force_update_url().size() > 0) {

    force_update_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.force_update_url_);
  }
  if (from.has_client_config()) {
    mutable_client_config()->::proto::ClientCustomConfig::MergeFrom(from.client_config());
  }
}

void ForceUpdateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ForceUpdateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForceUpdateInfo::CopyFrom(const ForceUpdateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ForceUpdateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForceUpdateInfo::IsInitialized() const {
  return true;
}

void ForceUpdateInfo::Swap(ForceUpdateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForceUpdateInfo::InternalSwap(ForceUpdateInfo* other) {
  using std::swap;
  force_update_url_.Swap(&other->force_update_url_);
  swap(client_config_, other->client_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ForceUpdateInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ForceUpdateInfo

// string force_update_url = 1;
void ForceUpdateInfo::clear_force_update_url() {
  force_update_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ForceUpdateInfo::force_update_url() const {
  // @@protoc_insertion_point(field_get:proto.ForceUpdateInfo.force_update_url)
  return force_update_url_.GetNoArena();
}
void ForceUpdateInfo::set_force_update_url(const ::std::string& value) {
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ForceUpdateInfo.force_update_url)
}
#if LANG_CXX11
void ForceUpdateInfo::set_force_update_url(::std::string&& value) {
  
  force_update_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ForceUpdateInfo.force_update_url)
}
#endif
void ForceUpdateInfo::set_force_update_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ForceUpdateInfo.force_update_url)
}
void ForceUpdateInfo::set_force_update_url(const char* value, size_t size) {
  
  force_update_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ForceUpdateInfo.force_update_url)
}
::std::string* ForceUpdateInfo::mutable_force_update_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.ForceUpdateInfo.force_update_url)
  return force_update_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ForceUpdateInfo::release_force_update_url() {
  // @@protoc_insertion_point(field_release:proto.ForceUpdateInfo.force_update_url)
  
  return force_update_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ForceUpdateInfo::set_allocated_force_update_url(::std::string* force_update_url) {
  if (force_update_url != NULL) {
    
  } else {
    
  }
  force_update_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), force_update_url);
  // @@protoc_insertion_point(field_set_allocated:proto.ForceUpdateInfo.force_update_url)
}

// .proto.ClientCustomConfig client_config = 2;
bool ForceUpdateInfo::has_client_config() const {
  return this != internal_default_instance() && client_config_ != NULL;
}
void ForceUpdateInfo::clear_client_config() {
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) delete client_config_;
  client_config_ = NULL;
}
const ::proto::ClientCustomConfig& ForceUpdateInfo::client_config() const {
  const ::proto::ClientCustomConfig* p = client_config_;
  // @@protoc_insertion_point(field_get:proto.ForceUpdateInfo.client_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ClientCustomConfig*>(
      &::proto::_ClientCustomConfig_default_instance_);
}
::proto::ClientCustomConfig* ForceUpdateInfo::mutable_client_config() {
  
  if (client_config_ == NULL) {
    client_config_ = new ::proto::ClientCustomConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.ForceUpdateInfo.client_config)
  return client_config_;
}
::proto::ClientCustomConfig* ForceUpdateInfo::release_client_config() {
  // @@protoc_insertion_point(field_release:proto.ForceUpdateInfo.client_config)
  
  ::proto::ClientCustomConfig* temp = client_config_;
  client_config_ = NULL;
  return temp;
}
void ForceUpdateInfo::set_allocated_client_config(::proto::ClientCustomConfig* client_config) {
  delete client_config_;
  client_config_ = client_config;
  if (client_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ForceUpdateInfo.client_config)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopServerInfo::kStopBeginTimeFieldNumber;
const int StopServerInfo::kStopEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopServerInfo::StopServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.StopServerInfo)
}
StopServerInfo::StopServerInfo(const StopServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stop_begin_time_, &from.stop_begin_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&stop_end_time_) -
    reinterpret_cast<char*>(&stop_begin_time_)) + sizeof(stop_end_time_));
  // @@protoc_insertion_point(copy_constructor:proto.StopServerInfo)
}

void StopServerInfo::SharedCtor() {
  ::memset(&stop_begin_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_end_time_) -
      reinterpret_cast<char*>(&stop_begin_time_)) + sizeof(stop_end_time_));
  _cached_size_ = 0;
}

StopServerInfo::~StopServerInfo() {
  // @@protoc_insertion_point(destructor:proto.StopServerInfo)
  SharedDtor();
}

void StopServerInfo::SharedDtor() {
}

void StopServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopServerInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopServerInfo& StopServerInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

StopServerInfo* StopServerInfo::New(::google::protobuf::Arena* arena) const {
  StopServerInfo* n = new StopServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StopServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stop_begin_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_end_time_) -
      reinterpret_cast<char*>(&stop_begin_time_)) + sizeof(stop_end_time_));
  _internal_metadata_.Clear();
}

bool StopServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.StopServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 stop_begin_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stop_begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 stop_end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stop_end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.StopServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.StopServerInfo)
  return false;
#undef DO_
}

void StopServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.StopServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stop_begin_time = 1;
  if (this->stop_begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stop_begin_time(), output);
  }

  // uint32 stop_end_time = 2;
  if (this->stop_end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->stop_end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.StopServerInfo)
}

::google::protobuf::uint8* StopServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.StopServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stop_begin_time = 1;
  if (this->stop_begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stop_begin_time(), target);
  }

  // uint32 stop_end_time = 2;
  if (this->stop_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->stop_end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StopServerInfo)
  return target;
}

size_t StopServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StopServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 stop_begin_time = 1;
  if (this->stop_begin_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stop_begin_time());
  }

  // uint32 stop_end_time = 2;
  if (this->stop_end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stop_end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.StopServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const StopServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.StopServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.StopServerInfo)
    MergeFrom(*source);
  }
}

void StopServerInfo::MergeFrom(const StopServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StopServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stop_begin_time() != 0) {
    set_stop_begin_time(from.stop_begin_time());
  }
  if (from.stop_end_time() != 0) {
    set_stop_end_time(from.stop_end_time());
  }
}

void StopServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.StopServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopServerInfo::CopyFrom(const StopServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StopServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopServerInfo::IsInitialized() const {
  return true;
}

void StopServerInfo::Swap(StopServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopServerInfo::InternalSwap(StopServerInfo* other) {
  using std::swap;
  swap(stop_begin_time_, other->stop_begin_time_);
  swap(stop_end_time_, other->stop_end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopServerInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StopServerInfo

// uint32 stop_begin_time = 1;
void StopServerInfo::clear_stop_begin_time() {
  stop_begin_time_ = 0u;
}
::google::protobuf::uint32 StopServerInfo::stop_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.StopServerInfo.stop_begin_time)
  return stop_begin_time_;
}
void StopServerInfo::set_stop_begin_time(::google::protobuf::uint32 value) {
  
  stop_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.StopServerInfo.stop_begin_time)
}

// uint32 stop_end_time = 2;
void StopServerInfo::clear_stop_end_time() {
  stop_end_time_ = 0u;
}
::google::protobuf::uint32 StopServerInfo::stop_end_time() const {
  // @@protoc_insertion_point(field_get:proto.StopServerInfo.stop_end_time)
  return stop_end_time_;
}
void StopServerInfo::set_stop_end_time(::google::protobuf::uint32 value) {
  
  stop_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.StopServerInfo.stop_end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResVersionConfig::kVersionFieldNumber;
const int ResVersionConfig::kReloginFieldNumber;
const int ResVersionConfig::kMd5FieldNumber;
const int ResVersionConfig::kReleaseTotalSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResVersionConfig::ResVersionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResVersionConfig)
}
ResVersionConfig::ResVersionConfig(const ResVersionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5().size() > 0) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  release_total_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.release_total_size().size() > 0) {
    release_total_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_total_size_);
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&relogin_) -
    reinterpret_cast<char*>(&version_)) + sizeof(relogin_));
  // @@protoc_insertion_point(copy_constructor:proto.ResVersionConfig)
}

void ResVersionConfig::SharedCtor() {
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_total_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relogin_) -
      reinterpret_cast<char*>(&version_)) + sizeof(relogin_));
  _cached_size_ = 0;
}

ResVersionConfig::~ResVersionConfig() {
  // @@protoc_insertion_point(destructor:proto.ResVersionConfig)
  SharedDtor();
}

void ResVersionConfig::SharedDtor() {
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_total_size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResVersionConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResVersionConfig::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResVersionConfig& ResVersionConfig::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResVersionConfig* ResVersionConfig::New(::google::protobuf::Arena* arena) const {
  ResVersionConfig* n = new ResVersionConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResVersionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResVersionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  release_total_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relogin_) -
      reinterpret_cast<char*>(&version_)) + sizeof(relogin_));
  _internal_metadata_.Clear();
}

bool ResVersionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResVersionConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool relogin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &relogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string md5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->md5().data(), static_cast<int>(this->md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ResVersionConfig.md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string release_total_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_release_total_size()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->release_total_size().data(), static_cast<int>(this->release_total_size().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ResVersionConfig.release_total_size"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResVersionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResVersionConfig)
  return false;
#undef DO_
}

void ResVersionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResVersionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // bool relogin = 2;
  if (this->relogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->relogin(), output);
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), static_cast<int>(this->md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ResVersionConfig.md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->md5(), output);
  }

  // string release_total_size = 4;
  if (this->release_total_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->release_total_size().data(), static_cast<int>(this->release_total_size().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ResVersionConfig.release_total_size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->release_total_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResVersionConfig)
}

::google::protobuf::uint8* ResVersionConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResVersionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // bool relogin = 2;
  if (this->relogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->relogin(), target);
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), static_cast<int>(this->md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ResVersionConfig.md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->md5(), target);
  }

  // string release_total_size = 4;
  if (this->release_total_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->release_total_size().data(), static_cast<int>(this->release_total_size().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ResVersionConfig.release_total_size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->release_total_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResVersionConfig)
  return target;
}

size_t ResVersionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResVersionConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string md5 = 3;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->md5());
  }

  // string release_total_size = 4;
  if (this->release_total_size().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->release_total_size());
  }

  // uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // bool relogin = 2;
  if (this->relogin() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResVersionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResVersionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ResVersionConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResVersionConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResVersionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResVersionConfig)
    MergeFrom(*source);
  }
}

void ResVersionConfig::MergeFrom(const ResVersionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResVersionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  if (from.release_total_size().size() > 0) {

    release_total_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.release_total_size_);
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.relogin() != 0) {
    set_relogin(from.relogin());
  }
}

void ResVersionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResVersionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResVersionConfig::CopyFrom(const ResVersionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResVersionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResVersionConfig::IsInitialized() const {
  return true;
}

void ResVersionConfig::Swap(ResVersionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResVersionConfig::InternalSwap(ResVersionConfig* other) {
  using std::swap;
  md5_.Swap(&other->md5_);
  release_total_size_.Swap(&other->release_total_size_);
  swap(version_, other->version_);
  swap(relogin_, other->relogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResVersionConfig::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResVersionConfig

// uint32 version = 1;
void ResVersionConfig::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 ResVersionConfig::version() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.version)
  return version_;
}
void ResVersionConfig::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.version)
}

// bool relogin = 2;
void ResVersionConfig::clear_relogin() {
  relogin_ = false;
}
bool ResVersionConfig::relogin() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.relogin)
  return relogin_;
}
void ResVersionConfig::set_relogin(bool value) {
  
  relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.relogin)
}

// string md5 = 3;
void ResVersionConfig::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResVersionConfig::md5() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.md5)
  return md5_.GetNoArena();
}
void ResVersionConfig::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.md5)
}
#if LANG_CXX11
void ResVersionConfig::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.md5)
}
#endif
void ResVersionConfig::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.md5)
}
void ResVersionConfig::set_md5(const char* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.md5)
}
::std::string* ResVersionConfig::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResVersionConfig::release_md5() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResVersionConfig::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.md5)
}

// string release_total_size = 4;
void ResVersionConfig::clear_release_total_size() {
  release_total_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResVersionConfig::release_total_size() const {
  // @@protoc_insertion_point(field_get:proto.ResVersionConfig.release_total_size)
  return release_total_size_.GetNoArena();
}
void ResVersionConfig::set_release_total_size(const ::std::string& value) {
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ResVersionConfig.release_total_size)
}
#if LANG_CXX11
void ResVersionConfig::set_release_total_size(::std::string&& value) {
  
  release_total_size_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ResVersionConfig.release_total_size)
}
#endif
void ResVersionConfig::set_release_total_size(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ResVersionConfig.release_total_size)
}
void ResVersionConfig::set_release_total_size(const char* value, size_t size) {
  
  release_total_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ResVersionConfig.release_total_size)
}
::std::string* ResVersionConfig::mutable_release_total_size() {
  
  // @@protoc_insertion_point(field_mutable:proto.ResVersionConfig.release_total_size)
  return release_total_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResVersionConfig::release_release_total_size() {
  // @@protoc_insertion_point(field_release:proto.ResVersionConfig.release_total_size)
  
  return release_total_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResVersionConfig::set_allocated_release_total_size(::std::string* release_total_size) {
  if (release_total_size != NULL) {
    
  } else {
    
  }
  release_total_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), release_total_size);
  // @@protoc_insertion_point(field_set_allocated:proto.ResVersionConfig.release_total_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionInfo::kGateserverIpFieldNumber;
const int RegionInfo::kGateserverPortFieldNumber;
const int RegionInfo::kPayCallbackUrlFieldNumber;
const int RegionInfo::kAreaTypeFieldNumber;
const int RegionInfo::kResourceUrlFieldNumber;
const int RegionInfo::kDataUrlFieldNumber;
const int RegionInfo::kFeedbackUrlFieldNumber;
const int RegionInfo::kBulletinUrlFieldNumber;
const int RegionInfo::kResourceUrlBakFieldNumber;
const int RegionInfo::kDataUrlBakFieldNumber;
const int RegionInfo::kClientDataVersionFieldNumber;
const int RegionInfo::kResVersionFieldNumber;
const int RegionInfo::kHandbookUrlFieldNumber;
const int RegionInfo::kClientSilenceDataVersionFieldNumber;
const int RegionInfo::kClientDataMd5FieldNumber;
const int RegionInfo::kClientSilenceDataMd5FieldNumber;
const int RegionInfo::kResMd5FieldNumber;
const int RegionInfo::kResVersionConfigFieldNumber;
const int RegionInfo::kSecretKeyFieldNumber;
const int RegionInfo::kOfficialCommunityUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionInfo::RegionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegionInfo)
}
RegionInfo::RegionInfo(const RegionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gateserver_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gateserver_ip().size() > 0) {
    gateserver_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateserver_ip_);
  }
  pay_callback_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pay_callback_url().size() > 0) {
    pay_callback_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_callback_url_);
  }
  area_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.area_type().size() > 0) {
    area_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_type_);
  }
  resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_url().size() > 0) {
    resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_);
  }
  data_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_url().size() > 0) {
    data_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_url_);
  }
  feedback_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.feedback_url().size() > 0) {
    feedback_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feedback_url_);
  }
  bulletin_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bulletin_url().size() > 0) {
    bulletin_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bulletin_url_);
  }
  resource_url_bak_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resource_url_bak().size() > 0) {
    resource_url_bak_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_bak_);
  }
  data_url_bak_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_url_bak().size() > 0) {
    data_url_bak_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_url_bak_);
  }
  handbook_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.handbook_url().size() > 0) {
    handbook_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handbook_url_);
  }
  client_data_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_data_md5().size() > 0) {
    client_data_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_data_md5_);
  }
  client_silence_data_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_silence_data_md5().size() > 0) {
    client_silence_data_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_data_md5_);
  }
  res_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.res_md5().size() > 0) {
    res_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_md5_);
  }
  secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret_key().size() > 0) {
    secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_key_);
  }
  official_community_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.official_community_url().size() > 0) {
    official_community_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.official_community_url_);
  }
  if (from.has_res_version_config()) {
    res_version_config_ = new ::proto::ResVersionConfig(*from.res_version_config_);
  } else {
    res_version_config_ = NULL;
  }
  ::memcpy(&gateserver_port_, &from.gateserver_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_silence_data_version_) -
    reinterpret_cast<char*>(&gateserver_port_)) + sizeof(client_silence_data_version_));
  // @@protoc_insertion_point(copy_constructor:proto.RegionInfo)
}

void RegionInfo::SharedCtor() {
  gateserver_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_callback_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feedback_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bulletin_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_bak_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_url_bak_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handbook_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_data_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_data_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  official_community_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&res_version_config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_silence_data_version_) -
      reinterpret_cast<char*>(&res_version_config_)) + sizeof(client_silence_data_version_));
  _cached_size_ = 0;
}

RegionInfo::~RegionInfo() {
  // @@protoc_insertion_point(destructor:proto.RegionInfo)
  SharedDtor();
}

void RegionInfo::SharedDtor() {
  gateserver_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_callback_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feedback_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bulletin_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_bak_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_url_bak_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handbook_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_data_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_data_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  official_community_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete res_version_config_;
}

void RegionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegionInfo& RegionInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegionInfo* RegionInfo::New(::google::protobuf::Arena* arena) const {
  RegionInfo* n = new RegionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gateserver_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_callback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  area_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  feedback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bulletin_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_url_bak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_url_bak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  handbook_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_data_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_silence_data_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  official_community_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) {
    delete res_version_config_;
  }
  res_version_config_ = NULL;
  ::memset(&gateserver_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_silence_data_version_) -
      reinterpret_cast<char*>(&gateserver_port_)) + sizeof(client_silence_data_version_));
  _internal_metadata_.Clear();
}

bool RegionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gateserver_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gateserver_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gateserver_ip().data(), static_cast<int>(this->gateserver_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.gateserver_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gateserver_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gateserver_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pay_callback_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pay_callback_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pay_callback_url().data(), static_cast<int>(this->pay_callback_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.pay_callback_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string area_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_area_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->area_type().data(), static_cast<int>(this->area_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.area_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_url = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_url().data(), static_cast<int>(this->resource_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.resource_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_url = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_url().data(), static_cast<int>(this->data_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.data_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string feedback_url = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_feedback_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->feedback_url().data(), static_cast<int>(this->feedback_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.feedback_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bulletin_url = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bulletin_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bulletin_url().data(), static_cast<int>(this->bulletin_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.bulletin_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resource_url_bak = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_url_bak()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_url_bak().data(), static_cast<int>(this->resource_url_bak().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.resource_url_bak"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_url_bak = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_url_bak()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_url_bak().data(), static_cast<int>(this->data_url_bak().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.data_url_bak"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_data_version = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 res_version = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &res_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string handbook_url = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_handbook_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->handbook_url().data(), static_cast<int>(this->handbook_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.handbook_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_silence_data_version = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_silence_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_data_md5 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_data_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_data_md5().data(), static_cast<int>(this->client_data_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.client_data_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_silence_data_md5 = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_silence_data_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_silence_data_md5().data(), static_cast<int>(this->client_silence_data_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.client_silence_data_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string res_md5 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_res_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->res_md5().data(), static_cast<int>(this->res_md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.res_md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ResVersionConfig res_version_config = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_res_version_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes secret_key = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_secret_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string official_community_url = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_official_community_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->official_community_url().data(), static_cast<int>(this->official_community_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RegionInfo.official_community_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegionInfo)
  return false;
#undef DO_
}

void RegionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gateserver_ip = 1;
  if (this->gateserver_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateserver_ip().data(), static_cast<int>(this->gateserver_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.gateserver_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gateserver_ip(), output);
  }

  // uint32 gateserver_port = 2;
  if (this->gateserver_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gateserver_port(), output);
  }

  // string pay_callback_url = 3;
  if (this->pay_callback_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_callback_url().data(), static_cast<int>(this->pay_callback_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.pay_callback_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pay_callback_url(), output);
  }

  // string area_type = 7;
  if (this->area_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area_type().data(), static_cast<int>(this->area_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.area_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->area_type(), output);
  }

  // string resource_url = 8;
  if (this->resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url().data(), static_cast<int>(this->resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.resource_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->resource_url(), output);
  }

  // string data_url = 9;
  if (this->data_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_url().data(), static_cast<int>(this->data_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.data_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->data_url(), output);
  }

  // string feedback_url = 10;
  if (this->feedback_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feedback_url().data(), static_cast<int>(this->feedback_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.feedback_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->feedback_url(), output);
  }

  // string bulletin_url = 11;
  if (this->bulletin_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bulletin_url().data(), static_cast<int>(this->bulletin_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.bulletin_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->bulletin_url(), output);
  }

  // string resource_url_bak = 12;
  if (this->resource_url_bak().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url_bak().data(), static_cast<int>(this->resource_url_bak().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.resource_url_bak");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->resource_url_bak(), output);
  }

  // string data_url_bak = 13;
  if (this->data_url_bak().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_url_bak().data(), static_cast<int>(this->data_url_bak().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.data_url_bak");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->data_url_bak(), output);
  }

  // uint32 client_data_version = 14;
  if (this->client_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->client_data_version(), output);
  }

  // uint32 res_version = 15;
  if (this->res_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->res_version(), output);
  }

  // string handbook_url = 16;
  if (this->handbook_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handbook_url().data(), static_cast<int>(this->handbook_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.handbook_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->handbook_url(), output);
  }

  // uint32 client_silence_data_version = 18;
  if (this->client_silence_data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->client_silence_data_version(), output);
  }

  // string client_data_md5 = 19;
  if (this->client_data_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_data_md5().data(), static_cast<int>(this->client_data_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.client_data_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->client_data_md5(), output);
  }

  // string client_silence_data_md5 = 20;
  if (this->client_silence_data_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_data_md5().data(), static_cast<int>(this->client_silence_data_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.client_silence_data_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->client_silence_data_md5(), output);
  }

  // string res_md5 = 21;
  if (this->res_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_md5().data(), static_cast<int>(this->res_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.res_md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->res_md5(), output);
  }

  // .proto.ResVersionConfig res_version_config = 22;
  if (this->has_res_version_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->res_version_config_, output);
  }

  // bytes secret_key = 23;
  if (this->secret_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      23, this->secret_key(), output);
  }

  // string official_community_url = 24;
  if (this->official_community_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->official_community_url().data(), static_cast<int>(this->official_community_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.official_community_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->official_community_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegionInfo)
}

::google::protobuf::uint8* RegionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gateserver_ip = 1;
  if (this->gateserver_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gateserver_ip().data(), static_cast<int>(this->gateserver_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.gateserver_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gateserver_ip(), target);
  }

  // uint32 gateserver_port = 2;
  if (this->gateserver_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gateserver_port(), target);
  }

  // string pay_callback_url = 3;
  if (this->pay_callback_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_callback_url().data(), static_cast<int>(this->pay_callback_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.pay_callback_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pay_callback_url(), target);
  }

  // string area_type = 7;
  if (this->area_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->area_type().data(), static_cast<int>(this->area_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.area_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->area_type(), target);
  }

  // string resource_url = 8;
  if (this->resource_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url().data(), static_cast<int>(this->resource_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.resource_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->resource_url(), target);
  }

  // string data_url = 9;
  if (this->data_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_url().data(), static_cast<int>(this->data_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.data_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->data_url(), target);
  }

  // string feedback_url = 10;
  if (this->feedback_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->feedback_url().data(), static_cast<int>(this->feedback_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.feedback_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->feedback_url(), target);
  }

  // string bulletin_url = 11;
  if (this->bulletin_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bulletin_url().data(), static_cast<int>(this->bulletin_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.bulletin_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->bulletin_url(), target);
  }

  // string resource_url_bak = 12;
  if (this->resource_url_bak().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_url_bak().data(), static_cast<int>(this->resource_url_bak().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.resource_url_bak");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->resource_url_bak(), target);
  }

  // string data_url_bak = 13;
  if (this->data_url_bak().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_url_bak().data(), static_cast<int>(this->data_url_bak().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.data_url_bak");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->data_url_bak(), target);
  }

  // uint32 client_data_version = 14;
  if (this->client_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->client_data_version(), target);
  }

  // uint32 res_version = 15;
  if (this->res_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->res_version(), target);
  }

  // string handbook_url = 16;
  if (this->handbook_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->handbook_url().data(), static_cast<int>(this->handbook_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.handbook_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->handbook_url(), target);
  }

  // uint32 client_silence_data_version = 18;
  if (this->client_silence_data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->client_silence_data_version(), target);
  }

  // string client_data_md5 = 19;
  if (this->client_data_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_data_md5().data(), static_cast<int>(this->client_data_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.client_data_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->client_data_md5(), target);
  }

  // string client_silence_data_md5 = 20;
  if (this->client_silence_data_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_silence_data_md5().data(), static_cast<int>(this->client_silence_data_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.client_silence_data_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->client_silence_data_md5(), target);
  }

  // string res_md5 = 21;
  if (this->res_md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->res_md5().data(), static_cast<int>(this->res_md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.res_md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->res_md5(), target);
  }

  // .proto.ResVersionConfig res_version_config = 22;
  if (this->has_res_version_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->res_version_config_, deterministic, target);
  }

  // bytes secret_key = 23;
  if (this->secret_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        23, this->secret_key(), target);
  }

  // string official_community_url = 24;
  if (this->official_community_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->official_community_url().data(), static_cast<int>(this->official_community_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RegionInfo.official_community_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->official_community_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegionInfo)
  return target;
}

size_t RegionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gateserver_ip = 1;
  if (this->gateserver_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gateserver_ip());
  }

  // string pay_callback_url = 3;
  if (this->pay_callback_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pay_callback_url());
  }

  // string area_type = 7;
  if (this->area_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->area_type());
  }

  // string resource_url = 8;
  if (this->resource_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_url());
  }

  // string data_url = 9;
  if (this->data_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_url());
  }

  // string feedback_url = 10;
  if (this->feedback_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->feedback_url());
  }

  // string bulletin_url = 11;
  if (this->bulletin_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bulletin_url());
  }

  // string resource_url_bak = 12;
  if (this->resource_url_bak().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_url_bak());
  }

  // string data_url_bak = 13;
  if (this->data_url_bak().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_url_bak());
  }

  // string handbook_url = 16;
  if (this->handbook_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->handbook_url());
  }

  // string client_data_md5 = 19;
  if (this->client_data_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_data_md5());
  }

  // string client_silence_data_md5 = 20;
  if (this->client_silence_data_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_silence_data_md5());
  }

  // string res_md5 = 21;
  if (this->res_md5().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->res_md5());
  }

  // bytes secret_key = 23;
  if (this->secret_key().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->secret_key());
  }

  // string official_community_url = 24;
  if (this->official_community_url().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->official_community_url());
  }

  // .proto.ResVersionConfig res_version_config = 22;
  if (this->has_res_version_config()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->res_version_config_);
  }

  // uint32 gateserver_port = 2;
  if (this->gateserver_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gateserver_port());
  }

  // uint32 client_data_version = 14;
  if (this->client_data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_data_version());
  }

  // uint32 res_version = 15;
  if (this->res_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->res_version());
  }

  // uint32 client_silence_data_version = 18;
  if (this->client_silence_data_version() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_silence_data_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RegionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegionInfo)
    MergeFrom(*source);
  }
}

void RegionInfo::MergeFrom(const RegionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gateserver_ip().size() > 0) {

    gateserver_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gateserver_ip_);
  }
  if (from.pay_callback_url().size() > 0) {

    pay_callback_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_callback_url_);
  }
  if (from.area_type().size() > 0) {

    area_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.area_type_);
  }
  if (from.resource_url().size() > 0) {

    resource_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_);
  }
  if (from.data_url().size() > 0) {

    data_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_url_);
  }
  if (from.feedback_url().size() > 0) {

    feedback_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.feedback_url_);
  }
  if (from.bulletin_url().size() > 0) {

    bulletin_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bulletin_url_);
  }
  if (from.resource_url_bak().size() > 0) {

    resource_url_bak_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_url_bak_);
  }
  if (from.data_url_bak().size() > 0) {

    data_url_bak_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_url_bak_);
  }
  if (from.handbook_url().size() > 0) {

    handbook_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.handbook_url_);
  }
  if (from.client_data_md5().size() > 0) {

    client_data_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_data_md5_);
  }
  if (from.client_silence_data_md5().size() > 0) {

    client_silence_data_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_silence_data_md5_);
  }
  if (from.res_md5().size() > 0) {

    res_md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.res_md5_);
  }
  if (from.secret_key().size() > 0) {

    secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_key_);
  }
  if (from.official_community_url().size() > 0) {

    official_community_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.official_community_url_);
  }
  if (from.has_res_version_config()) {
    mutable_res_version_config()->::proto::ResVersionConfig::MergeFrom(from.res_version_config());
  }
  if (from.gateserver_port() != 0) {
    set_gateserver_port(from.gateserver_port());
  }
  if (from.client_data_version() != 0) {
    set_client_data_version(from.client_data_version());
  }
  if (from.res_version() != 0) {
    set_res_version(from.res_version());
  }
  if (from.client_silence_data_version() != 0) {
    set_client_silence_data_version(from.client_silence_data_version());
  }
}

void RegionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionInfo::CopyFrom(const RegionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionInfo::IsInitialized() const {
  return true;
}

void RegionInfo::Swap(RegionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionInfo::InternalSwap(RegionInfo* other) {
  using std::swap;
  gateserver_ip_.Swap(&other->gateserver_ip_);
  pay_callback_url_.Swap(&other->pay_callback_url_);
  area_type_.Swap(&other->area_type_);
  resource_url_.Swap(&other->resource_url_);
  data_url_.Swap(&other->data_url_);
  feedback_url_.Swap(&other->feedback_url_);
  bulletin_url_.Swap(&other->bulletin_url_);
  resource_url_bak_.Swap(&other->resource_url_bak_);
  data_url_bak_.Swap(&other->data_url_bak_);
  handbook_url_.Swap(&other->handbook_url_);
  client_data_md5_.Swap(&other->client_data_md5_);
  client_silence_data_md5_.Swap(&other->client_silence_data_md5_);
  res_md5_.Swap(&other->res_md5_);
  secret_key_.Swap(&other->secret_key_);
  official_community_url_.Swap(&other->official_community_url_);
  swap(res_version_config_, other->res_version_config_);
  swap(gateserver_port_, other->gateserver_port_);
  swap(client_data_version_, other->client_data_version_);
  swap(res_version_, other->res_version_);
  swap(client_silence_data_version_, other->client_silence_data_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionInfo

// string gateserver_ip = 1;
void RegionInfo::clear_gateserver_ip() {
  gateserver_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::gateserver_ip() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.gateserver_ip)
  return gateserver_ip_.GetNoArena();
}
void RegionInfo::set_gateserver_ip(const ::std::string& value) {
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.gateserver_ip)
}
#if LANG_CXX11
void RegionInfo::set_gateserver_ip(::std::string&& value) {
  
  gateserver_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.gateserver_ip)
}
#endif
void RegionInfo::set_gateserver_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.gateserver_ip)
}
void RegionInfo::set_gateserver_ip(const char* value, size_t size) {
  
  gateserver_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.gateserver_ip)
}
::std::string* RegionInfo::mutable_gateserver_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.gateserver_ip)
  return gateserver_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_gateserver_ip() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.gateserver_ip)
  
  return gateserver_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_gateserver_ip(::std::string* gateserver_ip) {
  if (gateserver_ip != NULL) {
    
  } else {
    
  }
  gateserver_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gateserver_ip);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.gateserver_ip)
}

// uint32 gateserver_port = 2;
void RegionInfo::clear_gateserver_port() {
  gateserver_port_ = 0u;
}
::google::protobuf::uint32 RegionInfo::gateserver_port() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.gateserver_port)
  return gateserver_port_;
}
void RegionInfo::set_gateserver_port(::google::protobuf::uint32 value) {
  
  gateserver_port_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.gateserver_port)
}

// string pay_callback_url = 3;
void RegionInfo::clear_pay_callback_url() {
  pay_callback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::pay_callback_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.pay_callback_url)
  return pay_callback_url_.GetNoArena();
}
void RegionInfo::set_pay_callback_url(const ::std::string& value) {
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.pay_callback_url)
}
#if LANG_CXX11
void RegionInfo::set_pay_callback_url(::std::string&& value) {
  
  pay_callback_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.pay_callback_url)
}
#endif
void RegionInfo::set_pay_callback_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.pay_callback_url)
}
void RegionInfo::set_pay_callback_url(const char* value, size_t size) {
  
  pay_callback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.pay_callback_url)
}
::std::string* RegionInfo::mutable_pay_callback_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.pay_callback_url)
  return pay_callback_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_pay_callback_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.pay_callback_url)
  
  return pay_callback_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_pay_callback_url(::std::string* pay_callback_url) {
  if (pay_callback_url != NULL) {
    
  } else {
    
  }
  pay_callback_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_callback_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.pay_callback_url)
}

// string area_type = 7;
void RegionInfo::clear_area_type() {
  area_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::area_type() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.area_type)
  return area_type_.GetNoArena();
}
void RegionInfo::set_area_type(const ::std::string& value) {
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.area_type)
}
#if LANG_CXX11
void RegionInfo::set_area_type(::std::string&& value) {
  
  area_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.area_type)
}
#endif
void RegionInfo::set_area_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.area_type)
}
void RegionInfo::set_area_type(const char* value, size_t size) {
  
  area_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.area_type)
}
::std::string* RegionInfo::mutable_area_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.area_type)
  return area_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_area_type() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.area_type)
  
  return area_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_area_type(::std::string* area_type) {
  if (area_type != NULL) {
    
  } else {
    
  }
  area_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), area_type);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.area_type)
}

// string resource_url = 8;
void RegionInfo::clear_resource_url() {
  resource_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::resource_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.resource_url)
  return resource_url_.GetNoArena();
}
void RegionInfo::set_resource_url(const ::std::string& value) {
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.resource_url)
}
#if LANG_CXX11
void RegionInfo::set_resource_url(::std::string&& value) {
  
  resource_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.resource_url)
}
#endif
void RegionInfo::set_resource_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.resource_url)
}
void RegionInfo::set_resource_url(const char* value, size_t size) {
  
  resource_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.resource_url)
}
::std::string* RegionInfo::mutable_resource_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.resource_url)
  return resource_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_resource_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.resource_url)
  
  return resource_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_resource_url(::std::string* resource_url) {
  if (resource_url != NULL) {
    
  } else {
    
  }
  resource_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.resource_url)
}

// string data_url = 9;
void RegionInfo::clear_data_url() {
  data_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::data_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.data_url)
  return data_url_.GetNoArena();
}
void RegionInfo::set_data_url(const ::std::string& value) {
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.data_url)
}
#if LANG_CXX11
void RegionInfo::set_data_url(::std::string&& value) {
  
  data_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.data_url)
}
#endif
void RegionInfo::set_data_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.data_url)
}
void RegionInfo::set_data_url(const char* value, size_t size) {
  
  data_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.data_url)
}
::std::string* RegionInfo::mutable_data_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.data_url)
  return data_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_data_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.data_url)
  
  return data_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_data_url(::std::string* data_url) {
  if (data_url != NULL) {
    
  } else {
    
  }
  data_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.data_url)
}

// string feedback_url = 10;
void RegionInfo::clear_feedback_url() {
  feedback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::feedback_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.feedback_url)
  return feedback_url_.GetNoArena();
}
void RegionInfo::set_feedback_url(const ::std::string& value) {
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.feedback_url)
}
#if LANG_CXX11
void RegionInfo::set_feedback_url(::std::string&& value) {
  
  feedback_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.feedback_url)
}
#endif
void RegionInfo::set_feedback_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.feedback_url)
}
void RegionInfo::set_feedback_url(const char* value, size_t size) {
  
  feedback_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.feedback_url)
}
::std::string* RegionInfo::mutable_feedback_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.feedback_url)
  return feedback_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_feedback_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.feedback_url)
  
  return feedback_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_feedback_url(::std::string* feedback_url) {
  if (feedback_url != NULL) {
    
  } else {
    
  }
  feedback_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feedback_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.feedback_url)
}

// string bulletin_url = 11;
void RegionInfo::clear_bulletin_url() {
  bulletin_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::bulletin_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.bulletin_url)
  return bulletin_url_.GetNoArena();
}
void RegionInfo::set_bulletin_url(const ::std::string& value) {
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.bulletin_url)
}
#if LANG_CXX11
void RegionInfo::set_bulletin_url(::std::string&& value) {
  
  bulletin_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.bulletin_url)
}
#endif
void RegionInfo::set_bulletin_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.bulletin_url)
}
void RegionInfo::set_bulletin_url(const char* value, size_t size) {
  
  bulletin_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.bulletin_url)
}
::std::string* RegionInfo::mutable_bulletin_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.bulletin_url)
  return bulletin_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_bulletin_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.bulletin_url)
  
  return bulletin_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_bulletin_url(::std::string* bulletin_url) {
  if (bulletin_url != NULL) {
    
  } else {
    
  }
  bulletin_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bulletin_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.bulletin_url)
}

// string resource_url_bak = 12;
void RegionInfo::clear_resource_url_bak() {
  resource_url_bak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::resource_url_bak() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.resource_url_bak)
  return resource_url_bak_.GetNoArena();
}
void RegionInfo::set_resource_url_bak(const ::std::string& value) {
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.resource_url_bak)
}
#if LANG_CXX11
void RegionInfo::set_resource_url_bak(::std::string&& value) {
  
  resource_url_bak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.resource_url_bak)
}
#endif
void RegionInfo::set_resource_url_bak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.resource_url_bak)
}
void RegionInfo::set_resource_url_bak(const char* value, size_t size) {
  
  resource_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.resource_url_bak)
}
::std::string* RegionInfo::mutable_resource_url_bak() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.resource_url_bak)
  return resource_url_bak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_resource_url_bak() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.resource_url_bak)
  
  return resource_url_bak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_resource_url_bak(::std::string* resource_url_bak) {
  if (resource_url_bak != NULL) {
    
  } else {
    
  }
  resource_url_bak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_url_bak);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.resource_url_bak)
}

// string data_url_bak = 13;
void RegionInfo::clear_data_url_bak() {
  data_url_bak_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::data_url_bak() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.data_url_bak)
  return data_url_bak_.GetNoArena();
}
void RegionInfo::set_data_url_bak(const ::std::string& value) {
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.data_url_bak)
}
#if LANG_CXX11
void RegionInfo::set_data_url_bak(::std::string&& value) {
  
  data_url_bak_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.data_url_bak)
}
#endif
void RegionInfo::set_data_url_bak(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.data_url_bak)
}
void RegionInfo::set_data_url_bak(const char* value, size_t size) {
  
  data_url_bak_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.data_url_bak)
}
::std::string* RegionInfo::mutable_data_url_bak() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.data_url_bak)
  return data_url_bak_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_data_url_bak() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.data_url_bak)
  
  return data_url_bak_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_data_url_bak(::std::string* data_url_bak) {
  if (data_url_bak != NULL) {
    
  } else {
    
  }
  data_url_bak_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_url_bak);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.data_url_bak)
}

// uint32 client_data_version = 14;
void RegionInfo::clear_client_data_version() {
  client_data_version_ = 0u;
}
::google::protobuf::uint32 RegionInfo::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_data_version)
  return client_data_version_;
}
void RegionInfo::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_data_version)
}

// uint32 res_version = 15;
void RegionInfo::clear_res_version() {
  res_version_ = 0u;
}
::google::protobuf::uint32 RegionInfo::res_version() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.res_version)
  return res_version_;
}
void RegionInfo::set_res_version(::google::protobuf::uint32 value) {
  
  res_version_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.res_version)
}

// string handbook_url = 16;
void RegionInfo::clear_handbook_url() {
  handbook_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::handbook_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.handbook_url)
  return handbook_url_.GetNoArena();
}
void RegionInfo::set_handbook_url(const ::std::string& value) {
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.handbook_url)
}
#if LANG_CXX11
void RegionInfo::set_handbook_url(::std::string&& value) {
  
  handbook_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.handbook_url)
}
#endif
void RegionInfo::set_handbook_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.handbook_url)
}
void RegionInfo::set_handbook_url(const char* value, size_t size) {
  
  handbook_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.handbook_url)
}
::std::string* RegionInfo::mutable_handbook_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.handbook_url)
  return handbook_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_handbook_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.handbook_url)
  
  return handbook_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_handbook_url(::std::string* handbook_url) {
  if (handbook_url != NULL) {
    
  } else {
    
  }
  handbook_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), handbook_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.handbook_url)
}

// uint32 client_silence_data_version = 18;
void RegionInfo::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
::google::protobuf::uint32 RegionInfo::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_silence_data_version)
  return client_silence_data_version_;
}
void RegionInfo::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_silence_data_version)
}

// string client_data_md5 = 19;
void RegionInfo::clear_client_data_md5() {
  client_data_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::client_data_md5() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_data_md5)
  return client_data_md5_.GetNoArena();
}
void RegionInfo::set_client_data_md5(const ::std::string& value) {
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_data_md5)
}
#if LANG_CXX11
void RegionInfo::set_client_data_md5(::std::string&& value) {
  
  client_data_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.client_data_md5)
}
#endif
void RegionInfo::set_client_data_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.client_data_md5)
}
void RegionInfo::set_client_data_md5(const char* value, size_t size) {
  
  client_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.client_data_md5)
}
::std::string* RegionInfo::mutable_client_data_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.client_data_md5)
  return client_data_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_client_data_md5() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.client_data_md5)
  
  return client_data_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_client_data_md5(::std::string* client_data_md5) {
  if (client_data_md5 != NULL) {
    
  } else {
    
  }
  client_data_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_data_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.client_data_md5)
}

// string client_silence_data_md5 = 20;
void RegionInfo::clear_client_silence_data_md5() {
  client_silence_data_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::client_silence_data_md5() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.client_silence_data_md5)
  return client_silence_data_md5_.GetNoArena();
}
void RegionInfo::set_client_silence_data_md5(const ::std::string& value) {
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.client_silence_data_md5)
}
#if LANG_CXX11
void RegionInfo::set_client_silence_data_md5(::std::string&& value) {
  
  client_silence_data_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.client_silence_data_md5)
}
#endif
void RegionInfo::set_client_silence_data_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.client_silence_data_md5)
}
void RegionInfo::set_client_silence_data_md5(const char* value, size_t size) {
  
  client_silence_data_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.client_silence_data_md5)
}
::std::string* RegionInfo::mutable_client_silence_data_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.client_silence_data_md5)
  return client_silence_data_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_client_silence_data_md5() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.client_silence_data_md5)
  
  return client_silence_data_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_client_silence_data_md5(::std::string* client_silence_data_md5) {
  if (client_silence_data_md5 != NULL) {
    
  } else {
    
  }
  client_silence_data_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_data_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.client_silence_data_md5)
}

// string res_md5 = 21;
void RegionInfo::clear_res_md5() {
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::res_md5() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.res_md5)
  return res_md5_.GetNoArena();
}
void RegionInfo::set_res_md5(const ::std::string& value) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.res_md5)
}
#if LANG_CXX11
void RegionInfo::set_res_md5(::std::string&& value) {
  
  res_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.res_md5)
}
#endif
void RegionInfo::set_res_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.res_md5)
}
void RegionInfo::set_res_md5(const char* value, size_t size) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.res_md5)
}
::std::string* RegionInfo::mutable_res_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.res_md5)
  return res_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_res_md5() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.res_md5)
  
  return res_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_res_md5(::std::string* res_md5) {
  if (res_md5 != NULL) {
    
  } else {
    
  }
  res_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.res_md5)
}

// .proto.ResVersionConfig res_version_config = 22;
bool RegionInfo::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
void RegionInfo::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
const ::proto::ResVersionConfig& RegionInfo::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.RegionInfo.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
::proto::ResVersionConfig* RegionInfo::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.res_version_config)
  return res_version_config_;
}
::proto::ResVersionConfig* RegionInfo::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
void RegionInfo::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.res_version_config)
}

// bytes secret_key = 23;
void RegionInfo::clear_secret_key() {
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::secret_key() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.secret_key)
  return secret_key_.GetNoArena();
}
void RegionInfo::set_secret_key(const ::std::string& value) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.secret_key)
}
#if LANG_CXX11
void RegionInfo::set_secret_key(::std::string&& value) {
  
  secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.secret_key)
}
#endif
void RegionInfo::set_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.secret_key)
}
void RegionInfo::set_secret_key(const void* value, size_t size) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.secret_key)
}
::std::string* RegionInfo::mutable_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.secret_key)
  return secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_secret_key() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.secret_key)
  
  return secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_secret_key(::std::string* secret_key) {
  if (secret_key != NULL) {
    
  } else {
    
  }
  secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.secret_key)
}

// string official_community_url = 24;
void RegionInfo::clear_official_community_url() {
  official_community_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegionInfo::official_community_url() const {
  // @@protoc_insertion_point(field_get:proto.RegionInfo.official_community_url)
  return official_community_url_.GetNoArena();
}
void RegionInfo::set_official_community_url(const ::std::string& value) {
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RegionInfo.official_community_url)
}
#if LANG_CXX11
void RegionInfo::set_official_community_url(::std::string&& value) {
  
  official_community_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RegionInfo.official_community_url)
}
#endif
void RegionInfo::set_official_community_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RegionInfo.official_community_url)
}
void RegionInfo::set_official_community_url(const char* value, size_t size) {
  
  official_community_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RegionInfo.official_community_url)
}
::std::string* RegionInfo::mutable_official_community_url() {
  
  // @@protoc_insertion_point(field_mutable:proto.RegionInfo.official_community_url)
  return official_community_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegionInfo::release_official_community_url() {
  // @@protoc_insertion_point(field_release:proto.RegionInfo.official_community_url)
  
  return official_community_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegionInfo::set_allocated_official_community_url(::std::string* official_community_url) {
  if (official_community_url != NULL) {
    
  } else {
    
  }
  official_community_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), official_community_url);
  // @@protoc_insertion_point(field_set_allocated:proto.RegionInfo.official_community_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryCurrRegionHttpRsp::kRetcodeFieldNumber;
const int QueryCurrRegionHttpRsp::kMsgFieldNumber;
const int QueryCurrRegionHttpRsp::kRegionInfoFieldNumber;
const int QueryCurrRegionHttpRsp::kForceUdpateFieldNumber;
const int QueryCurrRegionHttpRsp::kStopServerFieldNumber;
const int QueryCurrRegionHttpRsp::kClientConfigFieldNumber;
const int QueryCurrRegionHttpRsp::kClientSecretKeyFieldNumber;
const int QueryCurrRegionHttpRsp::kRegionCustomConfigEncryptedFieldNumber;
const int QueryCurrRegionHttpRsp::kClientRegionCustomConfigEncryptedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryCurrRegionHttpRsp::QueryCurrRegionHttpRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QueryCurrRegionHttpRsp)
}
QueryCurrRegionHttpRsp::QueryCurrRegionHttpRsp(const QueryCurrRegionHttpRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  client_secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_secret_key().size() > 0) {
    client_secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_secret_key_);
  }
  region_custom_config_encrypted_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region_custom_config_encrypted().size() > 0) {
    region_custom_config_encrypted_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_custom_config_encrypted_);
  }
  client_region_custom_config_encrypted_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_region_custom_config_encrypted().size() > 0) {
    client_region_custom_config_encrypted_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_region_custom_config_encrypted_);
  }
  if (from.has_region_info()) {
    region_info_ = new ::proto::RegionInfo(*from.region_info_);
  } else {
    region_info_ = NULL;
  }
  if (from.has_client_config()) {
    client_config_ = new ::proto::ClientCustomConfig(*from.client_config_);
  } else {
    client_config_ = NULL;
  }
  retcode_ = from.retcode_;
  clear_has_detail();
  switch (from.detail_case()) {
    case kForceUdpate: {
      mutable_force_udpate()->::proto::ForceUpdateInfo::MergeFrom(from.force_udpate());
      break;
    }
    case kStopServer: {
      mutable_stop_server()->::proto::StopServerInfo::MergeFrom(from.stop_server());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.QueryCurrRegionHttpRsp)
}

void QueryCurrRegionHttpRsp::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_custom_config_encrypted_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_region_custom_config_encrypted_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&region_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&region_info_)) + sizeof(retcode_));
  clear_has_detail();
  _cached_size_ = 0;
}

QueryCurrRegionHttpRsp::~QueryCurrRegionHttpRsp() {
  // @@protoc_insertion_point(destructor:proto.QueryCurrRegionHttpRsp)
  SharedDtor();
}

void QueryCurrRegionHttpRsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_custom_config_encrypted_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_region_custom_config_encrypted_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete region_info_;
  if (this != internal_default_instance()) delete client_config_;
  if (has_detail()) {
    clear_detail();
  }
}

void QueryCurrRegionHttpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryCurrRegionHttpRsp::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryCurrRegionHttpRsp& QueryCurrRegionHttpRsp::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryCurrRegionHttpRsp* QueryCurrRegionHttpRsp::New(::google::protobuf::Arena* arena) const {
  QueryCurrRegionHttpRsp* n = new QueryCurrRegionHttpRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryCurrRegionHttpRsp::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.QueryCurrRegionHttpRsp)
  switch (detail_case()) {
    case kForceUdpate: {
      delete detail_.force_udpate_;
      break;
    }
    case kStopServer: {
      delete detail_.stop_server_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void QueryCurrRegionHttpRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QueryCurrRegionHttpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_region_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && region_info_ != NULL) {
    delete region_info_;
  }
  region_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) {
    delete client_config_;
  }
  client_config_ = NULL;
  retcode_ = 0;
  clear_detail();
  _internal_metadata_.Clear();
}

bool QueryCurrRegionHttpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QueryCurrRegionHttpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.QueryCurrRegionHttpRsp.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RegionInfo region_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ForceUpdateInfo force_udpate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_force_udpate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.StopServerInfo stop_server = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stop_server()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ClientCustomConfig client_config = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_client_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes client_secret_key = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_secret_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes region_custom_config_encrypted = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_region_custom_config_encrypted()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes client_region_custom_config_encrypted = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_client_region_custom_config_encrypted()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QueryCurrRegionHttpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QueryCurrRegionHttpRsp)
  return false;
#undef DO_
}

void QueryCurrRegionHttpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QueryCurrRegionHttpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.QueryCurrRegionHttpRsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // .proto.RegionInfo region_info = 3;
  if (this->has_region_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->region_info_, output);
  }

  // .proto.ForceUpdateInfo force_udpate = 4;
  if (has_force_udpate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *detail_.force_udpate_, output);
  }

  // .proto.StopServerInfo stop_server = 5;
  if (has_stop_server()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *detail_.stop_server_, output);
  }

  // .proto.ClientCustomConfig client_config = 10;
  if (this->has_client_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->client_config_, output);
  }

  // bytes client_secret_key = 11;
  if (this->client_secret_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->client_secret_key(), output);
  }

  // bytes region_custom_config_encrypted = 12;
  if (this->region_custom_config_encrypted().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->region_custom_config_encrypted(), output);
  }

  // bytes client_region_custom_config_encrypted = 13;
  if (this->client_region_custom_config_encrypted().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      13, this->client_region_custom_config_encrypted(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QueryCurrRegionHttpRsp)
}

::google::protobuf::uint8* QueryCurrRegionHttpRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QueryCurrRegionHttpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.QueryCurrRegionHttpRsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // .proto.RegionInfo region_info = 3;
  if (this->has_region_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->region_info_, deterministic, target);
  }

  // .proto.ForceUpdateInfo force_udpate = 4;
  if (has_force_udpate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *detail_.force_udpate_, deterministic, target);
  }

  // .proto.StopServerInfo stop_server = 5;
  if (has_stop_server()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *detail_.stop_server_, deterministic, target);
  }

  // .proto.ClientCustomConfig client_config = 10;
  if (this->has_client_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->client_config_, deterministic, target);
  }

  // bytes client_secret_key = 11;
  if (this->client_secret_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->client_secret_key(), target);
  }

  // bytes region_custom_config_encrypted = 12;
  if (this->region_custom_config_encrypted().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->region_custom_config_encrypted(), target);
  }

  // bytes client_region_custom_config_encrypted = 13;
  if (this->client_region_custom_config_encrypted().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        13, this->client_region_custom_config_encrypted(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QueryCurrRegionHttpRsp)
  return target;
}

size_t QueryCurrRegionHttpRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QueryCurrRegionHttpRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // bytes client_secret_key = 11;
  if (this->client_secret_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_secret_key());
  }

  // bytes region_custom_config_encrypted = 12;
  if (this->region_custom_config_encrypted().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->region_custom_config_encrypted());
  }

  // bytes client_region_custom_config_encrypted = 13;
  if (this->client_region_custom_config_encrypted().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->client_region_custom_config_encrypted());
  }

  // .proto.RegionInfo region_info = 3;
  if (this->has_region_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->region_info_);
  }

  // .proto.ClientCustomConfig client_config = 10;
  if (this->has_client_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->client_config_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  switch (detail_case()) {
    // .proto.ForceUpdateInfo force_udpate = 4;
    case kForceUdpate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.force_udpate_);
      break;
    }
    // .proto.StopServerInfo stop_server = 5;
    case kStopServer: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.stop_server_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryCurrRegionHttpRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QueryCurrRegionHttpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryCurrRegionHttpRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryCurrRegionHttpRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QueryCurrRegionHttpRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QueryCurrRegionHttpRsp)
    MergeFrom(*source);
  }
}

void QueryCurrRegionHttpRsp::MergeFrom(const QueryCurrRegionHttpRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QueryCurrRegionHttpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.client_secret_key().size() > 0) {

    client_secret_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_secret_key_);
  }
  if (from.region_custom_config_encrypted().size() > 0) {

    region_custom_config_encrypted_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_custom_config_encrypted_);
  }
  if (from.client_region_custom_config_encrypted().size() > 0) {

    client_region_custom_config_encrypted_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_region_custom_config_encrypted_);
  }
  if (from.has_region_info()) {
    mutable_region_info()->::proto::RegionInfo::MergeFrom(from.region_info());
  }
  if (from.has_client_config()) {
    mutable_client_config()->::proto::ClientCustomConfig::MergeFrom(from.client_config());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  switch (from.detail_case()) {
    case kForceUdpate: {
      mutable_force_udpate()->::proto::ForceUpdateInfo::MergeFrom(from.force_udpate());
      break;
    }
    case kStopServer: {
      mutable_stop_server()->::proto::StopServerInfo::MergeFrom(from.stop_server());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void QueryCurrRegionHttpRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QueryCurrRegionHttpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryCurrRegionHttpRsp::CopyFrom(const QueryCurrRegionHttpRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QueryCurrRegionHttpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryCurrRegionHttpRsp::IsInitialized() const {
  return true;
}

void QueryCurrRegionHttpRsp::Swap(QueryCurrRegionHttpRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryCurrRegionHttpRsp::InternalSwap(QueryCurrRegionHttpRsp* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  client_secret_key_.Swap(&other->client_secret_key_);
  region_custom_config_encrypted_.Swap(&other->region_custom_config_encrypted_);
  client_region_custom_config_encrypted_.Swap(&other->client_region_custom_config_encrypted_);
  swap(region_info_, other->region_info_);
  swap(client_config_, other->client_config_);
  swap(retcode_, other->retcode_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryCurrRegionHttpRsp::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryCurrRegionHttpRsp

// int32 retcode = 1;
void QueryCurrRegionHttpRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QueryCurrRegionHttpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.retcode)
  return retcode_;
}
void QueryCurrRegionHttpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.retcode)
}

// string msg = 2;
void QueryCurrRegionHttpRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryCurrRegionHttpRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.msg)
  return msg_.GetNoArena();
}
void QueryCurrRegionHttpRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.msg)
}
#if LANG_CXX11
void QueryCurrRegionHttpRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.msg)
}
#endif
void QueryCurrRegionHttpRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.msg)
}
void QueryCurrRegionHttpRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.msg)
}
::std::string* QueryCurrRegionHttpRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryCurrRegionHttpRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryCurrRegionHttpRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.msg)
}

// .proto.RegionInfo region_info = 3;
bool QueryCurrRegionHttpRsp::has_region_info() const {
  return this != internal_default_instance() && region_info_ != NULL;
}
void QueryCurrRegionHttpRsp::clear_region_info() {
  if (GetArenaNoVirtual() == NULL && region_info_ != NULL) delete region_info_;
  region_info_ = NULL;
}
const ::proto::RegionInfo& QueryCurrRegionHttpRsp::region_info() const {
  const ::proto::RegionInfo* p = region_info_;
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.region_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::RegionInfo*>(
      &::proto::_RegionInfo_default_instance_);
}
::proto::RegionInfo* QueryCurrRegionHttpRsp::mutable_region_info() {
  
  if (region_info_ == NULL) {
    region_info_ = new ::proto::RegionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.region_info)
  return region_info_;
}
::proto::RegionInfo* QueryCurrRegionHttpRsp::release_region_info() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.region_info)
  
  ::proto::RegionInfo* temp = region_info_;
  region_info_ = NULL;
  return temp;
}
void QueryCurrRegionHttpRsp::set_allocated_region_info(::proto::RegionInfo* region_info) {
  delete region_info_;
  region_info_ = region_info;
  if (region_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.region_info)
}

// .proto.ForceUpdateInfo force_udpate = 4;
bool QueryCurrRegionHttpRsp::has_force_udpate() const {
  return detail_case() == kForceUdpate;
}
void QueryCurrRegionHttpRsp::set_has_force_udpate() {
  _oneof_case_[0] = kForceUdpate;
}
void QueryCurrRegionHttpRsp::clear_force_udpate() {
  if (has_force_udpate()) {
    delete detail_.force_udpate_;
    clear_has_detail();
  }
}
 const ::proto::ForceUpdateInfo& QueryCurrRegionHttpRsp::force_udpate() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.force_udpate)
  return has_force_udpate()
      ? *detail_.force_udpate_
      : ::proto::ForceUpdateInfo::default_instance();
}
::proto::ForceUpdateInfo* QueryCurrRegionHttpRsp::mutable_force_udpate() {
  if (!has_force_udpate()) {
    clear_detail();
    set_has_force_udpate();
    detail_.force_udpate_ = new ::proto::ForceUpdateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.force_udpate)
  return detail_.force_udpate_;
}
::proto::ForceUpdateInfo* QueryCurrRegionHttpRsp::release_force_udpate() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.force_udpate)
  if (has_force_udpate()) {
    clear_has_detail();
    ::proto::ForceUpdateInfo* temp = detail_.force_udpate_;
    detail_.force_udpate_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QueryCurrRegionHttpRsp::set_allocated_force_udpate(::proto::ForceUpdateInfo* force_udpate) {
  clear_detail();
  if (force_udpate) {
    set_has_force_udpate();
    detail_.force_udpate_ = force_udpate;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.force_udpate)
}

// .proto.StopServerInfo stop_server = 5;
bool QueryCurrRegionHttpRsp::has_stop_server() const {
  return detail_case() == kStopServer;
}
void QueryCurrRegionHttpRsp::set_has_stop_server() {
  _oneof_case_[0] = kStopServer;
}
void QueryCurrRegionHttpRsp::clear_stop_server() {
  if (has_stop_server()) {
    delete detail_.stop_server_;
    clear_has_detail();
  }
}
 const ::proto::StopServerInfo& QueryCurrRegionHttpRsp::stop_server() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.stop_server)
  return has_stop_server()
      ? *detail_.stop_server_
      : ::proto::StopServerInfo::default_instance();
}
::proto::StopServerInfo* QueryCurrRegionHttpRsp::mutable_stop_server() {
  if (!has_stop_server()) {
    clear_detail();
    set_has_stop_server();
    detail_.stop_server_ = new ::proto::StopServerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.stop_server)
  return detail_.stop_server_;
}
::proto::StopServerInfo* QueryCurrRegionHttpRsp::release_stop_server() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.stop_server)
  if (has_stop_server()) {
    clear_has_detail();
    ::proto::StopServerInfo* temp = detail_.stop_server_;
    detail_.stop_server_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QueryCurrRegionHttpRsp::set_allocated_stop_server(::proto::StopServerInfo* stop_server) {
  clear_detail();
  if (stop_server) {
    set_has_stop_server();
    detail_.stop_server_ = stop_server;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.stop_server)
}

// .proto.ClientCustomConfig client_config = 10;
bool QueryCurrRegionHttpRsp::has_client_config() const {
  return this != internal_default_instance() && client_config_ != NULL;
}
void QueryCurrRegionHttpRsp::clear_client_config() {
  if (GetArenaNoVirtual() == NULL && client_config_ != NULL) delete client_config_;
  client_config_ = NULL;
}
const ::proto::ClientCustomConfig& QueryCurrRegionHttpRsp::client_config() const {
  const ::proto::ClientCustomConfig* p = client_config_;
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.client_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ClientCustomConfig*>(
      &::proto::_ClientCustomConfig_default_instance_);
}
::proto::ClientCustomConfig* QueryCurrRegionHttpRsp::mutable_client_config() {
  
  if (client_config_ == NULL) {
    client_config_ = new ::proto::ClientCustomConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.client_config)
  return client_config_;
}
::proto::ClientCustomConfig* QueryCurrRegionHttpRsp::release_client_config() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.client_config)
  
  ::proto::ClientCustomConfig* temp = client_config_;
  client_config_ = NULL;
  return temp;
}
void QueryCurrRegionHttpRsp::set_allocated_client_config(::proto::ClientCustomConfig* client_config) {
  delete client_config_;
  client_config_ = client_config;
  if (client_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.client_config)
}

// bytes client_secret_key = 11;
void QueryCurrRegionHttpRsp::clear_client_secret_key() {
  client_secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryCurrRegionHttpRsp::client_secret_key() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.client_secret_key)
  return client_secret_key_.GetNoArena();
}
void QueryCurrRegionHttpRsp::set_client_secret_key(const ::std::string& value) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
#if LANG_CXX11
void QueryCurrRegionHttpRsp::set_client_secret_key(::std::string&& value) {
  
  client_secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
#endif
void QueryCurrRegionHttpRsp::set_client_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
void QueryCurrRegionHttpRsp::set_client_secret_key(const void* value, size_t size) {
  
  client_secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.client_secret_key)
}
::std::string* QueryCurrRegionHttpRsp::mutable_client_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.client_secret_key)
  return client_secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryCurrRegionHttpRsp::release_client_secret_key() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.client_secret_key)
  
  return client_secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryCurrRegionHttpRsp::set_allocated_client_secret_key(::std::string* client_secret_key) {
  if (client_secret_key != NULL) {
    
  } else {
    
  }
  client_secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.client_secret_key)
}

// bytes region_custom_config_encrypted = 12;
void QueryCurrRegionHttpRsp::clear_region_custom_config_encrypted() {
  region_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryCurrRegionHttpRsp::region_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  return region_custom_config_encrypted_.GetNoArena();
}
void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const ::std::string& value) {
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
#if LANG_CXX11
void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(::std::string&& value) {
  
  region_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
#endif
void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
void QueryCurrRegionHttpRsp::set_region_custom_config_encrypted(const void* value, size_t size) {
  
  region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}
::std::string* QueryCurrRegionHttpRsp::mutable_region_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  return region_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryCurrRegionHttpRsp::release_region_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
  
  return region_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryCurrRegionHttpRsp::set_allocated_region_custom_config_encrypted(::std::string* region_custom_config_encrypted) {
  if (region_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  region_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.region_custom_config_encrypted)
}

// bytes client_region_custom_config_encrypted = 13;
void QueryCurrRegionHttpRsp::clear_client_region_custom_config_encrypted() {
  client_region_custom_config_encrypted_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QueryCurrRegionHttpRsp::client_region_custom_config_encrypted() const {
  // @@protoc_insertion_point(field_get:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  return client_region_custom_config_encrypted_.GetNoArena();
}
void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const ::std::string& value) {
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
#if LANG_CXX11
void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(::std::string&& value) {
  
  client_region_custom_config_encrypted_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
#endif
void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
void QueryCurrRegionHttpRsp::set_client_region_custom_config_encrypted(const void* value, size_t size) {
  
  client_region_custom_config_encrypted_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}
::std::string* QueryCurrRegionHttpRsp::mutable_client_region_custom_config_encrypted() {
  
  // @@protoc_insertion_point(field_mutable:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  return client_region_custom_config_encrypted_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QueryCurrRegionHttpRsp::release_client_region_custom_config_encrypted() {
  // @@protoc_insertion_point(field_release:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
  
  return client_region_custom_config_encrypted_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QueryCurrRegionHttpRsp::set_allocated_client_region_custom_config_encrypted(::std::string* client_region_custom_config_encrypted) {
  if (client_region_custom_config_encrypted != NULL) {
    
  } else {
    
  }
  client_region_custom_config_encrypted_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_region_custom_config_encrypted);
  // @@protoc_insertion_point(field_set_allocated:proto.QueryCurrRegionHttpRsp.client_region_custom_config_encrypted)
}

bool QueryCurrRegionHttpRsp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void QueryCurrRegionHttpRsp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
QueryCurrRegionHttpRsp::DetailCase QueryCurrRegionHttpRsp::detail_case() const {
  return QueryCurrRegionHttpRsp::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reliquary::kLevelFieldNumber;
const int Reliquary::kExpFieldNumber;
const int Reliquary::kPromoteLevelFieldNumber;
const int Reliquary::kMainPropIdFieldNumber;
const int Reliquary::kAppendPropIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reliquary::Reliquary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Reliquary)
}
Reliquary::Reliquary(const Reliquary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      append_prop_id_list_(from.append_prop_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&main_prop_id_) -
    reinterpret_cast<char*>(&level_)) + sizeof(main_prop_id_));
  // @@protoc_insertion_point(copy_constructor:proto.Reliquary)
}

void Reliquary::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&main_prop_id_) -
      reinterpret_cast<char*>(&level_)) + sizeof(main_prop_id_));
  _cached_size_ = 0;
}

Reliquary::~Reliquary() {
  // @@protoc_insertion_point(destructor:proto.Reliquary)
  SharedDtor();
}

void Reliquary::SharedDtor() {
}

void Reliquary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reliquary::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reliquary& Reliquary::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Reliquary* Reliquary::New(::google::protobuf::Arena* arena) const {
  Reliquary* n = new Reliquary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reliquary::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Reliquary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  append_prop_id_list_.Clear();
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&main_prop_id_) -
      reinterpret_cast<char*>(&level_)) + sizeof(main_prop_id_));
  _internal_metadata_.Clear();
}

bool Reliquary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Reliquary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 main_prop_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &main_prop_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 append_prop_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_append_prop_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_append_prop_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Reliquary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Reliquary)
  return false;
#undef DO_
}

void Reliquary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Reliquary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->promote_level(), output);
  }

  // uint32 main_prop_id = 4;
  if (this->main_prop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->main_prop_id(), output);
  }

  // repeated uint32 append_prop_id_list = 5;
  if (this->append_prop_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _append_prop_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->append_prop_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->append_prop_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Reliquary)
}

::google::protobuf::uint8* Reliquary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Reliquary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->promote_level(), target);
  }

  // uint32 main_prop_id = 4;
  if (this->main_prop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->main_prop_id(), target);
  }

  // repeated uint32 append_prop_id_list = 5;
  if (this->append_prop_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _append_prop_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->append_prop_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Reliquary)
  return target;
}

size_t Reliquary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Reliquary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 append_prop_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->append_prop_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _append_prop_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  // uint32 main_prop_id = 4;
  if (this->main_prop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->main_prop_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reliquary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Reliquary)
  GOOGLE_DCHECK_NE(&from, this);
  const Reliquary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reliquary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Reliquary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Reliquary)
    MergeFrom(*source);
  }
}

void Reliquary::MergeFrom(const Reliquary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Reliquary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  append_prop_id_list_.MergeFrom(from.append_prop_id_list_);
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
  if (from.main_prop_id() != 0) {
    set_main_prop_id(from.main_prop_id());
  }
}

void Reliquary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Reliquary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reliquary::CopyFrom(const Reliquary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Reliquary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reliquary::IsInitialized() const {
  return true;
}

void Reliquary::Swap(Reliquary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reliquary::InternalSwap(Reliquary* other) {
  using std::swap;
  append_prop_id_list_.InternalSwap(&other->append_prop_id_list_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(promote_level_, other->promote_level_);
  swap(main_prop_id_, other->main_prop_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reliquary::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Reliquary

// uint32 level = 1;
void Reliquary::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 Reliquary::level() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.level)
  return level_;
}
void Reliquary::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.level)
}

// uint32 exp = 2;
void Reliquary::clear_exp() {
  exp_ = 0u;
}
::google::protobuf::uint32 Reliquary::exp() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.exp)
  return exp_;
}
void Reliquary::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.exp)
}

// uint32 promote_level = 3;
void Reliquary::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 Reliquary::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.promote_level)
  return promote_level_;
}
void Reliquary::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.promote_level)
}

// uint32 main_prop_id = 4;
void Reliquary::clear_main_prop_id() {
  main_prop_id_ = 0u;
}
::google::protobuf::uint32 Reliquary::main_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.main_prop_id)
  return main_prop_id_;
}
void Reliquary::set_main_prop_id(::google::protobuf::uint32 value) {
  
  main_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Reliquary.main_prop_id)
}

// repeated uint32 append_prop_id_list = 5;
int Reliquary::append_prop_id_list_size() const {
  return append_prop_id_list_.size();
}
void Reliquary::clear_append_prop_id_list() {
  append_prop_id_list_.Clear();
}
::google::protobuf::uint32 Reliquary::append_prop_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Reliquary.append_prop_id_list)
  return append_prop_id_list_.Get(index);
}
void Reliquary::set_append_prop_id_list(int index, ::google::protobuf::uint32 value) {
  append_prop_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Reliquary.append_prop_id_list)
}
void Reliquary::add_append_prop_id_list(::google::protobuf::uint32 value) {
  append_prop_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Reliquary.append_prop_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Reliquary::append_prop_id_list() const {
  // @@protoc_insertion_point(field_list:proto.Reliquary.append_prop_id_list)
  return append_prop_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Reliquary::mutable_append_prop_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Reliquary.append_prop_id_list)
  return &append_prop_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Weapon::Weapon_AffixMapEntry::Weapon_AffixMapEntry() {}
Weapon::Weapon_AffixMapEntry::Weapon_AffixMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Weapon::Weapon_AffixMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[13];
}
void Weapon::Weapon_AffixMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Weapon::Weapon_AffixMapEntry::MergeFrom(const Weapon_AffixMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Weapon::kLevelFieldNumber;
const int Weapon::kExpFieldNumber;
const int Weapon::kPromoteLevelFieldNumber;
const int Weapon::kAffixMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Weapon::Weapon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Weapon)
}
Weapon::Weapon(const Weapon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  affix_map_.MergeFrom(from.affix_map_);
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&promote_level_) -
    reinterpret_cast<char*>(&level_)) + sizeof(promote_level_));
  // @@protoc_insertion_point(copy_constructor:proto.Weapon)
}

void Weapon::SharedCtor() {
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&level_)) + sizeof(promote_level_));
  _cached_size_ = 0;
}

Weapon::~Weapon() {
  // @@protoc_insertion_point(destructor:proto.Weapon)
  SharedDtor();
}

void Weapon::SharedDtor() {
}

void Weapon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Weapon::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Weapon& Weapon::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Weapon* Weapon::New(::google::protobuf::Arena* arena) const {
  Weapon* n = new Weapon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Weapon::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Weapon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  affix_map_.Clear();
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&level_)) + sizeof(promote_level_));
  _internal_metadata_.Clear();
}

bool Weapon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Weapon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> affix_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          Weapon_AffixMapEntry::Parser< ::google::protobuf::internal::MapField<
              Weapon_AffixMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&affix_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Weapon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Weapon)
  return false;
#undef DO_
}

void Weapon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Weapon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->level(), output);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp(), output);
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->promote_level(), output);
  }

  // map<uint32, uint32> affix_map = 4;
  if (!this->affix_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->affix_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->affix_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Weapon_AffixMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(affix_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Weapon_AffixMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it) {
        entry.reset(affix_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Weapon)
}

::google::protobuf::uint8* Weapon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Weapon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->level(), target);
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp(), target);
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->promote_level(), target);
  }

  // map<uint32, uint32> affix_map = 4;
  if (!this->affix_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->affix_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->affix_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Weapon_AffixMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(affix_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Weapon_AffixMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it) {
        entry.reset(affix_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Weapon)
  return target;
}

size_t Weapon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Weapon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> affix_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->affix_map_size());
  {
    ::google::protobuf::scoped_ptr<Weapon_AffixMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->affix_map().begin();
        it != this->affix_map().end(); ++it) {
      entry.reset(affix_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 exp = 2;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // uint32 promote_level = 3;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Weapon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Weapon)
  GOOGLE_DCHECK_NE(&from, this);
  const Weapon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Weapon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Weapon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Weapon)
    MergeFrom(*source);
  }
}

void Weapon::MergeFrom(const Weapon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Weapon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  affix_map_.MergeFrom(from.affix_map_);
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
}

void Weapon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Weapon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Weapon::CopyFrom(const Weapon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Weapon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Weapon::IsInitialized() const {
  return true;
}

void Weapon::Swap(Weapon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Weapon::InternalSwap(Weapon* other) {
  using std::swap;
  affix_map_.Swap(&other->affix_map_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(promote_level_, other->promote_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Weapon::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Weapon

// uint32 level = 1;
void Weapon::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 Weapon::level() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.level)
  return level_;
}
void Weapon::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.level)
}

// uint32 exp = 2;
void Weapon::clear_exp() {
  exp_ = 0u;
}
::google::protobuf::uint32 Weapon::exp() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.exp)
  return exp_;
}
void Weapon::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.exp)
}

// uint32 promote_level = 3;
void Weapon::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 Weapon::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.Weapon.promote_level)
  return promote_level_;
}
void Weapon::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.Weapon.promote_level)
}

// map<uint32, uint32> affix_map = 4;
int Weapon::affix_map_size() const {
  return affix_map_.size();
}
void Weapon::clear_affix_map() {
  affix_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
Weapon::affix_map() const {
  // @@protoc_insertion_point(field_map:proto.Weapon.affix_map)
  return affix_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
Weapon::mutable_affix_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.Weapon.affix_map)
  return affix_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry() {}
MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[15];
}
void MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry::MergeFrom(const MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaterialDeleteInfo_CountDownDelete::kDeleteTimeNumMapFieldNumber;
const int MaterialDeleteInfo_CountDownDelete::kConfigCountDownTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MaterialDeleteInfo.CountDownDelete)
}
MaterialDeleteInfo_CountDownDelete::MaterialDeleteInfo_CountDownDelete(const MaterialDeleteInfo_CountDownDelete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delete_time_num_map_.MergeFrom(from.delete_time_num_map_);
  config_count_down_time_ = from.config_count_down_time_;
  // @@protoc_insertion_point(copy_constructor:proto.MaterialDeleteInfo.CountDownDelete)
}

void MaterialDeleteInfo_CountDownDelete::SharedCtor() {
  config_count_down_time_ = 0u;
  _cached_size_ = 0;
}

MaterialDeleteInfo_CountDownDelete::~MaterialDeleteInfo_CountDownDelete() {
  // @@protoc_insertion_point(destructor:proto.MaterialDeleteInfo.CountDownDelete)
  SharedDtor();
}

void MaterialDeleteInfo_CountDownDelete::SharedDtor() {
}

void MaterialDeleteInfo_CountDownDelete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaterialDeleteInfo_CountDownDelete::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaterialDeleteInfo_CountDownDelete& MaterialDeleteInfo_CountDownDelete::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MaterialDeleteInfo_CountDownDelete* MaterialDeleteInfo_CountDownDelete::New(::google::protobuf::Arena* arena) const {
  MaterialDeleteInfo_CountDownDelete* n = new MaterialDeleteInfo_CountDownDelete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MaterialDeleteInfo_CountDownDelete::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MaterialDeleteInfo.CountDownDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delete_time_num_map_.Clear();
  config_count_down_time_ = 0u;
  _internal_metadata_.Clear();
}

bool MaterialDeleteInfo_CountDownDelete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MaterialDeleteInfo.CountDownDelete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> delete_time_num_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&delete_time_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_count_down_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_count_down_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MaterialDeleteInfo.CountDownDelete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MaterialDeleteInfo.CountDownDelete)
  return false;
#undef DO_
}

void MaterialDeleteInfo_CountDownDelete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MaterialDeleteInfo.CountDownDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> delete_time_num_map = 1;
  if (!this->delete_time_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->delete_time_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->delete_time_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->delete_time_num_map().begin();
          it != this->delete_time_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(delete_time_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->delete_time_num_map().begin();
          it != this->delete_time_num_map().end(); ++it) {
        entry.reset(delete_time_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // uint32 config_count_down_time = 2;
  if (this->config_count_down_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_count_down_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MaterialDeleteInfo.CountDownDelete)
}

::google::protobuf::uint8* MaterialDeleteInfo_CountDownDelete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MaterialDeleteInfo.CountDownDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> delete_time_num_map = 1;
  if (!this->delete_time_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->delete_time_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->delete_time_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->delete_time_num_map().begin();
          it != this->delete_time_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(delete_time_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->delete_time_num_map().begin();
          it != this->delete_time_num_map().end(); ++it) {
        entry.reset(delete_time_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 config_count_down_time = 2;
  if (this->config_count_down_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_count_down_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MaterialDeleteInfo.CountDownDelete)
  return target;
}

size_t MaterialDeleteInfo_CountDownDelete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MaterialDeleteInfo.CountDownDelete)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> delete_time_num_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->delete_time_num_map_size());
  {
    ::google::protobuf::scoped_ptr<MaterialDeleteInfo_CountDownDelete_DeleteTimeNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->delete_time_num_map().begin();
        it != this->delete_time_num_map().end(); ++it) {
      entry.reset(delete_time_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 config_count_down_time = 2;
  if (this->config_count_down_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_count_down_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaterialDeleteInfo_CountDownDelete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MaterialDeleteInfo.CountDownDelete)
  GOOGLE_DCHECK_NE(&from, this);
  const MaterialDeleteInfo_CountDownDelete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaterialDeleteInfo_CountDownDelete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MaterialDeleteInfo.CountDownDelete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MaterialDeleteInfo.CountDownDelete)
    MergeFrom(*source);
  }
}

void MaterialDeleteInfo_CountDownDelete::MergeFrom(const MaterialDeleteInfo_CountDownDelete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MaterialDeleteInfo.CountDownDelete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delete_time_num_map_.MergeFrom(from.delete_time_num_map_);
  if (from.config_count_down_time() != 0) {
    set_config_count_down_time(from.config_count_down_time());
  }
}

void MaterialDeleteInfo_CountDownDelete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MaterialDeleteInfo.CountDownDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaterialDeleteInfo_CountDownDelete::CopyFrom(const MaterialDeleteInfo_CountDownDelete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MaterialDeleteInfo.CountDownDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaterialDeleteInfo_CountDownDelete::IsInitialized() const {
  return true;
}

void MaterialDeleteInfo_CountDownDelete::Swap(MaterialDeleteInfo_CountDownDelete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaterialDeleteInfo_CountDownDelete::InternalSwap(MaterialDeleteInfo_CountDownDelete* other) {
  using std::swap;
  delete_time_num_map_.Swap(&other->delete_time_num_map_);
  swap(config_count_down_time_, other->config_count_down_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MaterialDeleteInfo_CountDownDelete::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MaterialDeleteInfo_CountDownDelete

// map<uint32, uint32> delete_time_num_map = 1;
int MaterialDeleteInfo_CountDownDelete::delete_time_num_map_size() const {
  return delete_time_num_map_.size();
}
void MaterialDeleteInfo_CountDownDelete::clear_delete_time_num_map() {
  delete_time_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
MaterialDeleteInfo_CountDownDelete::delete_time_num_map() const {
  // @@protoc_insertion_point(field_map:proto.MaterialDeleteInfo.CountDownDelete.delete_time_num_map)
  return delete_time_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
MaterialDeleteInfo_CountDownDelete::mutable_delete_time_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MaterialDeleteInfo.CountDownDelete.delete_time_num_map)
  return delete_time_num_map_.MutableMap();
}

// uint32 config_count_down_time = 2;
void MaterialDeleteInfo_CountDownDelete::clear_config_count_down_time() {
  config_count_down_time_ = 0u;
}
::google::protobuf::uint32 MaterialDeleteInfo_CountDownDelete::config_count_down_time() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.CountDownDelete.config_count_down_time)
  return config_count_down_time_;
}
void MaterialDeleteInfo_CountDownDelete::set_config_count_down_time(::google::protobuf::uint32 value) {
  
  config_count_down_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.CountDownDelete.config_count_down_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaterialDeleteInfo_DateTimeDelete::kDeleteTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaterialDeleteInfo_DateTimeDelete::MaterialDeleteInfo_DateTimeDelete()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MaterialDeleteInfo.DateTimeDelete)
}
MaterialDeleteInfo_DateTimeDelete::MaterialDeleteInfo_DateTimeDelete(const MaterialDeleteInfo_DateTimeDelete& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delete_time_ = from.delete_time_;
  // @@protoc_insertion_point(copy_constructor:proto.MaterialDeleteInfo.DateTimeDelete)
}

void MaterialDeleteInfo_DateTimeDelete::SharedCtor() {
  delete_time_ = 0u;
  _cached_size_ = 0;
}

MaterialDeleteInfo_DateTimeDelete::~MaterialDeleteInfo_DateTimeDelete() {
  // @@protoc_insertion_point(destructor:proto.MaterialDeleteInfo.DateTimeDelete)
  SharedDtor();
}

void MaterialDeleteInfo_DateTimeDelete::SharedDtor() {
}

void MaterialDeleteInfo_DateTimeDelete::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaterialDeleteInfo_DateTimeDelete::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaterialDeleteInfo_DateTimeDelete& MaterialDeleteInfo_DateTimeDelete::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MaterialDeleteInfo_DateTimeDelete* MaterialDeleteInfo_DateTimeDelete::New(::google::protobuf::Arena* arena) const {
  MaterialDeleteInfo_DateTimeDelete* n = new MaterialDeleteInfo_DateTimeDelete;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MaterialDeleteInfo_DateTimeDelete::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MaterialDeleteInfo.DateTimeDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delete_time_ = 0u;
  _internal_metadata_.Clear();
}

bool MaterialDeleteInfo_DateTimeDelete::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MaterialDeleteInfo.DateTimeDelete)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 delete_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &delete_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MaterialDeleteInfo.DateTimeDelete)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MaterialDeleteInfo.DateTimeDelete)
  return false;
#undef DO_
}

void MaterialDeleteInfo_DateTimeDelete::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MaterialDeleteInfo.DateTimeDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 delete_time = 1;
  if (this->delete_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->delete_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MaterialDeleteInfo.DateTimeDelete)
}

::google::protobuf::uint8* MaterialDeleteInfo_DateTimeDelete::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MaterialDeleteInfo.DateTimeDelete)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 delete_time = 1;
  if (this->delete_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->delete_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MaterialDeleteInfo.DateTimeDelete)
  return target;
}

size_t MaterialDeleteInfo_DateTimeDelete::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MaterialDeleteInfo.DateTimeDelete)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 delete_time = 1;
  if (this->delete_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->delete_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaterialDeleteInfo_DateTimeDelete::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MaterialDeleteInfo.DateTimeDelete)
  GOOGLE_DCHECK_NE(&from, this);
  const MaterialDeleteInfo_DateTimeDelete* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaterialDeleteInfo_DateTimeDelete>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MaterialDeleteInfo.DateTimeDelete)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MaterialDeleteInfo.DateTimeDelete)
    MergeFrom(*source);
  }
}

void MaterialDeleteInfo_DateTimeDelete::MergeFrom(const MaterialDeleteInfo_DateTimeDelete& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MaterialDeleteInfo.DateTimeDelete)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.delete_time() != 0) {
    set_delete_time(from.delete_time());
  }
}

void MaterialDeleteInfo_DateTimeDelete::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MaterialDeleteInfo.DateTimeDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaterialDeleteInfo_DateTimeDelete::CopyFrom(const MaterialDeleteInfo_DateTimeDelete& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MaterialDeleteInfo.DateTimeDelete)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaterialDeleteInfo_DateTimeDelete::IsInitialized() const {
  return true;
}

void MaterialDeleteInfo_DateTimeDelete::Swap(MaterialDeleteInfo_DateTimeDelete* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaterialDeleteInfo_DateTimeDelete::InternalSwap(MaterialDeleteInfo_DateTimeDelete* other) {
  using std::swap;
  swap(delete_time_, other->delete_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MaterialDeleteInfo_DateTimeDelete::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MaterialDeleteInfo_DateTimeDelete

// uint32 delete_time = 1;
void MaterialDeleteInfo_DateTimeDelete::clear_delete_time() {
  delete_time_ = 0u;
}
::google::protobuf::uint32 MaterialDeleteInfo_DateTimeDelete::delete_time() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.DateTimeDelete.delete_time)
  return delete_time_;
}
void MaterialDeleteInfo_DateTimeDelete::set_delete_time(::google::protobuf::uint32 value) {
  
  delete_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.DateTimeDelete.delete_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MaterialDeleteInfo::kHasDeleteConfigFieldNumber;
const int MaterialDeleteInfo::kCountDownDeleteFieldNumber;
const int MaterialDeleteInfo::kDateDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MaterialDeleteInfo::MaterialDeleteInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MaterialDeleteInfo)
}
MaterialDeleteInfo::MaterialDeleteInfo(const MaterialDeleteInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  has_delete_config_ = from.has_delete_config_;
  clear_has_delete_info();
  switch (from.delete_info_case()) {
    case kCountDownDelete: {
      mutable_count_down_delete()->::proto::MaterialDeleteInfo_CountDownDelete::MergeFrom(from.count_down_delete());
      break;
    }
    case kDateDelete: {
      mutable_date_delete()->::proto::MaterialDeleteInfo_DateTimeDelete::MergeFrom(from.date_delete());
      break;
    }
    case DELETE_INFO_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.MaterialDeleteInfo)
}

void MaterialDeleteInfo::SharedCtor() {
  has_delete_config_ = false;
  clear_has_delete_info();
  _cached_size_ = 0;
}

MaterialDeleteInfo::~MaterialDeleteInfo() {
  // @@protoc_insertion_point(destructor:proto.MaterialDeleteInfo)
  SharedDtor();
}

void MaterialDeleteInfo::SharedDtor() {
  if (has_delete_info()) {
    clear_delete_info();
  }
}

void MaterialDeleteInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MaterialDeleteInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MaterialDeleteInfo& MaterialDeleteInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MaterialDeleteInfo* MaterialDeleteInfo::New(::google::protobuf::Arena* arena) const {
  MaterialDeleteInfo* n = new MaterialDeleteInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MaterialDeleteInfo::clear_delete_info() {
// @@protoc_insertion_point(one_of_clear_start:proto.MaterialDeleteInfo)
  switch (delete_info_case()) {
    case kCountDownDelete: {
      delete delete_info_.count_down_delete_;
      break;
    }
    case kDateDelete: {
      delete delete_info_.date_delete_;
      break;
    }
    case DELETE_INFO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DELETE_INFO_NOT_SET;
}


void MaterialDeleteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MaterialDeleteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  has_delete_config_ = false;
  clear_delete_info();
  _internal_metadata_.Clear();
}

bool MaterialDeleteInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MaterialDeleteInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool has_delete_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_delete_config_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_count_down_delete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_date_delete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MaterialDeleteInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MaterialDeleteInfo)
  return false;
#undef DO_
}

void MaterialDeleteInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MaterialDeleteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool has_delete_config = 1;
  if (this->has_delete_config() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->has_delete_config(), output);
  }

  // .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
  if (has_count_down_delete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *delete_info_.count_down_delete_, output);
  }

  // .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
  if (has_date_delete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *delete_info_.date_delete_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MaterialDeleteInfo)
}

::google::protobuf::uint8* MaterialDeleteInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MaterialDeleteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool has_delete_config = 1;
  if (this->has_delete_config() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->has_delete_config(), target);
  }

  // .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
  if (has_count_down_delete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *delete_info_.count_down_delete_, deterministic, target);
  }

  // .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
  if (has_date_delete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *delete_info_.date_delete_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MaterialDeleteInfo)
  return target;
}

size_t MaterialDeleteInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MaterialDeleteInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool has_delete_config = 1;
  if (this->has_delete_config() != 0) {
    total_size += 1 + 1;
  }

  switch (delete_info_case()) {
    // .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
    case kCountDownDelete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *delete_info_.count_down_delete_);
      break;
    }
    // .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
    case kDateDelete: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *delete_info_.date_delete_);
      break;
    }
    case DELETE_INFO_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MaterialDeleteInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MaterialDeleteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MaterialDeleteInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MaterialDeleteInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MaterialDeleteInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MaterialDeleteInfo)
    MergeFrom(*source);
  }
}

void MaterialDeleteInfo::MergeFrom(const MaterialDeleteInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MaterialDeleteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_delete_config() != 0) {
    set_has_delete_config(from.has_delete_config());
  }
  switch (from.delete_info_case()) {
    case kCountDownDelete: {
      mutable_count_down_delete()->::proto::MaterialDeleteInfo_CountDownDelete::MergeFrom(from.count_down_delete());
      break;
    }
    case kDateDelete: {
      mutable_date_delete()->::proto::MaterialDeleteInfo_DateTimeDelete::MergeFrom(from.date_delete());
      break;
    }
    case DELETE_INFO_NOT_SET: {
      break;
    }
  }
}

void MaterialDeleteInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MaterialDeleteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MaterialDeleteInfo::CopyFrom(const MaterialDeleteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MaterialDeleteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MaterialDeleteInfo::IsInitialized() const {
  return true;
}

void MaterialDeleteInfo::Swap(MaterialDeleteInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MaterialDeleteInfo::InternalSwap(MaterialDeleteInfo* other) {
  using std::swap;
  swap(has_delete_config_, other->has_delete_config_);
  swap(delete_info_, other->delete_info_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MaterialDeleteInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MaterialDeleteInfo

// bool has_delete_config = 1;
void MaterialDeleteInfo::clear_has_delete_config() {
  has_delete_config_ = false;
}
bool MaterialDeleteInfo::has_delete_config() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.has_delete_config)
  return has_delete_config_;
}
void MaterialDeleteInfo::set_has_delete_config(bool value) {
  
  has_delete_config_ = value;
  // @@protoc_insertion_point(field_set:proto.MaterialDeleteInfo.has_delete_config)
}

// .proto.MaterialDeleteInfo.CountDownDelete count_down_delete = 2;
bool MaterialDeleteInfo::has_count_down_delete() const {
  return delete_info_case() == kCountDownDelete;
}
void MaterialDeleteInfo::set_has_count_down_delete() {
  _oneof_case_[0] = kCountDownDelete;
}
void MaterialDeleteInfo::clear_count_down_delete() {
  if (has_count_down_delete()) {
    delete delete_info_.count_down_delete_;
    clear_has_delete_info();
  }
}
 const ::proto::MaterialDeleteInfo_CountDownDelete& MaterialDeleteInfo::count_down_delete() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.count_down_delete)
  return has_count_down_delete()
      ? *delete_info_.count_down_delete_
      : ::proto::MaterialDeleteInfo_CountDownDelete::default_instance();
}
::proto::MaterialDeleteInfo_CountDownDelete* MaterialDeleteInfo::mutable_count_down_delete() {
  if (!has_count_down_delete()) {
    clear_delete_info();
    set_has_count_down_delete();
    delete_info_.count_down_delete_ = new ::proto::MaterialDeleteInfo_CountDownDelete;
  }
  // @@protoc_insertion_point(field_mutable:proto.MaterialDeleteInfo.count_down_delete)
  return delete_info_.count_down_delete_;
}
::proto::MaterialDeleteInfo_CountDownDelete* MaterialDeleteInfo::release_count_down_delete() {
  // @@protoc_insertion_point(field_release:proto.MaterialDeleteInfo.count_down_delete)
  if (has_count_down_delete()) {
    clear_has_delete_info();
    ::proto::MaterialDeleteInfo_CountDownDelete* temp = delete_info_.count_down_delete_;
    delete_info_.count_down_delete_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MaterialDeleteInfo::set_allocated_count_down_delete(::proto::MaterialDeleteInfo_CountDownDelete* count_down_delete) {
  clear_delete_info();
  if (count_down_delete) {
    set_has_count_down_delete();
    delete_info_.count_down_delete_ = count_down_delete;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MaterialDeleteInfo.count_down_delete)
}

// .proto.MaterialDeleteInfo.DateTimeDelete date_delete = 3;
bool MaterialDeleteInfo::has_date_delete() const {
  return delete_info_case() == kDateDelete;
}
void MaterialDeleteInfo::set_has_date_delete() {
  _oneof_case_[0] = kDateDelete;
}
void MaterialDeleteInfo::clear_date_delete() {
  if (has_date_delete()) {
    delete delete_info_.date_delete_;
    clear_has_delete_info();
  }
}
 const ::proto::MaterialDeleteInfo_DateTimeDelete& MaterialDeleteInfo::date_delete() const {
  // @@protoc_insertion_point(field_get:proto.MaterialDeleteInfo.date_delete)
  return has_date_delete()
      ? *delete_info_.date_delete_
      : ::proto::MaterialDeleteInfo_DateTimeDelete::default_instance();
}
::proto::MaterialDeleteInfo_DateTimeDelete* MaterialDeleteInfo::mutable_date_delete() {
  if (!has_date_delete()) {
    clear_delete_info();
    set_has_date_delete();
    delete_info_.date_delete_ = new ::proto::MaterialDeleteInfo_DateTimeDelete;
  }
  // @@protoc_insertion_point(field_mutable:proto.MaterialDeleteInfo.date_delete)
  return delete_info_.date_delete_;
}
::proto::MaterialDeleteInfo_DateTimeDelete* MaterialDeleteInfo::release_date_delete() {
  // @@protoc_insertion_point(field_release:proto.MaterialDeleteInfo.date_delete)
  if (has_date_delete()) {
    clear_has_delete_info();
    ::proto::MaterialDeleteInfo_DateTimeDelete* temp = delete_info_.date_delete_;
    delete_info_.date_delete_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void MaterialDeleteInfo::set_allocated_date_delete(::proto::MaterialDeleteInfo_DateTimeDelete* date_delete) {
  clear_delete_info();
  if (date_delete) {
    set_has_date_delete();
    delete_info_.date_delete_ = date_delete;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MaterialDeleteInfo.date_delete)
}

bool MaterialDeleteInfo::has_delete_info() const {
  return delete_info_case() != DELETE_INFO_NOT_SET;
}
void MaterialDeleteInfo::clear_has_delete_info() {
  _oneof_case_[0] = DELETE_INFO_NOT_SET;
}
MaterialDeleteInfo::DeleteInfoCase MaterialDeleteInfo::delete_info_case() const {
  return MaterialDeleteInfo::DeleteInfoCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Material::kCountFieldNumber;
const int Material::kDeleteInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Material::Material()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Material)
}
Material::Material(const Material& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_delete_info()) {
    delete_info_ = new ::proto::MaterialDeleteInfo(*from.delete_info_);
  } else {
    delete_info_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:proto.Material)
}

void Material::SharedCtor() {
  ::memset(&delete_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&delete_info_)) + sizeof(count_));
  _cached_size_ = 0;
}

Material::~Material() {
  // @@protoc_insertion_point(destructor:proto.Material)
  SharedDtor();
}

void Material::SharedDtor() {
  if (this != internal_default_instance()) delete delete_info_;
}

void Material::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Material::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Material& Material::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Material* Material::New(::google::protobuf::Arena* arena) const {
  Material* n = new Material;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Material::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && delete_info_ != NULL) {
    delete delete_info_;
  }
  delete_info_ = NULL;
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool Material::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Material)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MaterialDeleteInfo delete_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Material)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Material)
  return false;
#undef DO_
}

void Material::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // .proto.MaterialDeleteInfo delete_info = 2;
  if (this->has_delete_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->delete_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Material)
}

::google::protobuf::uint8* Material::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Material)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // .proto.MaterialDeleteInfo delete_info = 2;
  if (this->has_delete_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->delete_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Material)
  return target;
}

size_t Material::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Material)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MaterialDeleteInfo delete_info = 2;
  if (this->has_delete_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delete_info_);
  }

  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Material::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Material)
  GOOGLE_DCHECK_NE(&from, this);
  const Material* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Material>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Material)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Material)
    MergeFrom(*source);
  }
}

void Material::MergeFrom(const Material& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Material)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_delete_info()) {
    mutable_delete_info()->::proto::MaterialDeleteInfo::MergeFrom(from.delete_info());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void Material::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Material::CopyFrom(const Material& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Material)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Material::IsInitialized() const {
  return true;
}

void Material::Swap(Material* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Material::InternalSwap(Material* other) {
  using std::swap;
  swap(delete_info_, other->delete_info_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Material::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Material

// uint32 count = 1;
void Material::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 Material::count() const {
  // @@protoc_insertion_point(field_get:proto.Material.count)
  return count_;
}
void Material::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.Material.count)
}

// .proto.MaterialDeleteInfo delete_info = 2;
bool Material::has_delete_info() const {
  return this != internal_default_instance() && delete_info_ != NULL;
}
void Material::clear_delete_info() {
  if (GetArenaNoVirtual() == NULL && delete_info_ != NULL) delete delete_info_;
  delete_info_ = NULL;
}
const ::proto::MaterialDeleteInfo& Material::delete_info() const {
  const ::proto::MaterialDeleteInfo* p = delete_info_;
  // @@protoc_insertion_point(field_get:proto.Material.delete_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MaterialDeleteInfo*>(
      &::proto::_MaterialDeleteInfo_default_instance_);
}
::proto::MaterialDeleteInfo* Material::mutable_delete_info() {
  
  if (delete_info_ == NULL) {
    delete_info_ = new ::proto::MaterialDeleteInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.Material.delete_info)
  return delete_info_;
}
::proto::MaterialDeleteInfo* Material::release_delete_info() {
  // @@protoc_insertion_point(field_release:proto.Material.delete_info)
  
  ::proto::MaterialDeleteInfo* temp = delete_info_;
  delete_info_ = NULL;
  return temp;
}
void Material::set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info) {
  delete delete_info_;
  delete_info_ = delete_info;
  if (delete_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Material.delete_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Equip::kReliquaryFieldNumber;
const int Equip::kWeaponFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Equip::Equip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Equip)
}
Equip::Equip(const Equip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_detail();
  switch (from.detail_case()) {
    case kReliquary: {
      mutable_reliquary()->::proto::Reliquary::MergeFrom(from.reliquary());
      break;
    }
    case kWeapon: {
      mutable_weapon()->::proto::Weapon::MergeFrom(from.weapon());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.Equip)
}

void Equip::SharedCtor() {
  clear_has_detail();
  _cached_size_ = 0;
}

Equip::~Equip() {
  // @@protoc_insertion_point(destructor:proto.Equip)
  SharedDtor();
}

void Equip::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void Equip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Equip::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Equip& Equip::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Equip* Equip::New(::google::protobuf::Arena* arena) const {
  Equip* n = new Equip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Equip::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.Equip)
  switch (detail_case()) {
    case kReliquary: {
      delete detail_.reliquary_;
      break;
    }
    case kWeapon: {
      delete detail_.weapon_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void Equip::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Equip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_detail();
  _internal_metadata_.Clear();
}

bool Equip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Equip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Reliquary reliquary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reliquary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Weapon weapon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weapon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Equip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Equip)
  return false;
#undef DO_
}

void Equip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Equip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Reliquary reliquary = 1;
  if (has_reliquary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *detail_.reliquary_, output);
  }

  // .proto.Weapon weapon = 2;
  if (has_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *detail_.weapon_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Equip)
}

::google::protobuf::uint8* Equip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Equip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Reliquary reliquary = 1;
  if (has_reliquary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *detail_.reliquary_, deterministic, target);
  }

  // .proto.Weapon weapon = 2;
  if (has_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *detail_.weapon_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Equip)
  return target;
}

size_t Equip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Equip)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (detail_case()) {
    // .proto.Reliquary reliquary = 1;
    case kReliquary: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.reliquary_);
      break;
    }
    // .proto.Weapon weapon = 2;
    case kWeapon: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.weapon_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Equip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Equip)
  GOOGLE_DCHECK_NE(&from, this);
  const Equip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Equip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Equip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Equip)
    MergeFrom(*source);
  }
}

void Equip::MergeFrom(const Equip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Equip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.detail_case()) {
    case kReliquary: {
      mutable_reliquary()->::proto::Reliquary::MergeFrom(from.reliquary());
      break;
    }
    case kWeapon: {
      mutable_weapon()->::proto::Weapon::MergeFrom(from.weapon());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void Equip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Equip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Equip::CopyFrom(const Equip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Equip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Equip::IsInitialized() const {
  return true;
}

void Equip::Swap(Equip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Equip::InternalSwap(Equip* other) {
  using std::swap;
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Equip::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Equip

// .proto.Reliquary reliquary = 1;
bool Equip::has_reliquary() const {
  return detail_case() == kReliquary;
}
void Equip::set_has_reliquary() {
  _oneof_case_[0] = kReliquary;
}
void Equip::clear_reliquary() {
  if (has_reliquary()) {
    delete detail_.reliquary_;
    clear_has_detail();
  }
}
 const ::proto::Reliquary& Equip::reliquary() const {
  // @@protoc_insertion_point(field_get:proto.Equip.reliquary)
  return has_reliquary()
      ? *detail_.reliquary_
      : ::proto::Reliquary::default_instance();
}
::proto::Reliquary* Equip::mutable_reliquary() {
  if (!has_reliquary()) {
    clear_detail();
    set_has_reliquary();
    detail_.reliquary_ = new ::proto::Reliquary;
  }
  // @@protoc_insertion_point(field_mutable:proto.Equip.reliquary)
  return detail_.reliquary_;
}
::proto::Reliquary* Equip::release_reliquary() {
  // @@protoc_insertion_point(field_release:proto.Equip.reliquary)
  if (has_reliquary()) {
    clear_has_detail();
    ::proto::Reliquary* temp = detail_.reliquary_;
    detail_.reliquary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Equip::set_allocated_reliquary(::proto::Reliquary* reliquary) {
  clear_detail();
  if (reliquary) {
    set_has_reliquary();
    detail_.reliquary_ = reliquary;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Equip.reliquary)
}

// .proto.Weapon weapon = 2;
bool Equip::has_weapon() const {
  return detail_case() == kWeapon;
}
void Equip::set_has_weapon() {
  _oneof_case_[0] = kWeapon;
}
void Equip::clear_weapon() {
  if (has_weapon()) {
    delete detail_.weapon_;
    clear_has_detail();
  }
}
 const ::proto::Weapon& Equip::weapon() const {
  // @@protoc_insertion_point(field_get:proto.Equip.weapon)
  return has_weapon()
      ? *detail_.weapon_
      : ::proto::Weapon::default_instance();
}
::proto::Weapon* Equip::mutable_weapon() {
  if (!has_weapon()) {
    clear_detail();
    set_has_weapon();
    detail_.weapon_ = new ::proto::Weapon;
  }
  // @@protoc_insertion_point(field_mutable:proto.Equip.weapon)
  return detail_.weapon_;
}
::proto::Weapon* Equip::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.Equip.weapon)
  if (has_weapon()) {
    clear_has_detail();
    ::proto::Weapon* temp = detail_.weapon_;
    detail_.weapon_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Equip::set_allocated_weapon(::proto::Weapon* weapon) {
  clear_detail();
  if (weapon) {
    set_has_weapon();
    detail_.weapon_ = weapon;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Equip.weapon)
}

bool Equip::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void Equip::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
Equip::DetailCase Equip::detail_case() const {
  return Equip::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Item::kItemIdFieldNumber;
const int Item::kGuidFieldNumber;
const int Item::kMaterialFieldNumber;
const int Item::kEquipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Item::Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Item)
}
Item::Item(const Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_id_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(item_id_));
  clear_has_detail();
  switch (from.detail_case()) {
    case kMaterial: {
      mutable_material()->::proto::Material::MergeFrom(from.material());
      break;
    }
    case kEquip: {
      mutable_equip()->::proto::Equip::MergeFrom(from.equip());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.Item)
}

void Item::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_id_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(item_id_));
  clear_has_detail();
  _cached_size_ = 0;
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:proto.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Item& Item::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Item* Item::New(::google::protobuf::Arena* arena) const {
  Item* n = new Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Item::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.Item)
  switch (detail_case()) {
    case kMaterial: {
      delete detail_.material_;
      break;
    }
    case kEquip: {
      delete detail_.equip_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_id_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(item_id_));
  clear_detail();
  _internal_metadata_.Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Material material = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_material()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Equip equip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Item)
  return false;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // .proto.Material material = 5;
  if (has_material()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *detail_.material_, output);
  }

  // .proto.Equip equip = 6;
  if (has_equip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *detail_.equip_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Item)
}

::google::protobuf::uint8* Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // .proto.Material material = 5;
  if (has_material()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *detail_.material_, deterministic, target);
  }

  // .proto.Equip equip = 6;
  if (has_equip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *detail_.equip_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Item)
  return target;
}

size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  switch (detail_case()) {
    // .proto.Material material = 5;
    case kMaterial: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.material_);
      break;
    }
    // .proto.Equip equip = 6;
    case kEquip: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.equip_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  switch (from.detail_case()) {
    case kMaterial: {
      mutable_material()->::proto::Material::MergeFrom(from.material());
      break;
    }
    case kEquip: {
      mutable_equip()->::proto::Equip::MergeFrom(from.equip());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  return true;
}

void Item::Swap(Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Item::InternalSwap(Item* other) {
  using std::swap;
  swap(guid_, other->guid_);
  swap(item_id_, other->item_id_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Item

// uint32 item_id = 1;
void Item::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 Item::item_id() const {
  // @@protoc_insertion_point(field_get:proto.Item.item_id)
  return item_id_;
}
void Item::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Item.item_id)
}

// uint64 guid = 2;
void Item::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Item::guid() const {
  // @@protoc_insertion_point(field_get:proto.Item.guid)
  return guid_;
}
void Item::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.Item.guid)
}

// .proto.Material material = 5;
bool Item::has_material() const {
  return detail_case() == kMaterial;
}
void Item::set_has_material() {
  _oneof_case_[0] = kMaterial;
}
void Item::clear_material() {
  if (has_material()) {
    delete detail_.material_;
    clear_has_detail();
  }
}
 const ::proto::Material& Item::material() const {
  // @@protoc_insertion_point(field_get:proto.Item.material)
  return has_material()
      ? *detail_.material_
      : ::proto::Material::default_instance();
}
::proto::Material* Item::mutable_material() {
  if (!has_material()) {
    clear_detail();
    set_has_material();
    detail_.material_ = new ::proto::Material;
  }
  // @@protoc_insertion_point(field_mutable:proto.Item.material)
  return detail_.material_;
}
::proto::Material* Item::release_material() {
  // @@protoc_insertion_point(field_release:proto.Item.material)
  if (has_material()) {
    clear_has_detail();
    ::proto::Material* temp = detail_.material_;
    detail_.material_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Item::set_allocated_material(::proto::Material* material) {
  clear_detail();
  if (material) {
    set_has_material();
    detail_.material_ = material;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Item.material)
}

// .proto.Equip equip = 6;
bool Item::has_equip() const {
  return detail_case() == kEquip;
}
void Item::set_has_equip() {
  _oneof_case_[0] = kEquip;
}
void Item::clear_equip() {
  if (has_equip()) {
    delete detail_.equip_;
    clear_has_detail();
  }
}
 const ::proto::Equip& Item::equip() const {
  // @@protoc_insertion_point(field_get:proto.Item.equip)
  return has_equip()
      ? *detail_.equip_
      : ::proto::Equip::default_instance();
}
::proto::Equip* Item::mutable_equip() {
  if (!has_equip()) {
    clear_detail();
    set_has_equip();
    detail_.equip_ = new ::proto::Equip;
  }
  // @@protoc_insertion_point(field_mutable:proto.Item.equip)
  return detail_.equip_;
}
::proto::Equip* Item::release_equip() {
  // @@protoc_insertion_point(field_release:proto.Item.equip)
  if (has_equip()) {
    clear_has_detail();
    ::proto::Equip* temp = detail_.equip_;
    detail_.equip_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Item::set_allocated_equip(::proto::Equip* equip) {
  clear_detail();
  if (equip) {
    set_has_equip();
    detail_.equip_ = equip;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.Item.equip)
}

bool Item::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void Item::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
Item::DetailCase Item::detail_case() const {
  return Item::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemParam::kItemIdFieldNumber;
const int ItemParam::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemParam::ItemParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ItemParam)
}
ItemParam::ItemParam(const ItemParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.ItemParam)
}

void ItemParam::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(count_));
  _cached_size_ = 0;
}

ItemParam::~ItemParam() {
  // @@protoc_insertion_point(destructor:proto.ItemParam)
  SharedDtor();
}

void ItemParam::SharedDtor() {
}

void ItemParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemParam::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemParam& ItemParam::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ItemParam* ItemParam::New(::google::protobuf::Arena* arena) const {
  ItemParam* n = new ItemParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemParam::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ItemParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool ItemParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ItemParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ItemParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ItemParam)
  return false;
#undef DO_
}

void ItemParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ItemParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ItemParam)
}

::google::protobuf::uint8* ItemParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ItemParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ItemParam)
  return target;
}

size_t ItemParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ItemParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ItemParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ItemParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ItemParam)
    MergeFrom(*source);
  }
}

void ItemParam::MergeFrom(const ItemParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ItemParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void ItemParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ItemParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemParam::CopyFrom(const ItemParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ItemParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemParam::IsInitialized() const {
  return true;
}

void ItemParam::Swap(ItemParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemParam::InternalSwap(ItemParam* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemParam::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ItemParam

// uint32 item_id = 1;
void ItemParam::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 ItemParam::item_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemParam.item_id)
  return item_id_;
}
void ItemParam::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParam.item_id)
}

// uint32 count = 2;
void ItemParam::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 ItemParam::count() const {
  // @@protoc_insertion_point(field_get:proto.ItemParam.count)
  return count_;
}
void ItemParam::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParam.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipParam::kItemIdFieldNumber;
const int EquipParam::kItemNumFieldNumber;
const int EquipParam::kItemLevelFieldNumber;
const int EquipParam::kPromoteLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipParam::EquipParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EquipParam)
}
EquipParam::EquipParam(const EquipParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&promote_level_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(promote_level_));
  // @@protoc_insertion_point(copy_constructor:proto.EquipParam)
}

void EquipParam::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(promote_level_));
  _cached_size_ = 0;
}

EquipParam::~EquipParam() {
  // @@protoc_insertion_point(destructor:proto.EquipParam)
  SharedDtor();
}

void EquipParam::SharedDtor() {
}

void EquipParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipParam::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipParam& EquipParam::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

EquipParam* EquipParam::New(::google::protobuf::Arena* arena) const {
  EquipParam* n = new EquipParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipParam::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EquipParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(promote_level_));
  _internal_metadata_.Clear();
}

bool EquipParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EquipParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EquipParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EquipParam)
  return false;
#undef DO_
}

void EquipParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EquipParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_num(), output);
  }

  // uint32 item_level = 3;
  if (this->item_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_level(), output);
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->promote_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EquipParam)
}

::google::protobuf::uint8* EquipParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EquipParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_num(), target);
  }

  // uint32 item_level = 3;
  if (this->item_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_level(), target);
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->promote_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EquipParam)
  return target;
}

size_t EquipParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EquipParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 item_num = 2;
  if (this->item_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_num());
  }

  // uint32 item_level = 3;
  if (this->item_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_level());
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EquipParam)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EquipParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EquipParam)
    MergeFrom(*source);
  }
}

void EquipParam::MergeFrom(const EquipParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EquipParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.item_num() != 0) {
    set_item_num(from.item_num());
  }
  if (from.item_level() != 0) {
    set_item_level(from.item_level());
  }
  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
}

void EquipParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EquipParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipParam::CopyFrom(const EquipParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EquipParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipParam::IsInitialized() const {
  return true;
}

void EquipParam::Swap(EquipParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipParam::InternalSwap(EquipParam* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(item_num_, other->item_num_);
  swap(item_level_, other->item_level_);
  swap(promote_level_, other->promote_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipParam::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EquipParam

// uint32 item_id = 1;
void EquipParam::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 EquipParam::item_id() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_id)
  return item_id_;
}
void EquipParam::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_id)
}

// uint32 item_num = 2;
void EquipParam::clear_item_num() {
  item_num_ = 0u;
}
::google::protobuf::uint32 EquipParam::item_num() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_num)
  return item_num_;
}
void EquipParam::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_num)
}

// uint32 item_level = 3;
void EquipParam::clear_item_level() {
  item_level_ = 0u;
}
::google::protobuf::uint32 EquipParam::item_level() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.item_level)
  return item_level_;
}
void EquipParam::set_item_level(::google::protobuf::uint32 value) {
  
  item_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.item_level)
}

// uint32 promote_level = 4;
void EquipParam::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 EquipParam::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.EquipParam.promote_level)
  return promote_level_;
}
void EquipParam::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EquipParam.promote_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EquipParamList::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EquipParamList::EquipParamList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EquipParamList)
}
EquipParamList::EquipParamList(const EquipParamList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.EquipParamList)
}

void EquipParamList::SharedCtor() {
  _cached_size_ = 0;
}

EquipParamList::~EquipParamList() {
  // @@protoc_insertion_point(destructor:proto.EquipParamList)
  SharedDtor();
}

void EquipParamList::SharedDtor() {
}

void EquipParamList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EquipParamList::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EquipParamList& EquipParamList::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

EquipParamList* EquipParamList::New(::google::protobuf::Arena* arena) const {
  EquipParamList* n = new EquipParamList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EquipParamList::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EquipParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  _internal_metadata_.Clear();
}

bool EquipParamList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EquipParamList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.EquipParam item_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EquipParamList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EquipParamList)
  return false;
#undef DO_
}

void EquipParamList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EquipParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.EquipParam item_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EquipParamList)
}

::google::protobuf::uint8* EquipParamList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EquipParamList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.EquipParam item_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EquipParamList)
  return target;
}

size_t EquipParamList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EquipParamList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.EquipParam item_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EquipParamList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EquipParamList)
  GOOGLE_DCHECK_NE(&from, this);
  const EquipParamList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EquipParamList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EquipParamList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EquipParamList)
    MergeFrom(*source);
  }
}

void EquipParamList::MergeFrom(const EquipParamList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EquipParamList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
}

void EquipParamList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EquipParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EquipParamList::CopyFrom(const EquipParamList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EquipParamList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipParamList::IsInitialized() const {
  return true;
}

void EquipParamList::Swap(EquipParamList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EquipParamList::InternalSwap(EquipParamList* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EquipParamList::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EquipParamList

// repeated .proto.EquipParam item_list = 1;
int EquipParamList::item_list_size() const {
  return item_list_.size();
}
void EquipParamList::clear_item_list() {
  item_list_.Clear();
}
const ::proto::EquipParam& EquipParamList::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EquipParamList.item_list)
  return item_list_.Get(index);
}
::proto::EquipParam* EquipParamList::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EquipParamList.item_list)
  return item_list_.Mutable(index);
}
::proto::EquipParam* EquipParamList::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.EquipParamList.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::EquipParam >*
EquipParamList::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EquipParamList.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::EquipParam >&
EquipParamList::item_list() const {
  // @@protoc_insertion_point(field_list:proto.EquipParamList.item_list)
  return item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reward::kRewardIdFieldNumber;
const int Reward::kItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reward::Reward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Reward)
}
Reward::Reward(const Reward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reward_id_ = from.reward_id_;
  // @@protoc_insertion_point(copy_constructor:proto.Reward)
}

void Reward::SharedCtor() {
  reward_id_ = 0u;
  _cached_size_ = 0;
}

Reward::~Reward() {
  // @@protoc_insertion_point(destructor:proto.Reward)
  SharedDtor();
}

void Reward::SharedDtor() {
}

void Reward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reward::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reward& Reward::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Reward* Reward::New(::google::protobuf::Arena* arena) const {
  Reward* n = new Reward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reward::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  reward_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Reward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Reward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 reward_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam item_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Reward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Reward)
  return false;
#undef DO_
}

void Reward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reward_id(), output);
  }

  // repeated .proto.ItemParam item_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Reward)
}

::google::protobuf::uint8* Reward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Reward)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reward_id(), target);
  }

  // repeated .proto.ItemParam item_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Reward)
  return target;
}

size_t Reward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Reward)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam item_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // uint32 reward_id = 1;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Reward)
  GOOGLE_DCHECK_NE(&from, this);
  const Reward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Reward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Reward)
    MergeFrom(*source);
  }
}

void Reward::MergeFrom(const Reward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Reward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
}

void Reward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reward::CopyFrom(const Reward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Reward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reward::IsInitialized() const {
  return true;
}

void Reward::Swap(Reward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reward::InternalSwap(Reward* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  swap(reward_id_, other->reward_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reward::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Reward

// uint32 reward_id = 1;
void Reward::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 Reward::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.Reward.reward_id)
  return reward_id_;
}
void Reward::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Reward.reward_id)
}

// repeated .proto.ItemParam item_list = 2;
int Reward::item_list_size() const {
  return item_list_.size();
}
void Reward::clear_item_list() {
  item_list_.Clear();
}
const ::proto::ItemParam& Reward::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Reward.item_list)
  return item_list_.Get(index);
}
::proto::ItemParam* Reward::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.Reward.item_list)
  return item_list_.Mutable(index);
}
::proto::ItemParam* Reward::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.Reward.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
Reward::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Reward.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
Reward::item_list() const {
  // @@protoc_insertion_point(field_list:proto.Reward.item_list)
  return item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityString::kStrFieldNumber;
const int AbilityString::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityString::AbilityString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityString)
}
AbilityString::AbilityString(const AbilityString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kStr: {
      set_str(from.str());
      break;
    }
    case kHash: {
      set_hash(from.hash());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.AbilityString)
}

void AbilityString::SharedCtor() {
  clear_has_type();
  _cached_size_ = 0;
}

AbilityString::~AbilityString() {
  // @@protoc_insertion_point(destructor:proto.AbilityString)
  SharedDtor();
}

void AbilityString::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void AbilityString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityString::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityString& AbilityString::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityString* AbilityString::New(::google::protobuf::Arena* arena) const {
  AbilityString* n = new AbilityString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityString::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:proto.AbilityString)
  switch (type_case()) {
    case kStr: {
      type_.str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kHash: {
      // No need to clear
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void AbilityString::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

bool AbilityString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string str = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AbilityString.str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_.hash_)));
          set_has_hash();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityString)
  return false;
#undef DO_
}

void AbilityString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AbilityString.str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->str(), output);
  }

  // uint32 hash = 2;
  if (has_hash()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->hash(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityString)
}

::google::protobuf::uint8* AbilityString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AbilityString.str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  // uint32 hash = 2;
  if (has_hash()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->hash(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityString)
  return target;
}

size_t AbilityString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (type_case()) {
    // string str = 1;
    case kStr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
      break;
    }
    // uint32 hash = 2;
    case kHash: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hash());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityString)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityString)
    MergeFrom(*source);
  }
}

void AbilityString::MergeFrom(const AbilityString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kStr: {
      set_str(from.str());
      break;
    }
    case kHash: {
      set_hash(from.hash());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void AbilityString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityString::CopyFrom(const AbilityString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityString::IsInitialized() const {
  return true;
}

void AbilityString::Swap(AbilityString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityString::InternalSwap(AbilityString* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityString::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityString

// string str = 1;
bool AbilityString::has_str() const {
  return type_case() == kStr;
}
void AbilityString::set_has_str() {
  _oneof_case_[0] = kStr;
}
void AbilityString::clear_str() {
  if (has_str()) {
    type_.str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_type();
  }
}
const ::std::string& AbilityString::str() const {
  // @@protoc_insertion_point(field_get:proto.AbilityString.str)
  if (has_str()) {
    return type_.str_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void AbilityString::set_str(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
}
#if LANG_CXX11
void AbilityString::set_str(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityString.str)
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityString.str)
}
#endif
void AbilityString::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityString.str)
}
void AbilityString::set_str(const char* value, size_t size) {
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_.str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityString.str)
}
::std::string* AbilityString::mutable_str() {
  if (!has_str()) {
    clear_type();
    set_has_str();
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityString.str)
  return type_.str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AbilityString::release_str() {
  // @@protoc_insertion_point(field_release:proto.AbilityString.str)
  if (has_str()) {
    clear_has_type();
    return type_.str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void AbilityString::set_allocated_str(::std::string* str) {
  if (!has_str()) {
    type_.str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_type();
  if (str != NULL) {
    set_has_str();
    type_.str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        str);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityString.str)
}

// uint32 hash = 2;
bool AbilityString::has_hash() const {
  return type_case() == kHash;
}
void AbilityString::set_has_hash() {
  _oneof_case_[0] = kHash;
}
void AbilityString::clear_hash() {
  if (has_hash()) {
    type_.hash_ = 0u;
    clear_has_type();
  }
}
::google::protobuf::uint32 AbilityString::hash() const {
  // @@protoc_insertion_point(field_get:proto.AbilityString.hash)
  if (has_hash()) {
    return type_.hash_;
  }
  return 0u;
}
void AbilityString::set_hash(::google::protobuf::uint32 value) {
  if (!has_hash()) {
    clear_type();
    set_has_hash();
  }
  type_.hash_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityString.hash)
}

bool AbilityString::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
void AbilityString::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
AbilityString::TypeCase AbilityString::type_case() const {
  return AbilityString::TypeCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityFloatValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityFloatValue::AbilityFloatValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityFloatValue)
}
AbilityFloatValue::AbilityFloatValue(const AbilityFloatValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:proto.AbilityFloatValue)
}

void AbilityFloatValue::SharedCtor() {
  value_ = 0;
  _cached_size_ = 0;
}

AbilityFloatValue::~AbilityFloatValue() {
  // @@protoc_insertion_point(destructor:proto.AbilityFloatValue)
  SharedDtor();
}

void AbilityFloatValue::SharedDtor() {
}

void AbilityFloatValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityFloatValue::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityFloatValue& AbilityFloatValue::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityFloatValue* AbilityFloatValue::New(::google::protobuf::Arena* arena) const {
  AbilityFloatValue* n = new AbilityFloatValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityFloatValue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityFloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_ = 0;
  _internal_metadata_.Clear();
}

bool AbilityFloatValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityFloatValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityFloatValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityFloatValue)
  return false;
#undef DO_
}

void AbilityFloatValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityFloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityFloatValue)
}

::google::protobuf::uint8* AbilityFloatValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityFloatValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityFloatValue)
  return target;
}

size_t AbilityFloatValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityFloatValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float value = 1;
  if (this->value() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityFloatValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityFloatValue)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityFloatValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityFloatValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityFloatValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityFloatValue)
    MergeFrom(*source);
  }
}

void AbilityFloatValue::MergeFrom(const AbilityFloatValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityFloatValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value() != 0) {
    set_value(from.value());
  }
}

void AbilityFloatValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityFloatValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityFloatValue::CopyFrom(const AbilityFloatValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityFloatValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityFloatValue::IsInitialized() const {
  return true;
}

void AbilityFloatValue::Swap(AbilityFloatValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityFloatValue::InternalSwap(AbilityFloatValue* other) {
  using std::swap;
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityFloatValue::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityFloatValue

// float value = 1;
void AbilityFloatValue::clear_value() {
  value_ = 0;
}
float AbilityFloatValue::value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityFloatValue.value)
  return value_;
}
void AbilityFloatValue::set_value(float value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityFloatValue.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityScalarValueEntry::kKeyFieldNumber;
const int AbilityScalarValueEntry::kValueTypeFieldNumber;
const int AbilityScalarValueEntry::kFloatValueFieldNumber;
const int AbilityScalarValueEntry::kStringValueFieldNumber;
const int AbilityScalarValueEntry::kIntValueFieldNumber;
const int AbilityScalarValueEntry::kUintValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityScalarValueEntry::AbilityScalarValueEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityScalarValueEntry)
}
AbilityScalarValueEntry::AbilityScalarValueEntry(const AbilityScalarValueEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::proto::AbilityString(*from.key_);
  } else {
    key_ = NULL;
  }
  value_type_ = from.value_type_;
  clear_has_value();
  switch (from.value_case()) {
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kUintValue: {
      set_uint_value(from.uint_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.AbilityScalarValueEntry)
}

void AbilityScalarValueEntry::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_type_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_type_));
  clear_has_value();
  _cached_size_ = 0;
}

AbilityScalarValueEntry::~AbilityScalarValueEntry() {
  // @@protoc_insertion_point(destructor:proto.AbilityScalarValueEntry)
  SharedDtor();
}

void AbilityScalarValueEntry::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (has_value()) {
    clear_value();
  }
}

void AbilityScalarValueEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityScalarValueEntry::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityScalarValueEntry& AbilityScalarValueEntry::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityScalarValueEntry* AbilityScalarValueEntry::New(::google::protobuf::Arena* arena) const {
  AbilityScalarValueEntry* n = new AbilityScalarValueEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityScalarValueEntry::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:proto.AbilityScalarValueEntry)
  switch (value_case()) {
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIntValue: {
      // No need to clear
      break;
    }
    case kUintValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void AbilityScalarValueEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityScalarValueEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  value_type_ = 0;
  clear_value();
  _internal_metadata_.Clear();
}

bool AbilityScalarValueEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityScalarValueEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AbilityString key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilityScalarType value_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_value_type(static_cast< ::proto::AbilityScalarType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.float_value_)));
          set_has_float_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AbilityScalarValueEntry.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_.int_value_)));
          set_has_int_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uint_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_.uint_value_)));
          set_has_uint_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityScalarValueEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityScalarValueEntry)
  return false;
#undef DO_
}

void AbilityScalarValueEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityScalarValueEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AbilityString key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // .proto.AbilityScalarType value_type = 2;
  if (this->value_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->value_type(), output);
  }

  // float float_value = 3;
  if (has_float_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->float_value(), output);
  }

  // string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AbilityScalarValueEntry.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->string_value(), output);
  }

  // int32 int_value = 5;
  if (has_int_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->int_value(), output);
  }

  // uint32 uint_value = 6;
  if (has_uint_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uint_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityScalarValueEntry)
}

::google::protobuf::uint8* AbilityScalarValueEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityScalarValueEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AbilityString key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->key_, deterministic, target);
  }

  // .proto.AbilityScalarType value_type = 2;
  if (this->value_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->value_type(), target);
  }

  // float float_value = 3;
  if (has_float_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->float_value(), target);
  }

  // string string_value = 4;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AbilityScalarValueEntry.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->string_value(), target);
  }

  // int32 int_value = 5;
  if (has_int_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->int_value(), target);
  }

  // uint32 uint_value = 6;
  if (has_uint_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uint_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityScalarValueEntry)
  return target;
}

size_t AbilityScalarValueEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityScalarValueEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AbilityString key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->key_);
  }

  // .proto.AbilityScalarType value_type = 2;
  if (this->value_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->value_type());
  }

  switch (value_case()) {
    // float float_value = 3;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // string string_value = 4;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // int32 int_value = 5;
    case kIntValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_value());
      break;
    }
    // uint32 uint_value = 6;
    case kUintValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uint_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityScalarValueEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityScalarValueEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityScalarValueEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityScalarValueEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityScalarValueEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityScalarValueEntry)
    MergeFrom(*source);
  }
}

void AbilityScalarValueEntry::MergeFrom(const AbilityScalarValueEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityScalarValueEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::proto::AbilityString::MergeFrom(from.key());
  }
  if (from.value_type() != 0) {
    set_value_type(from.value_type());
  }
  switch (from.value_case()) {
    case kFloatValue: {
      set_float_value(from.float_value());
      break;
    }
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kIntValue: {
      set_int_value(from.int_value());
      break;
    }
    case kUintValue: {
      set_uint_value(from.uint_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void AbilityScalarValueEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityScalarValueEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityScalarValueEntry::CopyFrom(const AbilityScalarValueEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityScalarValueEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityScalarValueEntry::IsInitialized() const {
  return true;
}

void AbilityScalarValueEntry::Swap(AbilityScalarValueEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityScalarValueEntry::InternalSwap(AbilityScalarValueEntry* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(value_type_, other->value_type_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityScalarValueEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityScalarValueEntry

// .proto.AbilityString key = 1;
bool AbilityScalarValueEntry::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
void AbilityScalarValueEntry::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
const ::proto::AbilityString& AbilityScalarValueEntry::key() const {
  const ::proto::AbilityString* p = key_;
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.key)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
::proto::AbilityString* AbilityScalarValueEntry::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityScalarValueEntry.key)
  return key_;
}
::proto::AbilityString* AbilityScalarValueEntry::release_key() {
  // @@protoc_insertion_point(field_release:proto.AbilityScalarValueEntry.key)
  
  ::proto::AbilityString* temp = key_;
  key_ = NULL;
  return temp;
}
void AbilityScalarValueEntry::set_allocated_key(::proto::AbilityString* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityScalarValueEntry.key)
}

// .proto.AbilityScalarType value_type = 2;
void AbilityScalarValueEntry::clear_value_type() {
  value_type_ = 0;
}
::proto::AbilityScalarType AbilityScalarValueEntry::value_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.value_type)
  return static_cast< ::proto::AbilityScalarType >(value_type_);
}
void AbilityScalarValueEntry::set_value_type(::proto::AbilityScalarType value) {
  
  value_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.value_type)
}

// float float_value = 3;
bool AbilityScalarValueEntry::has_float_value() const {
  return value_case() == kFloatValue;
}
void AbilityScalarValueEntry::set_has_float_value() {
  _oneof_case_[0] = kFloatValue;
}
void AbilityScalarValueEntry::clear_float_value() {
  if (has_float_value()) {
    value_.float_value_ = 0;
    clear_has_value();
  }
}
float AbilityScalarValueEntry::float_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.float_value)
  if (has_float_value()) {
    return value_.float_value_;
  }
  return 0;
}
void AbilityScalarValueEntry::set_float_value(float value) {
  if (!has_float_value()) {
    clear_value();
    set_has_float_value();
  }
  value_.float_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.float_value)
}

// string string_value = 4;
bool AbilityScalarValueEntry::has_string_value() const {
  return value_case() == kStringValue;
}
void AbilityScalarValueEntry::set_has_string_value() {
  _oneof_case_[0] = kStringValue;
}
void AbilityScalarValueEntry::clear_string_value() {
  if (has_string_value()) {
    value_.string_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& AbilityScalarValueEntry::string_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.string_value)
  if (has_string_value()) {
    return value_.string_value_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void AbilityScalarValueEntry::set_string_value(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
}
#if LANG_CXX11
void AbilityScalarValueEntry::set_string_value(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.string_value)
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityScalarValueEntry.string_value)
}
#endif
void AbilityScalarValueEntry::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityScalarValueEntry.string_value)
}
void AbilityScalarValueEntry::set_string_value(const char* value, size_t size) {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityScalarValueEntry.string_value)
}
::std::string* AbilityScalarValueEntry::mutable_string_value() {
  if (!has_string_value()) {
    clear_value();
    set_has_string_value();
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityScalarValueEntry.string_value)
  return value_.string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AbilityScalarValueEntry::release_string_value() {
  // @@protoc_insertion_point(field_release:proto.AbilityScalarValueEntry.string_value)
  if (has_string_value()) {
    clear_has_value();
    return value_.string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void AbilityScalarValueEntry::set_allocated_string_value(::std::string* string_value) {
  if (!has_string_value()) {
    value_.string_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_value != NULL) {
    set_has_string_value();
    value_.string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_value);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityScalarValueEntry.string_value)
}

// int32 int_value = 5;
bool AbilityScalarValueEntry::has_int_value() const {
  return value_case() == kIntValue;
}
void AbilityScalarValueEntry::set_has_int_value() {
  _oneof_case_[0] = kIntValue;
}
void AbilityScalarValueEntry::clear_int_value() {
  if (has_int_value()) {
    value_.int_value_ = 0;
    clear_has_value();
  }
}
::google::protobuf::int32 AbilityScalarValueEntry::int_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.int_value)
  if (has_int_value()) {
    return value_.int_value_;
  }
  return 0;
}
void AbilityScalarValueEntry::set_int_value(::google::protobuf::int32 value) {
  if (!has_int_value()) {
    clear_value();
    set_has_int_value();
  }
  value_.int_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.int_value)
}

// uint32 uint_value = 6;
bool AbilityScalarValueEntry::has_uint_value() const {
  return value_case() == kUintValue;
}
void AbilityScalarValueEntry::set_has_uint_value() {
  _oneof_case_[0] = kUintValue;
}
void AbilityScalarValueEntry::clear_uint_value() {
  if (has_uint_value()) {
    value_.uint_value_ = 0u;
    clear_has_value();
  }
}
::google::protobuf::uint32 AbilityScalarValueEntry::uint_value() const {
  // @@protoc_insertion_point(field_get:proto.AbilityScalarValueEntry.uint_value)
  if (has_uint_value()) {
    return value_.uint_value_;
  }
  return 0u;
}
void AbilityScalarValueEntry::set_uint_value(::google::protobuf::uint32 value) {
  if (!has_uint_value()) {
    clear_value();
    set_has_uint_value();
  }
  value_.uint_value_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityScalarValueEntry.uint_value)
}

bool AbilityScalarValueEntry::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void AbilityScalarValueEntry::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
AbilityScalarValueEntry::ValueCase AbilityScalarValueEntry::value_case() const {
  return AbilityScalarValueEntry::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityAppliedAbility::kAbilityNameFieldNumber;
const int AbilityAppliedAbility::kAbilityOverrideFieldNumber;
const int AbilityAppliedAbility::kOverrideMapFieldNumber;
const int AbilityAppliedAbility::kInstancedAbilityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityAppliedAbility::AbilityAppliedAbility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityAppliedAbility)
}
AbilityAppliedAbility::AbilityAppliedAbility(const AbilityAppliedAbility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      override_map_(from.override_map_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ability_name()) {
    ability_name_ = new ::proto::AbilityString(*from.ability_name_);
  } else {
    ability_name_ = NULL;
  }
  if (from.has_ability_override()) {
    ability_override_ = new ::proto::AbilityString(*from.ability_override_);
  } else {
    ability_override_ = NULL;
  }
  instanced_ability_id_ = from.instanced_ability_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AbilityAppliedAbility)
}

void AbilityAppliedAbility::SharedCtor() {
  ::memset(&ability_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanced_ability_id_) -
      reinterpret_cast<char*>(&ability_name_)) + sizeof(instanced_ability_id_));
  _cached_size_ = 0;
}

AbilityAppliedAbility::~AbilityAppliedAbility() {
  // @@protoc_insertion_point(destructor:proto.AbilityAppliedAbility)
  SharedDtor();
}

void AbilityAppliedAbility::SharedDtor() {
  if (this != internal_default_instance()) delete ability_name_;
  if (this != internal_default_instance()) delete ability_override_;
}

void AbilityAppliedAbility::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityAppliedAbility::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityAppliedAbility& AbilityAppliedAbility::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityAppliedAbility* AbilityAppliedAbility::New(::google::protobuf::Arena* arena) const {
  AbilityAppliedAbility* n = new AbilityAppliedAbility;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityAppliedAbility::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityAppliedAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  override_map_.Clear();
  if (GetArenaNoVirtual() == NULL && ability_name_ != NULL) {
    delete ability_name_;
  }
  ability_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && ability_override_ != NULL) {
    delete ability_override_;
  }
  ability_override_ = NULL;
  instanced_ability_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AbilityAppliedAbility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityAppliedAbility)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AbilityString ability_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilityString ability_override = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_override()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AbilityScalarValueEntry override_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_override_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 instanced_ability_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instanced_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityAppliedAbility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityAppliedAbility)
  return false;
#undef DO_
}

void AbilityAppliedAbility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityAppliedAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AbilityString ability_name = 1;
  if (this->has_ability_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ability_name_, output);
  }

  // .proto.AbilityString ability_override = 2;
  if (this->has_ability_override()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ability_override_, output);
  }

  // repeated .proto.AbilityScalarValueEntry override_map = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->override_map_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->override_map(static_cast<int>(i)), output);
  }

  // uint32 instanced_ability_id = 4;
  if (this->instanced_ability_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->instanced_ability_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityAppliedAbility)
}

::google::protobuf::uint8* AbilityAppliedAbility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityAppliedAbility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AbilityString ability_name = 1;
  if (this->has_ability_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ability_name_, deterministic, target);
  }

  // .proto.AbilityString ability_override = 2;
  if (this->has_ability_override()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->ability_override_, deterministic, target);
  }

  // repeated .proto.AbilityScalarValueEntry override_map = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->override_map_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->override_map(static_cast<int>(i)), deterministic, target);
  }

  // uint32 instanced_ability_id = 4;
  if (this->instanced_ability_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->instanced_ability_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityAppliedAbility)
  return target;
}

size_t AbilityAppliedAbility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityAppliedAbility)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AbilityScalarValueEntry override_map = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->override_map_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->override_map(static_cast<int>(i)));
    }
  }

  // .proto.AbilityString ability_name = 1;
  if (this->has_ability_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ability_name_);
  }

  // .proto.AbilityString ability_override = 2;
  if (this->has_ability_override()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ability_override_);
  }

  // uint32 instanced_ability_id = 4;
  if (this->instanced_ability_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instanced_ability_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityAppliedAbility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityAppliedAbility)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityAppliedAbility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityAppliedAbility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityAppliedAbility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityAppliedAbility)
    MergeFrom(*source);
  }
}

void AbilityAppliedAbility::MergeFrom(const AbilityAppliedAbility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityAppliedAbility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  override_map_.MergeFrom(from.override_map_);
  if (from.has_ability_name()) {
    mutable_ability_name()->::proto::AbilityString::MergeFrom(from.ability_name());
  }
  if (from.has_ability_override()) {
    mutable_ability_override()->::proto::AbilityString::MergeFrom(from.ability_override());
  }
  if (from.instanced_ability_id() != 0) {
    set_instanced_ability_id(from.instanced_ability_id());
  }
}

void AbilityAppliedAbility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityAppliedAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityAppliedAbility::CopyFrom(const AbilityAppliedAbility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityAppliedAbility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityAppliedAbility::IsInitialized() const {
  return true;
}

void AbilityAppliedAbility::Swap(AbilityAppliedAbility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityAppliedAbility::InternalSwap(AbilityAppliedAbility* other) {
  using std::swap;
  override_map_.InternalSwap(&other->override_map_);
  swap(ability_name_, other->ability_name_);
  swap(ability_override_, other->ability_override_);
  swap(instanced_ability_id_, other->instanced_ability_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityAppliedAbility::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityAppliedAbility

// .proto.AbilityString ability_name = 1;
bool AbilityAppliedAbility::has_ability_name() const {
  return this != internal_default_instance() && ability_name_ != NULL;
}
void AbilityAppliedAbility::clear_ability_name() {
  if (GetArenaNoVirtual() == NULL && ability_name_ != NULL) delete ability_name_;
  ability_name_ = NULL;
}
const ::proto::AbilityString& AbilityAppliedAbility::ability_name() const {
  const ::proto::AbilityString* p = ability_name_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.ability_name)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
::proto::AbilityString* AbilityAppliedAbility::mutable_ability_name() {
  
  if (ability_name_ == NULL) {
    ability_name_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.ability_name)
  return ability_name_;
}
::proto::AbilityString* AbilityAppliedAbility::release_ability_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedAbility.ability_name)
  
  ::proto::AbilityString* temp = ability_name_;
  ability_name_ = NULL;
  return temp;
}
void AbilityAppliedAbility::set_allocated_ability_name(::proto::AbilityString* ability_name) {
  delete ability_name_;
  ability_name_ = ability_name;
  if (ability_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedAbility.ability_name)
}

// .proto.AbilityString ability_override = 2;
bool AbilityAppliedAbility::has_ability_override() const {
  return this != internal_default_instance() && ability_override_ != NULL;
}
void AbilityAppliedAbility::clear_ability_override() {
  if (GetArenaNoVirtual() == NULL && ability_override_ != NULL) delete ability_override_;
  ability_override_ = NULL;
}
const ::proto::AbilityString& AbilityAppliedAbility::ability_override() const {
  const ::proto::AbilityString* p = ability_override_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.ability_override)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
::proto::AbilityString* AbilityAppliedAbility::mutable_ability_override() {
  
  if (ability_override_ == NULL) {
    ability_override_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.ability_override)
  return ability_override_;
}
::proto::AbilityString* AbilityAppliedAbility::release_ability_override() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedAbility.ability_override)
  
  ::proto::AbilityString* temp = ability_override_;
  ability_override_ = NULL;
  return temp;
}
void AbilityAppliedAbility::set_allocated_ability_override(::proto::AbilityString* ability_override) {
  delete ability_override_;
  ability_override_ = ability_override;
  if (ability_override) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedAbility.ability_override)
}

// repeated .proto.AbilityScalarValueEntry override_map = 3;
int AbilityAppliedAbility::override_map_size() const {
  return override_map_.size();
}
void AbilityAppliedAbility::clear_override_map() {
  override_map_.Clear();
}
const ::proto::AbilityScalarValueEntry& AbilityAppliedAbility::override_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.override_map)
  return override_map_.Get(index);
}
::proto::AbilityScalarValueEntry* AbilityAppliedAbility::mutable_override_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedAbility.override_map)
  return override_map_.Mutable(index);
}
::proto::AbilityScalarValueEntry* AbilityAppliedAbility::add_override_map() {
  // @@protoc_insertion_point(field_add:proto.AbilityAppliedAbility.override_map)
  return override_map_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
AbilityAppliedAbility::mutable_override_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilityAppliedAbility.override_map)
  return &override_map_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
AbilityAppliedAbility::override_map() const {
  // @@protoc_insertion_point(field_list:proto.AbilityAppliedAbility.override_map)
  return override_map_;
}

// uint32 instanced_ability_id = 4;
void AbilityAppliedAbility::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
::google::protobuf::uint32 AbilityAppliedAbility::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedAbility.instanced_ability_id)
  return instanced_ability_id_;
}
void AbilityAppliedAbility::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedAbility.instanced_ability_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityAttachedModifier::kIsInvalidFieldNumber;
const int AbilityAttachedModifier::kOwnerEntityIdFieldNumber;
const int AbilityAttachedModifier::kInstancedModifierIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityAttachedModifier::AbilityAttachedModifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityAttachedModifier)
}
AbilityAttachedModifier::AbilityAttachedModifier(const AbilityAttachedModifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_invalid_, &from.is_invalid_,
    static_cast<size_t>(reinterpret_cast<char*>(&instanced_modifier_id_) -
    reinterpret_cast<char*>(&is_invalid_)) + sizeof(instanced_modifier_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AbilityAttachedModifier)
}

void AbilityAttachedModifier::SharedCtor() {
  ::memset(&is_invalid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanced_modifier_id_) -
      reinterpret_cast<char*>(&is_invalid_)) + sizeof(instanced_modifier_id_));
  _cached_size_ = 0;
}

AbilityAttachedModifier::~AbilityAttachedModifier() {
  // @@protoc_insertion_point(destructor:proto.AbilityAttachedModifier)
  SharedDtor();
}

void AbilityAttachedModifier::SharedDtor() {
}

void AbilityAttachedModifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityAttachedModifier::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityAttachedModifier& AbilityAttachedModifier::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityAttachedModifier* AbilityAttachedModifier::New(::google::protobuf::Arena* arena) const {
  AbilityAttachedModifier* n = new AbilityAttachedModifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityAttachedModifier::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityAttachedModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_invalid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanced_modifier_id_) -
      reinterpret_cast<char*>(&is_invalid_)) + sizeof(instanced_modifier_id_));
  _internal_metadata_.Clear();
}

bool AbilityAttachedModifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityAttachedModifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_invalid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_invalid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 owner_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 instanced_modifier_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instanced_modifier_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityAttachedModifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityAttachedModifier)
  return false;
#undef DO_
}

void AbilityAttachedModifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityAttachedModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_invalid = 1;
  if (this->is_invalid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_invalid(), output);
  }

  // uint32 owner_entity_id = 2;
  if (this->owner_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_entity_id(), output);
  }

  // uint32 instanced_modifier_id = 3;
  if (this->instanced_modifier_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->instanced_modifier_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityAttachedModifier)
}

::google::protobuf::uint8* AbilityAttachedModifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityAttachedModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_invalid = 1;
  if (this->is_invalid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_invalid(), target);
  }

  // uint32 owner_entity_id = 2;
  if (this->owner_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_entity_id(), target);
  }

  // uint32 instanced_modifier_id = 3;
  if (this->instanced_modifier_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->instanced_modifier_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityAttachedModifier)
  return target;
}

size_t AbilityAttachedModifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityAttachedModifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_invalid = 1;
  if (this->is_invalid() != 0) {
    total_size += 1 + 1;
  }

  // uint32 owner_entity_id = 2;
  if (this->owner_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_entity_id());
  }

  // uint32 instanced_modifier_id = 3;
  if (this->instanced_modifier_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instanced_modifier_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityAttachedModifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityAttachedModifier)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityAttachedModifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityAttachedModifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityAttachedModifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityAttachedModifier)
    MergeFrom(*source);
  }
}

void AbilityAttachedModifier::MergeFrom(const AbilityAttachedModifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityAttachedModifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_invalid() != 0) {
    set_is_invalid(from.is_invalid());
  }
  if (from.owner_entity_id() != 0) {
    set_owner_entity_id(from.owner_entity_id());
  }
  if (from.instanced_modifier_id() != 0) {
    set_instanced_modifier_id(from.instanced_modifier_id());
  }
}

void AbilityAttachedModifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityAttachedModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityAttachedModifier::CopyFrom(const AbilityAttachedModifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityAttachedModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityAttachedModifier::IsInitialized() const {
  return true;
}

void AbilityAttachedModifier::Swap(AbilityAttachedModifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityAttachedModifier::InternalSwap(AbilityAttachedModifier* other) {
  using std::swap;
  swap(is_invalid_, other->is_invalid_);
  swap(owner_entity_id_, other->owner_entity_id_);
  swap(instanced_modifier_id_, other->instanced_modifier_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityAttachedModifier::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityAttachedModifier

// bool is_invalid = 1;
void AbilityAttachedModifier::clear_is_invalid() {
  is_invalid_ = false;
}
bool AbilityAttachedModifier::is_invalid() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.is_invalid)
  return is_invalid_;
}
void AbilityAttachedModifier::set_is_invalid(bool value) {
  
  is_invalid_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.is_invalid)
}

// uint32 owner_entity_id = 2;
void AbilityAttachedModifier::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
::google::protobuf::uint32 AbilityAttachedModifier::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.owner_entity_id)
  return owner_entity_id_;
}
void AbilityAttachedModifier::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.owner_entity_id)
}

// uint32 instanced_modifier_id = 3;
void AbilityAttachedModifier::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
::google::protobuf::uint32 AbilityAttachedModifier::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAttachedModifier.instanced_modifier_id)
  return instanced_modifier_id_;
}
void AbilityAttachedModifier::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAttachedModifier.instanced_modifier_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModifierDurability::kReduceRatioFieldNumber;
const int ModifierDurability::kRemainingDurabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModifierDurability::ModifierDurability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ModifierDurability)
}
ModifierDurability::ModifierDurability(const ModifierDurability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reduce_ratio_, &from.reduce_ratio_,
    static_cast<size_t>(reinterpret_cast<char*>(&remaining_durability_) -
    reinterpret_cast<char*>(&reduce_ratio_)) + sizeof(remaining_durability_));
  // @@protoc_insertion_point(copy_constructor:proto.ModifierDurability)
}

void ModifierDurability::SharedCtor() {
  ::memset(&reduce_ratio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remaining_durability_) -
      reinterpret_cast<char*>(&reduce_ratio_)) + sizeof(remaining_durability_));
  _cached_size_ = 0;
}

ModifierDurability::~ModifierDurability() {
  // @@protoc_insertion_point(destructor:proto.ModifierDurability)
  SharedDtor();
}

void ModifierDurability::SharedDtor() {
}

void ModifierDurability::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModifierDurability::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModifierDurability& ModifierDurability::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModifierDurability* ModifierDurability::New(::google::protobuf::Arena* arena) const {
  ModifierDurability* n = new ModifierDurability;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModifierDurability::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ModifierDurability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&reduce_ratio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&remaining_durability_) -
      reinterpret_cast<char*>(&reduce_ratio_)) + sizeof(remaining_durability_));
  _internal_metadata_.Clear();
}

bool ModifierDurability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ModifierDurability)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float reduce_ratio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reduce_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float remaining_durability = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &remaining_durability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ModifierDurability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ModifierDurability)
  return false;
#undef DO_
}

void ModifierDurability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ModifierDurability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float reduce_ratio = 1;
  if (this->reduce_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->reduce_ratio(), output);
  }

  // float remaining_durability = 2;
  if (this->remaining_durability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->remaining_durability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ModifierDurability)
}

::google::protobuf::uint8* ModifierDurability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ModifierDurability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float reduce_ratio = 1;
  if (this->reduce_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->reduce_ratio(), target);
  }

  // float remaining_durability = 2;
  if (this->remaining_durability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->remaining_durability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ModifierDurability)
  return target;
}

size_t ModifierDurability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ModifierDurability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float reduce_ratio = 1;
  if (this->reduce_ratio() != 0) {
    total_size += 1 + 4;
  }

  // float remaining_durability = 2;
  if (this->remaining_durability() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModifierDurability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ModifierDurability)
  GOOGLE_DCHECK_NE(&from, this);
  const ModifierDurability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModifierDurability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ModifierDurability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ModifierDurability)
    MergeFrom(*source);
  }
}

void ModifierDurability::MergeFrom(const ModifierDurability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ModifierDurability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reduce_ratio() != 0) {
    set_reduce_ratio(from.reduce_ratio());
  }
  if (from.remaining_durability() != 0) {
    set_remaining_durability(from.remaining_durability());
  }
}

void ModifierDurability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ModifierDurability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModifierDurability::CopyFrom(const ModifierDurability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ModifierDurability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModifierDurability::IsInitialized() const {
  return true;
}

void ModifierDurability::Swap(ModifierDurability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModifierDurability::InternalSwap(ModifierDurability* other) {
  using std::swap;
  swap(reduce_ratio_, other->reduce_ratio_);
  swap(remaining_durability_, other->remaining_durability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModifierDurability::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModifierDurability

// float reduce_ratio = 1;
void ModifierDurability::clear_reduce_ratio() {
  reduce_ratio_ = 0;
}
float ModifierDurability::reduce_ratio() const {
  // @@protoc_insertion_point(field_get:proto.ModifierDurability.reduce_ratio)
  return reduce_ratio_;
}
void ModifierDurability::set_reduce_ratio(float value) {
  
  reduce_ratio_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifierDurability.reduce_ratio)
}

// float remaining_durability = 2;
void ModifierDurability::clear_remaining_durability() {
  remaining_durability_ = 0;
}
float ModifierDurability::remaining_durability() const {
  // @@protoc_insertion_point(field_get:proto.ModifierDurability.remaining_durability)
  return remaining_durability_;
}
void ModifierDurability::set_remaining_durability(float value) {
  
  remaining_durability_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifierDurability.remaining_durability)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityAppliedModifier::kModifierLocalIdFieldNumber;
const int AbilityAppliedModifier::kParentAbilityEntityIdFieldNumber;
const int AbilityAppliedModifier::kParentAbilityNameFieldNumber;
const int AbilityAppliedModifier::kParentAbilityOverrideFieldNumber;
const int AbilityAppliedModifier::kInstancedAbilityIdFieldNumber;
const int AbilityAppliedModifier::kInstancedModifierIdFieldNumber;
const int AbilityAppliedModifier::kExistDurationFieldNumber;
const int AbilityAppliedModifier::kAttachedInstancedModifierFieldNumber;
const int AbilityAppliedModifier::kApplyEntityIdFieldNumber;
const int AbilityAppliedModifier::kIsAttachedParentAbilityFieldNumber;
const int AbilityAppliedModifier::kModifierDurabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityAppliedModifier::AbilityAppliedModifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityAppliedModifier)
}
AbilityAppliedModifier::AbilityAppliedModifier(const AbilityAppliedModifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_parent_ability_name()) {
    parent_ability_name_ = new ::proto::AbilityString(*from.parent_ability_name_);
  } else {
    parent_ability_name_ = NULL;
  }
  if (from.has_parent_ability_override()) {
    parent_ability_override_ = new ::proto::AbilityString(*from.parent_ability_override_);
  } else {
    parent_ability_override_ = NULL;
  }
  if (from.has_attached_instanced_modifier()) {
    attached_instanced_modifier_ = new ::proto::AbilityAttachedModifier(*from.attached_instanced_modifier_);
  } else {
    attached_instanced_modifier_ = NULL;
  }
  if (from.has_modifier_durability()) {
    modifier_durability_ = new ::proto::ModifierDurability(*from.modifier_durability_);
  } else {
    modifier_durability_ = NULL;
  }
  ::memcpy(&modifier_local_id_, &from.modifier_local_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_attached_parent_ability_) -
    reinterpret_cast<char*>(&modifier_local_id_)) + sizeof(is_attached_parent_ability_));
  // @@protoc_insertion_point(copy_constructor:proto.AbilityAppliedModifier)
}

void AbilityAppliedModifier::SharedCtor() {
  ::memset(&parent_ability_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_attached_parent_ability_) -
      reinterpret_cast<char*>(&parent_ability_name_)) + sizeof(is_attached_parent_ability_));
  _cached_size_ = 0;
}

AbilityAppliedModifier::~AbilityAppliedModifier() {
  // @@protoc_insertion_point(destructor:proto.AbilityAppliedModifier)
  SharedDtor();
}

void AbilityAppliedModifier::SharedDtor() {
  if (this != internal_default_instance()) delete parent_ability_name_;
  if (this != internal_default_instance()) delete parent_ability_override_;
  if (this != internal_default_instance()) delete attached_instanced_modifier_;
  if (this != internal_default_instance()) delete modifier_durability_;
}

void AbilityAppliedModifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityAppliedModifier::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityAppliedModifier& AbilityAppliedModifier::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityAppliedModifier* AbilityAppliedModifier::New(::google::protobuf::Arena* arena) const {
  AbilityAppliedModifier* n = new AbilityAppliedModifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityAppliedModifier::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityAppliedModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && parent_ability_name_ != NULL) {
    delete parent_ability_name_;
  }
  parent_ability_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && parent_ability_override_ != NULL) {
    delete parent_ability_override_;
  }
  parent_ability_override_ = NULL;
  if (GetArenaNoVirtual() == NULL && attached_instanced_modifier_ != NULL) {
    delete attached_instanced_modifier_;
  }
  attached_instanced_modifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && modifier_durability_ != NULL) {
    delete modifier_durability_;
  }
  modifier_durability_ = NULL;
  ::memset(&modifier_local_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_attached_parent_ability_) -
      reinterpret_cast<char*>(&modifier_local_id_)) + sizeof(is_attached_parent_ability_));
  _internal_metadata_.Clear();
}

bool AbilityAppliedModifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityAppliedModifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 modifier_local_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &modifier_local_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_ability_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_ability_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilityString parent_ability_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parent_ability_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilityString parent_ability_override = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parent_ability_override()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 instanced_ability_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instanced_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 instanced_modifier_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instanced_modifier_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float exist_duration = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &exist_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attached_instanced_modifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 apply_entity_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apply_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_attached_parent_ability = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_attached_parent_ability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ModifierDurability modifier_durability = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_modifier_durability()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityAppliedModifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityAppliedModifier)
  return false;
#undef DO_
}

void AbilityAppliedModifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityAppliedModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 modifier_local_id = 1;
  if (this->modifier_local_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->modifier_local_id(), output);
  }

  // uint32 parent_ability_entity_id = 2;
  if (this->parent_ability_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->parent_ability_entity_id(), output);
  }

  // .proto.AbilityString parent_ability_name = 3;
  if (this->has_parent_ability_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->parent_ability_name_, output);
  }

  // .proto.AbilityString parent_ability_override = 4;
  if (this->has_parent_ability_override()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->parent_ability_override_, output);
  }

  // uint32 instanced_ability_id = 5;
  if (this->instanced_ability_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->instanced_ability_id(), output);
  }

  // uint32 instanced_modifier_id = 6;
  if (this->instanced_modifier_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->instanced_modifier_id(), output);
  }

  // float exist_duration = 7;
  if (this->exist_duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->exist_duration(), output);
  }

  // .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
  if (this->has_attached_instanced_modifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->attached_instanced_modifier_, output);
  }

  // uint32 apply_entity_id = 9;
  if (this->apply_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->apply_entity_id(), output);
  }

  // bool is_attached_parent_ability = 10;
  if (this->is_attached_parent_ability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_attached_parent_ability(), output);
  }

  // .proto.ModifierDurability modifier_durability = 11;
  if (this->has_modifier_durability()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->modifier_durability_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityAppliedModifier)
}

::google::protobuf::uint8* AbilityAppliedModifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityAppliedModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 modifier_local_id = 1;
  if (this->modifier_local_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->modifier_local_id(), target);
  }

  // uint32 parent_ability_entity_id = 2;
  if (this->parent_ability_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->parent_ability_entity_id(), target);
  }

  // .proto.AbilityString parent_ability_name = 3;
  if (this->has_parent_ability_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->parent_ability_name_, deterministic, target);
  }

  // .proto.AbilityString parent_ability_override = 4;
  if (this->has_parent_ability_override()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->parent_ability_override_, deterministic, target);
  }

  // uint32 instanced_ability_id = 5;
  if (this->instanced_ability_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->instanced_ability_id(), target);
  }

  // uint32 instanced_modifier_id = 6;
  if (this->instanced_modifier_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->instanced_modifier_id(), target);
  }

  // float exist_duration = 7;
  if (this->exist_duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->exist_duration(), target);
  }

  // .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
  if (this->has_attached_instanced_modifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->attached_instanced_modifier_, deterministic, target);
  }

  // uint32 apply_entity_id = 9;
  if (this->apply_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->apply_entity_id(), target);
  }

  // bool is_attached_parent_ability = 10;
  if (this->is_attached_parent_ability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_attached_parent_ability(), target);
  }

  // .proto.ModifierDurability modifier_durability = 11;
  if (this->has_modifier_durability()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->modifier_durability_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityAppliedModifier)
  return target;
}

size_t AbilityAppliedModifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityAppliedModifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AbilityString parent_ability_name = 3;
  if (this->has_parent_ability_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->parent_ability_name_);
  }

  // .proto.AbilityString parent_ability_override = 4;
  if (this->has_parent_ability_override()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->parent_ability_override_);
  }

  // .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
  if (this->has_attached_instanced_modifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attached_instanced_modifier_);
  }

  // .proto.ModifierDurability modifier_durability = 11;
  if (this->has_modifier_durability()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->modifier_durability_);
  }

  // int32 modifier_local_id = 1;
  if (this->modifier_local_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->modifier_local_id());
  }

  // uint32 parent_ability_entity_id = 2;
  if (this->parent_ability_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_ability_entity_id());
  }

  // uint32 instanced_ability_id = 5;
  if (this->instanced_ability_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instanced_ability_id());
  }

  // uint32 instanced_modifier_id = 6;
  if (this->instanced_modifier_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instanced_modifier_id());
  }

  // float exist_duration = 7;
  if (this->exist_duration() != 0) {
    total_size += 1 + 4;
  }

  // uint32 apply_entity_id = 9;
  if (this->apply_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apply_entity_id());
  }

  // bool is_attached_parent_ability = 10;
  if (this->is_attached_parent_ability() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityAppliedModifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityAppliedModifier)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityAppliedModifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityAppliedModifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityAppliedModifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityAppliedModifier)
    MergeFrom(*source);
  }
}

void AbilityAppliedModifier::MergeFrom(const AbilityAppliedModifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityAppliedModifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_parent_ability_name()) {
    mutable_parent_ability_name()->::proto::AbilityString::MergeFrom(from.parent_ability_name());
  }
  if (from.has_parent_ability_override()) {
    mutable_parent_ability_override()->::proto::AbilityString::MergeFrom(from.parent_ability_override());
  }
  if (from.has_attached_instanced_modifier()) {
    mutable_attached_instanced_modifier()->::proto::AbilityAttachedModifier::MergeFrom(from.attached_instanced_modifier());
  }
  if (from.has_modifier_durability()) {
    mutable_modifier_durability()->::proto::ModifierDurability::MergeFrom(from.modifier_durability());
  }
  if (from.modifier_local_id() != 0) {
    set_modifier_local_id(from.modifier_local_id());
  }
  if (from.parent_ability_entity_id() != 0) {
    set_parent_ability_entity_id(from.parent_ability_entity_id());
  }
  if (from.instanced_ability_id() != 0) {
    set_instanced_ability_id(from.instanced_ability_id());
  }
  if (from.instanced_modifier_id() != 0) {
    set_instanced_modifier_id(from.instanced_modifier_id());
  }
  if (from.exist_duration() != 0) {
    set_exist_duration(from.exist_duration());
  }
  if (from.apply_entity_id() != 0) {
    set_apply_entity_id(from.apply_entity_id());
  }
  if (from.is_attached_parent_ability() != 0) {
    set_is_attached_parent_ability(from.is_attached_parent_ability());
  }
}

void AbilityAppliedModifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityAppliedModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityAppliedModifier::CopyFrom(const AbilityAppliedModifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityAppliedModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityAppliedModifier::IsInitialized() const {
  return true;
}

void AbilityAppliedModifier::Swap(AbilityAppliedModifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityAppliedModifier::InternalSwap(AbilityAppliedModifier* other) {
  using std::swap;
  swap(parent_ability_name_, other->parent_ability_name_);
  swap(parent_ability_override_, other->parent_ability_override_);
  swap(attached_instanced_modifier_, other->attached_instanced_modifier_);
  swap(modifier_durability_, other->modifier_durability_);
  swap(modifier_local_id_, other->modifier_local_id_);
  swap(parent_ability_entity_id_, other->parent_ability_entity_id_);
  swap(instanced_ability_id_, other->instanced_ability_id_);
  swap(instanced_modifier_id_, other->instanced_modifier_id_);
  swap(exist_duration_, other->exist_duration_);
  swap(apply_entity_id_, other->apply_entity_id_);
  swap(is_attached_parent_ability_, other->is_attached_parent_ability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityAppliedModifier::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityAppliedModifier

// int32 modifier_local_id = 1;
void AbilityAppliedModifier::clear_modifier_local_id() {
  modifier_local_id_ = 0;
}
::google::protobuf::int32 AbilityAppliedModifier::modifier_local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.modifier_local_id)
  return modifier_local_id_;
}
void AbilityAppliedModifier::set_modifier_local_id(::google::protobuf::int32 value) {
  
  modifier_local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.modifier_local_id)
}

// uint32 parent_ability_entity_id = 2;
void AbilityAppliedModifier::clear_parent_ability_entity_id() {
  parent_ability_entity_id_ = 0u;
}
::google::protobuf::uint32 AbilityAppliedModifier::parent_ability_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_entity_id)
  return parent_ability_entity_id_;
}
void AbilityAppliedModifier::set_parent_ability_entity_id(::google::protobuf::uint32 value) {
  
  parent_ability_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.parent_ability_entity_id)
}

// .proto.AbilityString parent_ability_name = 3;
bool AbilityAppliedModifier::has_parent_ability_name() const {
  return this != internal_default_instance() && parent_ability_name_ != NULL;
}
void AbilityAppliedModifier::clear_parent_ability_name() {
  if (GetArenaNoVirtual() == NULL && parent_ability_name_ != NULL) delete parent_ability_name_;
  parent_ability_name_ = NULL;
}
const ::proto::AbilityString& AbilityAppliedModifier::parent_ability_name() const {
  const ::proto::AbilityString* p = parent_ability_name_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_name)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
::proto::AbilityString* AbilityAppliedModifier::mutable_parent_ability_name() {
  
  if (parent_ability_name_ == NULL) {
    parent_ability_name_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.parent_ability_name)
  return parent_ability_name_;
}
::proto::AbilityString* AbilityAppliedModifier::release_parent_ability_name() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.parent_ability_name)
  
  ::proto::AbilityString* temp = parent_ability_name_;
  parent_ability_name_ = NULL;
  return temp;
}
void AbilityAppliedModifier::set_allocated_parent_ability_name(::proto::AbilityString* parent_ability_name) {
  delete parent_ability_name_;
  parent_ability_name_ = parent_ability_name;
  if (parent_ability_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.parent_ability_name)
}

// .proto.AbilityString parent_ability_override = 4;
bool AbilityAppliedModifier::has_parent_ability_override() const {
  return this != internal_default_instance() && parent_ability_override_ != NULL;
}
void AbilityAppliedModifier::clear_parent_ability_override() {
  if (GetArenaNoVirtual() == NULL && parent_ability_override_ != NULL) delete parent_ability_override_;
  parent_ability_override_ = NULL;
}
const ::proto::AbilityString& AbilityAppliedModifier::parent_ability_override() const {
  const ::proto::AbilityString* p = parent_ability_override_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.parent_ability_override)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityString*>(
      &::proto::_AbilityString_default_instance_);
}
::proto::AbilityString* AbilityAppliedModifier::mutable_parent_ability_override() {
  
  if (parent_ability_override_ == NULL) {
    parent_ability_override_ = new ::proto::AbilityString;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.parent_ability_override)
  return parent_ability_override_;
}
::proto::AbilityString* AbilityAppliedModifier::release_parent_ability_override() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.parent_ability_override)
  
  ::proto::AbilityString* temp = parent_ability_override_;
  parent_ability_override_ = NULL;
  return temp;
}
void AbilityAppliedModifier::set_allocated_parent_ability_override(::proto::AbilityString* parent_ability_override) {
  delete parent_ability_override_;
  parent_ability_override_ = parent_ability_override;
  if (parent_ability_override) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.parent_ability_override)
}

// uint32 instanced_ability_id = 5;
void AbilityAppliedModifier::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
::google::protobuf::uint32 AbilityAppliedModifier::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.instanced_ability_id)
  return instanced_ability_id_;
}
void AbilityAppliedModifier::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.instanced_ability_id)
}

// uint32 instanced_modifier_id = 6;
void AbilityAppliedModifier::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
::google::protobuf::uint32 AbilityAppliedModifier::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.instanced_modifier_id)
  return instanced_modifier_id_;
}
void AbilityAppliedModifier::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.instanced_modifier_id)
}

// float exist_duration = 7;
void AbilityAppliedModifier::clear_exist_duration() {
  exist_duration_ = 0;
}
float AbilityAppliedModifier::exist_duration() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.exist_duration)
  return exist_duration_;
}
void AbilityAppliedModifier::set_exist_duration(float value) {
  
  exist_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.exist_duration)
}

// .proto.AbilityAttachedModifier attached_instanced_modifier = 8;
bool AbilityAppliedModifier::has_attached_instanced_modifier() const {
  return this != internal_default_instance() && attached_instanced_modifier_ != NULL;
}
void AbilityAppliedModifier::clear_attached_instanced_modifier() {
  if (GetArenaNoVirtual() == NULL && attached_instanced_modifier_ != NULL) delete attached_instanced_modifier_;
  attached_instanced_modifier_ = NULL;
}
const ::proto::AbilityAttachedModifier& AbilityAppliedModifier::attached_instanced_modifier() const {
  const ::proto::AbilityAttachedModifier* p = attached_instanced_modifier_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.attached_instanced_modifier)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityAttachedModifier*>(
      &::proto::_AbilityAttachedModifier_default_instance_);
}
::proto::AbilityAttachedModifier* AbilityAppliedModifier::mutable_attached_instanced_modifier() {
  
  if (attached_instanced_modifier_ == NULL) {
    attached_instanced_modifier_ = new ::proto::AbilityAttachedModifier;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.attached_instanced_modifier)
  return attached_instanced_modifier_;
}
::proto::AbilityAttachedModifier* AbilityAppliedModifier::release_attached_instanced_modifier() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.attached_instanced_modifier)
  
  ::proto::AbilityAttachedModifier* temp = attached_instanced_modifier_;
  attached_instanced_modifier_ = NULL;
  return temp;
}
void AbilityAppliedModifier::set_allocated_attached_instanced_modifier(::proto::AbilityAttachedModifier* attached_instanced_modifier) {
  delete attached_instanced_modifier_;
  attached_instanced_modifier_ = attached_instanced_modifier;
  if (attached_instanced_modifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.attached_instanced_modifier)
}

// uint32 apply_entity_id = 9;
void AbilityAppliedModifier::clear_apply_entity_id() {
  apply_entity_id_ = 0u;
}
::google::protobuf::uint32 AbilityAppliedModifier::apply_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.apply_entity_id)
  return apply_entity_id_;
}
void AbilityAppliedModifier::set_apply_entity_id(::google::protobuf::uint32 value) {
  
  apply_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.apply_entity_id)
}

// bool is_attached_parent_ability = 10;
void AbilityAppliedModifier::clear_is_attached_parent_ability() {
  is_attached_parent_ability_ = false;
}
bool AbilityAppliedModifier::is_attached_parent_ability() const {
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.is_attached_parent_ability)
  return is_attached_parent_ability_;
}
void AbilityAppliedModifier::set_is_attached_parent_ability(bool value) {
  
  is_attached_parent_ability_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityAppliedModifier.is_attached_parent_ability)
}

// .proto.ModifierDurability modifier_durability = 11;
bool AbilityAppliedModifier::has_modifier_durability() const {
  return this != internal_default_instance() && modifier_durability_ != NULL;
}
void AbilityAppliedModifier::clear_modifier_durability() {
  if (GetArenaNoVirtual() == NULL && modifier_durability_ != NULL) delete modifier_durability_;
  modifier_durability_ = NULL;
}
const ::proto::ModifierDurability& AbilityAppliedModifier::modifier_durability() const {
  const ::proto::ModifierDurability* p = modifier_durability_;
  // @@protoc_insertion_point(field_get:proto.AbilityAppliedModifier.modifier_durability)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ModifierDurability*>(
      &::proto::_ModifierDurability_default_instance_);
}
::proto::ModifierDurability* AbilityAppliedModifier::mutable_modifier_durability() {
  
  if (modifier_durability_ == NULL) {
    modifier_durability_ = new ::proto::ModifierDurability;
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityAppliedModifier.modifier_durability)
  return modifier_durability_;
}
::proto::ModifierDurability* AbilityAppliedModifier::release_modifier_durability() {
  // @@protoc_insertion_point(field_release:proto.AbilityAppliedModifier.modifier_durability)
  
  ::proto::ModifierDurability* temp = modifier_durability_;
  modifier_durability_ = NULL;
  return temp;
}
void AbilityAppliedModifier::set_allocated_modifier_durability(::proto::ModifierDurability* modifier_durability) {
  delete modifier_durability_;
  modifier_durability_ = modifier_durability;
  if (modifier_durability) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityAppliedModifier.modifier_durability)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilitySyncStateInfo::kIsInitedFieldNumber;
const int AbilitySyncStateInfo::kDynamicValueMapFieldNumber;
const int AbilitySyncStateInfo::kAppliedAbilitiesFieldNumber;
const int AbilitySyncStateInfo::kAppliedModifiersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilitySyncStateInfo::AbilitySyncStateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilitySyncStateInfo)
}
AbilitySyncStateInfo::AbilitySyncStateInfo(const AbilitySyncStateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dynamic_value_map_(from.dynamic_value_map_),
      applied_abilities_(from.applied_abilities_),
      applied_modifiers_(from.applied_modifiers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_inited_ = from.is_inited_;
  // @@protoc_insertion_point(copy_constructor:proto.AbilitySyncStateInfo)
}

void AbilitySyncStateInfo::SharedCtor() {
  is_inited_ = false;
  _cached_size_ = 0;
}

AbilitySyncStateInfo::~AbilitySyncStateInfo() {
  // @@protoc_insertion_point(destructor:proto.AbilitySyncStateInfo)
  SharedDtor();
}

void AbilitySyncStateInfo::SharedDtor() {
}

void AbilitySyncStateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilitySyncStateInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilitySyncStateInfo& AbilitySyncStateInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilitySyncStateInfo* AbilitySyncStateInfo::New(::google::protobuf::Arena* arena) const {
  AbilitySyncStateInfo* n = new AbilitySyncStateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilitySyncStateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilitySyncStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dynamic_value_map_.Clear();
  applied_abilities_.Clear();
  applied_modifiers_.Clear();
  is_inited_ = false;
  _internal_metadata_.Clear();
}

bool AbilitySyncStateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilitySyncStateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_inited = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_inited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dynamic_value_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AbilityAppliedAbility applied_abilities = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applied_abilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applied_modifiers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilitySyncStateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilitySyncStateInfo)
  return false;
#undef DO_
}

void AbilitySyncStateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilitySyncStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_inited = 1;
  if (this->is_inited() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_inited(), output);
  }

  // repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dynamic_value_map_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dynamic_value_map(static_cast<int>(i)), output);
  }

  // repeated .proto.AbilityAppliedAbility applied_abilities = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applied_abilities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->applied_abilities(static_cast<int>(i)), output);
  }

  // repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applied_modifiers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->applied_modifiers(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilitySyncStateInfo)
}

::google::protobuf::uint8* AbilitySyncStateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilitySyncStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_inited = 1;
  if (this->is_inited() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_inited(), target);
  }

  // repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dynamic_value_map_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->dynamic_value_map(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.AbilityAppliedAbility applied_abilities = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applied_abilities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->applied_abilities(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->applied_modifiers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->applied_modifiers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilitySyncStateInfo)
  return target;
}

size_t AbilitySyncStateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilitySyncStateInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dynamic_value_map_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dynamic_value_map(static_cast<int>(i)));
    }
  }

  // repeated .proto.AbilityAppliedAbility applied_abilities = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->applied_abilities_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->applied_abilities(static_cast<int>(i)));
    }
  }

  // repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->applied_modifiers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->applied_modifiers(static_cast<int>(i)));
    }
  }

  // bool is_inited = 1;
  if (this->is_inited() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilitySyncStateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilitySyncStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilitySyncStateInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilitySyncStateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilitySyncStateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilitySyncStateInfo)
    MergeFrom(*source);
  }
}

void AbilitySyncStateInfo::MergeFrom(const AbilitySyncStateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilitySyncStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dynamic_value_map_.MergeFrom(from.dynamic_value_map_);
  applied_abilities_.MergeFrom(from.applied_abilities_);
  applied_modifiers_.MergeFrom(from.applied_modifiers_);
  if (from.is_inited() != 0) {
    set_is_inited(from.is_inited());
  }
}

void AbilitySyncStateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilitySyncStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilitySyncStateInfo::CopyFrom(const AbilitySyncStateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilitySyncStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilitySyncStateInfo::IsInitialized() const {
  return true;
}

void AbilitySyncStateInfo::Swap(AbilitySyncStateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilitySyncStateInfo::InternalSwap(AbilitySyncStateInfo* other) {
  using std::swap;
  dynamic_value_map_.InternalSwap(&other->dynamic_value_map_);
  applied_abilities_.InternalSwap(&other->applied_abilities_);
  applied_modifiers_.InternalSwap(&other->applied_modifiers_);
  swap(is_inited_, other->is_inited_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilitySyncStateInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilitySyncStateInfo

// bool is_inited = 1;
void AbilitySyncStateInfo::clear_is_inited() {
  is_inited_ = false;
}
bool AbilitySyncStateInfo::is_inited() const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.is_inited)
  return is_inited_;
}
void AbilitySyncStateInfo::set_is_inited(bool value) {
  
  is_inited_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilitySyncStateInfo.is_inited)
}

// repeated .proto.AbilityScalarValueEntry dynamic_value_map = 2;
int AbilitySyncStateInfo::dynamic_value_map_size() const {
  return dynamic_value_map_.size();
}
void AbilitySyncStateInfo::clear_dynamic_value_map() {
  dynamic_value_map_.Clear();
}
const ::proto::AbilityScalarValueEntry& AbilitySyncStateInfo::dynamic_value_map(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Get(index);
}
::proto::AbilityScalarValueEntry* AbilitySyncStateInfo::mutable_dynamic_value_map(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Mutable(index);
}
::proto::AbilityScalarValueEntry* AbilitySyncStateInfo::add_dynamic_value_map() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >*
AbilitySyncStateInfo::mutable_dynamic_value_map() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.dynamic_value_map)
  return &dynamic_value_map_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AbilityScalarValueEntry >&
AbilitySyncStateInfo::dynamic_value_map() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.dynamic_value_map)
  return dynamic_value_map_;
}

// repeated .proto.AbilityAppliedAbility applied_abilities = 3;
int AbilitySyncStateInfo::applied_abilities_size() const {
  return applied_abilities_.size();
}
void AbilitySyncStateInfo::clear_applied_abilities() {
  applied_abilities_.Clear();
}
const ::proto::AbilityAppliedAbility& AbilitySyncStateInfo::applied_abilities(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Get(index);
}
::proto::AbilityAppliedAbility* AbilitySyncStateInfo::mutable_applied_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Mutable(index);
}
::proto::AbilityAppliedAbility* AbilitySyncStateInfo::add_applied_abilities() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >*
AbilitySyncStateInfo::mutable_applied_abilities() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.applied_abilities)
  return &applied_abilities_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedAbility >&
AbilitySyncStateInfo::applied_abilities() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.applied_abilities)
  return applied_abilities_;
}

// repeated .proto.AbilityAppliedModifier applied_modifiers = 4;
int AbilitySyncStateInfo::applied_modifiers_size() const {
  return applied_modifiers_.size();
}
void AbilitySyncStateInfo::clear_applied_modifiers() {
  applied_modifiers_.Clear();
}
const ::proto::AbilityAppliedModifier& AbilitySyncStateInfo::applied_modifiers(int index) const {
  // @@protoc_insertion_point(field_get:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Get(index);
}
::proto::AbilityAppliedModifier* AbilitySyncStateInfo::mutable_applied_modifiers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Mutable(index);
}
::proto::AbilityAppliedModifier* AbilitySyncStateInfo::add_applied_modifiers() {
  // @@protoc_insertion_point(field_add:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >*
AbilitySyncStateInfo::mutable_applied_modifiers() {
  // @@protoc_insertion_point(field_mutable_list:proto.AbilitySyncStateInfo.applied_modifiers)
  return &applied_modifiers_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AbilityAppliedModifier >&
AbilitySyncStateInfo::applied_modifiers() const {
  // @@protoc_insertion_point(field_list:proto.AbilitySyncStateInfo.applied_modifiers)
  return applied_modifiers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector::kXFieldNumber;
const int Vector::kYFieldNumber;
const int Vector::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector::Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Vector)
}
Vector::Vector(const Vector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:proto.Vector)
}

void Vector::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Vector::~Vector() {
  // @@protoc_insertion_point(destructor:proto.Vector)
  SharedDtor();
}

void Vector::SharedDtor() {
}

void Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector& Vector::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector* Vector::New(::google::protobuf::Arena* arena) const {
  Vector* n = new Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Vector)
  return false;
#undef DO_
}

void Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Vector)
}

::google::protobuf::uint8* Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Vector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Vector)
  return target;
}

size_t Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Vector)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Vector)
    MergeFrom(*source);
  }
}

void Vector::MergeFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Vector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector::IsInitialized() const {
  return true;
}

void Vector::Swap(Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector::InternalSwap(Vector* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector

// float x = 1;
void Vector::clear_x() {
  x_ = 0;
}
float Vector::x() const {
  // @@protoc_insertion_point(field_get:proto.Vector.x)
  return x_;
}
void Vector::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.x)
}

// float y = 2;
void Vector::clear_y() {
  y_ = 0;
}
float Vector::y() const {
  // @@protoc_insertion_point(field_get:proto.Vector.y)
  return y_;
}
void Vector::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.y)
}

// float z = 3;
void Vector::clear_z() {
  z_ = 0;
}
float Vector::z() const {
  // @@protoc_insertion_point(field_get:proto.Vector.z)
  return z_;
}
void Vector::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3Int::kXFieldNumber;
const int Vector3Int::kYFieldNumber;
const int Vector3Int::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3Int::Vector3Int()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Vector3Int)
}
Vector3Int::Vector3Int(const Vector3Int& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:proto.Vector3Int)
}

void Vector3Int::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Vector3Int::~Vector3Int() {
  // @@protoc_insertion_point(destructor:proto.Vector3Int)
  SharedDtor();
}

void Vector3Int::SharedDtor() {
}

void Vector3Int::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector3Int::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3Int& Vector3Int::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector3Int* Vector3Int::New(::google::protobuf::Arena* arena) const {
  Vector3Int* n = new Vector3Int;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector3Int::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Vector3Int)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector3Int::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Vector3Int)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Vector3Int)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Vector3Int)
  return false;
#undef DO_
}

void Vector3Int::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Vector3Int)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // int32 z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Vector3Int)
}

::google::protobuf::uint8* Vector3Int::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Vector3Int)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // int32 z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Vector3Int)
  return target;
}

size_t Vector3Int::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Vector3Int)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 z = 3;
  if (this->z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector3Int::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Vector3Int)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3Int* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3Int>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Vector3Int)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Vector3Int)
    MergeFrom(*source);
  }
}

void Vector3Int::MergeFrom(const Vector3Int& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Vector3Int)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3Int::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Vector3Int)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3Int::CopyFrom(const Vector3Int& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Vector3Int)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3Int::IsInitialized() const {
  return true;
}

void Vector3Int::Swap(Vector3Int* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3Int::InternalSwap(Vector3Int* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector3Int::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector3Int

// int32 x = 1;
void Vector3Int::clear_x() {
  x_ = 0;
}
::google::protobuf::int32 Vector3Int::x() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.x)
  return x_;
}
void Vector3Int::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.x)
}

// int32 y = 2;
void Vector3Int::clear_y() {
  y_ = 0;
}
::google::protobuf::int32 Vector3Int::y() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.y)
  return y_;
}
void Vector3Int::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.y)
}

// int32 z = 3;
void Vector3Int::clear_z() {
  z_ = 0;
}
::google::protobuf::int32 Vector3Int::z() const {
  // @@protoc_insertion_point(field_get:proto.Vector3Int.z)
  return z_;
}
void Vector3Int::set_z(::google::protobuf::int32 value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.Vector3Int.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotionInfo::kPosFieldNumber;
const int MotionInfo::kRotFieldNumber;
const int MotionInfo::kSpeedFieldNumber;
const int MotionInfo::kStateFieldNumber;
const int MotionInfo::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotionInfo::MotionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MotionInfo)
}
MotionInfo::MotionInfo(const MotionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  if (from.has_speed()) {
    speed_ = new ::proto::Vector(*from.speed_);
  } else {
    speed_ = NULL;
  }
  state_ = from.state_;
  // @@protoc_insertion_point(copy_constructor:proto.MotionInfo)
}

void MotionInfo::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(state_));
  _cached_size_ = 0;
}

MotionInfo::~MotionInfo() {
  // @@protoc_insertion_point(destructor:proto.MotionInfo)
  SharedDtor();
}

void MotionInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rot_;
  if (this != internal_default_instance()) delete speed_;
}

void MotionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MotionInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MotionInfo& MotionInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MotionInfo* MotionInfo::New(::google::protobuf::Arena* arena) const {
  MotionInfo* n = new MotionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MotionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MotionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  if (GetArenaNoVirtual() == NULL && speed_ != NULL) {
    delete speed_;
  }
  speed_ = NULL;
  state_ = 0;
  _internal_metadata_.Clear();
}

bool MotionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MotionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionState state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::proto::MotionState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Vector params = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MotionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MotionInfo)
  return false;
#undef DO_
}

void MotionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MotionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rot_, output);
  }

  // .proto.Vector speed = 3;
  if (this->has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->speed_, output);
  }

  // .proto.MotionState state = 4;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->state(), output);
  }

  // repeated .proto.Vector params = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->params(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MotionInfo)
}

::google::protobuf::uint8* MotionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MotionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, deterministic, target);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rot_, deterministic, target);
  }

  // .proto.Vector speed = 3;
  if (this->has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->speed_, deterministic, target);
  }

  // .proto.MotionState state = 4;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->state(), target);
  }

  // repeated .proto.Vector params = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MotionInfo)
  return target;
}

size_t MotionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MotionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Vector params = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(static_cast<int>(i)));
    }
  }

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // .proto.Vector speed = 3;
  if (this->has_speed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->speed_);
  }

  // .proto.MotionState state = 4;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MotionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MotionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MotionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MotionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MotionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MotionInfo)
    MergeFrom(*source);
  }
}

void MotionInfo::MergeFrom(const MotionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MotionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.has_speed()) {
    mutable_speed()->::proto::Vector::MergeFrom(from.speed());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void MotionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MotionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotionInfo::CopyFrom(const MotionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MotionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotionInfo::IsInitialized() const {
  return true;
}

void MotionInfo::Swap(MotionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotionInfo::InternalSwap(MotionInfo* other) {
  using std::swap;
  params_.InternalSwap(&other->params_);
  swap(pos_, other->pos_);
  swap(rot_, other->rot_);
  swap(speed_, other->speed_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MotionInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MotionInfo

// .proto.Vector pos = 1;
bool MotionInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void MotionInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& MotionInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MotionInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.pos)
  return pos_;
}
::proto::Vector* MotionInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void MotionInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.pos)
}

// .proto.Vector rot = 2;
bool MotionInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void MotionInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& MotionInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MotionInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.rot)
  return rot_;
}
::proto::Vector* MotionInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void MotionInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.rot)
}

// .proto.Vector speed = 3;
bool MotionInfo::has_speed() const {
  return this != internal_default_instance() && speed_ != NULL;
}
void MotionInfo::clear_speed() {
  if (GetArenaNoVirtual() == NULL && speed_ != NULL) delete speed_;
  speed_ = NULL;
}
const ::proto::Vector& MotionInfo::speed() const {
  const ::proto::Vector* p = speed_;
  // @@protoc_insertion_point(field_get:proto.MotionInfo.speed)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MotionInfo::mutable_speed() {
  
  if (speed_ == NULL) {
    speed_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.speed)
  return speed_;
}
::proto::Vector* MotionInfo::release_speed() {
  // @@protoc_insertion_point(field_release:proto.MotionInfo.speed)
  
  ::proto::Vector* temp = speed_;
  speed_ = NULL;
  return temp;
}
void MotionInfo::set_allocated_speed(::proto::Vector* speed) {
  delete speed_;
  speed_ = speed;
  if (speed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MotionInfo.speed)
}

// .proto.MotionState state = 4;
void MotionInfo::clear_state() {
  state_ = 0;
}
::proto::MotionState MotionInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.state)
  return static_cast< ::proto::MotionState >(state_);
}
void MotionInfo::set_state(::proto::MotionState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.MotionInfo.state)
}

// repeated .proto.Vector params = 5;
int MotionInfo::params_size() const {
  return params_.size();
}
void MotionInfo::clear_params() {
  params_.Clear();
}
const ::proto::Vector& MotionInfo::params(int index) const {
  // @@protoc_insertion_point(field_get:proto.MotionInfo.params)
  return params_.Get(index);
}
::proto::Vector* MotionInfo::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MotionInfo.params)
  return params_.Mutable(index);
}
::proto::Vector* MotionInfo::add_params() {
  // @@protoc_insertion_point(field_add:proto.MotionInfo.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Vector >*
MotionInfo::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.MotionInfo.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Vector >&
MotionInfo::params() const {
  // @@protoc_insertion_point(field_list:proto.MotionInfo.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaceInfo::kPosFieldNumber;
const int PlaceInfo::kRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaceInfo::PlaceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlaceInfo)
}
PlaceInfo::PlaceInfo(const PlaceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.PlaceInfo)
}

void PlaceInfo::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rot_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(rot_));
  _cached_size_ = 0;
}

PlaceInfo::~PlaceInfo() {
  // @@protoc_insertion_point(destructor:proto.PlaceInfo)
  SharedDtor();
}

void PlaceInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rot_;
}

void PlaceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaceInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaceInfo& PlaceInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlaceInfo* PlaceInfo::New(::google::protobuf::Arena* arena) const {
  PlaceInfo* n = new PlaceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlaceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlaceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  _internal_metadata_.Clear();
}

bool PlaceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlaceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlaceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlaceInfo)
  return false;
#undef DO_
}

void PlaceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlaceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlaceInfo)
}

::google::protobuf::uint8* PlaceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlaceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, deterministic, target);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlaceInfo)
  return target;
}

size_t PlaceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlaceInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlaceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlaceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlaceInfo)
    MergeFrom(*source);
  }
}

void PlaceInfo::MergeFrom(const PlaceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlaceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
}

void PlaceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlaceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaceInfo::CopyFrom(const PlaceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlaceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaceInfo::IsInitialized() const {
  return true;
}

void PlaceInfo::Swap(PlaceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaceInfo::InternalSwap(PlaceInfo* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rot_, other->rot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaceInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlaceInfo

// .proto.Vector pos = 1;
bool PlaceInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void PlaceInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& PlaceInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlaceInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlaceInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlaceInfo.pos)
  return pos_;
}
::proto::Vector* PlaceInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlaceInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PlaceInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlaceInfo.pos)
}

// .proto.Vector rot = 2;
bool PlaceInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void PlaceInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& PlaceInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.PlaceInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlaceInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlaceInfo.rot)
  return rot_;
}
::proto::Vector* PlaceInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.PlaceInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void PlaceInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlaceInfo.rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneWeaponInfo::SceneWeaponInfo_AffixMapEntry::SceneWeaponInfo_AffixMapEntry() {}
SceneWeaponInfo::SceneWeaponInfo_AffixMapEntry::SceneWeaponInfo_AffixMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneWeaponInfo::SceneWeaponInfo_AffixMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[38];
}
void SceneWeaponInfo::SceneWeaponInfo_AffixMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneWeaponInfo::SceneWeaponInfo_AffixMapEntry::MergeFrom(const SceneWeaponInfo_AffixMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneWeaponInfo::kEntityIdFieldNumber;
const int SceneWeaponInfo::kGadgetIdFieldNumber;
const int SceneWeaponInfo::kItemIdFieldNumber;
const int SceneWeaponInfo::kGuidFieldNumber;
const int SceneWeaponInfo::kLevelFieldNumber;
const int SceneWeaponInfo::kPromoteLevelFieldNumber;
const int SceneWeaponInfo::kAbilityInfoFieldNumber;
const int SceneWeaponInfo::kAffixMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneWeaponInfo::SceneWeaponInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneWeaponInfo)
}
SceneWeaponInfo::SceneWeaponInfo(const SceneWeaponInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  affix_map_.MergeFrom(from.affix_map_);
  if (from.has_ability_info()) {
    ability_info_ = new ::proto::AbilitySyncStateInfo(*from.ability_info_);
  } else {
    ability_info_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&promote_level_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(promote_level_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneWeaponInfo)
}

void SceneWeaponInfo::SharedCtor() {
  ::memset(&ability_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&ability_info_)) + sizeof(promote_level_));
  _cached_size_ = 0;
}

SceneWeaponInfo::~SceneWeaponInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneWeaponInfo)
  SharedDtor();
}

void SceneWeaponInfo::SharedDtor() {
  if (this != internal_default_instance()) delete ability_info_;
}

void SceneWeaponInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneWeaponInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneWeaponInfo& SceneWeaponInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneWeaponInfo* SceneWeaponInfo::New(::google::protobuf::Arena* arena) const {
  SceneWeaponInfo* n = new SceneWeaponInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneWeaponInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneWeaponInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  affix_map_.Clear();
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) {
    delete ability_info_;
  }
  ability_info_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(promote_level_));
  _internal_metadata_.Clear();
}

bool SceneWeaponInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneWeaponInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo ability_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> affix_map = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          SceneWeaponInfo_AffixMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneWeaponInfo_AffixMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&affix_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneWeaponInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneWeaponInfo)
  return false;
#undef DO_
}

void SceneWeaponInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneWeaponInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 gadget_id = 2;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gadget_id(), output);
  }

  // uint32 item_id = 3;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_id(), output);
  }

  // uint64 guid = 4;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->guid(), output);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // uint32 promote_level = 6;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->promote_level(), output);
  }

  // .proto.AbilitySyncStateInfo ability_info = 7;
  if (this->has_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->ability_info_, output);
  }

  // map<uint32, uint32> affix_map = 8;
  if (!this->affix_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->affix_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->affix_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneWeaponInfo_AffixMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(affix_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneWeaponInfo_AffixMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it) {
        entry.reset(affix_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneWeaponInfo)
}

::google::protobuf::uint8* SceneWeaponInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneWeaponInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 gadget_id = 2;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gadget_id(), target);
  }

  // uint32 item_id = 3;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_id(), target);
  }

  // uint64 guid = 4;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->guid(), target);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // uint32 promote_level = 6;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->promote_level(), target);
  }

  // .proto.AbilitySyncStateInfo ability_info = 7;
  if (this->has_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->ability_info_, deterministic, target);
  }

  // map<uint32, uint32> affix_map = 8;
  if (!this->affix_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->affix_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->affix_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneWeaponInfo_AffixMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(affix_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneWeaponInfo_AffixMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->affix_map().begin();
          it != this->affix_map().end(); ++it) {
        entry.reset(affix_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneWeaponInfo)
  return target;
}

size_t SceneWeaponInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneWeaponInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> affix_map = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->affix_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneWeaponInfo_AffixMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->affix_map().begin();
        it != this->affix_map().end(); ++it) {
      entry.reset(affix_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.AbilitySyncStateInfo ability_info = 7;
  if (this->has_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ability_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 gadget_id = 2;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  // uint64 guid = 4;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint32 item_id = 3;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 promote_level = 6;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneWeaponInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneWeaponInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneWeaponInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneWeaponInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneWeaponInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneWeaponInfo)
    MergeFrom(*source);
  }
}

void SceneWeaponInfo::MergeFrom(const SceneWeaponInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneWeaponInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  affix_map_.MergeFrom(from.affix_map_);
  if (from.has_ability_info()) {
    mutable_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.ability_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
}

void SceneWeaponInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneWeaponInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneWeaponInfo::CopyFrom(const SceneWeaponInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneWeaponInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneWeaponInfo::IsInitialized() const {
  return true;
}

void SceneWeaponInfo::Swap(SceneWeaponInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneWeaponInfo::InternalSwap(SceneWeaponInfo* other) {
  using std::swap;
  affix_map_.Swap(&other->affix_map_);
  swap(ability_info_, other->ability_info_);
  swap(entity_id_, other->entity_id_);
  swap(gadget_id_, other->gadget_id_);
  swap(guid_, other->guid_);
  swap(item_id_, other->item_id_);
  swap(level_, other->level_);
  swap(promote_level_, other->promote_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneWeaponInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneWeaponInfo

// uint32 entity_id = 1;
void SceneWeaponInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneWeaponInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.entity_id)
  return entity_id_;
}
void SceneWeaponInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.entity_id)
}

// uint32 gadget_id = 2;
void SceneWeaponInfo::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 SceneWeaponInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.gadget_id)
  return gadget_id_;
}
void SceneWeaponInfo::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.gadget_id)
}

// uint32 item_id = 3;
void SceneWeaponInfo::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 SceneWeaponInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.item_id)
  return item_id_;
}
void SceneWeaponInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.item_id)
}

// uint64 guid = 4;
void SceneWeaponInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneWeaponInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.guid)
  return guid_;
}
void SceneWeaponInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.guid)
}

// uint32 level = 5;
void SceneWeaponInfo::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 SceneWeaponInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.level)
  return level_;
}
void SceneWeaponInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.level)
}

// uint32 promote_level = 6;
void SceneWeaponInfo::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 SceneWeaponInfo::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.promote_level)
  return promote_level_;
}
void SceneWeaponInfo::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeaponInfo.promote_level)
}

// .proto.AbilitySyncStateInfo ability_info = 7;
bool SceneWeaponInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
void SceneWeaponInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& SceneWeaponInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.SceneWeaponInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* SceneWeaponInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneWeaponInfo.ability_info)
  return ability_info_;
}
::proto::AbilitySyncStateInfo* SceneWeaponInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.SceneWeaponInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
void SceneWeaponInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneWeaponInfo.ability_info)
}

// map<uint32, uint32> affix_map = 8;
int SceneWeaponInfo::affix_map_size() const {
  return affix_map_.size();
}
void SceneWeaponInfo::clear_affix_map() {
  affix_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneWeaponInfo::affix_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneWeaponInfo.affix_map)
  return affix_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneWeaponInfo::mutable_affix_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneWeaponInfo.affix_map)
  return affix_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneReliquaryInfo::kItemIdFieldNumber;
const int SceneReliquaryInfo::kGuidFieldNumber;
const int SceneReliquaryInfo::kLevelFieldNumber;
const int SceneReliquaryInfo::kPromoteLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneReliquaryInfo::SceneReliquaryInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneReliquaryInfo)
}
SceneReliquaryInfo::SceneReliquaryInfo(const SceneReliquaryInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&promote_level_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(promote_level_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneReliquaryInfo)
}

void SceneReliquaryInfo::SharedCtor() {
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(promote_level_));
  _cached_size_ = 0;
}

SceneReliquaryInfo::~SceneReliquaryInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneReliquaryInfo)
  SharedDtor();
}

void SceneReliquaryInfo::SharedDtor() {
}

void SceneReliquaryInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneReliquaryInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneReliquaryInfo& SceneReliquaryInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneReliquaryInfo* SceneReliquaryInfo::New(::google::protobuf::Arena* arena) const {
  SceneReliquaryInfo* n = new SceneReliquaryInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneReliquaryInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneReliquaryInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&promote_level_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(promote_level_));
  _internal_metadata_.Clear();
}

bool SceneReliquaryInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneReliquaryInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 promote_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &promote_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneReliquaryInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneReliquaryInfo)
  return false;
#undef DO_
}

void SceneReliquaryInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneReliquaryInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->promote_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneReliquaryInfo)
}

::google::protobuf::uint8* SceneReliquaryInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneReliquaryInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->promote_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneReliquaryInfo)
  return target;
}

size_t SceneReliquaryInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneReliquaryInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 promote_level = 4;
  if (this->promote_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->promote_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneReliquaryInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneReliquaryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneReliquaryInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneReliquaryInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneReliquaryInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneReliquaryInfo)
    MergeFrom(*source);
  }
}

void SceneReliquaryInfo::MergeFrom(const SceneReliquaryInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneReliquaryInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.promote_level() != 0) {
    set_promote_level(from.promote_level());
  }
}

void SceneReliquaryInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneReliquaryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneReliquaryInfo::CopyFrom(const SceneReliquaryInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneReliquaryInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneReliquaryInfo::IsInitialized() const {
  return true;
}

void SceneReliquaryInfo::Swap(SceneReliquaryInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneReliquaryInfo::InternalSwap(SceneReliquaryInfo* other) {
  using std::swap;
  swap(guid_, other->guid_);
  swap(item_id_, other->item_id_);
  swap(level_, other->level_);
  swap(promote_level_, other->promote_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneReliquaryInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneReliquaryInfo

// uint32 item_id = 1;
void SceneReliquaryInfo::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 SceneReliquaryInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.item_id)
  return item_id_;
}
void SceneReliquaryInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.item_id)
}

// uint64 guid = 2;
void SceneReliquaryInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneReliquaryInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.guid)
  return guid_;
}
void SceneReliquaryInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.guid)
}

// uint32 level = 3;
void SceneReliquaryInfo::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 SceneReliquaryInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.level)
  return level_;
}
void SceneReliquaryInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.level)
}

// uint32 promote_level = 4;
void SceneReliquaryInfo::clear_promote_level() {
  promote_level_ = 0u;
}
::google::protobuf::uint32 SceneReliquaryInfo::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneReliquaryInfo.promote_level)
  return promote_level_;
}
void SceneReliquaryInfo::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneReliquaryInfo.promote_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerBuff::kServerBuffUidFieldNumber;
const int ServerBuff::kServerBuffIdFieldNumber;
const int ServerBuff::kServerBuffTypeFieldNumber;
const int ServerBuff::kInstancedModifierIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerBuff::ServerBuff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerBuff)
}
ServerBuff::ServerBuff(const ServerBuff& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_buff_uid_, &from.server_buff_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&instanced_modifier_id_) -
    reinterpret_cast<char*>(&server_buff_uid_)) + sizeof(instanced_modifier_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerBuff)
}

void ServerBuff::SharedCtor() {
  ::memset(&server_buff_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanced_modifier_id_) -
      reinterpret_cast<char*>(&server_buff_uid_)) + sizeof(instanced_modifier_id_));
  _cached_size_ = 0;
}

ServerBuff::~ServerBuff() {
  // @@protoc_insertion_point(destructor:proto.ServerBuff)
  SharedDtor();
}

void ServerBuff::SharedDtor() {
}

void ServerBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerBuff::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerBuff& ServerBuff::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerBuff* ServerBuff::New(::google::protobuf::Arena* arena) const {
  ServerBuff* n = new ServerBuff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerBuff::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerBuff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&server_buff_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instanced_modifier_id_) -
      reinterpret_cast<char*>(&server_buff_uid_)) + sizeof(instanced_modifier_id_));
  _internal_metadata_.Clear();
}

bool ServerBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerBuff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 server_buff_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_buff_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_buff_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_buff_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_buff_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_buff_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 instanced_modifier_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instanced_modifier_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerBuff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerBuff)
  return false;
#undef DO_
}

void ServerBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerBuff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_buff_uid = 1;
  if (this->server_buff_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_buff_uid(), output);
  }

  // uint32 server_buff_id = 2;
  if (this->server_buff_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_buff_id(), output);
  }

  // uint32 server_buff_type = 3;
  if (this->server_buff_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_buff_type(), output);
  }

  // uint32 instanced_modifier_id = 4;
  if (this->instanced_modifier_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->instanced_modifier_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerBuff)
}

::google::protobuf::uint8* ServerBuff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerBuff)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_buff_uid = 1;
  if (this->server_buff_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_buff_uid(), target);
  }

  // uint32 server_buff_id = 2;
  if (this->server_buff_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_buff_id(), target);
  }

  // uint32 server_buff_type = 3;
  if (this->server_buff_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_buff_type(), target);
  }

  // uint32 instanced_modifier_id = 4;
  if (this->instanced_modifier_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->instanced_modifier_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerBuff)
  return target;
}

size_t ServerBuff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerBuff)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 server_buff_uid = 1;
  if (this->server_buff_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_buff_uid());
  }

  // uint32 server_buff_id = 2;
  if (this->server_buff_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_buff_id());
  }

  // uint32 server_buff_type = 3;
  if (this->server_buff_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_buff_type());
  }

  // uint32 instanced_modifier_id = 4;
  if (this->instanced_modifier_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instanced_modifier_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerBuff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerBuff)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerBuff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerBuff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerBuff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerBuff)
    MergeFrom(*source);
  }
}

void ServerBuff::MergeFrom(const ServerBuff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerBuff)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_buff_uid() != 0) {
    set_server_buff_uid(from.server_buff_uid());
  }
  if (from.server_buff_id() != 0) {
    set_server_buff_id(from.server_buff_id());
  }
  if (from.server_buff_type() != 0) {
    set_server_buff_type(from.server_buff_type());
  }
  if (from.instanced_modifier_id() != 0) {
    set_instanced_modifier_id(from.instanced_modifier_id());
  }
}

void ServerBuff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerBuff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerBuff::CopyFrom(const ServerBuff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerBuff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerBuff::IsInitialized() const {
  return true;
}

void ServerBuff::Swap(ServerBuff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerBuff::InternalSwap(ServerBuff* other) {
  using std::swap;
  swap(server_buff_uid_, other->server_buff_uid_);
  swap(server_buff_id_, other->server_buff_id_);
  swap(server_buff_type_, other->server_buff_type_);
  swap(instanced_modifier_id_, other->instanced_modifier_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerBuff::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerBuff

// uint32 server_buff_uid = 1;
void ServerBuff::clear_server_buff_uid() {
  server_buff_uid_ = 0u;
}
::google::protobuf::uint32 ServerBuff::server_buff_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_uid)
  return server_buff_uid_;
}
void ServerBuff::set_server_buff_uid(::google::protobuf::uint32 value) {
  
  server_buff_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_uid)
}

// uint32 server_buff_id = 2;
void ServerBuff::clear_server_buff_id() {
  server_buff_id_ = 0u;
}
::google::protobuf::uint32 ServerBuff::server_buff_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_id)
  return server_buff_id_;
}
void ServerBuff::set_server_buff_id(::google::protobuf::uint32 value) {
  
  server_buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_id)
}

// uint32 server_buff_type = 3;
void ServerBuff::clear_server_buff_type() {
  server_buff_type_ = 0u;
}
::google::protobuf::uint32 ServerBuff::server_buff_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.server_buff_type)
  return server_buff_type_;
}
void ServerBuff::set_server_buff_type(::google::protobuf::uint32 value) {
  
  server_buff_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.server_buff_type)
}

// uint32 instanced_modifier_id = 4;
void ServerBuff::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
::google::protobuf::uint32 ServerBuff::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuff.instanced_modifier_id)
  return instanced_modifier_id_;
}
void ServerBuff::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuff.instanced_modifier_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneAvatarInfo::SceneAvatarInfo_SkillLevelMapEntry::SceneAvatarInfo_SkillLevelMapEntry() {}
SceneAvatarInfo::SceneAvatarInfo_SkillLevelMapEntry::SceneAvatarInfo_SkillLevelMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneAvatarInfo::SceneAvatarInfo_SkillLevelMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[42];
}
void SceneAvatarInfo::SceneAvatarInfo_SkillLevelMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneAvatarInfo::SceneAvatarInfo_SkillLevelMapEntry::MergeFrom(const SceneAvatarInfo_SkillLevelMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneAvatarInfo::SceneAvatarInfo_ProudSkillExtraLevelMapEntry::SceneAvatarInfo_ProudSkillExtraLevelMapEntry() {}
SceneAvatarInfo::SceneAvatarInfo_ProudSkillExtraLevelMapEntry::SceneAvatarInfo_ProudSkillExtraLevelMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneAvatarInfo::SceneAvatarInfo_ProudSkillExtraLevelMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[43];
}
void SceneAvatarInfo::SceneAvatarInfo_ProudSkillExtraLevelMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneAvatarInfo::SceneAvatarInfo_ProudSkillExtraLevelMapEntry::MergeFrom(const SceneAvatarInfo_ProudSkillExtraLevelMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneAvatarInfo::kUidFieldNumber;
const int SceneAvatarInfo::kAvatarIdFieldNumber;
const int SceneAvatarInfo::kGuidFieldNumber;
const int SceneAvatarInfo::kPeerIdFieldNumber;
const int SceneAvatarInfo::kEquipIdListFieldNumber;
const int SceneAvatarInfo::kSkillDepotIdFieldNumber;
const int SceneAvatarInfo::kTalentIdListFieldNumber;
const int SceneAvatarInfo::kWeaponFieldNumber;
const int SceneAvatarInfo::kReliquaryListFieldNumber;
const int SceneAvatarInfo::kBuffIdListFieldNumber;
const int SceneAvatarInfo::kCoreProudSkillLevelFieldNumber;
const int SceneAvatarInfo::kInherentProudSkillListFieldNumber;
const int SceneAvatarInfo::kSkillLevelMapFieldNumber;
const int SceneAvatarInfo::kProudSkillExtraLevelMapFieldNumber;
const int SceneAvatarInfo::kServerBuffListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAvatarInfo::SceneAvatarInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAvatarInfo)
}
SceneAvatarInfo::SceneAvatarInfo(const SceneAvatarInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      equip_id_list_(from.equip_id_list_),
      talent_id_list_(from.talent_id_list_),
      reliquary_list_(from.reliquary_list_),
      buff_id_list_(from.buff_id_list_),
      inherent_proud_skill_list_(from.inherent_proud_skill_list_),
      server_buff_list_(from.server_buff_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skill_level_map_.MergeFrom(from.skill_level_map_);
  proud_skill_extra_level_map_.MergeFrom(from.proud_skill_extra_level_map_);
  if (from.has_weapon()) {
    weapon_ = new ::proto::SceneWeaponInfo(*from.weapon_);
  } else {
    weapon_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&core_proud_skill_level_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(core_proud_skill_level_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneAvatarInfo)
}

void SceneAvatarInfo::SharedCtor() {
  ::memset(&weapon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&core_proud_skill_level_) -
      reinterpret_cast<char*>(&weapon_)) + sizeof(core_proud_skill_level_));
  _cached_size_ = 0;
}

SceneAvatarInfo::~SceneAvatarInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneAvatarInfo)
  SharedDtor();
}

void SceneAvatarInfo::SharedDtor() {
  if (this != internal_default_instance()) delete weapon_;
}

void SceneAvatarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAvatarInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAvatarInfo& SceneAvatarInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAvatarInfo* SceneAvatarInfo::New(::google::protobuf::Arena* arena) const {
  SceneAvatarInfo* n = new SceneAvatarInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAvatarInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equip_id_list_.Clear();
  talent_id_list_.Clear();
  reliquary_list_.Clear();
  buff_id_list_.Clear();
  inherent_proud_skill_list_.Clear();
  skill_level_map_.Clear();
  proud_skill_extra_level_map_.Clear();
  server_buff_list_.Clear();
  if (GetArenaNoVirtual() == NULL && weapon_ != NULL) {
    delete weapon_;
  }
  weapon_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&core_proud_skill_level_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(core_proud_skill_level_));
  _internal_metadata_.Clear();
}

bool SceneAvatarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAvatarInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 peer_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 equip_id_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_equip_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_equip_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skill_depot_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 talent_id_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_talent_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_talent_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneWeaponInfo weapon = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weapon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SceneReliquaryInfo reliquary_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_reliquary_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 buff_id_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buff_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_buff_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 core_proud_skill_level = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &core_proud_skill_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 inherent_proud_skill_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_inherent_proud_skill_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 98u, input, this->mutable_inherent_proud_skill_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> skill_level_map = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          SceneAvatarInfo_SkillLevelMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneAvatarInfo_SkillLevelMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&skill_level_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> proud_skill_extra_level_map = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          SceneAvatarInfo_ProudSkillExtraLevelMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneAvatarInfo_ProudSkillExtraLevelMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&proud_skill_extra_level_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ServerBuff server_buff_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_buff_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAvatarInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAvatarInfo)
  return false;
#undef DO_
}

void SceneAvatarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 avatar_id = 2;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->avatar_id(), output);
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->guid(), output);
  }

  // uint32 peer_id = 4;
  if (this->peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->peer_id(), output);
  }

  // repeated uint32 equip_id_list = 5;
  if (this->equip_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _equip_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->equip_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->equip_id_list(i), output);
  }

  // uint32 skill_depot_id = 6;
  if (this->skill_depot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->skill_depot_id(), output);
  }

  // repeated uint32 talent_id_list = 7;
  if (this->talent_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _talent_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->talent_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->talent_id_list(i), output);
  }

  // .proto.SceneWeaponInfo weapon = 8;
  if (this->has_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->weapon_, output);
  }

  // repeated .proto.SceneReliquaryInfo reliquary_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reliquary_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->reliquary_list(static_cast<int>(i)), output);
  }

  // repeated uint32 buff_id_list = 10;
  if (this->buff_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _buff_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->buff_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->buff_id_list(i), output);
  }

  // uint32 core_proud_skill_level = 11;
  if (this->core_proud_skill_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->core_proud_skill_level(), output);
  }

  // repeated uint32 inherent_proud_skill_list = 12;
  if (this->inherent_proud_skill_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _inherent_proud_skill_list_cached_byte_size_));
  }
  for (int i = 0, n = this->inherent_proud_skill_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->inherent_proud_skill_list(i), output);
  }

  // map<uint32, uint32> skill_level_map = 13;
  if (!this->skill_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->skill_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_level_map().begin();
          it != this->skill_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAvatarInfo_SkillLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAvatarInfo_SkillLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_level_map().begin();
          it != this->skill_level_map().end(); ++it) {
        entry.reset(skill_level_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    }
  }

  // map<uint32, uint32> proud_skill_extra_level_map = 14;
  if (!this->proud_skill_extra_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->proud_skill_extra_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->proud_skill_extra_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->proud_skill_extra_level_map().begin();
          it != this->proud_skill_extra_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAvatarInfo_ProudSkillExtraLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            14, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAvatarInfo_ProudSkillExtraLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->proud_skill_extra_level_map().begin();
          it != this->proud_skill_extra_level_map().end(); ++it) {
        entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            14, *entry, output);
      }
    }
  }

  // repeated .proto.ServerBuff server_buff_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_buff_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->server_buff_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAvatarInfo)
}

::google::protobuf::uint8* SceneAvatarInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 avatar_id = 2;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->avatar_id(), target);
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->guid(), target);
  }

  // uint32 peer_id = 4;
  if (this->peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->peer_id(), target);
  }

  // repeated uint32 equip_id_list = 5;
  if (this->equip_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _equip_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->equip_id_list_, target);
  }

  // uint32 skill_depot_id = 6;
  if (this->skill_depot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->skill_depot_id(), target);
  }

  // repeated uint32 talent_id_list = 7;
  if (this->talent_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _talent_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->talent_id_list_, target);
  }

  // .proto.SceneWeaponInfo weapon = 8;
  if (this->has_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->weapon_, deterministic, target);
  }

  // repeated .proto.SceneReliquaryInfo reliquary_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->reliquary_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->reliquary_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 buff_id_list = 10;
  if (this->buff_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _buff_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->buff_id_list_, target);
  }

  // uint32 core_proud_skill_level = 11;
  if (this->core_proud_skill_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->core_proud_skill_level(), target);
  }

  // repeated uint32 inherent_proud_skill_list = 12;
  if (this->inherent_proud_skill_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _inherent_proud_skill_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->inherent_proud_skill_list_, target);
  }

  // map<uint32, uint32> skill_level_map = 13;
  if (!this->skill_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->skill_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_level_map().begin();
          it != this->skill_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAvatarInfo_SkillLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAvatarInfo_SkillLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_level_map().begin();
          it != this->skill_level_map().end(); ++it) {
        entry.reset(skill_level_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint32> proud_skill_extra_level_map = 14;
  if (!this->proud_skill_extra_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->proud_skill_extra_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->proud_skill_extra_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->proud_skill_extra_level_map().begin();
          it != this->proud_skill_extra_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAvatarInfo_ProudSkillExtraLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       14, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAvatarInfo_ProudSkillExtraLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->proud_skill_extra_level_map().begin();
          it != this->proud_skill_extra_level_map().end(); ++it) {
        entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       14, *entry, deterministic, target);
;
      }
    }
  }

  // repeated .proto.ServerBuff server_buff_list = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_buff_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, this->server_buff_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAvatarInfo)
  return target;
}

size_t SceneAvatarInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAvatarInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 equip_id_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->equip_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equip_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 talent_id_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->talent_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _talent_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.SceneReliquaryInfo reliquary_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->reliquary_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->reliquary_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 buff_id_list = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->buff_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _buff_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 inherent_proud_skill_list = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->inherent_proud_skill_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _inherent_proud_skill_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, uint32> skill_level_map = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->skill_level_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneAvatarInfo_SkillLevelMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->skill_level_map().begin();
        it != this->skill_level_map().end(); ++it) {
      entry.reset(skill_level_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> proud_skill_extra_level_map = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->proud_skill_extra_level_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneAvatarInfo_ProudSkillExtraLevelMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->proud_skill_extra_level_map().begin();
        it != this->proud_skill_extra_level_map().end(); ++it) {
      entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .proto.ServerBuff server_buff_list = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->server_buff_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_buff_list(static_cast<int>(i)));
    }
  }

  // .proto.SceneWeaponInfo weapon = 8;
  if (this->has_weapon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->weapon_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 avatar_id = 2;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint32 peer_id = 4;
  if (this->peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->peer_id());
  }

  // uint32 skill_depot_id = 6;
  if (this->skill_depot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_depot_id());
  }

  // uint32 core_proud_skill_level = 11;
  if (this->core_proud_skill_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->core_proud_skill_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAvatarInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAvatarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAvatarInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAvatarInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAvatarInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAvatarInfo)
    MergeFrom(*source);
  }
}

void SceneAvatarInfo::MergeFrom(const SceneAvatarInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAvatarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equip_id_list_.MergeFrom(from.equip_id_list_);
  talent_id_list_.MergeFrom(from.talent_id_list_);
  reliquary_list_.MergeFrom(from.reliquary_list_);
  buff_id_list_.MergeFrom(from.buff_id_list_);
  inherent_proud_skill_list_.MergeFrom(from.inherent_proud_skill_list_);
  skill_level_map_.MergeFrom(from.skill_level_map_);
  proud_skill_extra_level_map_.MergeFrom(from.proud_skill_extra_level_map_);
  server_buff_list_.MergeFrom(from.server_buff_list_);
  if (from.has_weapon()) {
    mutable_weapon()->::proto::SceneWeaponInfo::MergeFrom(from.weapon());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.peer_id() != 0) {
    set_peer_id(from.peer_id());
  }
  if (from.skill_depot_id() != 0) {
    set_skill_depot_id(from.skill_depot_id());
  }
  if (from.core_proud_skill_level() != 0) {
    set_core_proud_skill_level(from.core_proud_skill_level());
  }
}

void SceneAvatarInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAvatarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAvatarInfo::CopyFrom(const SceneAvatarInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAvatarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAvatarInfo::IsInitialized() const {
  return true;
}

void SceneAvatarInfo::Swap(SceneAvatarInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAvatarInfo::InternalSwap(SceneAvatarInfo* other) {
  using std::swap;
  equip_id_list_.InternalSwap(&other->equip_id_list_);
  talent_id_list_.InternalSwap(&other->talent_id_list_);
  reliquary_list_.InternalSwap(&other->reliquary_list_);
  buff_id_list_.InternalSwap(&other->buff_id_list_);
  inherent_proud_skill_list_.InternalSwap(&other->inherent_proud_skill_list_);
  skill_level_map_.Swap(&other->skill_level_map_);
  proud_skill_extra_level_map_.Swap(&other->proud_skill_extra_level_map_);
  server_buff_list_.InternalSwap(&other->server_buff_list_);
  swap(weapon_, other->weapon_);
  swap(uid_, other->uid_);
  swap(avatar_id_, other->avatar_id_);
  swap(guid_, other->guid_);
  swap(peer_id_, other->peer_id_);
  swap(skill_depot_id_, other->skill_depot_id_);
  swap(core_proud_skill_level_, other->core_proud_skill_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAvatarInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAvatarInfo

// uint32 uid = 1;
void SceneAvatarInfo::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 SceneAvatarInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.uid)
  return uid_;
}
void SceneAvatarInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.uid)
}

// uint32 avatar_id = 2;
void SceneAvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SceneAvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.avatar_id)
  return avatar_id_;
}
void SceneAvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.avatar_id)
}

// uint64 guid = 3;
void SceneAvatarInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneAvatarInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.guid)
  return guid_;
}
void SceneAvatarInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.guid)
}

// uint32 peer_id = 4;
void SceneAvatarInfo::clear_peer_id() {
  peer_id_ = 0u;
}
::google::protobuf::uint32 SceneAvatarInfo::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.peer_id)
  return peer_id_;
}
void SceneAvatarInfo::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.peer_id)
}

// repeated uint32 equip_id_list = 5;
int SceneAvatarInfo::equip_id_list_size() const {
  return equip_id_list_.size();
}
void SceneAvatarInfo::clear_equip_id_list() {
  equip_id_list_.Clear();
}
::google::protobuf::uint32 SceneAvatarInfo::equip_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.equip_id_list)
  return equip_id_list_.Get(index);
}
void SceneAvatarInfo::set_equip_id_list(int index, ::google::protobuf::uint32 value) {
  equip_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.equip_id_list)
}
void SceneAvatarInfo::add_equip_id_list(::google::protobuf::uint32 value) {
  equip_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.equip_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::equip_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.equip_id_list)
  return equip_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_equip_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.equip_id_list)
  return &equip_id_list_;
}

// uint32 skill_depot_id = 6;
void SceneAvatarInfo::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
::google::protobuf::uint32 SceneAvatarInfo::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.skill_depot_id)
  return skill_depot_id_;
}
void SceneAvatarInfo::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.skill_depot_id)
}

// repeated uint32 talent_id_list = 7;
int SceneAvatarInfo::talent_id_list_size() const {
  return talent_id_list_.size();
}
void SceneAvatarInfo::clear_talent_id_list() {
  talent_id_list_.Clear();
}
::google::protobuf::uint32 SceneAvatarInfo::talent_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.talent_id_list)
  return talent_id_list_.Get(index);
}
void SceneAvatarInfo::set_talent_id_list(int index, ::google::protobuf::uint32 value) {
  talent_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.talent_id_list)
}
void SceneAvatarInfo::add_talent_id_list(::google::protobuf::uint32 value) {
  talent_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.talent_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::talent_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.talent_id_list)
  return talent_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_talent_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.talent_id_list)
  return &talent_id_list_;
}

// .proto.SceneWeaponInfo weapon = 8;
bool SceneAvatarInfo::has_weapon() const {
  return this != internal_default_instance() && weapon_ != NULL;
}
void SceneAvatarInfo::clear_weapon() {
  if (GetArenaNoVirtual() == NULL && weapon_ != NULL) delete weapon_;
  weapon_ = NULL;
}
const ::proto::SceneWeaponInfo& SceneAvatarInfo::weapon() const {
  const ::proto::SceneWeaponInfo* p = weapon_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.weapon)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneWeaponInfo*>(
      &::proto::_SceneWeaponInfo_default_instance_);
}
::proto::SceneWeaponInfo* SceneAvatarInfo::mutable_weapon() {
  
  if (weapon_ == NULL) {
    weapon_ = new ::proto::SceneWeaponInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.weapon)
  return weapon_;
}
::proto::SceneWeaponInfo* SceneAvatarInfo::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarInfo.weapon)
  
  ::proto::SceneWeaponInfo* temp = weapon_;
  weapon_ = NULL;
  return temp;
}
void SceneAvatarInfo::set_allocated_weapon(::proto::SceneWeaponInfo* weapon) {
  delete weapon_;
  weapon_ = weapon;
  if (weapon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarInfo.weapon)
}

// repeated .proto.SceneReliquaryInfo reliquary_list = 9;
int SceneAvatarInfo::reliquary_list_size() const {
  return reliquary_list_.size();
}
void SceneAvatarInfo::clear_reliquary_list() {
  reliquary_list_.Clear();
}
const ::proto::SceneReliquaryInfo& SceneAvatarInfo::reliquary_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Get(index);
}
::proto::SceneReliquaryInfo* SceneAvatarInfo::mutable_reliquary_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Mutable(index);
}
::proto::SceneReliquaryInfo* SceneAvatarInfo::add_reliquary_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >*
SceneAvatarInfo::mutable_reliquary_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.reliquary_list)
  return &reliquary_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneReliquaryInfo >&
SceneAvatarInfo::reliquary_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.reliquary_list)
  return reliquary_list_;
}

// repeated uint32 buff_id_list = 10;
int SceneAvatarInfo::buff_id_list_size() const {
  return buff_id_list_.size();
}
void SceneAvatarInfo::clear_buff_id_list() {
  buff_id_list_.Clear();
}
::google::protobuf::uint32 SceneAvatarInfo::buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.buff_id_list)
  return buff_id_list_.Get(index);
}
void SceneAvatarInfo::set_buff_id_list(int index, ::google::protobuf::uint32 value) {
  buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.buff_id_list)
}
void SceneAvatarInfo::add_buff_id_list(::google::protobuf::uint32 value) {
  buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.buff_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.buff_id_list)
  return buff_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.buff_id_list)
  return &buff_id_list_;
}

// uint32 core_proud_skill_level = 11;
void SceneAvatarInfo::clear_core_proud_skill_level() {
  core_proud_skill_level_ = 0u;
}
::google::protobuf::uint32 SceneAvatarInfo::core_proud_skill_level() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.core_proud_skill_level)
  return core_proud_skill_level_;
}
void SceneAvatarInfo::set_core_proud_skill_level(::google::protobuf::uint32 value) {
  
  core_proud_skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.core_proud_skill_level)
}

// repeated uint32 inherent_proud_skill_list = 12;
int SceneAvatarInfo::inherent_proud_skill_list_size() const {
  return inherent_proud_skill_list_.size();
}
void SceneAvatarInfo::clear_inherent_proud_skill_list() {
  inherent_proud_skill_list_.Clear();
}
::google::protobuf::uint32 SceneAvatarInfo::inherent_proud_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_.Get(index);
}
void SceneAvatarInfo::set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAvatarInfo.inherent_proud_skill_list)
}
void SceneAvatarInfo::add_inherent_proud_skill_list(::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.inherent_proud_skill_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAvatarInfo::inherent_proud_skill_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_inherent_proud_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.inherent_proud_skill_list)
  return &inherent_proud_skill_list_;
}

// map<uint32, uint32> skill_level_map = 13;
int SceneAvatarInfo::skill_level_map_size() const {
  return skill_level_map_.size();
}
void SceneAvatarInfo::clear_skill_level_map() {
  skill_level_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneAvatarInfo::skill_level_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAvatarInfo.skill_level_map)
  return skill_level_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_skill_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAvatarInfo.skill_level_map)
  return skill_level_map_.MutableMap();
}

// map<uint32, uint32> proud_skill_extra_level_map = 14;
int SceneAvatarInfo::proud_skill_extra_level_map_size() const {
  return proud_skill_extra_level_map_.size();
}
void SceneAvatarInfo::clear_proud_skill_extra_level_map() {
  proud_skill_extra_level_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneAvatarInfo::proud_skill_extra_level_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneAvatarInfo::mutable_proud_skill_extra_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.MutableMap();
}

// repeated .proto.ServerBuff server_buff_list = 15;
int SceneAvatarInfo::server_buff_list_size() const {
  return server_buff_list_.size();
}
void SceneAvatarInfo::clear_server_buff_list() {
  server_buff_list_.Clear();
}
const ::proto::ServerBuff& SceneAvatarInfo::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Get(index);
}
::proto::ServerBuff* SceneAvatarInfo::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Mutable(index);
}
::proto::ServerBuff* SceneAvatarInfo::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
SceneAvatarInfo::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAvatarInfo.server_buff_list)
  return &server_buff_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
SceneAvatarInfo::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAvatarInfo.server_buff_list)
  return server_buff_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneMonsterInfo::SceneMonsterInfo_SummonTagMapEntry::SceneMonsterInfo_SummonTagMapEntry() {}
SceneMonsterInfo::SceneMonsterInfo_SummonTagMapEntry::SceneMonsterInfo_SummonTagMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneMonsterInfo::SceneMonsterInfo_SummonTagMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[45];
}
void SceneMonsterInfo::SceneMonsterInfo_SummonTagMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneMonsterInfo::SceneMonsterInfo_SummonTagMapEntry::MergeFrom(const SceneMonsterInfo_SummonTagMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneMonsterInfo::kMonsterIdFieldNumber;
const int SceneMonsterInfo::kGroupIdFieldNumber;
const int SceneMonsterInfo::kConfigIdFieldNumber;
const int SceneMonsterInfo::kWeaponListFieldNumber;
const int SceneMonsterInfo::kAuthorityPeerIdFieldNumber;
const int SceneMonsterInfo::kAffixListFieldNumber;
const int SceneMonsterInfo::kIsEliteFieldNumber;
const int SceneMonsterInfo::kOwnerEntityIdFieldNumber;
const int SceneMonsterInfo::kSummonedTagFieldNumber;
const int SceneMonsterInfo::kSummonTagMapFieldNumber;
const int SceneMonsterInfo::kPoseIdFieldNumber;
const int SceneMonsterInfo::kBornTypeFieldNumber;
const int SceneMonsterInfo::kBlockIdFieldNumber;
const int SceneMonsterInfo::kMarkFlagFieldNumber;
const int SceneMonsterInfo::kTitleIdFieldNumber;
const int SceneMonsterInfo::kSpecialNameIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneMonsterInfo::SceneMonsterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneMonsterInfo)
}
SceneMonsterInfo::SceneMonsterInfo(const SceneMonsterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      weapon_list_(from.weapon_list_),
      affix_list_(from.affix_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  summon_tag_map_.MergeFrom(from.summon_tag_map_);
  ::memcpy(&monster_id_, &from.monster_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&special_name_id_) -
    reinterpret_cast<char*>(&monster_id_)) + sizeof(special_name_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneMonsterInfo)
}

void SceneMonsterInfo::SharedCtor() {
  ::memset(&monster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&special_name_id_) -
      reinterpret_cast<char*>(&monster_id_)) + sizeof(special_name_id_));
  _cached_size_ = 0;
}

SceneMonsterInfo::~SceneMonsterInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneMonsterInfo)
  SharedDtor();
}

void SceneMonsterInfo::SharedDtor() {
}

void SceneMonsterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneMonsterInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneMonsterInfo& SceneMonsterInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneMonsterInfo* SceneMonsterInfo::New(::google::protobuf::Arena* arena) const {
  SceneMonsterInfo* n = new SceneMonsterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneMonsterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneMonsterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weapon_list_.Clear();
  affix_list_.Clear();
  summon_tag_map_.Clear();
  ::memset(&monster_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&special_name_id_) -
      reinterpret_cast<char*>(&monster_id_)) + sizeof(special_name_id_));
  _internal_metadata_.Clear();
}

bool SceneMonsterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneMonsterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 monster_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SceneWeaponInfo weapon_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_weapon_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 authority_peer_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authority_peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 affix_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_affix_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_affix_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_elite = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_elite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 owner_entity_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 summoned_tag = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &summoned_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> summon_tag_map = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          SceneMonsterInfo_SummonTagMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneMonsterInfo_SummonTagMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&summon_tag_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pose_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pose_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MonsterBornType born_type = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_born_type(static_cast< ::proto::MonsterBornType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 block_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mark_flag = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mark_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 title_id = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &title_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 special_name_id = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &special_name_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneMonsterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneMonsterInfo)
  return false;
#undef DO_
}

void SceneMonsterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneMonsterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_id = 1;
  if (this->monster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->monster_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->config_id(), output);
  }

  // repeated .proto.SceneWeaponInfo weapon_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->weapon_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->weapon_list(static_cast<int>(i)), output);
  }

  // uint32 authority_peer_id = 5;
  if (this->authority_peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->authority_peer_id(), output);
  }

  // repeated uint32 affix_list = 6;
  if (this->affix_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _affix_list_cached_byte_size_));
  }
  for (int i = 0, n = this->affix_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->affix_list(i), output);
  }

  // bool is_elite = 7;
  if (this->is_elite() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_elite(), output);
  }

  // uint32 owner_entity_id = 8;
  if (this->owner_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->owner_entity_id(), output);
  }

  // uint32 summoned_tag = 9;
  if (this->summoned_tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->summoned_tag(), output);
  }

  // map<uint32, uint32> summon_tag_map = 10;
  if (!this->summon_tag_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->summon_tag_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->summon_tag_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->summon_tag_map().begin();
          it != this->summon_tag_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneMonsterInfo_SummonTagMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(summon_tag_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneMonsterInfo_SummonTagMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->summon_tag_map().begin();
          it != this->summon_tag_map().end(); ++it) {
        entry.reset(summon_tag_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
      }
    }
  }

  // uint32 pose_id = 11;
  if (this->pose_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->pose_id(), output);
  }

  // .proto.MonsterBornType born_type = 12;
  if (this->born_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->born_type(), output);
  }

  // uint32 block_id = 13;
  if (this->block_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->block_id(), output);
  }

  // uint32 mark_flag = 14;
  if (this->mark_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->mark_flag(), output);
  }

  // uint32 title_id = 15;
  if (this->title_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->title_id(), output);
  }

  // uint32 special_name_id = 16;
  if (this->special_name_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->special_name_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneMonsterInfo)
}

::google::protobuf::uint8* SceneMonsterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneMonsterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_id = 1;
  if (this->monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->monster_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->config_id(), target);
  }

  // repeated .proto.SceneWeaponInfo weapon_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->weapon_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->weapon_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 authority_peer_id = 5;
  if (this->authority_peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->authority_peer_id(), target);
  }

  // repeated uint32 affix_list = 6;
  if (this->affix_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _affix_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->affix_list_, target);
  }

  // bool is_elite = 7;
  if (this->is_elite() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_elite(), target);
  }

  // uint32 owner_entity_id = 8;
  if (this->owner_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->owner_entity_id(), target);
  }

  // uint32 summoned_tag = 9;
  if (this->summoned_tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->summoned_tag(), target);
  }

  // map<uint32, uint32> summon_tag_map = 10;
  if (!this->summon_tag_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->summon_tag_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->summon_tag_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->summon_tag_map().begin();
          it != this->summon_tag_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneMonsterInfo_SummonTagMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(summon_tag_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneMonsterInfo_SummonTagMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->summon_tag_map().begin();
          it != this->summon_tag_map().end(); ++it) {
        entry.reset(summon_tag_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 pose_id = 11;
  if (this->pose_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->pose_id(), target);
  }

  // .proto.MonsterBornType born_type = 12;
  if (this->born_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->born_type(), target);
  }

  // uint32 block_id = 13;
  if (this->block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->block_id(), target);
  }

  // uint32 mark_flag = 14;
  if (this->mark_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->mark_flag(), target);
  }

  // uint32 title_id = 15;
  if (this->title_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->title_id(), target);
  }

  // uint32 special_name_id = 16;
  if (this->special_name_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->special_name_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneMonsterInfo)
  return target;
}

size_t SceneMonsterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneMonsterInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SceneWeaponInfo weapon_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->weapon_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->weapon_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 affix_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->affix_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _affix_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, uint32> summon_tag_map = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->summon_tag_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneMonsterInfo_SummonTagMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->summon_tag_map().begin();
        it != this->summon_tag_map().end(); ++it) {
      entry.reset(summon_tag_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 monster_id = 1;
  if (this->monster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 authority_peer_id = 5;
  if (this->authority_peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authority_peer_id());
  }

  // bool is_elite = 7;
  if (this->is_elite() != 0) {
    total_size += 1 + 1;
  }

  // uint32 owner_entity_id = 8;
  if (this->owner_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_entity_id());
  }

  // uint32 summoned_tag = 9;
  if (this->summoned_tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->summoned_tag());
  }

  // uint32 pose_id = 11;
  if (this->pose_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pose_id());
  }

  // .proto.MonsterBornType born_type = 12;
  if (this->born_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->born_type());
  }

  // uint32 block_id = 13;
  if (this->block_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_id());
  }

  // uint32 mark_flag = 14;
  if (this->mark_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mark_flag());
  }

  // uint32 title_id = 15;
  if (this->title_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->title_id());
  }

  // uint32 special_name_id = 16;
  if (this->special_name_id() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->special_name_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneMonsterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneMonsterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneMonsterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneMonsterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneMonsterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneMonsterInfo)
    MergeFrom(*source);
  }
}

void SceneMonsterInfo::MergeFrom(const SceneMonsterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneMonsterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weapon_list_.MergeFrom(from.weapon_list_);
  affix_list_.MergeFrom(from.affix_list_);
  summon_tag_map_.MergeFrom(from.summon_tag_map_);
  if (from.monster_id() != 0) {
    set_monster_id(from.monster_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.authority_peer_id() != 0) {
    set_authority_peer_id(from.authority_peer_id());
  }
  if (from.is_elite() != 0) {
    set_is_elite(from.is_elite());
  }
  if (from.owner_entity_id() != 0) {
    set_owner_entity_id(from.owner_entity_id());
  }
  if (from.summoned_tag() != 0) {
    set_summoned_tag(from.summoned_tag());
  }
  if (from.pose_id() != 0) {
    set_pose_id(from.pose_id());
  }
  if (from.born_type() != 0) {
    set_born_type(from.born_type());
  }
  if (from.block_id() != 0) {
    set_block_id(from.block_id());
  }
  if (from.mark_flag() != 0) {
    set_mark_flag(from.mark_flag());
  }
  if (from.title_id() != 0) {
    set_title_id(from.title_id());
  }
  if (from.special_name_id() != 0) {
    set_special_name_id(from.special_name_id());
  }
}

void SceneMonsterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneMonsterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneMonsterInfo::CopyFrom(const SceneMonsterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneMonsterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneMonsterInfo::IsInitialized() const {
  return true;
}

void SceneMonsterInfo::Swap(SceneMonsterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneMonsterInfo::InternalSwap(SceneMonsterInfo* other) {
  using std::swap;
  weapon_list_.InternalSwap(&other->weapon_list_);
  affix_list_.InternalSwap(&other->affix_list_);
  summon_tag_map_.Swap(&other->summon_tag_map_);
  swap(monster_id_, other->monster_id_);
  swap(group_id_, other->group_id_);
  swap(config_id_, other->config_id_);
  swap(authority_peer_id_, other->authority_peer_id_);
  swap(is_elite_, other->is_elite_);
  swap(owner_entity_id_, other->owner_entity_id_);
  swap(summoned_tag_, other->summoned_tag_);
  swap(pose_id_, other->pose_id_);
  swap(born_type_, other->born_type_);
  swap(block_id_, other->block_id_);
  swap(mark_flag_, other->mark_flag_);
  swap(title_id_, other->title_id_);
  swap(special_name_id_, other->special_name_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneMonsterInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneMonsterInfo

// uint32 monster_id = 1;
void SceneMonsterInfo::clear_monster_id() {
  monster_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.monster_id)
  return monster_id_;
}
void SceneMonsterInfo::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.monster_id)
}

// uint32 group_id = 2;
void SceneMonsterInfo::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::group_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.group_id)
  return group_id_;
}
void SceneMonsterInfo::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.group_id)
}

// uint32 config_id = 3;
void SceneMonsterInfo::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.config_id)
  return config_id_;
}
void SceneMonsterInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.config_id)
}

// repeated .proto.SceneWeaponInfo weapon_list = 4;
int SceneMonsterInfo::weapon_list_size() const {
  return weapon_list_.size();
}
void SceneMonsterInfo::clear_weapon_list() {
  weapon_list_.Clear();
}
const ::proto::SceneWeaponInfo& SceneMonsterInfo::weapon_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Get(index);
}
::proto::SceneWeaponInfo* SceneMonsterInfo::mutable_weapon_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Mutable(index);
}
::proto::SceneWeaponInfo* SceneMonsterInfo::add_weapon_list() {
  // @@protoc_insertion_point(field_add:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >*
SceneMonsterInfo::mutable_weapon_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneMonsterInfo.weapon_list)
  return &weapon_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneWeaponInfo >&
SceneMonsterInfo::weapon_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneMonsterInfo.weapon_list)
  return weapon_list_;
}

// uint32 authority_peer_id = 5;
void SceneMonsterInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.authority_peer_id)
  return authority_peer_id_;
}
void SceneMonsterInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.authority_peer_id)
}

// repeated uint32 affix_list = 6;
int SceneMonsterInfo::affix_list_size() const {
  return affix_list_.size();
}
void SceneMonsterInfo::clear_affix_list() {
  affix_list_.Clear();
}
::google::protobuf::uint32 SceneMonsterInfo::affix_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.affix_list)
  return affix_list_.Get(index);
}
void SceneMonsterInfo::set_affix_list(int index, ::google::protobuf::uint32 value) {
  affix_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.affix_list)
}
void SceneMonsterInfo::add_affix_list(::google::protobuf::uint32 value) {
  affix_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneMonsterInfo.affix_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneMonsterInfo::affix_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneMonsterInfo.affix_list)
  return affix_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneMonsterInfo::mutable_affix_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneMonsterInfo.affix_list)
  return &affix_list_;
}

// bool is_elite = 7;
void SceneMonsterInfo::clear_is_elite() {
  is_elite_ = false;
}
bool SceneMonsterInfo::is_elite() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.is_elite)
  return is_elite_;
}
void SceneMonsterInfo::set_is_elite(bool value) {
  
  is_elite_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.is_elite)
}

// uint32 owner_entity_id = 8;
void SceneMonsterInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.owner_entity_id)
  return owner_entity_id_;
}
void SceneMonsterInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.owner_entity_id)
}

// uint32 summoned_tag = 9;
void SceneMonsterInfo::clear_summoned_tag() {
  summoned_tag_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::summoned_tag() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.summoned_tag)
  return summoned_tag_;
}
void SceneMonsterInfo::set_summoned_tag(::google::protobuf::uint32 value) {
  
  summoned_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.summoned_tag)
}

// map<uint32, uint32> summon_tag_map = 10;
int SceneMonsterInfo::summon_tag_map_size() const {
  return summon_tag_map_.size();
}
void SceneMonsterInfo::clear_summon_tag_map() {
  summon_tag_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneMonsterInfo::summon_tag_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneMonsterInfo.summon_tag_map)
  return summon_tag_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneMonsterInfo::mutable_summon_tag_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneMonsterInfo.summon_tag_map)
  return summon_tag_map_.MutableMap();
}

// uint32 pose_id = 11;
void SceneMonsterInfo::clear_pose_id() {
  pose_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::pose_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.pose_id)
  return pose_id_;
}
void SceneMonsterInfo::set_pose_id(::google::protobuf::uint32 value) {
  
  pose_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.pose_id)
}

// .proto.MonsterBornType born_type = 12;
void SceneMonsterInfo::clear_born_type() {
  born_type_ = 0;
}
::proto::MonsterBornType SceneMonsterInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.born_type)
  return static_cast< ::proto::MonsterBornType >(born_type_);
}
void SceneMonsterInfo::set_born_type(::proto::MonsterBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.born_type)
}

// uint32 block_id = 13;
void SceneMonsterInfo::clear_block_id() {
  block_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.block_id)
  return block_id_;
}
void SceneMonsterInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.block_id)
}

// uint32 mark_flag = 14;
void SceneMonsterInfo::clear_mark_flag() {
  mark_flag_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::mark_flag() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.mark_flag)
  return mark_flag_;
}
void SceneMonsterInfo::set_mark_flag(::google::protobuf::uint32 value) {
  
  mark_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.mark_flag)
}

// uint32 title_id = 15;
void SceneMonsterInfo::clear_title_id() {
  title_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::title_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.title_id)
  return title_id_;
}
void SceneMonsterInfo::set_title_id(::google::protobuf::uint32 value) {
  
  title_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.title_id)
}

// uint32 special_name_id = 16;
void SceneMonsterInfo::clear_special_name_id() {
  special_name_id_ = 0u;
}
::google::protobuf::uint32 SceneMonsterInfo::special_name_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneMonsterInfo.special_name_id)
  return special_name_id_;
}
void SceneMonsterInfo::set_special_name_id(::google::protobuf::uint32 value) {
  
  special_name_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneMonsterInfo.special_name_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneNpcInfo::kNpcIdFieldNumber;
const int SceneNpcInfo::kRoomIdFieldNumber;
const int SceneNpcInfo::kParentQuestIdFieldNumber;
const int SceneNpcInfo::kBlockIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneNpcInfo::SceneNpcInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneNpcInfo)
}
SceneNpcInfo::SceneNpcInfo(const SceneNpcInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&npc_id_, &from.npc_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_id_) -
    reinterpret_cast<char*>(&npc_id_)) + sizeof(block_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneNpcInfo)
}

void SceneNpcInfo::SharedCtor() {
  ::memset(&npc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_id_) -
      reinterpret_cast<char*>(&npc_id_)) + sizeof(block_id_));
  _cached_size_ = 0;
}

SceneNpcInfo::~SceneNpcInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneNpcInfo)
  SharedDtor();
}

void SceneNpcInfo::SharedDtor() {
}

void SceneNpcInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneNpcInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneNpcInfo& SceneNpcInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneNpcInfo* SceneNpcInfo::New(::google::protobuf::Arena* arena) const {
  SceneNpcInfo* n = new SceneNpcInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneNpcInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneNpcInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&npc_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_id_) -
      reinterpret_cast<char*>(&npc_id_)) + sizeof(block_id_));
  _internal_metadata_.Clear();
}

bool SceneNpcInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneNpcInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 npc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 room_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 block_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneNpcInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneNpcInfo)
  return false;
#undef DO_
}

void SceneNpcInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneNpcInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->npc_id(), output);
  }

  // uint32 room_id = 2;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_id(), output);
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->parent_quest_id(), output);
  }

  // uint32 block_id = 4;
  if (this->block_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->block_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneNpcInfo)
}

::google::protobuf::uint8* SceneNpcInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneNpcInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->npc_id(), target);
  }

  // uint32 room_id = 2;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_id(), target);
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->parent_quest_id(), target);
  }

  // uint32 block_id = 4;
  if (this->block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->block_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneNpcInfo)
  return target;
}

size_t SceneNpcInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneNpcInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npc_id());
  }

  // uint32 room_id = 2;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 parent_quest_id = 3;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 block_id = 4;
  if (this->block_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneNpcInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneNpcInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneNpcInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneNpcInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneNpcInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneNpcInfo)
    MergeFrom(*source);
  }
}

void SceneNpcInfo::MergeFrom(const SceneNpcInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneNpcInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.npc_id() != 0) {
    set_npc_id(from.npc_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.block_id() != 0) {
    set_block_id(from.block_id());
  }
}

void SceneNpcInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneNpcInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneNpcInfo::CopyFrom(const SceneNpcInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneNpcInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneNpcInfo::IsInitialized() const {
  return true;
}

void SceneNpcInfo::Swap(SceneNpcInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneNpcInfo::InternalSwap(SceneNpcInfo* other) {
  using std::swap;
  swap(npc_id_, other->npc_id_);
  swap(room_id_, other->room_id_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(block_id_, other->block_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneNpcInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneNpcInfo

// uint32 npc_id = 1;
void SceneNpcInfo::clear_npc_id() {
  npc_id_ = 0u;
}
::google::protobuf::uint32 SceneNpcInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.npc_id)
  return npc_id_;
}
void SceneNpcInfo::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.npc_id)
}

// uint32 room_id = 2;
void SceneNpcInfo::clear_room_id() {
  room_id_ = 0u;
}
::google::protobuf::uint32 SceneNpcInfo::room_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.room_id)
  return room_id_;
}
void SceneNpcInfo::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.room_id)
}

// uint32 parent_quest_id = 3;
void SceneNpcInfo::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 SceneNpcInfo::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.parent_quest_id)
  return parent_quest_id_;
}
void SceneNpcInfo::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.parent_quest_id)
}

// uint32 block_id = 4;
void SceneNpcInfo::clear_block_id() {
  block_id_ = 0u;
}
::google::protobuf::uint32 SceneNpcInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneNpcInfo.block_id)
  return block_id_;
}
void SceneNpcInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneNpcInfo.block_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorktopInfo::kOptionListFieldNumber;
const int WorktopInfo::kIsGuestCanOperateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorktopInfo::WorktopInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorktopInfo)
}
WorktopInfo::WorktopInfo(const WorktopInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      option_list_(from.option_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_guest_can_operate_ = from.is_guest_can_operate_;
  // @@protoc_insertion_point(copy_constructor:proto.WorktopInfo)
}

void WorktopInfo::SharedCtor() {
  is_guest_can_operate_ = false;
  _cached_size_ = 0;
}

WorktopInfo::~WorktopInfo() {
  // @@protoc_insertion_point(destructor:proto.WorktopInfo)
  SharedDtor();
}

void WorktopInfo::SharedDtor() {
}

void WorktopInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorktopInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorktopInfo& WorktopInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorktopInfo* WorktopInfo::New(::google::protobuf::Arena* arena) const {
  WorktopInfo* n = new WorktopInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorktopInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorktopInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  option_list_.Clear();
  is_guest_can_operate_ = false;
  _internal_metadata_.Clear();
}

bool WorktopInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorktopInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 option_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_option_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_option_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_guest_can_operate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_guest_can_operate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorktopInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorktopInfo)
  return false;
#undef DO_
}

void WorktopInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorktopInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 option_list = 1;
  if (this->option_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _option_list_cached_byte_size_));
  }
  for (int i = 0, n = this->option_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->option_list(i), output);
  }

  // bool is_guest_can_operate = 2;
  if (this->is_guest_can_operate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_guest_can_operate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorktopInfo)
}

::google::protobuf::uint8* WorktopInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorktopInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 option_list = 1;
  if (this->option_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _option_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->option_list_, target);
  }

  // bool is_guest_can_operate = 2;
  if (this->is_guest_can_operate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_guest_can_operate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorktopInfo)
  return target;
}

size_t WorktopInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorktopInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 option_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->option_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _option_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool is_guest_can_operate = 2;
  if (this->is_guest_can_operate() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorktopInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorktopInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WorktopInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorktopInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorktopInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorktopInfo)
    MergeFrom(*source);
  }
}

void WorktopInfo::MergeFrom(const WorktopInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorktopInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  option_list_.MergeFrom(from.option_list_);
  if (from.is_guest_can_operate() != 0) {
    set_is_guest_can_operate(from.is_guest_can_operate());
  }
}

void WorktopInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorktopInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorktopInfo::CopyFrom(const WorktopInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorktopInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorktopInfo::IsInitialized() const {
  return true;
}

void WorktopInfo::Swap(WorktopInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorktopInfo::InternalSwap(WorktopInfo* other) {
  using std::swap;
  option_list_.InternalSwap(&other->option_list_);
  swap(is_guest_can_operate_, other->is_guest_can_operate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorktopInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorktopInfo

// repeated uint32 option_list = 1;
int WorktopInfo::option_list_size() const {
  return option_list_.size();
}
void WorktopInfo::clear_option_list() {
  option_list_.Clear();
}
::google::protobuf::uint32 WorktopInfo::option_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorktopInfo.option_list)
  return option_list_.Get(index);
}
void WorktopInfo::set_option_list(int index, ::google::protobuf::uint32 value) {
  option_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorktopInfo.option_list)
}
void WorktopInfo::add_option_list(::google::protobuf::uint32 value) {
  option_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorktopInfo.option_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorktopInfo::option_list() const {
  // @@protoc_insertion_point(field_list:proto.WorktopInfo.option_list)
  return option_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorktopInfo::mutable_option_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorktopInfo.option_list)
  return &option_list_;
}

// bool is_guest_can_operate = 2;
void WorktopInfo::clear_is_guest_can_operate() {
  is_guest_can_operate_ = false;
}
bool WorktopInfo::is_guest_can_operate() const {
  // @@protoc_insertion_point(field_get:proto.WorktopInfo.is_guest_can_operate)
  return is_guest_can_operate_;
}
void WorktopInfo::set_is_guest_can_operate(bool value) {
  
  is_guest_can_operate_ = value;
  // @@protoc_insertion_point(field_set:proto.WorktopInfo.is_guest_can_operate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MathQuaternion::kXFieldNumber;
const int MathQuaternion::kYFieldNumber;
const int MathQuaternion::kZFieldNumber;
const int MathQuaternion::kWFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MathQuaternion::MathQuaternion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MathQuaternion)
}
MathQuaternion::MathQuaternion(const MathQuaternion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&w_) -
    reinterpret_cast<char*>(&x_)) + sizeof(w_));
  // @@protoc_insertion_point(copy_constructor:proto.MathQuaternion)
}

void MathQuaternion::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
  _cached_size_ = 0;
}

MathQuaternion::~MathQuaternion() {
  // @@protoc_insertion_point(destructor:proto.MathQuaternion)
  SharedDtor();
}

void MathQuaternion::SharedDtor() {
}

void MathQuaternion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MathQuaternion::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MathQuaternion& MathQuaternion::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MathQuaternion* MathQuaternion::New(::google::protobuf::Arena* arena) const {
  MathQuaternion* n = new MathQuaternion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MathQuaternion::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MathQuaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&w_) -
      reinterpret_cast<char*>(&x_)) + sizeof(w_));
  _internal_metadata_.Clear();
}

bool MathQuaternion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MathQuaternion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float w = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MathQuaternion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MathQuaternion)
  return false;
#undef DO_
}

void MathQuaternion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MathQuaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float w = 4;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->w(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MathQuaternion)
}

::google::protobuf::uint8* MathQuaternion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MathQuaternion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float w = 4;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->w(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MathQuaternion)
  return target;
}

size_t MathQuaternion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MathQuaternion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float w = 4;
  if (this->w() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MathQuaternion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MathQuaternion)
  GOOGLE_DCHECK_NE(&from, this);
  const MathQuaternion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MathQuaternion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MathQuaternion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MathQuaternion)
    MergeFrom(*source);
  }
}

void MathQuaternion::MergeFrom(const MathQuaternion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MathQuaternion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
}

void MathQuaternion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MathQuaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MathQuaternion::CopyFrom(const MathQuaternion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MathQuaternion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MathQuaternion::IsInitialized() const {
  return true;
}

void MathQuaternion::Swap(MathQuaternion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MathQuaternion::InternalSwap(MathQuaternion* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(w_, other->w_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MathQuaternion::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MathQuaternion

// float x = 1;
void MathQuaternion::clear_x() {
  x_ = 0;
}
float MathQuaternion::x() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.x)
  return x_;
}
void MathQuaternion::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.x)
}

// float y = 2;
void MathQuaternion::clear_y() {
  y_ = 0;
}
float MathQuaternion::y() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.y)
  return y_;
}
void MathQuaternion::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.y)
}

// float z = 3;
void MathQuaternion::clear_z() {
  z_ = 0;
}
float MathQuaternion::z() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.z)
  return z_;
}
void MathQuaternion::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.z)
}

// float w = 4;
void MathQuaternion::clear_w() {
  w_ = 0;
}
float MathQuaternion::w() const {
  // @@protoc_insertion_point(field_get:proto.MathQuaternion.w)
  return w_;
}
void MathQuaternion::set_w(float value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:proto.MathQuaternion.w)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformInfo::kRouteIdFieldNumber;
const int PlatformInfo::kStartIndexFieldNumber;
const int PlatformInfo::kStartRouteTimeFieldNumber;
const int PlatformInfo::kStartSceneTimeFieldNumber;
const int PlatformInfo::kTempRouteTimeFieldNumber;
const int PlatformInfo::kTempStartRouteTimeFieldNumber;
const int PlatformInfo::kStartPosFieldNumber;
const int PlatformInfo::kIsStartedFieldNumber;
const int PlatformInfo::kStartRotFieldNumber;
const int PlatformInfo::kStopSceneTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformInfo::PlatformInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlatformInfo)
}
PlatformInfo::PlatformInfo(const PlatformInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start_pos()) {
    start_pos_ = new ::proto::Vector(*from.start_pos_);
  } else {
    start_pos_ = NULL;
  }
  if (from.has_start_rot()) {
    start_rot_ = new ::proto::MathQuaternion(*from.start_rot_);
  } else {
    start_rot_ = NULL;
  }
  ::memcpy(&route_id_, &from.route_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&stop_scene_time_) -
    reinterpret_cast<char*>(&route_id_)) + sizeof(stop_scene_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PlatformInfo)
}

void PlatformInfo::SharedCtor() {
  ::memset(&start_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_scene_time_) -
      reinterpret_cast<char*>(&start_pos_)) + sizeof(stop_scene_time_));
  _cached_size_ = 0;
}

PlatformInfo::~PlatformInfo() {
  // @@protoc_insertion_point(destructor:proto.PlatformInfo)
  SharedDtor();
}

void PlatformInfo::SharedDtor() {
  if (this != internal_default_instance()) delete start_pos_;
  if (this != internal_default_instance()) delete start_rot_;
}

void PlatformInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformInfo& PlatformInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlatformInfo* PlatformInfo::New(::google::protobuf::Arena* arena) const {
  PlatformInfo* n = new PlatformInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlatformInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) {
    delete start_pos_;
  }
  start_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_rot_ != NULL) {
    delete start_rot_;
  }
  start_rot_ = NULL;
  ::memset(&route_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_scene_time_) -
      reinterpret_cast<char*>(&route_id_)) + sizeof(stop_scene_time_));
  _internal_metadata_.Clear();
}

bool PlatformInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlatformInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 route_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &route_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_route_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_route_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_scene_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 temp_route_time = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &temp_route_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 temp_start_route_time = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &temp_start_route_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector start_pos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_started = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MathQuaternion start_rot = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_start_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 stop_scene_time = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stop_scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlatformInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlatformInfo)
  return false;
#undef DO_
}

void PlatformInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlatformInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->route_id(), output);
  }

  // int32 start_index = 2;
  if (this->start_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->start_index(), output);
  }

  // uint32 start_route_time = 3;
  if (this->start_route_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->start_route_time(), output);
  }

  // uint32 start_scene_time = 4;
  if (this->start_scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->start_scene_time(), output);
  }

  // uint32 temp_route_time = 5;
  if (this->temp_route_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->temp_route_time(), output);
  }

  // uint32 temp_start_route_time = 6;
  if (this->temp_start_route_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->temp_start_route_time(), output);
  }

  // .proto.Vector start_pos = 7;
  if (this->has_start_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->start_pos_, output);
  }

  // bool is_started = 8;
  if (this->is_started() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_started(), output);
  }

  // .proto.MathQuaternion start_rot = 9;
  if (this->has_start_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->start_rot_, output);
  }

  // uint32 stop_scene_time = 10;
  if (this->stop_scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->stop_scene_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlatformInfo)
}

::google::protobuf::uint8* PlatformInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlatformInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->route_id(), target);
  }

  // int32 start_index = 2;
  if (this->start_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->start_index(), target);
  }

  // uint32 start_route_time = 3;
  if (this->start_route_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->start_route_time(), target);
  }

  // uint32 start_scene_time = 4;
  if (this->start_scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->start_scene_time(), target);
  }

  // uint32 temp_route_time = 5;
  if (this->temp_route_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->temp_route_time(), target);
  }

  // uint32 temp_start_route_time = 6;
  if (this->temp_start_route_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->temp_start_route_time(), target);
  }

  // .proto.Vector start_pos = 7;
  if (this->has_start_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->start_pos_, deterministic, target);
  }

  // bool is_started = 8;
  if (this->is_started() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_started(), target);
  }

  // .proto.MathQuaternion start_rot = 9;
  if (this->has_start_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->start_rot_, deterministic, target);
  }

  // uint32 stop_scene_time = 10;
  if (this->stop_scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->stop_scene_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlatformInfo)
  return target;
}

size_t PlatformInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlatformInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector start_pos = 7;
  if (this->has_start_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_pos_);
  }

  // .proto.MathQuaternion start_rot = 9;
  if (this->has_start_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->start_rot_);
  }

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->route_id());
  }

  // int32 start_index = 2;
  if (this->start_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->start_index());
  }

  // uint32 start_route_time = 3;
  if (this->start_route_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_route_time());
  }

  // uint32 start_scene_time = 4;
  if (this->start_scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_scene_time());
  }

  // uint32 temp_route_time = 5;
  if (this->temp_route_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->temp_route_time());
  }

  // uint32 temp_start_route_time = 6;
  if (this->temp_start_route_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->temp_start_route_time());
  }

  // bool is_started = 8;
  if (this->is_started() != 0) {
    total_size += 1 + 1;
  }

  // uint32 stop_scene_time = 10;
  if (this->stop_scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stop_scene_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlatformInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlatformInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlatformInfo)
    MergeFrom(*source);
  }
}

void PlatformInfo::MergeFrom(const PlatformInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlatformInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_pos()) {
    mutable_start_pos()->::proto::Vector::MergeFrom(from.start_pos());
  }
  if (from.has_start_rot()) {
    mutable_start_rot()->::proto::MathQuaternion::MergeFrom(from.start_rot());
  }
  if (from.route_id() != 0) {
    set_route_id(from.route_id());
  }
  if (from.start_index() != 0) {
    set_start_index(from.start_index());
  }
  if (from.start_route_time() != 0) {
    set_start_route_time(from.start_route_time());
  }
  if (from.start_scene_time() != 0) {
    set_start_scene_time(from.start_scene_time());
  }
  if (from.temp_route_time() != 0) {
    set_temp_route_time(from.temp_route_time());
  }
  if (from.temp_start_route_time() != 0) {
    set_temp_start_route_time(from.temp_start_route_time());
  }
  if (from.is_started() != 0) {
    set_is_started(from.is_started());
  }
  if (from.stop_scene_time() != 0) {
    set_stop_scene_time(from.stop_scene_time());
  }
}

void PlatformInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlatformInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformInfo::CopyFrom(const PlatformInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlatformInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformInfo::IsInitialized() const {
  return true;
}

void PlatformInfo::Swap(PlatformInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformInfo::InternalSwap(PlatformInfo* other) {
  using std::swap;
  swap(start_pos_, other->start_pos_);
  swap(start_rot_, other->start_rot_);
  swap(route_id_, other->route_id_);
  swap(start_index_, other->start_index_);
  swap(start_route_time_, other->start_route_time_);
  swap(start_scene_time_, other->start_scene_time_);
  swap(temp_route_time_, other->temp_route_time_);
  swap(temp_start_route_time_, other->temp_start_route_time_);
  swap(is_started_, other->is_started_);
  swap(stop_scene_time_, other->stop_scene_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlatformInfo

// uint32 route_id = 1;
void PlatformInfo::clear_route_id() {
  route_id_ = 0u;
}
::google::protobuf::uint32 PlatformInfo::route_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.route_id)
  return route_id_;
}
void PlatformInfo::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.route_id)
}

// int32 start_index = 2;
void PlatformInfo::clear_start_index() {
  start_index_ = 0;
}
::google::protobuf::int32 PlatformInfo::start_index() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_index)
  return start_index_;
}
void PlatformInfo::set_start_index(::google::protobuf::int32 value) {
  
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_index)
}

// uint32 start_route_time = 3;
void PlatformInfo::clear_start_route_time() {
  start_route_time_ = 0u;
}
::google::protobuf::uint32 PlatformInfo::start_route_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_route_time)
  return start_route_time_;
}
void PlatformInfo::set_start_route_time(::google::protobuf::uint32 value) {
  
  start_route_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_route_time)
}

// uint32 start_scene_time = 4;
void PlatformInfo::clear_start_scene_time() {
  start_scene_time_ = 0u;
}
::google::protobuf::uint32 PlatformInfo::start_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_scene_time)
  return start_scene_time_;
}
void PlatformInfo::set_start_scene_time(::google::protobuf::uint32 value) {
  
  start_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.start_scene_time)
}

// uint32 temp_route_time = 5;
void PlatformInfo::clear_temp_route_time() {
  temp_route_time_ = 0u;
}
::google::protobuf::uint32 PlatformInfo::temp_route_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.temp_route_time)
  return temp_route_time_;
}
void PlatformInfo::set_temp_route_time(::google::protobuf::uint32 value) {
  
  temp_route_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.temp_route_time)
}

// uint32 temp_start_route_time = 6;
void PlatformInfo::clear_temp_start_route_time() {
  temp_start_route_time_ = 0u;
}
::google::protobuf::uint32 PlatformInfo::temp_start_route_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.temp_start_route_time)
  return temp_start_route_time_;
}
void PlatformInfo::set_temp_start_route_time(::google::protobuf::uint32 value) {
  
  temp_start_route_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.temp_start_route_time)
}

// .proto.Vector start_pos = 7;
bool PlatformInfo::has_start_pos() const {
  return this != internal_default_instance() && start_pos_ != NULL;
}
void PlatformInfo::clear_start_pos() {
  if (GetArenaNoVirtual() == NULL && start_pos_ != NULL) delete start_pos_;
  start_pos_ = NULL;
}
const ::proto::Vector& PlatformInfo::start_pos() const {
  const ::proto::Vector* p = start_pos_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlatformInfo::mutable_start_pos() {
  
  if (start_pos_ == NULL) {
    start_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.start_pos)
  return start_pos_;
}
::proto::Vector* PlatformInfo::release_start_pos() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.start_pos)
  
  ::proto::Vector* temp = start_pos_;
  start_pos_ = NULL;
  return temp;
}
void PlatformInfo::set_allocated_start_pos(::proto::Vector* start_pos) {
  delete start_pos_;
  start_pos_ = start_pos;
  if (start_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.start_pos)
}

// bool is_started = 8;
void PlatformInfo::clear_is_started() {
  is_started_ = false;
}
bool PlatformInfo::is_started() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.is_started)
  return is_started_;
}
void PlatformInfo::set_is_started(bool value) {
  
  is_started_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.is_started)
}

// .proto.MathQuaternion start_rot = 9;
bool PlatformInfo::has_start_rot() const {
  return this != internal_default_instance() && start_rot_ != NULL;
}
void PlatformInfo::clear_start_rot() {
  if (GetArenaNoVirtual() == NULL && start_rot_ != NULL) delete start_rot_;
  start_rot_ = NULL;
}
const ::proto::MathQuaternion& PlatformInfo::start_rot() const {
  const ::proto::MathQuaternion* p = start_rot_;
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.start_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MathQuaternion*>(
      &::proto::_MathQuaternion_default_instance_);
}
::proto::MathQuaternion* PlatformInfo::mutable_start_rot() {
  
  if (start_rot_ == NULL) {
    start_rot_ = new ::proto::MathQuaternion;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformInfo.start_rot)
  return start_rot_;
}
::proto::MathQuaternion* PlatformInfo::release_start_rot() {
  // @@protoc_insertion_point(field_release:proto.PlatformInfo.start_rot)
  
  ::proto::MathQuaternion* temp = start_rot_;
  start_rot_ = NULL;
  return temp;
}
void PlatformInfo::set_allocated_start_rot(::proto::MathQuaternion* start_rot) {
  delete start_rot_;
  start_rot_ = start_rot;
  if (start_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformInfo.start_rot)
}

// uint32 stop_scene_time = 10;
void PlatformInfo::clear_stop_scene_time() {
  stop_scene_time_ = 0u;
}
::google::protobuf::uint32 PlatformInfo::stop_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformInfo.stop_scene_time)
  return stop_scene_time_;
}
void PlatformInfo::set_stop_scene_time(::google::protobuf::uint32 value) {
  
  stop_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformInfo.stop_scene_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WeatherInfo::kWeatherAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WeatherInfo::WeatherInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WeatherInfo)
}
WeatherInfo::WeatherInfo(const WeatherInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weather_area_id_ = from.weather_area_id_;
  // @@protoc_insertion_point(copy_constructor:proto.WeatherInfo)
}

void WeatherInfo::SharedCtor() {
  weather_area_id_ = 0u;
  _cached_size_ = 0;
}

WeatherInfo::~WeatherInfo() {
  // @@protoc_insertion_point(destructor:proto.WeatherInfo)
  SharedDtor();
}

void WeatherInfo::SharedDtor() {
}

void WeatherInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WeatherInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WeatherInfo& WeatherInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

WeatherInfo* WeatherInfo::New(::google::protobuf::Arena* arena) const {
  WeatherInfo* n = new WeatherInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WeatherInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WeatherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weather_area_id_ = 0u;
  _internal_metadata_.Clear();
}

bool WeatherInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WeatherInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 weather_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weather_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WeatherInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WeatherInfo)
  return false;
#undef DO_
}

void WeatherInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WeatherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_area_id = 1;
  if (this->weather_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->weather_area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WeatherInfo)
}

::google::protobuf::uint8* WeatherInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WeatherInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_area_id = 1;
  if (this->weather_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->weather_area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WeatherInfo)
  return target;
}

size_t WeatherInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WeatherInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 weather_area_id = 1;
  if (this->weather_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weather_area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WeatherInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WeatherInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const WeatherInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WeatherInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WeatherInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WeatherInfo)
    MergeFrom(*source);
  }
}

void WeatherInfo::MergeFrom(const WeatherInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WeatherInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weather_area_id() != 0) {
    set_weather_area_id(from.weather_area_id());
  }
}

void WeatherInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WeatherInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WeatherInfo::CopyFrom(const WeatherInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WeatherInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeatherInfo::IsInitialized() const {
  return true;
}

void WeatherInfo::Swap(WeatherInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WeatherInfo::InternalSwap(WeatherInfo* other) {
  using std::swap;
  swap(weather_area_id_, other->weather_area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WeatherInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WeatherInfo

// uint32 weather_area_id = 1;
void WeatherInfo::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
::google::protobuf::uint32 WeatherInfo::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.WeatherInfo.weather_area_id)
  return weather_area_id_;
}
void WeatherInfo::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WeatherInfo.weather_area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientGadgetInfo::kCampIdFieldNumber;
const int ClientGadgetInfo::kCampTypeFieldNumber;
const int ClientGadgetInfo::kGuidFieldNumber;
const int ClientGadgetInfo::kOwnerEntityIdFieldNumber;
const int ClientGadgetInfo::kTargetEntityIdFieldNumber;
const int ClientGadgetInfo::kAsyncLoadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientGadgetInfo::ClientGadgetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientGadgetInfo)
}
ClientGadgetInfo::ClientGadgetInfo(const ClientGadgetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&camp_id_, &from.camp_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&async_load_) -
    reinterpret_cast<char*>(&camp_id_)) + sizeof(async_load_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientGadgetInfo)
}

void ClientGadgetInfo::SharedCtor() {
  ::memset(&camp_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&async_load_) -
      reinterpret_cast<char*>(&camp_id_)) + sizeof(async_load_));
  _cached_size_ = 0;
}

ClientGadgetInfo::~ClientGadgetInfo() {
  // @@protoc_insertion_point(destructor:proto.ClientGadgetInfo)
  SharedDtor();
}

void ClientGadgetInfo::SharedDtor() {
}

void ClientGadgetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientGadgetInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientGadgetInfo& ClientGadgetInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientGadgetInfo* ClientGadgetInfo::New(::google::protobuf::Arena* arena) const {
  ClientGadgetInfo* n = new ClientGadgetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientGadgetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&camp_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&async_load_) -
      reinterpret_cast<char*>(&camp_id_)) + sizeof(async_load_));
  _internal_metadata_.Clear();
}

bool ClientGadgetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientGadgetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 camp_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 camp_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 owner_entity_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_entity_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool async_load = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &async_load_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientGadgetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientGadgetInfo)
  return false;
#undef DO_
}

void ClientGadgetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camp_id = 1;
  if (this->camp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->camp_id(), output);
  }

  // uint32 camp_type = 2;
  if (this->camp_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->camp_type(), output);
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->guid(), output);
  }

  // uint32 owner_entity_id = 4;
  if (this->owner_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->owner_entity_id(), output);
  }

  // uint32 target_entity_id = 5;
  if (this->target_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->target_entity_id(), output);
  }

  // bool async_load = 6;
  if (this->async_load() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->async_load(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientGadgetInfo)
}

::google::protobuf::uint8* ClientGadgetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camp_id = 1;
  if (this->camp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->camp_id(), target);
  }

  // uint32 camp_type = 2;
  if (this->camp_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->camp_type(), target);
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->guid(), target);
  }

  // uint32 owner_entity_id = 4;
  if (this->owner_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->owner_entity_id(), target);
  }

  // uint32 target_entity_id = 5;
  if (this->target_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->target_entity_id(), target);
  }

  // bool async_load = 6;
  if (this->async_load() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->async_load(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientGadgetInfo)
  return target;
}

size_t ClientGadgetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientGadgetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 camp_id = 1;
  if (this->camp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp_id());
  }

  // uint32 camp_type = 2;
  if (this->camp_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp_type());
  }

  // uint64 guid = 3;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint32 owner_entity_id = 4;
  if (this->owner_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_entity_id());
  }

  // uint32 target_entity_id = 5;
  if (this->target_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_entity_id());
  }

  // bool async_load = 6;
  if (this->async_load() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientGadgetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientGadgetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientGadgetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientGadgetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientGadgetInfo)
    MergeFrom(*source);
  }
}

void ClientGadgetInfo::MergeFrom(const ClientGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.camp_id() != 0) {
    set_camp_id(from.camp_id());
  }
  if (from.camp_type() != 0) {
    set_camp_type(from.camp_type());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.owner_entity_id() != 0) {
    set_owner_entity_id(from.owner_entity_id());
  }
  if (from.target_entity_id() != 0) {
    set_target_entity_id(from.target_entity_id());
  }
  if (from.async_load() != 0) {
    set_async_load(from.async_load());
  }
}

void ClientGadgetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientGadgetInfo::CopyFrom(const ClientGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientGadgetInfo::IsInitialized() const {
  return true;
}

void ClientGadgetInfo::Swap(ClientGadgetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientGadgetInfo::InternalSwap(ClientGadgetInfo* other) {
  using std::swap;
  swap(camp_id_, other->camp_id_);
  swap(camp_type_, other->camp_type_);
  swap(guid_, other->guid_);
  swap(owner_entity_id_, other->owner_entity_id_);
  swap(target_entity_id_, other->target_entity_id_);
  swap(async_load_, other->async_load_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientGadgetInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientGadgetInfo

// uint32 camp_id = 1;
void ClientGadgetInfo::clear_camp_id() {
  camp_id_ = 0u;
}
::google::protobuf::uint32 ClientGadgetInfo::camp_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.camp_id)
  return camp_id_;
}
void ClientGadgetInfo::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.camp_id)
}

// uint32 camp_type = 2;
void ClientGadgetInfo::clear_camp_type() {
  camp_type_ = 0u;
}
::google::protobuf::uint32 ClientGadgetInfo::camp_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.camp_type)
  return camp_type_;
}
void ClientGadgetInfo::set_camp_type(::google::protobuf::uint32 value) {
  
  camp_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.camp_type)
}

// uint64 guid = 3;
void ClientGadgetInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClientGadgetInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.guid)
  return guid_;
}
void ClientGadgetInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.guid)
}

// uint32 owner_entity_id = 4;
void ClientGadgetInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
::google::protobuf::uint32 ClientGadgetInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.owner_entity_id)
  return owner_entity_id_;
}
void ClientGadgetInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.owner_entity_id)
}

// uint32 target_entity_id = 5;
void ClientGadgetInfo::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
::google::protobuf::uint32 ClientGadgetInfo::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.target_entity_id)
  return target_entity_id_;
}
void ClientGadgetInfo::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.target_entity_id)
}

// bool async_load = 6;
void ClientGadgetInfo::clear_async_load() {
  async_load_ = false;
}
bool ClientGadgetInfo::async_load() const {
  // @@protoc_insertion_point(field_get:proto.ClientGadgetInfo.async_load)
  return async_load_;
}
void ClientGadgetInfo::set_async_load(bool value) {
  
  async_load_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientGadgetInfo.async_load)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityGadgetInfo::kCampIdFieldNumber;
const int AbilityGadgetInfo::kCampTargetTypeFieldNumber;
const int AbilityGadgetInfo::kTargetEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityGadgetInfo::AbilityGadgetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityGadgetInfo)
}
AbilityGadgetInfo::AbilityGadgetInfo(const AbilityGadgetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&camp_id_, &from.camp_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_entity_id_) -
    reinterpret_cast<char*>(&camp_id_)) + sizeof(target_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AbilityGadgetInfo)
}

void AbilityGadgetInfo::SharedCtor() {
  ::memset(&camp_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_entity_id_) -
      reinterpret_cast<char*>(&camp_id_)) + sizeof(target_entity_id_));
  _cached_size_ = 0;
}

AbilityGadgetInfo::~AbilityGadgetInfo() {
  // @@protoc_insertion_point(destructor:proto.AbilityGadgetInfo)
  SharedDtor();
}

void AbilityGadgetInfo::SharedDtor() {
}

void AbilityGadgetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityGadgetInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityGadgetInfo& AbilityGadgetInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityGadgetInfo* AbilityGadgetInfo::New(::google::protobuf::Arena* arena) const {
  AbilityGadgetInfo* n = new AbilityGadgetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityGadgetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&camp_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_entity_id_) -
      reinterpret_cast<char*>(&camp_id_)) + sizeof(target_entity_id_));
  _internal_metadata_.Clear();
}

bool AbilityGadgetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityGadgetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 camp_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 camp_target_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_target_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_entity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityGadgetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityGadgetInfo)
  return false;
#undef DO_
}

void AbilityGadgetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camp_id = 1;
  if (this->camp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->camp_id(), output);
  }

  // uint32 camp_target_type = 2;
  if (this->camp_target_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->camp_target_type(), output);
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityGadgetInfo)
}

::google::protobuf::uint8* AbilityGadgetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camp_id = 1;
  if (this->camp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->camp_id(), target);
  }

  // uint32 camp_target_type = 2;
  if (this->camp_target_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->camp_target_type(), target);
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityGadgetInfo)
  return target;
}

size_t AbilityGadgetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityGadgetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 camp_id = 1;
  if (this->camp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp_id());
  }

  // uint32 camp_target_type = 2;
  if (this->camp_target_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp_target_type());
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityGadgetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityGadgetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityGadgetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityGadgetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityGadgetInfo)
    MergeFrom(*source);
  }
}

void AbilityGadgetInfo::MergeFrom(const AbilityGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.camp_id() != 0) {
    set_camp_id(from.camp_id());
  }
  if (from.camp_target_type() != 0) {
    set_camp_target_type(from.camp_target_type());
  }
  if (from.target_entity_id() != 0) {
    set_target_entity_id(from.target_entity_id());
  }
}

void AbilityGadgetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityGadgetInfo::CopyFrom(const AbilityGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityGadgetInfo::IsInitialized() const {
  return true;
}

void AbilityGadgetInfo::Swap(AbilityGadgetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityGadgetInfo::InternalSwap(AbilityGadgetInfo* other) {
  using std::swap;
  swap(camp_id_, other->camp_id_);
  swap(camp_target_type_, other->camp_target_type_);
  swap(target_entity_id_, other->target_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityGadgetInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityGadgetInfo

// uint32 camp_id = 1;
void AbilityGadgetInfo::clear_camp_id() {
  camp_id_ = 0u;
}
::google::protobuf::uint32 AbilityGadgetInfo::camp_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.camp_id)
  return camp_id_;
}
void AbilityGadgetInfo::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.camp_id)
}

// uint32 camp_target_type = 2;
void AbilityGadgetInfo::clear_camp_target_type() {
  camp_target_type_ = 0u;
}
::google::protobuf::uint32 AbilityGadgetInfo::camp_target_type() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.camp_target_type)
  return camp_target_type_;
}
void AbilityGadgetInfo::set_camp_target_type(::google::protobuf::uint32 value) {
  
  camp_target_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.camp_target_type)
}

// uint32 target_entity_id = 3;
void AbilityGadgetInfo::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
::google::protobuf::uint32 AbilityGadgetInfo::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityGadgetInfo.target_entity_id)
  return target_entity_id_;
}
void AbilityGadgetInfo::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityGadgetInfo.target_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GatherGadgetInfo::kItemIdFieldNumber;
const int GatherGadgetInfo::kIsForbidGuestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GatherGadgetInfo::GatherGadgetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GatherGadgetInfo)
}
GatherGadgetInfo::GatherGadgetInfo(const GatherGadgetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_forbid_guest_) -
    reinterpret_cast<char*>(&item_id_)) + sizeof(is_forbid_guest_));
  // @@protoc_insertion_point(copy_constructor:proto.GatherGadgetInfo)
}

void GatherGadgetInfo::SharedCtor() {
  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_forbid_guest_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(is_forbid_guest_));
  _cached_size_ = 0;
}

GatherGadgetInfo::~GatherGadgetInfo() {
  // @@protoc_insertion_point(destructor:proto.GatherGadgetInfo)
  SharedDtor();
}

void GatherGadgetInfo::SharedDtor() {
}

void GatherGadgetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GatherGadgetInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GatherGadgetInfo& GatherGadgetInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

GatherGadgetInfo* GatherGadgetInfo::New(::google::protobuf::Arena* arena) const {
  GatherGadgetInfo* n = new GatherGadgetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GatherGadgetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GatherGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&item_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_forbid_guest_) -
      reinterpret_cast<char*>(&item_id_)) + sizeof(is_forbid_guest_));
  _internal_metadata_.Clear();
}

bool GatherGadgetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GatherGadgetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_forbid_guest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_forbid_guest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GatherGadgetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GatherGadgetInfo)
  return false;
#undef DO_
}

void GatherGadgetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GatherGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_id(), output);
  }

  // bool is_forbid_guest = 2;
  if (this->is_forbid_guest() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_forbid_guest(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GatherGadgetInfo)
}

::google::protobuf::uint8* GatherGadgetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GatherGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_id(), target);
  }

  // bool is_forbid_guest = 2;
  if (this->is_forbid_guest() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_forbid_guest(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GatherGadgetInfo)
  return target;
}

size_t GatherGadgetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GatherGadgetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 item_id = 1;
  if (this->item_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_id());
  }

  // bool is_forbid_guest = 2;
  if (this->is_forbid_guest() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GatherGadgetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GatherGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GatherGadgetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GatherGadgetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GatherGadgetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GatherGadgetInfo)
    MergeFrom(*source);
  }
}

void GatherGadgetInfo::MergeFrom(const GatherGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GatherGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.item_id() != 0) {
    set_item_id(from.item_id());
  }
  if (from.is_forbid_guest() != 0) {
    set_is_forbid_guest(from.is_forbid_guest());
  }
}

void GatherGadgetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GatherGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GatherGadgetInfo::CopyFrom(const GatherGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GatherGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GatherGadgetInfo::IsInitialized() const {
  return true;
}

void GatherGadgetInfo::Swap(GatherGadgetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GatherGadgetInfo::InternalSwap(GatherGadgetInfo* other) {
  using std::swap;
  swap(item_id_, other->item_id_);
  swap(is_forbid_guest_, other->is_forbid_guest_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GatherGadgetInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GatherGadgetInfo

// uint32 item_id = 1;
void GatherGadgetInfo::clear_item_id() {
  item_id_ = 0u;
}
::google::protobuf::uint32 GatherGadgetInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.GatherGadgetInfo.item_id)
  return item_id_;
}
void GatherGadgetInfo::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GatherGadgetInfo.item_id)
}

// bool is_forbid_guest = 2;
void GatherGadgetInfo::clear_is_forbid_guest() {
  is_forbid_guest_ = false;
}
bool GatherGadgetInfo::is_forbid_guest() const {
  // @@protoc_insertion_point(field_get:proto.GatherGadgetInfo.is_forbid_guest)
  return is_forbid_guest_;
}
void GatherGadgetInfo::set_is_forbid_guest(bool value) {
  
  is_forbid_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GatherGadgetInfo.is_forbid_guest)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatueGadgetInfo::kOpenedStatueUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatueGadgetInfo::StatueGadgetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.StatueGadgetInfo)
}
StatueGadgetInfo::StatueGadgetInfo(const StatueGadgetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      opened_statue_uid_list_(from.opened_statue_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.StatueGadgetInfo)
}

void StatueGadgetInfo::SharedCtor() {
  _cached_size_ = 0;
}

StatueGadgetInfo::~StatueGadgetInfo() {
  // @@protoc_insertion_point(destructor:proto.StatueGadgetInfo)
  SharedDtor();
}

void StatueGadgetInfo::SharedDtor() {
}

void StatueGadgetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatueGadgetInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatueGadgetInfo& StatueGadgetInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

StatueGadgetInfo* StatueGadgetInfo::New(::google::protobuf::Arena* arena) const {
  StatueGadgetInfo* n = new StatueGadgetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatueGadgetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StatueGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  opened_statue_uid_list_.Clear();
  _internal_metadata_.Clear();
}

bool StatueGadgetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.StatueGadgetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 opened_statue_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_opened_statue_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_opened_statue_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.StatueGadgetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.StatueGadgetInfo)
  return false;
#undef DO_
}

void StatueGadgetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.StatueGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 opened_statue_uid_list = 1;
  if (this->opened_statue_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _opened_statue_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->opened_statue_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->opened_statue_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.StatueGadgetInfo)
}

::google::protobuf::uint8* StatueGadgetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.StatueGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 opened_statue_uid_list = 1;
  if (this->opened_statue_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _opened_statue_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->opened_statue_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StatueGadgetInfo)
  return target;
}

size_t StatueGadgetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StatueGadgetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 opened_statue_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->opened_statue_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _opened_statue_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatueGadgetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.StatueGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const StatueGadgetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatueGadgetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.StatueGadgetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.StatueGadgetInfo)
    MergeFrom(*source);
  }
}

void StatueGadgetInfo::MergeFrom(const StatueGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StatueGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  opened_statue_uid_list_.MergeFrom(from.opened_statue_uid_list_);
}

void StatueGadgetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.StatueGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatueGadgetInfo::CopyFrom(const StatueGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StatueGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatueGadgetInfo::IsInitialized() const {
  return true;
}

void StatueGadgetInfo::Swap(StatueGadgetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatueGadgetInfo::InternalSwap(StatueGadgetInfo* other) {
  using std::swap;
  opened_statue_uid_list_.InternalSwap(&other->opened_statue_uid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatueGadgetInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StatueGadgetInfo

// repeated uint32 opened_statue_uid_list = 1;
int StatueGadgetInfo::opened_statue_uid_list_size() const {
  return opened_statue_uid_list_.size();
}
void StatueGadgetInfo::clear_opened_statue_uid_list() {
  opened_statue_uid_list_.Clear();
}
::google::protobuf::uint32 StatueGadgetInfo::opened_statue_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.StatueGadgetInfo.opened_statue_uid_list)
  return opened_statue_uid_list_.Get(index);
}
void StatueGadgetInfo::set_opened_statue_uid_list(int index, ::google::protobuf::uint32 value) {
  opened_statue_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.StatueGadgetInfo.opened_statue_uid_list)
}
void StatueGadgetInfo::add_opened_statue_uid_list(::google::protobuf::uint32 value) {
  opened_statue_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.StatueGadgetInfo.opened_statue_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StatueGadgetInfo::opened_statue_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.StatueGadgetInfo.opened_statue_uid_list)
  return opened_statue_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StatueGadgetInfo::mutable_opened_statue_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.StatueGadgetInfo.opened_statue_uid_list)
  return &opened_statue_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BossChestInfo::kMonsterConfigIdFieldNumber;
const int BossChestInfo::kWorldResinFieldNumber;
const int BossChestInfo::kRemainUidListFieldNumber;
const int BossChestInfo::kQualifyUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BossChestInfo::BossChestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BossChestInfo)
}
BossChestInfo::BossChestInfo(const BossChestInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remain_uid_list_(from.remain_uid_list_),
      qualify_uid_list_(from.qualify_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&monster_config_id_, &from.monster_config_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&world_resin_) -
    reinterpret_cast<char*>(&monster_config_id_)) + sizeof(world_resin_));
  // @@protoc_insertion_point(copy_constructor:proto.BossChestInfo)
}

void BossChestInfo::SharedCtor() {
  ::memset(&monster_config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&world_resin_) -
      reinterpret_cast<char*>(&monster_config_id_)) + sizeof(world_resin_));
  _cached_size_ = 0;
}

BossChestInfo::~BossChestInfo() {
  // @@protoc_insertion_point(destructor:proto.BossChestInfo)
  SharedDtor();
}

void BossChestInfo::SharedDtor() {
}

void BossChestInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BossChestInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BossChestInfo& BossChestInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

BossChestInfo* BossChestInfo::New(::google::protobuf::Arena* arena) const {
  BossChestInfo* n = new BossChestInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BossChestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BossChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remain_uid_list_.Clear();
  qualify_uid_list_.Clear();
  ::memset(&monster_config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&world_resin_) -
      reinterpret_cast<char*>(&monster_config_id_)) + sizeof(world_resin_));
  _internal_metadata_.Clear();
}

bool BossChestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BossChestInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 monster_config_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 world_resin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_resin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 remain_uid_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_remain_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_remain_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 qualify_uid_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_qualify_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_qualify_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BossChestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BossChestInfo)
  return false;
#undef DO_
}

void BossChestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BossChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_config_id = 1;
  if (this->monster_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->monster_config_id(), output);
  }

  // uint32 world_resin = 2;
  if (this->world_resin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->world_resin(), output);
  }

  // repeated uint32 remain_uid_list = 3;
  if (this->remain_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _remain_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->remain_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->remain_uid_list(i), output);
  }

  // repeated uint32 qualify_uid_list = 4;
  if (this->qualify_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _qualify_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->qualify_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->qualify_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BossChestInfo)
}

::google::protobuf::uint8* BossChestInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BossChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_config_id = 1;
  if (this->monster_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->monster_config_id(), target);
  }

  // uint32 world_resin = 2;
  if (this->world_resin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->world_resin(), target);
  }

  // repeated uint32 remain_uid_list = 3;
  if (this->remain_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _remain_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->remain_uid_list_, target);
  }

  // repeated uint32 qualify_uid_list = 4;
  if (this->qualify_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _qualify_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->qualify_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BossChestInfo)
  return target;
}

size_t BossChestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BossChestInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 remain_uid_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->remain_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _remain_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 qualify_uid_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->qualify_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _qualify_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 monster_config_id = 1;
  if (this->monster_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_config_id());
  }

  // uint32 world_resin = 2;
  if (this->world_resin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_resin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BossChestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BossChestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BossChestInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BossChestInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BossChestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BossChestInfo)
    MergeFrom(*source);
  }
}

void BossChestInfo::MergeFrom(const BossChestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BossChestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remain_uid_list_.MergeFrom(from.remain_uid_list_);
  qualify_uid_list_.MergeFrom(from.qualify_uid_list_);
  if (from.monster_config_id() != 0) {
    set_monster_config_id(from.monster_config_id());
  }
  if (from.world_resin() != 0) {
    set_world_resin(from.world_resin());
  }
}

void BossChestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BossChestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BossChestInfo::CopyFrom(const BossChestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BossChestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BossChestInfo::IsInitialized() const {
  return true;
}

void BossChestInfo::Swap(BossChestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BossChestInfo::InternalSwap(BossChestInfo* other) {
  using std::swap;
  remain_uid_list_.InternalSwap(&other->remain_uid_list_);
  qualify_uid_list_.InternalSwap(&other->qualify_uid_list_);
  swap(monster_config_id_, other->monster_config_id_);
  swap(world_resin_, other->world_resin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BossChestInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BossChestInfo

// uint32 monster_config_id = 1;
void BossChestInfo::clear_monster_config_id() {
  monster_config_id_ = 0u;
}
::google::protobuf::uint32 BossChestInfo::monster_config_id() const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.monster_config_id)
  return monster_config_id_;
}
void BossChestInfo::set_monster_config_id(::google::protobuf::uint32 value) {
  
  monster_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.monster_config_id)
}

// uint32 world_resin = 2;
void BossChestInfo::clear_world_resin() {
  world_resin_ = 0u;
}
::google::protobuf::uint32 BossChestInfo::world_resin() const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.world_resin)
  return world_resin_;
}
void BossChestInfo::set_world_resin(::google::protobuf::uint32 value) {
  
  world_resin_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.world_resin)
}

// repeated uint32 remain_uid_list = 3;
int BossChestInfo::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
void BossChestInfo::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
::google::protobuf::uint32 BossChestInfo::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.remain_uid_list)
  return remain_uid_list_.Get(index);
}
void BossChestInfo::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.remain_uid_list)
}
void BossChestInfo::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestInfo.remain_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestInfo::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestInfo.remain_uid_list)
  return remain_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestInfo::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestInfo.remain_uid_list)
  return &remain_uid_list_;
}

// repeated uint32 qualify_uid_list = 4;
int BossChestInfo::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
void BossChestInfo::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
::google::protobuf::uint32 BossChestInfo::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestInfo.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
void BossChestInfo::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestInfo.qualify_uid_list)
}
void BossChestInfo::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestInfo.qualify_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestInfo::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestInfo.qualify_uid_list)
  return qualify_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestInfo::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestInfo.qualify_uid_list)
  return &qualify_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlossomChestInfo::kWorldResinFieldNumber;
const int BlossomChestInfo::kQualifyUidListFieldNumber;
const int BlossomChestInfo::kRemainUidListFieldNumber;
const int BlossomChestInfo::kDeadTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlossomChestInfo::BlossomChestInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlossomChestInfo)
}
BlossomChestInfo::BlossomChestInfo(const BlossomChestInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      qualify_uid_list_(from.qualify_uid_list_),
      remain_uid_list_(from.remain_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&world_resin_, &from.world_resin_,
    static_cast<size_t>(reinterpret_cast<char*>(&dead_time_) -
    reinterpret_cast<char*>(&world_resin_)) + sizeof(dead_time_));
  // @@protoc_insertion_point(copy_constructor:proto.BlossomChestInfo)
}

void BlossomChestInfo::SharedCtor() {
  ::memset(&world_resin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dead_time_) -
      reinterpret_cast<char*>(&world_resin_)) + sizeof(dead_time_));
  _cached_size_ = 0;
}

BlossomChestInfo::~BlossomChestInfo() {
  // @@protoc_insertion_point(destructor:proto.BlossomChestInfo)
  SharedDtor();
}

void BlossomChestInfo::SharedDtor() {
}

void BlossomChestInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlossomChestInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlossomChestInfo& BlossomChestInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlossomChestInfo* BlossomChestInfo::New(::google::protobuf::Arena* arena) const {
  BlossomChestInfo* n = new BlossomChestInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlossomChestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlossomChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  qualify_uid_list_.Clear();
  remain_uid_list_.Clear();
  ::memset(&world_resin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dead_time_) -
      reinterpret_cast<char*>(&world_resin_)) + sizeof(dead_time_));
  _internal_metadata_.Clear();
}

bool BlossomChestInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlossomChestInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 world_resin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_resin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 qualify_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_qualify_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_qualify_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 remain_uid_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_remain_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_remain_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dead_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dead_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlossomChestInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlossomChestInfo)
  return false;
#undef DO_
}

void BlossomChestInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlossomChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 world_resin = 1;
  if (this->world_resin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->world_resin(), output);
  }

  // repeated uint32 qualify_uid_list = 2;
  if (this->qualify_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _qualify_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->qualify_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->qualify_uid_list(i), output);
  }

  // repeated uint32 remain_uid_list = 3;
  if (this->remain_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _remain_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->remain_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->remain_uid_list(i), output);
  }

  // uint32 dead_time = 4;
  if (this->dead_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dead_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlossomChestInfo)
}

::google::protobuf::uint8* BlossomChestInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlossomChestInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 world_resin = 1;
  if (this->world_resin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->world_resin(), target);
  }

  // repeated uint32 qualify_uid_list = 2;
  if (this->qualify_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _qualify_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->qualify_uid_list_, target);
  }

  // repeated uint32 remain_uid_list = 3;
  if (this->remain_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _remain_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->remain_uid_list_, target);
  }

  // uint32 dead_time = 4;
  if (this->dead_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dead_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlossomChestInfo)
  return target;
}

size_t BlossomChestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlossomChestInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 qualify_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->qualify_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _qualify_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 remain_uid_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->remain_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _remain_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 world_resin = 1;
  if (this->world_resin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_resin());
  }

  // uint32 dead_time = 4;
  if (this->dead_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dead_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlossomChestInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlossomChestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BlossomChestInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlossomChestInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlossomChestInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlossomChestInfo)
    MergeFrom(*source);
  }
}

void BlossomChestInfo::MergeFrom(const BlossomChestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlossomChestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  qualify_uid_list_.MergeFrom(from.qualify_uid_list_);
  remain_uid_list_.MergeFrom(from.remain_uid_list_);
  if (from.world_resin() != 0) {
    set_world_resin(from.world_resin());
  }
  if (from.dead_time() != 0) {
    set_dead_time(from.dead_time());
  }
}

void BlossomChestInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlossomChestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlossomChestInfo::CopyFrom(const BlossomChestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlossomChestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlossomChestInfo::IsInitialized() const {
  return true;
}

void BlossomChestInfo::Swap(BlossomChestInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlossomChestInfo::InternalSwap(BlossomChestInfo* other) {
  using std::swap;
  qualify_uid_list_.InternalSwap(&other->qualify_uid_list_);
  remain_uid_list_.InternalSwap(&other->remain_uid_list_);
  swap(world_resin_, other->world_resin_);
  swap(dead_time_, other->dead_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlossomChestInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlossomChestInfo

// uint32 world_resin = 1;
void BlossomChestInfo::clear_world_resin() {
  world_resin_ = 0u;
}
::google::protobuf::uint32 BlossomChestInfo::world_resin() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.world_resin)
  return world_resin_;
}
void BlossomChestInfo::set_world_resin(::google::protobuf::uint32 value) {
  
  world_resin_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.world_resin)
}

// repeated uint32 qualify_uid_list = 2;
int BlossomChestInfo::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
void BlossomChestInfo::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
::google::protobuf::uint32 BlossomChestInfo::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
void BlossomChestInfo::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.qualify_uid_list)
}
void BlossomChestInfo::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestInfo.qualify_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestInfo::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestInfo.qualify_uid_list)
  return qualify_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestInfo::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestInfo.qualify_uid_list)
  return &qualify_uid_list_;
}

// repeated uint32 remain_uid_list = 3;
int BlossomChestInfo::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
void BlossomChestInfo::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
::google::protobuf::uint32 BlossomChestInfo::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.remain_uid_list)
  return remain_uid_list_.Get(index);
}
void BlossomChestInfo::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.remain_uid_list)
}
void BlossomChestInfo::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestInfo.remain_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestInfo::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestInfo.remain_uid_list)
  return remain_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestInfo::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestInfo.remain_uid_list)
  return &remain_uid_list_;
}

// uint32 dead_time = 4;
void BlossomChestInfo::clear_dead_time() {
  dead_time_ = 0u;
}
::google::protobuf::uint32 BlossomChestInfo::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfo.dead_time)
  return dead_time_;
}
void BlossomChestInfo::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfo.dead_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneGadgetInfo::kGadgetIdFieldNumber;
const int SceneGadgetInfo::kGroupIdFieldNumber;
const int SceneGadgetInfo::kConfigIdFieldNumber;
const int SceneGadgetInfo::kOwnerEntityIdFieldNumber;
const int SceneGadgetInfo::kBornTypeFieldNumber;
const int SceneGadgetInfo::kGadgetStateFieldNumber;
const int SceneGadgetInfo::kGadgetTypeFieldNumber;
const int SceneGadgetInfo::kIsShowCutsceneFieldNumber;
const int SceneGadgetInfo::kAuthorityPeerIdFieldNumber;
const int SceneGadgetInfo::kIsEnableInteractFieldNumber;
const int SceneGadgetInfo::kInteractIdFieldNumber;
const int SceneGadgetInfo::kTrifleItemFieldNumber;
const int SceneGadgetInfo::kGatherGadgetFieldNumber;
const int SceneGadgetInfo::kWorktopFieldNumber;
const int SceneGadgetInfo::kClientGadgetFieldNumber;
const int SceneGadgetInfo::kPlatformFieldNumber;
const int SceneGadgetInfo::kWeatherFieldNumber;
const int SceneGadgetInfo::kAbilityGadgetFieldNumber;
const int SceneGadgetInfo::kStatueGadgetFieldNumber;
const int SceneGadgetInfo::kBossChestFieldNumber;
const int SceneGadgetInfo::kBlossomChestFieldNumber;
const int SceneGadgetInfo::kMarkFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneGadgetInfo::SceneGadgetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneGadgetInfo)
}
SceneGadgetInfo::SceneGadgetInfo(const SceneGadgetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_id_, &from.gadget_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mark_flag_) -
    reinterpret_cast<char*>(&gadget_id_)) + sizeof(mark_flag_));
  clear_has_content();
  switch (from.content_case()) {
    case kTrifleItem: {
      mutable_trifle_item()->::proto::Item::MergeFrom(from.trifle_item());
      break;
    }
    case kGatherGadget: {
      mutable_gather_gadget()->::proto::GatherGadgetInfo::MergeFrom(from.gather_gadget());
      break;
    }
    case kWorktop: {
      mutable_worktop()->::proto::WorktopInfo::MergeFrom(from.worktop());
      break;
    }
    case kClientGadget: {
      mutable_client_gadget()->::proto::ClientGadgetInfo::MergeFrom(from.client_gadget());
      break;
    }
    case kPlatform: {
      mutable_platform()->::proto::PlatformInfo::MergeFrom(from.platform());
      break;
    }
    case kWeather: {
      mutable_weather()->::proto::WeatherInfo::MergeFrom(from.weather());
      break;
    }
    case kAbilityGadget: {
      mutable_ability_gadget()->::proto::AbilityGadgetInfo::MergeFrom(from.ability_gadget());
      break;
    }
    case kStatueGadget: {
      mutable_statue_gadget()->::proto::StatueGadgetInfo::MergeFrom(from.statue_gadget());
      break;
    }
    case kBossChest: {
      mutable_boss_chest()->::proto::BossChestInfo::MergeFrom(from.boss_chest());
      break;
    }
    case kBlossomChest: {
      mutable_blossom_chest()->::proto::BlossomChestInfo::MergeFrom(from.blossom_chest());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneGadgetInfo)
}

void SceneGadgetInfo::SharedCtor() {
  ::memset(&gadget_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mark_flag_) -
      reinterpret_cast<char*>(&gadget_id_)) + sizeof(mark_flag_));
  clear_has_content();
  _cached_size_ = 0;
}

SceneGadgetInfo::~SceneGadgetInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneGadgetInfo)
  SharedDtor();
}

void SceneGadgetInfo::SharedDtor() {
  if (has_content()) {
    clear_content();
  }
}

void SceneGadgetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneGadgetInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneGadgetInfo& SceneGadgetInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneGadgetInfo* SceneGadgetInfo::New(::google::protobuf::Arena* arena) const {
  SceneGadgetInfo* n = new SceneGadgetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneGadgetInfo::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:proto.SceneGadgetInfo)
  switch (content_case()) {
    case kTrifleItem: {
      delete content_.trifle_item_;
      break;
    }
    case kGatherGadget: {
      delete content_.gather_gadget_;
      break;
    }
    case kWorktop: {
      delete content_.worktop_;
      break;
    }
    case kClientGadget: {
      delete content_.client_gadget_;
      break;
    }
    case kPlatform: {
      delete content_.platform_;
      break;
    }
    case kWeather: {
      delete content_.weather_;
      break;
    }
    case kAbilityGadget: {
      delete content_.ability_gadget_;
      break;
    }
    case kStatueGadget: {
      delete content_.statue_gadget_;
      break;
    }
    case kBossChest: {
      delete content_.boss_chest_;
      break;
    }
    case kBlossomChest: {
      delete content_.blossom_chest_;
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void SceneGadgetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mark_flag_) -
      reinterpret_cast<char*>(&gadget_id_)) + sizeof(mark_flag_));
  clear_content();
  _internal_metadata_.Clear();
}

bool SceneGadgetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneGadgetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 owner_entity_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GadgetBornType born_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_born_type(static_cast< ::proto::GadgetBornType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_show_cutscene = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_show_cutscene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 authority_peer_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authority_peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_enable_interact = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_enable_interact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 interact_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &interact_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Item trifle_item = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trifle_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GatherGadgetInfo gather_gadget = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gather_gadget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WorktopInfo worktop = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_worktop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ClientGadgetInfo client_gadget = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_client_gadget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlatformInfo platform = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_platform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.WeatherInfo weather = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weather()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilityGadgetInfo ability_gadget = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_gadget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.StatueGadgetInfo statue_gadget = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statue_gadget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BossChestInfo boss_chest = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_boss_chest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mark_flag = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mark_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BlossomChestInfo blossom_chest = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blossom_chest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneGadgetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneGadgetInfo)
  return false;
#undef DO_
}

void SceneGadgetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_id = 1;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gadget_id(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->config_id(), output);
  }

  // uint32 owner_entity_id = 4;
  if (this->owner_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->owner_entity_id(), output);
  }

  // .proto.GadgetBornType born_type = 5;
  if (this->born_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->born_type(), output);
  }

  // uint32 gadget_state = 6;
  if (this->gadget_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gadget_state(), output);
  }

  // uint32 gadget_type = 7;
  if (this->gadget_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->gadget_type(), output);
  }

  // bool is_show_cutscene = 8;
  if (this->is_show_cutscene() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_show_cutscene(), output);
  }

  // uint32 authority_peer_id = 9;
  if (this->authority_peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->authority_peer_id(), output);
  }

  // bool is_enable_interact = 10;
  if (this->is_enable_interact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_enable_interact(), output);
  }

  // uint32 interact_id = 11;
  if (this->interact_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->interact_id(), output);
  }

  // .proto.Item trifle_item = 12;
  if (has_trifle_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *content_.trifle_item_, output);
  }

  // .proto.GatherGadgetInfo gather_gadget = 13;
  if (has_gather_gadget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *content_.gather_gadget_, output);
  }

  // .proto.WorktopInfo worktop = 14;
  if (has_worktop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *content_.worktop_, output);
  }

  // .proto.ClientGadgetInfo client_gadget = 15;
  if (has_client_gadget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *content_.client_gadget_, output);
  }

  // .proto.PlatformInfo platform = 16;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *content_.platform_, output);
  }

  // .proto.WeatherInfo weather = 17;
  if (has_weather()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *content_.weather_, output);
  }

  // .proto.AbilityGadgetInfo ability_gadget = 18;
  if (has_ability_gadget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *content_.ability_gadget_, output);
  }

  // .proto.StatueGadgetInfo statue_gadget = 19;
  if (has_statue_gadget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *content_.statue_gadget_, output);
  }

  // .proto.BossChestInfo boss_chest = 20;
  if (has_boss_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *content_.boss_chest_, output);
  }

  // uint32 mark_flag = 21;
  if (this->mark_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->mark_flag(), output);
  }

  // .proto.BlossomChestInfo blossom_chest = 41;
  if (has_blossom_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, *content_.blossom_chest_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneGadgetInfo)
}

::google::protobuf::uint8* SceneGadgetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_id = 1;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gadget_id(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->config_id(), target);
  }

  // uint32 owner_entity_id = 4;
  if (this->owner_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->owner_entity_id(), target);
  }

  // .proto.GadgetBornType born_type = 5;
  if (this->born_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->born_type(), target);
  }

  // uint32 gadget_state = 6;
  if (this->gadget_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gadget_state(), target);
  }

  // uint32 gadget_type = 7;
  if (this->gadget_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->gadget_type(), target);
  }

  // bool is_show_cutscene = 8;
  if (this->is_show_cutscene() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_show_cutscene(), target);
  }

  // uint32 authority_peer_id = 9;
  if (this->authority_peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->authority_peer_id(), target);
  }

  // bool is_enable_interact = 10;
  if (this->is_enable_interact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_enable_interact(), target);
  }

  // uint32 interact_id = 11;
  if (this->interact_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->interact_id(), target);
  }

  // .proto.Item trifle_item = 12;
  if (has_trifle_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *content_.trifle_item_, deterministic, target);
  }

  // .proto.GatherGadgetInfo gather_gadget = 13;
  if (has_gather_gadget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *content_.gather_gadget_, deterministic, target);
  }

  // .proto.WorktopInfo worktop = 14;
  if (has_worktop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *content_.worktop_, deterministic, target);
  }

  // .proto.ClientGadgetInfo client_gadget = 15;
  if (has_client_gadget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *content_.client_gadget_, deterministic, target);
  }

  // .proto.PlatformInfo platform = 16;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *content_.platform_, deterministic, target);
  }

  // .proto.WeatherInfo weather = 17;
  if (has_weather()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *content_.weather_, deterministic, target);
  }

  // .proto.AbilityGadgetInfo ability_gadget = 18;
  if (has_ability_gadget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *content_.ability_gadget_, deterministic, target);
  }

  // .proto.StatueGadgetInfo statue_gadget = 19;
  if (has_statue_gadget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *content_.statue_gadget_, deterministic, target);
  }

  // .proto.BossChestInfo boss_chest = 20;
  if (has_boss_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *content_.boss_chest_, deterministic, target);
  }

  // uint32 mark_flag = 21;
  if (this->mark_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->mark_flag(), target);
  }

  // .proto.BlossomChestInfo blossom_chest = 41;
  if (has_blossom_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        41, *content_.blossom_chest_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneGadgetInfo)
  return target;
}

size_t SceneGadgetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneGadgetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_id = 1;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 owner_entity_id = 4;
  if (this->owner_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_entity_id());
  }

  // .proto.GadgetBornType born_type = 5;
  if (this->born_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->born_type());
  }

  // uint32 gadget_state = 6;
  if (this->gadget_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_state());
  }

  // uint32 gadget_type = 7;
  if (this->gadget_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_type());
  }

  // uint32 authority_peer_id = 9;
  if (this->authority_peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authority_peer_id());
  }

  // bool is_show_cutscene = 8;
  if (this->is_show_cutscene() != 0) {
    total_size += 1 + 1;
  }

  // bool is_enable_interact = 10;
  if (this->is_enable_interact() != 0) {
    total_size += 1 + 1;
  }

  // uint32 interact_id = 11;
  if (this->interact_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->interact_id());
  }

  // uint32 mark_flag = 21;
  if (this->mark_flag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mark_flag());
  }

  switch (content_case()) {
    // .proto.Item trifle_item = 12;
    case kTrifleItem: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.trifle_item_);
      break;
    }
    // .proto.GatherGadgetInfo gather_gadget = 13;
    case kGatherGadget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.gather_gadget_);
      break;
    }
    // .proto.WorktopInfo worktop = 14;
    case kWorktop: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.worktop_);
      break;
    }
    // .proto.ClientGadgetInfo client_gadget = 15;
    case kClientGadget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.client_gadget_);
      break;
    }
    // .proto.PlatformInfo platform = 16;
    case kPlatform: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.platform_);
      break;
    }
    // .proto.WeatherInfo weather = 17;
    case kWeather: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.weather_);
      break;
    }
    // .proto.AbilityGadgetInfo ability_gadget = 18;
    case kAbilityGadget: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.ability_gadget_);
      break;
    }
    // .proto.StatueGadgetInfo statue_gadget = 19;
    case kStatueGadget: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.statue_gadget_);
      break;
    }
    // .proto.BossChestInfo boss_chest = 20;
    case kBossChest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.boss_chest_);
      break;
    }
    // .proto.BlossomChestInfo blossom_chest = 41;
    case kBlossomChest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.blossom_chest_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneGadgetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneGadgetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneGadgetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneGadgetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneGadgetInfo)
    MergeFrom(*source);
  }
}

void SceneGadgetInfo::MergeFrom(const SceneGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.owner_entity_id() != 0) {
    set_owner_entity_id(from.owner_entity_id());
  }
  if (from.born_type() != 0) {
    set_born_type(from.born_type());
  }
  if (from.gadget_state() != 0) {
    set_gadget_state(from.gadget_state());
  }
  if (from.gadget_type() != 0) {
    set_gadget_type(from.gadget_type());
  }
  if (from.authority_peer_id() != 0) {
    set_authority_peer_id(from.authority_peer_id());
  }
  if (from.is_show_cutscene() != 0) {
    set_is_show_cutscene(from.is_show_cutscene());
  }
  if (from.is_enable_interact() != 0) {
    set_is_enable_interact(from.is_enable_interact());
  }
  if (from.interact_id() != 0) {
    set_interact_id(from.interact_id());
  }
  if (from.mark_flag() != 0) {
    set_mark_flag(from.mark_flag());
  }
  switch (from.content_case()) {
    case kTrifleItem: {
      mutable_trifle_item()->::proto::Item::MergeFrom(from.trifle_item());
      break;
    }
    case kGatherGadget: {
      mutable_gather_gadget()->::proto::GatherGadgetInfo::MergeFrom(from.gather_gadget());
      break;
    }
    case kWorktop: {
      mutable_worktop()->::proto::WorktopInfo::MergeFrom(from.worktop());
      break;
    }
    case kClientGadget: {
      mutable_client_gadget()->::proto::ClientGadgetInfo::MergeFrom(from.client_gadget());
      break;
    }
    case kPlatform: {
      mutable_platform()->::proto::PlatformInfo::MergeFrom(from.platform());
      break;
    }
    case kWeather: {
      mutable_weather()->::proto::WeatherInfo::MergeFrom(from.weather());
      break;
    }
    case kAbilityGadget: {
      mutable_ability_gadget()->::proto::AbilityGadgetInfo::MergeFrom(from.ability_gadget());
      break;
    }
    case kStatueGadget: {
      mutable_statue_gadget()->::proto::StatueGadgetInfo::MergeFrom(from.statue_gadget());
      break;
    }
    case kBossChest: {
      mutable_boss_chest()->::proto::BossChestInfo::MergeFrom(from.boss_chest());
      break;
    }
    case kBlossomChest: {
      mutable_blossom_chest()->::proto::BlossomChestInfo::MergeFrom(from.blossom_chest());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void SceneGadgetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneGadgetInfo::CopyFrom(const SceneGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneGadgetInfo::IsInitialized() const {
  return true;
}

void SceneGadgetInfo::Swap(SceneGadgetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneGadgetInfo::InternalSwap(SceneGadgetInfo* other) {
  using std::swap;
  swap(gadget_id_, other->gadget_id_);
  swap(group_id_, other->group_id_);
  swap(config_id_, other->config_id_);
  swap(owner_entity_id_, other->owner_entity_id_);
  swap(born_type_, other->born_type_);
  swap(gadget_state_, other->gadget_state_);
  swap(gadget_type_, other->gadget_type_);
  swap(authority_peer_id_, other->authority_peer_id_);
  swap(is_show_cutscene_, other->is_show_cutscene_);
  swap(is_enable_interact_, other->is_enable_interact_);
  swap(interact_id_, other->interact_id_);
  swap(mark_flag_, other->mark_flag_);
  swap(content_, other->content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneGadgetInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneGadgetInfo

// uint32 gadget_id = 1;
void SceneGadgetInfo::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_id)
  return gadget_id_;
}
void SceneGadgetInfo::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_id)
}

// uint32 group_id = 2;
void SceneGadgetInfo::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::group_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.group_id)
  return group_id_;
}
void SceneGadgetInfo::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.group_id)
}

// uint32 config_id = 3;
void SceneGadgetInfo::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.config_id)
  return config_id_;
}
void SceneGadgetInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.config_id)
}

// uint32 owner_entity_id = 4;
void SceneGadgetInfo::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.owner_entity_id)
  return owner_entity_id_;
}
void SceneGadgetInfo::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.owner_entity_id)
}

// .proto.GadgetBornType born_type = 5;
void SceneGadgetInfo::clear_born_type() {
  born_type_ = 0;
}
::proto::GadgetBornType SceneGadgetInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.born_type)
  return static_cast< ::proto::GadgetBornType >(born_type_);
}
void SceneGadgetInfo::set_born_type(::proto::GadgetBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.born_type)
}

// uint32 gadget_state = 6;
void SceneGadgetInfo::clear_gadget_state() {
  gadget_state_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_state)
  return gadget_state_;
}
void SceneGadgetInfo::set_gadget_state(::google::protobuf::uint32 value) {
  
  gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_state)
}

// uint32 gadget_type = 7;
void SceneGadgetInfo::clear_gadget_type() {
  gadget_type_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::gadget_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gadget_type)
  return gadget_type_;
}
void SceneGadgetInfo::set_gadget_type(::google::protobuf::uint32 value) {
  
  gadget_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.gadget_type)
}

// bool is_show_cutscene = 8;
void SceneGadgetInfo::clear_is_show_cutscene() {
  is_show_cutscene_ = false;
}
bool SceneGadgetInfo::is_show_cutscene() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.is_show_cutscene)
  return is_show_cutscene_;
}
void SceneGadgetInfo::set_is_show_cutscene(bool value) {
  
  is_show_cutscene_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.is_show_cutscene)
}

// uint32 authority_peer_id = 9;
void SceneGadgetInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.authority_peer_id)
  return authority_peer_id_;
}
void SceneGadgetInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.authority_peer_id)
}

// bool is_enable_interact = 10;
void SceneGadgetInfo::clear_is_enable_interact() {
  is_enable_interact_ = false;
}
bool SceneGadgetInfo::is_enable_interact() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.is_enable_interact)
  return is_enable_interact_;
}
void SceneGadgetInfo::set_is_enable_interact(bool value) {
  
  is_enable_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.is_enable_interact)
}

// uint32 interact_id = 11;
void SceneGadgetInfo::clear_interact_id() {
  interact_id_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::interact_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.interact_id)
  return interact_id_;
}
void SceneGadgetInfo::set_interact_id(::google::protobuf::uint32 value) {
  
  interact_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.interact_id)
}

// .proto.Item trifle_item = 12;
bool SceneGadgetInfo::has_trifle_item() const {
  return content_case() == kTrifleItem;
}
void SceneGadgetInfo::set_has_trifle_item() {
  _oneof_case_[0] = kTrifleItem;
}
void SceneGadgetInfo::clear_trifle_item() {
  if (has_trifle_item()) {
    delete content_.trifle_item_;
    clear_has_content();
  }
}
 const ::proto::Item& SceneGadgetInfo::trifle_item() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.trifle_item)
  return has_trifle_item()
      ? *content_.trifle_item_
      : ::proto::Item::default_instance();
}
::proto::Item* SceneGadgetInfo::mutable_trifle_item() {
  if (!has_trifle_item()) {
    clear_content();
    set_has_trifle_item();
    content_.trifle_item_ = new ::proto::Item;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.trifle_item)
  return content_.trifle_item_;
}
::proto::Item* SceneGadgetInfo::release_trifle_item() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.trifle_item)
  if (has_trifle_item()) {
    clear_has_content();
    ::proto::Item* temp = content_.trifle_item_;
    content_.trifle_item_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_trifle_item(::proto::Item* trifle_item) {
  clear_content();
  if (trifle_item) {
    set_has_trifle_item();
    content_.trifle_item_ = trifle_item;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.trifle_item)
}

// .proto.GatherGadgetInfo gather_gadget = 13;
bool SceneGadgetInfo::has_gather_gadget() const {
  return content_case() == kGatherGadget;
}
void SceneGadgetInfo::set_has_gather_gadget() {
  _oneof_case_[0] = kGatherGadget;
}
void SceneGadgetInfo::clear_gather_gadget() {
  if (has_gather_gadget()) {
    delete content_.gather_gadget_;
    clear_has_content();
  }
}
 const ::proto::GatherGadgetInfo& SceneGadgetInfo::gather_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.gather_gadget)
  return has_gather_gadget()
      ? *content_.gather_gadget_
      : ::proto::GatherGadgetInfo::default_instance();
}
::proto::GatherGadgetInfo* SceneGadgetInfo::mutable_gather_gadget() {
  if (!has_gather_gadget()) {
    clear_content();
    set_has_gather_gadget();
    content_.gather_gadget_ = new ::proto::GatherGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.gather_gadget)
  return content_.gather_gadget_;
}
::proto::GatherGadgetInfo* SceneGadgetInfo::release_gather_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.gather_gadget)
  if (has_gather_gadget()) {
    clear_has_content();
    ::proto::GatherGadgetInfo* temp = content_.gather_gadget_;
    content_.gather_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_gather_gadget(::proto::GatherGadgetInfo* gather_gadget) {
  clear_content();
  if (gather_gadget) {
    set_has_gather_gadget();
    content_.gather_gadget_ = gather_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.gather_gadget)
}

// .proto.WorktopInfo worktop = 14;
bool SceneGadgetInfo::has_worktop() const {
  return content_case() == kWorktop;
}
void SceneGadgetInfo::set_has_worktop() {
  _oneof_case_[0] = kWorktop;
}
void SceneGadgetInfo::clear_worktop() {
  if (has_worktop()) {
    delete content_.worktop_;
    clear_has_content();
  }
}
 const ::proto::WorktopInfo& SceneGadgetInfo::worktop() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.worktop)
  return has_worktop()
      ? *content_.worktop_
      : ::proto::WorktopInfo::default_instance();
}
::proto::WorktopInfo* SceneGadgetInfo::mutable_worktop() {
  if (!has_worktop()) {
    clear_content();
    set_has_worktop();
    content_.worktop_ = new ::proto::WorktopInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.worktop)
  return content_.worktop_;
}
::proto::WorktopInfo* SceneGadgetInfo::release_worktop() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.worktop)
  if (has_worktop()) {
    clear_has_content();
    ::proto::WorktopInfo* temp = content_.worktop_;
    content_.worktop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_worktop(::proto::WorktopInfo* worktop) {
  clear_content();
  if (worktop) {
    set_has_worktop();
    content_.worktop_ = worktop;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.worktop)
}

// .proto.ClientGadgetInfo client_gadget = 15;
bool SceneGadgetInfo::has_client_gadget() const {
  return content_case() == kClientGadget;
}
void SceneGadgetInfo::set_has_client_gadget() {
  _oneof_case_[0] = kClientGadget;
}
void SceneGadgetInfo::clear_client_gadget() {
  if (has_client_gadget()) {
    delete content_.client_gadget_;
    clear_has_content();
  }
}
 const ::proto::ClientGadgetInfo& SceneGadgetInfo::client_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.client_gadget)
  return has_client_gadget()
      ? *content_.client_gadget_
      : ::proto::ClientGadgetInfo::default_instance();
}
::proto::ClientGadgetInfo* SceneGadgetInfo::mutable_client_gadget() {
  if (!has_client_gadget()) {
    clear_content();
    set_has_client_gadget();
    content_.client_gadget_ = new ::proto::ClientGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.client_gadget)
  return content_.client_gadget_;
}
::proto::ClientGadgetInfo* SceneGadgetInfo::release_client_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.client_gadget)
  if (has_client_gadget()) {
    clear_has_content();
    ::proto::ClientGadgetInfo* temp = content_.client_gadget_;
    content_.client_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_client_gadget(::proto::ClientGadgetInfo* client_gadget) {
  clear_content();
  if (client_gadget) {
    set_has_client_gadget();
    content_.client_gadget_ = client_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.client_gadget)
}

// .proto.PlatformInfo platform = 16;
bool SceneGadgetInfo::has_platform() const {
  return content_case() == kPlatform;
}
void SceneGadgetInfo::set_has_platform() {
  _oneof_case_[0] = kPlatform;
}
void SceneGadgetInfo::clear_platform() {
  if (has_platform()) {
    delete content_.platform_;
    clear_has_content();
  }
}
 const ::proto::PlatformInfo& SceneGadgetInfo::platform() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.platform)
  return has_platform()
      ? *content_.platform_
      : ::proto::PlatformInfo::default_instance();
}
::proto::PlatformInfo* SceneGadgetInfo::mutable_platform() {
  if (!has_platform()) {
    clear_content();
    set_has_platform();
    content_.platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.platform)
  return content_.platform_;
}
::proto::PlatformInfo* SceneGadgetInfo::release_platform() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.platform)
  if (has_platform()) {
    clear_has_content();
    ::proto::PlatformInfo* temp = content_.platform_;
    content_.platform_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_platform(::proto::PlatformInfo* platform) {
  clear_content();
  if (platform) {
    set_has_platform();
    content_.platform_ = platform;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.platform)
}

// .proto.WeatherInfo weather = 17;
bool SceneGadgetInfo::has_weather() const {
  return content_case() == kWeather;
}
void SceneGadgetInfo::set_has_weather() {
  _oneof_case_[0] = kWeather;
}
void SceneGadgetInfo::clear_weather() {
  if (has_weather()) {
    delete content_.weather_;
    clear_has_content();
  }
}
 const ::proto::WeatherInfo& SceneGadgetInfo::weather() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.weather)
  return has_weather()
      ? *content_.weather_
      : ::proto::WeatherInfo::default_instance();
}
::proto::WeatherInfo* SceneGadgetInfo::mutable_weather() {
  if (!has_weather()) {
    clear_content();
    set_has_weather();
    content_.weather_ = new ::proto::WeatherInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.weather)
  return content_.weather_;
}
::proto::WeatherInfo* SceneGadgetInfo::release_weather() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.weather)
  if (has_weather()) {
    clear_has_content();
    ::proto::WeatherInfo* temp = content_.weather_;
    content_.weather_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_weather(::proto::WeatherInfo* weather) {
  clear_content();
  if (weather) {
    set_has_weather();
    content_.weather_ = weather;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.weather)
}

// .proto.AbilityGadgetInfo ability_gadget = 18;
bool SceneGadgetInfo::has_ability_gadget() const {
  return content_case() == kAbilityGadget;
}
void SceneGadgetInfo::set_has_ability_gadget() {
  _oneof_case_[0] = kAbilityGadget;
}
void SceneGadgetInfo::clear_ability_gadget() {
  if (has_ability_gadget()) {
    delete content_.ability_gadget_;
    clear_has_content();
  }
}
 const ::proto::AbilityGadgetInfo& SceneGadgetInfo::ability_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.ability_gadget)
  return has_ability_gadget()
      ? *content_.ability_gadget_
      : ::proto::AbilityGadgetInfo::default_instance();
}
::proto::AbilityGadgetInfo* SceneGadgetInfo::mutable_ability_gadget() {
  if (!has_ability_gadget()) {
    clear_content();
    set_has_ability_gadget();
    content_.ability_gadget_ = new ::proto::AbilityGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.ability_gadget)
  return content_.ability_gadget_;
}
::proto::AbilityGadgetInfo* SceneGadgetInfo::release_ability_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.ability_gadget)
  if (has_ability_gadget()) {
    clear_has_content();
    ::proto::AbilityGadgetInfo* temp = content_.ability_gadget_;
    content_.ability_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_ability_gadget(::proto::AbilityGadgetInfo* ability_gadget) {
  clear_content();
  if (ability_gadget) {
    set_has_ability_gadget();
    content_.ability_gadget_ = ability_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.ability_gadget)
}

// .proto.StatueGadgetInfo statue_gadget = 19;
bool SceneGadgetInfo::has_statue_gadget() const {
  return content_case() == kStatueGadget;
}
void SceneGadgetInfo::set_has_statue_gadget() {
  _oneof_case_[0] = kStatueGadget;
}
void SceneGadgetInfo::clear_statue_gadget() {
  if (has_statue_gadget()) {
    delete content_.statue_gadget_;
    clear_has_content();
  }
}
 const ::proto::StatueGadgetInfo& SceneGadgetInfo::statue_gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.statue_gadget)
  return has_statue_gadget()
      ? *content_.statue_gadget_
      : ::proto::StatueGadgetInfo::default_instance();
}
::proto::StatueGadgetInfo* SceneGadgetInfo::mutable_statue_gadget() {
  if (!has_statue_gadget()) {
    clear_content();
    set_has_statue_gadget();
    content_.statue_gadget_ = new ::proto::StatueGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.statue_gadget)
  return content_.statue_gadget_;
}
::proto::StatueGadgetInfo* SceneGadgetInfo::release_statue_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.statue_gadget)
  if (has_statue_gadget()) {
    clear_has_content();
    ::proto::StatueGadgetInfo* temp = content_.statue_gadget_;
    content_.statue_gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_statue_gadget(::proto::StatueGadgetInfo* statue_gadget) {
  clear_content();
  if (statue_gadget) {
    set_has_statue_gadget();
    content_.statue_gadget_ = statue_gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.statue_gadget)
}

// .proto.BossChestInfo boss_chest = 20;
bool SceneGadgetInfo::has_boss_chest() const {
  return content_case() == kBossChest;
}
void SceneGadgetInfo::set_has_boss_chest() {
  _oneof_case_[0] = kBossChest;
}
void SceneGadgetInfo::clear_boss_chest() {
  if (has_boss_chest()) {
    delete content_.boss_chest_;
    clear_has_content();
  }
}
 const ::proto::BossChestInfo& SceneGadgetInfo::boss_chest() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.boss_chest)
  return has_boss_chest()
      ? *content_.boss_chest_
      : ::proto::BossChestInfo::default_instance();
}
::proto::BossChestInfo* SceneGadgetInfo::mutable_boss_chest() {
  if (!has_boss_chest()) {
    clear_content();
    set_has_boss_chest();
    content_.boss_chest_ = new ::proto::BossChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.boss_chest)
  return content_.boss_chest_;
}
::proto::BossChestInfo* SceneGadgetInfo::release_boss_chest() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.boss_chest)
  if (has_boss_chest()) {
    clear_has_content();
    ::proto::BossChestInfo* temp = content_.boss_chest_;
    content_.boss_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_boss_chest(::proto::BossChestInfo* boss_chest) {
  clear_content();
  if (boss_chest) {
    set_has_boss_chest();
    content_.boss_chest_ = boss_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.boss_chest)
}

// .proto.BlossomChestInfo blossom_chest = 41;
bool SceneGadgetInfo::has_blossom_chest() const {
  return content_case() == kBlossomChest;
}
void SceneGadgetInfo::set_has_blossom_chest() {
  _oneof_case_[0] = kBlossomChest;
}
void SceneGadgetInfo::clear_blossom_chest() {
  if (has_blossom_chest()) {
    delete content_.blossom_chest_;
    clear_has_content();
  }
}
 const ::proto::BlossomChestInfo& SceneGadgetInfo::blossom_chest() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.blossom_chest)
  return has_blossom_chest()
      ? *content_.blossom_chest_
      : ::proto::BlossomChestInfo::default_instance();
}
::proto::BlossomChestInfo* SceneGadgetInfo::mutable_blossom_chest() {
  if (!has_blossom_chest()) {
    clear_content();
    set_has_blossom_chest();
    content_.blossom_chest_ = new ::proto::BlossomChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneGadgetInfo.blossom_chest)
  return content_.blossom_chest_;
}
::proto::BlossomChestInfo* SceneGadgetInfo::release_blossom_chest() {
  // @@protoc_insertion_point(field_release:proto.SceneGadgetInfo.blossom_chest)
  if (has_blossom_chest()) {
    clear_has_content();
    ::proto::BlossomChestInfo* temp = content_.blossom_chest_;
    content_.blossom_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneGadgetInfo::set_allocated_blossom_chest(::proto::BlossomChestInfo* blossom_chest) {
  clear_content();
  if (blossom_chest) {
    set_has_blossom_chest();
    content_.blossom_chest_ = blossom_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneGadgetInfo.blossom_chest)
}

// uint32 mark_flag = 21;
void SceneGadgetInfo::clear_mark_flag() {
  mark_flag_ = 0u;
}
::google::protobuf::uint32 SceneGadgetInfo::mark_flag() const {
  // @@protoc_insertion_point(field_get:proto.SceneGadgetInfo.mark_flag)
  return mark_flag_;
}
void SceneGadgetInfo::set_mark_flag(::google::protobuf::uint32 value) {
  
  mark_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGadgetInfo.mark_flag)
}

bool SceneGadgetInfo::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
void SceneGadgetInfo::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
SceneGadgetInfo::ContentCase SceneGadgetInfo::content_case() const {
  return SceneGadgetInfo::ContentCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnimatorParameterValueInfo::kParaTypeFieldNumber;
const int AnimatorParameterValueInfo::kIntValFieldNumber;
const int AnimatorParameterValueInfo::kFloatValFieldNumber;
const int AnimatorParameterValueInfo::kBoolValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnimatorParameterValueInfo::AnimatorParameterValueInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AnimatorParameterValueInfo)
}
AnimatorParameterValueInfo::AnimatorParameterValueInfo(const AnimatorParameterValueInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  para_type_ = from.para_type_;
  clear_has_paraVal();
  switch (from.paraVal_case()) {
    case kIntVal: {
      set_int_val(from.int_val());
      break;
    }
    case kFloatVal: {
      set_float_val(from.float_val());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case PARAVAL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.AnimatorParameterValueInfo)
}

void AnimatorParameterValueInfo::SharedCtor() {
  para_type_ = 0u;
  clear_has_paraVal();
  _cached_size_ = 0;
}

AnimatorParameterValueInfo::~AnimatorParameterValueInfo() {
  // @@protoc_insertion_point(destructor:proto.AnimatorParameterValueInfo)
  SharedDtor();
}

void AnimatorParameterValueInfo::SharedDtor() {
  if (has_paraVal()) {
    clear_paraVal();
  }
}

void AnimatorParameterValueInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnimatorParameterValueInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnimatorParameterValueInfo& AnimatorParameterValueInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnimatorParameterValueInfo* AnimatorParameterValueInfo::New(::google::protobuf::Arena* arena) const {
  AnimatorParameterValueInfo* n = new AnimatorParameterValueInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnimatorParameterValueInfo::clear_paraVal() {
// @@protoc_insertion_point(one_of_clear_start:proto.AnimatorParameterValueInfo)
  switch (paraVal_case()) {
    case kIntVal: {
      // No need to clear
      break;
    }
    case kFloatVal: {
      // No need to clear
      break;
    }
    case kBoolVal: {
      // No need to clear
      break;
    }
    case PARAVAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAVAL_NOT_SET;
}


void AnimatorParameterValueInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AnimatorParameterValueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  para_type_ = 0u;
  clear_paraVal();
  _internal_metadata_.Clear();
}

bool AnimatorParameterValueInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AnimatorParameterValueInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 para_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &para_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_paraVal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paraVal_.int_val_)));
          set_has_int_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          clear_paraVal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &paraVal_.float_val_)));
          set_has_float_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_val = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_paraVal();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &paraVal_.bool_val_)));
          set_has_bool_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AnimatorParameterValueInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AnimatorParameterValueInfo)
  return false;
#undef DO_
}

void AnimatorParameterValueInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AnimatorParameterValueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 para_type = 1;
  if (this->para_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->para_type(), output);
  }

  // int32 int_val = 2;
  if (has_int_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->int_val(), output);
  }

  // float float_val = 3;
  if (has_float_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->float_val(), output);
  }

  // bool bool_val = 4;
  if (has_bool_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bool_val(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AnimatorParameterValueInfo)
}

::google::protobuf::uint8* AnimatorParameterValueInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AnimatorParameterValueInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 para_type = 1;
  if (this->para_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->para_type(), target);
  }

  // int32 int_val = 2;
  if (has_int_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->int_val(), target);
  }

  // float float_val = 3;
  if (has_float_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->float_val(), target);
  }

  // bool bool_val = 4;
  if (has_bool_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bool_val(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AnimatorParameterValueInfo)
  return target;
}

size_t AnimatorParameterValueInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AnimatorParameterValueInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 para_type = 1;
  if (this->para_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->para_type());
  }

  switch (paraVal_case()) {
    // int32 int_val = 2;
    case kIntVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->int_val());
      break;
    }
    // float float_val = 3;
    case kFloatVal: {
      total_size += 1 + 4;
      break;
    }
    // bool bool_val = 4;
    case kBoolVal: {
      total_size += 1 + 1;
      break;
    }
    case PARAVAL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnimatorParameterValueInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AnimatorParameterValueInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AnimatorParameterValueInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnimatorParameterValueInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AnimatorParameterValueInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AnimatorParameterValueInfo)
    MergeFrom(*source);
  }
}

void AnimatorParameterValueInfo::MergeFrom(const AnimatorParameterValueInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AnimatorParameterValueInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.para_type() != 0) {
    set_para_type(from.para_type());
  }
  switch (from.paraVal_case()) {
    case kIntVal: {
      set_int_val(from.int_val());
      break;
    }
    case kFloatVal: {
      set_float_val(from.float_val());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case PARAVAL_NOT_SET: {
      break;
    }
  }
}

void AnimatorParameterValueInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AnimatorParameterValueInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimatorParameterValueInfo::CopyFrom(const AnimatorParameterValueInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AnimatorParameterValueInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnimatorParameterValueInfo::IsInitialized() const {
  return true;
}

void AnimatorParameterValueInfo::Swap(AnimatorParameterValueInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnimatorParameterValueInfo::InternalSwap(AnimatorParameterValueInfo* other) {
  using std::swap;
  swap(para_type_, other->para_type_);
  swap(paraVal_, other->paraVal_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnimatorParameterValueInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnimatorParameterValueInfo

// uint32 para_type = 1;
void AnimatorParameterValueInfo::clear_para_type() {
  para_type_ = 0u;
}
::google::protobuf::uint32 AnimatorParameterValueInfo::para_type() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.para_type)
  return para_type_;
}
void AnimatorParameterValueInfo::set_para_type(::google::protobuf::uint32 value) {
  
  para_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.para_type)
}

// int32 int_val = 2;
bool AnimatorParameterValueInfo::has_int_val() const {
  return paraVal_case() == kIntVal;
}
void AnimatorParameterValueInfo::set_has_int_val() {
  _oneof_case_[0] = kIntVal;
}
void AnimatorParameterValueInfo::clear_int_val() {
  if (has_int_val()) {
    paraVal_.int_val_ = 0;
    clear_has_paraVal();
  }
}
::google::protobuf::int32 AnimatorParameterValueInfo::int_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.int_val)
  if (has_int_val()) {
    return paraVal_.int_val_;
  }
  return 0;
}
void AnimatorParameterValueInfo::set_int_val(::google::protobuf::int32 value) {
  if (!has_int_val()) {
    clear_paraVal();
    set_has_int_val();
  }
  paraVal_.int_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.int_val)
}

// float float_val = 3;
bool AnimatorParameterValueInfo::has_float_val() const {
  return paraVal_case() == kFloatVal;
}
void AnimatorParameterValueInfo::set_has_float_val() {
  _oneof_case_[0] = kFloatVal;
}
void AnimatorParameterValueInfo::clear_float_val() {
  if (has_float_val()) {
    paraVal_.float_val_ = 0;
    clear_has_paraVal();
  }
}
float AnimatorParameterValueInfo::float_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.float_val)
  if (has_float_val()) {
    return paraVal_.float_val_;
  }
  return 0;
}
void AnimatorParameterValueInfo::set_float_val(float value) {
  if (!has_float_val()) {
    clear_paraVal();
    set_has_float_val();
  }
  paraVal_.float_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.float_val)
}

// bool bool_val = 4;
bool AnimatorParameterValueInfo::has_bool_val() const {
  return paraVal_case() == kBoolVal;
}
void AnimatorParameterValueInfo::set_has_bool_val() {
  _oneof_case_[0] = kBoolVal;
}
void AnimatorParameterValueInfo::clear_bool_val() {
  if (has_bool_val()) {
    paraVal_.bool_val_ = false;
    clear_has_paraVal();
  }
}
bool AnimatorParameterValueInfo::bool_val() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorParameterValueInfo.bool_val)
  if (has_bool_val()) {
    return paraVal_.bool_val_;
  }
  return false;
}
void AnimatorParameterValueInfo::set_bool_val(bool value) {
  if (!has_bool_val()) {
    clear_paraVal();
    set_has_bool_val();
  }
  paraVal_.bool_val_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorParameterValueInfo.bool_val)
}

bool AnimatorParameterValueInfo::has_paraVal() const {
  return paraVal_case() != PARAVAL_NOT_SET;
}
void AnimatorParameterValueInfo::clear_has_paraVal() {
  _oneof_case_[0] = PARAVAL_NOT_SET;
}
AnimatorParameterValueInfo::ParaValCase AnimatorParameterValueInfo::paraVal_case() const {
  return AnimatorParameterValueInfo::ParaValCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServantInfo::kMasterEntityIdFieldNumber;
const int ServantInfo::kBornSlotIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServantInfo::ServantInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServantInfo)
}
ServantInfo::ServantInfo(const ServantInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&master_entity_id_, &from.master_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&born_slot_index_) -
    reinterpret_cast<char*>(&master_entity_id_)) + sizeof(born_slot_index_));
  // @@protoc_insertion_point(copy_constructor:proto.ServantInfo)
}

void ServantInfo::SharedCtor() {
  ::memset(&master_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&born_slot_index_) -
      reinterpret_cast<char*>(&master_entity_id_)) + sizeof(born_slot_index_));
  _cached_size_ = 0;
}

ServantInfo::~ServantInfo() {
  // @@protoc_insertion_point(destructor:proto.ServantInfo)
  SharedDtor();
}

void ServantInfo::SharedDtor() {
}

void ServantInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServantInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServantInfo& ServantInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServantInfo* ServantInfo::New(::google::protobuf::Arena* arena) const {
  ServantInfo* n = new ServantInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServantInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServantInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&master_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&born_slot_index_) -
      reinterpret_cast<char*>(&master_entity_id_)) + sizeof(born_slot_index_));
  _internal_metadata_.Clear();
}

bool ServantInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServantInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 master_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &master_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 born_slot_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &born_slot_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServantInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServantInfo)
  return false;
#undef DO_
}

void ServantInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServantInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 master_entity_id = 1;
  if (this->master_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->master_entity_id(), output);
  }

  // uint32 born_slot_index = 2;
  if (this->born_slot_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->born_slot_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServantInfo)
}

::google::protobuf::uint8* ServantInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServantInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 master_entity_id = 1;
  if (this->master_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->master_entity_id(), target);
  }

  // uint32 born_slot_index = 2;
  if (this->born_slot_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->born_slot_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServantInfo)
  return target;
}

size_t ServantInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServantInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 master_entity_id = 1;
  if (this->master_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->master_entity_id());
  }

  // uint32 born_slot_index = 2;
  if (this->born_slot_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->born_slot_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServantInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServantInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServantInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServantInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServantInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServantInfo)
    MergeFrom(*source);
  }
}

void ServantInfo::MergeFrom(const ServantInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServantInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.master_entity_id() != 0) {
    set_master_entity_id(from.master_entity_id());
  }
  if (from.born_slot_index() != 0) {
    set_born_slot_index(from.born_slot_index());
  }
}

void ServantInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServantInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServantInfo::CopyFrom(const ServantInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServantInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServantInfo::IsInitialized() const {
  return true;
}

void ServantInfo::Swap(ServantInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServantInfo::InternalSwap(ServantInfo* other) {
  using std::swap;
  swap(master_entity_id_, other->master_entity_id_);
  swap(born_slot_index_, other->born_slot_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServantInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServantInfo

// uint32 master_entity_id = 1;
void ServantInfo::clear_master_entity_id() {
  master_entity_id_ = 0u;
}
::google::protobuf::uint32 ServantInfo::master_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ServantInfo.master_entity_id)
  return master_entity_id_;
}
void ServantInfo::set_master_entity_id(::google::protobuf::uint32 value) {
  
  master_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServantInfo.master_entity_id)
}

// uint32 born_slot_index = 2;
void ServantInfo::clear_born_slot_index() {
  born_slot_index_ = 0u;
}
::google::protobuf::uint32 ServantInfo::born_slot_index() const {
  // @@protoc_insertion_point(field_get:proto.ServantInfo.born_slot_index)
  return born_slot_index_;
}
void ServantInfo::set_born_slot_index(::google::protobuf::uint32 value) {
  
  born_slot_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ServantInfo.born_slot_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneEntityAiInfo::SceneEntityAiInfo_SkillCdMapEntry::SceneEntityAiInfo_SkillCdMapEntry() {}
SceneEntityAiInfo::SceneEntityAiInfo_SkillCdMapEntry::SceneEntityAiInfo_SkillCdMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneEntityAiInfo::SceneEntityAiInfo_SkillCdMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[61];
}
void SceneEntityAiInfo::SceneEntityAiInfo_SkillCdMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneEntityAiInfo::SceneEntityAiInfo_SkillCdMapEntry::MergeFrom(const SceneEntityAiInfo_SkillCdMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneEntityAiInfo::SceneEntityAiInfo_AiThreatMapEntry::SceneEntityAiInfo_AiThreatMapEntry() {}
SceneEntityAiInfo::SceneEntityAiInfo_AiThreatMapEntry::SceneEntityAiInfo_AiThreatMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneEntityAiInfo::SceneEntityAiInfo_AiThreatMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[62];
}
void SceneEntityAiInfo::SceneEntityAiInfo_AiThreatMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneEntityAiInfo::SceneEntityAiInfo_AiThreatMapEntry::MergeFrom(const SceneEntityAiInfo_AiThreatMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityAiInfo::kIsAiOpenFieldNumber;
const int SceneEntityAiInfo::kBornPosFieldNumber;
const int SceneEntityAiInfo::kSkillCdMapFieldNumber;
const int SceneEntityAiInfo::kServantInfoFieldNumber;
const int SceneEntityAiInfo::kAiThreatMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityAiInfo::SceneEntityAiInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityAiInfo)
}
SceneEntityAiInfo::SceneEntityAiInfo(const SceneEntityAiInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skill_cd_map_.MergeFrom(from.skill_cd_map_);
  ai_threat_map_.MergeFrom(from.ai_threat_map_);
  if (from.has_born_pos()) {
    born_pos_ = new ::proto::Vector(*from.born_pos_);
  } else {
    born_pos_ = NULL;
  }
  if (from.has_servant_info()) {
    servant_info_ = new ::proto::ServantInfo(*from.servant_info_);
  } else {
    servant_info_ = NULL;
  }
  is_ai_open_ = from.is_ai_open_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityAiInfo)
}

void SceneEntityAiInfo::SharedCtor() {
  ::memset(&born_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ai_open_) -
      reinterpret_cast<char*>(&born_pos_)) + sizeof(is_ai_open_));
  _cached_size_ = 0;
}

SceneEntityAiInfo::~SceneEntityAiInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityAiInfo)
  SharedDtor();
}

void SceneEntityAiInfo::SharedDtor() {
  if (this != internal_default_instance()) delete born_pos_;
  if (this != internal_default_instance()) delete servant_info_;
}

void SceneEntityAiInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityAiInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityAiInfo& SceneEntityAiInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityAiInfo* SceneEntityAiInfo::New(::google::protobuf::Arena* arena) const {
  SceneEntityAiInfo* n = new SceneEntityAiInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityAiInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityAiInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skill_cd_map_.Clear();
  ai_threat_map_.Clear();
  if (GetArenaNoVirtual() == NULL && born_pos_ != NULL) {
    delete born_pos_;
  }
  born_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && servant_info_ != NULL) {
    delete servant_info_;
  }
  servant_info_ = NULL;
  is_ai_open_ = false;
  _internal_metadata_.Clear();
}

bool SceneEntityAiInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityAiInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_ai_open = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ai_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector born_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_born_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> skill_cd_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          SceneEntityAiInfo_SkillCdMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneEntityAiInfo_SkillCdMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&skill_cd_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ServantInfo servant_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_servant_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> ai_threat_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          SceneEntityAiInfo_AiThreatMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneEntityAiInfo_AiThreatMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&ai_threat_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityAiInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityAiInfo)
  return false;
#undef DO_
}

void SceneEntityAiInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityAiInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_ai_open = 1;
  if (this->is_ai_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_ai_open(), output);
  }

  // .proto.Vector born_pos = 2;
  if (this->has_born_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->born_pos_, output);
  }

  // map<uint32, uint32> skill_cd_map = 3;
  if (!this->skill_cd_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->skill_cd_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_cd_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_cd_map().begin();
          it != this->skill_cd_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityAiInfo_SkillCdMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_cd_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityAiInfo_SkillCdMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_cd_map().begin();
          it != this->skill_cd_map().end(); ++it) {
        entry.reset(skill_cd_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // .proto.ServantInfo servant_info = 4;
  if (this->has_servant_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->servant_info_, output);
  }

  // map<uint32, uint32> ai_threat_map = 5;
  if (!this->ai_threat_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->ai_threat_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ai_threat_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->ai_threat_map().begin();
          it != this->ai_threat_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityAiInfo_AiThreatMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ai_threat_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityAiInfo_AiThreatMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->ai_threat_map().begin();
          it != this->ai_threat_map().end(); ++it) {
        entry.reset(ai_threat_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityAiInfo)
}

::google::protobuf::uint8* SceneEntityAiInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityAiInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_ai_open = 1;
  if (this->is_ai_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_ai_open(), target);
  }

  // .proto.Vector born_pos = 2;
  if (this->has_born_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->born_pos_, deterministic, target);
  }

  // map<uint32, uint32> skill_cd_map = 3;
  if (!this->skill_cd_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->skill_cd_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_cd_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_cd_map().begin();
          it != this->skill_cd_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityAiInfo_SkillCdMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_cd_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityAiInfo_SkillCdMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_cd_map().begin();
          it != this->skill_cd_map().end(); ++it) {
        entry.reset(skill_cd_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // .proto.ServantInfo servant_info = 4;
  if (this->has_servant_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->servant_info_, deterministic, target);
  }

  // map<uint32, uint32> ai_threat_map = 5;
  if (!this->ai_threat_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->ai_threat_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ai_threat_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->ai_threat_map().begin();
          it != this->ai_threat_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityAiInfo_AiThreatMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ai_threat_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityAiInfo_AiThreatMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->ai_threat_map().begin();
          it != this->ai_threat_map().end(); ++it) {
        entry.reset(ai_threat_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityAiInfo)
  return target;
}

size_t SceneEntityAiInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityAiInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> skill_cd_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->skill_cd_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneEntityAiInfo_SkillCdMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->skill_cd_map().begin();
        it != this->skill_cd_map().end(); ++it) {
      entry.reset(skill_cd_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> ai_threat_map = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ai_threat_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneEntityAiInfo_AiThreatMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->ai_threat_map().begin();
        it != this->ai_threat_map().end(); ++it) {
      entry.reset(ai_threat_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.Vector born_pos = 2;
  if (this->has_born_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->born_pos_);
  }

  // .proto.ServantInfo servant_info = 4;
  if (this->has_servant_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->servant_info_);
  }

  // bool is_ai_open = 1;
  if (this->is_ai_open() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityAiInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityAiInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityAiInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityAiInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityAiInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityAiInfo)
    MergeFrom(*source);
  }
}

void SceneEntityAiInfo::MergeFrom(const SceneEntityAiInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityAiInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skill_cd_map_.MergeFrom(from.skill_cd_map_);
  ai_threat_map_.MergeFrom(from.ai_threat_map_);
  if (from.has_born_pos()) {
    mutable_born_pos()->::proto::Vector::MergeFrom(from.born_pos());
  }
  if (from.has_servant_info()) {
    mutable_servant_info()->::proto::ServantInfo::MergeFrom(from.servant_info());
  }
  if (from.is_ai_open() != 0) {
    set_is_ai_open(from.is_ai_open());
  }
}

void SceneEntityAiInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityAiInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityAiInfo::CopyFrom(const SceneEntityAiInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityAiInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityAiInfo::IsInitialized() const {
  return true;
}

void SceneEntityAiInfo::Swap(SceneEntityAiInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityAiInfo::InternalSwap(SceneEntityAiInfo* other) {
  using std::swap;
  skill_cd_map_.Swap(&other->skill_cd_map_);
  ai_threat_map_.Swap(&other->ai_threat_map_);
  swap(born_pos_, other->born_pos_);
  swap(servant_info_, other->servant_info_);
  swap(is_ai_open_, other->is_ai_open_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityAiInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityAiInfo

// bool is_ai_open = 1;
void SceneEntityAiInfo::clear_is_ai_open() {
  is_ai_open_ = false;
}
bool SceneEntityAiInfo::is_ai_open() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.is_ai_open)
  return is_ai_open_;
}
void SceneEntityAiInfo::set_is_ai_open(bool value) {
  
  is_ai_open_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAiInfo.is_ai_open)
}

// .proto.Vector born_pos = 2;
bool SceneEntityAiInfo::has_born_pos() const {
  return this != internal_default_instance() && born_pos_ != NULL;
}
void SceneEntityAiInfo::clear_born_pos() {
  if (GetArenaNoVirtual() == NULL && born_pos_ != NULL) delete born_pos_;
  born_pos_ = NULL;
}
const ::proto::Vector& SceneEntityAiInfo::born_pos() const {
  const ::proto::Vector* p = born_pos_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.born_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* SceneEntityAiInfo::mutable_born_pos() {
  
  if (born_pos_ == NULL) {
    born_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAiInfo.born_pos)
  return born_pos_;
}
::proto::Vector* SceneEntityAiInfo::release_born_pos() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityAiInfo.born_pos)
  
  ::proto::Vector* temp = born_pos_;
  born_pos_ = NULL;
  return temp;
}
void SceneEntityAiInfo::set_allocated_born_pos(::proto::Vector* born_pos) {
  delete born_pos_;
  born_pos_ = born_pos;
  if (born_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityAiInfo.born_pos)
}

// map<uint32, uint32> skill_cd_map = 3;
int SceneEntityAiInfo::skill_cd_map_size() const {
  return skill_cd_map_.size();
}
void SceneEntityAiInfo::clear_skill_cd_map() {
  skill_cd_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneEntityAiInfo::skill_cd_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityAiInfo.skill_cd_map)
  return skill_cd_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneEntityAiInfo::mutable_skill_cd_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityAiInfo.skill_cd_map)
  return skill_cd_map_.MutableMap();
}

// .proto.ServantInfo servant_info = 4;
bool SceneEntityAiInfo::has_servant_info() const {
  return this != internal_default_instance() && servant_info_ != NULL;
}
void SceneEntityAiInfo::clear_servant_info() {
  if (GetArenaNoVirtual() == NULL && servant_info_ != NULL) delete servant_info_;
  servant_info_ = NULL;
}
const ::proto::ServantInfo& SceneEntityAiInfo::servant_info() const {
  const ::proto::ServantInfo* p = servant_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityAiInfo.servant_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServantInfo*>(
      &::proto::_ServantInfo_default_instance_);
}
::proto::ServantInfo* SceneEntityAiInfo::mutable_servant_info() {
  
  if (servant_info_ == NULL) {
    servant_info_ = new ::proto::ServantInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAiInfo.servant_info)
  return servant_info_;
}
::proto::ServantInfo* SceneEntityAiInfo::release_servant_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityAiInfo.servant_info)
  
  ::proto::ServantInfo* temp = servant_info_;
  servant_info_ = NULL;
  return temp;
}
void SceneEntityAiInfo::set_allocated_servant_info(::proto::ServantInfo* servant_info) {
  delete servant_info_;
  servant_info_ = servant_info;
  if (servant_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityAiInfo.servant_info)
}

// map<uint32, uint32> ai_threat_map = 5;
int SceneEntityAiInfo::ai_threat_map_size() const {
  return ai_threat_map_.size();
}
void SceneEntityAiInfo::clear_ai_threat_map() {
  ai_threat_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SceneEntityAiInfo::ai_threat_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityAiInfo.ai_threat_map)
  return ai_threat_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SceneEntityAiInfo::mutable_ai_threat_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityAiInfo.ai_threat_map)
  return ai_threat_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

EntityRendererChangedInfo::EntityRendererChangedInfo_ChangedRenderersEntry::EntityRendererChangedInfo_ChangedRenderersEntry() {}
EntityRendererChangedInfo::EntityRendererChangedInfo_ChangedRenderersEntry::EntityRendererChangedInfo_ChangedRenderersEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata EntityRendererChangedInfo::EntityRendererChangedInfo_ChangedRenderersEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[64];
}
void EntityRendererChangedInfo::EntityRendererChangedInfo_ChangedRenderersEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void EntityRendererChangedInfo::EntityRendererChangedInfo_ChangedRenderersEntry::MergeFrom(const EntityRendererChangedInfo_ChangedRenderersEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityRendererChangedInfo::kChangedRenderersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityRendererChangedInfo::EntityRendererChangedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityRendererChangedInfo)
}
EntityRendererChangedInfo::EntityRendererChangedInfo(const EntityRendererChangedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  changed_renderers_.MergeFrom(from.changed_renderers_);
  // @@protoc_insertion_point(copy_constructor:proto.EntityRendererChangedInfo)
}

void EntityRendererChangedInfo::SharedCtor() {
  _cached_size_ = 0;
}

EntityRendererChangedInfo::~EntityRendererChangedInfo() {
  // @@protoc_insertion_point(destructor:proto.EntityRendererChangedInfo)
  SharedDtor();
}

void EntityRendererChangedInfo::SharedDtor() {
}

void EntityRendererChangedInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityRendererChangedInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityRendererChangedInfo& EntityRendererChangedInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityRendererChangedInfo* EntityRendererChangedInfo::New(::google::protobuf::Arena* arena) const {
  EntityRendererChangedInfo* n = new EntityRendererChangedInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityRendererChangedInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityRendererChangedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  changed_renderers_.Clear();
  _internal_metadata_.Clear();
}

bool EntityRendererChangedInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityRendererChangedInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, int32> changed_renderers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          EntityRendererChangedInfo_ChangedRenderersEntry::Parser< ::google::protobuf::internal::MapField<
              EntityRendererChangedInfo_ChangedRenderersEntry,
              ::std::string, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 > > parser(&changed_renderers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.EntityRendererChangedInfo.ChangedRenderersEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityRendererChangedInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityRendererChangedInfo)
  return false;
#undef DO_
}

void EntityRendererChangedInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityRendererChangedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, int32> changed_renderers = 1;
  if (!this->changed_renderers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.EntityRendererChangedInfo.ChangedRenderersEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->changed_renderers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->changed_renderers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->changed_renderers().begin();
          it != this->changed_renderers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<EntityRendererChangedInfo_ChangedRenderersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(changed_renderers_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<EntityRendererChangedInfo_ChangedRenderersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->changed_renderers().begin();
          it != this->changed_renderers().end(); ++it) {
        entry.reset(changed_renderers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityRendererChangedInfo)
}

::google::protobuf::uint8* EntityRendererChangedInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityRendererChangedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, int32> changed_renderers = 1;
  if (!this->changed_renderers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.EntityRendererChangedInfo.ChangedRenderersEntry.key");
      }
    };

    if (deterministic &&
        this->changed_renderers().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->changed_renderers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->changed_renderers().begin();
          it != this->changed_renderers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<EntityRendererChangedInfo_ChangedRenderersEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(changed_renderers_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<EntityRendererChangedInfo_ChangedRenderersEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
          it = this->changed_renderers().begin();
          it != this->changed_renderers().end(); ++it) {
        entry.reset(changed_renderers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityRendererChangedInfo)
  return target;
}

size_t EntityRendererChangedInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityRendererChangedInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, int32> changed_renderers = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->changed_renderers_size());
  {
    ::google::protobuf::scoped_ptr<EntityRendererChangedInfo_ChangedRenderersEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >::const_iterator
        it = this->changed_renderers().begin();
        it != this->changed_renderers().end(); ++it) {
      entry.reset(changed_renderers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityRendererChangedInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityRendererChangedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityRendererChangedInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityRendererChangedInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityRendererChangedInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityRendererChangedInfo)
    MergeFrom(*source);
  }
}

void EntityRendererChangedInfo::MergeFrom(const EntityRendererChangedInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityRendererChangedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  changed_renderers_.MergeFrom(from.changed_renderers_);
}

void EntityRendererChangedInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityRendererChangedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityRendererChangedInfo::CopyFrom(const EntityRendererChangedInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityRendererChangedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityRendererChangedInfo::IsInitialized() const {
  return true;
}

void EntityRendererChangedInfo::Swap(EntityRendererChangedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityRendererChangedInfo::InternalSwap(EntityRendererChangedInfo* other) {
  using std::swap;
  changed_renderers_.Swap(&other->changed_renderers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityRendererChangedInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityRendererChangedInfo

// map<string, int32> changed_renderers = 1;
int EntityRendererChangedInfo::changed_renderers_size() const {
  return changed_renderers_.size();
}
void EntityRendererChangedInfo::clear_changed_renderers() {
  changed_renderers_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
EntityRendererChangedInfo::changed_renderers() const {
  // @@protoc_insertion_point(field_map:proto.EntityRendererChangedInfo.changed_renderers)
  return changed_renderers_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
EntityRendererChangedInfo::mutable_changed_renderers() {
  // @@protoc_insertion_point(field_mutable_map:proto.EntityRendererChangedInfo.changed_renderers)
  return changed_renderers_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneEntityInfo::SceneEntityInfo_PropMapEntry::SceneEntityInfo_PropMapEntry() {}
SceneEntityInfo::SceneEntityInfo_PropMapEntry::SceneEntityInfo_PropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneEntityInfo::SceneEntityInfo_PropMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[66];
}
void SceneEntityInfo::SceneEntityInfo_PropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneEntityInfo::SceneEntityInfo_PropMapEntry::MergeFrom(const SceneEntityInfo_PropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneEntityInfo::SceneEntityInfo_FightPropMapEntry::SceneEntityInfo_FightPropMapEntry() {}
SceneEntityInfo::SceneEntityInfo_FightPropMapEntry::SceneEntityInfo_FightPropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneEntityInfo::SceneEntityInfo_FightPropMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[67];
}
void SceneEntityInfo::SceneEntityInfo_FightPropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneEntityInfo::SceneEntityInfo_FightPropMapEntry::MergeFrom(const SceneEntityInfo_FightPropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneEntityInfo::SceneEntityInfo_AnimatorParaMapEntry::SceneEntityInfo_AnimatorParaMapEntry() {}
SceneEntityInfo::SceneEntityInfo_AnimatorParaMapEntry::SceneEntityInfo_AnimatorParaMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneEntityInfo::SceneEntityInfo_AnimatorParaMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[68];
}
void SceneEntityInfo::SceneEntityInfo_AnimatorParaMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneEntityInfo::SceneEntityInfo_AnimatorParaMapEntry::MergeFrom(const SceneEntityInfo_AnimatorParaMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityInfo::kEntityTypeFieldNumber;
const int SceneEntityInfo::kEntityIdFieldNumber;
const int SceneEntityInfo::kNameFieldNumber;
const int SceneEntityInfo::kMotionInfoFieldNumber;
const int SceneEntityInfo::kPropMapFieldNumber;
const int SceneEntityInfo::kFightPropMapFieldNumber;
const int SceneEntityInfo::kLifeStateFieldNumber;
const int SceneEntityInfo::kAbilityInfoFieldNumber;
const int SceneEntityInfo::kAnimatorParaMapFieldNumber;
const int SceneEntityInfo::kAvatarFieldNumber;
const int SceneEntityInfo::kMonsterFieldNumber;
const int SceneEntityInfo::kNpcFieldNumber;
const int SceneEntityInfo::kGadgetFieldNumber;
const int SceneEntityInfo::kRendererChangedInfoFieldNumber;
const int SceneEntityInfo::kAiInfoFieldNumber;
const int SceneEntityInfo::kLastMoveSceneTimeMsFieldNumber;
const int SceneEntityInfo::kLastMoveReliableSeqFieldNumber;
const int SceneEntityInfo::kEntityClientDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityInfo::SceneEntityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityInfo)
}
SceneEntityInfo::SceneEntityInfo(const SceneEntityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prop_map_.MergeFrom(from.prop_map_);
  fight_prop_map_.MergeFrom(from.fight_prop_map_);
  animator_para_map_.MergeFrom(from.animator_para_map_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  entity_client_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity_client_data().size() > 0) {
    entity_client_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_client_data_);
  }
  if (from.has_motion_info()) {
    motion_info_ = new ::proto::MotionInfo(*from.motion_info_);
  } else {
    motion_info_ = NULL;
  }
  if (from.has_ability_info()) {
    ability_info_ = new ::proto::AbilitySyncStateInfo(*from.ability_info_);
  } else {
    ability_info_ = NULL;
  }
  if (from.has_renderer_changed_info()) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo(*from.renderer_changed_info_);
  } else {
    renderer_changed_info_ = NULL;
  }
  if (from.has_ai_info()) {
    ai_info_ = new ::proto::SceneEntityAiInfo(*from.ai_info_);
  } else {
    ai_info_ = NULL;
  }
  ::memcpy(&entity_type_, &from.entity_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_move_reliable_seq_) -
    reinterpret_cast<char*>(&entity_type_)) + sizeof(last_move_reliable_seq_));
  clear_has_entity();
  switch (from.entity_case()) {
    case kAvatar: {
      mutable_avatar()->::proto::SceneAvatarInfo::MergeFrom(from.avatar());
      break;
    }
    case kMonster: {
      mutable_monster()->::proto::SceneMonsterInfo::MergeFrom(from.monster());
      break;
    }
    case kNpc: {
      mutable_npc()->::proto::SceneNpcInfo::MergeFrom(from.npc());
      break;
    }
    case kGadget: {
      mutable_gadget()->::proto::SceneGadgetInfo::MergeFrom(from.gadget());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityInfo)
}

void SceneEntityInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_client_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&motion_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_move_reliable_seq_) -
      reinterpret_cast<char*>(&motion_info_)) + sizeof(last_move_reliable_seq_));
  clear_has_entity();
  _cached_size_ = 0;
}

SceneEntityInfo::~SceneEntityInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityInfo)
  SharedDtor();
}

void SceneEntityInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_client_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete motion_info_;
  if (this != internal_default_instance()) delete ability_info_;
  if (this != internal_default_instance()) delete renderer_changed_info_;
  if (this != internal_default_instance()) delete ai_info_;
  if (has_entity()) {
    clear_entity();
  }
}

void SceneEntityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityInfo& SceneEntityInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityInfo* SceneEntityInfo::New(::google::protobuf::Arena* arena) const {
  SceneEntityInfo* n = new SceneEntityInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityInfo::clear_entity() {
// @@protoc_insertion_point(one_of_clear_start:proto.SceneEntityInfo)
  switch (entity_case()) {
    case kAvatar: {
      delete entity_.avatar_;
      break;
    }
    case kMonster: {
      delete entity_.monster_;
      break;
    }
    case kNpc: {
      delete entity_.npc_;
      break;
    }
    case kGadget: {
      delete entity_.gadget_;
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTITY_NOT_SET;
}


void SceneEntityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_map_.Clear();
  fight_prop_map_.Clear();
  animator_para_map_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_client_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) {
    delete motion_info_;
  }
  motion_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) {
    delete ability_info_;
  }
  ability_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) {
    delete renderer_changed_info_;
  }
  renderer_changed_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && ai_info_ != NULL) {
    delete ai_info_;
  }
  ai_info_ = NULL;
  ::memset(&entity_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_move_reliable_seq_) -
      reinterpret_cast<char*>(&entity_type_)) + sizeof(last_move_reliable_seq_));
  clear_entity();
  _internal_metadata_.Clear();
}

bool SceneEntityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ProtEntityType entity_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_entity_type(static_cast< ::proto::ProtEntityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SceneEntityInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionInfo motion_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_motion_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.PropValue> prop_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          SceneEntityInfo_PropMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneEntityInfo_PropMapEntry,
              ::google::protobuf::uint32, ::proto::PropValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue > > parser(&prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, float> fight_prop_map = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          SceneEntityInfo_FightPropMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneEntityInfo_FightPropMapEntry,
              ::google::protobuf::uint32, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, float > > parser(&fight_prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 life_state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &life_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo ability_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .proto.AnimatorParameterValueInfo> animator_para_map = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          SceneEntityInfo_AnimatorParaMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneEntityInfo_AnimatorParaMapEntry,
              ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo > > parser(&animator_para_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneAvatarInfo avatar = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avatar()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneMonsterInfo monster = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_monster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneNpcInfo npc = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_npc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneGadgetInfo gadget = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gadget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EntityRendererChangedInfo renderer_changed_info = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_renderer_changed_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SceneEntityAiInfo ai_info = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ai_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_move_scene_time_ms = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_move_scene_time_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_move_reliable_seq = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_move_reliable_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes entity_client_data = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_entity_client_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityInfo)
  return false;
#undef DO_
}

void SceneEntityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ProtEntityType entity_type = 1;
  if (this->entity_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->entity_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SceneEntityInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // .proto.MotionInfo motion_info = 4;
  if (this->has_motion_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->motion_info_, output);
  }

  // map<uint32, .proto.PropValue> prop_map = 5;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityInfo_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityInfo_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  // map<uint32, float> fight_prop_map = 6;
  if (!this->fight_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->fight_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fight_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->fight_prop_map().begin();
          it != this->fight_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityInfo_FightPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fight_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityInfo_FightPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->fight_prop_map().begin();
          it != this->fight_prop_map().end(); ++it) {
        entry.reset(fight_prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    }
  }

  // uint32 life_state = 7;
  if (this->life_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->life_state(), output);
  }

  // .proto.AbilitySyncStateInfo ability_info = 8;
  if (this->has_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->ability_info_, output);
  }

  // map<int32, .proto.AnimatorParameterValueInfo> animator_para_map = 9;
  if (!this->animator_para_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->animator_para_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->animator_para_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::const_iterator
          it = this->animator_para_map().begin();
          it != this->animator_para_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityInfo_AnimatorParaMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(animator_para_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityInfo_AnimatorParaMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::const_iterator
          it = this->animator_para_map().begin();
          it != this->animator_para_map().end(); ++it) {
        entry.reset(animator_para_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
      }
    }
  }

  // .proto.SceneAvatarInfo avatar = 10;
  if (has_avatar()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *entity_.avatar_, output);
  }

  // .proto.SceneMonsterInfo monster = 11;
  if (has_monster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *entity_.monster_, output);
  }

  // .proto.SceneNpcInfo npc = 12;
  if (has_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *entity_.npc_, output);
  }

  // .proto.SceneGadgetInfo gadget = 13;
  if (has_gadget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *entity_.gadget_, output);
  }

  // .proto.EntityRendererChangedInfo renderer_changed_info = 14;
  if (this->has_renderer_changed_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->renderer_changed_info_, output);
  }

  // .proto.SceneEntityAiInfo ai_info = 15;
  if (this->has_ai_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->ai_info_, output);
  }

  // uint32 last_move_scene_time_ms = 17;
  if (this->last_move_scene_time_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->last_move_scene_time_ms(), output);
  }

  // uint32 last_move_reliable_seq = 18;
  if (this->last_move_reliable_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->last_move_reliable_seq(), output);
  }

  // bytes entity_client_data = 19;
  if (this->entity_client_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      19, this->entity_client_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityInfo)
}

::google::protobuf::uint8* SceneEntityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ProtEntityType entity_type = 1;
  if (this->entity_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->entity_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SceneEntityInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // .proto.MotionInfo motion_info = 4;
  if (this->has_motion_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->motion_info_, deterministic, target);
  }

  // map<uint32, .proto.PropValue> prop_map = 5;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityInfo_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityInfo_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, float> fight_prop_map = 6;
  if (!this->fight_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->fight_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fight_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->fight_prop_map().begin();
          it != this->fight_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityInfo_FightPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fight_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityInfo_FightPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->fight_prop_map().begin();
          it != this->fight_prop_map().end(); ++it) {
        entry.reset(fight_prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 life_state = 7;
  if (this->life_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->life_state(), target);
  }

  // .proto.AbilitySyncStateInfo ability_info = 8;
  if (this->has_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->ability_info_, deterministic, target);
  }

  // map<int32, .proto.AnimatorParameterValueInfo> animator_para_map = 9;
  if (!this->animator_para_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->animator_para_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->animator_para_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::const_iterator
          it = this->animator_para_map().begin();
          it != this->animator_para_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneEntityInfo_AnimatorParaMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(animator_para_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneEntityInfo_AnimatorParaMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::const_iterator
          it = this->animator_para_map().begin();
          it != this->animator_para_map().end(); ++it) {
        entry.reset(animator_para_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
      }
    }
  }

  // .proto.SceneAvatarInfo avatar = 10;
  if (has_avatar()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *entity_.avatar_, deterministic, target);
  }

  // .proto.SceneMonsterInfo monster = 11;
  if (has_monster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *entity_.monster_, deterministic, target);
  }

  // .proto.SceneNpcInfo npc = 12;
  if (has_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *entity_.npc_, deterministic, target);
  }

  // .proto.SceneGadgetInfo gadget = 13;
  if (has_gadget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *entity_.gadget_, deterministic, target);
  }

  // .proto.EntityRendererChangedInfo renderer_changed_info = 14;
  if (this->has_renderer_changed_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->renderer_changed_info_, deterministic, target);
  }

  // .proto.SceneEntityAiInfo ai_info = 15;
  if (this->has_ai_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->ai_info_, deterministic, target);
  }

  // uint32 last_move_scene_time_ms = 17;
  if (this->last_move_scene_time_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->last_move_scene_time_ms(), target);
  }

  // uint32 last_move_reliable_seq = 18;
  if (this->last_move_reliable_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->last_move_reliable_seq(), target);
  }

  // bytes entity_client_data = 19;
  if (this->entity_client_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        19, this->entity_client_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityInfo)
  return target;
}

size_t SceneEntityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.PropValue> prop_map = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prop_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneEntityInfo_PropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
        it = this->prop_map().begin();
        it != this->prop_map().end(); ++it) {
      entry.reset(prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, float> fight_prop_map = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fight_prop_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneEntityInfo_FightPropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
        it = this->fight_prop_map().begin();
        it != this->fight_prop_map().end(); ++it) {
      entry.reset(fight_prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<int32, .proto.AnimatorParameterValueInfo> animator_para_map = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->animator_para_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneEntityInfo_AnimatorParaMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >::const_iterator
        it = this->animator_para_map().begin();
        it != this->animator_para_map().end(); ++it) {
      entry.reset(animator_para_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes entity_client_data = 19;
  if (this->entity_client_data().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->entity_client_data());
  }

  // .proto.MotionInfo motion_info = 4;
  if (this->has_motion_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->motion_info_);
  }

  // .proto.AbilitySyncStateInfo ability_info = 8;
  if (this->has_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ability_info_);
  }

  // .proto.EntityRendererChangedInfo renderer_changed_info = 14;
  if (this->has_renderer_changed_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->renderer_changed_info_);
  }

  // .proto.SceneEntityAiInfo ai_info = 15;
  if (this->has_ai_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ai_info_);
  }

  // .proto.ProtEntityType entity_type = 1;
  if (this->entity_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->entity_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 life_state = 7;
  if (this->life_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->life_state());
  }

  // uint32 last_move_scene_time_ms = 17;
  if (this->last_move_scene_time_ms() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_move_scene_time_ms());
  }

  // uint32 last_move_reliable_seq = 18;
  if (this->last_move_reliable_seq() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_move_reliable_seq());
  }

  switch (entity_case()) {
    // .proto.SceneAvatarInfo avatar = 10;
    case kAvatar: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_.avatar_);
      break;
    }
    // .proto.SceneMonsterInfo monster = 11;
    case kMonster: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_.monster_);
      break;
    }
    // .proto.SceneNpcInfo npc = 12;
    case kNpc: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_.npc_);
      break;
    }
    // .proto.SceneGadgetInfo gadget = 13;
    case kGadget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_.gadget_);
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityInfo)
    MergeFrom(*source);
  }
}

void SceneEntityInfo::MergeFrom(const SceneEntityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_map_.MergeFrom(from.prop_map_);
  fight_prop_map_.MergeFrom(from.fight_prop_map_);
  animator_para_map_.MergeFrom(from.animator_para_map_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.entity_client_data().size() > 0) {

    entity_client_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_client_data_);
  }
  if (from.has_motion_info()) {
    mutable_motion_info()->::proto::MotionInfo::MergeFrom(from.motion_info());
  }
  if (from.has_ability_info()) {
    mutable_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.ability_info());
  }
  if (from.has_renderer_changed_info()) {
    mutable_renderer_changed_info()->::proto::EntityRendererChangedInfo::MergeFrom(from.renderer_changed_info());
  }
  if (from.has_ai_info()) {
    mutable_ai_info()->::proto::SceneEntityAiInfo::MergeFrom(from.ai_info());
  }
  if (from.entity_type() != 0) {
    set_entity_type(from.entity_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.life_state() != 0) {
    set_life_state(from.life_state());
  }
  if (from.last_move_scene_time_ms() != 0) {
    set_last_move_scene_time_ms(from.last_move_scene_time_ms());
  }
  if (from.last_move_reliable_seq() != 0) {
    set_last_move_reliable_seq(from.last_move_reliable_seq());
  }
  switch (from.entity_case()) {
    case kAvatar: {
      mutable_avatar()->::proto::SceneAvatarInfo::MergeFrom(from.avatar());
      break;
    }
    case kMonster: {
      mutable_monster()->::proto::SceneMonsterInfo::MergeFrom(from.monster());
      break;
    }
    case kNpc: {
      mutable_npc()->::proto::SceneNpcInfo::MergeFrom(from.npc());
      break;
    }
    case kGadget: {
      mutable_gadget()->::proto::SceneGadgetInfo::MergeFrom(from.gadget());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
}

void SceneEntityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityInfo::CopyFrom(const SceneEntityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityInfo::IsInitialized() const {
  return true;
}

void SceneEntityInfo::Swap(SceneEntityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityInfo::InternalSwap(SceneEntityInfo* other) {
  using std::swap;
  prop_map_.Swap(&other->prop_map_);
  fight_prop_map_.Swap(&other->fight_prop_map_);
  animator_para_map_.Swap(&other->animator_para_map_);
  name_.Swap(&other->name_);
  entity_client_data_.Swap(&other->entity_client_data_);
  swap(motion_info_, other->motion_info_);
  swap(ability_info_, other->ability_info_);
  swap(renderer_changed_info_, other->renderer_changed_info_);
  swap(ai_info_, other->ai_info_);
  swap(entity_type_, other->entity_type_);
  swap(entity_id_, other->entity_id_);
  swap(life_state_, other->life_state_);
  swap(last_move_scene_time_ms_, other->last_move_scene_time_ms_);
  swap(last_move_reliable_seq_, other->last_move_reliable_seq_);
  swap(entity_, other->entity_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityInfo

// .proto.ProtEntityType entity_type = 1;
void SceneEntityInfo::clear_entity_type() {
  entity_type_ = 0;
}
::proto::ProtEntityType SceneEntityInfo::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_type)
  return static_cast< ::proto::ProtEntityType >(entity_type_);
}
void SceneEntityInfo::set_entity_type(::proto::ProtEntityType value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.entity_type)
}

// uint32 entity_id = 2;
void SceneEntityInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneEntityInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_id)
  return entity_id_;
}
void SceneEntityInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.entity_id)
}

// string name = 3;
void SceneEntityInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SceneEntityInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.name)
  return name_.GetNoArena();
}
void SceneEntityInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.name)
}
#if LANG_CXX11
void SceneEntityInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SceneEntityInfo.name)
}
#endif
void SceneEntityInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SceneEntityInfo.name)
}
void SceneEntityInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SceneEntityInfo.name)
}
::std::string* SceneEntityInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SceneEntityInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SceneEntityInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.name)
}

// .proto.MotionInfo motion_info = 4;
bool SceneEntityInfo::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
void SceneEntityInfo::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
const ::proto::MotionInfo& SceneEntityInfo::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
::proto::MotionInfo* SceneEntityInfo::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.motion_info)
  return motion_info_;
}
::proto::MotionInfo* SceneEntityInfo::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
void SceneEntityInfo::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.motion_info)
}

// map<uint32, .proto.PropValue> prop_map = 5;
int SceneEntityInfo::prop_map_size() const {
  return prop_map_.size();
}
void SceneEntityInfo::clear_prop_map() {
  prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
SceneEntityInfo::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityInfo.prop_map)
  return prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
SceneEntityInfo::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityInfo.prop_map)
  return prop_map_.MutableMap();
}

// map<uint32, float> fight_prop_map = 6;
int SceneEntityInfo::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
void SceneEntityInfo::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
SceneEntityInfo::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityInfo.fight_prop_map)
  return fight_prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, float >*
SceneEntityInfo::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityInfo.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// uint32 life_state = 7;
void SceneEntityInfo::clear_life_state() {
  life_state_ = 0u;
}
::google::protobuf::uint32 SceneEntityInfo::life_state() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.life_state)
  return life_state_;
}
void SceneEntityInfo::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.life_state)
}

// .proto.AbilitySyncStateInfo ability_info = 8;
bool SceneEntityInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
void SceneEntityInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& SceneEntityInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* SceneEntityInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.ability_info)
  return ability_info_;
}
::proto::AbilitySyncStateInfo* SceneEntityInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
void SceneEntityInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.ability_info)
}

// map<int32, .proto.AnimatorParameterValueInfo> animator_para_map = 9;
int SceneEntityInfo::animator_para_map_size() const {
  return animator_para_map_.size();
}
void SceneEntityInfo::clear_animator_para_map() {
  animator_para_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >&
SceneEntityInfo::animator_para_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEntityInfo.animator_para_map)
  return animator_para_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::int32, ::proto::AnimatorParameterValueInfo >*
SceneEntityInfo::mutable_animator_para_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEntityInfo.animator_para_map)
  return animator_para_map_.MutableMap();
}

// .proto.SceneAvatarInfo avatar = 10;
bool SceneEntityInfo::has_avatar() const {
  return entity_case() == kAvatar;
}
void SceneEntityInfo::set_has_avatar() {
  _oneof_case_[0] = kAvatar;
}
void SceneEntityInfo::clear_avatar() {
  if (has_avatar()) {
    delete entity_.avatar_;
    clear_has_entity();
  }
}
 const ::proto::SceneAvatarInfo& SceneEntityInfo::avatar() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.avatar)
  return has_avatar()
      ? *entity_.avatar_
      : ::proto::SceneAvatarInfo::default_instance();
}
::proto::SceneAvatarInfo* SceneEntityInfo::mutable_avatar() {
  if (!has_avatar()) {
    clear_entity();
    set_has_avatar();
    entity_.avatar_ = new ::proto::SceneAvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.avatar)
  return entity_.avatar_;
}
::proto::SceneAvatarInfo* SceneEntityInfo::release_avatar() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.avatar)
  if (has_avatar()) {
    clear_has_entity();
    ::proto::SceneAvatarInfo* temp = entity_.avatar_;
    entity_.avatar_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneEntityInfo::set_allocated_avatar(::proto::SceneAvatarInfo* avatar) {
  clear_entity();
  if (avatar) {
    set_has_avatar();
    entity_.avatar_ = avatar;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.avatar)
}

// .proto.SceneMonsterInfo monster = 11;
bool SceneEntityInfo::has_monster() const {
  return entity_case() == kMonster;
}
void SceneEntityInfo::set_has_monster() {
  _oneof_case_[0] = kMonster;
}
void SceneEntityInfo::clear_monster() {
  if (has_monster()) {
    delete entity_.monster_;
    clear_has_entity();
  }
}
 const ::proto::SceneMonsterInfo& SceneEntityInfo::monster() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.monster)
  return has_monster()
      ? *entity_.monster_
      : ::proto::SceneMonsterInfo::default_instance();
}
::proto::SceneMonsterInfo* SceneEntityInfo::mutable_monster() {
  if (!has_monster()) {
    clear_entity();
    set_has_monster();
    entity_.monster_ = new ::proto::SceneMonsterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.monster)
  return entity_.monster_;
}
::proto::SceneMonsterInfo* SceneEntityInfo::release_monster() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.monster)
  if (has_monster()) {
    clear_has_entity();
    ::proto::SceneMonsterInfo* temp = entity_.monster_;
    entity_.monster_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneEntityInfo::set_allocated_monster(::proto::SceneMonsterInfo* monster) {
  clear_entity();
  if (monster) {
    set_has_monster();
    entity_.monster_ = monster;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.monster)
}

// .proto.SceneNpcInfo npc = 12;
bool SceneEntityInfo::has_npc() const {
  return entity_case() == kNpc;
}
void SceneEntityInfo::set_has_npc() {
  _oneof_case_[0] = kNpc;
}
void SceneEntityInfo::clear_npc() {
  if (has_npc()) {
    delete entity_.npc_;
    clear_has_entity();
  }
}
 const ::proto::SceneNpcInfo& SceneEntityInfo::npc() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.npc)
  return has_npc()
      ? *entity_.npc_
      : ::proto::SceneNpcInfo::default_instance();
}
::proto::SceneNpcInfo* SceneEntityInfo::mutable_npc() {
  if (!has_npc()) {
    clear_entity();
    set_has_npc();
    entity_.npc_ = new ::proto::SceneNpcInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.npc)
  return entity_.npc_;
}
::proto::SceneNpcInfo* SceneEntityInfo::release_npc() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.npc)
  if (has_npc()) {
    clear_has_entity();
    ::proto::SceneNpcInfo* temp = entity_.npc_;
    entity_.npc_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneEntityInfo::set_allocated_npc(::proto::SceneNpcInfo* npc) {
  clear_entity();
  if (npc) {
    set_has_npc();
    entity_.npc_ = npc;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.npc)
}

// .proto.SceneGadgetInfo gadget = 13;
bool SceneEntityInfo::has_gadget() const {
  return entity_case() == kGadget;
}
void SceneEntityInfo::set_has_gadget() {
  _oneof_case_[0] = kGadget;
}
void SceneEntityInfo::clear_gadget() {
  if (has_gadget()) {
    delete entity_.gadget_;
    clear_has_entity();
  }
}
 const ::proto::SceneGadgetInfo& SceneEntityInfo::gadget() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.gadget)
  return has_gadget()
      ? *entity_.gadget_
      : ::proto::SceneGadgetInfo::default_instance();
}
::proto::SceneGadgetInfo* SceneEntityInfo::mutable_gadget() {
  if (!has_gadget()) {
    clear_entity();
    set_has_gadget();
    entity_.gadget_ = new ::proto::SceneGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.gadget)
  return entity_.gadget_;
}
::proto::SceneGadgetInfo* SceneEntityInfo::release_gadget() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.gadget)
  if (has_gadget()) {
    clear_has_entity();
    ::proto::SceneGadgetInfo* temp = entity_.gadget_;
    entity_.gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SceneEntityInfo::set_allocated_gadget(::proto::SceneGadgetInfo* gadget) {
  clear_entity();
  if (gadget) {
    set_has_gadget();
    entity_.gadget_ = gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.gadget)
}

// .proto.EntityRendererChangedInfo renderer_changed_info = 14;
bool SceneEntityInfo::has_renderer_changed_info() const {
  return this != internal_default_instance() && renderer_changed_info_ != NULL;
}
void SceneEntityInfo::clear_renderer_changed_info() {
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) delete renderer_changed_info_;
  renderer_changed_info_ = NULL;
}
const ::proto::EntityRendererChangedInfo& SceneEntityInfo::renderer_changed_info() const {
  const ::proto::EntityRendererChangedInfo* p = renderer_changed_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.renderer_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityRendererChangedInfo*>(
      &::proto::_EntityRendererChangedInfo_default_instance_);
}
::proto::EntityRendererChangedInfo* SceneEntityInfo::mutable_renderer_changed_info() {
  
  if (renderer_changed_info_ == NULL) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.renderer_changed_info)
  return renderer_changed_info_;
}
::proto::EntityRendererChangedInfo* SceneEntityInfo::release_renderer_changed_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.renderer_changed_info)
  
  ::proto::EntityRendererChangedInfo* temp = renderer_changed_info_;
  renderer_changed_info_ = NULL;
  return temp;
}
void SceneEntityInfo::set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info) {
  delete renderer_changed_info_;
  renderer_changed_info_ = renderer_changed_info;
  if (renderer_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.renderer_changed_info)
}

// .proto.SceneEntityAiInfo ai_info = 15;
bool SceneEntityInfo::has_ai_info() const {
  return this != internal_default_instance() && ai_info_ != NULL;
}
void SceneEntityInfo::clear_ai_info() {
  if (GetArenaNoVirtual() == NULL && ai_info_ != NULL) delete ai_info_;
  ai_info_ = NULL;
}
const ::proto::SceneEntityAiInfo& SceneEntityInfo::ai_info() const {
  const ::proto::SceneEntityAiInfo* p = ai_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.ai_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEntityAiInfo*>(
      &::proto::_SceneEntityAiInfo_default_instance_);
}
::proto::SceneEntityAiInfo* SceneEntityInfo::mutable_ai_info() {
  
  if (ai_info_ == NULL) {
    ai_info_ = new ::proto::SceneEntityAiInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.ai_info)
  return ai_info_;
}
::proto::SceneEntityAiInfo* SceneEntityInfo::release_ai_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.ai_info)
  
  ::proto::SceneEntityAiInfo* temp = ai_info_;
  ai_info_ = NULL;
  return temp;
}
void SceneEntityInfo::set_allocated_ai_info(::proto::SceneEntityAiInfo* ai_info) {
  delete ai_info_;
  ai_info_ = ai_info;
  if (ai_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.ai_info)
}

// uint32 last_move_scene_time_ms = 17;
void SceneEntityInfo::clear_last_move_scene_time_ms() {
  last_move_scene_time_ms_ = 0u;
}
::google::protobuf::uint32 SceneEntityInfo::last_move_scene_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.last_move_scene_time_ms)
  return last_move_scene_time_ms_;
}
void SceneEntityInfo::set_last_move_scene_time_ms(::google::protobuf::uint32 value) {
  
  last_move_scene_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.last_move_scene_time_ms)
}

// uint32 last_move_reliable_seq = 18;
void SceneEntityInfo::clear_last_move_reliable_seq() {
  last_move_reliable_seq_ = 0u;
}
::google::protobuf::uint32 SceneEntityInfo::last_move_reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.last_move_reliable_seq)
  return last_move_reliable_seq_;
}
void SceneEntityInfo::set_last_move_reliable_seq(::google::protobuf::uint32 value) {
  
  last_move_reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.last_move_reliable_seq)
}

// bytes entity_client_data = 19;
void SceneEntityInfo::clear_entity_client_data() {
  entity_client_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SceneEntityInfo::entity_client_data() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityInfo.entity_client_data)
  return entity_client_data_.GetNoArena();
}
void SceneEntityInfo::set_entity_client_data(const ::std::string& value) {
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SceneEntityInfo.entity_client_data)
}
#if LANG_CXX11
void SceneEntityInfo::set_entity_client_data(::std::string&& value) {
  
  entity_client_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SceneEntityInfo.entity_client_data)
}
#endif
void SceneEntityInfo::set_entity_client_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SceneEntityInfo.entity_client_data)
}
void SceneEntityInfo::set_entity_client_data(const void* value, size_t size) {
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SceneEntityInfo.entity_client_data)
}
::std::string* SceneEntityInfo::mutable_entity_client_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityInfo.entity_client_data)
  return entity_client_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SceneEntityInfo::release_entity_client_data() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityInfo.entity_client_data)
  
  return entity_client_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SceneEntityInfo::set_allocated_entity_client_data(::std::string* entity_client_data) {
  if (entity_client_data != NULL) {
    
  } else {
    
  }
  entity_client_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_client_data);
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityInfo.entity_client_data)
}

bool SceneEntityInfo::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
void SceneEntityInfo::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
SceneEntityInfo::EntityCase SceneEntityInfo::entity_case() const {
  return SceneEntityInfo::EntityCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateGadgetInfo_Chest::kChestDropIdFieldNumber;
const int CreateGadgetInfo_Chest::kIsShowCutsceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateGadgetInfo_Chest::CreateGadgetInfo_Chest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CreateGadgetInfo.Chest)
}
CreateGadgetInfo_Chest::CreateGadgetInfo_Chest(const CreateGadgetInfo_Chest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&chest_drop_id_, &from.chest_drop_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_show_cutscene_) -
    reinterpret_cast<char*>(&chest_drop_id_)) + sizeof(is_show_cutscene_));
  // @@protoc_insertion_point(copy_constructor:proto.CreateGadgetInfo.Chest)
}

void CreateGadgetInfo_Chest::SharedCtor() {
  ::memset(&chest_drop_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_show_cutscene_) -
      reinterpret_cast<char*>(&chest_drop_id_)) + sizeof(is_show_cutscene_));
  _cached_size_ = 0;
}

CreateGadgetInfo_Chest::~CreateGadgetInfo_Chest() {
  // @@protoc_insertion_point(destructor:proto.CreateGadgetInfo.Chest)
  SharedDtor();
}

void CreateGadgetInfo_Chest::SharedDtor() {
}

void CreateGadgetInfo_Chest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateGadgetInfo_Chest::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateGadgetInfo_Chest& CreateGadgetInfo_Chest::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateGadgetInfo_Chest* CreateGadgetInfo_Chest::New(::google::protobuf::Arena* arena) const {
  CreateGadgetInfo_Chest* n = new CreateGadgetInfo_Chest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateGadgetInfo_Chest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateGadgetInfo.Chest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&chest_drop_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_show_cutscene_) -
      reinterpret_cast<char*>(&chest_drop_id_)) + sizeof(is_show_cutscene_));
  _internal_metadata_.Clear();
}

bool CreateGadgetInfo_Chest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CreateGadgetInfo.Chest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 chest_drop_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chest_drop_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_show_cutscene = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_show_cutscene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CreateGadgetInfo.Chest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CreateGadgetInfo.Chest)
  return false;
#undef DO_
}

void CreateGadgetInfo_Chest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CreateGadgetInfo.Chest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chest_drop_id = 1;
  if (this->chest_drop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chest_drop_id(), output);
  }

  // bool is_show_cutscene = 2;
  if (this->is_show_cutscene() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_show_cutscene(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CreateGadgetInfo.Chest)
}

::google::protobuf::uint8* CreateGadgetInfo_Chest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateGadgetInfo.Chest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chest_drop_id = 1;
  if (this->chest_drop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chest_drop_id(), target);
  }

  // bool is_show_cutscene = 2;
  if (this->is_show_cutscene() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_show_cutscene(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateGadgetInfo.Chest)
  return target;
}

size_t CreateGadgetInfo_Chest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateGadgetInfo.Chest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 chest_drop_id = 1;
  if (this->chest_drop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chest_drop_id());
  }

  // bool is_show_cutscene = 2;
  if (this->is_show_cutscene() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateGadgetInfo_Chest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CreateGadgetInfo.Chest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGadgetInfo_Chest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateGadgetInfo_Chest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CreateGadgetInfo.Chest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CreateGadgetInfo.Chest)
    MergeFrom(*source);
  }
}

void CreateGadgetInfo_Chest::MergeFrom(const CreateGadgetInfo_Chest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateGadgetInfo.Chest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chest_drop_id() != 0) {
    set_chest_drop_id(from.chest_drop_id());
  }
  if (from.is_show_cutscene() != 0) {
    set_is_show_cutscene(from.is_show_cutscene());
  }
}

void CreateGadgetInfo_Chest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CreateGadgetInfo.Chest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGadgetInfo_Chest::CopyFrom(const CreateGadgetInfo_Chest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateGadgetInfo.Chest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGadgetInfo_Chest::IsInitialized() const {
  return true;
}

void CreateGadgetInfo_Chest::Swap(CreateGadgetInfo_Chest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateGadgetInfo_Chest::InternalSwap(CreateGadgetInfo_Chest* other) {
  using std::swap;
  swap(chest_drop_id_, other->chest_drop_id_);
  swap(is_show_cutscene_, other->is_show_cutscene_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateGadgetInfo_Chest::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateGadgetInfo_Chest

// uint32 chest_drop_id = 1;
void CreateGadgetInfo_Chest::clear_chest_drop_id() {
  chest_drop_id_ = 0u;
}
::google::protobuf::uint32 CreateGadgetInfo_Chest::chest_drop_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.Chest.chest_drop_id)
  return chest_drop_id_;
}
void CreateGadgetInfo_Chest::set_chest_drop_id(::google::protobuf::uint32 value) {
  
  chest_drop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.Chest.chest_drop_id)
}

// bool is_show_cutscene = 2;
void CreateGadgetInfo_Chest::clear_is_show_cutscene() {
  is_show_cutscene_ = false;
}
bool CreateGadgetInfo_Chest::is_show_cutscene() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.Chest.is_show_cutscene)
  return is_show_cutscene_;
}
void CreateGadgetInfo_Chest::set_is_show_cutscene(bool value) {
  
  is_show_cutscene_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.Chest.is_show_cutscene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateGadgetInfo::kBornTypeFieldNumber;
const int CreateGadgetInfo::kChestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateGadgetInfo::CreateGadgetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CreateGadgetInfo)
}
CreateGadgetInfo::CreateGadgetInfo(const CreateGadgetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chest()) {
    chest_ = new ::proto::CreateGadgetInfo_Chest(*from.chest_);
  } else {
    chest_ = NULL;
  }
  born_type_ = from.born_type_;
  // @@protoc_insertion_point(copy_constructor:proto.CreateGadgetInfo)
}

void CreateGadgetInfo::SharedCtor() {
  ::memset(&chest_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&born_type_) -
      reinterpret_cast<char*>(&chest_)) + sizeof(born_type_));
  _cached_size_ = 0;
}

CreateGadgetInfo::~CreateGadgetInfo() {
  // @@protoc_insertion_point(destructor:proto.CreateGadgetInfo)
  SharedDtor();
}

void CreateGadgetInfo::SharedDtor() {
  if (this != internal_default_instance()) delete chest_;
}

void CreateGadgetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateGadgetInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateGadgetInfo& CreateGadgetInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateGadgetInfo* CreateGadgetInfo::New(::google::protobuf::Arena* arena) const {
  CreateGadgetInfo* n = new CreateGadgetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateGadgetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && chest_ != NULL) {
    delete chest_;
  }
  chest_ = NULL;
  born_type_ = 0;
  _internal_metadata_.Clear();
}

bool CreateGadgetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CreateGadgetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.GadgetBornType born_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_born_type(static_cast< ::proto::GadgetBornType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CreateGadgetInfo.Chest chest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CreateGadgetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CreateGadgetInfo)
  return false;
#undef DO_
}

void CreateGadgetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CreateGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GadgetBornType born_type = 1;
  if (this->born_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->born_type(), output);
  }

  // .proto.CreateGadgetInfo.Chest chest = 2;
  if (this->has_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->chest_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CreateGadgetInfo)
}

::google::protobuf::uint8* CreateGadgetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateGadgetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.GadgetBornType born_type = 1;
  if (this->born_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->born_type(), target);
  }

  // .proto.CreateGadgetInfo.Chest chest = 2;
  if (this->has_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->chest_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateGadgetInfo)
  return target;
}

size_t CreateGadgetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateGadgetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CreateGadgetInfo.Chest chest = 2;
  if (this->has_chest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chest_);
  }

  // .proto.GadgetBornType born_type = 1;
  if (this->born_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->born_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateGadgetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CreateGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateGadgetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateGadgetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CreateGadgetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CreateGadgetInfo)
    MergeFrom(*source);
  }
}

void CreateGadgetInfo::MergeFrom(const CreateGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateGadgetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chest()) {
    mutable_chest()->::proto::CreateGadgetInfo_Chest::MergeFrom(from.chest());
  }
  if (from.born_type() != 0) {
    set_born_type(from.born_type());
  }
}

void CreateGadgetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CreateGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateGadgetInfo::CopyFrom(const CreateGadgetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateGadgetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateGadgetInfo::IsInitialized() const {
  return true;
}

void CreateGadgetInfo::Swap(CreateGadgetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateGadgetInfo::InternalSwap(CreateGadgetInfo* other) {
  using std::swap;
  swap(chest_, other->chest_);
  swap(born_type_, other->born_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateGadgetInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateGadgetInfo

// .proto.GadgetBornType born_type = 1;
void CreateGadgetInfo::clear_born_type() {
  born_type_ = 0;
}
::proto::GadgetBornType CreateGadgetInfo::born_type() const {
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.born_type)
  return static_cast< ::proto::GadgetBornType >(born_type_);
}
void CreateGadgetInfo::set_born_type(::proto::GadgetBornType value) {
  
  born_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateGadgetInfo.born_type)
}

// .proto.CreateGadgetInfo.Chest chest = 2;
bool CreateGadgetInfo::has_chest() const {
  return this != internal_default_instance() && chest_ != NULL;
}
void CreateGadgetInfo::clear_chest() {
  if (GetArenaNoVirtual() == NULL && chest_ != NULL) delete chest_;
  chest_ = NULL;
}
const ::proto::CreateGadgetInfo_Chest& CreateGadgetInfo::chest() const {
  const ::proto::CreateGadgetInfo_Chest* p = chest_;
  // @@protoc_insertion_point(field_get:proto.CreateGadgetInfo.chest)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateGadgetInfo_Chest*>(
      &::proto::_CreateGadgetInfo_Chest_default_instance_);
}
::proto::CreateGadgetInfo_Chest* CreateGadgetInfo::mutable_chest() {
  
  if (chest_ == NULL) {
    chest_ = new ::proto::CreateGadgetInfo_Chest;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateGadgetInfo.chest)
  return chest_;
}
::proto::CreateGadgetInfo_Chest* CreateGadgetInfo::release_chest() {
  // @@protoc_insertion_point(field_release:proto.CreateGadgetInfo.chest)
  
  ::proto::CreateGadgetInfo_Chest* temp = chest_;
  chest_ = NULL;
  return temp;
}
void CreateGadgetInfo::set_allocated_chest(::proto::CreateGadgetInfo_Chest* chest) {
  delete chest_;
  chest_ = chest;
  if (chest) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateGadgetInfo.chest)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateEntityInfo::kMonsterIdFieldNumber;
const int CreateEntityInfo::kNpcIdFieldNumber;
const int CreateEntityInfo::kGadgetIdFieldNumber;
const int CreateEntityInfo::kItemIdFieldNumber;
const int CreateEntityInfo::kLevelFieldNumber;
const int CreateEntityInfo::kPosFieldNumber;
const int CreateEntityInfo::kRotFieldNumber;
const int CreateEntityInfo::kSceneIdFieldNumber;
const int CreateEntityInfo::kRoomIdFieldNumber;
const int CreateEntityInfo::kClientUniqueIdFieldNumber;
const int CreateEntityInfo::kGadgetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateEntityInfo::CreateEntityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CreateEntityInfo)
}
CreateEntityInfo::CreateEntityInfo(const CreateEntityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_unique_id_) -
    reinterpret_cast<char*>(&level_)) + sizeof(client_unique_id_));
  clear_has_entity();
  switch (from.entity_case()) {
    case kMonsterId: {
      set_monster_id(from.monster_id());
      break;
    }
    case kNpcId: {
      set_npc_id(from.npc_id());
      break;
    }
    case kGadgetId: {
      set_gadget_id(from.gadget_id());
      break;
    }
    case kItemId: {
      set_item_id(from.item_id());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  clear_has_entity_create_info();
  switch (from.entity_create_info_case()) {
    case kGadget: {
      mutable_gadget()->::proto::CreateGadgetInfo::MergeFrom(from.gadget());
      break;
    }
    case ENTITY_CREATE_INFO_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateEntityInfo)
}

void CreateEntityInfo::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_unique_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(client_unique_id_));
  clear_has_entity();
  clear_has_entity_create_info();
  _cached_size_ = 0;
}

CreateEntityInfo::~CreateEntityInfo() {
  // @@protoc_insertion_point(destructor:proto.CreateEntityInfo)
  SharedDtor();
}

void CreateEntityInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rot_;
  if (has_entity()) {
    clear_entity();
  }
  if (has_entity_create_info()) {
    clear_entity_create_info();
  }
}

void CreateEntityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateEntityInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateEntityInfo& CreateEntityInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateEntityInfo* CreateEntityInfo::New(::google::protobuf::Arena* arena) const {
  CreateEntityInfo* n = new CreateEntityInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateEntityInfo::clear_entity() {
// @@protoc_insertion_point(one_of_clear_start:proto.CreateEntityInfo)
  switch (entity_case()) {
    case kMonsterId: {
      // No need to clear
      break;
    }
    case kNpcId: {
      // No need to clear
      break;
    }
    case kGadgetId: {
      // No need to clear
      break;
    }
    case kItemId: {
      // No need to clear
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTITY_NOT_SET;
}

void CreateEntityInfo::clear_entity_create_info() {
// @@protoc_insertion_point(one_of_clear_start:proto.CreateEntityInfo)
  switch (entity_create_info_case()) {
    case kGadget: {
      delete entity_create_info_.gadget_;
      break;
    }
    case ENTITY_CREATE_INFO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = ENTITY_CREATE_INFO_NOT_SET;
}


void CreateEntityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_unique_id_) -
      reinterpret_cast<char*>(&level_)) + sizeof(client_unique_id_));
  clear_entity();
  clear_entity_create_info();
  _internal_metadata_.Clear();
}

bool CreateEntityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CreateEntityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 monster_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_.monster_id_)));
          set_has_monster_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 npc_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          clear_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_.npc_id_)));
          set_has_npc_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_.gadget_id_)));
          set_has_gadget_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_.item_id_)));
          set_has_item_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 room_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_unique_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_unique_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CreateGadgetInfo gadget = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gadget()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CreateEntityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CreateEntityInfo)
  return false;
#undef DO_
}

void CreateEntityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CreateEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_id = 1;
  if (has_monster_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->monster_id(), output);
  }

  // uint32 npc_id = 2;
  if (has_npc_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->npc_id(), output);
  }

  // uint32 gadget_id = 3;
  if (has_gadget_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gadget_id(), output);
  }

  // uint32 item_id = 4;
  if (has_item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->item_id(), output);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // .proto.Vector pos = 6;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pos_, output);
  }

  // .proto.Vector rot = 7;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->rot_, output);
  }

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->scene_id(), output);
  }

  // uint32 room_id = 11;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->room_id(), output);
  }

  // uint32 client_unique_id = 12;
  if (this->client_unique_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->client_unique_id(), output);
  }

  // .proto.CreateGadgetInfo gadget = 13;
  if (has_gadget()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *entity_create_info_.gadget_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CreateEntityInfo)
}

::google::protobuf::uint8* CreateEntityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_id = 1;
  if (has_monster_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->monster_id(), target);
  }

  // uint32 npc_id = 2;
  if (has_npc_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->npc_id(), target);
  }

  // uint32 gadget_id = 3;
  if (has_gadget_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gadget_id(), target);
  }

  // uint32 item_id = 4;
  if (has_item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->item_id(), target);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // .proto.Vector pos = 6;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->pos_, deterministic, target);
  }

  // .proto.Vector rot = 7;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->rot_, deterministic, target);
  }

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->scene_id(), target);
  }

  // uint32 room_id = 11;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->room_id(), target);
  }

  // uint32 client_unique_id = 12;
  if (this->client_unique_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->client_unique_id(), target);
  }

  // .proto.CreateGadgetInfo gadget = 13;
  if (has_gadget()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *entity_create_info_.gadget_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateEntityInfo)
  return target;
}

size_t CreateEntityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateEntityInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 6;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector rot = 7;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // uint32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 scene_id = 10;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 room_id = 11;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 client_unique_id = 12;
  if (this->client_unique_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_unique_id());
  }

  switch (entity_case()) {
    // uint32 monster_id = 1;
    case kMonsterId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->monster_id());
      break;
    }
    // uint32 npc_id = 2;
    case kNpcId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->npc_id());
      break;
    }
    // uint32 gadget_id = 3;
    case kGadgetId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gadget_id());
      break;
    }
    // uint32 item_id = 4;
    case kItemId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_id());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  switch (entity_create_info_case()) {
    // .proto.CreateGadgetInfo gadget = 13;
    case kGadget: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_create_info_.gadget_);
      break;
    }
    case ENTITY_CREATE_INFO_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateEntityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CreateEntityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateEntityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateEntityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CreateEntityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CreateEntityInfo)
    MergeFrom(*source);
  }
}

void CreateEntityInfo::MergeFrom(const CreateEntityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateEntityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.client_unique_id() != 0) {
    set_client_unique_id(from.client_unique_id());
  }
  switch (from.entity_case()) {
    case kMonsterId: {
      set_monster_id(from.monster_id());
      break;
    }
    case kNpcId: {
      set_npc_id(from.npc_id());
      break;
    }
    case kGadgetId: {
      set_gadget_id(from.gadget_id());
      break;
    }
    case kItemId: {
      set_item_id(from.item_id());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  switch (from.entity_create_info_case()) {
    case kGadget: {
      mutable_gadget()->::proto::CreateGadgetInfo::MergeFrom(from.gadget());
      break;
    }
    case ENTITY_CREATE_INFO_NOT_SET: {
      break;
    }
  }
}

void CreateEntityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CreateEntityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateEntityInfo::CopyFrom(const CreateEntityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateEntityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateEntityInfo::IsInitialized() const {
  return true;
}

void CreateEntityInfo::Swap(CreateEntityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateEntityInfo::InternalSwap(CreateEntityInfo* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rot_, other->rot_);
  swap(level_, other->level_);
  swap(scene_id_, other->scene_id_);
  swap(room_id_, other->room_id_);
  swap(client_unique_id_, other->client_unique_id_);
  swap(entity_, other->entity_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(entity_create_info_, other->entity_create_info_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateEntityInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateEntityInfo

// uint32 monster_id = 1;
bool CreateEntityInfo::has_monster_id() const {
  return entity_case() == kMonsterId;
}
void CreateEntityInfo::set_has_monster_id() {
  _oneof_case_[0] = kMonsterId;
}
void CreateEntityInfo::clear_monster_id() {
  if (has_monster_id()) {
    entity_.monster_id_ = 0u;
    clear_has_entity();
  }
}
::google::protobuf::uint32 CreateEntityInfo::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.monster_id)
  if (has_monster_id()) {
    return entity_.monster_id_;
  }
  return 0u;
}
void CreateEntityInfo::set_monster_id(::google::protobuf::uint32 value) {
  if (!has_monster_id()) {
    clear_entity();
    set_has_monster_id();
  }
  entity_.monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.monster_id)
}

// uint32 npc_id = 2;
bool CreateEntityInfo::has_npc_id() const {
  return entity_case() == kNpcId;
}
void CreateEntityInfo::set_has_npc_id() {
  _oneof_case_[0] = kNpcId;
}
void CreateEntityInfo::clear_npc_id() {
  if (has_npc_id()) {
    entity_.npc_id_ = 0u;
    clear_has_entity();
  }
}
::google::protobuf::uint32 CreateEntityInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.npc_id)
  if (has_npc_id()) {
    return entity_.npc_id_;
  }
  return 0u;
}
void CreateEntityInfo::set_npc_id(::google::protobuf::uint32 value) {
  if (!has_npc_id()) {
    clear_entity();
    set_has_npc_id();
  }
  entity_.npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.npc_id)
}

// uint32 gadget_id = 3;
bool CreateEntityInfo::has_gadget_id() const {
  return entity_case() == kGadgetId;
}
void CreateEntityInfo::set_has_gadget_id() {
  _oneof_case_[0] = kGadgetId;
}
void CreateEntityInfo::clear_gadget_id() {
  if (has_gadget_id()) {
    entity_.gadget_id_ = 0u;
    clear_has_entity();
  }
}
::google::protobuf::uint32 CreateEntityInfo::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.gadget_id)
  if (has_gadget_id()) {
    return entity_.gadget_id_;
  }
  return 0u;
}
void CreateEntityInfo::set_gadget_id(::google::protobuf::uint32 value) {
  if (!has_gadget_id()) {
    clear_entity();
    set_has_gadget_id();
  }
  entity_.gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.gadget_id)
}

// uint32 item_id = 4;
bool CreateEntityInfo::has_item_id() const {
  return entity_case() == kItemId;
}
void CreateEntityInfo::set_has_item_id() {
  _oneof_case_[0] = kItemId;
}
void CreateEntityInfo::clear_item_id() {
  if (has_item_id()) {
    entity_.item_id_ = 0u;
    clear_has_entity();
  }
}
::google::protobuf::uint32 CreateEntityInfo::item_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.item_id)
  if (has_item_id()) {
    return entity_.item_id_;
  }
  return 0u;
}
void CreateEntityInfo::set_item_id(::google::protobuf::uint32 value) {
  if (!has_item_id()) {
    clear_entity();
    set_has_item_id();
  }
  entity_.item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.item_id)
}

// uint32 level = 5;
void CreateEntityInfo::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 CreateEntityInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.level)
  return level_;
}
void CreateEntityInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.level)
}

// .proto.Vector pos = 6;
bool CreateEntityInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void CreateEntityInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& CreateEntityInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* CreateEntityInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.pos)
  return pos_;
}
::proto::Vector* CreateEntityInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void CreateEntityInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.pos)
}

// .proto.Vector rot = 7;
bool CreateEntityInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void CreateEntityInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& CreateEntityInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* CreateEntityInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.rot)
  return rot_;
}
::proto::Vector* CreateEntityInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void CreateEntityInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.rot)
}

// uint32 scene_id = 10;
void CreateEntityInfo::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 CreateEntityInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.scene_id)
  return scene_id_;
}
void CreateEntityInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.scene_id)
}

// uint32 room_id = 11;
void CreateEntityInfo::clear_room_id() {
  room_id_ = 0u;
}
::google::protobuf::uint32 CreateEntityInfo::room_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.room_id)
  return room_id_;
}
void CreateEntityInfo::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.room_id)
}

// uint32 client_unique_id = 12;
void CreateEntityInfo::clear_client_unique_id() {
  client_unique_id_ = 0u;
}
::google::protobuf::uint32 CreateEntityInfo::client_unique_id() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.client_unique_id)
  return client_unique_id_;
}
void CreateEntityInfo::set_client_unique_id(::google::protobuf::uint32 value) {
  
  client_unique_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateEntityInfo.client_unique_id)
}

// .proto.CreateGadgetInfo gadget = 13;
bool CreateEntityInfo::has_gadget() const {
  return entity_create_info_case() == kGadget;
}
void CreateEntityInfo::set_has_gadget() {
  _oneof_case_[1] = kGadget;
}
void CreateEntityInfo::clear_gadget() {
  if (has_gadget()) {
    delete entity_create_info_.gadget_;
    clear_has_entity_create_info();
  }
}
 const ::proto::CreateGadgetInfo& CreateEntityInfo::gadget() const {
  // @@protoc_insertion_point(field_get:proto.CreateEntityInfo.gadget)
  return has_gadget()
      ? *entity_create_info_.gadget_
      : ::proto::CreateGadgetInfo::default_instance();
}
::proto::CreateGadgetInfo* CreateEntityInfo::mutable_gadget() {
  if (!has_gadget()) {
    clear_entity_create_info();
    set_has_gadget();
    entity_create_info_.gadget_ = new ::proto::CreateGadgetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.CreateEntityInfo.gadget)
  return entity_create_info_.gadget_;
}
::proto::CreateGadgetInfo* CreateEntityInfo::release_gadget() {
  // @@protoc_insertion_point(field_release:proto.CreateEntityInfo.gadget)
  if (has_gadget()) {
    clear_has_entity_create_info();
    ::proto::CreateGadgetInfo* temp = entity_create_info_.gadget_;
    entity_create_info_.gadget_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void CreateEntityInfo::set_allocated_gadget(::proto::CreateGadgetInfo* gadget) {
  clear_entity_create_info();
  if (gadget) {
    set_has_gadget();
    entity_create_info_.gadget_ = gadget;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CreateEntityInfo.gadget)
}

bool CreateEntityInfo::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
void CreateEntityInfo::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
bool CreateEntityInfo::has_entity_create_info() const {
  return entity_create_info_case() != ENTITY_CREATE_INFO_NOT_SET;
}
void CreateEntityInfo::clear_has_entity_create_info() {
  _oneof_case_[1] = ENTITY_CREATE_INFO_NOT_SET;
}
CreateEntityInfo::EntityCase CreateEntityInfo::entity_case() const {
  return CreateEntityInfo::EntityCase(_oneof_case_[0]);
}
CreateEntityInfo::EntityCreateInfoCase CreateEntityInfo::entity_create_info_case() const {
  return CreateEntityInfo::EntityCreateInfoCase(_oneof_case_[1]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrialAvatarGrantRecord::kGrantReasonFieldNumber;
const int TrialAvatarGrantRecord::kFromParentQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrialAvatarGrantRecord::TrialAvatarGrantRecord()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TrialAvatarGrantRecord)
}
TrialAvatarGrantRecord::TrialAvatarGrantRecord(const TrialAvatarGrantRecord& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&grant_reason_, &from.grant_reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&from_parent_quest_id_) -
    reinterpret_cast<char*>(&grant_reason_)) + sizeof(from_parent_quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TrialAvatarGrantRecord)
}

void TrialAvatarGrantRecord::SharedCtor() {
  ::memset(&grant_reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_parent_quest_id_) -
      reinterpret_cast<char*>(&grant_reason_)) + sizeof(from_parent_quest_id_));
  _cached_size_ = 0;
}

TrialAvatarGrantRecord::~TrialAvatarGrantRecord() {
  // @@protoc_insertion_point(destructor:proto.TrialAvatarGrantRecord)
  SharedDtor();
}

void TrialAvatarGrantRecord::SharedDtor() {
}

void TrialAvatarGrantRecord::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrialAvatarGrantRecord::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrialAvatarGrantRecord& TrialAvatarGrantRecord::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrialAvatarGrantRecord* TrialAvatarGrantRecord::New(::google::protobuf::Arena* arena) const {
  TrialAvatarGrantRecord* n = new TrialAvatarGrantRecord;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrialAvatarGrantRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TrialAvatarGrantRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&grant_reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&from_parent_quest_id_) -
      reinterpret_cast<char*>(&grant_reason_)) + sizeof(from_parent_quest_id_));
  _internal_metadata_.Clear();
}

bool TrialAvatarGrantRecord::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TrialAvatarGrantRecord)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 grant_reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grant_reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_parent_quest_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TrialAvatarGrantRecord)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TrialAvatarGrantRecord)
  return false;
#undef DO_
}

void TrialAvatarGrantRecord::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TrialAvatarGrantRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 grant_reason = 1;
  if (this->grant_reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->grant_reason(), output);
  }

  // uint32 from_parent_quest_id = 2;
  if (this->from_parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->from_parent_quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TrialAvatarGrantRecord)
}

::google::protobuf::uint8* TrialAvatarGrantRecord::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TrialAvatarGrantRecord)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 grant_reason = 1;
  if (this->grant_reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->grant_reason(), target);
  }

  // uint32 from_parent_quest_id = 2;
  if (this->from_parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->from_parent_quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TrialAvatarGrantRecord)
  return target;
}

size_t TrialAvatarGrantRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TrialAvatarGrantRecord)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 grant_reason = 1;
  if (this->grant_reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->grant_reason());
  }

  // uint32 from_parent_quest_id = 2;
  if (this->from_parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_parent_quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrialAvatarGrantRecord::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TrialAvatarGrantRecord)
  GOOGLE_DCHECK_NE(&from, this);
  const TrialAvatarGrantRecord* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrialAvatarGrantRecord>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TrialAvatarGrantRecord)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TrialAvatarGrantRecord)
    MergeFrom(*source);
  }
}

void TrialAvatarGrantRecord::MergeFrom(const TrialAvatarGrantRecord& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TrialAvatarGrantRecord)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grant_reason() != 0) {
    set_grant_reason(from.grant_reason());
  }
  if (from.from_parent_quest_id() != 0) {
    set_from_parent_quest_id(from.from_parent_quest_id());
  }
}

void TrialAvatarGrantRecord::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TrialAvatarGrantRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrialAvatarGrantRecord::CopyFrom(const TrialAvatarGrantRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TrialAvatarGrantRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrialAvatarGrantRecord::IsInitialized() const {
  return true;
}

void TrialAvatarGrantRecord::Swap(TrialAvatarGrantRecord* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrialAvatarGrantRecord::InternalSwap(TrialAvatarGrantRecord* other) {
  using std::swap;
  swap(grant_reason_, other->grant_reason_);
  swap(from_parent_quest_id_, other->from_parent_quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrialAvatarGrantRecord::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrialAvatarGrantRecord

// uint32 grant_reason = 1;
void TrialAvatarGrantRecord::clear_grant_reason() {
  grant_reason_ = 0u;
}
::google::protobuf::uint32 TrialAvatarGrantRecord::grant_reason() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarGrantRecord.grant_reason)
  return grant_reason_;
}
void TrialAvatarGrantRecord::set_grant_reason(::google::protobuf::uint32 value) {
  
  grant_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarGrantRecord.grant_reason)
}

// uint32 from_parent_quest_id = 2;
void TrialAvatarGrantRecord::clear_from_parent_quest_id() {
  from_parent_quest_id_ = 0u;
}
::google::protobuf::uint32 TrialAvatarGrantRecord::from_parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarGrantRecord.from_parent_quest_id)
  return from_parent_quest_id_;
}
void TrialAvatarGrantRecord::set_from_parent_quest_id(::google::protobuf::uint32 value) {
  
  from_parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarGrantRecord.from_parent_quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrialAvatarInfo::kTrialAvatarIdFieldNumber;
const int TrialAvatarInfo::kTrialEquipListFieldNumber;
const int TrialAvatarInfo::kGrantRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrialAvatarInfo::TrialAvatarInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TrialAvatarInfo)
}
TrialAvatarInfo::TrialAvatarInfo(const TrialAvatarInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      trial_equip_list_(from.trial_equip_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_grant_record()) {
    grant_record_ = new ::proto::TrialAvatarGrantRecord(*from.grant_record_);
  } else {
    grant_record_ = NULL;
  }
  trial_avatar_id_ = from.trial_avatar_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TrialAvatarInfo)
}

void TrialAvatarInfo::SharedCtor() {
  ::memset(&grant_record_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&trial_avatar_id_) -
      reinterpret_cast<char*>(&grant_record_)) + sizeof(trial_avatar_id_));
  _cached_size_ = 0;
}

TrialAvatarInfo::~TrialAvatarInfo() {
  // @@protoc_insertion_point(destructor:proto.TrialAvatarInfo)
  SharedDtor();
}

void TrialAvatarInfo::SharedDtor() {
  if (this != internal_default_instance()) delete grant_record_;
}

void TrialAvatarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrialAvatarInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrialAvatarInfo& TrialAvatarInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

TrialAvatarInfo* TrialAvatarInfo::New(::google::protobuf::Arena* arena) const {
  TrialAvatarInfo* n = new TrialAvatarInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrialAvatarInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TrialAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trial_equip_list_.Clear();
  if (GetArenaNoVirtual() == NULL && grant_record_ != NULL) {
    delete grant_record_;
  }
  grant_record_ = NULL;
  trial_avatar_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TrialAvatarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TrialAvatarInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 trial_avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trial_avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Item trial_equip_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trial_equip_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TrialAvatarGrantRecord grant_record = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_grant_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TrialAvatarInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TrialAvatarInfo)
  return false;
#undef DO_
}

void TrialAvatarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TrialAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 trial_avatar_id = 1;
  if (this->trial_avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->trial_avatar_id(), output);
  }

  // repeated .proto.Item trial_equip_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trial_equip_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->trial_equip_list(static_cast<int>(i)), output);
  }

  // .proto.TrialAvatarGrantRecord grant_record = 3;
  if (this->has_grant_record()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->grant_record_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TrialAvatarInfo)
}

::google::protobuf::uint8* TrialAvatarInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TrialAvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 trial_avatar_id = 1;
  if (this->trial_avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->trial_avatar_id(), target);
  }

  // repeated .proto.Item trial_equip_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trial_equip_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->trial_equip_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.TrialAvatarGrantRecord grant_record = 3;
  if (this->has_grant_record()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->grant_record_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TrialAvatarInfo)
  return target;
}

size_t TrialAvatarInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TrialAvatarInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Item trial_equip_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->trial_equip_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->trial_equip_list(static_cast<int>(i)));
    }
  }

  // .proto.TrialAvatarGrantRecord grant_record = 3;
  if (this->has_grant_record()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->grant_record_);
  }

  // uint32 trial_avatar_id = 1;
  if (this->trial_avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trial_avatar_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrialAvatarInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TrialAvatarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TrialAvatarInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrialAvatarInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TrialAvatarInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TrialAvatarInfo)
    MergeFrom(*source);
  }
}

void TrialAvatarInfo::MergeFrom(const TrialAvatarInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TrialAvatarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trial_equip_list_.MergeFrom(from.trial_equip_list_);
  if (from.has_grant_record()) {
    mutable_grant_record()->::proto::TrialAvatarGrantRecord::MergeFrom(from.grant_record());
  }
  if (from.trial_avatar_id() != 0) {
    set_trial_avatar_id(from.trial_avatar_id());
  }
}

void TrialAvatarInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TrialAvatarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrialAvatarInfo::CopyFrom(const TrialAvatarInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TrialAvatarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrialAvatarInfo::IsInitialized() const {
  return true;
}

void TrialAvatarInfo::Swap(TrialAvatarInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrialAvatarInfo::InternalSwap(TrialAvatarInfo* other) {
  using std::swap;
  trial_equip_list_.InternalSwap(&other->trial_equip_list_);
  swap(grant_record_, other->grant_record_);
  swap(trial_avatar_id_, other->trial_avatar_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrialAvatarInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrialAvatarInfo

// uint32 trial_avatar_id = 1;
void TrialAvatarInfo::clear_trial_avatar_id() {
  trial_avatar_id_ = 0u;
}
::google::protobuf::uint32 TrialAvatarInfo::trial_avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.trial_avatar_id)
  return trial_avatar_id_;
}
void TrialAvatarInfo::set_trial_avatar_id(::google::protobuf::uint32 value) {
  
  trial_avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TrialAvatarInfo.trial_avatar_id)
}

// repeated .proto.Item trial_equip_list = 2;
int TrialAvatarInfo::trial_equip_list_size() const {
  return trial_equip_list_.size();
}
void TrialAvatarInfo::clear_trial_equip_list() {
  trial_equip_list_.Clear();
}
const ::proto::Item& TrialAvatarInfo::trial_equip_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Get(index);
}
::proto::Item* TrialAvatarInfo::mutable_trial_equip_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Mutable(index);
}
::proto::Item* TrialAvatarInfo::add_trial_equip_list() {
  // @@protoc_insertion_point(field_add:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Item >*
TrialAvatarInfo::mutable_trial_equip_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TrialAvatarInfo.trial_equip_list)
  return &trial_equip_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Item >&
TrialAvatarInfo::trial_equip_list() const {
  // @@protoc_insertion_point(field_list:proto.TrialAvatarInfo.trial_equip_list)
  return trial_equip_list_;
}

// .proto.TrialAvatarGrantRecord grant_record = 3;
bool TrialAvatarInfo::has_grant_record() const {
  return this != internal_default_instance() && grant_record_ != NULL;
}
void TrialAvatarInfo::clear_grant_record() {
  if (GetArenaNoVirtual() == NULL && grant_record_ != NULL) delete grant_record_;
  grant_record_ = NULL;
}
const ::proto::TrialAvatarGrantRecord& TrialAvatarInfo::grant_record() const {
  const ::proto::TrialAvatarGrantRecord* p = grant_record_;
  // @@protoc_insertion_point(field_get:proto.TrialAvatarInfo.grant_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TrialAvatarGrantRecord*>(
      &::proto::_TrialAvatarGrantRecord_default_instance_);
}
::proto::TrialAvatarGrantRecord* TrialAvatarInfo::mutable_grant_record() {
  
  if (grant_record_ == NULL) {
    grant_record_ = new ::proto::TrialAvatarGrantRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.TrialAvatarInfo.grant_record)
  return grant_record_;
}
::proto::TrialAvatarGrantRecord* TrialAvatarInfo::release_grant_record() {
  // @@protoc_insertion_point(field_release:proto.TrialAvatarInfo.grant_record)
  
  ::proto::TrialAvatarGrantRecord* temp = grant_record_;
  grant_record_ = NULL;
  return temp;
}
void TrialAvatarInfo::set_allocated_grant_record(::proto::TrialAvatarGrantRecord* grant_record) {
  delete grant_record_;
  grant_record_ = grant_record;
  if (grant_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TrialAvatarInfo.grant_record)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarSkillInfo::kPassCdTimeFieldNumber;
const int AvatarSkillInfo::kFullCdTimeListFieldNumber;
const int AvatarSkillInfo::kMaxChargeCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarSkillInfo::AvatarSkillInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarSkillInfo)
}
AvatarSkillInfo::AvatarSkillInfo(const AvatarSkillInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      full_cd_time_list_(from.full_cd_time_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pass_cd_time_, &from.pass_cd_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_charge_count_) -
    reinterpret_cast<char*>(&pass_cd_time_)) + sizeof(max_charge_count_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarSkillInfo)
}

void AvatarSkillInfo::SharedCtor() {
  ::memset(&pass_cd_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_charge_count_) -
      reinterpret_cast<char*>(&pass_cd_time_)) + sizeof(max_charge_count_));
  _cached_size_ = 0;
}

AvatarSkillInfo::~AvatarSkillInfo() {
  // @@protoc_insertion_point(destructor:proto.AvatarSkillInfo)
  SharedDtor();
}

void AvatarSkillInfo::SharedDtor() {
}

void AvatarSkillInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarSkillInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarSkillInfo& AvatarSkillInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarSkillInfo* AvatarSkillInfo::New(::google::protobuf::Arena* arena) const {
  AvatarSkillInfo* n = new AvatarSkillInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarSkillInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarSkillInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  full_cd_time_list_.Clear();
  ::memset(&pass_cd_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_charge_count_) -
      reinterpret_cast<char*>(&pass_cd_time_)) + sizeof(max_charge_count_));
  _internal_metadata_.Clear();
}

bool AvatarSkillInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarSkillInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 pass_cd_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pass_cd_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 full_cd_time_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_full_cd_time_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_full_cd_time_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_charge_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_charge_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarSkillInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarSkillInfo)
  return false;
#undef DO_
}

void AvatarSkillInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarSkillInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pass_cd_time = 1;
  if (this->pass_cd_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pass_cd_time(), output);
  }

  // repeated uint32 full_cd_time_list = 2;
  if (this->full_cd_time_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _full_cd_time_list_cached_byte_size_));
  }
  for (int i = 0, n = this->full_cd_time_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->full_cd_time_list(i), output);
  }

  // uint32 max_charge_count = 3;
  if (this->max_charge_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_charge_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarSkillInfo)
}

::google::protobuf::uint8* AvatarSkillInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarSkillInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 pass_cd_time = 1;
  if (this->pass_cd_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pass_cd_time(), target);
  }

  // repeated uint32 full_cd_time_list = 2;
  if (this->full_cd_time_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _full_cd_time_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->full_cd_time_list_, target);
  }

  // uint32 max_charge_count = 3;
  if (this->max_charge_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_charge_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarSkillInfo)
  return target;
}

size_t AvatarSkillInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarSkillInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 full_cd_time_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->full_cd_time_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _full_cd_time_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 pass_cd_time = 1;
  if (this->pass_cd_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pass_cd_time());
  }

  // uint32 max_charge_count = 3;
  if (this->max_charge_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_charge_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarSkillInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarSkillInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarSkillInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarSkillInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarSkillInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarSkillInfo)
    MergeFrom(*source);
  }
}

void AvatarSkillInfo::MergeFrom(const AvatarSkillInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarSkillInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  full_cd_time_list_.MergeFrom(from.full_cd_time_list_);
  if (from.pass_cd_time() != 0) {
    set_pass_cd_time(from.pass_cd_time());
  }
  if (from.max_charge_count() != 0) {
    set_max_charge_count(from.max_charge_count());
  }
}

void AvatarSkillInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarSkillInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarSkillInfo::CopyFrom(const AvatarSkillInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarSkillInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarSkillInfo::IsInitialized() const {
  return true;
}

void AvatarSkillInfo::Swap(AvatarSkillInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarSkillInfo::InternalSwap(AvatarSkillInfo* other) {
  using std::swap;
  full_cd_time_list_.InternalSwap(&other->full_cd_time_list_);
  swap(pass_cd_time_, other->pass_cd_time_);
  swap(max_charge_count_, other->max_charge_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarSkillInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarSkillInfo

// uint32 pass_cd_time = 1;
void AvatarSkillInfo::clear_pass_cd_time() {
  pass_cd_time_ = 0u;
}
::google::protobuf::uint32 AvatarSkillInfo::pass_cd_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.pass_cd_time)
  return pass_cd_time_;
}
void AvatarSkillInfo::set_pass_cd_time(::google::protobuf::uint32 value) {
  
  pass_cd_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.pass_cd_time)
}

// repeated uint32 full_cd_time_list = 2;
int AvatarSkillInfo::full_cd_time_list_size() const {
  return full_cd_time_list_.size();
}
void AvatarSkillInfo::clear_full_cd_time_list() {
  full_cd_time_list_.Clear();
}
::google::protobuf::uint32 AvatarSkillInfo::full_cd_time_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.full_cd_time_list)
  return full_cd_time_list_.Get(index);
}
void AvatarSkillInfo::set_full_cd_time_list(int index, ::google::protobuf::uint32 value) {
  full_cd_time_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.full_cd_time_list)
}
void AvatarSkillInfo::add_full_cd_time_list(::google::protobuf::uint32 value) {
  full_cd_time_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarSkillInfo.full_cd_time_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarSkillInfo::full_cd_time_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarSkillInfo.full_cd_time_list)
  return full_cd_time_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarSkillInfo::mutable_full_cd_time_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarSkillInfo.full_cd_time_list)
  return &full_cd_time_list_;
}

// uint32 max_charge_count = 3;
void AvatarSkillInfo::clear_max_charge_count() {
  max_charge_count_ = 0u;
}
::google::protobuf::uint32 AvatarSkillInfo::max_charge_count() const {
  // @@protoc_insertion_point(field_get:proto.AvatarSkillInfo.max_charge_count)
  return max_charge_count_;
}
void AvatarSkillInfo::set_max_charge_count(::google::protobuf::uint32 value) {
  
  max_charge_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarSkillInfo.max_charge_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarFetterInfo::kExpNumberFieldNumber;
const int AvatarFetterInfo::kExpLevelFieldNumber;
const int AvatarFetterInfo::kOpenIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarFetterInfo::AvatarFetterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarFetterInfo)
}
AvatarFetterInfo::AvatarFetterInfo(const AvatarFetterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      open_id_list_(from.open_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&exp_number_, &from.exp_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&exp_level_) -
    reinterpret_cast<char*>(&exp_number_)) + sizeof(exp_level_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarFetterInfo)
}

void AvatarFetterInfo::SharedCtor() {
  ::memset(&exp_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exp_level_) -
      reinterpret_cast<char*>(&exp_number_)) + sizeof(exp_level_));
  _cached_size_ = 0;
}

AvatarFetterInfo::~AvatarFetterInfo() {
  // @@protoc_insertion_point(destructor:proto.AvatarFetterInfo)
  SharedDtor();
}

void AvatarFetterInfo::SharedDtor() {
}

void AvatarFetterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarFetterInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarFetterInfo& AvatarFetterInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarFetterInfo* AvatarFetterInfo::New(::google::protobuf::Arena* arena) const {
  AvatarFetterInfo* n = new AvatarFetterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarFetterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarFetterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  open_id_list_.Clear();
  ::memset(&exp_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&exp_level_) -
      reinterpret_cast<char*>(&exp_number_)) + sizeof(exp_level_));
  _internal_metadata_.Clear();
}

bool AvatarFetterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarFetterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 exp_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 open_id_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_open_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_open_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarFetterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarFetterInfo)
  return false;
#undef DO_
}

void AvatarFetterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarFetterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 exp_number = 1;
  if (this->exp_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->exp_number(), output);
  }

  // uint32 exp_level = 2;
  if (this->exp_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp_level(), output);
  }

  // repeated uint32 open_id_list = 3;
  if (this->open_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _open_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->open_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->open_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarFetterInfo)
}

::google::protobuf::uint8* AvatarFetterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarFetterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 exp_number = 1;
  if (this->exp_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->exp_number(), target);
  }

  // uint32 exp_level = 2;
  if (this->exp_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp_level(), target);
  }

  // repeated uint32 open_id_list = 3;
  if (this->open_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _open_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->open_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarFetterInfo)
  return target;
}

size_t AvatarFetterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarFetterInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 open_id_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->open_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _open_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 exp_number = 1;
  if (this->exp_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp_number());
  }

  // uint32 exp_level = 2;
  if (this->exp_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarFetterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarFetterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarFetterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarFetterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarFetterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarFetterInfo)
    MergeFrom(*source);
  }
}

void AvatarFetterInfo::MergeFrom(const AvatarFetterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarFetterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  open_id_list_.MergeFrom(from.open_id_list_);
  if (from.exp_number() != 0) {
    set_exp_number(from.exp_number());
  }
  if (from.exp_level() != 0) {
    set_exp_level(from.exp_level());
  }
}

void AvatarFetterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarFetterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarFetterInfo::CopyFrom(const AvatarFetterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarFetterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarFetterInfo::IsInitialized() const {
  return true;
}

void AvatarFetterInfo::Swap(AvatarFetterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarFetterInfo::InternalSwap(AvatarFetterInfo* other) {
  using std::swap;
  open_id_list_.InternalSwap(&other->open_id_list_);
  swap(exp_number_, other->exp_number_);
  swap(exp_level_, other->exp_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarFetterInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarFetterInfo

// uint32 exp_number = 1;
void AvatarFetterInfo::clear_exp_number() {
  exp_number_ = 0u;
}
::google::protobuf::uint32 AvatarFetterInfo::exp_number() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.exp_number)
  return exp_number_;
}
void AvatarFetterInfo::set_exp_number(::google::protobuf::uint32 value) {
  
  exp_number_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.exp_number)
}

// uint32 exp_level = 2;
void AvatarFetterInfo::clear_exp_level() {
  exp_level_ = 0u;
}
::google::protobuf::uint32 AvatarFetterInfo::exp_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.exp_level)
  return exp_level_;
}
void AvatarFetterInfo::set_exp_level(::google::protobuf::uint32 value) {
  
  exp_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.exp_level)
}

// repeated uint32 open_id_list = 3;
int AvatarFetterInfo::open_id_list_size() const {
  return open_id_list_.size();
}
void AvatarFetterInfo::clear_open_id_list() {
  open_id_list_.Clear();
}
::google::protobuf::uint32 AvatarFetterInfo::open_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarFetterInfo.open_id_list)
  return open_id_list_.Get(index);
}
void AvatarFetterInfo::set_open_id_list(int index, ::google::protobuf::uint32 value) {
  open_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarFetterInfo.open_id_list)
}
void AvatarFetterInfo::add_open_id_list(::google::protobuf::uint32 value) {
  open_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarFetterInfo.open_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarFetterInfo::open_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarFetterInfo.open_id_list)
  return open_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarFetterInfo::mutable_open_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarFetterInfo.open_id_list)
  return &open_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarExpeditionInfo::kStateFieldNumber;
const int AvatarExpeditionInfo::kExpIdFieldNumber;
const int AvatarExpeditionInfo::kHourTimeFieldNumber;
const int AvatarExpeditionInfo::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarExpeditionInfo::AvatarExpeditionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarExpeditionInfo)
}
AvatarExpeditionInfo::AvatarExpeditionInfo(const AvatarExpeditionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_time_) -
    reinterpret_cast<char*>(&state_)) + sizeof(start_time_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarExpeditionInfo)
}

void AvatarExpeditionInfo::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&state_)) + sizeof(start_time_));
  _cached_size_ = 0;
}

AvatarExpeditionInfo::~AvatarExpeditionInfo() {
  // @@protoc_insertion_point(destructor:proto.AvatarExpeditionInfo)
  SharedDtor();
}

void AvatarExpeditionInfo::SharedDtor() {
}

void AvatarExpeditionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarExpeditionInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarExpeditionInfo& AvatarExpeditionInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarExpeditionInfo* AvatarExpeditionInfo::New(::google::protobuf::Arena* arena) const {
  AvatarExpeditionInfo* n = new AvatarExpeditionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarExpeditionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarExpeditionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&state_)) + sizeof(start_time_));
  _internal_metadata_.Clear();
}

bool AvatarExpeditionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarExpeditionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.AvatarExpeditionState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::proto::AvatarExpeditionState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hour_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hour_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarExpeditionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarExpeditionInfo)
  return false;
#undef DO_
}

void AvatarExpeditionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarExpeditionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AvatarExpeditionState state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // uint32 exp_id = 2;
  if (this->exp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->exp_id(), output);
  }

  // uint32 hour_time = 3;
  if (this->hour_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->hour_time(), output);
  }

  // uint32 start_time = 4;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->start_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarExpeditionInfo)
}

::google::protobuf::uint8* AvatarExpeditionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarExpeditionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.AvatarExpeditionState state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // uint32 exp_id = 2;
  if (this->exp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->exp_id(), target);
  }

  // uint32 hour_time = 3;
  if (this->hour_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->hour_time(), target);
  }

  // uint32 start_time = 4;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->start_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarExpeditionInfo)
  return target;
}

size_t AvatarExpeditionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarExpeditionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AvatarExpeditionState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // uint32 exp_id = 2;
  if (this->exp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp_id());
  }

  // uint32 hour_time = 3;
  if (this->hour_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hour_time());
  }

  // uint32 start_time = 4;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarExpeditionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarExpeditionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarExpeditionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarExpeditionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarExpeditionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarExpeditionInfo)
    MergeFrom(*source);
  }
}

void AvatarExpeditionInfo::MergeFrom(const AvatarExpeditionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarExpeditionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.exp_id() != 0) {
    set_exp_id(from.exp_id());
  }
  if (from.hour_time() != 0) {
    set_hour_time(from.hour_time());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
}

void AvatarExpeditionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarExpeditionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarExpeditionInfo::CopyFrom(const AvatarExpeditionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarExpeditionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarExpeditionInfo::IsInitialized() const {
  return true;
}

void AvatarExpeditionInfo::Swap(AvatarExpeditionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarExpeditionInfo::InternalSwap(AvatarExpeditionInfo* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(exp_id_, other->exp_id_);
  swap(hour_time_, other->hour_time_);
  swap(start_time_, other->start_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarExpeditionInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarExpeditionInfo

// .proto.AvatarExpeditionState state = 1;
void AvatarExpeditionInfo::clear_state() {
  state_ = 0;
}
::proto::AvatarExpeditionState AvatarExpeditionInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.state)
  return static_cast< ::proto::AvatarExpeditionState >(state_);
}
void AvatarExpeditionInfo::set_state(::proto::AvatarExpeditionState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.state)
}

// uint32 exp_id = 2;
void AvatarExpeditionInfo::clear_exp_id() {
  exp_id_ = 0u;
}
::google::protobuf::uint32 AvatarExpeditionInfo::exp_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.exp_id)
  return exp_id_;
}
void AvatarExpeditionInfo::set_exp_id(::google::protobuf::uint32 value) {
  
  exp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.exp_id)
}

// uint32 hour_time = 3;
void AvatarExpeditionInfo::clear_hour_time() {
  hour_time_ = 0u;
}
::google::protobuf::uint32 AvatarExpeditionInfo::hour_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.hour_time)
  return hour_time_;
}
void AvatarExpeditionInfo::set_hour_time(::google::protobuf::uint32 value) {
  
  hour_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.hour_time)
}

// uint32 start_time = 4;
void AvatarExpeditionInfo::clear_start_time() {
  start_time_ = 0u;
}
::google::protobuf::uint32 AvatarExpeditionInfo::start_time() const {
  // @@protoc_insertion_point(field_get:proto.AvatarExpeditionInfo.start_time)
  return start_time_;
}
void AvatarExpeditionInfo::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarExpeditionInfo.start_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarInfo::AvatarInfo_PropMapEntry::AvatarInfo_PropMapEntry() {}
AvatarInfo::AvatarInfo_PropMapEntry::AvatarInfo_PropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarInfo::AvatarInfo_PropMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[78];
}
void AvatarInfo::AvatarInfo_PropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarInfo::AvatarInfo_PropMapEntry::MergeFrom(const AvatarInfo_PropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarInfo::AvatarInfo_FightPropMapEntry::AvatarInfo_FightPropMapEntry() {}
AvatarInfo::AvatarInfo_FightPropMapEntry::AvatarInfo_FightPropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarInfo::AvatarInfo_FightPropMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[79];
}
void AvatarInfo::AvatarInfo_FightPropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarInfo::AvatarInfo_FightPropMapEntry::MergeFrom(const AvatarInfo_FightPropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarInfo::AvatarInfo_SkillMapEntry::AvatarInfo_SkillMapEntry() {}
AvatarInfo::AvatarInfo_SkillMapEntry::AvatarInfo_SkillMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarInfo::AvatarInfo_SkillMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[80];
}
void AvatarInfo::AvatarInfo_SkillMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarInfo::AvatarInfo_SkillMapEntry::MergeFrom(const AvatarInfo_SkillMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarInfo::AvatarInfo_SkillLevelMapEntry::AvatarInfo_SkillLevelMapEntry() {}
AvatarInfo::AvatarInfo_SkillLevelMapEntry::AvatarInfo_SkillLevelMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarInfo::AvatarInfo_SkillLevelMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[81];
}
void AvatarInfo::AvatarInfo_SkillLevelMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarInfo::AvatarInfo_SkillLevelMapEntry::MergeFrom(const AvatarInfo_SkillLevelMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AvatarInfo::AvatarInfo_ProudSkillExtraLevelMapEntry::AvatarInfo_ProudSkillExtraLevelMapEntry() {}
AvatarInfo::AvatarInfo_ProudSkillExtraLevelMapEntry::AvatarInfo_ProudSkillExtraLevelMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AvatarInfo::AvatarInfo_ProudSkillExtraLevelMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[82];
}
void AvatarInfo::AvatarInfo_ProudSkillExtraLevelMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AvatarInfo::AvatarInfo_ProudSkillExtraLevelMapEntry::MergeFrom(const AvatarInfo_ProudSkillExtraLevelMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarInfo::kAvatarIdFieldNumber;
const int AvatarInfo::kGuidFieldNumber;
const int AvatarInfo::kPropMapFieldNumber;
const int AvatarInfo::kLifeStateFieldNumber;
const int AvatarInfo::kEquipGuidListFieldNumber;
const int AvatarInfo::kTalentIdListFieldNumber;
const int AvatarInfo::kFightPropMapFieldNumber;
const int AvatarInfo::kTrialAvatarInfoFieldNumber;
const int AvatarInfo::kSkillMapFieldNumber;
const int AvatarInfo::kSkillDepotIdFieldNumber;
const int AvatarInfo::kFetterInfoFieldNumber;
const int AvatarInfo::kCoreProudSkillLevelFieldNumber;
const int AvatarInfo::kInherentProudSkillListFieldNumber;
const int AvatarInfo::kSkillLevelMapFieldNumber;
const int AvatarInfo::kExpeditionStateFieldNumber;
const int AvatarInfo::kProudSkillExtraLevelMapFieldNumber;
const int AvatarInfo::kIsFocusFieldNumber;
const int AvatarInfo::kAvatarTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarInfo::AvatarInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarInfo)
}
AvatarInfo::AvatarInfo(const AvatarInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      equip_guid_list_(from.equip_guid_list_),
      talent_id_list_(from.talent_id_list_),
      inherent_proud_skill_list_(from.inherent_proud_skill_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prop_map_.MergeFrom(from.prop_map_);
  fight_prop_map_.MergeFrom(from.fight_prop_map_);
  skill_map_.MergeFrom(from.skill_map_);
  skill_level_map_.MergeFrom(from.skill_level_map_);
  proud_skill_extra_level_map_.MergeFrom(from.proud_skill_extra_level_map_);
  if (from.has_trial_avatar_info()) {
    trial_avatar_info_ = new ::proto::TrialAvatarInfo(*from.trial_avatar_info_);
  } else {
    trial_avatar_info_ = NULL;
  }
  if (from.has_fetter_info()) {
    fetter_info_ = new ::proto::AvatarFetterInfo(*from.fetter_info_);
  } else {
    fetter_info_ = NULL;
  }
  ::memcpy(&guid_, &from.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&avatar_type_) -
    reinterpret_cast<char*>(&guid_)) + sizeof(avatar_type_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarInfo)
}

void AvatarInfo::SharedCtor() {
  ::memset(&trial_avatar_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_type_) -
      reinterpret_cast<char*>(&trial_avatar_info_)) + sizeof(avatar_type_));
  _cached_size_ = 0;
}

AvatarInfo::~AvatarInfo() {
  // @@protoc_insertion_point(destructor:proto.AvatarInfo)
  SharedDtor();
}

void AvatarInfo::SharedDtor() {
  if (this != internal_default_instance()) delete trial_avatar_info_;
  if (this != internal_default_instance()) delete fetter_info_;
}

void AvatarInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarInfo& AvatarInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarInfo* AvatarInfo::New(::google::protobuf::Arena* arena) const {
  AvatarInfo* n = new AvatarInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prop_map_.Clear();
  equip_guid_list_.Clear();
  talent_id_list_.Clear();
  fight_prop_map_.Clear();
  skill_map_.Clear();
  inherent_proud_skill_list_.Clear();
  skill_level_map_.Clear();
  proud_skill_extra_level_map_.Clear();
  if (GetArenaNoVirtual() == NULL && trial_avatar_info_ != NULL) {
    delete trial_avatar_info_;
  }
  trial_avatar_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && fetter_info_ != NULL) {
    delete fetter_info_;
  }
  fetter_info_ = NULL;
  ::memset(&guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avatar_type_) -
      reinterpret_cast<char*>(&guid_)) + sizeof(avatar_type_));
  _internal_metadata_.Clear();
}

bool AvatarInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.PropValue> prop_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          AvatarInfo_PropMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarInfo_PropMapEntry,
              ::google::protobuf::uint32, ::proto::PropValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue > > parser(&prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 life_state = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &life_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 equip_guid_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_equip_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 42u, input, this->mutable_equip_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 talent_id_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_talent_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_talent_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, float> fight_prop_map = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          AvatarInfo_FightPropMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarInfo_FightPropMapEntry,
              ::google::protobuf::uint32, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, float > > parser(&fight_prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TrialAvatarInfo trial_avatar_info = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trial_avatar_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          AvatarInfo_SkillMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarInfo_SkillMapEntry,
              ::google::protobuf::uint32, ::proto::AvatarSkillInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo > > parser(&skill_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skill_depot_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AvatarFetterInfo fetter_info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fetter_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 core_proud_skill_level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &core_proud_skill_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 inherent_proud_skill_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_inherent_proud_skill_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 114u, input, this->mutable_inherent_proud_skill_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> skill_level_map = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          AvatarInfo_SkillLevelMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarInfo_SkillLevelMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&skill_level_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AvatarExpeditionState expedition_state = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_expedition_state(static_cast< ::proto::AvatarExpeditionState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> proud_skill_extra_level_map = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          AvatarInfo_ProudSkillExtraLevelMapEntry::Parser< ::google::protobuf::internal::MapField<
              AvatarInfo_ProudSkillExtraLevelMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&proud_skill_extra_level_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_focus = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_focus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_type = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarInfo)
  return false;
#undef DO_
}

void AvatarInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->guid(), output);
  }

  // map<uint32, .proto.PropValue> prop_map = 3;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // uint32 life_state = 4;
  if (this->life_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->life_state(), output);
  }

  // repeated uint64 equip_guid_list = 5;
  if (this->equip_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _equip_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->equip_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->equip_guid_list(i), output);
  }

  // repeated uint32 talent_id_list = 6;
  if (this->talent_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _talent_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->talent_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->talent_id_list(i), output);
  }

  // map<uint32, float> fight_prop_map = 7;
  if (!this->fight_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->fight_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fight_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->fight_prop_map().begin();
          it != this->fight_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_FightPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fight_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_FightPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->fight_prop_map().begin();
          it != this->fight_prop_map().end(); ++it) {
        entry.reset(fight_prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    }
  }

  // .proto.TrialAvatarInfo trial_avatar_info = 9;
  if (this->has_trial_avatar_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->trial_avatar_info_, output);
  }

  // map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
  if (!this->skill_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->skill_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::const_iterator
          it = this->skill_map().begin();
          it != this->skill_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_SkillMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_SkillMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::const_iterator
          it = this->skill_map().begin();
          it != this->skill_map().end(); ++it) {
        entry.reset(skill_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            10, *entry, output);
      }
    }
  }

  // uint32 skill_depot_id = 11;
  if (this->skill_depot_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->skill_depot_id(), output);
  }

  // .proto.AvatarFetterInfo fetter_info = 12;
  if (this->has_fetter_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->fetter_info_, output);
  }

  // uint32 core_proud_skill_level = 13;
  if (this->core_proud_skill_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->core_proud_skill_level(), output);
  }

  // repeated uint32 inherent_proud_skill_list = 14;
  if (this->inherent_proud_skill_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(14, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _inherent_proud_skill_list_cached_byte_size_));
  }
  for (int i = 0, n = this->inherent_proud_skill_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->inherent_proud_skill_list(i), output);
  }

  // map<uint32, uint32> skill_level_map = 15;
  if (!this->skill_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->skill_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_level_map().begin();
          it != this->skill_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_SkillLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_SkillLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_level_map().begin();
          it != this->skill_level_map().end(); ++it) {
        entry.reset(skill_level_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            15, *entry, output);
      }
    }
  }

  // .proto.AvatarExpeditionState expedition_state = 16;
  if (this->expedition_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      16, this->expedition_state(), output);
  }

  // map<uint32, uint32> proud_skill_extra_level_map = 17;
  if (!this->proud_skill_extra_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->proud_skill_extra_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->proud_skill_extra_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->proud_skill_extra_level_map().begin();
          it != this->proud_skill_extra_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_ProudSkillExtraLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            17, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_ProudSkillExtraLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->proud_skill_extra_level_map().begin();
          it != this->proud_skill_extra_level_map().end(); ++it) {
        entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            17, *entry, output);
      }
    }
  }

  // bool is_focus = 18;
  if (this->is_focus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->is_focus(), output);
  }

  // uint32 avatar_type = 19;
  if (this->avatar_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->avatar_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarInfo)
}

::google::protobuf::uint8* AvatarInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->guid(), target);
  }

  // map<uint32, .proto.PropValue> prop_map = 3;
  if (!this->prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_PropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_PropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->prop_map().begin();
          it != this->prop_map().end(); ++it) {
        entry.reset(prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 life_state = 4;
  if (this->life_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->life_state(), target);
  }

  // repeated uint64 equip_guid_list = 5;
  if (this->equip_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _equip_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->equip_guid_list_, target);
  }

  // repeated uint32 talent_id_list = 6;
  if (this->talent_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _talent_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->talent_id_list_, target);
  }

  // map<uint32, float> fight_prop_map = 7;
  if (!this->fight_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->fight_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fight_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->fight_prop_map().begin();
          it != this->fight_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_FightPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fight_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_FightPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->fight_prop_map().begin();
          it != this->fight_prop_map().end(); ++it) {
        entry.reset(fight_prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    }
  }

  // .proto.TrialAvatarInfo trial_avatar_info = 9;
  if (this->has_trial_avatar_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->trial_avatar_info_, deterministic, target);
  }

  // map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
  if (!this->skill_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->skill_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::const_iterator
          it = this->skill_map().begin();
          it != this->skill_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_SkillMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_SkillMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::const_iterator
          it = this->skill_map().begin();
          it != this->skill_map().end(); ++it) {
        entry.reset(skill_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       10, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 skill_depot_id = 11;
  if (this->skill_depot_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->skill_depot_id(), target);
  }

  // .proto.AvatarFetterInfo fetter_info = 12;
  if (this->has_fetter_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->fetter_info_, deterministic, target);
  }

  // uint32 core_proud_skill_level = 13;
  if (this->core_proud_skill_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->core_proud_skill_level(), target);
  }

  // repeated uint32 inherent_proud_skill_list = 14;
  if (this->inherent_proud_skill_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      14,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _inherent_proud_skill_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->inherent_proud_skill_list_, target);
  }

  // map<uint32, uint32> skill_level_map = 15;
  if (!this->skill_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->skill_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_level_map().begin();
          it != this->skill_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_SkillLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_SkillLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_level_map().begin();
          it != this->skill_level_map().end(); ++it) {
        entry.reset(skill_level_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       15, *entry, deterministic, target);
;
      }
    }
  }

  // .proto.AvatarExpeditionState expedition_state = 16;
  if (this->expedition_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      16, this->expedition_state(), target);
  }

  // map<uint32, uint32> proud_skill_extra_level_map = 17;
  if (!this->proud_skill_extra_level_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->proud_skill_extra_level_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->proud_skill_extra_level_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->proud_skill_extra_level_map().begin();
          it != this->proud_skill_extra_level_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AvatarInfo_ProudSkillExtraLevelMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       17, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AvatarInfo_ProudSkillExtraLevelMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->proud_skill_extra_level_map().begin();
          it != this->proud_skill_extra_level_map().end(); ++it) {
        entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       17, *entry, deterministic, target);
;
      }
    }
  }

  // bool is_focus = 18;
  if (this->is_focus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->is_focus(), target);
  }

  // uint32 avatar_type = 19;
  if (this->avatar_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->avatar_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarInfo)
  return target;
}

size_t AvatarInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.PropValue> prop_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->prop_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarInfo_PropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
        it = this->prop_map().begin();
        it != this->prop_map().end(); ++it) {
      entry.reset(prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint64 equip_guid_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->equip_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _equip_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 talent_id_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->talent_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _talent_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, float> fight_prop_map = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fight_prop_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarInfo_FightPropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
        it = this->fight_prop_map().begin();
        it != this->fight_prop_map().end(); ++it) {
      entry.reset(fight_prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->skill_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarInfo_SkillMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >::const_iterator
        it = this->skill_map().begin();
        it != this->skill_map().end(); ++it) {
      entry.reset(skill_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 inherent_proud_skill_list = 14;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->inherent_proud_skill_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _inherent_proud_skill_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, uint32> skill_level_map = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->skill_level_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarInfo_SkillLevelMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->skill_level_map().begin();
        it != this->skill_level_map().end(); ++it) {
      entry.reset(skill_level_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> proud_skill_extra_level_map = 17;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->proud_skill_extra_level_map_size());
  {
    ::google::protobuf::scoped_ptr<AvatarInfo_ProudSkillExtraLevelMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->proud_skill_extra_level_map().begin();
        it != this->proud_skill_extra_level_map().end(); ++it) {
      entry.reset(proud_skill_extra_level_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.TrialAvatarInfo trial_avatar_info = 9;
  if (this->has_trial_avatar_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trial_avatar_info_);
  }

  // .proto.AvatarFetterInfo fetter_info = 12;
  if (this->has_fetter_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fetter_info_);
  }

  // uint64 guid = 2;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 life_state = 4;
  if (this->life_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->life_state());
  }

  // uint32 skill_depot_id = 11;
  if (this->skill_depot_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_depot_id());
  }

  // uint32 core_proud_skill_level = 13;
  if (this->core_proud_skill_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->core_proud_skill_level());
  }

  // .proto.AvatarExpeditionState expedition_state = 16;
  if (this->expedition_state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->expedition_state());
  }

  // bool is_focus = 18;
  if (this->is_focus() != 0) {
    total_size += 2 + 1;
  }

  // uint32 avatar_type = 19;
  if (this->avatar_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarInfo)
    MergeFrom(*source);
  }
}

void AvatarInfo::MergeFrom(const AvatarInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  prop_map_.MergeFrom(from.prop_map_);
  equip_guid_list_.MergeFrom(from.equip_guid_list_);
  talent_id_list_.MergeFrom(from.talent_id_list_);
  fight_prop_map_.MergeFrom(from.fight_prop_map_);
  skill_map_.MergeFrom(from.skill_map_);
  inherent_proud_skill_list_.MergeFrom(from.inherent_proud_skill_list_);
  skill_level_map_.MergeFrom(from.skill_level_map_);
  proud_skill_extra_level_map_.MergeFrom(from.proud_skill_extra_level_map_);
  if (from.has_trial_avatar_info()) {
    mutable_trial_avatar_info()->::proto::TrialAvatarInfo::MergeFrom(from.trial_avatar_info());
  }
  if (from.has_fetter_info()) {
    mutable_fetter_info()->::proto::AvatarFetterInfo::MergeFrom(from.fetter_info());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.life_state() != 0) {
    set_life_state(from.life_state());
  }
  if (from.skill_depot_id() != 0) {
    set_skill_depot_id(from.skill_depot_id());
  }
  if (from.core_proud_skill_level() != 0) {
    set_core_proud_skill_level(from.core_proud_skill_level());
  }
  if (from.expedition_state() != 0) {
    set_expedition_state(from.expedition_state());
  }
  if (from.is_focus() != 0) {
    set_is_focus(from.is_focus());
  }
  if (from.avatar_type() != 0) {
    set_avatar_type(from.avatar_type());
  }
}

void AvatarInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarInfo::CopyFrom(const AvatarInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarInfo::IsInitialized() const {
  return true;
}

void AvatarInfo::Swap(AvatarInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarInfo::InternalSwap(AvatarInfo* other) {
  using std::swap;
  prop_map_.Swap(&other->prop_map_);
  equip_guid_list_.InternalSwap(&other->equip_guid_list_);
  talent_id_list_.InternalSwap(&other->talent_id_list_);
  fight_prop_map_.Swap(&other->fight_prop_map_);
  skill_map_.Swap(&other->skill_map_);
  inherent_proud_skill_list_.InternalSwap(&other->inherent_proud_skill_list_);
  skill_level_map_.Swap(&other->skill_level_map_);
  proud_skill_extra_level_map_.Swap(&other->proud_skill_extra_level_map_);
  swap(trial_avatar_info_, other->trial_avatar_info_);
  swap(fetter_info_, other->fetter_info_);
  swap(guid_, other->guid_);
  swap(avatar_id_, other->avatar_id_);
  swap(life_state_, other->life_state_);
  swap(skill_depot_id_, other->skill_depot_id_);
  swap(core_proud_skill_level_, other->core_proud_skill_level_);
  swap(expedition_state_, other->expedition_state_);
  swap(is_focus_, other->is_focus_);
  swap(avatar_type_, other->avatar_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarInfo

// uint32 avatar_id = 1;
void AvatarInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 AvatarInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.avatar_id)
  return avatar_id_;
}
void AvatarInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.avatar_id)
}

// uint64 guid = 2;
void AvatarInfo::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarInfo::guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.guid)
  return guid_;
}
void AvatarInfo::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.guid)
}

// map<uint32, .proto.PropValue> prop_map = 3;
int AvatarInfo::prop_map_size() const {
  return prop_map_.size();
}
void AvatarInfo::clear_prop_map() {
  prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
AvatarInfo::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.prop_map)
  return prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
AvatarInfo::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.prop_map)
  return prop_map_.MutableMap();
}

// uint32 life_state = 4;
void AvatarInfo::clear_life_state() {
  life_state_ = 0u;
}
::google::protobuf::uint32 AvatarInfo::life_state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.life_state)
  return life_state_;
}
void AvatarInfo::set_life_state(::google::protobuf::uint32 value) {
  
  life_state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.life_state)
}

// repeated uint64 equip_guid_list = 5;
int AvatarInfo::equip_guid_list_size() const {
  return equip_guid_list_.size();
}
void AvatarInfo::clear_equip_guid_list() {
  equip_guid_list_.Clear();
}
::google::protobuf::uint64 AvatarInfo::equip_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.equip_guid_list)
  return equip_guid_list_.Get(index);
}
void AvatarInfo::set_equip_guid_list(int index, ::google::protobuf::uint64 value) {
  equip_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.equip_guid_list)
}
void AvatarInfo::add_equip_guid_list(::google::protobuf::uint64 value) {
  equip_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.equip_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AvatarInfo::equip_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.equip_guid_list)
  return equip_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AvatarInfo::mutable_equip_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.equip_guid_list)
  return &equip_guid_list_;
}

// repeated uint32 talent_id_list = 6;
int AvatarInfo::talent_id_list_size() const {
  return talent_id_list_.size();
}
void AvatarInfo::clear_talent_id_list() {
  talent_id_list_.Clear();
}
::google::protobuf::uint32 AvatarInfo::talent_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.talent_id_list)
  return talent_id_list_.Get(index);
}
void AvatarInfo::set_talent_id_list(int index, ::google::protobuf::uint32 value) {
  talent_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.talent_id_list)
}
void AvatarInfo::add_talent_id_list(::google::protobuf::uint32 value) {
  talent_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.talent_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarInfo::talent_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.talent_id_list)
  return talent_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarInfo::mutable_talent_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.talent_id_list)
  return &talent_id_list_;
}

// map<uint32, float> fight_prop_map = 7;
int AvatarInfo::fight_prop_map_size() const {
  return fight_prop_map_.size();
}
void AvatarInfo::clear_fight_prop_map() {
  fight_prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
AvatarInfo::fight_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.fight_prop_map)
  return fight_prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, float >*
AvatarInfo::mutable_fight_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.fight_prop_map)
  return fight_prop_map_.MutableMap();
}

// .proto.TrialAvatarInfo trial_avatar_info = 9;
bool AvatarInfo::has_trial_avatar_info() const {
  return this != internal_default_instance() && trial_avatar_info_ != NULL;
}
void AvatarInfo::clear_trial_avatar_info() {
  if (GetArenaNoVirtual() == NULL && trial_avatar_info_ != NULL) delete trial_avatar_info_;
  trial_avatar_info_ = NULL;
}
const ::proto::TrialAvatarInfo& AvatarInfo::trial_avatar_info() const {
  const ::proto::TrialAvatarInfo* p = trial_avatar_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.trial_avatar_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TrialAvatarInfo*>(
      &::proto::_TrialAvatarInfo_default_instance_);
}
::proto::TrialAvatarInfo* AvatarInfo::mutable_trial_avatar_info() {
  
  if (trial_avatar_info_ == NULL) {
    trial_avatar_info_ = new ::proto::TrialAvatarInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarInfo.trial_avatar_info)
  return trial_avatar_info_;
}
::proto::TrialAvatarInfo* AvatarInfo::release_trial_avatar_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarInfo.trial_avatar_info)
  
  ::proto::TrialAvatarInfo* temp = trial_avatar_info_;
  trial_avatar_info_ = NULL;
  return temp;
}
void AvatarInfo::set_allocated_trial_avatar_info(::proto::TrialAvatarInfo* trial_avatar_info) {
  delete trial_avatar_info_;
  trial_avatar_info_ = trial_avatar_info;
  if (trial_avatar_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarInfo.trial_avatar_info)
}

// map<uint32, .proto.AvatarSkillInfo> skill_map = 10;
int AvatarInfo::skill_map_size() const {
  return skill_map_.size();
}
void AvatarInfo::clear_skill_map() {
  skill_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >&
AvatarInfo::skill_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.skill_map)
  return skill_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AvatarSkillInfo >*
AvatarInfo::mutable_skill_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.skill_map)
  return skill_map_.MutableMap();
}

// uint32 skill_depot_id = 11;
void AvatarInfo::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
::google::protobuf::uint32 AvatarInfo::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.skill_depot_id)
  return skill_depot_id_;
}
void AvatarInfo::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.skill_depot_id)
}

// .proto.AvatarFetterInfo fetter_info = 12;
bool AvatarInfo::has_fetter_info() const {
  return this != internal_default_instance() && fetter_info_ != NULL;
}
void AvatarInfo::clear_fetter_info() {
  if (GetArenaNoVirtual() == NULL && fetter_info_ != NULL) delete fetter_info_;
  fetter_info_ = NULL;
}
const ::proto::AvatarFetterInfo& AvatarInfo::fetter_info() const {
  const ::proto::AvatarFetterInfo* p = fetter_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.fetter_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AvatarFetterInfo*>(
      &::proto::_AvatarFetterInfo_default_instance_);
}
::proto::AvatarFetterInfo* AvatarInfo::mutable_fetter_info() {
  
  if (fetter_info_ == NULL) {
    fetter_info_ = new ::proto::AvatarFetterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarInfo.fetter_info)
  return fetter_info_;
}
::proto::AvatarFetterInfo* AvatarInfo::release_fetter_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarInfo.fetter_info)
  
  ::proto::AvatarFetterInfo* temp = fetter_info_;
  fetter_info_ = NULL;
  return temp;
}
void AvatarInfo::set_allocated_fetter_info(::proto::AvatarFetterInfo* fetter_info) {
  delete fetter_info_;
  fetter_info_ = fetter_info;
  if (fetter_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarInfo.fetter_info)
}

// uint32 core_proud_skill_level = 13;
void AvatarInfo::clear_core_proud_skill_level() {
  core_proud_skill_level_ = 0u;
}
::google::protobuf::uint32 AvatarInfo::core_proud_skill_level() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.core_proud_skill_level)
  return core_proud_skill_level_;
}
void AvatarInfo::set_core_proud_skill_level(::google::protobuf::uint32 value) {
  
  core_proud_skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.core_proud_skill_level)
}

// repeated uint32 inherent_proud_skill_list = 14;
int AvatarInfo::inherent_proud_skill_list_size() const {
  return inherent_proud_skill_list_.size();
}
void AvatarInfo::clear_inherent_proud_skill_list() {
  inherent_proud_skill_list_.Clear();
}
::google::protobuf::uint32 AvatarInfo::inherent_proud_skill_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_.Get(index);
}
void AvatarInfo::set_inherent_proud_skill_list(int index, ::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.inherent_proud_skill_list)
}
void AvatarInfo::add_inherent_proud_skill_list(::google::protobuf::uint32 value) {
  inherent_proud_skill_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarInfo.inherent_proud_skill_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarInfo::inherent_proud_skill_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarInfo.inherent_proud_skill_list)
  return inherent_proud_skill_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarInfo::mutable_inherent_proud_skill_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarInfo.inherent_proud_skill_list)
  return &inherent_proud_skill_list_;
}

// map<uint32, uint32> skill_level_map = 15;
int AvatarInfo::skill_level_map_size() const {
  return skill_level_map_.size();
}
void AvatarInfo::clear_skill_level_map() {
  skill_level_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AvatarInfo::skill_level_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.skill_level_map)
  return skill_level_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AvatarInfo::mutable_skill_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.skill_level_map)
  return skill_level_map_.MutableMap();
}

// .proto.AvatarExpeditionState expedition_state = 16;
void AvatarInfo::clear_expedition_state() {
  expedition_state_ = 0;
}
::proto::AvatarExpeditionState AvatarInfo::expedition_state() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.expedition_state)
  return static_cast< ::proto::AvatarExpeditionState >(expedition_state_);
}
void AvatarInfo::set_expedition_state(::proto::AvatarExpeditionState value) {
  
  expedition_state_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.expedition_state)
}

// map<uint32, uint32> proud_skill_extra_level_map = 17;
int AvatarInfo::proud_skill_extra_level_map_size() const {
  return proud_skill_extra_level_map_.size();
}
void AvatarInfo::clear_proud_skill_extra_level_map() {
  proud_skill_extra_level_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AvatarInfo::proud_skill_extra_level_map() const {
  // @@protoc_insertion_point(field_map:proto.AvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AvatarInfo::mutable_proud_skill_extra_level_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AvatarInfo.proud_skill_extra_level_map)
  return proud_skill_extra_level_map_.MutableMap();
}

// bool is_focus = 18;
void AvatarInfo::clear_is_focus() {
  is_focus_ = false;
}
bool AvatarInfo::is_focus() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.is_focus)
  return is_focus_;
}
void AvatarInfo::set_is_focus(bool value) {
  
  is_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.is_focus)
}

// uint32 avatar_type = 19;
void AvatarInfo::clear_avatar_type() {
  avatar_type_ = 0u;
}
::google::protobuf::uint32 AvatarInfo::avatar_type() const {
  // @@protoc_insertion_point(field_get:proto.AvatarInfo.avatar_type)
  return avatar_type_;
}
void AvatarInfo::set_avatar_type(::google::protobuf::uint32 value) {
  
  avatar_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarInfo.avatar_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Quest::Quest_LackedNpcMapEntry::Quest_LackedNpcMapEntry() {}
Quest::Quest_LackedNpcMapEntry::Quest_LackedNpcMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Quest::Quest_LackedNpcMapEntry::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[84];
}
void Quest::Quest_LackedNpcMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void Quest::Quest_LackedNpcMapEntry::MergeFrom(const Quest_LackedNpcMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Quest::kQuestIdFieldNumber;
const int Quest::kStateFieldNumber;
const int Quest::kStartTimeFieldNumber;
const int Quest::kIsRandomFieldNumber;
const int Quest::kParentQuestIdFieldNumber;
const int Quest::kQuestConfigIdFieldNumber;
const int Quest::kStartGameTimeFieldNumber;
const int Quest::kAcceptTimeFieldNumber;
const int Quest::kLackedNpcListFieldNumber;
const int Quest::kFinishProgressListFieldNumber;
const int Quest::kFailProgressListFieldNumber;
const int Quest::kLackedNpcMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Quest::Quest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Quest)
}
Quest::Quest(const Quest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lacked_npc_list_(from.lacked_npc_list_),
      finish_progress_list_(from.finish_progress_list_),
      fail_progress_list_(from.fail_progress_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lacked_npc_map_.MergeFrom(from.lacked_npc_map_);
  ::memcpy(&quest_id_, &from.quest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&accept_time_) -
    reinterpret_cast<char*>(&quest_id_)) + sizeof(accept_time_));
  // @@protoc_insertion_point(copy_constructor:proto.Quest)
}

void Quest::SharedCtor() {
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accept_time_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(accept_time_));
  _cached_size_ = 0;
}

Quest::~Quest() {
  // @@protoc_insertion_point(destructor:proto.Quest)
  SharedDtor();
}

void Quest::SharedDtor() {
}

void Quest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Quest::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Quest& Quest::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Quest* Quest::New(::google::protobuf::Arena* arena) const {
  Quest* n = new Quest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Quest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Quest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lacked_npc_list_.Clear();
  finish_progress_list_.Clear();
  fail_progress_list_.Clear();
  lacked_npc_map_.Clear();
  ::memset(&quest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accept_time_) -
      reinterpret_cast<char*>(&quest_id_)) + sizeof(accept_time_));
  _internal_metadata_.Clear();
}

bool Quest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Quest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 quest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_random = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_random_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_quest_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_config_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start_game_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_game_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 accept_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accept_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 lacked_npc_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_lacked_npc_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_lacked_npc_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 finish_progress_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_finish_progress_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_finish_progress_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 fail_progress_list = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_fail_progress_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 98u, input, this->mutable_fail_progress_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> lacked_npc_map = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          Quest_LackedNpcMapEntry::Parser< ::google::protobuf::internal::MapField<
              Quest_LackedNpcMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&lacked_npc_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Quest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Quest)
  return false;
#undef DO_
}

void Quest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Quest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->quest_id(), output);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // uint32 start_time = 4;
  if (this->start_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->start_time(), output);
  }

  // bool is_random = 5;
  if (this->is_random() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_random(), output);
  }

  // uint32 parent_quest_id = 6;
  if (this->parent_quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->parent_quest_id(), output);
  }

  // uint32 quest_config_id = 7;
  if (this->quest_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->quest_config_id(), output);
  }

  // uint32 start_game_time = 8;
  if (this->start_game_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->start_game_time(), output);
  }

  // uint32 accept_time = 9;
  if (this->accept_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->accept_time(), output);
  }

  // repeated uint32 lacked_npc_list = 10;
  if (this->lacked_npc_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _lacked_npc_list_cached_byte_size_));
  }
  for (int i = 0, n = this->lacked_npc_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->lacked_npc_list(i), output);
  }

  // repeated uint32 finish_progress_list = 11;
  if (this->finish_progress_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _finish_progress_list_cached_byte_size_));
  }
  for (int i = 0, n = this->finish_progress_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->finish_progress_list(i), output);
  }

  // repeated uint32 fail_progress_list = 12;
  if (this->fail_progress_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(12, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _fail_progress_list_cached_byte_size_));
  }
  for (int i = 0, n = this->fail_progress_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->fail_progress_list(i), output);
  }

  // map<uint32, uint32> lacked_npc_map = 13;
  if (!this->lacked_npc_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->lacked_npc_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->lacked_npc_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_npc_map().begin();
          it != this->lacked_npc_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Quest_LackedNpcMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(lacked_npc_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Quest_LackedNpcMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_npc_map().begin();
          it != this->lacked_npc_map().end(); ++it) {
        entry.reset(lacked_npc_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Quest)
}

::google::protobuf::uint8* Quest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Quest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->quest_id(), target);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // uint32 start_time = 4;
  if (this->start_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->start_time(), target);
  }

  // bool is_random = 5;
  if (this->is_random() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_random(), target);
  }

  // uint32 parent_quest_id = 6;
  if (this->parent_quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->parent_quest_id(), target);
  }

  // uint32 quest_config_id = 7;
  if (this->quest_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->quest_config_id(), target);
  }

  // uint32 start_game_time = 8;
  if (this->start_game_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->start_game_time(), target);
  }

  // uint32 accept_time = 9;
  if (this->accept_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->accept_time(), target);
  }

  // repeated uint32 lacked_npc_list = 10;
  if (this->lacked_npc_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _lacked_npc_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->lacked_npc_list_, target);
  }

  // repeated uint32 finish_progress_list = 11;
  if (this->finish_progress_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _finish_progress_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->finish_progress_list_, target);
  }

  // repeated uint32 fail_progress_list = 12;
  if (this->fail_progress_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      12,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _fail_progress_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->fail_progress_list_, target);
  }

  // map<uint32, uint32> lacked_npc_map = 13;
  if (!this->lacked_npc_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->lacked_npc_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->lacked_npc_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_npc_map().begin();
          it != this->lacked_npc_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Quest_LackedNpcMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(lacked_npc_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Quest_LackedNpcMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->lacked_npc_map().begin();
          it != this->lacked_npc_map().end(); ++it) {
        entry.reset(lacked_npc_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Quest)
  return target;
}

size_t Quest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Quest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 lacked_npc_list = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->lacked_npc_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lacked_npc_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 finish_progress_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->finish_progress_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _finish_progress_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 fail_progress_list = 12;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->fail_progress_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _fail_progress_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, uint32> lacked_npc_map = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->lacked_npc_map_size());
  {
    ::google::protobuf::scoped_ptr<Quest_LackedNpcMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->lacked_npc_map().begin();
        it != this->lacked_npc_map().end(); ++it) {
      entry.reset(lacked_npc_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 quest_id = 1;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  // uint32 start_time = 4;
  if (this->start_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_time());
  }

  // bool is_random = 5;
  if (this->is_random() != 0) {
    total_size += 1 + 1;
  }

  // uint32 parent_quest_id = 6;
  if (this->parent_quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_quest_id());
  }

  // uint32 quest_config_id = 7;
  if (this->quest_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_config_id());
  }

  // uint32 start_game_time = 8;
  if (this->start_game_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_game_time());
  }

  // uint32 accept_time = 9;
  if (this->accept_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->accept_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Quest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Quest)
  GOOGLE_DCHECK_NE(&from, this);
  const Quest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Quest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Quest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Quest)
    MergeFrom(*source);
  }
}

void Quest::MergeFrom(const Quest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Quest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lacked_npc_list_.MergeFrom(from.lacked_npc_list_);
  finish_progress_list_.MergeFrom(from.finish_progress_list_);
  fail_progress_list_.MergeFrom(from.fail_progress_list_);
  lacked_npc_map_.MergeFrom(from.lacked_npc_map_);
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.start_time() != 0) {
    set_start_time(from.start_time());
  }
  if (from.is_random() != 0) {
    set_is_random(from.is_random());
  }
  if (from.parent_quest_id() != 0) {
    set_parent_quest_id(from.parent_quest_id());
  }
  if (from.quest_config_id() != 0) {
    set_quest_config_id(from.quest_config_id());
  }
  if (from.start_game_time() != 0) {
    set_start_game_time(from.start_game_time());
  }
  if (from.accept_time() != 0) {
    set_accept_time(from.accept_time());
  }
}

void Quest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Quest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Quest::CopyFrom(const Quest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Quest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Quest::IsInitialized() const {
  return true;
}

void Quest::Swap(Quest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Quest::InternalSwap(Quest* other) {
  using std::swap;
  lacked_npc_list_.InternalSwap(&other->lacked_npc_list_);
  finish_progress_list_.InternalSwap(&other->finish_progress_list_);
  fail_progress_list_.InternalSwap(&other->fail_progress_list_);
  lacked_npc_map_.Swap(&other->lacked_npc_map_);
  swap(quest_id_, other->quest_id_);
  swap(state_, other->state_);
  swap(start_time_, other->start_time_);
  swap(is_random_, other->is_random_);
  swap(parent_quest_id_, other->parent_quest_id_);
  swap(quest_config_id_, other->quest_config_id_);
  swap(start_game_time_, other->start_game_time_);
  swap(accept_time_, other->accept_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Quest::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Quest

// uint32 quest_id = 1;
void Quest::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 Quest::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.quest_id)
  return quest_id_;
}
void Quest::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.quest_id)
}

// uint32 state = 2;
void Quest::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 Quest::state() const {
  // @@protoc_insertion_point(field_get:proto.Quest.state)
  return state_;
}
void Quest::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.state)
}

// uint32 start_time = 4;
void Quest::clear_start_time() {
  start_time_ = 0u;
}
::google::protobuf::uint32 Quest::start_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.start_time)
  return start_time_;
}
void Quest::set_start_time(::google::protobuf::uint32 value) {
  
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.start_time)
}

// bool is_random = 5;
void Quest::clear_is_random() {
  is_random_ = false;
}
bool Quest::is_random() const {
  // @@protoc_insertion_point(field_get:proto.Quest.is_random)
  return is_random_;
}
void Quest::set_is_random(bool value) {
  
  is_random_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.is_random)
}

// uint32 parent_quest_id = 6;
void Quest::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
::google::protobuf::uint32 Quest::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.parent_quest_id)
  return parent_quest_id_;
}
void Quest::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.parent_quest_id)
}

// uint32 quest_config_id = 7;
void Quest::clear_quest_config_id() {
  quest_config_id_ = 0u;
}
::google::protobuf::uint32 Quest::quest_config_id() const {
  // @@protoc_insertion_point(field_get:proto.Quest.quest_config_id)
  return quest_config_id_;
}
void Quest::set_quest_config_id(::google::protobuf::uint32 value) {
  
  quest_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.quest_config_id)
}

// uint32 start_game_time = 8;
void Quest::clear_start_game_time() {
  start_game_time_ = 0u;
}
::google::protobuf::uint32 Quest::start_game_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.start_game_time)
  return start_game_time_;
}
void Quest::set_start_game_time(::google::protobuf::uint32 value) {
  
  start_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.start_game_time)
}

// uint32 accept_time = 9;
void Quest::clear_accept_time() {
  accept_time_ = 0u;
}
::google::protobuf::uint32 Quest::accept_time() const {
  // @@protoc_insertion_point(field_get:proto.Quest.accept_time)
  return accept_time_;
}
void Quest::set_accept_time(::google::protobuf::uint32 value) {
  
  accept_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Quest.accept_time)
}

// repeated uint32 lacked_npc_list = 10;
int Quest::lacked_npc_list_size() const {
  return lacked_npc_list_.size();
}
void Quest::clear_lacked_npc_list() {
  lacked_npc_list_.Clear();
}
::google::protobuf::uint32 Quest::lacked_npc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.lacked_npc_list)
  return lacked_npc_list_.Get(index);
}
void Quest::set_lacked_npc_list(int index, ::google::protobuf::uint32 value) {
  lacked_npc_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.lacked_npc_list)
}
void Quest::add_lacked_npc_list(::google::protobuf::uint32 value) {
  lacked_npc_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.lacked_npc_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::lacked_npc_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.lacked_npc_list)
  return lacked_npc_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_lacked_npc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.lacked_npc_list)
  return &lacked_npc_list_;
}

// repeated uint32 finish_progress_list = 11;
int Quest::finish_progress_list_size() const {
  return finish_progress_list_.size();
}
void Quest::clear_finish_progress_list() {
  finish_progress_list_.Clear();
}
::google::protobuf::uint32 Quest::finish_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.finish_progress_list)
  return finish_progress_list_.Get(index);
}
void Quest::set_finish_progress_list(int index, ::google::protobuf::uint32 value) {
  finish_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.finish_progress_list)
}
void Quest::add_finish_progress_list(::google::protobuf::uint32 value) {
  finish_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.finish_progress_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::finish_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.finish_progress_list)
  return finish_progress_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_finish_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.finish_progress_list)
  return &finish_progress_list_;
}

// repeated uint32 fail_progress_list = 12;
int Quest::fail_progress_list_size() const {
  return fail_progress_list_.size();
}
void Quest::clear_fail_progress_list() {
  fail_progress_list_.Clear();
}
::google::protobuf::uint32 Quest::fail_progress_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Quest.fail_progress_list)
  return fail_progress_list_.Get(index);
}
void Quest::set_fail_progress_list(int index, ::google::protobuf::uint32 value) {
  fail_progress_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Quest.fail_progress_list)
}
void Quest::add_fail_progress_list(::google::protobuf::uint32 value) {
  fail_progress_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Quest.fail_progress_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Quest::fail_progress_list() const {
  // @@protoc_insertion_point(field_list:proto.Quest.fail_progress_list)
  return fail_progress_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Quest::mutable_fail_progress_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Quest.fail_progress_list)
  return &fail_progress_list_;
}

// map<uint32, uint32> lacked_npc_map = 13;
int Quest::lacked_npc_map_size() const {
  return lacked_npc_map_.size();
}
void Quest::clear_lacked_npc_map() {
  lacked_npc_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
Quest::lacked_npc_map() const {
  // @@protoc_insertion_point(field_map:proto.Quest.lacked_npc_map)
  return lacked_npc_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
Quest::mutable_lacked_npc_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.Quest.lacked_npc_map)
  return lacked_npc_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NpcPositionInfo::kNpcIdFieldNumber;
const int NpcPositionInfo::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NpcPositionInfo::NpcPositionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NpcPositionInfo)
}
NpcPositionInfo::NpcPositionInfo(const NpcPositionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  npc_id_ = from.npc_id_;
  // @@protoc_insertion_point(copy_constructor:proto.NpcPositionInfo)
}

void NpcPositionInfo::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&npc_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(npc_id_));
  _cached_size_ = 0;
}

NpcPositionInfo::~NpcPositionInfo() {
  // @@protoc_insertion_point(destructor:proto.NpcPositionInfo)
  SharedDtor();
}

void NpcPositionInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void NpcPositionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NpcPositionInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NpcPositionInfo& NpcPositionInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

NpcPositionInfo* NpcPositionInfo::New(::google::protobuf::Arena* arena) const {
  NpcPositionInfo* n = new NpcPositionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NpcPositionInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NpcPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  npc_id_ = 0u;
  _internal_metadata_.Clear();
}

bool NpcPositionInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NpcPositionInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 npc_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &npc_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NpcPositionInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NpcPositionInfo)
  return false;
#undef DO_
}

void NpcPositionInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NpcPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->npc_id(), output);
  }

  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NpcPositionInfo)
}

::google::protobuf::uint8* NpcPositionInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NpcPositionInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->npc_id(), target);
  }

  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NpcPositionInfo)
  return target;
}

size_t NpcPositionInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NpcPositionInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 npc_id = 1;
  if (this->npc_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->npc_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NpcPositionInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.NpcPositionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const NpcPositionInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NpcPositionInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NpcPositionInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NpcPositionInfo)
    MergeFrom(*source);
  }
}

void NpcPositionInfo::MergeFrom(const NpcPositionInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.NpcPositionInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.npc_id() != 0) {
    set_npc_id(from.npc_id());
  }
}

void NpcPositionInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.NpcPositionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NpcPositionInfo::CopyFrom(const NpcPositionInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NpcPositionInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NpcPositionInfo::IsInitialized() const {
  return true;
}

void NpcPositionInfo::Swap(NpcPositionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NpcPositionInfo::InternalSwap(NpcPositionInfo* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(npc_id_, other->npc_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NpcPositionInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NpcPositionInfo

// uint32 npc_id = 1;
void NpcPositionInfo::clear_npc_id() {
  npc_id_ = 0u;
}
::google::protobuf::uint32 NpcPositionInfo::npc_id() const {
  // @@protoc_insertion_point(field_get:proto.NpcPositionInfo.npc_id)
  return npc_id_;
}
void NpcPositionInfo::set_npc_id(::google::protobuf::uint32 value) {
  
  npc_id_ = value;
  // @@protoc_insertion_point(field_set:proto.NpcPositionInfo.npc_id)
}

// .proto.Vector pos = 2;
bool NpcPositionInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void NpcPositionInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& NpcPositionInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.NpcPositionInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* NpcPositionInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.NpcPositionInfo.pos)
  return pos_;
}
::proto::Vector* NpcPositionInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.NpcPositionInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void NpcPositionInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.NpcPositionInfo.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailTextContent::kTitleFieldNumber;
const int MailTextContent::kContentFieldNumber;
const int MailTextContent::kSenderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailTextContent::MailTextContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MailTextContent)
}
MailTextContent::MailTextContent(const MailTextContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sender().size() > 0) {
    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.MailTextContent)
}

void MailTextContent::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MailTextContent::~MailTextContent() {
  // @@protoc_insertion_point(destructor:proto.MailTextContent)
  SharedDtor();
}

void MailTextContent::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MailTextContent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailTextContent::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailTextContent& MailTextContent::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailTextContent* MailTextContent::New(::google::protobuf::Arena* arena) const {
  MailTextContent* n = new MailTextContent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailTextContent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MailTextContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MailTextContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MailTextContent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailTextContent.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content().data(), static_cast<int>(this->content().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailTextContent.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sender = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sender().data(), static_cast<int>(this->sender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailTextContent.sender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MailTextContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MailTextContent)
  return false;
#undef DO_
}

void MailTextContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MailTextContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailTextContent.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailTextContent.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content(), output);
  }

  // string sender = 3;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailTextContent.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sender(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MailTextContent)
}

::google::protobuf::uint8* MailTextContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MailTextContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailTextContent.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content().data(), static_cast<int>(this->content().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailTextContent.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content(), target);
  }

  // string sender = 3;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sender().data(), static_cast<int>(this->sender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailTextContent.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sender(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MailTextContent)
  return target;
}

size_t MailTextContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MailTextContent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // string sender = 3;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailTextContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MailTextContent)
  GOOGLE_DCHECK_NE(&from, this);
  const MailTextContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailTextContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MailTextContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MailTextContent)
    MergeFrom(*source);
  }
}

void MailTextContent::MergeFrom(const MailTextContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MailTextContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
}

void MailTextContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MailTextContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailTextContent::CopyFrom(const MailTextContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MailTextContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailTextContent::IsInitialized() const {
  return true;
}

void MailTextContent::Swap(MailTextContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailTextContent::InternalSwap(MailTextContent* other) {
  using std::swap;
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  sender_.Swap(&other->sender_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailTextContent::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailTextContent

// string title = 1;
void MailTextContent::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailTextContent::title() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.title)
  return title_.GetNoArena();
}
void MailTextContent::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.title)
}
#if LANG_CXX11
void MailTextContent::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.title)
}
#endif
void MailTextContent::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.title)
}
void MailTextContent::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.title)
}
::std::string* MailTextContent::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailTextContent::release_title() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailTextContent::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.title)
}

// string content = 2;
void MailTextContent::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailTextContent::content() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.content)
  return content_.GetNoArena();
}
void MailTextContent::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.content)
}
#if LANG_CXX11
void MailTextContent::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.content)
}
#endif
void MailTextContent::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.content)
}
void MailTextContent::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.content)
}
::std::string* MailTextContent::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailTextContent::release_content() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailTextContent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.content)
}

// string sender = 3;
void MailTextContent::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MailTextContent::sender() const {
  // @@protoc_insertion_point(field_get:proto.MailTextContent.sender)
  return sender_.GetNoArena();
}
void MailTextContent::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailTextContent.sender)
}
#if LANG_CXX11
void MailTextContent::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailTextContent.sender)
}
#endif
void MailTextContent::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailTextContent.sender)
}
void MailTextContent::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailTextContent.sender)
}
::std::string* MailTextContent::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailTextContent.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MailTextContent::release_sender() {
  // @@protoc_insertion_point(field_release:proto.MailTextContent.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MailTextContent::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:proto.MailTextContent.sender)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailItem::kEquipParamFieldNumber;
const int MailItem::kDeleteInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailItem::MailItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MailItem)
}
MailItem::MailItem(const MailItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_equip_param()) {
    equip_param_ = new ::proto::EquipParam(*from.equip_param_);
  } else {
    equip_param_ = NULL;
  }
  if (from.has_delete_info()) {
    delete_info_ = new ::proto::MaterialDeleteInfo(*from.delete_info_);
  } else {
    delete_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.MailItem)
}

void MailItem::SharedCtor() {
  ::memset(&equip_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&delete_info_) -
      reinterpret_cast<char*>(&equip_param_)) + sizeof(delete_info_));
  _cached_size_ = 0;
}

MailItem::~MailItem() {
  // @@protoc_insertion_point(destructor:proto.MailItem)
  SharedDtor();
}

void MailItem::SharedDtor() {
  if (this != internal_default_instance()) delete equip_param_;
  if (this != internal_default_instance()) delete delete_info_;
}

void MailItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailItem::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailItem& MailItem::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailItem* MailItem::New(::google::protobuf::Arena* arena) const {
  MailItem* n = new MailItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && equip_param_ != NULL) {
    delete equip_param_;
  }
  equip_param_ = NULL;
  if (GetArenaNoVirtual() == NULL && delete_info_ != NULL) {
    delete delete_info_;
  }
  delete_info_ = NULL;
  _internal_metadata_.Clear();
}

bool MailItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MailItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.EquipParam equip_param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equip_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MaterialDeleteInfo delete_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_delete_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MailItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MailItem)
  return false;
#undef DO_
}

void MailItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.EquipParam equip_param = 1;
  if (this->has_equip_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->equip_param_, output);
  }

  // .proto.MaterialDeleteInfo delete_info = 2;
  if (this->has_delete_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->delete_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MailItem)
}

::google::protobuf::uint8* MailItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MailItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.EquipParam equip_param = 1;
  if (this->has_equip_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->equip_param_, deterministic, target);
  }

  // .proto.MaterialDeleteInfo delete_info = 2;
  if (this->has_delete_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->delete_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MailItem)
  return target;
}

size_t MailItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MailItem)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EquipParam equip_param = 1;
  if (this->has_equip_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->equip_param_);
  }

  // .proto.MaterialDeleteInfo delete_info = 2;
  if (this->has_delete_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->delete_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MailItem)
  GOOGLE_DCHECK_NE(&from, this);
  const MailItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MailItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MailItem)
    MergeFrom(*source);
  }
}

void MailItem::MergeFrom(const MailItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MailItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_equip_param()) {
    mutable_equip_param()->::proto::EquipParam::MergeFrom(from.equip_param());
  }
  if (from.has_delete_info()) {
    mutable_delete_info()->::proto::MaterialDeleteInfo::MergeFrom(from.delete_info());
  }
}

void MailItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailItem::CopyFrom(const MailItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailItem::IsInitialized() const {
  return true;
}

void MailItem::Swap(MailItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailItem::InternalSwap(MailItem* other) {
  using std::swap;
  swap(equip_param_, other->equip_param_);
  swap(delete_info_, other->delete_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailItem::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailItem

// .proto.EquipParam equip_param = 1;
bool MailItem::has_equip_param() const {
  return this != internal_default_instance() && equip_param_ != NULL;
}
void MailItem::clear_equip_param() {
  if (GetArenaNoVirtual() == NULL && equip_param_ != NULL) delete equip_param_;
  equip_param_ = NULL;
}
const ::proto::EquipParam& MailItem::equip_param() const {
  const ::proto::EquipParam* p = equip_param_;
  // @@protoc_insertion_point(field_get:proto.MailItem.equip_param)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EquipParam*>(
      &::proto::_EquipParam_default_instance_);
}
::proto::EquipParam* MailItem::mutable_equip_param() {
  
  if (equip_param_ == NULL) {
    equip_param_ = new ::proto::EquipParam;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailItem.equip_param)
  return equip_param_;
}
::proto::EquipParam* MailItem::release_equip_param() {
  // @@protoc_insertion_point(field_release:proto.MailItem.equip_param)
  
  ::proto::EquipParam* temp = equip_param_;
  equip_param_ = NULL;
  return temp;
}
void MailItem::set_allocated_equip_param(::proto::EquipParam* equip_param) {
  delete equip_param_;
  equip_param_ = equip_param;
  if (equip_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailItem.equip_param)
}

// .proto.MaterialDeleteInfo delete_info = 2;
bool MailItem::has_delete_info() const {
  return this != internal_default_instance() && delete_info_ != NULL;
}
void MailItem::clear_delete_info() {
  if (GetArenaNoVirtual() == NULL && delete_info_ != NULL) delete delete_info_;
  delete_info_ = NULL;
}
const ::proto::MaterialDeleteInfo& MailItem::delete_info() const {
  const ::proto::MaterialDeleteInfo* p = delete_info_;
  // @@protoc_insertion_point(field_get:proto.MailItem.delete_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MaterialDeleteInfo*>(
      &::proto::_MaterialDeleteInfo_default_instance_);
}
::proto::MaterialDeleteInfo* MailItem::mutable_delete_info() {
  
  if (delete_info_ == NULL) {
    delete_info_ = new ::proto::MaterialDeleteInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailItem.delete_info)
  return delete_info_;
}
::proto::MaterialDeleteInfo* MailItem::release_delete_info() {
  // @@protoc_insertion_point(field_release:proto.MailItem.delete_info)
  
  ::proto::MaterialDeleteInfo* temp = delete_info_;
  delete_info_ = NULL;
  return temp;
}
void MailItem::set_allocated_delete_info(::proto::MaterialDeleteInfo* delete_info) {
  delete delete_info_;
  delete_info_ = delete_info;
  if (delete_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailItem.delete_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MailData::kMailIdFieldNumber;
const int MailData::kMailTextContentFieldNumber;
const int MailData::kItemListFieldNumber;
const int MailData::kSendTimeFieldNumber;
const int MailData::kExpireTimeFieldNumber;
const int MailData::kImportanceFieldNumber;
const int MailData::kIsReadFieldNumber;
const int MailData::kIsAttachmentGotFieldNumber;
const int MailData::kConfigIdFieldNumber;
const int MailData::kArgumentListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MailData::MailData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MailData)
}
MailData::MailData(const MailData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_list_(from.item_list_),
      argument_list_(from.argument_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mail_text_content()) {
    mail_text_content_ = new ::proto::MailTextContent(*from.mail_text_content_);
  } else {
    mail_text_content_ = NULL;
  }
  ::memcpy(&mail_id_, &from.mail_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_id_) -
    reinterpret_cast<char*>(&mail_id_)) + sizeof(config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MailData)
}

void MailData::SharedCtor() {
  ::memset(&mail_text_content_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&mail_text_content_)) + sizeof(config_id_));
  _cached_size_ = 0;
}

MailData::~MailData() {
  // @@protoc_insertion_point(destructor:proto.MailData)
  SharedDtor();
}

void MailData::SharedDtor() {
  if (this != internal_default_instance()) delete mail_text_content_;
}

void MailData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailData::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MailData& MailData::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MailData* MailData::New(::google::protobuf::Arena* arena) const {
  MailData* n = new MailData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MailData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_list_.Clear();
  argument_list_.Clear();
  if (GetArenaNoVirtual() == NULL && mail_text_content_ != NULL) {
    delete mail_text_content_;
  }
  mail_text_content_ = NULL;
  ::memset(&mail_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&mail_id_)) + sizeof(config_id_));
  _internal_metadata_.Clear();
}

bool MailData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MailData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 mail_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mail_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MailTextContent mail_text_content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mail_text_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.MailItem item_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 send_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &send_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 expire_time = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expire_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 importance = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &importance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_read = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_read_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_attachment_got = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_attachment_got_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string argument_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_argument_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->argument_list(this->argument_list_size() - 1).data(),
            static_cast<int>(this->argument_list(this->argument_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MailData.argument_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MailData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MailData)
  return false;
#undef DO_
}

void MailData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mail_id = 1;
  if (this->mail_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->mail_id(), output);
  }

  // .proto.MailTextContent mail_text_content = 4;
  if (this->has_mail_text_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->mail_text_content_, output);
  }

  // repeated .proto.MailItem item_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->item_list(static_cast<int>(i)), output);
  }

  // uint32 send_time = 8;
  if (this->send_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->send_time(), output);
  }

  // uint32 expire_time = 9;
  if (this->expire_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->expire_time(), output);
  }

  // uint32 importance = 10;
  if (this->importance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->importance(), output);
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_read(), output);
  }

  // bool is_attachment_got = 12;
  if (this->is_attachment_got() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->is_attachment_got(), output);
  }

  // uint32 config_id = 13;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->config_id(), output);
  }

  // repeated string argument_list = 14;
  for (int i = 0, n = this->argument_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->argument_list(i).data(), static_cast<int>(this->argument_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailData.argument_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->argument_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MailData)
}

::google::protobuf::uint8* MailData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MailData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 mail_id = 1;
  if (this->mail_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->mail_id(), target);
  }

  // .proto.MailTextContent mail_text_content = 4;
  if (this->has_mail_text_content()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->mail_text_content_, deterministic, target);
  }

  // repeated .proto.MailItem item_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->item_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 send_time = 8;
  if (this->send_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->send_time(), target);
  }

  // uint32 expire_time = 9;
  if (this->expire_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->expire_time(), target);
  }

  // uint32 importance = 10;
  if (this->importance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->importance(), target);
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_read(), target);
  }

  // bool is_attachment_got = 12;
  if (this->is_attachment_got() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->is_attachment_got(), target);
  }

  // uint32 config_id = 13;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->config_id(), target);
  }

  // repeated string argument_list = 14;
  for (int i = 0, n = this->argument_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->argument_list(i).data(), static_cast<int>(this->argument_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MailData.argument_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(14, this->argument_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MailData)
  return target;
}

size_t MailData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MailData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MailItem item_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_list(static_cast<int>(i)));
    }
  }

  // repeated string argument_list = 14;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->argument_list_size());
  for (int i = 0, n = this->argument_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->argument_list(i));
  }

  // .proto.MailTextContent mail_text_content = 4;
  if (this->has_mail_text_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mail_text_content_);
  }

  // uint32 mail_id = 1;
  if (this->mail_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mail_id());
  }

  // uint32 send_time = 8;
  if (this->send_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->send_time());
  }

  // uint32 expire_time = 9;
  if (this->expire_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->expire_time());
  }

  // uint32 importance = 10;
  if (this->importance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->importance());
  }

  // bool is_read = 11;
  if (this->is_read() != 0) {
    total_size += 1 + 1;
  }

  // bool is_attachment_got = 12;
  if (this->is_attachment_got() != 0) {
    total_size += 1 + 1;
  }

  // uint32 config_id = 13;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MailData)
  GOOGLE_DCHECK_NE(&from, this);
  const MailData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MailData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MailData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MailData)
    MergeFrom(*source);
  }
}

void MailData::MergeFrom(const MailData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MailData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_list_.MergeFrom(from.item_list_);
  argument_list_.MergeFrom(from.argument_list_);
  if (from.has_mail_text_content()) {
    mutable_mail_text_content()->::proto::MailTextContent::MergeFrom(from.mail_text_content());
  }
  if (from.mail_id() != 0) {
    set_mail_id(from.mail_id());
  }
  if (from.send_time() != 0) {
    set_send_time(from.send_time());
  }
  if (from.expire_time() != 0) {
    set_expire_time(from.expire_time());
  }
  if (from.importance() != 0) {
    set_importance(from.importance());
  }
  if (from.is_read() != 0) {
    set_is_read(from.is_read());
  }
  if (from.is_attachment_got() != 0) {
    set_is_attachment_got(from.is_attachment_got());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void MailData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailData::CopyFrom(const MailData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MailData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailData::IsInitialized() const {
  return true;
}

void MailData::Swap(MailData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MailData::InternalSwap(MailData* other) {
  using std::swap;
  item_list_.InternalSwap(&other->item_list_);
  argument_list_.InternalSwap(&other->argument_list_);
  swap(mail_text_content_, other->mail_text_content_);
  swap(mail_id_, other->mail_id_);
  swap(send_time_, other->send_time_);
  swap(expire_time_, other->expire_time_);
  swap(importance_, other->importance_);
  swap(is_read_, other->is_read_);
  swap(is_attachment_got_, other->is_attachment_got_);
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MailData::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MailData

// uint32 mail_id = 1;
void MailData::clear_mail_id() {
  mail_id_ = 0u;
}
::google::protobuf::uint32 MailData::mail_id() const {
  // @@protoc_insertion_point(field_get:proto.MailData.mail_id)
  return mail_id_;
}
void MailData::set_mail_id(::google::protobuf::uint32 value) {
  
  mail_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.mail_id)
}

// .proto.MailTextContent mail_text_content = 4;
bool MailData::has_mail_text_content() const {
  return this != internal_default_instance() && mail_text_content_ != NULL;
}
void MailData::clear_mail_text_content() {
  if (GetArenaNoVirtual() == NULL && mail_text_content_ != NULL) delete mail_text_content_;
  mail_text_content_ = NULL;
}
const ::proto::MailTextContent& MailData::mail_text_content() const {
  const ::proto::MailTextContent* p = mail_text_content_;
  // @@protoc_insertion_point(field_get:proto.MailData.mail_text_content)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MailTextContent*>(
      &::proto::_MailTextContent_default_instance_);
}
::proto::MailTextContent* MailData::mutable_mail_text_content() {
  
  if (mail_text_content_ == NULL) {
    mail_text_content_ = new ::proto::MailTextContent;
  }
  // @@protoc_insertion_point(field_mutable:proto.MailData.mail_text_content)
  return mail_text_content_;
}
::proto::MailTextContent* MailData::release_mail_text_content() {
  // @@protoc_insertion_point(field_release:proto.MailData.mail_text_content)
  
  ::proto::MailTextContent* temp = mail_text_content_;
  mail_text_content_ = NULL;
  return temp;
}
void MailData::set_allocated_mail_text_content(::proto::MailTextContent* mail_text_content) {
  delete mail_text_content_;
  mail_text_content_ = mail_text_content;
  if (mail_text_content) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MailData.mail_text_content)
}

// repeated .proto.MailItem item_list = 7;
int MailData::item_list_size() const {
  return item_list_.size();
}
void MailData::clear_item_list() {
  item_list_.Clear();
}
const ::proto::MailItem& MailData::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailData.item_list)
  return item_list_.Get(index);
}
::proto::MailItem* MailData::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailData.item_list)
  return item_list_.Mutable(index);
}
::proto::MailItem* MailData::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.MailData.item_list)
  return item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MailItem >*
MailData::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailData.item_list)
  return &item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MailItem >&
MailData::item_list() const {
  // @@protoc_insertion_point(field_list:proto.MailData.item_list)
  return item_list_;
}

// uint32 send_time = 8;
void MailData::clear_send_time() {
  send_time_ = 0u;
}
::google::protobuf::uint32 MailData::send_time() const {
  // @@protoc_insertion_point(field_get:proto.MailData.send_time)
  return send_time_;
}
void MailData::set_send_time(::google::protobuf::uint32 value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.send_time)
}

// uint32 expire_time = 9;
void MailData::clear_expire_time() {
  expire_time_ = 0u;
}
::google::protobuf::uint32 MailData::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.MailData.expire_time)
  return expire_time_;
}
void MailData::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.expire_time)
}

// uint32 importance = 10;
void MailData::clear_importance() {
  importance_ = 0u;
}
::google::protobuf::uint32 MailData::importance() const {
  // @@protoc_insertion_point(field_get:proto.MailData.importance)
  return importance_;
}
void MailData::set_importance(::google::protobuf::uint32 value) {
  
  importance_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.importance)
}

// bool is_read = 11;
void MailData::clear_is_read() {
  is_read_ = false;
}
bool MailData::is_read() const {
  // @@protoc_insertion_point(field_get:proto.MailData.is_read)
  return is_read_;
}
void MailData::set_is_read(bool value) {
  
  is_read_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.is_read)
}

// bool is_attachment_got = 12;
void MailData::clear_is_attachment_got() {
  is_attachment_got_ = false;
}
bool MailData::is_attachment_got() const {
  // @@protoc_insertion_point(field_get:proto.MailData.is_attachment_got)
  return is_attachment_got_;
}
void MailData::set_is_attachment_got(bool value) {
  
  is_attachment_got_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.is_attachment_got)
}

// uint32 config_id = 13;
void MailData::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 MailData::config_id() const {
  // @@protoc_insertion_point(field_get:proto.MailData.config_id)
  return config_id_;
}
void MailData::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MailData.config_id)
}

// repeated string argument_list = 14;
int MailData::argument_list_size() const {
  return argument_list_.size();
}
void MailData::clear_argument_list() {
  argument_list_.Clear();
}
const ::std::string& MailData::argument_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailData.argument_list)
  return argument_list_.Get(index);
}
::std::string* MailData::mutable_argument_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailData.argument_list)
  return argument_list_.Mutable(index);
}
void MailData::set_argument_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MailData.argument_list)
  argument_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MailData::set_argument_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MailData.argument_list)
  argument_list_.Mutable(index)->assign(std::move(value));
}
#endif
void MailData::set_argument_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MailData.argument_list)
}
void MailData::set_argument_list(int index, const char* value, size_t size) {
  argument_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MailData.argument_list)
}
::std::string* MailData::add_argument_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.MailData.argument_list)
  return argument_list_.Add();
}
void MailData::add_argument_list(const ::std::string& value) {
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MailData.argument_list)
}
#if LANG_CXX11
void MailData::add_argument_list(::std::string&& value) {
  argument_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MailData.argument_list)
}
#endif
void MailData::add_argument_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MailData.argument_list)
}
void MailData::add_argument_list(const char* value, size_t size) {
  argument_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MailData.argument_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailData::argument_list() const {
  // @@protoc_insertion_point(field_list:proto.MailData.argument_list)
  return argument_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MailData::mutable_argument_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailData.argument_list)
  return &argument_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlinePlayerInfo::kUidFieldNumber;
const int OnlinePlayerInfo::kNicknameFieldNumber;
const int OnlinePlayerInfo::kPlayerLevelFieldNumber;
const int OnlinePlayerInfo::kAvatarIdFieldNumber;
const int OnlinePlayerInfo::kMpSettingTypeFieldNumber;
const int OnlinePlayerInfo::kCurPlayerNumInWorldFieldNumber;
const int OnlinePlayerInfo::kWorldLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlinePlayerInfo::OnlinePlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OnlinePlayerInfo)
}
OnlinePlayerInfo::OnlinePlayerInfo(const OnlinePlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&world_level_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(world_level_));
  // @@protoc_insertion_point(copy_constructor:proto.OnlinePlayerInfo)
}

void OnlinePlayerInfo::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&world_level_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(world_level_));
  _cached_size_ = 0;
}

OnlinePlayerInfo::~OnlinePlayerInfo() {
  // @@protoc_insertion_point(destructor:proto.OnlinePlayerInfo)
  SharedDtor();
}

void OnlinePlayerInfo::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnlinePlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlinePlayerInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlinePlayerInfo& OnlinePlayerInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnlinePlayerInfo* OnlinePlayerInfo::New(::google::protobuf::Arena* arena) const {
  OnlinePlayerInfo* n = new OnlinePlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlinePlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OnlinePlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&world_level_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(world_level_));
  _internal_metadata_.Clear();
}

bool OnlinePlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OnlinePlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.OnlinePlayerInfo.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MpSettingType mp_setting_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mp_setting_type(static_cast< ::proto::MpSettingType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cur_player_num_in_world = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_player_num_in_world_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 world_level = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OnlinePlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OnlinePlayerInfo)
  return false;
#undef DO_
}

void OnlinePlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OnlinePlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OnlinePlayerInfo.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->player_level(), output);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->avatar_id(), output);
  }

  // .proto.MpSettingType mp_setting_type = 5;
  if (this->mp_setting_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->mp_setting_type(), output);
  }

  // uint32 cur_player_num_in_world = 6;
  if (this->cur_player_num_in_world() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->cur_player_num_in_world(), output);
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->world_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OnlinePlayerInfo)
}

::google::protobuf::uint8* OnlinePlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OnlinePlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OnlinePlayerInfo.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->player_level(), target);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->avatar_id(), target);
  }

  // .proto.MpSettingType mp_setting_type = 5;
  if (this->mp_setting_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->mp_setting_type(), target);
  }

  // uint32 cur_player_num_in_world = 6;
  if (this->cur_player_num_in_world() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->cur_player_num_in_world(), target);
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->world_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OnlinePlayerInfo)
  return target;
}

size_t OnlinePlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OnlinePlayerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_level());
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // .proto.MpSettingType mp_setting_type = 5;
  if (this->mp_setting_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mp_setting_type());
  }

  // uint32 cur_player_num_in_world = 6;
  if (this->cur_player_num_in_world() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_player_num_in_world());
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnlinePlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OnlinePlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlinePlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlinePlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OnlinePlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OnlinePlayerInfo)
    MergeFrom(*source);
  }
}

void OnlinePlayerInfo::MergeFrom(const OnlinePlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OnlinePlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.player_level() != 0) {
    set_player_level(from.player_level());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.mp_setting_type() != 0) {
    set_mp_setting_type(from.mp_setting_type());
  }
  if (from.cur_player_num_in_world() != 0) {
    set_cur_player_num_in_world(from.cur_player_num_in_world());
  }
  if (from.world_level() != 0) {
    set_world_level(from.world_level());
  }
}

void OnlinePlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OnlinePlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlinePlayerInfo::CopyFrom(const OnlinePlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OnlinePlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlinePlayerInfo::IsInitialized() const {
  return true;
}

void OnlinePlayerInfo::Swap(OnlinePlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlinePlayerInfo::InternalSwap(OnlinePlayerInfo* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(uid_, other->uid_);
  swap(player_level_, other->player_level_);
  swap(avatar_id_, other->avatar_id_);
  swap(mp_setting_type_, other->mp_setting_type_);
  swap(cur_player_num_in_world_, other->cur_player_num_in_world_);
  swap(world_level_, other->world_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnlinePlayerInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnlinePlayerInfo

// uint32 uid = 1;
void OnlinePlayerInfo::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 OnlinePlayerInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.uid)
  return uid_;
}
void OnlinePlayerInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.uid)
}

// string nickname = 2;
void OnlinePlayerInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OnlinePlayerInfo::nickname() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.nickname)
  return nickname_.GetNoArena();
}
void OnlinePlayerInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.nickname)
}
#if LANG_CXX11
void OnlinePlayerInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OnlinePlayerInfo.nickname)
}
#endif
void OnlinePlayerInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OnlinePlayerInfo.nickname)
}
void OnlinePlayerInfo::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OnlinePlayerInfo.nickname)
}
::std::string* OnlinePlayerInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.OnlinePlayerInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OnlinePlayerInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.OnlinePlayerInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OnlinePlayerInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.OnlinePlayerInfo.nickname)
}

// uint32 player_level = 3;
void OnlinePlayerInfo::clear_player_level() {
  player_level_ = 0u;
}
::google::protobuf::uint32 OnlinePlayerInfo::player_level() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.player_level)
  return player_level_;
}
void OnlinePlayerInfo::set_player_level(::google::protobuf::uint32 value) {
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.player_level)
}

// uint32 avatar_id = 4;
void OnlinePlayerInfo::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 OnlinePlayerInfo::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.avatar_id)
  return avatar_id_;
}
void OnlinePlayerInfo::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.avatar_id)
}

// .proto.MpSettingType mp_setting_type = 5;
void OnlinePlayerInfo::clear_mp_setting_type() {
  mp_setting_type_ = 0;
}
::proto::MpSettingType OnlinePlayerInfo::mp_setting_type() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.mp_setting_type)
  return static_cast< ::proto::MpSettingType >(mp_setting_type_);
}
void OnlinePlayerInfo::set_mp_setting_type(::proto::MpSettingType value) {
  
  mp_setting_type_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.mp_setting_type)
}

// uint32 cur_player_num_in_world = 6;
void OnlinePlayerInfo::clear_cur_player_num_in_world() {
  cur_player_num_in_world_ = 0u;
}
::google::protobuf::uint32 OnlinePlayerInfo::cur_player_num_in_world() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.cur_player_num_in_world)
  return cur_player_num_in_world_;
}
void OnlinePlayerInfo::set_cur_player_num_in_world(::google::protobuf::uint32 value) {
  
  cur_player_num_in_world_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.cur_player_num_in_world)
}

// uint32 world_level = 7;
void OnlinePlayerInfo::clear_world_level() {
  world_level_ = 0u;
}
::google::protobuf::uint32 OnlinePlayerInfo::world_level() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerInfo.world_level)
  return world_level_;
}
void OnlinePlayerInfo::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerInfo.world_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Birthday::kMonthFieldNumber;
const int Birthday::kDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Birthday::Birthday()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Birthday)
}
Birthday::Birthday(const Birthday& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&month_, &from.month_,
    static_cast<size_t>(reinterpret_cast<char*>(&day_) -
    reinterpret_cast<char*>(&month_)) + sizeof(day_));
  // @@protoc_insertion_point(copy_constructor:proto.Birthday)
}

void Birthday::SharedCtor() {
  ::memset(&month_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&day_) -
      reinterpret_cast<char*>(&month_)) + sizeof(day_));
  _cached_size_ = 0;
}

Birthday::~Birthday() {
  // @@protoc_insertion_point(destructor:proto.Birthday)
  SharedDtor();
}

void Birthday::SharedDtor() {
}

void Birthday::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Birthday::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Birthday& Birthday::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

Birthday* Birthday::New(::google::protobuf::Arena* arena) const {
  Birthday* n = new Birthday;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Birthday::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Birthday)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&month_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&day_) -
      reinterpret_cast<char*>(&month_)) + sizeof(day_));
  _internal_metadata_.Clear();
}

bool Birthday::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Birthday)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 month = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 day = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Birthday)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Birthday)
  return false;
#undef DO_
}

void Birthday::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Birthday)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 month = 1;
  if (this->month() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->month(), output);
  }

  // uint32 day = 2;
  if (this->day() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->day(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Birthday)
}

::google::protobuf::uint8* Birthday::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Birthday)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 month = 1;
  if (this->month() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->month(), target);
  }

  // uint32 day = 2;
  if (this->day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->day(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Birthday)
  return target;
}

size_t Birthday::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Birthday)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 month = 1;
  if (this->month() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->month());
  }

  // uint32 day = 2;
  if (this->day() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->day());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Birthday::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Birthday)
  GOOGLE_DCHECK_NE(&from, this);
  const Birthday* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Birthday>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Birthday)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Birthday)
    MergeFrom(*source);
  }
}

void Birthday::MergeFrom(const Birthday& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Birthday)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.month() != 0) {
    set_month(from.month());
  }
  if (from.day() != 0) {
    set_day(from.day());
  }
}

void Birthday::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Birthday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Birthday::CopyFrom(const Birthday& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Birthday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Birthday::IsInitialized() const {
  return true;
}

void Birthday::Swap(Birthday* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Birthday::InternalSwap(Birthday* other) {
  using std::swap;
  swap(month_, other->month_);
  swap(day_, other->day_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Birthday::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Birthday

// uint32 month = 1;
void Birthday::clear_month() {
  month_ = 0u;
}
::google::protobuf::uint32 Birthday::month() const {
  // @@protoc_insertion_point(field_get:proto.Birthday.month)
  return month_;
}
void Birthday::set_month(::google::protobuf::uint32 value) {
  
  month_ = value;
  // @@protoc_insertion_point(field_set:proto.Birthday.month)
}

// uint32 day = 2;
void Birthday::clear_day() {
  day_ = 0u;
}
::google::protobuf::uint32 Birthday::day() const {
  // @@protoc_insertion_point(field_get:proto.Birthday.day)
  return day_;
}
void Birthday::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:proto.Birthday.day)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MapMarkPoint::kSceneIdFieldNumber;
const int MapMarkPoint::kNameFieldNumber;
const int MapMarkPoint::kPosFieldNumber;
const int MapMarkPoint::kPointTypeFieldNumber;
const int MapMarkPoint::kMonsterIdFieldNumber;
const int MapMarkPoint::kFromTypeFieldNumber;
const int MapMarkPoint::kQuestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MapMarkPoint::MapMarkPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MapMarkPoint)
}
MapMarkPoint::MapMarkPoint(const MapMarkPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&quest_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(quest_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MapMarkPoint)
}

void MapMarkPoint::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(quest_id_));
  _cached_size_ = 0;
}

MapMarkPoint::~MapMarkPoint() {
  // @@protoc_insertion_point(destructor:proto.MapMarkPoint)
  SharedDtor();
}

void MapMarkPoint::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pos_;
}

void MapMarkPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MapMarkPoint::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MapMarkPoint& MapMarkPoint::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MapMarkPoint* MapMarkPoint::New(::google::protobuf::Arena* arena) const {
  MapMarkPoint* n = new MapMarkPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MapMarkPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MapMarkPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&quest_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(quest_id_));
  _internal_metadata_.Clear();
}

bool MapMarkPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MapMarkPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MapMarkPoint.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MapMarkPointType point_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_point_type(static_cast< ::proto::MapMarkPointType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 monster_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MapMarkFromType from_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_from_type(static_cast< ::proto::MapMarkFromType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 quest_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MapMarkPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MapMarkPoint)
  return false;
#undef DO_
}

void MapMarkPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MapMarkPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MapMarkPoint.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // .proto.MapMarkPointType point_type = 4;
  if (this->point_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->point_type(), output);
  }

  // uint32 monster_id = 5;
  if (this->monster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->monster_id(), output);
  }

  // .proto.MapMarkFromType from_type = 6;
  if (this->from_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->from_type(), output);
  }

  // uint32 quest_id = 7;
  if (this->quest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->quest_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MapMarkPoint)
}

::google::protobuf::uint8* MapMarkPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MapMarkPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MapMarkPoint.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, deterministic, target);
  }

  // .proto.MapMarkPointType point_type = 4;
  if (this->point_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->point_type(), target);
  }

  // uint32 monster_id = 5;
  if (this->monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->monster_id(), target);
  }

  // .proto.MapMarkFromType from_type = 6;
  if (this->from_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->from_type(), target);
  }

  // uint32 quest_id = 7;
  if (this->quest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->quest_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MapMarkPoint)
  return target;
}

size_t MapMarkPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MapMarkPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // .proto.MapMarkPointType point_type = 4;
  if (this->point_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->point_type());
  }

  // uint32 monster_id = 5;
  if (this->monster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_id());
  }

  // .proto.MapMarkFromType from_type = 6;
  if (this->from_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->from_type());
  }

  // uint32 quest_id = 7;
  if (this->quest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->quest_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MapMarkPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MapMarkPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const MapMarkPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MapMarkPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MapMarkPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MapMarkPoint)
    MergeFrom(*source);
  }
}

void MapMarkPoint::MergeFrom(const MapMarkPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MapMarkPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.point_type() != 0) {
    set_point_type(from.point_type());
  }
  if (from.monster_id() != 0) {
    set_monster_id(from.monster_id());
  }
  if (from.from_type() != 0) {
    set_from_type(from.from_type());
  }
  if (from.quest_id() != 0) {
    set_quest_id(from.quest_id());
  }
}

void MapMarkPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MapMarkPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapMarkPoint::CopyFrom(const MapMarkPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MapMarkPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapMarkPoint::IsInitialized() const {
  return true;
}

void MapMarkPoint::Swap(MapMarkPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MapMarkPoint::InternalSwap(MapMarkPoint* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(pos_, other->pos_);
  swap(scene_id_, other->scene_id_);
  swap(point_type_, other->point_type_);
  swap(monster_id_, other->monster_id_);
  swap(from_type_, other->from_type_);
  swap(quest_id_, other->quest_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MapMarkPoint::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MapMarkPoint

// uint32 scene_id = 1;
void MapMarkPoint::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 MapMarkPoint::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.scene_id)
  return scene_id_;
}
void MapMarkPoint::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.scene_id)
}

// string name = 2;
void MapMarkPoint::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MapMarkPoint::name() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.name)
  return name_.GetNoArena();
}
void MapMarkPoint::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.name)
}
#if LANG_CXX11
void MapMarkPoint::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MapMarkPoint.name)
}
#endif
void MapMarkPoint::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MapMarkPoint.name)
}
void MapMarkPoint::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MapMarkPoint.name)
}
::std::string* MapMarkPoint::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.MapMarkPoint.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MapMarkPoint::release_name() {
  // @@protoc_insertion_point(field_release:proto.MapMarkPoint.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MapMarkPoint::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.MapMarkPoint.name)
}

// .proto.Vector pos = 3;
bool MapMarkPoint::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void MapMarkPoint::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& MapMarkPoint::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MapMarkPoint::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MapMarkPoint.pos)
  return pos_;
}
::proto::Vector* MapMarkPoint::release_pos() {
  // @@protoc_insertion_point(field_release:proto.MapMarkPoint.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void MapMarkPoint::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MapMarkPoint.pos)
}

// .proto.MapMarkPointType point_type = 4;
void MapMarkPoint::clear_point_type() {
  point_type_ = 0;
}
::proto::MapMarkPointType MapMarkPoint::point_type() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.point_type)
  return static_cast< ::proto::MapMarkPointType >(point_type_);
}
void MapMarkPoint::set_point_type(::proto::MapMarkPointType value) {
  
  point_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.point_type)
}

// uint32 monster_id = 5;
void MapMarkPoint::clear_monster_id() {
  monster_id_ = 0u;
}
::google::protobuf::uint32 MapMarkPoint::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.monster_id)
  return monster_id_;
}
void MapMarkPoint::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.monster_id)
}

// .proto.MapMarkFromType from_type = 6;
void MapMarkPoint::clear_from_type() {
  from_type_ = 0;
}
::proto::MapMarkFromType MapMarkPoint::from_type() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.from_type)
  return static_cast< ::proto::MapMarkFromType >(from_type_);
}
void MapMarkPoint::set_from_type(::proto::MapMarkFromType value) {
  
  from_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.from_type)
}

// uint32 quest_id = 7;
void MapMarkPoint::clear_quest_id() {
  quest_id_ = 0u;
}
::google::protobuf::uint32 MapMarkPoint::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.MapMarkPoint.quest_id)
  return quest_id_;
}
void MapMarkPoint::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MapMarkPoint.quest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MassiveWaterInfo::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MassiveWaterInfo::MassiveWaterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MassiveWaterInfo)
}
MassiveWaterInfo::MassiveWaterInfo(const MassiveWaterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.MassiveWaterInfo)
}

void MassiveWaterInfo::SharedCtor() {
  id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

MassiveWaterInfo::~MassiveWaterInfo() {
  // @@protoc_insertion_point(destructor:proto.MassiveWaterInfo)
  SharedDtor();
}

void MassiveWaterInfo::SharedDtor() {
}

void MassiveWaterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MassiveWaterInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MassiveWaterInfo& MassiveWaterInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MassiveWaterInfo* MassiveWaterInfo::New(::google::protobuf::Arena* arena) const {
  MassiveWaterInfo* n = new MassiveWaterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MassiveWaterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MassiveWaterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool MassiveWaterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MassiveWaterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MassiveWaterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MassiveWaterInfo)
  return false;
#undef DO_
}

void MassiveWaterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MassiveWaterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MassiveWaterInfo)
}

::google::protobuf::uint8* MassiveWaterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MassiveWaterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MassiveWaterInfo)
  return target;
}

size_t MassiveWaterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MassiveWaterInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MassiveWaterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MassiveWaterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MassiveWaterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MassiveWaterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MassiveWaterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MassiveWaterInfo)
    MergeFrom(*source);
  }
}

void MassiveWaterInfo::MergeFrom(const MassiveWaterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MassiveWaterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MassiveWaterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MassiveWaterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MassiveWaterInfo::CopyFrom(const MassiveWaterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MassiveWaterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MassiveWaterInfo::IsInitialized() const {
  return true;
}

void MassiveWaterInfo::Swap(MassiveWaterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MassiveWaterInfo::InternalSwap(MassiveWaterInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MassiveWaterInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MassiveWaterInfo

// int64 id = 1;
void MassiveWaterInfo::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MassiveWaterInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveWaterInfo.id)
  return id_;
}
void MassiveWaterInfo::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveWaterInfo.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MassiveGrassInfo::kIdFieldNumber;
const int MassiveGrassInfo::kCenterFieldNumber;
const int MassiveGrassInfo::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MassiveGrassInfo::MassiveGrassInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MassiveGrassInfo)
}
MassiveGrassInfo::MassiveGrassInfo(const MassiveGrassInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center()) {
    center_ = new ::proto::Vector(*from.center_);
  } else {
    center_ = NULL;
  }
  if (from.has_size()) {
    size_ = new ::proto::Vector(*from.size_);
  } else {
    size_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:proto.MassiveGrassInfo)
}

void MassiveGrassInfo::SharedCtor() {
  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&center_)) + sizeof(id_));
  _cached_size_ = 0;
}

MassiveGrassInfo::~MassiveGrassInfo() {
  // @@protoc_insertion_point(destructor:proto.MassiveGrassInfo)
  SharedDtor();
}

void MassiveGrassInfo::SharedDtor() {
  if (this != internal_default_instance()) delete center_;
  if (this != internal_default_instance()) delete size_;
}

void MassiveGrassInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MassiveGrassInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MassiveGrassInfo& MassiveGrassInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MassiveGrassInfo* MassiveGrassInfo::New(::google::protobuf::Arena* arena) const {
  MassiveGrassInfo* n = new MassiveGrassInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MassiveGrassInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MassiveGrassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && center_ != NULL) {
    delete center_;
  }
  center_ = NULL;
  if (GetArenaNoVirtual() == NULL && size_ != NULL) {
    delete size_;
  }
  size_ = NULL;
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool MassiveGrassInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MassiveGrassInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector center = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MassiveGrassInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MassiveGrassInfo)
  return false;
#undef DO_
}

void MassiveGrassInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MassiveGrassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // .proto.Vector center = 2;
  if (this->has_center()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->center_, output);
  }

  // .proto.Vector size = 3;
  if (this->has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->size_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MassiveGrassInfo)
}

::google::protobuf::uint8* MassiveGrassInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MassiveGrassInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // .proto.Vector center = 2;
  if (this->has_center()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->center_, deterministic, target);
  }

  // .proto.Vector size = 3;
  if (this->has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->size_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MassiveGrassInfo)
  return target;
}

size_t MassiveGrassInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MassiveGrassInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector center = 2;
  if (this->has_center()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->center_);
  }

  // .proto.Vector size = 3;
  if (this->has_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->size_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MassiveGrassInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MassiveGrassInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MassiveGrassInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MassiveGrassInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MassiveGrassInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MassiveGrassInfo)
    MergeFrom(*source);
  }
}

void MassiveGrassInfo::MergeFrom(const MassiveGrassInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MassiveGrassInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_center()) {
    mutable_center()->::proto::Vector::MergeFrom(from.center());
  }
  if (from.has_size()) {
    mutable_size()->::proto::Vector::MergeFrom(from.size());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MassiveGrassInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MassiveGrassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MassiveGrassInfo::CopyFrom(const MassiveGrassInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MassiveGrassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MassiveGrassInfo::IsInitialized() const {
  return true;
}

void MassiveGrassInfo::Swap(MassiveGrassInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MassiveGrassInfo::InternalSwap(MassiveGrassInfo* other) {
  using std::swap;
  swap(center_, other->center_);
  swap(size_, other->size_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MassiveGrassInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MassiveGrassInfo

// uint32 id = 1;
void MassiveGrassInfo::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 MassiveGrassInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.id)
  return id_;
}
void MassiveGrassInfo::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveGrassInfo.id)
}

// .proto.Vector center = 2;
bool MassiveGrassInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
void MassiveGrassInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
const ::proto::Vector& MassiveGrassInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MassiveGrassInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveGrassInfo.center)
  return center_;
}
::proto::Vector* MassiveGrassInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.MassiveGrassInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
void MassiveGrassInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveGrassInfo.center)
}

// .proto.Vector size = 3;
bool MassiveGrassInfo::has_size() const {
  return this != internal_default_instance() && size_ != NULL;
}
void MassiveGrassInfo::clear_size() {
  if (GetArenaNoVirtual() == NULL && size_ != NULL) delete size_;
  size_ = NULL;
}
const ::proto::Vector& MassiveGrassInfo::size() const {
  const ::proto::Vector* p = size_;
  // @@protoc_insertion_point(field_get:proto.MassiveGrassInfo.size)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MassiveGrassInfo::mutable_size() {
  
  if (size_ == NULL) {
    size_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveGrassInfo.size)
  return size_;
}
::proto::Vector* MassiveGrassInfo::release_size() {
  // @@protoc_insertion_point(field_release:proto.MassiveGrassInfo.size)
  
  ::proto::Vector* temp = size_;
  size_ = NULL;
  return temp;
}
void MassiveGrassInfo::set_allocated_size(::proto::Vector* size) {
  delete size_;
  size_ = size;
  if (size) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveGrassInfo.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MassiveBoxInfo::kIdFieldNumber;
const int MassiveBoxInfo::kConfigIdFieldNumber;
const int MassiveBoxInfo::kCenterFieldNumber;
const int MassiveBoxInfo::kExtentsFieldNumber;
const int MassiveBoxInfo::kUpFieldNumber;
const int MassiveBoxInfo::kForwardFieldNumber;
const int MassiveBoxInfo::kRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MassiveBoxInfo::MassiveBoxInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MassiveBoxInfo)
}
MassiveBoxInfo::MassiveBoxInfo(const MassiveBoxInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center()) {
    center_ = new ::proto::Vector(*from.center_);
  } else {
    center_ = NULL;
  }
  if (from.has_extents()) {
    extents_ = new ::proto::Vector(*from.extents_);
  } else {
    extents_ = NULL;
  }
  if (from.has_up()) {
    up_ = new ::proto::Vector(*from.up_);
  } else {
    up_ = NULL;
  }
  if (from.has_forward()) {
    forward_ = new ::proto::Vector(*from.forward_);
  } else {
    forward_ = NULL;
  }
  if (from.has_right()) {
    right_ = new ::proto::Vector(*from.right_);
  } else {
    right_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&configid_) -
    reinterpret_cast<char*>(&id_)) + sizeof(configid_));
  // @@protoc_insertion_point(copy_constructor:proto.MassiveBoxInfo)
}

void MassiveBoxInfo::SharedCtor() {
  ::memset(&center_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configid_) -
      reinterpret_cast<char*>(&center_)) + sizeof(configid_));
  _cached_size_ = 0;
}

MassiveBoxInfo::~MassiveBoxInfo() {
  // @@protoc_insertion_point(destructor:proto.MassiveBoxInfo)
  SharedDtor();
}

void MassiveBoxInfo::SharedDtor() {
  if (this != internal_default_instance()) delete center_;
  if (this != internal_default_instance()) delete extents_;
  if (this != internal_default_instance()) delete up_;
  if (this != internal_default_instance()) delete forward_;
  if (this != internal_default_instance()) delete right_;
}

void MassiveBoxInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MassiveBoxInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MassiveBoxInfo& MassiveBoxInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MassiveBoxInfo* MassiveBoxInfo::New(::google::protobuf::Arena* arena) const {
  MassiveBoxInfo* n = new MassiveBoxInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MassiveBoxInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MassiveBoxInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && center_ != NULL) {
    delete center_;
  }
  center_ = NULL;
  if (GetArenaNoVirtual() == NULL && extents_ != NULL) {
    delete extents_;
  }
  extents_ = NULL;
  if (GetArenaNoVirtual() == NULL && up_ != NULL) {
    delete up_;
  }
  up_ = NULL;
  if (GetArenaNoVirtual() == NULL && forward_ != NULL) {
    delete forward_;
  }
  forward_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_ != NULL) {
    delete right_;
  }
  right_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configid_) -
      reinterpret_cast<char*>(&id_)) + sizeof(configid_));
  _internal_metadata_.Clear();
}

bool MassiveBoxInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MassiveBoxInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 configId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &configid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector center = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_center()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector extents = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_extents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector up = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_up()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector forward = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector right = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MassiveBoxInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MassiveBoxInfo)
  return false;
#undef DO_
}

void MassiveBoxInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MassiveBoxInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // uint32 configId = 2;
  if (this->configid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->configid(), output);
  }

  // .proto.Vector center = 3;
  if (this->has_center()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->center_, output);
  }

  // .proto.Vector extents = 4;
  if (this->has_extents()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->extents_, output);
  }

  // .proto.Vector up = 5;
  if (this->has_up()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->up_, output);
  }

  // .proto.Vector forward = 6;
  if (this->has_forward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->forward_, output);
  }

  // .proto.Vector right = 7;
  if (this->has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->right_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MassiveBoxInfo)
}

::google::protobuf::uint8* MassiveBoxInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MassiveBoxInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // uint32 configId = 2;
  if (this->configid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->configid(), target);
  }

  // .proto.Vector center = 3;
  if (this->has_center()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->center_, deterministic, target);
  }

  // .proto.Vector extents = 4;
  if (this->has_extents()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->extents_, deterministic, target);
  }

  // .proto.Vector up = 5;
  if (this->has_up()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->up_, deterministic, target);
  }

  // .proto.Vector forward = 6;
  if (this->has_forward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->forward_, deterministic, target);
  }

  // .proto.Vector right = 7;
  if (this->has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->right_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MassiveBoxInfo)
  return target;
}

size_t MassiveBoxInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MassiveBoxInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector center = 3;
  if (this->has_center()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->center_);
  }

  // .proto.Vector extents = 4;
  if (this->has_extents()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->extents_);
  }

  // .proto.Vector up = 5;
  if (this->has_up()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->up_);
  }

  // .proto.Vector forward = 6;
  if (this->has_forward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->forward_);
  }

  // .proto.Vector right = 7;
  if (this->has_right()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->right_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // uint32 configId = 2;
  if (this->configid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->configid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MassiveBoxInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MassiveBoxInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MassiveBoxInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MassiveBoxInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MassiveBoxInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MassiveBoxInfo)
    MergeFrom(*source);
  }
}

void MassiveBoxInfo::MergeFrom(const MassiveBoxInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MassiveBoxInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_center()) {
    mutable_center()->::proto::Vector::MergeFrom(from.center());
  }
  if (from.has_extents()) {
    mutable_extents()->::proto::Vector::MergeFrom(from.extents());
  }
  if (from.has_up()) {
    mutable_up()->::proto::Vector::MergeFrom(from.up());
  }
  if (from.has_forward()) {
    mutable_forward()->::proto::Vector::MergeFrom(from.forward());
  }
  if (from.has_right()) {
    mutable_right()->::proto::Vector::MergeFrom(from.right());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.configid() != 0) {
    set_configid(from.configid());
  }
}

void MassiveBoxInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MassiveBoxInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MassiveBoxInfo::CopyFrom(const MassiveBoxInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MassiveBoxInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MassiveBoxInfo::IsInitialized() const {
  return true;
}

void MassiveBoxInfo::Swap(MassiveBoxInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MassiveBoxInfo::InternalSwap(MassiveBoxInfo* other) {
  using std::swap;
  swap(center_, other->center_);
  swap(extents_, other->extents_);
  swap(up_, other->up_);
  swap(forward_, other->forward_);
  swap(right_, other->right_);
  swap(id_, other->id_);
  swap(configid_, other->configid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MassiveBoxInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MassiveBoxInfo

// int32 id = 1;
void MassiveBoxInfo::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 MassiveBoxInfo::id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.id)
  return id_;
}
void MassiveBoxInfo::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveBoxInfo.id)
}

// uint32 configId = 2;
void MassiveBoxInfo::clear_configid() {
  configid_ = 0u;
}
::google::protobuf::uint32 MassiveBoxInfo::configid() const {
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.configId)
  return configid_;
}
void MassiveBoxInfo::set_configid(::google::protobuf::uint32 value) {
  
  configid_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveBoxInfo.configId)
}

// .proto.Vector center = 3;
bool MassiveBoxInfo::has_center() const {
  return this != internal_default_instance() && center_ != NULL;
}
void MassiveBoxInfo::clear_center() {
  if (GetArenaNoVirtual() == NULL && center_ != NULL) delete center_;
  center_ = NULL;
}
const ::proto::Vector& MassiveBoxInfo::center() const {
  const ::proto::Vector* p = center_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.center)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MassiveBoxInfo::mutable_center() {
  
  if (center_ == NULL) {
    center_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.center)
  return center_;
}
::proto::Vector* MassiveBoxInfo::release_center() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.center)
  
  ::proto::Vector* temp = center_;
  center_ = NULL;
  return temp;
}
void MassiveBoxInfo::set_allocated_center(::proto::Vector* center) {
  delete center_;
  center_ = center;
  if (center) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.center)
}

// .proto.Vector extents = 4;
bool MassiveBoxInfo::has_extents() const {
  return this != internal_default_instance() && extents_ != NULL;
}
void MassiveBoxInfo::clear_extents() {
  if (GetArenaNoVirtual() == NULL && extents_ != NULL) delete extents_;
  extents_ = NULL;
}
const ::proto::Vector& MassiveBoxInfo::extents() const {
  const ::proto::Vector* p = extents_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.extents)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MassiveBoxInfo::mutable_extents() {
  
  if (extents_ == NULL) {
    extents_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.extents)
  return extents_;
}
::proto::Vector* MassiveBoxInfo::release_extents() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.extents)
  
  ::proto::Vector* temp = extents_;
  extents_ = NULL;
  return temp;
}
void MassiveBoxInfo::set_allocated_extents(::proto::Vector* extents) {
  delete extents_;
  extents_ = extents;
  if (extents) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.extents)
}

// .proto.Vector up = 5;
bool MassiveBoxInfo::has_up() const {
  return this != internal_default_instance() && up_ != NULL;
}
void MassiveBoxInfo::clear_up() {
  if (GetArenaNoVirtual() == NULL && up_ != NULL) delete up_;
  up_ = NULL;
}
const ::proto::Vector& MassiveBoxInfo::up() const {
  const ::proto::Vector* p = up_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.up)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MassiveBoxInfo::mutable_up() {
  
  if (up_ == NULL) {
    up_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.up)
  return up_;
}
::proto::Vector* MassiveBoxInfo::release_up() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.up)
  
  ::proto::Vector* temp = up_;
  up_ = NULL;
  return temp;
}
void MassiveBoxInfo::set_allocated_up(::proto::Vector* up) {
  delete up_;
  up_ = up;
  if (up) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.up)
}

// .proto.Vector forward = 6;
bool MassiveBoxInfo::has_forward() const {
  return this != internal_default_instance() && forward_ != NULL;
}
void MassiveBoxInfo::clear_forward() {
  if (GetArenaNoVirtual() == NULL && forward_ != NULL) delete forward_;
  forward_ = NULL;
}
const ::proto::Vector& MassiveBoxInfo::forward() const {
  const ::proto::Vector* p = forward_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MassiveBoxInfo::mutable_forward() {
  
  if (forward_ == NULL) {
    forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.forward)
  return forward_;
}
::proto::Vector* MassiveBoxInfo::release_forward() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.forward)
  
  ::proto::Vector* temp = forward_;
  forward_ = NULL;
  return temp;
}
void MassiveBoxInfo::set_allocated_forward(::proto::Vector* forward) {
  delete forward_;
  forward_ = forward;
  if (forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.forward)
}

// .proto.Vector right = 7;
bool MassiveBoxInfo::has_right() const {
  return this != internal_default_instance() && right_ != NULL;
}
void MassiveBoxInfo::clear_right() {
  if (GetArenaNoVirtual() == NULL && right_ != NULL) delete right_;
  right_ = NULL;
}
const ::proto::Vector& MassiveBoxInfo::right() const {
  const ::proto::Vector* p = right_;
  // @@protoc_insertion_point(field_get:proto.MassiveBoxInfo.right)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MassiveBoxInfo::mutable_right() {
  
  if (right_ == NULL) {
    right_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MassiveBoxInfo.right)
  return right_;
}
::proto::Vector* MassiveBoxInfo::release_right() {
  // @@protoc_insertion_point(field_release:proto.MassiveBoxInfo.right)
  
  ::proto::Vector* temp = right_;
  right_ = NULL;
  return temp;
}
void MassiveBoxInfo::set_allocated_right(::proto::Vector* right) {
  delete right_;
  right_ = right;
  if (right) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MassiveBoxInfo.right)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientMassiveEntity::kEntityTypeFieldNumber;
const int ClientMassiveEntity::kConfigIdFieldNumber;
const int ClientMassiveEntity::kObjIdFieldNumber;
const int ClientMassiveEntity::kWaterInfoFieldNumber;
const int ClientMassiveEntity::kGrassInfoFieldNumber;
const int ClientMassiveEntity::kBoxInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientMassiveEntity::ClientMassiveEntity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientMassiveEntity)
}
ClientMassiveEntity::ClientMassiveEntity(const ClientMassiveEntity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_type_, &from.entity_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_id_) -
    reinterpret_cast<char*>(&entity_type_)) + sizeof(obj_id_));
  clear_has_entity_info();
  switch (from.entity_info_case()) {
    case kWaterInfo: {
      mutable_water_info()->::proto::MassiveWaterInfo::MergeFrom(from.water_info());
      break;
    }
    case kGrassInfo: {
      mutable_grass_info()->::proto::MassiveGrassInfo::MergeFrom(from.grass_info());
      break;
    }
    case kBoxInfo: {
      mutable_box_info()->::proto::MassiveBoxInfo::MergeFrom(from.box_info());
      break;
    }
    case ENTITY_INFO_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.ClientMassiveEntity)
}

void ClientMassiveEntity::SharedCtor() {
  ::memset(&entity_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_id_) -
      reinterpret_cast<char*>(&entity_type_)) + sizeof(obj_id_));
  clear_has_entity_info();
  _cached_size_ = 0;
}

ClientMassiveEntity::~ClientMassiveEntity() {
  // @@protoc_insertion_point(destructor:proto.ClientMassiveEntity)
  SharedDtor();
}

void ClientMassiveEntity::SharedDtor() {
  if (has_entity_info()) {
    clear_entity_info();
  }
}

void ClientMassiveEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientMassiveEntity::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientMassiveEntity& ClientMassiveEntity::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientMassiveEntity* ClientMassiveEntity::New(::google::protobuf::Arena* arena) const {
  ClientMassiveEntity* n = new ClientMassiveEntity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientMassiveEntity::clear_entity_info() {
// @@protoc_insertion_point(one_of_clear_start:proto.ClientMassiveEntity)
  switch (entity_info_case()) {
    case kWaterInfo: {
      delete entity_info_.water_info_;
      break;
    }
    case kGrassInfo: {
      delete entity_info_.grass_info_;
      break;
    }
    case kBoxInfo: {
      delete entity_info_.box_info_;
      break;
    }
    case ENTITY_INFO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTITY_INFO_NOT_SET;
}


void ClientMassiveEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientMassiveEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_id_) -
      reinterpret_cast<char*>(&entity_type_)) + sizeof(obj_id_));
  clear_entity_info();
  _internal_metadata_.Clear();
}

bool ClientMassiveEntity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientMassiveEntity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 obj_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MassiveWaterInfo water_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_water_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MassiveGrassInfo grass_info = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_grass_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MassiveBoxInfo box_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_box_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientMassiveEntity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientMassiveEntity)
  return false;
#undef DO_
}

void ClientMassiveEntity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientMassiveEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_type(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  // int64 obj_id = 3;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->obj_id(), output);
  }

  // .proto.MassiveWaterInfo water_info = 4;
  if (has_water_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *entity_info_.water_info_, output);
  }

  // .proto.MassiveGrassInfo grass_info = 5;
  if (has_grass_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *entity_info_.grass_info_, output);
  }

  // .proto.MassiveBoxInfo box_info = 6;
  if (has_box_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *entity_info_.box_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientMassiveEntity)
}

::google::protobuf::uint8* ClientMassiveEntity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientMassiveEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_type(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  // int64 obj_id = 3;
  if (this->obj_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->obj_id(), target);
  }

  // .proto.MassiveWaterInfo water_info = 4;
  if (has_water_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *entity_info_.water_info_, deterministic, target);
  }

  // .proto.MassiveGrassInfo grass_info = 5;
  if (has_grass_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *entity_info_.grass_info_, deterministic, target);
  }

  // .proto.MassiveBoxInfo box_info = 6;
  if (has_box_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *entity_info_.box_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientMassiveEntity)
  return target;
}

size_t ClientMassiveEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientMassiveEntity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_type());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // int64 obj_id = 3;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->obj_id());
  }

  switch (entity_info_case()) {
    // .proto.MassiveWaterInfo water_info = 4;
    case kWaterInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_info_.water_info_);
      break;
    }
    // .proto.MassiveGrassInfo grass_info = 5;
    case kGrassInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_info_.grass_info_);
      break;
    }
    // .proto.MassiveBoxInfo box_info = 6;
    case kBoxInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_info_.box_info_);
      break;
    }
    case ENTITY_INFO_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientMassiveEntity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientMassiveEntity)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientMassiveEntity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientMassiveEntity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientMassiveEntity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientMassiveEntity)
    MergeFrom(*source);
  }
}

void ClientMassiveEntity::MergeFrom(const ClientMassiveEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientMassiveEntity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_type() != 0) {
    set_entity_type(from.entity_type());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
  switch (from.entity_info_case()) {
    case kWaterInfo: {
      mutable_water_info()->::proto::MassiveWaterInfo::MergeFrom(from.water_info());
      break;
    }
    case kGrassInfo: {
      mutable_grass_info()->::proto::MassiveGrassInfo::MergeFrom(from.grass_info());
      break;
    }
    case kBoxInfo: {
      mutable_box_info()->::proto::MassiveBoxInfo::MergeFrom(from.box_info());
      break;
    }
    case ENTITY_INFO_NOT_SET: {
      break;
    }
  }
}

void ClientMassiveEntity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientMassiveEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientMassiveEntity::CopyFrom(const ClientMassiveEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientMassiveEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientMassiveEntity::IsInitialized() const {
  return true;
}

void ClientMassiveEntity::Swap(ClientMassiveEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientMassiveEntity::InternalSwap(ClientMassiveEntity* other) {
  using std::swap;
  swap(entity_type_, other->entity_type_);
  swap(config_id_, other->config_id_);
  swap(obj_id_, other->obj_id_);
  swap(entity_info_, other->entity_info_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientMassiveEntity::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientMassiveEntity

// uint32 entity_type = 1;
void ClientMassiveEntity::clear_entity_type() {
  entity_type_ = 0u;
}
::google::protobuf::uint32 ClientMassiveEntity::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.entity_type)
  return entity_type_;
}
void ClientMassiveEntity::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.entity_type)
}

// uint32 config_id = 2;
void ClientMassiveEntity::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 ClientMassiveEntity::config_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.config_id)
  return config_id_;
}
void ClientMassiveEntity::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.config_id)
}

// int64 obj_id = 3;
void ClientMassiveEntity::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ClientMassiveEntity::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.obj_id)
  return obj_id_;
}
void ClientMassiveEntity::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientMassiveEntity.obj_id)
}

// .proto.MassiveWaterInfo water_info = 4;
bool ClientMassiveEntity::has_water_info() const {
  return entity_info_case() == kWaterInfo;
}
void ClientMassiveEntity::set_has_water_info() {
  _oneof_case_[0] = kWaterInfo;
}
void ClientMassiveEntity::clear_water_info() {
  if (has_water_info()) {
    delete entity_info_.water_info_;
    clear_has_entity_info();
  }
}
 const ::proto::MassiveWaterInfo& ClientMassiveEntity::water_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.water_info)
  return has_water_info()
      ? *entity_info_.water_info_
      : ::proto::MassiveWaterInfo::default_instance();
}
::proto::MassiveWaterInfo* ClientMassiveEntity::mutable_water_info() {
  if (!has_water_info()) {
    clear_entity_info();
    set_has_water_info();
    entity_info_.water_info_ = new ::proto::MassiveWaterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.water_info)
  return entity_info_.water_info_;
}
::proto::MassiveWaterInfo* ClientMassiveEntity::release_water_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.water_info)
  if (has_water_info()) {
    clear_has_entity_info();
    ::proto::MassiveWaterInfo* temp = entity_info_.water_info_;
    entity_info_.water_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ClientMassiveEntity::set_allocated_water_info(::proto::MassiveWaterInfo* water_info) {
  clear_entity_info();
  if (water_info) {
    set_has_water_info();
    entity_info_.water_info_ = water_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.water_info)
}

// .proto.MassiveGrassInfo grass_info = 5;
bool ClientMassiveEntity::has_grass_info() const {
  return entity_info_case() == kGrassInfo;
}
void ClientMassiveEntity::set_has_grass_info() {
  _oneof_case_[0] = kGrassInfo;
}
void ClientMassiveEntity::clear_grass_info() {
  if (has_grass_info()) {
    delete entity_info_.grass_info_;
    clear_has_entity_info();
  }
}
 const ::proto::MassiveGrassInfo& ClientMassiveEntity::grass_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.grass_info)
  return has_grass_info()
      ? *entity_info_.grass_info_
      : ::proto::MassiveGrassInfo::default_instance();
}
::proto::MassiveGrassInfo* ClientMassiveEntity::mutable_grass_info() {
  if (!has_grass_info()) {
    clear_entity_info();
    set_has_grass_info();
    entity_info_.grass_info_ = new ::proto::MassiveGrassInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.grass_info)
  return entity_info_.grass_info_;
}
::proto::MassiveGrassInfo* ClientMassiveEntity::release_grass_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.grass_info)
  if (has_grass_info()) {
    clear_has_entity_info();
    ::proto::MassiveGrassInfo* temp = entity_info_.grass_info_;
    entity_info_.grass_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ClientMassiveEntity::set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info) {
  clear_entity_info();
  if (grass_info) {
    set_has_grass_info();
    entity_info_.grass_info_ = grass_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.grass_info)
}

// .proto.MassiveBoxInfo box_info = 6;
bool ClientMassiveEntity::has_box_info() const {
  return entity_info_case() == kBoxInfo;
}
void ClientMassiveEntity::set_has_box_info() {
  _oneof_case_[0] = kBoxInfo;
}
void ClientMassiveEntity::clear_box_info() {
  if (has_box_info()) {
    delete entity_info_.box_info_;
    clear_has_entity_info();
  }
}
 const ::proto::MassiveBoxInfo& ClientMassiveEntity::box_info() const {
  // @@protoc_insertion_point(field_get:proto.ClientMassiveEntity.box_info)
  return has_box_info()
      ? *entity_info_.box_info_
      : ::proto::MassiveBoxInfo::default_instance();
}
::proto::MassiveBoxInfo* ClientMassiveEntity::mutable_box_info() {
  if (!has_box_info()) {
    clear_entity_info();
    set_has_box_info();
    entity_info_.box_info_ = new ::proto::MassiveBoxInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientMassiveEntity.box_info)
  return entity_info_.box_info_;
}
::proto::MassiveBoxInfo* ClientMassiveEntity::release_box_info() {
  // @@protoc_insertion_point(field_release:proto.ClientMassiveEntity.box_info)
  if (has_box_info()) {
    clear_has_entity_info();
    ::proto::MassiveBoxInfo* temp = entity_info_.box_info_;
    entity_info_.box_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ClientMassiveEntity::set_allocated_box_info(::proto::MassiveBoxInfo* box_info) {
  clear_entity_info();
  if (box_info) {
    set_has_box_info();
    entity_info_.box_info_ = box_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientMassiveEntity.box_info)
}

bool ClientMassiveEntity::has_entity_info() const {
  return entity_info_case() != ENTITY_INFO_NOT_SET;
}
void ClientMassiveEntity::clear_has_entity_info() {
  _oneof_case_[0] = ENTITY_INFO_NOT_SET;
}
ClientMassiveEntity::EntityInfoCase ClientMassiveEntity::entity_info_case() const {
  return ClientMassiveEntity::EntityInfoCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMassiveEntity::kEntityTypeFieldNumber;
const int ServerMassiveEntity::kConfigIdFieldNumber;
const int ServerMassiveEntity::kRuntimeIdFieldNumber;
const int ServerMassiveEntity::kAuthorityPeerIdFieldNumber;
const int ServerMassiveEntity::kObjIdFieldNumber;
const int ServerMassiveEntity::kWaterInfoFieldNumber;
const int ServerMassiveEntity::kGrassInfoFieldNumber;
const int ServerMassiveEntity::kBoxInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMassiveEntity::ServerMassiveEntity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerMassiveEntity)
}
ServerMassiveEntity::ServerMassiveEntity(const ServerMassiveEntity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_type_, &from.entity_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&obj_id_) -
    reinterpret_cast<char*>(&entity_type_)) + sizeof(obj_id_));
  clear_has_entity_info();
  switch (from.entity_info_case()) {
    case kWaterInfo: {
      mutable_water_info()->::proto::MassiveWaterInfo::MergeFrom(from.water_info());
      break;
    }
    case kGrassInfo: {
      mutable_grass_info()->::proto::MassiveGrassInfo::MergeFrom(from.grass_info());
      break;
    }
    case kBoxInfo: {
      mutable_box_info()->::proto::MassiveBoxInfo::MergeFrom(from.box_info());
      break;
    }
    case ENTITY_INFO_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.ServerMassiveEntity)
}

void ServerMassiveEntity::SharedCtor() {
  ::memset(&entity_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_id_) -
      reinterpret_cast<char*>(&entity_type_)) + sizeof(obj_id_));
  clear_has_entity_info();
  _cached_size_ = 0;
}

ServerMassiveEntity::~ServerMassiveEntity() {
  // @@protoc_insertion_point(destructor:proto.ServerMassiveEntity)
  SharedDtor();
}

void ServerMassiveEntity::SharedDtor() {
  if (has_entity_info()) {
    clear_entity_info();
  }
}

void ServerMassiveEntity::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerMassiveEntity::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMassiveEntity& ServerMassiveEntity::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerMassiveEntity* ServerMassiveEntity::New(::google::protobuf::Arena* arena) const {
  ServerMassiveEntity* n = new ServerMassiveEntity;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerMassiveEntity::clear_entity_info() {
// @@protoc_insertion_point(one_of_clear_start:proto.ServerMassiveEntity)
  switch (entity_info_case()) {
    case kWaterInfo: {
      delete entity_info_.water_info_;
      break;
    }
    case kGrassInfo: {
      delete entity_info_.grass_info_;
      break;
    }
    case kBoxInfo: {
      delete entity_info_.box_info_;
      break;
    }
    case ENTITY_INFO_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTITY_INFO_NOT_SET;
}


void ServerMassiveEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerMassiveEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obj_id_) -
      reinterpret_cast<char*>(&entity_type_)) + sizeof(obj_id_));
  clear_entity_info();
  _internal_metadata_.Clear();
}

bool ServerMassiveEntity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerMassiveEntity)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 runtime_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &runtime_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 authority_peer_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authority_peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 obj_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MassiveWaterInfo water_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_water_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MassiveGrassInfo grass_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_grass_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MassiveBoxInfo box_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_box_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerMassiveEntity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerMassiveEntity)
  return false;
#undef DO_
}

void ServerMassiveEntity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerMassiveEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_type(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  // uint32 runtime_id = 3;
  if (this->runtime_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->runtime_id(), output);
  }

  // uint32 authority_peer_id = 4;
  if (this->authority_peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->authority_peer_id(), output);
  }

  // int64 obj_id = 5;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->obj_id(), output);
  }

  // .proto.MassiveWaterInfo water_info = 6;
  if (has_water_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *entity_info_.water_info_, output);
  }

  // .proto.MassiveGrassInfo grass_info = 7;
  if (has_grass_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *entity_info_.grass_info_, output);
  }

  // .proto.MassiveBoxInfo box_info = 8;
  if (has_box_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *entity_info_.box_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerMassiveEntity)
}

::google::protobuf::uint8* ServerMassiveEntity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerMassiveEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_type(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  // uint32 runtime_id = 3;
  if (this->runtime_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->runtime_id(), target);
  }

  // uint32 authority_peer_id = 4;
  if (this->authority_peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->authority_peer_id(), target);
  }

  // int64 obj_id = 5;
  if (this->obj_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->obj_id(), target);
  }

  // .proto.MassiveWaterInfo water_info = 6;
  if (has_water_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *entity_info_.water_info_, deterministic, target);
  }

  // .proto.MassiveGrassInfo grass_info = 7;
  if (has_grass_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *entity_info_.grass_info_, deterministic, target);
  }

  // .proto.MassiveBoxInfo box_info = 8;
  if (has_box_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *entity_info_.box_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerMassiveEntity)
  return target;
}

size_t ServerMassiveEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerMassiveEntity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_type());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 runtime_id = 3;
  if (this->runtime_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->runtime_id());
  }

  // uint32 authority_peer_id = 4;
  if (this->authority_peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authority_peer_id());
  }

  // int64 obj_id = 5;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->obj_id());
  }

  switch (entity_info_case()) {
    // .proto.MassiveWaterInfo water_info = 6;
    case kWaterInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_info_.water_info_);
      break;
    }
    // .proto.MassiveGrassInfo grass_info = 7;
    case kGrassInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_info_.grass_info_);
      break;
    }
    // .proto.MassiveBoxInfo box_info = 8;
    case kBoxInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *entity_info_.box_info_);
      break;
    }
    case ENTITY_INFO_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerMassiveEntity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerMassiveEntity)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMassiveEntity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMassiveEntity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerMassiveEntity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerMassiveEntity)
    MergeFrom(*source);
  }
}

void ServerMassiveEntity::MergeFrom(const ServerMassiveEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerMassiveEntity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_type() != 0) {
    set_entity_type(from.entity_type());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.runtime_id() != 0) {
    set_runtime_id(from.runtime_id());
  }
  if (from.authority_peer_id() != 0) {
    set_authority_peer_id(from.authority_peer_id());
  }
  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
  switch (from.entity_info_case()) {
    case kWaterInfo: {
      mutable_water_info()->::proto::MassiveWaterInfo::MergeFrom(from.water_info());
      break;
    }
    case kGrassInfo: {
      mutable_grass_info()->::proto::MassiveGrassInfo::MergeFrom(from.grass_info());
      break;
    }
    case kBoxInfo: {
      mutable_box_info()->::proto::MassiveBoxInfo::MergeFrom(from.box_info());
      break;
    }
    case ENTITY_INFO_NOT_SET: {
      break;
    }
  }
}

void ServerMassiveEntity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerMassiveEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMassiveEntity::CopyFrom(const ServerMassiveEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerMassiveEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMassiveEntity::IsInitialized() const {
  return true;
}

void ServerMassiveEntity::Swap(ServerMassiveEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMassiveEntity::InternalSwap(ServerMassiveEntity* other) {
  using std::swap;
  swap(entity_type_, other->entity_type_);
  swap(config_id_, other->config_id_);
  swap(runtime_id_, other->runtime_id_);
  swap(authority_peer_id_, other->authority_peer_id_);
  swap(obj_id_, other->obj_id_);
  swap(entity_info_, other->entity_info_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerMassiveEntity::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerMassiveEntity

// uint32 entity_type = 1;
void ServerMassiveEntity::clear_entity_type() {
  entity_type_ = 0u;
}
::google::protobuf::uint32 ServerMassiveEntity::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.entity_type)
  return entity_type_;
}
void ServerMassiveEntity::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.entity_type)
}

// uint32 config_id = 2;
void ServerMassiveEntity::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 ServerMassiveEntity::config_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.config_id)
  return config_id_;
}
void ServerMassiveEntity::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.config_id)
}

// uint32 runtime_id = 3;
void ServerMassiveEntity::clear_runtime_id() {
  runtime_id_ = 0u;
}
::google::protobuf::uint32 ServerMassiveEntity::runtime_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.runtime_id)
  return runtime_id_;
}
void ServerMassiveEntity::set_runtime_id(::google::protobuf::uint32 value) {
  
  runtime_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.runtime_id)
}

// uint32 authority_peer_id = 4;
void ServerMassiveEntity::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
::google::protobuf::uint32 ServerMassiveEntity::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.authority_peer_id)
  return authority_peer_id_;
}
void ServerMassiveEntity::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.authority_peer_id)
}

// int64 obj_id = 5;
void ServerMassiveEntity::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ServerMassiveEntity::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.obj_id)
  return obj_id_;
}
void ServerMassiveEntity::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMassiveEntity.obj_id)
}

// .proto.MassiveWaterInfo water_info = 6;
bool ServerMassiveEntity::has_water_info() const {
  return entity_info_case() == kWaterInfo;
}
void ServerMassiveEntity::set_has_water_info() {
  _oneof_case_[0] = kWaterInfo;
}
void ServerMassiveEntity::clear_water_info() {
  if (has_water_info()) {
    delete entity_info_.water_info_;
    clear_has_entity_info();
  }
}
 const ::proto::MassiveWaterInfo& ServerMassiveEntity::water_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.water_info)
  return has_water_info()
      ? *entity_info_.water_info_
      : ::proto::MassiveWaterInfo::default_instance();
}
::proto::MassiveWaterInfo* ServerMassiveEntity::mutable_water_info() {
  if (!has_water_info()) {
    clear_entity_info();
    set_has_water_info();
    entity_info_.water_info_ = new ::proto::MassiveWaterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.water_info)
  return entity_info_.water_info_;
}
::proto::MassiveWaterInfo* ServerMassiveEntity::release_water_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.water_info)
  if (has_water_info()) {
    clear_has_entity_info();
    ::proto::MassiveWaterInfo* temp = entity_info_.water_info_;
    entity_info_.water_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ServerMassiveEntity::set_allocated_water_info(::proto::MassiveWaterInfo* water_info) {
  clear_entity_info();
  if (water_info) {
    set_has_water_info();
    entity_info_.water_info_ = water_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.water_info)
}

// .proto.MassiveGrassInfo grass_info = 7;
bool ServerMassiveEntity::has_grass_info() const {
  return entity_info_case() == kGrassInfo;
}
void ServerMassiveEntity::set_has_grass_info() {
  _oneof_case_[0] = kGrassInfo;
}
void ServerMassiveEntity::clear_grass_info() {
  if (has_grass_info()) {
    delete entity_info_.grass_info_;
    clear_has_entity_info();
  }
}
 const ::proto::MassiveGrassInfo& ServerMassiveEntity::grass_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.grass_info)
  return has_grass_info()
      ? *entity_info_.grass_info_
      : ::proto::MassiveGrassInfo::default_instance();
}
::proto::MassiveGrassInfo* ServerMassiveEntity::mutable_grass_info() {
  if (!has_grass_info()) {
    clear_entity_info();
    set_has_grass_info();
    entity_info_.grass_info_ = new ::proto::MassiveGrassInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.grass_info)
  return entity_info_.grass_info_;
}
::proto::MassiveGrassInfo* ServerMassiveEntity::release_grass_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.grass_info)
  if (has_grass_info()) {
    clear_has_entity_info();
    ::proto::MassiveGrassInfo* temp = entity_info_.grass_info_;
    entity_info_.grass_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ServerMassiveEntity::set_allocated_grass_info(::proto::MassiveGrassInfo* grass_info) {
  clear_entity_info();
  if (grass_info) {
    set_has_grass_info();
    entity_info_.grass_info_ = grass_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.grass_info)
}

// .proto.MassiveBoxInfo box_info = 8;
bool ServerMassiveEntity::has_box_info() const {
  return entity_info_case() == kBoxInfo;
}
void ServerMassiveEntity::set_has_box_info() {
  _oneof_case_[0] = kBoxInfo;
}
void ServerMassiveEntity::clear_box_info() {
  if (has_box_info()) {
    delete entity_info_.box_info_;
    clear_has_entity_info();
  }
}
 const ::proto::MassiveBoxInfo& ServerMassiveEntity::box_info() const {
  // @@protoc_insertion_point(field_get:proto.ServerMassiveEntity.box_info)
  return has_box_info()
      ? *entity_info_.box_info_
      : ::proto::MassiveBoxInfo::default_instance();
}
::proto::MassiveBoxInfo* ServerMassiveEntity::mutable_box_info() {
  if (!has_box_info()) {
    clear_entity_info();
    set_has_box_info();
    entity_info_.box_info_ = new ::proto::MassiveBoxInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerMassiveEntity.box_info)
  return entity_info_.box_info_;
}
::proto::MassiveBoxInfo* ServerMassiveEntity::release_box_info() {
  // @@protoc_insertion_point(field_release:proto.ServerMassiveEntity.box_info)
  if (has_box_info()) {
    clear_has_entity_info();
    ::proto::MassiveBoxInfo* temp = entity_info_.box_info_;
    entity_info_.box_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ServerMassiveEntity::set_allocated_box_info(::proto::MassiveBoxInfo* box_info) {
  clear_entity_info();
  if (box_info) {
    set_has_box_info();
    entity_info_.box_info_ = box_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerMassiveEntity.box_info)
}

bool ServerMassiveEntity::has_entity_info() const {
  return entity_info_case() != ENTITY_INFO_NOT_SET;
}
void ServerMassiveEntity::clear_has_entity_info() {
  _oneof_case_[0] = ENTITY_INFO_NOT_SET;
}
ServerMassiveEntity::EntityInfoCase ServerMassiveEntity::entity_info_case() const {
  return ServerMassiveEntity::EntityInfoCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MassiveEntityState::kEntityTypeFieldNumber;
const int MassiveEntityState::kObjIdFieldNumber;
const int MassiveEntityState::kElementStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MassiveEntityState::MassiveEntityState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MassiveEntityState)
}
MassiveEntityState::MassiveEntityState(const MassiveEntityState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_id_, &from.obj_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&element_state_) -
    reinterpret_cast<char*>(&obj_id_)) + sizeof(element_state_));
  // @@protoc_insertion_point(copy_constructor:proto.MassiveEntityState)
}

void MassiveEntityState::SharedCtor() {
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&element_state_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(element_state_));
  _cached_size_ = 0;
}

MassiveEntityState::~MassiveEntityState() {
  // @@protoc_insertion_point(destructor:proto.MassiveEntityState)
  SharedDtor();
}

void MassiveEntityState::SharedDtor() {
}

void MassiveEntityState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MassiveEntityState::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MassiveEntityState& MassiveEntityState::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

MassiveEntityState* MassiveEntityState::New(::google::protobuf::Arena* arena) const {
  MassiveEntityState* n = new MassiveEntityState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MassiveEntityState::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MassiveEntityState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&element_state_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(element_state_));
  _internal_metadata_.Clear();
}

bool MassiveEntityState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MassiveEntityState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 obj_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &obj_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 element_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &element_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MassiveEntityState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MassiveEntityState)
  return false;
#undef DO_
}

void MassiveEntityState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MassiveEntityState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_type(), output);
  }

  // int64 obj_id = 2;
  if (this->obj_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->obj_id(), output);
  }

  // uint32 element_state = 3;
  if (this->element_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->element_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MassiveEntityState)
}

::google::protobuf::uint8* MassiveEntityState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MassiveEntityState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_type(), target);
  }

  // int64 obj_id = 2;
  if (this->obj_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->obj_id(), target);
  }

  // uint32 element_state = 3;
  if (this->element_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->element_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MassiveEntityState)
  return target;
}

size_t MassiveEntityState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MassiveEntityState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 obj_id = 2;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->obj_id());
  }

  // uint32 entity_type = 1;
  if (this->entity_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_type());
  }

  // uint32 element_state = 3;
  if (this->element_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->element_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MassiveEntityState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MassiveEntityState)
  GOOGLE_DCHECK_NE(&from, this);
  const MassiveEntityState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MassiveEntityState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MassiveEntityState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MassiveEntityState)
    MergeFrom(*source);
  }
}

void MassiveEntityState::MergeFrom(const MassiveEntityState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MassiveEntityState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    set_obj_id(from.obj_id());
  }
  if (from.entity_type() != 0) {
    set_entity_type(from.entity_type());
  }
  if (from.element_state() != 0) {
    set_element_state(from.element_state());
  }
}

void MassiveEntityState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MassiveEntityState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MassiveEntityState::CopyFrom(const MassiveEntityState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MassiveEntityState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MassiveEntityState::IsInitialized() const {
  return true;
}

void MassiveEntityState::Swap(MassiveEntityState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MassiveEntityState::InternalSwap(MassiveEntityState* other) {
  using std::swap;
  swap(obj_id_, other->obj_id_);
  swap(entity_type_, other->entity_type_);
  swap(element_state_, other->element_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MassiveEntityState::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MassiveEntityState

// uint32 entity_type = 1;
void MassiveEntityState::clear_entity_type() {
  entity_type_ = 0u;
}
::google::protobuf::uint32 MassiveEntityState::entity_type() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.entity_type)
  return entity_type_;
}
void MassiveEntityState::set_entity_type(::google::protobuf::uint32 value) {
  
  entity_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.entity_type)
}

// int64 obj_id = 2;
void MassiveEntityState::clear_obj_id() {
  obj_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MassiveEntityState::obj_id() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.obj_id)
  return obj_id_;
}
void MassiveEntityState::set_obj_id(::google::protobuf::int64 value) {
  
  obj_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.obj_id)
}

// uint32 element_state = 3;
void MassiveEntityState::clear_element_state() {
  element_state_ = 0u;
}
::google::protobuf::uint32 MassiveEntityState::element_state() const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityState.element_state)
  return element_state_;
}
void MassiveEntityState::set_element_state(::google::protobuf::uint32 value) {
  
  element_state_ = value;
  // @@protoc_insertion_point(field_set:proto.MassiveEntityState.element_state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityClientData::kWindChangeSceneTimeFieldNumber;
const int EntityClientData::kWindmillSyncAngleFieldNumber;
const int EntityClientData::kWindChangeTargetLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityClientData::EntityClientData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityClientData)
}
EntityClientData::EntityClientData(const EntityClientData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&wind_change_scene_time_, &from.wind_change_scene_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&wind_change_target_level_) -
    reinterpret_cast<char*>(&wind_change_scene_time_)) + sizeof(wind_change_target_level_));
  // @@protoc_insertion_point(copy_constructor:proto.EntityClientData)
}

void EntityClientData::SharedCtor() {
  ::memset(&wind_change_scene_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wind_change_target_level_) -
      reinterpret_cast<char*>(&wind_change_scene_time_)) + sizeof(wind_change_target_level_));
  _cached_size_ = 0;
}

EntityClientData::~EntityClientData() {
  // @@protoc_insertion_point(destructor:proto.EntityClientData)
  SharedDtor();
}

void EntityClientData::SharedDtor() {
}

void EntityClientData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityClientData::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityClientData& EntityClientData::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityClientData* EntityClientData::New(::google::protobuf::Arena* arena) const {
  EntityClientData* n = new EntityClientData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityClientData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityClientData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wind_change_scene_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wind_change_target_level_) -
      reinterpret_cast<char*>(&wind_change_scene_time_)) + sizeof(wind_change_target_level_));
  _internal_metadata_.Clear();
}

bool EntityClientData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityClientData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 wind_change_scene_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wind_change_scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float windmill_sync_angle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &windmill_sync_angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 wind_change_target_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &wind_change_target_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityClientData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityClientData)
  return false;
#undef DO_
}

void EntityClientData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityClientData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 wind_change_scene_time = 1;
  if (this->wind_change_scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->wind_change_scene_time(), output);
  }

  // float windmill_sync_angle = 2;
  if (this->windmill_sync_angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->windmill_sync_angle(), output);
  }

  // int32 wind_change_target_level = 3;
  if (this->wind_change_target_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->wind_change_target_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityClientData)
}

::google::protobuf::uint8* EntityClientData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityClientData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 wind_change_scene_time = 1;
  if (this->wind_change_scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->wind_change_scene_time(), target);
  }

  // float windmill_sync_angle = 2;
  if (this->windmill_sync_angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->windmill_sync_angle(), target);
  }

  // int32 wind_change_target_level = 3;
  if (this->wind_change_target_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->wind_change_target_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityClientData)
  return target;
}

size_t EntityClientData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityClientData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 wind_change_scene_time = 1;
  if (this->wind_change_scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wind_change_scene_time());
  }

  // float windmill_sync_angle = 2;
  if (this->windmill_sync_angle() != 0) {
    total_size += 1 + 4;
  }

  // int32 wind_change_target_level = 3;
  if (this->wind_change_target_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->wind_change_target_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityClientData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityClientData)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityClientData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityClientData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityClientData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityClientData)
    MergeFrom(*source);
  }
}

void EntityClientData::MergeFrom(const EntityClientData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityClientData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.wind_change_scene_time() != 0) {
    set_wind_change_scene_time(from.wind_change_scene_time());
  }
  if (from.windmill_sync_angle() != 0) {
    set_windmill_sync_angle(from.windmill_sync_angle());
  }
  if (from.wind_change_target_level() != 0) {
    set_wind_change_target_level(from.wind_change_target_level());
  }
}

void EntityClientData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityClientData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityClientData::CopyFrom(const EntityClientData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityClientData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityClientData::IsInitialized() const {
  return true;
}

void EntityClientData::Swap(EntityClientData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityClientData::InternalSwap(EntityClientData* other) {
  using std::swap;
  swap(wind_change_scene_time_, other->wind_change_scene_time_);
  swap(windmill_sync_angle_, other->windmill_sync_angle_);
  swap(wind_change_target_level_, other->wind_change_target_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityClientData::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityClientData

// uint32 wind_change_scene_time = 1;
void EntityClientData::clear_wind_change_scene_time() {
  wind_change_scene_time_ = 0u;
}
::google::protobuf::uint32 EntityClientData::wind_change_scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.wind_change_scene_time)
  return wind_change_scene_time_;
}
void EntityClientData::set_wind_change_scene_time(::google::protobuf::uint32 value) {
  
  wind_change_scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.wind_change_scene_time)
}

// float windmill_sync_angle = 2;
void EntityClientData::clear_windmill_sync_angle() {
  windmill_sync_angle_ = 0;
}
float EntityClientData::windmill_sync_angle() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.windmill_sync_angle)
  return windmill_sync_angle_;
}
void EntityClientData::set_windmill_sync_angle(float value) {
  
  windmill_sync_angle_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.windmill_sync_angle)
}

// int32 wind_change_target_level = 3;
void EntityClientData::clear_wind_change_target_level() {
  wind_change_target_level_ = 0;
}
::google::protobuf::int32 EntityClientData::wind_change_target_level() const {
  // @@protoc_insertion_point(field_get:proto.EntityClientData.wind_change_target_level)
  return wind_change_target_level_;
}
void EntityClientData::set_wind_change_target_level(::google::protobuf::int32 value) {
  
  wind_change_target_level_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityClientData.wind_change_target_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockInfo::kBlockIdFieldNumber;
const int BlockInfo::kDataVersionFieldNumber;
const int BlockInfo::kBinDataFieldNumber;
const int BlockInfo::kIsDirtyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockInfo::BlockInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_define_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlockInfo)
}
BlockInfo::BlockInfo(const BlockInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bin_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bin_data().size() > 0) {
    bin_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bin_data_);
  }
  ::memcpy(&block_id_, &from.block_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_dirty_) -
    reinterpret_cast<char*>(&block_id_)) + sizeof(is_dirty_));
  // @@protoc_insertion_point(copy_constructor:proto.BlockInfo)
}

void BlockInfo::SharedCtor() {
  bin_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dirty_) -
      reinterpret_cast<char*>(&block_id_)) + sizeof(is_dirty_));
  _cached_size_ = 0;
}

BlockInfo::~BlockInfo() {
  // @@protoc_insertion_point(destructor:proto.BlockInfo)
  SharedDtor();
}

void BlockInfo::SharedDtor() {
  bin_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockInfo::descriptor() {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockInfo& BlockInfo::default_instance() {
  protobuf_define_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockInfo* BlockInfo::New(::google::protobuf::Arena* arena) const {
  BlockInfo* n = new BlockInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dirty_) -
      reinterpret_cast<char*>(&block_id_)) + sizeof(is_dirty_));
  _internal_metadata_.Clear();
}

bool BlockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlockInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 block_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 data_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bin_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bin_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_dirty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dirty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlockInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlockInfo)
  return false;
#undef DO_
}

void BlockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 block_id = 1;
  if (this->block_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->block_id(), output);
  }

  // uint32 data_version = 2;
  if (this->data_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->data_version(), output);
  }

  // bytes bin_data = 3;
  if (this->bin_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->bin_data(), output);
  }

  // bool is_dirty = 4;
  if (this->is_dirty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_dirty(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlockInfo)
}

::google::protobuf::uint8* BlockInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlockInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 block_id = 1;
  if (this->block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->block_id(), target);
  }

  // uint32 data_version = 2;
  if (this->data_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->data_version(), target);
  }

  // bytes bin_data = 3;
  if (this->bin_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->bin_data(), target);
  }

  // bool is_dirty = 4;
  if (this->is_dirty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_dirty(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlockInfo)
  return target;
}

size_t BlockInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlockInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bin_data = 3;
  if (this->bin_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bin_data());
  }

  // uint32 block_id = 1;
  if (this->block_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->block_id());
  }

  // uint32 data_version = 2;
  if (this->data_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_version());
  }

  // bool is_dirty = 4;
  if (this->is_dirty() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlockInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlockInfo)
    MergeFrom(*source);
  }
}

void BlockInfo::MergeFrom(const BlockInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlockInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bin_data().size() > 0) {

    bin_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bin_data_);
  }
  if (from.block_id() != 0) {
    set_block_id(from.block_id());
  }
  if (from.data_version() != 0) {
    set_data_version(from.data_version());
  }
  if (from.is_dirty() != 0) {
    set_is_dirty(from.is_dirty());
  }
}

void BlockInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockInfo::CopyFrom(const BlockInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlockInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockInfo::IsInitialized() const {
  return true;
}

void BlockInfo::Swap(BlockInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockInfo::InternalSwap(BlockInfo* other) {
  using std::swap;
  bin_data_.Swap(&other->bin_data_);
  swap(block_id_, other->block_id_);
  swap(data_version_, other->data_version_);
  swap(is_dirty_, other->is_dirty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockInfo::GetMetadata() const {
  protobuf_define_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_define_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockInfo

// uint32 block_id = 1;
void BlockInfo::clear_block_id() {
  block_id_ = 0u;
}
::google::protobuf::uint32 BlockInfo::block_id() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.block_id)
  return block_id_;
}
void BlockInfo::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.block_id)
}

// uint32 data_version = 2;
void BlockInfo::clear_data_version() {
  data_version_ = 0u;
}
::google::protobuf::uint32 BlockInfo::data_version() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.data_version)
  return data_version_;
}
void BlockInfo::set_data_version(::google::protobuf::uint32 value) {
  
  data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.data_version)
}

// bytes bin_data = 3;
void BlockInfo::clear_bin_data() {
  bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockInfo::bin_data() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.bin_data)
  return bin_data_.GetNoArena();
}
void BlockInfo::set_bin_data(const ::std::string& value) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.BlockInfo.bin_data)
}
#if LANG_CXX11
void BlockInfo::set_bin_data(::std::string&& value) {
  
  bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.BlockInfo.bin_data)
}
#endif
void BlockInfo::set_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.BlockInfo.bin_data)
}
void BlockInfo::set_bin_data(const void* value, size_t size) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.BlockInfo.bin_data)
}
::std::string* BlockInfo::mutable_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.BlockInfo.bin_data)
  return bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockInfo::release_bin_data() {
  // @@protoc_insertion_point(field_release:proto.BlockInfo.bin_data)
  
  return bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockInfo::set_allocated_bin_data(::std::string* bin_data) {
  if (bin_data != NULL) {
    
  } else {
    
  }
  bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.BlockInfo.bin_data)
}

// bool is_dirty = 4;
void BlockInfo::clear_is_dirty() {
  is_dirty_ = false;
}
bool BlockInfo::is_dirty() const {
  // @@protoc_insertion_point(field_get:proto.BlockInfo.is_dirty)
  return is_dirty_;
}
void BlockInfo::set_is_dirty(bool value) {
  
  is_dirty_ = value;
  // @@protoc_insertion_point(field_set:proto.BlockInfo.is_dirty)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
