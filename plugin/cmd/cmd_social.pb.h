// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_social.proto

#ifndef PROTOBUF_cmd_2fcmd_5fsocial_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fsocial_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AskAddFriendReq;
class AskAddFriendReqDefaultTypeInternal;
extern AskAddFriendReqDefaultTypeInternal _AskAddFriendReq_default_instance_;
class AskAddFriendRsp;
class AskAddFriendRspDefaultTypeInternal;
extern AskAddFriendRspDefaultTypeInternal _AskAddFriendRsp_default_instance_;
class DealAddFriendReq;
class DealAddFriendReqDefaultTypeInternal;
extern DealAddFriendReqDefaultTypeInternal _DealAddFriendReq_default_instance_;
class DealAddFriendRsp;
class DealAddFriendRspDefaultTypeInternal;
extern DealAddFriendRspDefaultTypeInternal _DealAddFriendRsp_default_instance_;
class DeleteFriendReq;
class DeleteFriendReqDefaultTypeInternal;
extern DeleteFriendReqDefaultTypeInternal _DeleteFriendReq_default_instance_;
class DeleteFriendRsp;
class DeleteFriendRspDefaultTypeInternal;
extern DeleteFriendRspDefaultTypeInternal _DeleteFriendRsp_default_instance_;
class FriendBrief;
class FriendBriefDefaultTypeInternal;
extern FriendBriefDefaultTypeInternal _FriendBrief_default_instance_;
class GetPlayerFriendListReq;
class GetPlayerFriendListReqDefaultTypeInternal;
extern GetPlayerFriendListReqDefaultTypeInternal _GetPlayerFriendListReq_default_instance_;
class GetPlayerFriendListRsp;
class GetPlayerFriendListRspDefaultTypeInternal;
extern GetPlayerFriendListRspDefaultTypeInternal _GetPlayerFriendListRsp_default_instance_;
class GetPlayerSocialDetailReq;
class GetPlayerSocialDetailReqDefaultTypeInternal;
extern GetPlayerSocialDetailReqDefaultTypeInternal _GetPlayerSocialDetailReq_default_instance_;
class GetPlayerSocialDetailRsp;
class GetPlayerSocialDetailRspDefaultTypeInternal;
extern GetPlayerSocialDetailRspDefaultTypeInternal _GetPlayerSocialDetailRsp_default_instance_;
class SetPlayerBirthdayReq;
class SetPlayerBirthdayReqDefaultTypeInternal;
extern SetPlayerBirthdayReqDefaultTypeInternal _SetPlayerBirthdayReq_default_instance_;
class SetPlayerBirthdayRsp;
class SetPlayerBirthdayRspDefaultTypeInternal;
extern SetPlayerBirthdayRspDefaultTypeInternal _SetPlayerBirthdayRsp_default_instance_;
class SetPlayerHeadImageReq;
class SetPlayerHeadImageReqDefaultTypeInternal;
extern SetPlayerHeadImageReqDefaultTypeInternal _SetPlayerHeadImageReq_default_instance_;
class SetPlayerHeadImageRsp;
class SetPlayerHeadImageRspDefaultTypeInternal;
extern SetPlayerHeadImageRspDefaultTypeInternal _SetPlayerHeadImageRsp_default_instance_;
class SetPlayerSignatureReq;
class SetPlayerSignatureReqDefaultTypeInternal;
extern SetPlayerSignatureReqDefaultTypeInternal _SetPlayerSignatureReq_default_instance_;
class SetPlayerSignatureRsp;
class SetPlayerSignatureRspDefaultTypeInternal;
extern SetPlayerSignatureRspDefaultTypeInternal _SetPlayerSignatureRsp_default_instance_;
class SocialDetail;
class SocialDetailDefaultTypeInternal;
extern SocialDetailDefaultTypeInternal _SocialDetail_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fsocial_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fsocial_2eproto

enum GetPlayerFriendListReq_CmdId {
  GetPlayerFriendListReq_CmdId_NONE = 0,
  GetPlayerFriendListReq_CmdId_CMD_ID = 4001,
  GetPlayerFriendListReq_CmdId_ENET_CHANNEL_ID = 0,
  GetPlayerFriendListReq_CmdId_ENET_IS_RELIABLE = 1,
  GetPlayerFriendListReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetPlayerFriendListReq_CmdId_GetPlayerFriendListReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetPlayerFriendListReq_CmdId_GetPlayerFriendListReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetPlayerFriendListReq_CmdId_IsValid(int value);
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq_CmdId_CmdId_MIN = GetPlayerFriendListReq_CmdId_NONE;
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq_CmdId_CmdId_MAX = GetPlayerFriendListReq_CmdId_CMD_ID;
const int GetPlayerFriendListReq_CmdId_CmdId_ARRAYSIZE = GetPlayerFriendListReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetPlayerFriendListReq_CmdId_descriptor();
inline const ::std::string& GetPlayerFriendListReq_CmdId_Name(GetPlayerFriendListReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetPlayerFriendListReq_CmdId_descriptor(), value);
}
inline bool GetPlayerFriendListReq_CmdId_Parse(
    const ::std::string& name, GetPlayerFriendListReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetPlayerFriendListReq_CmdId>(
    GetPlayerFriendListReq_CmdId_descriptor(), name, value);
}
enum GetPlayerFriendListRsp_CmdId {
  GetPlayerFriendListRsp_CmdId_NONE = 0,
  GetPlayerFriendListRsp_CmdId_CMD_ID = 4002,
  GetPlayerFriendListRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetPlayerFriendListRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetPlayerFriendListRsp_CmdId_IS_ALLOW_CLIENT = 1,
  GetPlayerFriendListRsp_CmdId_GetPlayerFriendListRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetPlayerFriendListRsp_CmdId_GetPlayerFriendListRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetPlayerFriendListRsp_CmdId_IsValid(int value);
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp_CmdId_CmdId_MIN = GetPlayerFriendListRsp_CmdId_NONE;
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp_CmdId_CmdId_MAX = GetPlayerFriendListRsp_CmdId_CMD_ID;
const int GetPlayerFriendListRsp_CmdId_CmdId_ARRAYSIZE = GetPlayerFriendListRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetPlayerFriendListRsp_CmdId_descriptor();
inline const ::std::string& GetPlayerFriendListRsp_CmdId_Name(GetPlayerFriendListRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetPlayerFriendListRsp_CmdId_descriptor(), value);
}
inline bool GetPlayerFriendListRsp_CmdId_Parse(
    const ::std::string& name, GetPlayerFriendListRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetPlayerFriendListRsp_CmdId>(
    GetPlayerFriendListRsp_CmdId_descriptor(), name, value);
}
enum AskAddFriendReq_CmdId {
  AskAddFriendReq_CmdId_NONE = 0,
  AskAddFriendReq_CmdId_CMD_ID = 4005,
  AskAddFriendReq_CmdId_ENET_CHANNEL_ID = 0,
  AskAddFriendReq_CmdId_ENET_IS_RELIABLE = 1,
  AskAddFriendReq_CmdId_IS_ALLOW_CLIENT = 1,
  AskAddFriendReq_CmdId_AskAddFriendReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AskAddFriendReq_CmdId_AskAddFriendReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AskAddFriendReq_CmdId_IsValid(int value);
const AskAddFriendReq_CmdId AskAddFriendReq_CmdId_CmdId_MIN = AskAddFriendReq_CmdId_NONE;
const AskAddFriendReq_CmdId AskAddFriendReq_CmdId_CmdId_MAX = AskAddFriendReq_CmdId_CMD_ID;
const int AskAddFriendReq_CmdId_CmdId_ARRAYSIZE = AskAddFriendReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AskAddFriendReq_CmdId_descriptor();
inline const ::std::string& AskAddFriendReq_CmdId_Name(AskAddFriendReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AskAddFriendReq_CmdId_descriptor(), value);
}
inline bool AskAddFriendReq_CmdId_Parse(
    const ::std::string& name, AskAddFriendReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AskAddFriendReq_CmdId>(
    AskAddFriendReq_CmdId_descriptor(), name, value);
}
enum AskAddFriendRsp_CmdId {
  AskAddFriendRsp_CmdId_NONE = 0,
  AskAddFriendRsp_CmdId_CMD_ID = 4006,
  AskAddFriendRsp_CmdId_ENET_CHANNEL_ID = 0,
  AskAddFriendRsp_CmdId_ENET_IS_RELIABLE = 1,
  AskAddFriendRsp_CmdId_IS_ALLOW_CLIENT = 1,
  AskAddFriendRsp_CmdId_AskAddFriendRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AskAddFriendRsp_CmdId_AskAddFriendRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AskAddFriendRsp_CmdId_IsValid(int value);
const AskAddFriendRsp_CmdId AskAddFriendRsp_CmdId_CmdId_MIN = AskAddFriendRsp_CmdId_NONE;
const AskAddFriendRsp_CmdId AskAddFriendRsp_CmdId_CmdId_MAX = AskAddFriendRsp_CmdId_CMD_ID;
const int AskAddFriendRsp_CmdId_CmdId_ARRAYSIZE = AskAddFriendRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AskAddFriendRsp_CmdId_descriptor();
inline const ::std::string& AskAddFriendRsp_CmdId_Name(AskAddFriendRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AskAddFriendRsp_CmdId_descriptor(), value);
}
inline bool AskAddFriendRsp_CmdId_Parse(
    const ::std::string& name, AskAddFriendRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AskAddFriendRsp_CmdId>(
    AskAddFriendRsp_CmdId_descriptor(), name, value);
}
enum DealAddFriendReq_CmdId {
  DealAddFriendReq_CmdId_NONE = 0,
  DealAddFriendReq_CmdId_CMD_ID = 4007,
  DealAddFriendReq_CmdId_ENET_CHANNEL_ID = 0,
  DealAddFriendReq_CmdId_ENET_IS_RELIABLE = 1,
  DealAddFriendReq_CmdId_IS_ALLOW_CLIENT = 1,
  DealAddFriendReq_CmdId_DealAddFriendReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DealAddFriendReq_CmdId_DealAddFriendReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DealAddFriendReq_CmdId_IsValid(int value);
const DealAddFriendReq_CmdId DealAddFriendReq_CmdId_CmdId_MIN = DealAddFriendReq_CmdId_NONE;
const DealAddFriendReq_CmdId DealAddFriendReq_CmdId_CmdId_MAX = DealAddFriendReq_CmdId_CMD_ID;
const int DealAddFriendReq_CmdId_CmdId_ARRAYSIZE = DealAddFriendReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DealAddFriendReq_CmdId_descriptor();
inline const ::std::string& DealAddFriendReq_CmdId_Name(DealAddFriendReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DealAddFriendReq_CmdId_descriptor(), value);
}
inline bool DealAddFriendReq_CmdId_Parse(
    const ::std::string& name, DealAddFriendReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DealAddFriendReq_CmdId>(
    DealAddFriendReq_CmdId_descriptor(), name, value);
}
enum DealAddFriendRsp_CmdId {
  DealAddFriendRsp_CmdId_NONE = 0,
  DealAddFriendRsp_CmdId_CMD_ID = 4008,
  DealAddFriendRsp_CmdId_ENET_CHANNEL_ID = 0,
  DealAddFriendRsp_CmdId_ENET_IS_RELIABLE = 1,
  DealAddFriendRsp_CmdId_IS_ALLOW_CLIENT = 1,
  DealAddFriendRsp_CmdId_DealAddFriendRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DealAddFriendRsp_CmdId_DealAddFriendRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DealAddFriendRsp_CmdId_IsValid(int value);
const DealAddFriendRsp_CmdId DealAddFriendRsp_CmdId_CmdId_MIN = DealAddFriendRsp_CmdId_NONE;
const DealAddFriendRsp_CmdId DealAddFriendRsp_CmdId_CmdId_MAX = DealAddFriendRsp_CmdId_CMD_ID;
const int DealAddFriendRsp_CmdId_CmdId_ARRAYSIZE = DealAddFriendRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DealAddFriendRsp_CmdId_descriptor();
inline const ::std::string& DealAddFriendRsp_CmdId_Name(DealAddFriendRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DealAddFriendRsp_CmdId_descriptor(), value);
}
inline bool DealAddFriendRsp_CmdId_Parse(
    const ::std::string& name, DealAddFriendRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DealAddFriendRsp_CmdId>(
    DealAddFriendRsp_CmdId_descriptor(), name, value);
}
enum GetPlayerSocialDetailReq_CmdId {
  GetPlayerSocialDetailReq_CmdId_NONE = 0,
  GetPlayerSocialDetailReq_CmdId_CMD_ID = 4009,
  GetPlayerSocialDetailReq_CmdId_ENET_CHANNEL_ID = 0,
  GetPlayerSocialDetailReq_CmdId_ENET_IS_RELIABLE = 1,
  GetPlayerSocialDetailReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetPlayerSocialDetailReq_CmdId_GetPlayerSocialDetailReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetPlayerSocialDetailReq_CmdId_GetPlayerSocialDetailReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetPlayerSocialDetailReq_CmdId_IsValid(int value);
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq_CmdId_CmdId_MIN = GetPlayerSocialDetailReq_CmdId_NONE;
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq_CmdId_CmdId_MAX = GetPlayerSocialDetailReq_CmdId_CMD_ID;
const int GetPlayerSocialDetailReq_CmdId_CmdId_ARRAYSIZE = GetPlayerSocialDetailReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetPlayerSocialDetailReq_CmdId_descriptor();
inline const ::std::string& GetPlayerSocialDetailReq_CmdId_Name(GetPlayerSocialDetailReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetPlayerSocialDetailReq_CmdId_descriptor(), value);
}
inline bool GetPlayerSocialDetailReq_CmdId_Parse(
    const ::std::string& name, GetPlayerSocialDetailReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetPlayerSocialDetailReq_CmdId>(
    GetPlayerSocialDetailReq_CmdId_descriptor(), name, value);
}
enum GetPlayerSocialDetailRsp_CmdId {
  GetPlayerSocialDetailRsp_CmdId_NONE = 0,
  GetPlayerSocialDetailRsp_CmdId_CMD_ID = 4010,
  GetPlayerSocialDetailRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetPlayerSocialDetailRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetPlayerSocialDetailRsp_CmdId_GetPlayerSocialDetailRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetPlayerSocialDetailRsp_CmdId_GetPlayerSocialDetailRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetPlayerSocialDetailRsp_CmdId_IsValid(int value);
const GetPlayerSocialDetailRsp_CmdId GetPlayerSocialDetailRsp_CmdId_CmdId_MIN = GetPlayerSocialDetailRsp_CmdId_NONE;
const GetPlayerSocialDetailRsp_CmdId GetPlayerSocialDetailRsp_CmdId_CmdId_MAX = GetPlayerSocialDetailRsp_CmdId_CMD_ID;
const int GetPlayerSocialDetailRsp_CmdId_CmdId_ARRAYSIZE = GetPlayerSocialDetailRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetPlayerSocialDetailRsp_CmdId_descriptor();
inline const ::std::string& GetPlayerSocialDetailRsp_CmdId_Name(GetPlayerSocialDetailRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetPlayerSocialDetailRsp_CmdId_descriptor(), value);
}
inline bool GetPlayerSocialDetailRsp_CmdId_Parse(
    const ::std::string& name, GetPlayerSocialDetailRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetPlayerSocialDetailRsp_CmdId>(
    GetPlayerSocialDetailRsp_CmdId_descriptor(), name, value);
}
enum DeleteFriendReq_CmdId {
  DeleteFriendReq_CmdId_NONE = 0,
  DeleteFriendReq_CmdId_CMD_ID = 4011,
  DeleteFriendReq_CmdId_ENET_CHANNEL_ID = 0,
  DeleteFriendReq_CmdId_ENET_IS_RELIABLE = 1,
  DeleteFriendReq_CmdId_IS_ALLOW_CLIENT = 1,
  DeleteFriendReq_CmdId_DeleteFriendReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeleteFriendReq_CmdId_DeleteFriendReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeleteFriendReq_CmdId_IsValid(int value);
const DeleteFriendReq_CmdId DeleteFriendReq_CmdId_CmdId_MIN = DeleteFriendReq_CmdId_NONE;
const DeleteFriendReq_CmdId DeleteFriendReq_CmdId_CmdId_MAX = DeleteFriendReq_CmdId_CMD_ID;
const int DeleteFriendReq_CmdId_CmdId_ARRAYSIZE = DeleteFriendReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeleteFriendReq_CmdId_descriptor();
inline const ::std::string& DeleteFriendReq_CmdId_Name(DeleteFriendReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeleteFriendReq_CmdId_descriptor(), value);
}
inline bool DeleteFriendReq_CmdId_Parse(
    const ::std::string& name, DeleteFriendReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeleteFriendReq_CmdId>(
    DeleteFriendReq_CmdId_descriptor(), name, value);
}
enum DeleteFriendRsp_CmdId {
  DeleteFriendRsp_CmdId_NONE = 0,
  DeleteFriendRsp_CmdId_CMD_ID = 4012,
  DeleteFriendRsp_CmdId_ENET_CHANNEL_ID = 0,
  DeleteFriendRsp_CmdId_ENET_IS_RELIABLE = 1,
  DeleteFriendRsp_CmdId_DeleteFriendRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DeleteFriendRsp_CmdId_DeleteFriendRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DeleteFriendRsp_CmdId_IsValid(int value);
const DeleteFriendRsp_CmdId DeleteFriendRsp_CmdId_CmdId_MIN = DeleteFriendRsp_CmdId_NONE;
const DeleteFriendRsp_CmdId DeleteFriendRsp_CmdId_CmdId_MAX = DeleteFriendRsp_CmdId_CMD_ID;
const int DeleteFriendRsp_CmdId_CmdId_ARRAYSIZE = DeleteFriendRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DeleteFriendRsp_CmdId_descriptor();
inline const ::std::string& DeleteFriendRsp_CmdId_Name(DeleteFriendRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DeleteFriendRsp_CmdId_descriptor(), value);
}
inline bool DeleteFriendRsp_CmdId_Parse(
    const ::std::string& name, DeleteFriendRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DeleteFriendRsp_CmdId>(
    DeleteFriendRsp_CmdId_descriptor(), name, value);
}
enum SetPlayerBirthdayReq_CmdId {
  SetPlayerBirthdayReq_CmdId_NONE = 0,
  SetPlayerBirthdayReq_CmdId_CMD_ID = 4013,
  SetPlayerBirthdayReq_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerBirthdayReq_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerBirthdayReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetPlayerBirthdayReq_CmdId_SetPlayerBirthdayReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerBirthdayReq_CmdId_SetPlayerBirthdayReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerBirthdayReq_CmdId_IsValid(int value);
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq_CmdId_CmdId_MIN = SetPlayerBirthdayReq_CmdId_NONE;
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq_CmdId_CmdId_MAX = SetPlayerBirthdayReq_CmdId_CMD_ID;
const int SetPlayerBirthdayReq_CmdId_CmdId_ARRAYSIZE = SetPlayerBirthdayReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerBirthdayReq_CmdId_descriptor();
inline const ::std::string& SetPlayerBirthdayReq_CmdId_Name(SetPlayerBirthdayReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerBirthdayReq_CmdId_descriptor(), value);
}
inline bool SetPlayerBirthdayReq_CmdId_Parse(
    const ::std::string& name, SetPlayerBirthdayReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerBirthdayReq_CmdId>(
    SetPlayerBirthdayReq_CmdId_descriptor(), name, value);
}
enum SetPlayerBirthdayRsp_CmdId {
  SetPlayerBirthdayRsp_CmdId_NONE = 0,
  SetPlayerBirthdayRsp_CmdId_CMD_ID = 4014,
  SetPlayerBirthdayRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerBirthdayRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerBirthdayRsp_CmdId_SetPlayerBirthdayRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerBirthdayRsp_CmdId_SetPlayerBirthdayRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerBirthdayRsp_CmdId_IsValid(int value);
const SetPlayerBirthdayRsp_CmdId SetPlayerBirthdayRsp_CmdId_CmdId_MIN = SetPlayerBirthdayRsp_CmdId_NONE;
const SetPlayerBirthdayRsp_CmdId SetPlayerBirthdayRsp_CmdId_CmdId_MAX = SetPlayerBirthdayRsp_CmdId_CMD_ID;
const int SetPlayerBirthdayRsp_CmdId_CmdId_ARRAYSIZE = SetPlayerBirthdayRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerBirthdayRsp_CmdId_descriptor();
inline const ::std::string& SetPlayerBirthdayRsp_CmdId_Name(SetPlayerBirthdayRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerBirthdayRsp_CmdId_descriptor(), value);
}
inline bool SetPlayerBirthdayRsp_CmdId_Parse(
    const ::std::string& name, SetPlayerBirthdayRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerBirthdayRsp_CmdId>(
    SetPlayerBirthdayRsp_CmdId_descriptor(), name, value);
}
enum SetPlayerSignatureReq_CmdId {
  SetPlayerSignatureReq_CmdId_NONE = 0,
  SetPlayerSignatureReq_CmdId_CMD_ID = 4015,
  SetPlayerSignatureReq_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerSignatureReq_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerSignatureReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetPlayerSignatureReq_CmdId_SetPlayerSignatureReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerSignatureReq_CmdId_SetPlayerSignatureReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerSignatureReq_CmdId_IsValid(int value);
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq_CmdId_CmdId_MIN = SetPlayerSignatureReq_CmdId_NONE;
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq_CmdId_CmdId_MAX = SetPlayerSignatureReq_CmdId_CMD_ID;
const int SetPlayerSignatureReq_CmdId_CmdId_ARRAYSIZE = SetPlayerSignatureReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerSignatureReq_CmdId_descriptor();
inline const ::std::string& SetPlayerSignatureReq_CmdId_Name(SetPlayerSignatureReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerSignatureReq_CmdId_descriptor(), value);
}
inline bool SetPlayerSignatureReq_CmdId_Parse(
    const ::std::string& name, SetPlayerSignatureReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerSignatureReq_CmdId>(
    SetPlayerSignatureReq_CmdId_descriptor(), name, value);
}
enum SetPlayerSignatureRsp_CmdId {
  SetPlayerSignatureRsp_CmdId_NONE = 0,
  SetPlayerSignatureRsp_CmdId_CMD_ID = 4016,
  SetPlayerSignatureRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerSignatureRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerSignatureRsp_CmdId_SetPlayerSignatureRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerSignatureRsp_CmdId_SetPlayerSignatureRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerSignatureRsp_CmdId_IsValid(int value);
const SetPlayerSignatureRsp_CmdId SetPlayerSignatureRsp_CmdId_CmdId_MIN = SetPlayerSignatureRsp_CmdId_NONE;
const SetPlayerSignatureRsp_CmdId SetPlayerSignatureRsp_CmdId_CmdId_MAX = SetPlayerSignatureRsp_CmdId_CMD_ID;
const int SetPlayerSignatureRsp_CmdId_CmdId_ARRAYSIZE = SetPlayerSignatureRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerSignatureRsp_CmdId_descriptor();
inline const ::std::string& SetPlayerSignatureRsp_CmdId_Name(SetPlayerSignatureRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerSignatureRsp_CmdId_descriptor(), value);
}
inline bool SetPlayerSignatureRsp_CmdId_Parse(
    const ::std::string& name, SetPlayerSignatureRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerSignatureRsp_CmdId>(
    SetPlayerSignatureRsp_CmdId_descriptor(), name, value);
}
enum SetPlayerHeadImageReq_CmdId {
  SetPlayerHeadImageReq_CmdId_NONE = 0,
  SetPlayerHeadImageReq_CmdId_CMD_ID = 4017,
  SetPlayerHeadImageReq_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerHeadImageReq_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerHeadImageReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetPlayerHeadImageReq_CmdId_SetPlayerHeadImageReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerHeadImageReq_CmdId_SetPlayerHeadImageReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerHeadImageReq_CmdId_IsValid(int value);
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq_CmdId_CmdId_MIN = SetPlayerHeadImageReq_CmdId_NONE;
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq_CmdId_CmdId_MAX = SetPlayerHeadImageReq_CmdId_CMD_ID;
const int SetPlayerHeadImageReq_CmdId_CmdId_ARRAYSIZE = SetPlayerHeadImageReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerHeadImageReq_CmdId_descriptor();
inline const ::std::string& SetPlayerHeadImageReq_CmdId_Name(SetPlayerHeadImageReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerHeadImageReq_CmdId_descriptor(), value);
}
inline bool SetPlayerHeadImageReq_CmdId_Parse(
    const ::std::string& name, SetPlayerHeadImageReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerHeadImageReq_CmdId>(
    SetPlayerHeadImageReq_CmdId_descriptor(), name, value);
}
enum SetPlayerHeadImageRsp_CmdId {
  SetPlayerHeadImageRsp_CmdId_NONE = 0,
  SetPlayerHeadImageRsp_CmdId_CMD_ID = 4018,
  SetPlayerHeadImageRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerHeadImageRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerHeadImageRsp_CmdId_SetPlayerHeadImageRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerHeadImageRsp_CmdId_SetPlayerHeadImageRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerHeadImageRsp_CmdId_IsValid(int value);
const SetPlayerHeadImageRsp_CmdId SetPlayerHeadImageRsp_CmdId_CmdId_MIN = SetPlayerHeadImageRsp_CmdId_NONE;
const SetPlayerHeadImageRsp_CmdId SetPlayerHeadImageRsp_CmdId_CmdId_MAX = SetPlayerHeadImageRsp_CmdId_CMD_ID;
const int SetPlayerHeadImageRsp_CmdId_CmdId_ARRAYSIZE = SetPlayerHeadImageRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerHeadImageRsp_CmdId_descriptor();
inline const ::std::string& SetPlayerHeadImageRsp_CmdId_Name(SetPlayerHeadImageRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerHeadImageRsp_CmdId_descriptor(), value);
}
inline bool SetPlayerHeadImageRsp_CmdId_Parse(
    const ::std::string& name, SetPlayerHeadImageRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerHeadImageRsp_CmdId>(
    SetPlayerHeadImageRsp_CmdId_descriptor(), name, value);
}
enum FriendOnlineState {
  FREIEND_DISCONNECT = 0,
  FRIEND_ONLINE = 1,
  FriendOnlineState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FriendOnlineState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FriendOnlineState_IsValid(int value);
const FriendOnlineState FriendOnlineState_MIN = FREIEND_DISCONNECT;
const FriendOnlineState FriendOnlineState_MAX = FRIEND_ONLINE;
const int FriendOnlineState_ARRAYSIZE = FriendOnlineState_MAX + 1;

const ::google::protobuf::EnumDescriptor* FriendOnlineState_descriptor();
inline const ::std::string& FriendOnlineState_Name(FriendOnlineState value) {
  return ::google::protobuf::internal::NameOfEnum(
    FriendOnlineState_descriptor(), value);
}
inline bool FriendOnlineState_Parse(
    const ::std::string& name, FriendOnlineState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FriendOnlineState>(
    FriendOnlineState_descriptor(), name, value);
}
enum DealAddFriendResultType {
  DEAL_ADD_FRIEND_REJECT = 0,
  DEAL_ADD_FRIEND_ACCEPT = 1,
  DealAddFriendResultType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DealAddFriendResultType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DealAddFriendResultType_IsValid(int value);
const DealAddFriendResultType DealAddFriendResultType_MIN = DEAL_ADD_FRIEND_REJECT;
const DealAddFriendResultType DealAddFriendResultType_MAX = DEAL_ADD_FRIEND_ACCEPT;
const int DealAddFriendResultType_ARRAYSIZE = DealAddFriendResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DealAddFriendResultType_descriptor();
inline const ::std::string& DealAddFriendResultType_Name(DealAddFriendResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DealAddFriendResultType_descriptor(), value);
}
inline bool DealAddFriendResultType_Parse(
    const ::std::string& name, DealAddFriendResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DealAddFriendResultType>(
    DealAddFriendResultType_descriptor(), name, value);
}
// ===================================================================

class SocialDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SocialDetail) */ {
 public:
  SocialDetail();
  virtual ~SocialDetail();

  SocialDetail(const SocialDetail& from);

  inline SocialDetail& operator=(const SocialDetail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SocialDetail(SocialDetail&& from) noexcept
    : SocialDetail() {
    *this = ::std::move(from);
  }

  inline SocialDetail& operator=(SocialDetail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SocialDetail& default_instance();

  static inline const SocialDetail* internal_default_instance() {
    return reinterpret_cast<const SocialDetail*>(
               &_SocialDetail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SocialDetail* other);
  friend void swap(SocialDetail& a, SocialDetail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SocialDetail* New() const PROTOBUF_FINAL { return New(NULL); }

  SocialDetail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SocialDetail& from);
  void MergeFrom(const SocialDetail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SocialDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 reserved_list = 8;
  int reserved_list_size() const;
  void clear_reserved_list();
  static const int kReservedListFieldNumber = 8;
  ::google::protobuf::uint32 reserved_list(int index) const;
  void set_reserved_list(int index, ::google::protobuf::uint32 value);
  void add_reserved_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reserved_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reserved_list();

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string signature = 5;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // .proto.Birthday birthday = 6;
  bool has_birthday() const;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 6;
  const ::proto::Birthday& birthday() const;
  ::proto::Birthday* mutable_birthday();
  ::proto::Birthday* release_birthday();
  void set_allocated_birthday(::proto::Birthday* birthday);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 avatar_id = 4;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 world_level = 7;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 7;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // .proto.FriendOnlineState online_state = 9;
  void clear_online_state();
  static const int kOnlineStateFieldNumber = 9;
  ::proto::FriendOnlineState online_state() const;
  void set_online_state(::proto::FriendOnlineState value);

  // bool is_friend = 10;
  void clear_is_friend();
  static const int kIsFriendFieldNumber = 10;
  bool is_friend() const;
  void set_is_friend(bool value);

  // @@protoc_insertion_point(class_scope:proto.SocialDetail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reserved_list_;
  mutable int _reserved_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::proto::Birthday* birthday_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 world_level_;
  int online_state_;
  bool is_friend_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FriendBrief : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FriendBrief) */ {
 public:
  FriendBrief();
  virtual ~FriendBrief();

  FriendBrief(const FriendBrief& from);

  inline FriendBrief& operator=(const FriendBrief& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FriendBrief(FriendBrief&& from) noexcept
    : FriendBrief() {
    *this = ::std::move(from);
  }

  inline FriendBrief& operator=(FriendBrief&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendBrief& default_instance();

  static inline const FriendBrief* internal_default_instance() {
    return reinterpret_cast<const FriendBrief*>(
               &_FriendBrief_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FriendBrief* other);
  friend void swap(FriendBrief& a, FriendBrief& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FriendBrief* New() const PROTOBUF_FINAL { return New(NULL); }

  FriendBrief* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FriendBrief& from);
  void MergeFrom(const FriendBrief& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FriendBrief* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string signature = 6;
  void clear_signature();
  static const int kSignatureFieldNumber = 6;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 avatar_id = 4;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 4;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 world_level = 5;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 5;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // .proto.FriendOnlineState online_state = 7;
  void clear_online_state();
  static const int kOnlineStateFieldNumber = 7;
  ::proto::FriendOnlineState online_state() const;
  void set_online_state(::proto::FriendOnlineState value);

  // uint32 param = 8;
  void clear_param();
  static const int kParamFieldNumber = 8;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FriendBrief)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 world_level_;
  int online_state_;
  ::google::protobuf::uint32 param_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerFriendListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerFriendListReq) */ {
 public:
  GetPlayerFriendListReq();
  virtual ~GetPlayerFriendListReq();

  GetPlayerFriendListReq(const GetPlayerFriendListReq& from);

  inline GetPlayerFriendListReq& operator=(const GetPlayerFriendListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerFriendListReq(GetPlayerFriendListReq&& from) noexcept
    : GetPlayerFriendListReq() {
    *this = ::std::move(from);
  }

  inline GetPlayerFriendListReq& operator=(GetPlayerFriendListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerFriendListReq& default_instance();

  static inline const GetPlayerFriendListReq* internal_default_instance() {
    return reinterpret_cast<const GetPlayerFriendListReq*>(
               &_GetPlayerFriendListReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GetPlayerFriendListReq* other);
  friend void swap(GetPlayerFriendListReq& a, GetPlayerFriendListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerFriendListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerFriendListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerFriendListReq& from);
  void MergeFrom(const GetPlayerFriendListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerFriendListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetPlayerFriendListReq_CmdId CmdId;
  static const CmdId NONE =
    GetPlayerFriendListReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetPlayerFriendListReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetPlayerFriendListReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetPlayerFriendListReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetPlayerFriendListReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetPlayerFriendListReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetPlayerFriendListReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetPlayerFriendListReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetPlayerFriendListReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetPlayerFriendListReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetPlayerFriendListReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetPlayerFriendListReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetPlayerFriendListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerFriendListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerFriendListRsp) */ {
 public:
  GetPlayerFriendListRsp();
  virtual ~GetPlayerFriendListRsp();

  GetPlayerFriendListRsp(const GetPlayerFriendListRsp& from);

  inline GetPlayerFriendListRsp& operator=(const GetPlayerFriendListRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerFriendListRsp(GetPlayerFriendListRsp&& from) noexcept
    : GetPlayerFriendListRsp() {
    *this = ::std::move(from);
  }

  inline GetPlayerFriendListRsp& operator=(GetPlayerFriendListRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerFriendListRsp& default_instance();

  static inline const GetPlayerFriendListRsp* internal_default_instance() {
    return reinterpret_cast<const GetPlayerFriendListRsp*>(
               &_GetPlayerFriendListRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GetPlayerFriendListRsp* other);
  friend void swap(GetPlayerFriendListRsp& a, GetPlayerFriendListRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerFriendListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerFriendListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerFriendListRsp& from);
  void MergeFrom(const GetPlayerFriendListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerFriendListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetPlayerFriendListRsp_CmdId CmdId;
  static const CmdId NONE =
    GetPlayerFriendListRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetPlayerFriendListRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetPlayerFriendListRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetPlayerFriendListRsp_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetPlayerFriendListRsp_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetPlayerFriendListRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetPlayerFriendListRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetPlayerFriendListRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetPlayerFriendListRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetPlayerFriendListRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetPlayerFriendListRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetPlayerFriendListRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.FriendBrief friend_list = 2;
  int friend_list_size() const;
  void clear_friend_list();
  static const int kFriendListFieldNumber = 2;
  const ::proto::FriendBrief& friend_list(int index) const;
  ::proto::FriendBrief* mutable_friend_list(int index);
  ::proto::FriendBrief* add_friend_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_friend_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      friend_list() const;

  // repeated .proto.FriendBrief ask_friend_list = 3;
  int ask_friend_list_size() const;
  void clear_ask_friend_list();
  static const int kAskFriendListFieldNumber = 3;
  const ::proto::FriendBrief& ask_friend_list(int index) const;
  ::proto::FriendBrief* mutable_ask_friend_list(int index);
  ::proto::FriendBrief* add_ask_friend_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
      mutable_ask_friend_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
      ask_friend_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerFriendListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > friend_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief > ask_friend_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AskAddFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AskAddFriendReq) */ {
 public:
  AskAddFriendReq();
  virtual ~AskAddFriendReq();

  AskAddFriendReq(const AskAddFriendReq& from);

  inline AskAddFriendReq& operator=(const AskAddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AskAddFriendReq(AskAddFriendReq&& from) noexcept
    : AskAddFriendReq() {
    *this = ::std::move(from);
  }

  inline AskAddFriendReq& operator=(AskAddFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAddFriendReq& default_instance();

  static inline const AskAddFriendReq* internal_default_instance() {
    return reinterpret_cast<const AskAddFriendReq*>(
               &_AskAddFriendReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(AskAddFriendReq* other);
  friend void swap(AskAddFriendReq& a, AskAddFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AskAddFriendReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AskAddFriendReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AskAddFriendReq& from);
  void MergeFrom(const AskAddFriendReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AskAddFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AskAddFriendReq_CmdId CmdId;
  static const CmdId NONE =
    AskAddFriendReq_CmdId_NONE;
  static const CmdId CMD_ID =
    AskAddFriendReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AskAddFriendReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AskAddFriendReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AskAddFriendReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AskAddFriendReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AskAddFriendReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AskAddFriendReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AskAddFriendReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AskAddFriendReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AskAddFriendReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AskAddFriendReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AskAddFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AskAddFriendRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AskAddFriendRsp) */ {
 public:
  AskAddFriendRsp();
  virtual ~AskAddFriendRsp();

  AskAddFriendRsp(const AskAddFriendRsp& from);

  inline AskAddFriendRsp& operator=(const AskAddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AskAddFriendRsp(AskAddFriendRsp&& from) noexcept
    : AskAddFriendRsp() {
    *this = ::std::move(from);
  }

  inline AskAddFriendRsp& operator=(AskAddFriendRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AskAddFriendRsp& default_instance();

  static inline const AskAddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const AskAddFriendRsp*>(
               &_AskAddFriendRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(AskAddFriendRsp* other);
  friend void swap(AskAddFriendRsp& a, AskAddFriendRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AskAddFriendRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AskAddFriendRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AskAddFriendRsp& from);
  void MergeFrom(const AskAddFriendRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AskAddFriendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AskAddFriendRsp_CmdId CmdId;
  static const CmdId NONE =
    AskAddFriendRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    AskAddFriendRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AskAddFriendRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AskAddFriendRsp_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AskAddFriendRsp_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AskAddFriendRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AskAddFriendRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AskAddFriendRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AskAddFriendRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AskAddFriendRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AskAddFriendRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AskAddFriendRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 2;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 2;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AskAddFriendRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DealAddFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DealAddFriendReq) */ {
 public:
  DealAddFriendReq();
  virtual ~DealAddFriendReq();

  DealAddFriendReq(const DealAddFriendReq& from);

  inline DealAddFriendReq& operator=(const DealAddFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DealAddFriendReq(DealAddFriendReq&& from) noexcept
    : DealAddFriendReq() {
    *this = ::std::move(from);
  }

  inline DealAddFriendReq& operator=(DealAddFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DealAddFriendReq& default_instance();

  static inline const DealAddFriendReq* internal_default_instance() {
    return reinterpret_cast<const DealAddFriendReq*>(
               &_DealAddFriendReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DealAddFriendReq* other);
  friend void swap(DealAddFriendReq& a, DealAddFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DealAddFriendReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DealAddFriendReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DealAddFriendReq& from);
  void MergeFrom(const DealAddFriendReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DealAddFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DealAddFriendReq_CmdId CmdId;
  static const CmdId NONE =
    DealAddFriendReq_CmdId_NONE;
  static const CmdId CMD_ID =
    DealAddFriendReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DealAddFriendReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DealAddFriendReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    DealAddFriendReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return DealAddFriendReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DealAddFriendReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DealAddFriendReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DealAddFriendReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DealAddFriendReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DealAddFriendReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DealAddFriendReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // .proto.DealAddFriendResultType deal_add_friend_result = 2;
  void clear_deal_add_friend_result();
  static const int kDealAddFriendResultFieldNumber = 2;
  ::proto::DealAddFriendResultType deal_add_friend_result() const;
  void set_deal_add_friend_result(::proto::DealAddFriendResultType value);

  // @@protoc_insertion_point(class_scope:proto.DealAddFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  int deal_add_friend_result_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DealAddFriendRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DealAddFriendRsp) */ {
 public:
  DealAddFriendRsp();
  virtual ~DealAddFriendRsp();

  DealAddFriendRsp(const DealAddFriendRsp& from);

  inline DealAddFriendRsp& operator=(const DealAddFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DealAddFriendRsp(DealAddFriendRsp&& from) noexcept
    : DealAddFriendRsp() {
    *this = ::std::move(from);
  }

  inline DealAddFriendRsp& operator=(DealAddFriendRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DealAddFriendRsp& default_instance();

  static inline const DealAddFriendRsp* internal_default_instance() {
    return reinterpret_cast<const DealAddFriendRsp*>(
               &_DealAddFriendRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DealAddFriendRsp* other);
  friend void swap(DealAddFriendRsp& a, DealAddFriendRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DealAddFriendRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DealAddFriendRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DealAddFriendRsp& from);
  void MergeFrom(const DealAddFriendRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DealAddFriendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DealAddFriendRsp_CmdId CmdId;
  static const CmdId NONE =
    DealAddFriendRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    DealAddFriendRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DealAddFriendRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DealAddFriendRsp_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    DealAddFriendRsp_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return DealAddFriendRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DealAddFriendRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DealAddFriendRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DealAddFriendRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DealAddFriendRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DealAddFriendRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DealAddFriendRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 2;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 2;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DealAddFriendRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerSocialDetailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerSocialDetailReq) */ {
 public:
  GetPlayerSocialDetailReq();
  virtual ~GetPlayerSocialDetailReq();

  GetPlayerSocialDetailReq(const GetPlayerSocialDetailReq& from);

  inline GetPlayerSocialDetailReq& operator=(const GetPlayerSocialDetailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerSocialDetailReq(GetPlayerSocialDetailReq&& from) noexcept
    : GetPlayerSocialDetailReq() {
    *this = ::std::move(from);
  }

  inline GetPlayerSocialDetailReq& operator=(GetPlayerSocialDetailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerSocialDetailReq& default_instance();

  static inline const GetPlayerSocialDetailReq* internal_default_instance() {
    return reinterpret_cast<const GetPlayerSocialDetailReq*>(
               &_GetPlayerSocialDetailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetPlayerSocialDetailReq* other);
  friend void swap(GetPlayerSocialDetailReq& a, GetPlayerSocialDetailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerSocialDetailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerSocialDetailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerSocialDetailReq& from);
  void MergeFrom(const GetPlayerSocialDetailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerSocialDetailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetPlayerSocialDetailReq_CmdId CmdId;
  static const CmdId NONE =
    GetPlayerSocialDetailReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetPlayerSocialDetailReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetPlayerSocialDetailReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetPlayerSocialDetailReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetPlayerSocialDetailReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetPlayerSocialDetailReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetPlayerSocialDetailReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetPlayerSocialDetailReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetPlayerSocialDetailReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetPlayerSocialDetailReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetPlayerSocialDetailReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetPlayerSocialDetailReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerSocialDetailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerSocialDetailRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerSocialDetailRsp) */ {
 public:
  GetPlayerSocialDetailRsp();
  virtual ~GetPlayerSocialDetailRsp();

  GetPlayerSocialDetailRsp(const GetPlayerSocialDetailRsp& from);

  inline GetPlayerSocialDetailRsp& operator=(const GetPlayerSocialDetailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerSocialDetailRsp(GetPlayerSocialDetailRsp&& from) noexcept
    : GetPlayerSocialDetailRsp() {
    *this = ::std::move(from);
  }

  inline GetPlayerSocialDetailRsp& operator=(GetPlayerSocialDetailRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerSocialDetailRsp& default_instance();

  static inline const GetPlayerSocialDetailRsp* internal_default_instance() {
    return reinterpret_cast<const GetPlayerSocialDetailRsp*>(
               &_GetPlayerSocialDetailRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetPlayerSocialDetailRsp* other);
  friend void swap(GetPlayerSocialDetailRsp& a, GetPlayerSocialDetailRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerSocialDetailRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerSocialDetailRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerSocialDetailRsp& from);
  void MergeFrom(const GetPlayerSocialDetailRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerSocialDetailRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetPlayerSocialDetailRsp_CmdId CmdId;
  static const CmdId NONE =
    GetPlayerSocialDetailRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetPlayerSocialDetailRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetPlayerSocialDetailRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetPlayerSocialDetailRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetPlayerSocialDetailRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetPlayerSocialDetailRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetPlayerSocialDetailRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetPlayerSocialDetailRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetPlayerSocialDetailRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetPlayerSocialDetailRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetPlayerSocialDetailRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.SocialDetail detail_data = 2;
  bool has_detail_data() const;
  void clear_detail_data();
  static const int kDetailDataFieldNumber = 2;
  const ::proto::SocialDetail& detail_data() const;
  ::proto::SocialDetail* mutable_detail_data();
  ::proto::SocialDetail* release_detail_data();
  void set_allocated_detail_data(::proto::SocialDetail* detail_data);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerSocialDetailRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::SocialDetail* detail_data_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFriendReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeleteFriendReq) */ {
 public:
  DeleteFriendReq();
  virtual ~DeleteFriendReq();

  DeleteFriendReq(const DeleteFriendReq& from);

  inline DeleteFriendReq& operator=(const DeleteFriendReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteFriendReq(DeleteFriendReq&& from) noexcept
    : DeleteFriendReq() {
    *this = ::std::move(from);
  }

  inline DeleteFriendReq& operator=(DeleteFriendReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendReq& default_instance();

  static inline const DeleteFriendReq* internal_default_instance() {
    return reinterpret_cast<const DeleteFriendReq*>(
               &_DeleteFriendReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(DeleteFriendReq* other);
  friend void swap(DeleteFriendReq& a, DeleteFriendReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteFriendReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteFriendReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteFriendReq& from);
  void MergeFrom(const DeleteFriendReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteFriendReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DeleteFriendReq_CmdId CmdId;
  static const CmdId NONE =
    DeleteFriendReq_CmdId_NONE;
  static const CmdId CMD_ID =
    DeleteFriendReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DeleteFriendReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DeleteFriendReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    DeleteFriendReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return DeleteFriendReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DeleteFriendReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DeleteFriendReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DeleteFriendReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DeleteFriendReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DeleteFriendReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DeleteFriendReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeleteFriendReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteFriendRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeleteFriendRsp) */ {
 public:
  DeleteFriendRsp();
  virtual ~DeleteFriendRsp();

  DeleteFriendRsp(const DeleteFriendRsp& from);

  inline DeleteFriendRsp& operator=(const DeleteFriendRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteFriendRsp(DeleteFriendRsp&& from) noexcept
    : DeleteFriendRsp() {
    *this = ::std::move(from);
  }

  inline DeleteFriendRsp& operator=(DeleteFriendRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteFriendRsp& default_instance();

  static inline const DeleteFriendRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteFriendRsp*>(
               &_DeleteFriendRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(DeleteFriendRsp* other);
  friend void swap(DeleteFriendRsp& a, DeleteFriendRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteFriendRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteFriendRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteFriendRsp& from);
  void MergeFrom(const DeleteFriendRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteFriendRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DeleteFriendRsp_CmdId CmdId;
  static const CmdId NONE =
    DeleteFriendRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    DeleteFriendRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DeleteFriendRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DeleteFriendRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DeleteFriendRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DeleteFriendRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DeleteFriendRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DeleteFriendRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DeleteFriendRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DeleteFriendRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DeleteFriendRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 2;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 2;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeleteFriendRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerBirthdayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerBirthdayReq) */ {
 public:
  SetPlayerBirthdayReq();
  virtual ~SetPlayerBirthdayReq();

  SetPlayerBirthdayReq(const SetPlayerBirthdayReq& from);

  inline SetPlayerBirthdayReq& operator=(const SetPlayerBirthdayReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerBirthdayReq(SetPlayerBirthdayReq&& from) noexcept
    : SetPlayerBirthdayReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerBirthdayReq& operator=(SetPlayerBirthdayReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerBirthdayReq& default_instance();

  static inline const SetPlayerBirthdayReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerBirthdayReq*>(
               &_SetPlayerBirthdayReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SetPlayerBirthdayReq* other);
  friend void swap(SetPlayerBirthdayReq& a, SetPlayerBirthdayReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerBirthdayReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerBirthdayReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerBirthdayReq& from);
  void MergeFrom(const SetPlayerBirthdayReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerBirthdayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerBirthdayReq_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerBirthdayReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerBirthdayReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerBirthdayReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerBirthdayReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetPlayerBirthdayReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerBirthdayReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerBirthdayReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerBirthdayReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerBirthdayReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerBirthdayReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerBirthdayReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerBirthdayReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Birthday birthday = 1;
  bool has_birthday() const;
  void clear_birthday();
  static const int kBirthdayFieldNumber = 1;
  const ::proto::Birthday& birthday() const;
  ::proto::Birthday* mutable_birthday();
  ::proto::Birthday* release_birthday();
  void set_allocated_birthday(::proto::Birthday* birthday);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerBirthdayReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Birthday* birthday_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerBirthdayRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerBirthdayRsp) */ {
 public:
  SetPlayerBirthdayRsp();
  virtual ~SetPlayerBirthdayRsp();

  SetPlayerBirthdayRsp(const SetPlayerBirthdayRsp& from);

  inline SetPlayerBirthdayRsp& operator=(const SetPlayerBirthdayRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerBirthdayRsp(SetPlayerBirthdayRsp&& from) noexcept
    : SetPlayerBirthdayRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerBirthdayRsp& operator=(SetPlayerBirthdayRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerBirthdayRsp& default_instance();

  static inline const SetPlayerBirthdayRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerBirthdayRsp*>(
               &_SetPlayerBirthdayRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SetPlayerBirthdayRsp* other);
  friend void swap(SetPlayerBirthdayRsp& a, SetPlayerBirthdayRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerBirthdayRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerBirthdayRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerBirthdayRsp& from);
  void MergeFrom(const SetPlayerBirthdayRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerBirthdayRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerBirthdayRsp_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerBirthdayRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerBirthdayRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerBirthdayRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerBirthdayRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerBirthdayRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerBirthdayRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerBirthdayRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerBirthdayRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerBirthdayRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerBirthdayRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerBirthdayRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerBirthdayRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerSignatureReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerSignatureReq) */ {
 public:
  SetPlayerSignatureReq();
  virtual ~SetPlayerSignatureReq();

  SetPlayerSignatureReq(const SetPlayerSignatureReq& from);

  inline SetPlayerSignatureReq& operator=(const SetPlayerSignatureReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerSignatureReq(SetPlayerSignatureReq&& from) noexcept
    : SetPlayerSignatureReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerSignatureReq& operator=(SetPlayerSignatureReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerSignatureReq& default_instance();

  static inline const SetPlayerSignatureReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerSignatureReq*>(
               &_SetPlayerSignatureReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SetPlayerSignatureReq* other);
  friend void swap(SetPlayerSignatureReq& a, SetPlayerSignatureReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerSignatureReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerSignatureReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerSignatureReq& from);
  void MergeFrom(const SetPlayerSignatureReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerSignatureReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerSignatureReq_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerSignatureReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerSignatureReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerSignatureReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerSignatureReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetPlayerSignatureReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerSignatureReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerSignatureReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerSignatureReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerSignatureReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerSignatureReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerSignatureReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerSignatureReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerSignatureReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerSignatureRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerSignatureRsp) */ {
 public:
  SetPlayerSignatureRsp();
  virtual ~SetPlayerSignatureRsp();

  SetPlayerSignatureRsp(const SetPlayerSignatureRsp& from);

  inline SetPlayerSignatureRsp& operator=(const SetPlayerSignatureRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerSignatureRsp(SetPlayerSignatureRsp&& from) noexcept
    : SetPlayerSignatureRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerSignatureRsp& operator=(SetPlayerSignatureRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerSignatureRsp& default_instance();

  static inline const SetPlayerSignatureRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerSignatureRsp*>(
               &_SetPlayerSignatureRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(SetPlayerSignatureRsp* other);
  friend void swap(SetPlayerSignatureRsp& a, SetPlayerSignatureRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerSignatureRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerSignatureRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerSignatureRsp& from);
  void MergeFrom(const SetPlayerSignatureRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerSignatureRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerSignatureRsp_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerSignatureRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerSignatureRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerSignatureRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerSignatureRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerSignatureRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerSignatureRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerSignatureRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerSignatureRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerSignatureRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerSignatureRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerSignatureRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerSignatureRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerHeadImageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerHeadImageReq) */ {
 public:
  SetPlayerHeadImageReq();
  virtual ~SetPlayerHeadImageReq();

  SetPlayerHeadImageReq(const SetPlayerHeadImageReq& from);

  inline SetPlayerHeadImageReq& operator=(const SetPlayerHeadImageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerHeadImageReq(SetPlayerHeadImageReq&& from) noexcept
    : SetPlayerHeadImageReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerHeadImageReq& operator=(SetPlayerHeadImageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerHeadImageReq& default_instance();

  static inline const SetPlayerHeadImageReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerHeadImageReq*>(
               &_SetPlayerHeadImageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(SetPlayerHeadImageReq* other);
  friend void swap(SetPlayerHeadImageReq& a, SetPlayerHeadImageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerHeadImageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerHeadImageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerHeadImageReq& from);
  void MergeFrom(const SetPlayerHeadImageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerHeadImageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerHeadImageReq_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerHeadImageReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerHeadImageReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerHeadImageReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerHeadImageReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetPlayerHeadImageReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerHeadImageReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerHeadImageReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerHeadImageReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerHeadImageReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerHeadImageReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerHeadImageReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerHeadImageReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerHeadImageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerHeadImageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerHeadImageRsp) */ {
 public:
  SetPlayerHeadImageRsp();
  virtual ~SetPlayerHeadImageRsp();

  SetPlayerHeadImageRsp(const SetPlayerHeadImageRsp& from);

  inline SetPlayerHeadImageRsp& operator=(const SetPlayerHeadImageRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerHeadImageRsp(SetPlayerHeadImageRsp&& from) noexcept
    : SetPlayerHeadImageRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerHeadImageRsp& operator=(SetPlayerHeadImageRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerHeadImageRsp& default_instance();

  static inline const SetPlayerHeadImageRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerHeadImageRsp*>(
               &_SetPlayerHeadImageRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SetPlayerHeadImageRsp* other);
  friend void swap(SetPlayerHeadImageRsp& a, SetPlayerHeadImageRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerHeadImageRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerHeadImageRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerHeadImageRsp& from);
  void MergeFrom(const SetPlayerHeadImageRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerHeadImageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerHeadImageRsp_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerHeadImageRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerHeadImageRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerHeadImageRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerHeadImageRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerHeadImageRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerHeadImageRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerHeadImageRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerHeadImageRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerHeadImageRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerHeadImageRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerHeadImageRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerHeadImageRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsocial_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SocialDetail

// uint32 uid = 1;
inline void SocialDetail::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::uid() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.uid)
  return uid_;
}
inline void SocialDetail::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.uid)
}

// string nickname = 2;
inline void SocialDetail::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SocialDetail::nickname() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.nickname)
  return nickname_.GetNoArena();
}
inline void SocialDetail::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.nickname)
}
#if LANG_CXX11
inline void SocialDetail::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.nickname)
}
#endif
inline void SocialDetail::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.nickname)
}
inline void SocialDetail::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.nickname)
}
inline ::std::string* SocialDetail::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SocialDetail::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SocialDetail::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.nickname)
}

// uint32 level = 3;
inline void SocialDetail::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::level() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.level)
  return level_;
}
inline void SocialDetail::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.level)
}

// uint32 avatar_id = 4;
inline void SocialDetail::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.avatar_id)
  return avatar_id_;
}
inline void SocialDetail::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.avatar_id)
}

// string signature = 5;
inline void SocialDetail::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SocialDetail::signature() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.signature)
  return signature_.GetNoArena();
}
inline void SocialDetail::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.signature)
}
#if LANG_CXX11
inline void SocialDetail::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.signature)
}
#endif
inline void SocialDetail::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.signature)
}
inline void SocialDetail::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.signature)
}
inline ::std::string* SocialDetail::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SocialDetail::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SocialDetail::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.signature)
}

// .proto.Birthday birthday = 6;
inline bool SocialDetail::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
inline void SocialDetail::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
inline const ::proto::Birthday& SocialDetail::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SocialDetail.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
inline ::proto::Birthday* SocialDetail::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.birthday)
  return birthday_;
}
inline ::proto::Birthday* SocialDetail::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
inline void SocialDetail::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.birthday)
}

// uint32 world_level = 7;
inline void SocialDetail::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 SocialDetail::world_level() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.world_level)
  return world_level_;
}
inline void SocialDetail::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.world_level)
}

// repeated uint32 reserved_list = 8;
inline int SocialDetail::reserved_list_size() const {
  return reserved_list_.size();
}
inline void SocialDetail::clear_reserved_list() {
  reserved_list_.Clear();
}
inline ::google::protobuf::uint32 SocialDetail::reserved_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.reserved_list)
  return reserved_list_.Get(index);
}
inline void SocialDetail::set_reserved_list(int index, ::google::protobuf::uint32 value) {
  reserved_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.reserved_list)
}
inline void SocialDetail::add_reserved_list(::google::protobuf::uint32 value) {
  reserved_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SocialDetail.reserved_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SocialDetail::reserved_list() const {
  // @@protoc_insertion_point(field_list:proto.SocialDetail.reserved_list)
  return reserved_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SocialDetail::mutable_reserved_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SocialDetail.reserved_list)
  return &reserved_list_;
}

// .proto.FriendOnlineState online_state = 9;
inline void SocialDetail::clear_online_state() {
  online_state_ = 0;
}
inline ::proto::FriendOnlineState SocialDetail::online_state() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.online_state)
  return static_cast< ::proto::FriendOnlineState >(online_state_);
}
inline void SocialDetail::set_online_state(::proto::FriendOnlineState value) {
  
  online_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.online_state)
}

// bool is_friend = 10;
inline void SocialDetail::clear_is_friend() {
  is_friend_ = false;
}
inline bool SocialDetail::is_friend() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_friend)
  return is_friend_;
}
inline void SocialDetail::set_is_friend(bool value) {
  
  is_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_friend)
}

// -------------------------------------------------------------------

// FriendBrief

// uint32 uid = 1;
inline void FriendBrief::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::uid() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.uid)
  return uid_;
}
inline void FriendBrief::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.uid)
}

// string nickname = 2;
inline void FriendBrief::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendBrief::nickname() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.nickname)
  return nickname_.GetNoArena();
}
inline void FriendBrief::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.nickname)
}
#if LANG_CXX11
inline void FriendBrief::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.nickname)
}
#endif
inline void FriendBrief::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.nickname)
}
inline void FriendBrief::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.nickname)
}
inline ::std::string* FriendBrief::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendBrief::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendBrief::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.nickname)
}

// uint32 level = 3;
inline void FriendBrief::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::level() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.level)
  return level_;
}
inline void FriendBrief::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.level)
}

// uint32 avatar_id = 4;
inline void FriendBrief::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.avatar_id)
  return avatar_id_;
}
inline void FriendBrief::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.avatar_id)
}

// uint32 world_level = 5;
inline void FriendBrief::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::world_level() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.world_level)
  return world_level_;
}
inline void FriendBrief::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.world_level)
}

// string signature = 6;
inline void FriendBrief::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendBrief::signature() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.signature)
  return signature_.GetNoArena();
}
inline void FriendBrief::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.signature)
}
#if LANG_CXX11
inline void FriendBrief::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.signature)
}
#endif
inline void FriendBrief::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.signature)
}
inline void FriendBrief::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.signature)
}
inline ::std::string* FriendBrief::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendBrief::release_signature() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendBrief::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.signature)
}

// .proto.FriendOnlineState online_state = 7;
inline void FriendBrief::clear_online_state() {
  online_state_ = 0;
}
inline ::proto::FriendOnlineState FriendBrief::online_state() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.online_state)
  return static_cast< ::proto::FriendOnlineState >(online_state_);
}
inline void FriendBrief::set_online_state(::proto::FriendOnlineState value) {
  
  online_state_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.online_state)
}

// uint32 param = 8;
inline void FriendBrief::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 FriendBrief::param() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.param)
  return param_;
}
inline void FriendBrief::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.param)
}

// -------------------------------------------------------------------

// GetPlayerFriendListReq

// -------------------------------------------------------------------

// GetPlayerFriendListRsp

// int32 retcode = 1;
inline void GetPlayerFriendListRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetPlayerFriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.retcode)
  return retcode_;
}
inline void GetPlayerFriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerFriendListRsp.retcode)
}

// repeated .proto.FriendBrief friend_list = 2;
inline int GetPlayerFriendListRsp::friend_list_size() const {
  return friend_list_.size();
}
inline void GetPlayerFriendListRsp::clear_friend_list() {
  friend_list_.Clear();
}
inline const ::proto::FriendBrief& GetPlayerFriendListRsp::friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Get(index);
}
inline ::proto::FriendBrief* GetPlayerFriendListRsp::mutable_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Mutable(index);
}
inline ::proto::FriendBrief* GetPlayerFriendListRsp::add_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerFriendListRsp::mutable_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerFriendListRsp.friend_list)
  return &friend_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerFriendListRsp::friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_;
}

// repeated .proto.FriendBrief ask_friend_list = 3;
inline int GetPlayerFriendListRsp::ask_friend_list_size() const {
  return ask_friend_list_.size();
}
inline void GetPlayerFriendListRsp::clear_ask_friend_list() {
  ask_friend_list_.Clear();
}
inline const ::proto::FriendBrief& GetPlayerFriendListRsp::ask_friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Get(index);
}
inline ::proto::FriendBrief* GetPlayerFriendListRsp::mutable_ask_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Mutable(index);
}
inline ::proto::FriendBrief* GetPlayerFriendListRsp::add_ask_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerFriendListRsp::mutable_ask_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerFriendListRsp.ask_friend_list)
  return &ask_friend_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerFriendListRsp::ask_friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_;
}

// -------------------------------------------------------------------

// AskAddFriendReq

// uint32 target_uid = 1;
inline void AskAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AskAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendReq.target_uid)
  return target_uid_;
}
inline void AskAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendReq.target_uid)
}

// -------------------------------------------------------------------

// AskAddFriendRsp

// int32 retcode = 1;
inline void AskAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AskAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.retcode)
  return retcode_;
}
inline void AskAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.retcode)
}

// uint32 target_uid = 2;
inline void AskAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AskAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.target_uid)
  return target_uid_;
}
inline void AskAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.target_uid)
}

// -------------------------------------------------------------------

// DealAddFriendReq

// uint32 target_uid = 1;
inline void DealAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DealAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendReq.target_uid)
  return target_uid_;
}
inline void DealAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendReq.target_uid)
}

// .proto.DealAddFriendResultType deal_add_friend_result = 2;
inline void DealAddFriendReq::clear_deal_add_friend_result() {
  deal_add_friend_result_ = 0;
}
inline ::proto::DealAddFriendResultType DealAddFriendReq::deal_add_friend_result() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendReq.deal_add_friend_result)
  return static_cast< ::proto::DealAddFriendResultType >(deal_add_friend_result_);
}
inline void DealAddFriendReq::set_deal_add_friend_result(::proto::DealAddFriendResultType value) {
  
  deal_add_friend_result_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendReq.deal_add_friend_result)
}

// -------------------------------------------------------------------

// DealAddFriendRsp

// int32 retcode = 1;
inline void DealAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 DealAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.retcode)
  return retcode_;
}
inline void DealAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.retcode)
}

// uint32 target_uid = 2;
inline void DealAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DealAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.target_uid)
  return target_uid_;
}
inline void DealAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.target_uid)
}

// -------------------------------------------------------------------

// GetPlayerSocialDetailReq

// uint32 uid = 1;
inline void GetPlayerSocialDetailReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerSocialDetailReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailReq.uid)
  return uid_;
}
inline void GetPlayerSocialDetailReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerSocialDetailReq.uid)
}

// -------------------------------------------------------------------

// GetPlayerSocialDetailRsp

// int32 retcode = 1;
inline void GetPlayerSocialDetailRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetPlayerSocialDetailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailRsp.retcode)
  return retcode_;
}
inline void GetPlayerSocialDetailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerSocialDetailRsp.retcode)
}

// .proto.SocialDetail detail_data = 2;
inline bool GetPlayerSocialDetailRsp::has_detail_data() const {
  return this != internal_default_instance() && detail_data_ != NULL;
}
inline void GetPlayerSocialDetailRsp::clear_detail_data() {
  if (GetArenaNoVirtual() == NULL && detail_data_ != NULL) delete detail_data_;
  detail_data_ = NULL;
}
inline const ::proto::SocialDetail& GetPlayerSocialDetailRsp::detail_data() const {
  const ::proto::SocialDetail* p = detail_data_;
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailRsp.detail_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SocialDetail*>(
      &::proto::_SocialDetail_default_instance_);
}
inline ::proto::SocialDetail* GetPlayerSocialDetailRsp::mutable_detail_data() {
  
  if (detail_data_ == NULL) {
    detail_data_ = new ::proto::SocialDetail;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerSocialDetailRsp.detail_data)
  return detail_data_;
}
inline ::proto::SocialDetail* GetPlayerSocialDetailRsp::release_detail_data() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerSocialDetailRsp.detail_data)
  
  ::proto::SocialDetail* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
inline void GetPlayerSocialDetailRsp::set_allocated_detail_data(::proto::SocialDetail* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerSocialDetailRsp.detail_data)
}

// -------------------------------------------------------------------

// DeleteFriendReq

// uint32 target_uid = 1;
inline void DeleteFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DeleteFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendReq.target_uid)
  return target_uid_;
}
inline void DeleteFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendReq.target_uid)
}

// -------------------------------------------------------------------

// DeleteFriendRsp

// int32 retcode = 1;
inline void DeleteFriendRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 DeleteFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendRsp.retcode)
  return retcode_;
}
inline void DeleteFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendRsp.retcode)
}

// uint32 target_uid = 2;
inline void DeleteFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DeleteFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendRsp.target_uid)
  return target_uid_;
}
inline void DeleteFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendRsp.target_uid)
}

// -------------------------------------------------------------------

// SetPlayerBirthdayReq

// .proto.Birthday birthday = 1;
inline bool SetPlayerBirthdayReq::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
inline void SetPlayerBirthdayReq::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
inline const ::proto::Birthday& SetPlayerBirthdayReq::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayReq.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
inline ::proto::Birthday* SetPlayerBirthdayReq::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBirthdayReq.birthday)
  return birthday_;
}
inline ::proto::Birthday* SetPlayerBirthdayReq::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBirthdayReq.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
inline void SetPlayerBirthdayReq::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBirthdayReq.birthday)
}

// -------------------------------------------------------------------

// SetPlayerBirthdayRsp

// int32 retcode = 1;
inline void SetPlayerBirthdayRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerBirthdayRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayRsp.retcode)
  return retcode_;
}
inline void SetPlayerBirthdayRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBirthdayRsp.retcode)
}

// -------------------------------------------------------------------

// SetPlayerSignatureReq

// string signature = 1;
inline void SetPlayerSignatureReq::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerSignatureReq::signature() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureReq.signature)
  return signature_.GetNoArena();
}
inline void SetPlayerSignatureReq::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureReq.signature)
}
#if LANG_CXX11
inline void SetPlayerSignatureReq::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerSignatureReq.signature)
}
#endif
inline void SetPlayerSignatureReq::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerSignatureReq.signature)
}
inline void SetPlayerSignatureReq::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerSignatureReq.signature)
}
inline ::std::string* SetPlayerSignatureReq::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerSignatureReq.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerSignatureReq::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerSignatureReq.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerSignatureReq::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerSignatureReq.signature)
}

// -------------------------------------------------------------------

// SetPlayerSignatureRsp

// int32 retcode = 1;
inline void SetPlayerSignatureRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerSignatureRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureRsp.retcode)
  return retcode_;
}
inline void SetPlayerSignatureRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureRsp.retcode)
}

// -------------------------------------------------------------------

// SetPlayerHeadImageReq

// uint32 avatar_id = 1;
inline void SetPlayerHeadImageReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SetPlayerHeadImageReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageReq.avatar_id)
  return avatar_id_;
}
inline void SetPlayerHeadImageReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageReq.avatar_id)
}

// -------------------------------------------------------------------

// SetPlayerHeadImageRsp

// int32 retcode = 1;
inline void SetPlayerHeadImageRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerHeadImageRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageRsp.retcode)
  return retcode_;
}
inline void SetPlayerHeadImageRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageRsp.retcode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GetPlayerFriendListReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetPlayerFriendListReq_CmdId>() {
  return ::proto::GetPlayerFriendListReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetPlayerFriendListRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetPlayerFriendListRsp_CmdId>() {
  return ::proto::GetPlayerFriendListRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AskAddFriendReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AskAddFriendReq_CmdId>() {
  return ::proto::AskAddFriendReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AskAddFriendRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AskAddFriendRsp_CmdId>() {
  return ::proto::AskAddFriendRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DealAddFriendReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DealAddFriendReq_CmdId>() {
  return ::proto::DealAddFriendReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DealAddFriendRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DealAddFriendRsp_CmdId>() {
  return ::proto::DealAddFriendRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetPlayerSocialDetailReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetPlayerSocialDetailReq_CmdId>() {
  return ::proto::GetPlayerSocialDetailReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetPlayerSocialDetailRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetPlayerSocialDetailRsp_CmdId>() {
  return ::proto::GetPlayerSocialDetailRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DeleteFriendReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DeleteFriendReq_CmdId>() {
  return ::proto::DeleteFriendReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DeleteFriendRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DeleteFriendRsp_CmdId>() {
  return ::proto::DeleteFriendRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerBirthdayReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerBirthdayReq_CmdId>() {
  return ::proto::SetPlayerBirthdayReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerBirthdayRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerBirthdayRsp_CmdId>() {
  return ::proto::SetPlayerBirthdayRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerSignatureReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerSignatureReq_CmdId>() {
  return ::proto::SetPlayerSignatureReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerSignatureRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerSignatureRsp_CmdId>() {
  return ::proto::SetPlayerSignatureRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerHeadImageReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerHeadImageReq_CmdId>() {
  return ::proto::SetPlayerHeadImageReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerHeadImageRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerHeadImageRsp_CmdId>() {
  return ::proto::SetPlayerHeadImageRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::FriendOnlineState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FriendOnlineState>() {
  return ::proto::FriendOnlineState_descriptor();
}
template <> struct is_proto_enum< ::proto::DealAddFriendResultType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DealAddFriendResultType>() {
  return ::proto::DealAddFriendResultType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fsocial_2eproto__INCLUDED
