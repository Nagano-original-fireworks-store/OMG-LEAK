// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_fight.proto

#ifndef PROTOBUF_cmd_2fcmd_5ffight_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5ffight_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AbilityArgument;
class AbilityArgumentDefaultTypeInternal;
extern AbilityArgumentDefaultTypeInternal _AbilityArgument_default_instance_;
class AbilityIdentifier;
class AbilityIdentifierDefaultTypeInternal;
extern AbilityIdentifierDefaultTypeInternal _AbilityIdentifier_default_instance_;
class AiSkillCdInfo;
class AiSkillCdInfoDefaultTypeInternal;
extern AiSkillCdInfoDefaultTypeInternal _AiSkillCdInfo_default_instance_;
class AiSkillCdInfo_SkillCdMapEntry;
class AiSkillCdInfo_SkillCdMapEntryDefaultTypeInternal;
extern AiSkillCdInfo_SkillCdMapEntryDefaultTypeInternal _AiSkillCdInfo_SkillCdMapEntry_default_instance_;
class AiThreatInfo;
class AiThreatInfoDefaultTypeInternal;
extern AiThreatInfoDefaultTypeInternal _AiThreatInfo_default_instance_;
class AiThreatInfo_AiThreatMapEntry;
class AiThreatInfo_AiThreatMapEntryDefaultTypeInternal;
extern AiThreatInfo_AiThreatMapEntryDefaultTypeInternal _AiThreatInfo_AiThreatMapEntry_default_instance_;
class AnimatorForceSetAirMoveNotify;
class AnimatorForceSetAirMoveNotifyDefaultTypeInternal;
extern AnimatorForceSetAirMoveNotifyDefaultTypeInternal _AnimatorForceSetAirMoveNotify_default_instance_;
class AttackHitEffectResult;
class AttackHitEffectResultDefaultTypeInternal;
extern AttackHitEffectResultDefaultTypeInternal _AttackHitEffectResult_default_instance_;
class AttackResult;
class AttackResultDefaultTypeInternal;
extern AttackResultDefaultTypeInternal _AttackResult_default_instance_;
class AvatarBuffAddNotify;
class AvatarBuffAddNotifyDefaultTypeInternal;
extern AvatarBuffAddNotifyDefaultTypeInternal _AvatarBuffAddNotify_default_instance_;
class AvatarBuffDelNotify;
class AvatarBuffDelNotifyDefaultTypeInternal;
extern AvatarBuffDelNotifyDefaultTypeInternal _AvatarBuffDelNotify_default_instance_;
class AvatarEnterElementViewNotify;
class AvatarEnterElementViewNotifyDefaultTypeInternal;
extern AvatarEnterElementViewNotifyDefaultTypeInternal _AvatarEnterElementViewNotify_default_instance_;
class CombatInvocationsNotify;
class CombatInvocationsNotifyDefaultTypeInternal;
extern CombatInvocationsNotifyDefaultTypeInternal _CombatInvocationsNotify_default_instance_;
class CombatInvokeEntry;
class CombatInvokeEntryDefaultTypeInternal;
extern CombatInvokeEntryDefaultTypeInternal _CombatInvokeEntry_default_instance_;
class CreateMassiveEntityNotify;
class CreateMassiveEntityNotifyDefaultTypeInternal;
extern CreateMassiveEntityNotifyDefaultTypeInternal _CreateMassiveEntityNotify_default_instance_;
class CreateMassiveEntityReq;
class CreateMassiveEntityReqDefaultTypeInternal;
extern CreateMassiveEntityReqDefaultTypeInternal _CreateMassiveEntityReq_default_instance_;
class CreateMassiveEntityRsp;
class CreateMassiveEntityRspDefaultTypeInternal;
extern CreateMassiveEntityRspDefaultTypeInternal _CreateMassiveEntityRsp_default_instance_;
class DelTeamEntityNotify;
class DelTeamEntityNotifyDefaultTypeInternal;
extern DelTeamEntityNotifyDefaultTypeInternal _DelTeamEntityNotify_default_instance_;
class DestroyMassiveEntityNotify;
class DestroyMassiveEntityNotifyDefaultTypeInternal;
extern DestroyMassiveEntityNotifyDefaultTypeInternal _DestroyMassiveEntityNotify_default_instance_;
class EntityAuthorityChangeNotify;
class EntityAuthorityChangeNotifyDefaultTypeInternal;
extern EntityAuthorityChangeNotifyDefaultTypeInternal _EntityAuthorityChangeNotify_default_instance_;
class EvtAiSyncCombatThreatInfoNotify;
class EvtAiSyncCombatThreatInfoNotifyDefaultTypeInternal;
extern EvtAiSyncCombatThreatInfoNotifyDefaultTypeInternal _EvtAiSyncCombatThreatInfoNotify_default_instance_;
class EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry;
class EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntryDefaultTypeInternal;
extern EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntryDefaultTypeInternal _EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_;
class EvtAiSyncSkillCdNotify;
class EvtAiSyncSkillCdNotifyDefaultTypeInternal;
extern EvtAiSyncSkillCdNotifyDefaultTypeInternal _EvtAiSyncSkillCdNotify_default_instance_;
class EvtAiSyncSkillCdNotify_AiCdMapEntry;
class EvtAiSyncSkillCdNotify_AiCdMapEntryDefaultTypeInternal;
extern EvtAiSyncSkillCdNotify_AiCdMapEntryDefaultTypeInternal _EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_;
class EvtAnimatorParameterInfo;
class EvtAnimatorParameterInfoDefaultTypeInternal;
extern EvtAnimatorParameterInfoDefaultTypeInternal _EvtAnimatorParameterInfo_default_instance_;
class EvtAnimatorParameterNotify;
class EvtAnimatorParameterNotifyDefaultTypeInternal;
extern EvtAnimatorParameterNotifyDefaultTypeInternal _EvtAnimatorParameterNotify_default_instance_;
class EvtAnimatorStateChangedInfo;
class EvtAnimatorStateChangedInfoDefaultTypeInternal;
extern EvtAnimatorStateChangedInfoDefaultTypeInternal _EvtAnimatorStateChangedInfo_default_instance_;
class EvtAnimatorStateChangedNotify;
class EvtAnimatorStateChangedNotifyDefaultTypeInternal;
extern EvtAnimatorStateChangedNotifyDefaultTypeInternal _EvtAnimatorStateChangedNotify_default_instance_;
class EvtAvatarEnterFocusNotify;
class EvtAvatarEnterFocusNotifyDefaultTypeInternal;
extern EvtAvatarEnterFocusNotifyDefaultTypeInternal _EvtAvatarEnterFocusNotify_default_instance_;
class EvtAvatarExitFocusNotify;
class EvtAvatarExitFocusNotifyDefaultTypeInternal;
extern EvtAvatarExitFocusNotifyDefaultTypeInternal _EvtAvatarExitFocusNotify_default_instance_;
class EvtAvatarSitDownNotify;
class EvtAvatarSitDownNotifyDefaultTypeInternal;
extern EvtAvatarSitDownNotifyDefaultTypeInternal _EvtAvatarSitDownNotify_default_instance_;
class EvtAvatarStandUpNotify;
class EvtAvatarStandUpNotifyDefaultTypeInternal;
extern EvtAvatarStandUpNotifyDefaultTypeInternal _EvtAvatarStandUpNotify_default_instance_;
class EvtAvatarUpdateFocusNotify;
class EvtAvatarUpdateFocusNotifyDefaultTypeInternal;
extern EvtAvatarUpdateFocusNotifyDefaultTypeInternal _EvtAvatarUpdateFocusNotify_default_instance_;
class EvtBeingHitInfo;
class EvtBeingHitInfoDefaultTypeInternal;
extern EvtBeingHitInfoDefaultTypeInternal _EvtBeingHitInfo_default_instance_;
class EvtBeingHitNotify;
class EvtBeingHitNotifyDefaultTypeInternal;
extern EvtBeingHitNotifyDefaultTypeInternal _EvtBeingHitNotify_default_instance_;
class EvtBeingHitsCombineNotify;
class EvtBeingHitsCombineNotifyDefaultTypeInternal;
extern EvtBeingHitsCombineNotifyDefaultTypeInternal _EvtBeingHitsCombineNotify_default_instance_;
class EvtBulletDeactiveNotify;
class EvtBulletDeactiveNotifyDefaultTypeInternal;
extern EvtBulletDeactiveNotifyDefaultTypeInternal _EvtBulletDeactiveNotify_default_instance_;
class EvtBulletHitNotify;
class EvtBulletHitNotifyDefaultTypeInternal;
extern EvtBulletHitNotifyDefaultTypeInternal _EvtBulletHitNotify_default_instance_;
class EvtBulletMoveNotify;
class EvtBulletMoveNotifyDefaultTypeInternal;
extern EvtBulletMoveNotifyDefaultTypeInternal _EvtBulletMoveNotify_default_instance_;
class EvtCostStaminaNotify;
class EvtCostStaminaNotifyDefaultTypeInternal;
extern EvtCostStaminaNotifyDefaultTypeInternal _EvtCostStaminaNotify_default_instance_;
class EvtCreateGadgetNotify;
class EvtCreateGadgetNotifyDefaultTypeInternal;
extern EvtCreateGadgetNotifyDefaultTypeInternal _EvtCreateGadgetNotify_default_instance_;
class EvtDestroyGadgetNotify;
class EvtDestroyGadgetNotifyDefaultTypeInternal;
extern EvtDestroyGadgetNotifyDefaultTypeInternal _EvtDestroyGadgetNotify_default_instance_;
class EvtDoSkillSuccNotify;
class EvtDoSkillSuccNotifyDefaultTypeInternal;
extern EvtDoSkillSuccNotifyDefaultTypeInternal _EvtDoSkillSuccNotify_default_instance_;
class EvtEntityRenderersChangedNotify;
class EvtEntityRenderersChangedNotifyDefaultTypeInternal;
extern EvtEntityRenderersChangedNotifyDefaultTypeInternal _EvtEntityRenderersChangedNotify_default_instance_;
class EvtEntityStartDieEndNotify;
class EvtEntityStartDieEndNotifyDefaultTypeInternal;
extern EvtEntityStartDieEndNotifyDefaultTypeInternal _EvtEntityStartDieEndNotify_default_instance_;
class EvtFaceToDirInfo;
class EvtFaceToDirInfoDefaultTypeInternal;
extern EvtFaceToDirInfoDefaultTypeInternal _EvtFaceToDirInfo_default_instance_;
class EvtFaceToDirNotify;
class EvtFaceToDirNotifyDefaultTypeInternal;
extern EvtFaceToDirNotifyDefaultTypeInternal _EvtFaceToDirNotify_default_instance_;
class EvtFaceToEntityNotify;
class EvtFaceToEntityNotifyDefaultTypeInternal;
extern EvtFaceToEntityNotifyDefaultTypeInternal _EvtFaceToEntityNotify_default_instance_;
class EvtRushMoveInfo;
class EvtRushMoveInfoDefaultTypeInternal;
extern EvtRushMoveInfoDefaultTypeInternal _EvtRushMoveInfo_default_instance_;
class EvtRushMoveNotify;
class EvtRushMoveNotifyDefaultTypeInternal;
extern EvtRushMoveNotifyDefaultTypeInternal _EvtRushMoveNotify_default_instance_;
class EvtSetAttackTargetInfo;
class EvtSetAttackTargetInfoDefaultTypeInternal;
extern EvtSetAttackTargetInfoDefaultTypeInternal _EvtSetAttackTargetInfo_default_instance_;
class EvtSetAttackTargetNotify;
class EvtSetAttackTargetNotifyDefaultTypeInternal;
extern EvtSetAttackTargetNotifyDefaultTypeInternal _EvtSetAttackTargetNotify_default_instance_;
class HitCollision;
class HitCollisionDefaultTypeInternal;
extern HitCollisionDefaultTypeInternal _HitCollision_default_instance_;
class HostPlayerNotify;
class HostPlayerNotifyDefaultTypeInternal;
extern HostPlayerNotifyDefaultTypeInternal _HostPlayerNotify_default_instance_;
class MassiveEntityStateChangedNotify;
class MassiveEntityStateChangedNotifyDefaultTypeInternal;
extern MassiveEntityStateChangedNotifyDefaultTypeInternal _MassiveEntityStateChangedNotify_default_instance_;
class MonsterAlertChangeNotify;
class MonsterAlertChangeNotifyDefaultTypeInternal;
extern MonsterAlertChangeNotifyDefaultTypeInternal _MonsterAlertChangeNotify_default_instance_;
class MonsterForceAlertNotify;
class MonsterForceAlertNotifyDefaultTypeInternal;
extern MonsterForceAlertNotifyDefaultTypeInternal _MonsterForceAlertNotify_default_instance_;
class ServerBuffChangeNotify;
class ServerBuffChangeNotifyDefaultTypeInternal;
extern ServerBuffChangeNotifyDefaultTypeInternal _ServerBuffChangeNotify_default_instance_;
class SyncTeamEntityNotify;
class SyncTeamEntityNotifyDefaultTypeInternal;
extern SyncTeamEntityNotifyDefaultTypeInternal _SyncTeamEntityNotify_default_instance_;
class TeamEntityInfo;
class TeamEntityInfoDefaultTypeInternal;
extern TeamEntityInfoDefaultTypeInternal _TeamEntityInfo_default_instance_;
class TriggerCreateGadgetToEquipPartNotify;
class TriggerCreateGadgetToEquipPartNotifyDefaultTypeInternal;
extern TriggerCreateGadgetToEquipPartNotifyDefaultTypeInternal _TriggerCreateGadgetToEquipPartNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5ffight_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5ffight_2eproto

enum EvtBeingHitNotify_CmdId {
  EvtBeingHitNotify_CmdId_NONE = 0,
  EvtBeingHitNotify_CmdId_CMD_ID = 301,
  EvtBeingHitNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBeingHitNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBeingHitNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBeingHitNotify_CmdId_EvtBeingHitNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBeingHitNotify_CmdId_EvtBeingHitNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBeingHitNotify_CmdId_IsValid(int value);
const EvtBeingHitNotify_CmdId EvtBeingHitNotify_CmdId_CmdId_MIN = EvtBeingHitNotify_CmdId_NONE;
const EvtBeingHitNotify_CmdId EvtBeingHitNotify_CmdId_CmdId_MAX = EvtBeingHitNotify_CmdId_CMD_ID;
const int EvtBeingHitNotify_CmdId_CmdId_ARRAYSIZE = EvtBeingHitNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBeingHitNotify_CmdId_descriptor();
inline const ::std::string& EvtBeingHitNotify_CmdId_Name(EvtBeingHitNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBeingHitNotify_CmdId_descriptor(), value);
}
inline bool EvtBeingHitNotify_CmdId_Parse(
    const ::std::string& name, EvtBeingHitNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBeingHitNotify_CmdId>(
    EvtBeingHitNotify_CmdId_descriptor(), name, value);
}
enum EvtAnimatorParameterNotify_CmdId {
  EvtAnimatorParameterNotify_CmdId_NONE = 0,
  EvtAnimatorParameterNotify_CmdId_CMD_ID = 302,
  EvtAnimatorParameterNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAnimatorParameterNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAnimatorParameterNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAnimatorParameterNotify_CmdId_EvtAnimatorParameterNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAnimatorParameterNotify_CmdId_EvtAnimatorParameterNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAnimatorParameterNotify_CmdId_IsValid(int value);
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify_CmdId_CmdId_MIN = EvtAnimatorParameterNotify_CmdId_NONE;
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify_CmdId_CmdId_MAX = EvtAnimatorParameterNotify_CmdId_CMD_ID;
const int EvtAnimatorParameterNotify_CmdId_CmdId_ARRAYSIZE = EvtAnimatorParameterNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAnimatorParameterNotify_CmdId_descriptor();
inline const ::std::string& EvtAnimatorParameterNotify_CmdId_Name(EvtAnimatorParameterNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAnimatorParameterNotify_CmdId_descriptor(), value);
}
inline bool EvtAnimatorParameterNotify_CmdId_Parse(
    const ::std::string& name, EvtAnimatorParameterNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAnimatorParameterNotify_CmdId>(
    EvtAnimatorParameterNotify_CmdId_descriptor(), name, value);
}
enum HostPlayerNotify_CmdId {
  HostPlayerNotify_CmdId_NONE = 0,
  HostPlayerNotify_CmdId_CMD_ID = 303,
  HostPlayerNotify_CmdId_ENET_CHANNEL_ID = 0,
  HostPlayerNotify_CmdId_ENET_IS_RELIABLE = 1,
  HostPlayerNotify_CmdId_HostPlayerNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HostPlayerNotify_CmdId_HostPlayerNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HostPlayerNotify_CmdId_IsValid(int value);
const HostPlayerNotify_CmdId HostPlayerNotify_CmdId_CmdId_MIN = HostPlayerNotify_CmdId_NONE;
const HostPlayerNotify_CmdId HostPlayerNotify_CmdId_CmdId_MAX = HostPlayerNotify_CmdId_CMD_ID;
const int HostPlayerNotify_CmdId_CmdId_ARRAYSIZE = HostPlayerNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HostPlayerNotify_CmdId_descriptor();
inline const ::std::string& HostPlayerNotify_CmdId_Name(HostPlayerNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HostPlayerNotify_CmdId_descriptor(), value);
}
inline bool HostPlayerNotify_CmdId_Parse(
    const ::std::string& name, HostPlayerNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HostPlayerNotify_CmdId>(
    HostPlayerNotify_CmdId_descriptor(), name, value);
}
enum EvtDoSkillSuccNotify_CmdId {
  EvtDoSkillSuccNotify_CmdId_NONE = 0,
  EvtDoSkillSuccNotify_CmdId_CMD_ID = 304,
  EvtDoSkillSuccNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtDoSkillSuccNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtDoSkillSuccNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtDoSkillSuccNotify_CmdId_EvtDoSkillSuccNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtDoSkillSuccNotify_CmdId_EvtDoSkillSuccNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtDoSkillSuccNotify_CmdId_IsValid(int value);
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify_CmdId_CmdId_MIN = EvtDoSkillSuccNotify_CmdId_NONE;
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify_CmdId_CmdId_MAX = EvtDoSkillSuccNotify_CmdId_CMD_ID;
const int EvtDoSkillSuccNotify_CmdId_CmdId_ARRAYSIZE = EvtDoSkillSuccNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtDoSkillSuccNotify_CmdId_descriptor();
inline const ::std::string& EvtDoSkillSuccNotify_CmdId_Name(EvtDoSkillSuccNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtDoSkillSuccNotify_CmdId_descriptor(), value);
}
inline bool EvtDoSkillSuccNotify_CmdId_Parse(
    const ::std::string& name, EvtDoSkillSuccNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtDoSkillSuccNotify_CmdId>(
    EvtDoSkillSuccNotify_CmdId_descriptor(), name, value);
}
enum EvtCreateGadgetNotify_CmdId {
  EvtCreateGadgetNotify_CmdId_NONE = 0,
  EvtCreateGadgetNotify_CmdId_CMD_ID = 305,
  EvtCreateGadgetNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtCreateGadgetNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtCreateGadgetNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtCreateGadgetNotify_CmdId_EvtCreateGadgetNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtCreateGadgetNotify_CmdId_EvtCreateGadgetNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtCreateGadgetNotify_CmdId_IsValid(int value);
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify_CmdId_CmdId_MIN = EvtCreateGadgetNotify_CmdId_NONE;
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify_CmdId_CmdId_MAX = EvtCreateGadgetNotify_CmdId_CMD_ID;
const int EvtCreateGadgetNotify_CmdId_CmdId_ARRAYSIZE = EvtCreateGadgetNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtCreateGadgetNotify_CmdId_descriptor();
inline const ::std::string& EvtCreateGadgetNotify_CmdId_Name(EvtCreateGadgetNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtCreateGadgetNotify_CmdId_descriptor(), value);
}
inline bool EvtCreateGadgetNotify_CmdId_Parse(
    const ::std::string& name, EvtCreateGadgetNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtCreateGadgetNotify_CmdId>(
    EvtCreateGadgetNotify_CmdId_descriptor(), name, value);
}
enum EvtDestroyGadgetNotify_CmdId {
  EvtDestroyGadgetNotify_CmdId_NONE = 0,
  EvtDestroyGadgetNotify_CmdId_CMD_ID = 306,
  EvtDestroyGadgetNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtDestroyGadgetNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtDestroyGadgetNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtDestroyGadgetNotify_CmdId_EvtDestroyGadgetNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtDestroyGadgetNotify_CmdId_EvtDestroyGadgetNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtDestroyGadgetNotify_CmdId_IsValid(int value);
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify_CmdId_CmdId_MIN = EvtDestroyGadgetNotify_CmdId_NONE;
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify_CmdId_CmdId_MAX = EvtDestroyGadgetNotify_CmdId_CMD_ID;
const int EvtDestroyGadgetNotify_CmdId_CmdId_ARRAYSIZE = EvtDestroyGadgetNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtDestroyGadgetNotify_CmdId_descriptor();
inline const ::std::string& EvtDestroyGadgetNotify_CmdId_Name(EvtDestroyGadgetNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtDestroyGadgetNotify_CmdId_descriptor(), value);
}
inline bool EvtDestroyGadgetNotify_CmdId_Parse(
    const ::std::string& name, EvtDestroyGadgetNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtDestroyGadgetNotify_CmdId>(
    EvtDestroyGadgetNotify_CmdId_descriptor(), name, value);
}
enum EvtFaceToEntityNotify_CmdId {
  EvtFaceToEntityNotify_CmdId_NONE = 0,
  EvtFaceToEntityNotify_CmdId_CMD_ID = 307,
  EvtFaceToEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtFaceToEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtFaceToEntityNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtFaceToEntityNotify_CmdId_EvtFaceToEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtFaceToEntityNotify_CmdId_EvtFaceToEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtFaceToEntityNotify_CmdId_IsValid(int value);
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify_CmdId_CmdId_MIN = EvtFaceToEntityNotify_CmdId_NONE;
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify_CmdId_CmdId_MAX = EvtFaceToEntityNotify_CmdId_CMD_ID;
const int EvtFaceToEntityNotify_CmdId_CmdId_ARRAYSIZE = EvtFaceToEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtFaceToEntityNotify_CmdId_descriptor();
inline const ::std::string& EvtFaceToEntityNotify_CmdId_Name(EvtFaceToEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtFaceToEntityNotify_CmdId_descriptor(), value);
}
inline bool EvtFaceToEntityNotify_CmdId_Parse(
    const ::std::string& name, EvtFaceToEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtFaceToEntityNotify_CmdId>(
    EvtFaceToEntityNotify_CmdId_descriptor(), name, value);
}
enum EvtFaceToDirNotify_CmdId {
  EvtFaceToDirNotify_CmdId_NONE = 0,
  EvtFaceToDirNotify_CmdId_CMD_ID = 308,
  EvtFaceToDirNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtFaceToDirNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtFaceToDirNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtFaceToDirNotify_CmdId_EvtFaceToDirNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtFaceToDirNotify_CmdId_EvtFaceToDirNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtFaceToDirNotify_CmdId_IsValid(int value);
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify_CmdId_CmdId_MIN = EvtFaceToDirNotify_CmdId_NONE;
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify_CmdId_CmdId_MAX = EvtFaceToDirNotify_CmdId_CMD_ID;
const int EvtFaceToDirNotify_CmdId_CmdId_ARRAYSIZE = EvtFaceToDirNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtFaceToDirNotify_CmdId_descriptor();
inline const ::std::string& EvtFaceToDirNotify_CmdId_Name(EvtFaceToDirNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtFaceToDirNotify_CmdId_descriptor(), value);
}
inline bool EvtFaceToDirNotify_CmdId_Parse(
    const ::std::string& name, EvtFaceToDirNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtFaceToDirNotify_CmdId>(
    EvtFaceToDirNotify_CmdId_descriptor(), name, value);
}
enum EvtCostStaminaNotify_CmdId {
  EvtCostStaminaNotify_CmdId_NONE = 0,
  EvtCostStaminaNotify_CmdId_CMD_ID = 309,
  EvtCostStaminaNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtCostStaminaNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtCostStaminaNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtCostStaminaNotify_CmdId_EvtCostStaminaNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtCostStaminaNotify_CmdId_EvtCostStaminaNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtCostStaminaNotify_CmdId_IsValid(int value);
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify_CmdId_CmdId_MIN = EvtCostStaminaNotify_CmdId_NONE;
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify_CmdId_CmdId_MAX = EvtCostStaminaNotify_CmdId_CMD_ID;
const int EvtCostStaminaNotify_CmdId_CmdId_ARRAYSIZE = EvtCostStaminaNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtCostStaminaNotify_CmdId_descriptor();
inline const ::std::string& EvtCostStaminaNotify_CmdId_Name(EvtCostStaminaNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtCostStaminaNotify_CmdId_descriptor(), value);
}
inline bool EvtCostStaminaNotify_CmdId_Parse(
    const ::std::string& name, EvtCostStaminaNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtCostStaminaNotify_CmdId>(
    EvtCostStaminaNotify_CmdId_descriptor(), name, value);
}
enum EvtSetAttackTargetNotify_CmdId {
  EvtSetAttackTargetNotify_CmdId_NONE = 0,
  EvtSetAttackTargetNotify_CmdId_CMD_ID = 310,
  EvtSetAttackTargetNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtSetAttackTargetNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtSetAttackTargetNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtSetAttackTargetNotify_CmdId_EvtSetAttackTargetNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtSetAttackTargetNotify_CmdId_EvtSetAttackTargetNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtSetAttackTargetNotify_CmdId_IsValid(int value);
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify_CmdId_CmdId_MIN = EvtSetAttackTargetNotify_CmdId_NONE;
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify_CmdId_CmdId_MAX = EvtSetAttackTargetNotify_CmdId_CMD_ID;
const int EvtSetAttackTargetNotify_CmdId_CmdId_ARRAYSIZE = EvtSetAttackTargetNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtSetAttackTargetNotify_CmdId_descriptor();
inline const ::std::string& EvtSetAttackTargetNotify_CmdId_Name(EvtSetAttackTargetNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtSetAttackTargetNotify_CmdId_descriptor(), value);
}
inline bool EvtSetAttackTargetNotify_CmdId_Parse(
    const ::std::string& name, EvtSetAttackTargetNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtSetAttackTargetNotify_CmdId>(
    EvtSetAttackTargetNotify_CmdId_descriptor(), name, value);
}
enum EvtAnimatorStateChangedNotify_CmdId {
  EvtAnimatorStateChangedNotify_CmdId_NONE = 0,
  EvtAnimatorStateChangedNotify_CmdId_CMD_ID = 311,
  EvtAnimatorStateChangedNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAnimatorStateChangedNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAnimatorStateChangedNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAnimatorStateChangedNotify_CmdId_EvtAnimatorStateChangedNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAnimatorStateChangedNotify_CmdId_EvtAnimatorStateChangedNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAnimatorStateChangedNotify_CmdId_IsValid(int value);
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify_CmdId_CmdId_MIN = EvtAnimatorStateChangedNotify_CmdId_NONE;
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify_CmdId_CmdId_MAX = EvtAnimatorStateChangedNotify_CmdId_CMD_ID;
const int EvtAnimatorStateChangedNotify_CmdId_CmdId_ARRAYSIZE = EvtAnimatorStateChangedNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAnimatorStateChangedNotify_CmdId_descriptor();
inline const ::std::string& EvtAnimatorStateChangedNotify_CmdId_Name(EvtAnimatorStateChangedNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAnimatorStateChangedNotify_CmdId_descriptor(), value);
}
inline bool EvtAnimatorStateChangedNotify_CmdId_Parse(
    const ::std::string& name, EvtAnimatorStateChangedNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAnimatorStateChangedNotify_CmdId>(
    EvtAnimatorStateChangedNotify_CmdId_descriptor(), name, value);
}
enum EvtRushMoveNotify_CmdId {
  EvtRushMoveNotify_CmdId_NONE = 0,
  EvtRushMoveNotify_CmdId_CMD_ID = 312,
  EvtRushMoveNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtRushMoveNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtRushMoveNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtRushMoveNotify_CmdId_EvtRushMoveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtRushMoveNotify_CmdId_EvtRushMoveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtRushMoveNotify_CmdId_IsValid(int value);
const EvtRushMoveNotify_CmdId EvtRushMoveNotify_CmdId_CmdId_MIN = EvtRushMoveNotify_CmdId_NONE;
const EvtRushMoveNotify_CmdId EvtRushMoveNotify_CmdId_CmdId_MAX = EvtRushMoveNotify_CmdId_CMD_ID;
const int EvtRushMoveNotify_CmdId_CmdId_ARRAYSIZE = EvtRushMoveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtRushMoveNotify_CmdId_descriptor();
inline const ::std::string& EvtRushMoveNotify_CmdId_Name(EvtRushMoveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtRushMoveNotify_CmdId_descriptor(), value);
}
inline bool EvtRushMoveNotify_CmdId_Parse(
    const ::std::string& name, EvtRushMoveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtRushMoveNotify_CmdId>(
    EvtRushMoveNotify_CmdId_descriptor(), name, value);
}
enum EvtBulletHitNotify_CmdId {
  EvtBulletHitNotify_CmdId_NONE = 0,
  EvtBulletHitNotify_CmdId_CMD_ID = 313,
  EvtBulletHitNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBulletHitNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBulletHitNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBulletHitNotify_CmdId_EvtBulletHitNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBulletHitNotify_CmdId_EvtBulletHitNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBulletHitNotify_CmdId_IsValid(int value);
const EvtBulletHitNotify_CmdId EvtBulletHitNotify_CmdId_CmdId_MIN = EvtBulletHitNotify_CmdId_NONE;
const EvtBulletHitNotify_CmdId EvtBulletHitNotify_CmdId_CmdId_MAX = EvtBulletHitNotify_CmdId_CMD_ID;
const int EvtBulletHitNotify_CmdId_CmdId_ARRAYSIZE = EvtBulletHitNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBulletHitNotify_CmdId_descriptor();
inline const ::std::string& EvtBulletHitNotify_CmdId_Name(EvtBulletHitNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBulletHitNotify_CmdId_descriptor(), value);
}
inline bool EvtBulletHitNotify_CmdId_Parse(
    const ::std::string& name, EvtBulletHitNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBulletHitNotify_CmdId>(
    EvtBulletHitNotify_CmdId_descriptor(), name, value);
}
enum EvtBulletDeactiveNotify_CmdId {
  EvtBulletDeactiveNotify_CmdId_NONE = 0,
  EvtBulletDeactiveNotify_CmdId_CMD_ID = 314,
  EvtBulletDeactiveNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBulletDeactiveNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBulletDeactiveNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBulletDeactiveNotify_CmdId_EvtBulletDeactiveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBulletDeactiveNotify_CmdId_EvtBulletDeactiveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBulletDeactiveNotify_CmdId_IsValid(int value);
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify_CmdId_CmdId_MIN = EvtBulletDeactiveNotify_CmdId_NONE;
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify_CmdId_CmdId_MAX = EvtBulletDeactiveNotify_CmdId_CMD_ID;
const int EvtBulletDeactiveNotify_CmdId_CmdId_ARRAYSIZE = EvtBulletDeactiveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBulletDeactiveNotify_CmdId_descriptor();
inline const ::std::string& EvtBulletDeactiveNotify_CmdId_Name(EvtBulletDeactiveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBulletDeactiveNotify_CmdId_descriptor(), value);
}
inline bool EvtBulletDeactiveNotify_CmdId_Parse(
    const ::std::string& name, EvtBulletDeactiveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBulletDeactiveNotify_CmdId>(
    EvtBulletDeactiveNotify_CmdId_descriptor(), name, value);
}
enum EvtEntityStartDieEndNotify_CmdId {
  EvtEntityStartDieEndNotify_CmdId_NONE = 0,
  EvtEntityStartDieEndNotify_CmdId_CMD_ID = 315,
  EvtEntityStartDieEndNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtEntityStartDieEndNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtEntityStartDieEndNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtEntityStartDieEndNotify_CmdId_EvtEntityStartDieEndNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtEntityStartDieEndNotify_CmdId_EvtEntityStartDieEndNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtEntityStartDieEndNotify_CmdId_IsValid(int value);
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify_CmdId_CmdId_MIN = EvtEntityStartDieEndNotify_CmdId_NONE;
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify_CmdId_CmdId_MAX = EvtEntityStartDieEndNotify_CmdId_CMD_ID;
const int EvtEntityStartDieEndNotify_CmdId_CmdId_ARRAYSIZE = EvtEntityStartDieEndNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtEntityStartDieEndNotify_CmdId_descriptor();
inline const ::std::string& EvtEntityStartDieEndNotify_CmdId_Name(EvtEntityStartDieEndNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtEntityStartDieEndNotify_CmdId_descriptor(), value);
}
inline bool EvtEntityStartDieEndNotify_CmdId_Parse(
    const ::std::string& name, EvtEntityStartDieEndNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtEntityStartDieEndNotify_CmdId>(
    EvtEntityStartDieEndNotify_CmdId_descriptor(), name, value);
}
enum EvtBulletMoveNotify_CmdId {
  EvtBulletMoveNotify_CmdId_NONE = 0,
  EvtBulletMoveNotify_CmdId_CMD_ID = 322,
  EvtBulletMoveNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBulletMoveNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBulletMoveNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBulletMoveNotify_CmdId_EvtBulletMoveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBulletMoveNotify_CmdId_EvtBulletMoveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBulletMoveNotify_CmdId_IsValid(int value);
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify_CmdId_CmdId_MIN = EvtBulletMoveNotify_CmdId_NONE;
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify_CmdId_CmdId_MAX = EvtBulletMoveNotify_CmdId_CMD_ID;
const int EvtBulletMoveNotify_CmdId_CmdId_ARRAYSIZE = EvtBulletMoveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBulletMoveNotify_CmdId_descriptor();
inline const ::std::string& EvtBulletMoveNotify_CmdId_Name(EvtBulletMoveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBulletMoveNotify_CmdId_descriptor(), value);
}
inline bool EvtBulletMoveNotify_CmdId_Parse(
    const ::std::string& name, EvtBulletMoveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBulletMoveNotify_CmdId>(
    EvtBulletMoveNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarEnterFocusNotify_CmdId {
  EvtAvatarEnterFocusNotify_CmdId_NONE = 0,
  EvtAvatarEnterFocusNotify_CmdId_CMD_ID = 323,
  EvtAvatarEnterFocusNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarEnterFocusNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarEnterFocusNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarEnterFocusNotify_CmdId_EvtAvatarEnterFocusNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarEnterFocusNotify_CmdId_EvtAvatarEnterFocusNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarEnterFocusNotify_CmdId_IsValid(int value);
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify_CmdId_CmdId_MIN = EvtAvatarEnterFocusNotify_CmdId_NONE;
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify_CmdId_CmdId_MAX = EvtAvatarEnterFocusNotify_CmdId_CMD_ID;
const int EvtAvatarEnterFocusNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarEnterFocusNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarEnterFocusNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarEnterFocusNotify_CmdId_Name(EvtAvatarEnterFocusNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarEnterFocusNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarEnterFocusNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarEnterFocusNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarEnterFocusNotify_CmdId>(
    EvtAvatarEnterFocusNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarExitFocusNotify_CmdId {
  EvtAvatarExitFocusNotify_CmdId_NONE = 0,
  EvtAvatarExitFocusNotify_CmdId_CMD_ID = 324,
  EvtAvatarExitFocusNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarExitFocusNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarExitFocusNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarExitFocusNotify_CmdId_EvtAvatarExitFocusNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarExitFocusNotify_CmdId_EvtAvatarExitFocusNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarExitFocusNotify_CmdId_IsValid(int value);
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify_CmdId_CmdId_MIN = EvtAvatarExitFocusNotify_CmdId_NONE;
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify_CmdId_CmdId_MAX = EvtAvatarExitFocusNotify_CmdId_CMD_ID;
const int EvtAvatarExitFocusNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarExitFocusNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarExitFocusNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarExitFocusNotify_CmdId_Name(EvtAvatarExitFocusNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarExitFocusNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarExitFocusNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarExitFocusNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarExitFocusNotify_CmdId>(
    EvtAvatarExitFocusNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarUpdateFocusNotify_CmdId {
  EvtAvatarUpdateFocusNotify_CmdId_NONE = 0,
  EvtAvatarUpdateFocusNotify_CmdId_CMD_ID = 325,
  EvtAvatarUpdateFocusNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarUpdateFocusNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarUpdateFocusNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarUpdateFocusNotify_CmdId_EvtAvatarUpdateFocusNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarUpdateFocusNotify_CmdId_EvtAvatarUpdateFocusNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarUpdateFocusNotify_CmdId_IsValid(int value);
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify_CmdId_CmdId_MIN = EvtAvatarUpdateFocusNotify_CmdId_NONE;
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify_CmdId_CmdId_MAX = EvtAvatarUpdateFocusNotify_CmdId_CMD_ID;
const int EvtAvatarUpdateFocusNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarUpdateFocusNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarUpdateFocusNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarUpdateFocusNotify_CmdId_Name(EvtAvatarUpdateFocusNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarUpdateFocusNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarUpdateFocusNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarUpdateFocusNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarUpdateFocusNotify_CmdId>(
    EvtAvatarUpdateFocusNotify_CmdId_descriptor(), name, value);
}
enum EntityAuthorityChangeNotify_CmdId {
  EntityAuthorityChangeNotify_CmdId_NONE = 0,
  EntityAuthorityChangeNotify_CmdId_CMD_ID = 326,
  EntityAuthorityChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  EntityAuthorityChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  EntityAuthorityChangeNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EntityAuthorityChangeNotify_CmdId_EntityAuthorityChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityAuthorityChangeNotify_CmdId_EntityAuthorityChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityAuthorityChangeNotify_CmdId_IsValid(int value);
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify_CmdId_CmdId_MIN = EntityAuthorityChangeNotify_CmdId_NONE;
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify_CmdId_CmdId_MAX = EntityAuthorityChangeNotify_CmdId_CMD_ID;
const int EntityAuthorityChangeNotify_CmdId_CmdId_ARRAYSIZE = EntityAuthorityChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityAuthorityChangeNotify_CmdId_descriptor();
inline const ::std::string& EntityAuthorityChangeNotify_CmdId_Name(EntityAuthorityChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityAuthorityChangeNotify_CmdId_descriptor(), value);
}
inline bool EntityAuthorityChangeNotify_CmdId_Parse(
    const ::std::string& name, EntityAuthorityChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityAuthorityChangeNotify_CmdId>(
    EntityAuthorityChangeNotify_CmdId_descriptor(), name, value);
}
enum AvatarBuffAddNotify_CmdId {
  AvatarBuffAddNotify_CmdId_NONE = 0,
  AvatarBuffAddNotify_CmdId_CMD_ID = 327,
  AvatarBuffAddNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarBuffAddNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarBuffAddNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarBuffAddNotify_CmdId_AvatarBuffAddNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarBuffAddNotify_CmdId_AvatarBuffAddNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarBuffAddNotify_CmdId_IsValid(int value);
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify_CmdId_CmdId_MIN = AvatarBuffAddNotify_CmdId_NONE;
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify_CmdId_CmdId_MAX = AvatarBuffAddNotify_CmdId_CMD_ID;
const int AvatarBuffAddNotify_CmdId_CmdId_ARRAYSIZE = AvatarBuffAddNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarBuffAddNotify_CmdId_descriptor();
inline const ::std::string& AvatarBuffAddNotify_CmdId_Name(AvatarBuffAddNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarBuffAddNotify_CmdId_descriptor(), value);
}
inline bool AvatarBuffAddNotify_CmdId_Parse(
    const ::std::string& name, AvatarBuffAddNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarBuffAddNotify_CmdId>(
    AvatarBuffAddNotify_CmdId_descriptor(), name, value);
}
enum AvatarBuffDelNotify_CmdId {
  AvatarBuffDelNotify_CmdId_NONE = 0,
  AvatarBuffDelNotify_CmdId_CMD_ID = 328,
  AvatarBuffDelNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarBuffDelNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarBuffDelNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarBuffDelNotify_CmdId_AvatarBuffDelNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarBuffDelNotify_CmdId_AvatarBuffDelNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarBuffDelNotify_CmdId_IsValid(int value);
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify_CmdId_CmdId_MIN = AvatarBuffDelNotify_CmdId_NONE;
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify_CmdId_CmdId_MAX = AvatarBuffDelNotify_CmdId_CMD_ID;
const int AvatarBuffDelNotify_CmdId_CmdId_ARRAYSIZE = AvatarBuffDelNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarBuffDelNotify_CmdId_descriptor();
inline const ::std::string& AvatarBuffDelNotify_CmdId_Name(AvatarBuffDelNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarBuffDelNotify_CmdId_descriptor(), value);
}
inline bool AvatarBuffDelNotify_CmdId_Parse(
    const ::std::string& name, AvatarBuffDelNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarBuffDelNotify_CmdId>(
    AvatarBuffDelNotify_CmdId_descriptor(), name, value);
}
enum MonsterAlertChangeNotify_CmdId {
  MonsterAlertChangeNotify_CmdId_NONE = 0,
  MonsterAlertChangeNotify_CmdId_CMD_ID = 329,
  MonsterAlertChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  MonsterAlertChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  MonsterAlertChangeNotify_CmdId_IS_ALLOW_CLIENT = 1,
  MonsterAlertChangeNotify_CmdId_MonsterAlertChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterAlertChangeNotify_CmdId_MonsterAlertChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterAlertChangeNotify_CmdId_IsValid(int value);
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify_CmdId_CmdId_MIN = MonsterAlertChangeNotify_CmdId_NONE;
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify_CmdId_CmdId_MAX = MonsterAlertChangeNotify_CmdId_CMD_ID;
const int MonsterAlertChangeNotify_CmdId_CmdId_ARRAYSIZE = MonsterAlertChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterAlertChangeNotify_CmdId_descriptor();
inline const ::std::string& MonsterAlertChangeNotify_CmdId_Name(MonsterAlertChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterAlertChangeNotify_CmdId_descriptor(), value);
}
inline bool MonsterAlertChangeNotify_CmdId_Parse(
    const ::std::string& name, MonsterAlertChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterAlertChangeNotify_CmdId>(
    MonsterAlertChangeNotify_CmdId_descriptor(), name, value);
}
enum MonsterForceAlertNotify_CmdId {
  MonsterForceAlertNotify_CmdId_NONE = 0,
  MonsterForceAlertNotify_CmdId_CMD_ID = 330,
  MonsterForceAlertNotify_CmdId_ENET_CHANNEL_ID = 0,
  MonsterForceAlertNotify_CmdId_ENET_IS_RELIABLE = 1,
  MonsterForceAlertNotify_CmdId_MonsterForceAlertNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterForceAlertNotify_CmdId_MonsterForceAlertNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterForceAlertNotify_CmdId_IsValid(int value);
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify_CmdId_CmdId_MIN = MonsterForceAlertNotify_CmdId_NONE;
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify_CmdId_CmdId_MAX = MonsterForceAlertNotify_CmdId_CMD_ID;
const int MonsterForceAlertNotify_CmdId_CmdId_ARRAYSIZE = MonsterForceAlertNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterForceAlertNotify_CmdId_descriptor();
inline const ::std::string& MonsterForceAlertNotify_CmdId_Name(MonsterForceAlertNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterForceAlertNotify_CmdId_descriptor(), value);
}
inline bool MonsterForceAlertNotify_CmdId_Parse(
    const ::std::string& name, MonsterForceAlertNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterForceAlertNotify_CmdId>(
    MonsterForceAlertNotify_CmdId_descriptor(), name, value);
}
enum AvatarEnterElementViewNotify_CmdId {
  AvatarEnterElementViewNotify_CmdId_NONE = 0,
  AvatarEnterElementViewNotify_CmdId_CMD_ID = 332,
  AvatarEnterElementViewNotify_CmdId_ENET_CHANNEL_ID = 0,
  AvatarEnterElementViewNotify_CmdId_ENET_IS_RELIABLE = 1,
  AvatarEnterElementViewNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AvatarEnterElementViewNotify_CmdId_AvatarEnterElementViewNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarEnterElementViewNotify_CmdId_AvatarEnterElementViewNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarEnterElementViewNotify_CmdId_IsValid(int value);
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify_CmdId_CmdId_MIN = AvatarEnterElementViewNotify_CmdId_NONE;
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify_CmdId_CmdId_MAX = AvatarEnterElementViewNotify_CmdId_CMD_ID;
const int AvatarEnterElementViewNotify_CmdId_CmdId_ARRAYSIZE = AvatarEnterElementViewNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarEnterElementViewNotify_CmdId_descriptor();
inline const ::std::string& AvatarEnterElementViewNotify_CmdId_Name(AvatarEnterElementViewNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarEnterElementViewNotify_CmdId_descriptor(), value);
}
inline bool AvatarEnterElementViewNotify_CmdId_Parse(
    const ::std::string& name, AvatarEnterElementViewNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarEnterElementViewNotify_CmdId>(
    AvatarEnterElementViewNotify_CmdId_descriptor(), name, value);
}
enum TriggerCreateGadgetToEquipPartNotify_CmdId {
  TriggerCreateGadgetToEquipPartNotify_CmdId_NONE = 0,
  TriggerCreateGadgetToEquipPartNotify_CmdId_CMD_ID = 333,
  TriggerCreateGadgetToEquipPartNotify_CmdId_ENET_CHANNEL_ID = 0,
  TriggerCreateGadgetToEquipPartNotify_CmdId_ENET_IS_RELIABLE = 1,
  TriggerCreateGadgetToEquipPartNotify_CmdId_IS_ALLOW_CLIENT = 1,
  TriggerCreateGadgetToEquipPartNotify_CmdId_TriggerCreateGadgetToEquipPartNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TriggerCreateGadgetToEquipPartNotify_CmdId_TriggerCreateGadgetToEquipPartNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TriggerCreateGadgetToEquipPartNotify_CmdId_IsValid(int value);
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MIN = TriggerCreateGadgetToEquipPartNotify_CmdId_NONE;
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MAX = TriggerCreateGadgetToEquipPartNotify_CmdId_CMD_ID;
const int TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_ARRAYSIZE = TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor();
inline const ::std::string& TriggerCreateGadgetToEquipPartNotify_CmdId_Name(TriggerCreateGadgetToEquipPartNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor(), value);
}
inline bool TriggerCreateGadgetToEquipPartNotify_CmdId_Parse(
    const ::std::string& name, TriggerCreateGadgetToEquipPartNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TriggerCreateGadgetToEquipPartNotify_CmdId>(
    TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor(), name, value);
}
enum EvtEntityRenderersChangedNotify_CmdId {
  EvtEntityRenderersChangedNotify_CmdId_NONE = 0,
  EvtEntityRenderersChangedNotify_CmdId_CMD_ID = 334,
  EvtEntityRenderersChangedNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtEntityRenderersChangedNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtEntityRenderersChangedNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtEntityRenderersChangedNotify_CmdId_EvtEntityRenderersChangedNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtEntityRenderersChangedNotify_CmdId_EvtEntityRenderersChangedNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtEntityRenderersChangedNotify_CmdId_IsValid(int value);
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify_CmdId_CmdId_MIN = EvtEntityRenderersChangedNotify_CmdId_NONE;
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify_CmdId_CmdId_MAX = EvtEntityRenderersChangedNotify_CmdId_CMD_ID;
const int EvtEntityRenderersChangedNotify_CmdId_CmdId_ARRAYSIZE = EvtEntityRenderersChangedNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtEntityRenderersChangedNotify_CmdId_descriptor();
inline const ::std::string& EvtEntityRenderersChangedNotify_CmdId_Name(EvtEntityRenderersChangedNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtEntityRenderersChangedNotify_CmdId_descriptor(), value);
}
inline bool EvtEntityRenderersChangedNotify_CmdId_Parse(
    const ::std::string& name, EvtEntityRenderersChangedNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtEntityRenderersChangedNotify_CmdId>(
    EvtEntityRenderersChangedNotify_CmdId_descriptor(), name, value);
}
enum AnimatorForceSetAirMoveNotify_CmdId {
  AnimatorForceSetAirMoveNotify_CmdId_NONE = 0,
  AnimatorForceSetAirMoveNotify_CmdId_CMD_ID = 335,
  AnimatorForceSetAirMoveNotify_CmdId_ENET_CHANNEL_ID = 0,
  AnimatorForceSetAirMoveNotify_CmdId_ENET_IS_RELIABLE = 1,
  AnimatorForceSetAirMoveNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AnimatorForceSetAirMoveNotify_CmdId_AnimatorForceSetAirMoveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AnimatorForceSetAirMoveNotify_CmdId_AnimatorForceSetAirMoveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AnimatorForceSetAirMoveNotify_CmdId_IsValid(int value);
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify_CmdId_CmdId_MIN = AnimatorForceSetAirMoveNotify_CmdId_NONE;
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify_CmdId_CmdId_MAX = AnimatorForceSetAirMoveNotify_CmdId_CMD_ID;
const int AnimatorForceSetAirMoveNotify_CmdId_CmdId_ARRAYSIZE = AnimatorForceSetAirMoveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AnimatorForceSetAirMoveNotify_CmdId_descriptor();
inline const ::std::string& AnimatorForceSetAirMoveNotify_CmdId_Name(AnimatorForceSetAirMoveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AnimatorForceSetAirMoveNotify_CmdId_descriptor(), value);
}
inline bool AnimatorForceSetAirMoveNotify_CmdId_Parse(
    const ::std::string& name, AnimatorForceSetAirMoveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AnimatorForceSetAirMoveNotify_CmdId>(
    AnimatorForceSetAirMoveNotify_CmdId_descriptor(), name, value);
}
enum EvtAiSyncSkillCdNotify_CmdId {
  EvtAiSyncSkillCdNotify_CmdId_NONE = 0,
  EvtAiSyncSkillCdNotify_CmdId_CMD_ID = 336,
  EvtAiSyncSkillCdNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAiSyncSkillCdNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAiSyncSkillCdNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAiSyncSkillCdNotify_CmdId_EvtAiSyncSkillCdNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAiSyncSkillCdNotify_CmdId_EvtAiSyncSkillCdNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAiSyncSkillCdNotify_CmdId_IsValid(int value);
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify_CmdId_CmdId_MIN = EvtAiSyncSkillCdNotify_CmdId_NONE;
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify_CmdId_CmdId_MAX = EvtAiSyncSkillCdNotify_CmdId_CMD_ID;
const int EvtAiSyncSkillCdNotify_CmdId_CmdId_ARRAYSIZE = EvtAiSyncSkillCdNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAiSyncSkillCdNotify_CmdId_descriptor();
inline const ::std::string& EvtAiSyncSkillCdNotify_CmdId_Name(EvtAiSyncSkillCdNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAiSyncSkillCdNotify_CmdId_descriptor(), value);
}
inline bool EvtAiSyncSkillCdNotify_CmdId_Parse(
    const ::std::string& name, EvtAiSyncSkillCdNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAiSyncSkillCdNotify_CmdId>(
    EvtAiSyncSkillCdNotify_CmdId_descriptor(), name, value);
}
enum EvtBeingHitsCombineNotify_CmdId {
  EvtBeingHitsCombineNotify_CmdId_NONE = 0,
  EvtBeingHitsCombineNotify_CmdId_CMD_ID = 337,
  EvtBeingHitsCombineNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtBeingHitsCombineNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtBeingHitsCombineNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtBeingHitsCombineNotify_CmdId_EvtBeingHitsCombineNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtBeingHitsCombineNotify_CmdId_EvtBeingHitsCombineNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtBeingHitsCombineNotify_CmdId_IsValid(int value);
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify_CmdId_CmdId_MIN = EvtBeingHitsCombineNotify_CmdId_NONE;
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify_CmdId_CmdId_MAX = EvtBeingHitsCombineNotify_CmdId_CMD_ID;
const int EvtBeingHitsCombineNotify_CmdId_CmdId_ARRAYSIZE = EvtBeingHitsCombineNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtBeingHitsCombineNotify_CmdId_descriptor();
inline const ::std::string& EvtBeingHitsCombineNotify_CmdId_Name(EvtBeingHitsCombineNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtBeingHitsCombineNotify_CmdId_descriptor(), value);
}
inline bool EvtBeingHitsCombineNotify_CmdId_Parse(
    const ::std::string& name, EvtBeingHitsCombineNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtBeingHitsCombineNotify_CmdId>(
    EvtBeingHitsCombineNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarSitDownNotify_CmdId {
  EvtAvatarSitDownNotify_CmdId_NONE = 0,
  EvtAvatarSitDownNotify_CmdId_CMD_ID = 341,
  EvtAvatarSitDownNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarSitDownNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarSitDownNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarSitDownNotify_CmdId_EvtAvatarSitDownNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarSitDownNotify_CmdId_EvtAvatarSitDownNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarSitDownNotify_CmdId_IsValid(int value);
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify_CmdId_CmdId_MIN = EvtAvatarSitDownNotify_CmdId_NONE;
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify_CmdId_CmdId_MAX = EvtAvatarSitDownNotify_CmdId_CMD_ID;
const int EvtAvatarSitDownNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarSitDownNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarSitDownNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarSitDownNotify_CmdId_Name(EvtAvatarSitDownNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarSitDownNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarSitDownNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarSitDownNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarSitDownNotify_CmdId>(
    EvtAvatarSitDownNotify_CmdId_descriptor(), name, value);
}
enum EvtAvatarStandUpNotify_CmdId {
  EvtAvatarStandUpNotify_CmdId_NONE = 0,
  EvtAvatarStandUpNotify_CmdId_CMD_ID = 342,
  EvtAvatarStandUpNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAvatarStandUpNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAvatarStandUpNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAvatarStandUpNotify_CmdId_EvtAvatarStandUpNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAvatarStandUpNotify_CmdId_EvtAvatarStandUpNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAvatarStandUpNotify_CmdId_IsValid(int value);
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify_CmdId_CmdId_MIN = EvtAvatarStandUpNotify_CmdId_NONE;
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify_CmdId_CmdId_MAX = EvtAvatarStandUpNotify_CmdId_CMD_ID;
const int EvtAvatarStandUpNotify_CmdId_CmdId_ARRAYSIZE = EvtAvatarStandUpNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAvatarStandUpNotify_CmdId_descriptor();
inline const ::std::string& EvtAvatarStandUpNotify_CmdId_Name(EvtAvatarStandUpNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAvatarStandUpNotify_CmdId_descriptor(), value);
}
inline bool EvtAvatarStandUpNotify_CmdId_Parse(
    const ::std::string& name, EvtAvatarStandUpNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAvatarStandUpNotify_CmdId>(
    EvtAvatarStandUpNotify_CmdId_descriptor(), name, value);
}
enum CreateMassiveEntityReq_CmdId {
  CreateMassiveEntityReq_CmdId_NONE = 0,
  CreateMassiveEntityReq_CmdId_CMD_ID = 343,
  CreateMassiveEntityReq_CmdId_ENET_CHANNEL_ID = 0,
  CreateMassiveEntityReq_CmdId_ENET_IS_RELIABLE = 1,
  CreateMassiveEntityReq_CmdId_IS_ALLOW_CLIENT = 1,
  CreateMassiveEntityReq_CmdId_CreateMassiveEntityReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateMassiveEntityReq_CmdId_CreateMassiveEntityReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateMassiveEntityReq_CmdId_IsValid(int value);
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq_CmdId_CmdId_MIN = CreateMassiveEntityReq_CmdId_NONE;
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq_CmdId_CmdId_MAX = CreateMassiveEntityReq_CmdId_CMD_ID;
const int CreateMassiveEntityReq_CmdId_CmdId_ARRAYSIZE = CreateMassiveEntityReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateMassiveEntityReq_CmdId_descriptor();
inline const ::std::string& CreateMassiveEntityReq_CmdId_Name(CreateMassiveEntityReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateMassiveEntityReq_CmdId_descriptor(), value);
}
inline bool CreateMassiveEntityReq_CmdId_Parse(
    const ::std::string& name, CreateMassiveEntityReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateMassiveEntityReq_CmdId>(
    CreateMassiveEntityReq_CmdId_descriptor(), name, value);
}
enum CreateMassiveEntityRsp_CmdId {
  CreateMassiveEntityRsp_CmdId_NONE = 0,
  CreateMassiveEntityRsp_CmdId_CMD_ID = 344,
  CreateMassiveEntityRsp_CmdId_ENET_CHANNEL_ID = 0,
  CreateMassiveEntityRsp_CmdId_ENET_IS_RELIABLE = 1,
  CreateMassiveEntityRsp_CmdId_CreateMassiveEntityRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateMassiveEntityRsp_CmdId_CreateMassiveEntityRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateMassiveEntityRsp_CmdId_IsValid(int value);
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp_CmdId_CmdId_MIN = CreateMassiveEntityRsp_CmdId_NONE;
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp_CmdId_CmdId_MAX = CreateMassiveEntityRsp_CmdId_CMD_ID;
const int CreateMassiveEntityRsp_CmdId_CmdId_ARRAYSIZE = CreateMassiveEntityRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateMassiveEntityRsp_CmdId_descriptor();
inline const ::std::string& CreateMassiveEntityRsp_CmdId_Name(CreateMassiveEntityRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateMassiveEntityRsp_CmdId_descriptor(), value);
}
inline bool CreateMassiveEntityRsp_CmdId_Parse(
    const ::std::string& name, CreateMassiveEntityRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateMassiveEntityRsp_CmdId>(
    CreateMassiveEntityRsp_CmdId_descriptor(), name, value);
}
enum CreateMassiveEntityNotify_CmdId {
  CreateMassiveEntityNotify_CmdId_NONE = 0,
  CreateMassiveEntityNotify_CmdId_CMD_ID = 345,
  CreateMassiveEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  CreateMassiveEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  CreateMassiveEntityNotify_CmdId_CreateMassiveEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateMassiveEntityNotify_CmdId_CreateMassiveEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateMassiveEntityNotify_CmdId_IsValid(int value);
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify_CmdId_CmdId_MIN = CreateMassiveEntityNotify_CmdId_NONE;
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify_CmdId_CmdId_MAX = CreateMassiveEntityNotify_CmdId_CMD_ID;
const int CreateMassiveEntityNotify_CmdId_CmdId_ARRAYSIZE = CreateMassiveEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateMassiveEntityNotify_CmdId_descriptor();
inline const ::std::string& CreateMassiveEntityNotify_CmdId_Name(CreateMassiveEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateMassiveEntityNotify_CmdId_descriptor(), value);
}
inline bool CreateMassiveEntityNotify_CmdId_Parse(
    const ::std::string& name, CreateMassiveEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateMassiveEntityNotify_CmdId>(
    CreateMassiveEntityNotify_CmdId_descriptor(), name, value);
}
enum DestroyMassiveEntityNotify_CmdId {
  DestroyMassiveEntityNotify_CmdId_NONE = 0,
  DestroyMassiveEntityNotify_CmdId_CMD_ID = 346,
  DestroyMassiveEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  DestroyMassiveEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  DestroyMassiveEntityNotify_CmdId_IS_ALLOW_CLIENT = 1,
  DestroyMassiveEntityNotify_CmdId_DestroyMassiveEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DestroyMassiveEntityNotify_CmdId_DestroyMassiveEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DestroyMassiveEntityNotify_CmdId_IsValid(int value);
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify_CmdId_CmdId_MIN = DestroyMassiveEntityNotify_CmdId_NONE;
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify_CmdId_CmdId_MAX = DestroyMassiveEntityNotify_CmdId_CMD_ID;
const int DestroyMassiveEntityNotify_CmdId_CmdId_ARRAYSIZE = DestroyMassiveEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DestroyMassiveEntityNotify_CmdId_descriptor();
inline const ::std::string& DestroyMassiveEntityNotify_CmdId_Name(DestroyMassiveEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DestroyMassiveEntityNotify_CmdId_descriptor(), value);
}
inline bool DestroyMassiveEntityNotify_CmdId_Parse(
    const ::std::string& name, DestroyMassiveEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DestroyMassiveEntityNotify_CmdId>(
    DestroyMassiveEntityNotify_CmdId_descriptor(), name, value);
}
enum MassiveEntityStateChangedNotify_CmdId {
  MassiveEntityStateChangedNotify_CmdId_NONE = 0,
  MassiveEntityStateChangedNotify_CmdId_CMD_ID = 347,
  MassiveEntityStateChangedNotify_CmdId_ENET_CHANNEL_ID = 0,
  MassiveEntityStateChangedNotify_CmdId_ENET_IS_RELIABLE = 1,
  MassiveEntityStateChangedNotify_CmdId_IS_ALLOW_CLIENT = 1,
  MassiveEntityStateChangedNotify_CmdId_MassiveEntityStateChangedNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MassiveEntityStateChangedNotify_CmdId_MassiveEntityStateChangedNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MassiveEntityStateChangedNotify_CmdId_IsValid(int value);
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify_CmdId_CmdId_MIN = MassiveEntityStateChangedNotify_CmdId_NONE;
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify_CmdId_CmdId_MAX = MassiveEntityStateChangedNotify_CmdId_CMD_ID;
const int MassiveEntityStateChangedNotify_CmdId_CmdId_ARRAYSIZE = MassiveEntityStateChangedNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MassiveEntityStateChangedNotify_CmdId_descriptor();
inline const ::std::string& MassiveEntityStateChangedNotify_CmdId_Name(MassiveEntityStateChangedNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MassiveEntityStateChangedNotify_CmdId_descriptor(), value);
}
inline bool MassiveEntityStateChangedNotify_CmdId_Parse(
    const ::std::string& name, MassiveEntityStateChangedNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MassiveEntityStateChangedNotify_CmdId>(
    MassiveEntityStateChangedNotify_CmdId_descriptor(), name, value);
}
enum SyncTeamEntityNotify_CmdId {
  SyncTeamEntityNotify_CmdId_NONE = 0,
  SyncTeamEntityNotify_CmdId_CMD_ID = 348,
  SyncTeamEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  SyncTeamEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  SyncTeamEntityNotify_CmdId_SyncTeamEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SyncTeamEntityNotify_CmdId_SyncTeamEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SyncTeamEntityNotify_CmdId_IsValid(int value);
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify_CmdId_CmdId_MIN = SyncTeamEntityNotify_CmdId_NONE;
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify_CmdId_CmdId_MAX = SyncTeamEntityNotify_CmdId_CMD_ID;
const int SyncTeamEntityNotify_CmdId_CmdId_ARRAYSIZE = SyncTeamEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SyncTeamEntityNotify_CmdId_descriptor();
inline const ::std::string& SyncTeamEntityNotify_CmdId_Name(SyncTeamEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SyncTeamEntityNotify_CmdId_descriptor(), value);
}
inline bool SyncTeamEntityNotify_CmdId_Parse(
    const ::std::string& name, SyncTeamEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SyncTeamEntityNotify_CmdId>(
    SyncTeamEntityNotify_CmdId_descriptor(), name, value);
}
enum DelTeamEntityNotify_CmdId {
  DelTeamEntityNotify_CmdId_NONE = 0,
  DelTeamEntityNotify_CmdId_CMD_ID = 349,
  DelTeamEntityNotify_CmdId_ENET_CHANNEL_ID = 0,
  DelTeamEntityNotify_CmdId_ENET_IS_RELIABLE = 1,
  DelTeamEntityNotify_CmdId_DelTeamEntityNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DelTeamEntityNotify_CmdId_DelTeamEntityNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DelTeamEntityNotify_CmdId_IsValid(int value);
const DelTeamEntityNotify_CmdId DelTeamEntityNotify_CmdId_CmdId_MIN = DelTeamEntityNotify_CmdId_NONE;
const DelTeamEntityNotify_CmdId DelTeamEntityNotify_CmdId_CmdId_MAX = DelTeamEntityNotify_CmdId_CMD_ID;
const int DelTeamEntityNotify_CmdId_CmdId_ARRAYSIZE = DelTeamEntityNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DelTeamEntityNotify_CmdId_descriptor();
inline const ::std::string& DelTeamEntityNotify_CmdId_Name(DelTeamEntityNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DelTeamEntityNotify_CmdId_descriptor(), value);
}
inline bool DelTeamEntityNotify_CmdId_Parse(
    const ::std::string& name, DelTeamEntityNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DelTeamEntityNotify_CmdId>(
    DelTeamEntityNotify_CmdId_descriptor(), name, value);
}
enum CombatInvocationsNotify_CmdId {
  CombatInvocationsNotify_CmdId_NONE = 0,
  CombatInvocationsNotify_CmdId_CMD_ID = 350,
  CombatInvocationsNotify_CmdId_ENET_CHANNEL_ID = 0,
  CombatInvocationsNotify_CmdId_ENET_IS_RELIABLE = 1,
  CombatInvocationsNotify_CmdId_IS_ALLOW_CLIENT = 1,
  CombatInvocationsNotify_CmdId_CombatInvocationsNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CombatInvocationsNotify_CmdId_CombatInvocationsNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CombatInvocationsNotify_CmdId_IsValid(int value);
const CombatInvocationsNotify_CmdId CombatInvocationsNotify_CmdId_CmdId_MIN = CombatInvocationsNotify_CmdId_NONE;
const CombatInvocationsNotify_CmdId CombatInvocationsNotify_CmdId_CmdId_MAX = CombatInvocationsNotify_CmdId_CMD_ID;
const int CombatInvocationsNotify_CmdId_CmdId_ARRAYSIZE = CombatInvocationsNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CombatInvocationsNotify_CmdId_descriptor();
inline const ::std::string& CombatInvocationsNotify_CmdId_Name(CombatInvocationsNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CombatInvocationsNotify_CmdId_descriptor(), value);
}
inline bool CombatInvocationsNotify_CmdId_Parse(
    const ::std::string& name, CombatInvocationsNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CombatInvocationsNotify_CmdId>(
    CombatInvocationsNotify_CmdId_descriptor(), name, value);
}
enum ServerBuffChangeNotify_CmdId {
  ServerBuffChangeNotify_CmdId_NONE = 0,
  ServerBuffChangeNotify_CmdId_CMD_ID = 351,
  ServerBuffChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  ServerBuffChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  ServerBuffChangeNotify_CmdId_ServerBuffChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerBuffChangeNotify_CmdId_ServerBuffChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerBuffChangeNotify_CmdId_IsValid(int value);
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify_CmdId_CmdId_MIN = ServerBuffChangeNotify_CmdId_NONE;
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify_CmdId_CmdId_MAX = ServerBuffChangeNotify_CmdId_CMD_ID;
const int ServerBuffChangeNotify_CmdId_CmdId_ARRAYSIZE = ServerBuffChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerBuffChangeNotify_CmdId_descriptor();
inline const ::std::string& ServerBuffChangeNotify_CmdId_Name(ServerBuffChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerBuffChangeNotify_CmdId_descriptor(), value);
}
inline bool ServerBuffChangeNotify_CmdId_Parse(
    const ::std::string& name, ServerBuffChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerBuffChangeNotify_CmdId>(
    ServerBuffChangeNotify_CmdId_descriptor(), name, value);
}
enum ServerBuffChangeNotify_ServerBuffChangeType {
  ServerBuffChangeNotify_ServerBuffChangeType_ADD_SERVER_BUFF = 0,
  ServerBuffChangeNotify_ServerBuffChangeType_DEL_SERVER_BUFF = 1,
  ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeNotify_ServerBuffChangeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeNotify_ServerBuffChangeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerBuffChangeNotify_ServerBuffChangeType_IsValid(int value);
const ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MIN = ServerBuffChangeNotify_ServerBuffChangeType_ADD_SERVER_BUFF;
const ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MAX = ServerBuffChangeNotify_ServerBuffChangeType_DEL_SERVER_BUFF;
const int ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_ARRAYSIZE = ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerBuffChangeNotify_ServerBuffChangeType_descriptor();
inline const ::std::string& ServerBuffChangeNotify_ServerBuffChangeType_Name(ServerBuffChangeNotify_ServerBuffChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerBuffChangeNotify_ServerBuffChangeType_descriptor(), value);
}
inline bool ServerBuffChangeNotify_ServerBuffChangeType_Parse(
    const ::std::string& name, ServerBuffChangeNotify_ServerBuffChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerBuffChangeNotify_ServerBuffChangeType>(
    ServerBuffChangeNotify_ServerBuffChangeType_descriptor(), name, value);
}
enum EvtAiSyncCombatThreatInfoNotify_CmdId {
  EvtAiSyncCombatThreatInfoNotify_CmdId_NONE = 0,
  EvtAiSyncCombatThreatInfoNotify_CmdId_CMD_ID = 352,
  EvtAiSyncCombatThreatInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  EvtAiSyncCombatThreatInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  EvtAiSyncCombatThreatInfoNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EvtAiSyncCombatThreatInfoNotify_CmdId_EvtAiSyncCombatThreatInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EvtAiSyncCombatThreatInfoNotify_CmdId_EvtAiSyncCombatThreatInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EvtAiSyncCombatThreatInfoNotify_CmdId_IsValid(int value);
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MIN = EvtAiSyncCombatThreatInfoNotify_CmdId_NONE;
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MAX = EvtAiSyncCombatThreatInfoNotify_CmdId_CMD_ID;
const int EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_ARRAYSIZE = EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor();
inline const ::std::string& EvtAiSyncCombatThreatInfoNotify_CmdId_Name(EvtAiSyncCombatThreatInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor(), value);
}
inline bool EvtAiSyncCombatThreatInfoNotify_CmdId_Parse(
    const ::std::string& name, EvtAiSyncCombatThreatInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EvtAiSyncCombatThreatInfoNotify_CmdId>(
    EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor(), name, value);
}
enum ForwardType {
  FORWARD_LOCAL = 0,
  FORWARD_TO_ALL = 1,
  FORWARD_TO_ALL_EXCEPT_CUR = 2,
  FORWARD_TO_HOST = 3,
  FORWARD_TO_ALL_GUEST = 4,
  FORWARD_TO_PEER = 5,
  FORWARD_TO_PEERS = 6,
  FORWARD_ONLY_SERVER = 7,
  FORWARD_TO_ALL_EXIST_EXCEPT_CUR = 8,
  ForwardType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ForwardType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ForwardType_IsValid(int value);
const ForwardType ForwardType_MIN = FORWARD_LOCAL;
const ForwardType ForwardType_MAX = FORWARD_TO_ALL_EXIST_EXCEPT_CUR;
const int ForwardType_ARRAYSIZE = ForwardType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ForwardType_descriptor();
inline const ::std::string& ForwardType_Name(ForwardType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ForwardType_descriptor(), value);
}
inline bool ForwardType_Parse(
    const ::std::string& name, ForwardType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ForwardType>(
    ForwardType_descriptor(), name, value);
}
enum HitColliderType {
  HIT_COLLIDER_INVALID = 0,
  HIT_COLLIDER_HIT_BOX = 1,
  HIT_COLLIDER_WET_HIT_BOX = 2,
  HIT_COLLIDER_HEAD_BOX = 3,
  HitColliderType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HitColliderType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HitColliderType_IsValid(int value);
const HitColliderType HitColliderType_MIN = HIT_COLLIDER_INVALID;
const HitColliderType HitColliderType_MAX = HIT_COLLIDER_HEAD_BOX;
const int HitColliderType_ARRAYSIZE = HitColliderType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HitColliderType_descriptor();
inline const ::std::string& HitColliderType_Name(HitColliderType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HitColliderType_descriptor(), value);
}
inline bool HitColliderType_Parse(
    const ::std::string& name, HitColliderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HitColliderType>(
    HitColliderType_descriptor(), name, value);
}
enum CombatTypeArgument {
  COMBAT_NONE = 0,
  COMBAT_EVT_BEING_HIT = 1,
  COMBAT_ANIMATOR_STATE_CHANGED = 2,
  COMBAT_FACE_TO_DIR = 3,
  COMBAT_SET_ATTACK_TARGET = 4,
  COMBAT_RUSH_MOVE = 5,
  COMBAT_ANIMATOR_PARAMETER_CHANGED = 6,
  CombatTypeArgument_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CombatTypeArgument_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CombatTypeArgument_IsValid(int value);
const CombatTypeArgument CombatTypeArgument_MIN = COMBAT_NONE;
const CombatTypeArgument CombatTypeArgument_MAX = COMBAT_ANIMATOR_PARAMETER_CHANGED;
const int CombatTypeArgument_ARRAYSIZE = CombatTypeArgument_MAX + 1;

const ::google::protobuf::EnumDescriptor* CombatTypeArgument_descriptor();
inline const ::std::string& CombatTypeArgument_Name(CombatTypeArgument value) {
  return ::google::protobuf::internal::NameOfEnum(
    CombatTypeArgument_descriptor(), value);
}
inline bool CombatTypeArgument_Parse(
    const ::std::string& name, CombatTypeArgument* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CombatTypeArgument>(
    CombatTypeArgument_descriptor(), name, value);
}
// ===================================================================

class HitCollision : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HitCollision) */ {
 public:
  HitCollision();
  virtual ~HitCollision();

  HitCollision(const HitCollision& from);

  inline HitCollision& operator=(const HitCollision& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HitCollision(HitCollision&& from) noexcept
    : HitCollision() {
    *this = ::std::move(from);
  }

  inline HitCollision& operator=(HitCollision&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HitCollision& default_instance();

  static inline const HitCollision* internal_default_instance() {
    return reinterpret_cast<const HitCollision*>(
               &_HitCollision_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HitCollision* other);
  friend void swap(HitCollision& a, HitCollision& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HitCollision* New() const PROTOBUF_FINAL { return New(NULL); }

  HitCollision* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HitCollision& from);
  void MergeFrom(const HitCollision& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HitCollision* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector hit_point = 3;
  bool has_hit_point() const;
  void clear_hit_point();
  static const int kHitPointFieldNumber = 3;
  const ::proto::Vector& hit_point() const;
  ::proto::Vector* mutable_hit_point();
  ::proto::Vector* release_hit_point();
  void set_allocated_hit_point(::proto::Vector* hit_point);

  // .proto.Vector hit_dir = 4;
  bool has_hit_dir() const;
  void clear_hit_dir();
  static const int kHitDirFieldNumber = 4;
  const ::proto::Vector& hit_dir() const;
  ::proto::Vector* mutable_hit_dir();
  ::proto::Vector* release_hit_dir();
  void set_allocated_hit_dir(::proto::Vector* hit_dir);

  // .proto.HitColliderType hit_collider_type = 1;
  void clear_hit_collider_type();
  static const int kHitColliderTypeFieldNumber = 1;
  ::proto::HitColliderType hit_collider_type() const;
  void set_hit_collider_type(::proto::HitColliderType value);

  // int32 hit_box_index = 2;
  void clear_hit_box_index();
  static const int kHitBoxIndexFieldNumber = 2;
  ::google::protobuf::int32 hit_box_index() const;
  void set_hit_box_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.HitCollision)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* hit_point_;
  ::proto::Vector* hit_dir_;
  int hit_collider_type_;
  ::google::protobuf::int32 hit_box_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AttackHitEffectResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AttackHitEffectResult) */ {
 public:
  AttackHitEffectResult();
  virtual ~AttackHitEffectResult();

  AttackHitEffectResult(const AttackHitEffectResult& from);

  inline AttackHitEffectResult& operator=(const AttackHitEffectResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AttackHitEffectResult(AttackHitEffectResult&& from) noexcept
    : AttackHitEffectResult() {
    *this = ::std::move(from);
  }

  inline AttackHitEffectResult& operator=(AttackHitEffectResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackHitEffectResult& default_instance();

  static inline const AttackHitEffectResult* internal_default_instance() {
    return reinterpret_cast<const AttackHitEffectResult*>(
               &_AttackHitEffectResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AttackHitEffectResult* other);
  friend void swap(AttackHitEffectResult& a, AttackHitEffectResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttackHitEffectResult* New() const PROTOBUF_FINAL { return New(NULL); }

  AttackHitEffectResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AttackHitEffectResult& from);
  void MergeFrom(const AttackHitEffectResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AttackHitEffectResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 hit_eff_level = 1;
  void clear_hit_eff_level();
  static const int kHitEffLevelFieldNumber = 1;
  ::google::protobuf::uint32 hit_eff_level() const;
  void set_hit_eff_level(::google::protobuf::uint32 value);

  // float retreat_strength = 2;
  void clear_retreat_strength();
  static const int kRetreatStrengthFieldNumber = 2;
  float retreat_strength() const;
  void set_retreat_strength(float value);

  // float air_strength = 3;
  void clear_air_strength();
  static const int kAirStrengthFieldNumber = 3;
  float air_strength() const;
  void set_air_strength(float value);

  // float hit_halt_time = 4;
  void clear_hit_halt_time();
  static const int kHitHaltTimeFieldNumber = 4;
  float hit_halt_time() const;
  void set_hit_halt_time(float value);

  // float hit_halt_time_scale = 5;
  void clear_hit_halt_time_scale();
  static const int kHitHaltTimeScaleFieldNumber = 5;
  float hit_halt_time_scale() const;
  void set_hit_halt_time_scale(float value);

  // @@protoc_insertion_point(class_scope:proto.AttackHitEffectResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 hit_eff_level_;
  float retreat_strength_;
  float air_strength_;
  float hit_halt_time_;
  float hit_halt_time_scale_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityIdentifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityIdentifier) */ {
 public:
  AbilityIdentifier();
  virtual ~AbilityIdentifier();

  AbilityIdentifier(const AbilityIdentifier& from);

  inline AbilityIdentifier& operator=(const AbilityIdentifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityIdentifier(AbilityIdentifier&& from) noexcept
    : AbilityIdentifier() {
    *this = ::std::move(from);
  }

  inline AbilityIdentifier& operator=(AbilityIdentifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityIdentifier& default_instance();

  static inline const AbilityIdentifier* internal_default_instance() {
    return reinterpret_cast<const AbilityIdentifier*>(
               &_AbilityIdentifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AbilityIdentifier* other);
  friend void swap(AbilityIdentifier& a, AbilityIdentifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityIdentifier* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityIdentifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityIdentifier& from);
  void MergeFrom(const AbilityIdentifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityIdentifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 instanced_ability_id = 1;
  void clear_instanced_ability_id();
  static const int kInstancedAbilityIdFieldNumber = 1;
  ::google::protobuf::uint32 instanced_ability_id() const;
  void set_instanced_ability_id(::google::protobuf::uint32 value);

  // uint32 ability_caster_id = 2;
  void clear_ability_caster_id();
  static const int kAbilityCasterIdFieldNumber = 2;
  ::google::protobuf::uint32 ability_caster_id() const;
  void set_ability_caster_id(::google::protobuf::uint32 value);

  // int32 local_id = 3;
  void clear_local_id();
  static const int kLocalIdFieldNumber = 3;
  ::google::protobuf::int32 local_id() const;
  void set_local_id(::google::protobuf::int32 value);

  // uint32 instanced_modifier_id = 4;
  void clear_instanced_modifier_id();
  static const int kInstancedModifierIdFieldNumber = 4;
  ::google::protobuf::uint32 instanced_modifier_id() const;
  void set_instanced_modifier_id(::google::protobuf::uint32 value);

  // uint32 modifier_owner_id = 5;
  void clear_modifier_owner_id();
  static const int kModifierOwnerIdFieldNumber = 5;
  ::google::protobuf::uint32 modifier_owner_id() const;
  void set_modifier_owner_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AbilityIdentifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 instanced_ability_id_;
  ::google::protobuf::uint32 ability_caster_id_;
  ::google::protobuf::int32 local_id_;
  ::google::protobuf::uint32 instanced_modifier_id_;
  ::google::protobuf::uint32 modifier_owner_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AttackResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AttackResult) */ {
 public:
  AttackResult();
  virtual ~AttackResult();

  AttackResult(const AttackResult& from);

  inline AttackResult& operator=(const AttackResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AttackResult(AttackResult&& from) noexcept
    : AttackResult() {
    *this = ::std::move(from);
  }

  inline AttackResult& operator=(AttackResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackResult& default_instance();

  static inline const AttackResult* internal_default_instance() {
    return reinterpret_cast<const AttackResult*>(
               &_AttackResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AttackResult* other);
  friend void swap(AttackResult& a, AttackResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AttackResult* New() const PROTOBUF_FINAL { return New(NULL); }

  AttackResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AttackResult& from);
  void MergeFrom(const AttackResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AttackResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string anim_event_id = 3;
  void clear_anim_event_id();
  static const int kAnimEventIdFieldNumber = 3;
  const ::std::string& anim_event_id() const;
  void set_anim_event_id(const ::std::string& value);
  #if LANG_CXX11
  void set_anim_event_id(::std::string&& value);
  #endif
  void set_anim_event_id(const char* value);
  void set_anim_event_id(const char* value, size_t size);
  ::std::string* mutable_anim_event_id();
  ::std::string* release_anim_event_id();
  void set_allocated_anim_event_id(::std::string* anim_event_id);

  // string attack_tag = 5;
  void clear_attack_tag();
  static const int kAttackTagFieldNumber = 5;
  const ::std::string& attack_tag() const;
  void set_attack_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_attack_tag(::std::string&& value);
  #endif
  void set_attack_tag(const char* value);
  void set_attack_tag(const char* value, size_t size);
  ::std::string* mutable_attack_tag();
  ::std::string* release_attack_tag();
  void set_allocated_attack_tag(::std::string* attack_tag);

  // string attenuation_tag = 25;
  void clear_attenuation_tag();
  static const int kAttenuationTagFieldNumber = 25;
  const ::std::string& attenuation_tag() const;
  void set_attenuation_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_attenuation_tag(::std::string&& value);
  #endif
  void set_attenuation_tag(const char* value);
  void set_attenuation_tag(const char* value, size_t size);
  ::std::string* mutable_attenuation_tag();
  ::std::string* release_attenuation_tag();
  void set_allocated_attenuation_tag(::std::string* attenuation_tag);

  // string attenuation_group = 29;
  void clear_attenuation_group();
  static const int kAttenuationGroupFieldNumber = 29;
  const ::std::string& attenuation_group() const;
  void set_attenuation_group(const ::std::string& value);
  #if LANG_CXX11
  void set_attenuation_group(::std::string&& value);
  #endif
  void set_attenuation_group(const char* value);
  void set_attenuation_group(const char* value, size_t size);
  ::std::string* mutable_attenuation_group();
  ::std::string* release_attenuation_group();
  void set_allocated_attenuation_group(::std::string* attenuation_group);

  // .proto.AbilityIdentifier ability_identifier = 4;
  bool has_ability_identifier() const;
  void clear_ability_identifier();
  static const int kAbilityIdentifierFieldNumber = 4;
  const ::proto::AbilityIdentifier& ability_identifier() const;
  ::proto::AbilityIdentifier* mutable_ability_identifier();
  ::proto::AbilityIdentifier* release_ability_identifier();
  void set_allocated_ability_identifier(::proto::AbilityIdentifier* ability_identifier);

  // .proto.HitCollision hit_collision = 8;
  bool has_hit_collision() const;
  void clear_hit_collision();
  static const int kHitCollisionFieldNumber = 8;
  const ::proto::HitCollision& hit_collision() const;
  ::proto::HitCollision* mutable_hit_collision();
  ::proto::HitCollision* release_hit_collision();
  void set_allocated_hit_collision(::proto::HitCollision* hit_collision);

  // .proto.Vector resolved_dir = 11;
  bool has_resolved_dir() const;
  void clear_resolved_dir();
  static const int kResolvedDirFieldNumber = 11;
  const ::proto::Vector& resolved_dir() const;
  ::proto::Vector* mutable_resolved_dir();
  ::proto::Vector* release_resolved_dir();
  void set_allocated_resolved_dir(::proto::Vector* resolved_dir);

  // .proto.AttackHitEffectResult hit_eff_result = 13;
  bool has_hit_eff_result() const;
  void clear_hit_eff_result();
  static const int kHitEffResultFieldNumber = 13;
  const ::proto::AttackHitEffectResult& hit_eff_result() const;
  ::proto::AttackHitEffectResult* mutable_hit_eff_result();
  ::proto::AttackHitEffectResult* release_hit_eff_result();
  void set_allocated_hit_eff_result(::proto::AttackHitEffectResult* hit_eff_result);

  // uint32 attacker_id = 1;
  void clear_attacker_id();
  static const int kAttackerIdFieldNumber = 1;
  ::google::protobuf::uint32 attacker_id() const;
  void set_attacker_id(::google::protobuf::uint32 value);

  // uint32 defense_id = 2;
  void clear_defense_id();
  static const int kDefenseIdFieldNumber = 2;
  ::google::protobuf::uint32 defense_id() const;
  void set_defense_id(::google::protobuf::uint32 value);

  // float damage = 6;
  void clear_damage();
  static const int kDamageFieldNumber = 6;
  float damage() const;
  void set_damage(float value);

  // uint32 hit_pos_type = 9;
  void clear_hit_pos_type();
  static const int kHitPosTypeFieldNumber = 9;
  ::google::protobuf::uint32 hit_pos_type() const;
  void set_hit_pos_type(::google::protobuf::uint32 value);

  // uint32 endure_break = 10;
  void clear_endure_break();
  static const int kEndureBreakFieldNumber = 10;
  ::google::protobuf::uint32 endure_break() const;
  void set_endure_break(::google::protobuf::uint32 value);

  // int32 hit_retreat_angle_compat = 12;
  void clear_hit_retreat_angle_compat();
  static const int kHitRetreatAngleCompatFieldNumber = 12;
  ::google::protobuf::int32 hit_retreat_angle_compat() const;
  void set_hit_retreat_angle_compat(::google::protobuf::int32 value);

  // uint32 element_type = 14;
  void clear_element_type();
  static const int kElementTypeFieldNumber = 14;
  ::google::protobuf::uint32 element_type() const;
  void set_element_type(::google::protobuf::uint32 value);

  // float damage_percentage = 15;
  void clear_damage_percentage();
  static const int kDamagePercentageFieldNumber = 15;
  float damage_percentage() const;
  void set_damage_percentage(float value);

  // float damage_extra = 16;
  void clear_damage_extra();
  static const int kDamageExtraFieldNumber = 16;
  float damage_extra() const;
  void set_damage_extra(float value);

  // float bonus_critical = 17;
  void clear_bonus_critical();
  static const int kBonusCriticalFieldNumber = 17;
  float bonus_critical() const;
  void set_bonus_critical(float value);

  // float bonus_critical_hurt = 18;
  void clear_bonus_critical_hurt();
  static const int kBonusCriticalHurtFieldNumber = 18;
  float bonus_critical_hurt() const;
  void set_bonus_critical_hurt(float value);

  // bool is_crit = 7;
  void clear_is_crit();
  static const int kIsCritFieldNumber = 7;
  bool is_crit() const;
  void set_is_crit(bool value);

  // bool use_gadget_damage_action = 19;
  void clear_use_gadget_damage_action();
  static const int kUseGadgetDamageActionFieldNumber = 19;
  bool use_gadget_damage_action() const;
  void set_use_gadget_damage_action(bool value);

  // bool is_resist_text = 22;
  void clear_is_resist_text();
  static const int kIsResistTextFieldNumber = 22;
  bool is_resist_text() const;
  void set_is_resist_text(bool value);

  // bool mute_element_hurt = 27;
  void clear_mute_element_hurt();
  static const int kMuteElementHurtFieldNumber = 27;
  bool mute_element_hurt() const;
  void set_mute_element_hurt(bool value);

  // uint32 gadget_damage_action_idx = 20;
  void clear_gadget_damage_action_idx();
  static const int kGadgetDamageActionIdxFieldNumber = 20;
  ::google::protobuf::uint32 gadget_damage_action_idx() const;
  void set_gadget_damage_action_idx(::google::protobuf::uint32 value);

  // uint32 strike_type = 21;
  void clear_strike_type();
  static const int kStrikeTypeFieldNumber = 21;
  ::google::protobuf::uint32 strike_type() const;
  void set_strike_type(::google::protobuf::uint32 value);

  // float critical_rand = 23;
  void clear_critical_rand();
  static const int kCriticalRandFieldNumber = 23;
  float critical_rand() const;
  void set_critical_rand(float value);

  // float element_amplify_rate = 24;
  void clear_element_amplify_rate();
  static const int kElementAmplifyRateFieldNumber = 24;
  float element_amplify_rate() const;
  void set_element_amplify_rate(float value);

  // float damage_shield = 26;
  void clear_damage_shield();
  static const int kDamageShieldFieldNumber = 26;
  float damage_shield() const;
  void set_damage_shield(float value);

  // bool true_damage = 28;
  void clear_true_damage();
  static const int kTrueDamageFieldNumber = 28;
  bool true_damage() const;
  void set_true_damage(bool value);

  // @@protoc_insertion_point(class_scope:proto.AttackResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr anim_event_id_;
  ::google::protobuf::internal::ArenaStringPtr attack_tag_;
  ::google::protobuf::internal::ArenaStringPtr attenuation_tag_;
  ::google::protobuf::internal::ArenaStringPtr attenuation_group_;
  ::proto::AbilityIdentifier* ability_identifier_;
  ::proto::HitCollision* hit_collision_;
  ::proto::Vector* resolved_dir_;
  ::proto::AttackHitEffectResult* hit_eff_result_;
  ::google::protobuf::uint32 attacker_id_;
  ::google::protobuf::uint32 defense_id_;
  float damage_;
  ::google::protobuf::uint32 hit_pos_type_;
  ::google::protobuf::uint32 endure_break_;
  ::google::protobuf::int32 hit_retreat_angle_compat_;
  ::google::protobuf::uint32 element_type_;
  float damage_percentage_;
  float damage_extra_;
  float bonus_critical_;
  float bonus_critical_hurt_;
  bool is_crit_;
  bool use_gadget_damage_action_;
  bool is_resist_text_;
  bool mute_element_hurt_;
  ::google::protobuf::uint32 gadget_damage_action_idx_;
  ::google::protobuf::uint32 strike_type_;
  float critical_rand_;
  float element_amplify_rate_;
  float damage_shield_;
  bool true_damage_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBeingHitInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBeingHitInfo) */ {
 public:
  EvtBeingHitInfo();
  virtual ~EvtBeingHitInfo();

  EvtBeingHitInfo(const EvtBeingHitInfo& from);

  inline EvtBeingHitInfo& operator=(const EvtBeingHitInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBeingHitInfo(EvtBeingHitInfo&& from) noexcept
    : EvtBeingHitInfo() {
    *this = ::std::move(from);
  }

  inline EvtBeingHitInfo& operator=(EvtBeingHitInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBeingHitInfo& default_instance();

  static inline const EvtBeingHitInfo* internal_default_instance() {
    return reinterpret_cast<const EvtBeingHitInfo*>(
               &_EvtBeingHitInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(EvtBeingHitInfo* other);
  friend void swap(EvtBeingHitInfo& a, EvtBeingHitInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBeingHitInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBeingHitInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBeingHitInfo& from);
  void MergeFrom(const EvtBeingHitInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBeingHitInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AttackResult attack_result = 2;
  bool has_attack_result() const;
  void clear_attack_result();
  static const int kAttackResultFieldNumber = 2;
  const ::proto::AttackResult& attack_result() const;
  ::proto::AttackResult* mutable_attack_result();
  ::proto::AttackResult* release_attack_result();
  void set_allocated_attack_result(::proto::AttackResult* attack_result);

  // uint32 peer_id = 1;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 1;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtBeingHitInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AttackResult* attack_result_;
  ::google::protobuf::uint32 peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBeingHitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBeingHitNotify) */ {
 public:
  EvtBeingHitNotify();
  virtual ~EvtBeingHitNotify();

  EvtBeingHitNotify(const EvtBeingHitNotify& from);

  inline EvtBeingHitNotify& operator=(const EvtBeingHitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBeingHitNotify(EvtBeingHitNotify&& from) noexcept
    : EvtBeingHitNotify() {
    *this = ::std::move(from);
  }

  inline EvtBeingHitNotify& operator=(EvtBeingHitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBeingHitNotify& default_instance();

  static inline const EvtBeingHitNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBeingHitNotify*>(
               &_EvtBeingHitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(EvtBeingHitNotify* other);
  friend void swap(EvtBeingHitNotify& a, EvtBeingHitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBeingHitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBeingHitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBeingHitNotify& from);
  void MergeFrom(const EvtBeingHitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBeingHitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBeingHitNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBeingHitNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBeingHitNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBeingHitNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBeingHitNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBeingHitNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBeingHitNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBeingHitNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBeingHitNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBeingHitNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBeingHitNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBeingHitNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBeingHitNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtBeingHitInfo being_hit_info = 2;
  bool has_being_hit_info() const;
  void clear_being_hit_info();
  static const int kBeingHitInfoFieldNumber = 2;
  const ::proto::EvtBeingHitInfo& being_hit_info() const;
  ::proto::EvtBeingHitInfo* mutable_being_hit_info();
  ::proto::EvtBeingHitInfo* release_being_hit_info();
  void set_allocated_being_hit_info(::proto::EvtBeingHitInfo* being_hit_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtBeingHitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtBeingHitInfo* being_hit_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAnimatorParameterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAnimatorParameterInfo) */ {
 public:
  EvtAnimatorParameterInfo();
  virtual ~EvtAnimatorParameterInfo();

  EvtAnimatorParameterInfo(const EvtAnimatorParameterInfo& from);

  inline EvtAnimatorParameterInfo& operator=(const EvtAnimatorParameterInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAnimatorParameterInfo(EvtAnimatorParameterInfo&& from) noexcept
    : EvtAnimatorParameterInfo() {
    *this = ::std::move(from);
  }

  inline EvtAnimatorParameterInfo& operator=(EvtAnimatorParameterInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAnimatorParameterInfo& default_instance();

  static inline const EvtAnimatorParameterInfo* internal_default_instance() {
    return reinterpret_cast<const EvtAnimatorParameterInfo*>(
               &_EvtAnimatorParameterInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(EvtAnimatorParameterInfo* other);
  friend void swap(EvtAnimatorParameterInfo& a, EvtAnimatorParameterInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAnimatorParameterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAnimatorParameterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAnimatorParameterInfo& from);
  void MergeFrom(const EvtAnimatorParameterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAnimatorParameterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AnimatorParameterValueInfo value = 4;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::proto::AnimatorParameterValueInfo& value() const;
  ::proto::AnimatorParameterValueInfo* mutable_value();
  ::proto::AnimatorParameterValueInfo* release_value();
  void set_allocated_value(::proto::AnimatorParameterValueInfo* value);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // int32 name_id = 2;
  void clear_name_id();
  static const int kNameIdFieldNumber = 2;
  ::google::protobuf::int32 name_id() const;
  void set_name_id(::google::protobuf::int32 value);

  // bool is_server_cache = 3;
  void clear_is_server_cache();
  static const int kIsServerCacheFieldNumber = 3;
  bool is_server_cache() const;
  void set_is_server_cache(bool value);

  // @@protoc_insertion_point(class_scope:proto.EvtAnimatorParameterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AnimatorParameterValueInfo* value_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::int32 name_id_;
  bool is_server_cache_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAnimatorParameterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAnimatorParameterNotify) */ {
 public:
  EvtAnimatorParameterNotify();
  virtual ~EvtAnimatorParameterNotify();

  EvtAnimatorParameterNotify(const EvtAnimatorParameterNotify& from);

  inline EvtAnimatorParameterNotify& operator=(const EvtAnimatorParameterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAnimatorParameterNotify(EvtAnimatorParameterNotify&& from) noexcept
    : EvtAnimatorParameterNotify() {
    *this = ::std::move(from);
  }

  inline EvtAnimatorParameterNotify& operator=(EvtAnimatorParameterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAnimatorParameterNotify& default_instance();

  static inline const EvtAnimatorParameterNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAnimatorParameterNotify*>(
               &_EvtAnimatorParameterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(EvtAnimatorParameterNotify* other);
  friend void swap(EvtAnimatorParameterNotify& a, EvtAnimatorParameterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAnimatorParameterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAnimatorParameterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAnimatorParameterNotify& from);
  void MergeFrom(const EvtAnimatorParameterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAnimatorParameterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAnimatorParameterNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAnimatorParameterNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAnimatorParameterNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAnimatorParameterNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAnimatorParameterNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAnimatorParameterNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAnimatorParameterNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAnimatorParameterNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAnimatorParameterNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAnimatorParameterNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAnimatorParameterNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAnimatorParameterNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAnimatorParameterNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtAnimatorParameterInfo animator_param_info = 2;
  bool has_animator_param_info() const;
  void clear_animator_param_info();
  static const int kAnimatorParamInfoFieldNumber = 2;
  const ::proto::EvtAnimatorParameterInfo& animator_param_info() const;
  ::proto::EvtAnimatorParameterInfo* mutable_animator_param_info();
  ::proto::EvtAnimatorParameterInfo* release_animator_param_info();
  void set_allocated_animator_param_info(::proto::EvtAnimatorParameterInfo* animator_param_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtAnimatorParameterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtAnimatorParameterInfo* animator_param_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AbilityArgument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AbilityArgument) */ {
 public:
  AbilityArgument();
  virtual ~AbilityArgument();

  AbilityArgument(const AbilityArgument& from);

  inline AbilityArgument& operator=(const AbilityArgument& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AbilityArgument(AbilityArgument&& from) noexcept
    : AbilityArgument() {
    *this = ::std::move(from);
  }

  inline AbilityArgument& operator=(AbilityArgument&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AbilityArgument& default_instance();

  enum ArgCase {
    kIntArg = 1,
    kFloatArg = 2,
    kStrArg = 3,
    ARG_NOT_SET = 0,
  };

  static inline const AbilityArgument* internal_default_instance() {
    return reinterpret_cast<const AbilityArgument*>(
               &_AbilityArgument_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AbilityArgument* other);
  friend void swap(AbilityArgument& a, AbilityArgument& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AbilityArgument* New() const PROTOBUF_FINAL { return New(NULL); }

  AbilityArgument* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AbilityArgument& from);
  void MergeFrom(const AbilityArgument& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AbilityArgument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 int_arg = 1;
  private:
  bool has_int_arg() const;
  public:
  void clear_int_arg();
  static const int kIntArgFieldNumber = 1;
  ::google::protobuf::uint32 int_arg() const;
  void set_int_arg(::google::protobuf::uint32 value);

  // float float_arg = 2;
  private:
  bool has_float_arg() const;
  public:
  void clear_float_arg();
  static const int kFloatArgFieldNumber = 2;
  float float_arg() const;
  void set_float_arg(float value);

  // string str_arg = 3;
  private:
  bool has_str_arg() const;
  public:
  void clear_str_arg();
  static const int kStrArgFieldNumber = 3;
  const ::std::string& str_arg() const;
  void set_str_arg(const ::std::string& value);
  #if LANG_CXX11
  void set_str_arg(::std::string&& value);
  #endif
  void set_str_arg(const char* value);
  void set_str_arg(const char* value, size_t size);
  ::std::string* mutable_str_arg();
  ::std::string* release_str_arg();
  void set_allocated_str_arg(::std::string* str_arg);

  ArgCase arg_case() const;
  // @@protoc_insertion_point(class_scope:proto.AbilityArgument)
 private:
  void set_has_int_arg();
  void set_has_float_arg();
  void set_has_str_arg();

  inline bool has_arg() const;
  void clear_arg();
  inline void clear_has_arg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union ArgUnion {
    ArgUnion() {}
    ::google::protobuf::uint32 int_arg_;
    float float_arg_;
    ::google::protobuf::internal::ArenaStringPtr str_arg_;
  } arg_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HostPlayerNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HostPlayerNotify) */ {
 public:
  HostPlayerNotify();
  virtual ~HostPlayerNotify();

  HostPlayerNotify(const HostPlayerNotify& from);

  inline HostPlayerNotify& operator=(const HostPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HostPlayerNotify(HostPlayerNotify&& from) noexcept
    : HostPlayerNotify() {
    *this = ::std::move(from);
  }

  inline HostPlayerNotify& operator=(HostPlayerNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HostPlayerNotify& default_instance();

  static inline const HostPlayerNotify* internal_default_instance() {
    return reinterpret_cast<const HostPlayerNotify*>(
               &_HostPlayerNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(HostPlayerNotify* other);
  friend void swap(HostPlayerNotify& a, HostPlayerNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HostPlayerNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HostPlayerNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HostPlayerNotify& from);
  void MergeFrom(const HostPlayerNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HostPlayerNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HostPlayerNotify_CmdId CmdId;
  static const CmdId NONE =
    HostPlayerNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    HostPlayerNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HostPlayerNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HostPlayerNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return HostPlayerNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HostPlayerNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HostPlayerNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HostPlayerNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HostPlayerNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HostPlayerNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HostPlayerNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 host_uid = 1;
  void clear_host_uid();
  static const int kHostUidFieldNumber = 1;
  ::google::protobuf::uint32 host_uid() const;
  void set_host_uid(::google::protobuf::uint32 value);

  // uint32 host_peer_id = 2;
  void clear_host_peer_id();
  static const int kHostPeerIdFieldNumber = 2;
  ::google::protobuf::uint32 host_peer_id() const;
  void set_host_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HostPlayerNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 host_uid_;
  ::google::protobuf::uint32 host_peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtDoSkillSuccNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtDoSkillSuccNotify) */ {
 public:
  EvtDoSkillSuccNotify();
  virtual ~EvtDoSkillSuccNotify();

  EvtDoSkillSuccNotify(const EvtDoSkillSuccNotify& from);

  inline EvtDoSkillSuccNotify& operator=(const EvtDoSkillSuccNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtDoSkillSuccNotify(EvtDoSkillSuccNotify&& from) noexcept
    : EvtDoSkillSuccNotify() {
    *this = ::std::move(from);
  }

  inline EvtDoSkillSuccNotify& operator=(EvtDoSkillSuccNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtDoSkillSuccNotify& default_instance();

  static inline const EvtDoSkillSuccNotify* internal_default_instance() {
    return reinterpret_cast<const EvtDoSkillSuccNotify*>(
               &_EvtDoSkillSuccNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(EvtDoSkillSuccNotify* other);
  friend void swap(EvtDoSkillSuccNotify& a, EvtDoSkillSuccNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtDoSkillSuccNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtDoSkillSuccNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtDoSkillSuccNotify& from);
  void MergeFrom(const EvtDoSkillSuccNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtDoSkillSuccNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtDoSkillSuccNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtDoSkillSuccNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtDoSkillSuccNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtDoSkillSuccNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtDoSkillSuccNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtDoSkillSuccNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtDoSkillSuccNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtDoSkillSuccNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtDoSkillSuccNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtDoSkillSuccNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtDoSkillSuccNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtDoSkillSuccNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtDoSkillSuccNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector forward = 4;
  bool has_forward() const;
  void clear_forward();
  static const int kForwardFieldNumber = 4;
  const ::proto::Vector& forward() const;
  ::proto::Vector* mutable_forward();
  ::proto::Vector* release_forward();
  void set_allocated_forward(::proto::Vector* forward);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 caster_id = 2;
  void clear_caster_id();
  static const int kCasterIdFieldNumber = 2;
  ::google::protobuf::uint32 caster_id() const;
  void set_caster_id(::google::protobuf::uint32 value);

  // uint32 skill_id = 3;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 3;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtDoSkillSuccNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* forward_;
  int forward_type_;
  ::google::protobuf::uint32 caster_id_;
  ::google::protobuf::uint32 skill_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtCreateGadgetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtCreateGadgetNotify) */ {
 public:
  EvtCreateGadgetNotify();
  virtual ~EvtCreateGadgetNotify();

  EvtCreateGadgetNotify(const EvtCreateGadgetNotify& from);

  inline EvtCreateGadgetNotify& operator=(const EvtCreateGadgetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtCreateGadgetNotify(EvtCreateGadgetNotify&& from) noexcept
    : EvtCreateGadgetNotify() {
    *this = ::std::move(from);
  }

  inline EvtCreateGadgetNotify& operator=(EvtCreateGadgetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtCreateGadgetNotify& default_instance();

  static inline const EvtCreateGadgetNotify* internal_default_instance() {
    return reinterpret_cast<const EvtCreateGadgetNotify*>(
               &_EvtCreateGadgetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(EvtCreateGadgetNotify* other);
  friend void swap(EvtCreateGadgetNotify& a, EvtCreateGadgetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtCreateGadgetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtCreateGadgetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtCreateGadgetNotify& from);
  void MergeFrom(const EvtCreateGadgetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtCreateGadgetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtCreateGadgetNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtCreateGadgetNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtCreateGadgetNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtCreateGadgetNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtCreateGadgetNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtCreateGadgetNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtCreateGadgetNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtCreateGadgetNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtCreateGadgetNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtCreateGadgetNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtCreateGadgetNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtCreateGadgetNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtCreateGadgetNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector init_pos = 6;
  bool has_init_pos() const;
  void clear_init_pos();
  static const int kInitPosFieldNumber = 6;
  const ::proto::Vector& init_pos() const;
  ::proto::Vector* mutable_init_pos();
  ::proto::Vector* release_init_pos();
  void set_allocated_init_pos(::proto::Vector* init_pos);

  // .proto.Vector init_euler_angles = 7;
  bool has_init_euler_angles() const;
  void clear_init_euler_angles();
  static const int kInitEulerAnglesFieldNumber = 7;
  const ::proto::Vector& init_euler_angles() const;
  ::proto::Vector* mutable_init_euler_angles();
  ::proto::Vector* release_init_euler_angles();
  void set_allocated_init_euler_angles(::proto::Vector* init_euler_angles);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 config_id = 3;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 camp_id = 4;
  void clear_camp_id();
  static const int kCampIdFieldNumber = 4;
  ::google::protobuf::uint32 camp_id() const;
  void set_camp_id(::google::protobuf::uint32 value);

  // uint32 camp_type = 5;
  void clear_camp_type();
  static const int kCampTypeFieldNumber = 5;
  ::google::protobuf::uint32 camp_type() const;
  void set_camp_type(::google::protobuf::uint32 value);

  // uint32 owner_entity_id = 9;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 9;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // uint64 guid = 8;
  void clear_guid();
  static const int kGuidFieldNumber = 8;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // uint32 target_entity_id = 10;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 10;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // bool is_async_load = 11;
  void clear_is_async_load();
  static const int kIsAsyncLoadFieldNumber = 11;
  bool is_async_load() const;
  void set_is_async_load(bool value);

  // uint32 target_lock_point_index = 12;
  void clear_target_lock_point_index();
  static const int kTargetLockPointIndexFieldNumber = 12;
  ::google::protobuf::uint32 target_lock_point_index() const;
  void set_target_lock_point_index(::google::protobuf::uint32 value);

  // uint32 room_id = 13;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 13;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtCreateGadgetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* init_pos_;
  ::proto::Vector* init_euler_angles_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 camp_id_;
  ::google::protobuf::uint32 camp_type_;
  ::google::protobuf::uint32 owner_entity_id_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint32 target_entity_id_;
  bool is_async_load_;
  ::google::protobuf::uint32 target_lock_point_index_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtDestroyGadgetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtDestroyGadgetNotify) */ {
 public:
  EvtDestroyGadgetNotify();
  virtual ~EvtDestroyGadgetNotify();

  EvtDestroyGadgetNotify(const EvtDestroyGadgetNotify& from);

  inline EvtDestroyGadgetNotify& operator=(const EvtDestroyGadgetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtDestroyGadgetNotify(EvtDestroyGadgetNotify&& from) noexcept
    : EvtDestroyGadgetNotify() {
    *this = ::std::move(from);
  }

  inline EvtDestroyGadgetNotify& operator=(EvtDestroyGadgetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtDestroyGadgetNotify& default_instance();

  static inline const EvtDestroyGadgetNotify* internal_default_instance() {
    return reinterpret_cast<const EvtDestroyGadgetNotify*>(
               &_EvtDestroyGadgetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(EvtDestroyGadgetNotify* other);
  friend void swap(EvtDestroyGadgetNotify& a, EvtDestroyGadgetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtDestroyGadgetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtDestroyGadgetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtDestroyGadgetNotify& from);
  void MergeFrom(const EvtDestroyGadgetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtDestroyGadgetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtDestroyGadgetNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtDestroyGadgetNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtDestroyGadgetNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtDestroyGadgetNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtDestroyGadgetNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtDestroyGadgetNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtDestroyGadgetNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtDestroyGadgetNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtDestroyGadgetNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtDestroyGadgetNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtDestroyGadgetNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtDestroyGadgetNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtDestroyGadgetNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtDestroyGadgetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtFaceToEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtFaceToEntityNotify) */ {
 public:
  EvtFaceToEntityNotify();
  virtual ~EvtFaceToEntityNotify();

  EvtFaceToEntityNotify(const EvtFaceToEntityNotify& from);

  inline EvtFaceToEntityNotify& operator=(const EvtFaceToEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtFaceToEntityNotify(EvtFaceToEntityNotify&& from) noexcept
    : EvtFaceToEntityNotify() {
    *this = ::std::move(from);
  }

  inline EvtFaceToEntityNotify& operator=(EvtFaceToEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtFaceToEntityNotify& default_instance();

  static inline const EvtFaceToEntityNotify* internal_default_instance() {
    return reinterpret_cast<const EvtFaceToEntityNotify*>(
               &_EvtFaceToEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(EvtFaceToEntityNotify* other);
  friend void swap(EvtFaceToEntityNotify& a, EvtFaceToEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtFaceToEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtFaceToEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtFaceToEntityNotify& from);
  void MergeFrom(const EvtFaceToEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtFaceToEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtFaceToEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtFaceToEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtFaceToEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtFaceToEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtFaceToEntityNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtFaceToEntityNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtFaceToEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtFaceToEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtFaceToEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtFaceToEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtFaceToEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtFaceToEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtFaceToEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 face_entity_id = 3;
  void clear_face_entity_id();
  static const int kFaceEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 face_entity_id() const;
  void set_face_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtFaceToEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 face_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtFaceToDirInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtFaceToDirInfo) */ {
 public:
  EvtFaceToDirInfo();
  virtual ~EvtFaceToDirInfo();

  EvtFaceToDirInfo(const EvtFaceToDirInfo& from);

  inline EvtFaceToDirInfo& operator=(const EvtFaceToDirInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtFaceToDirInfo(EvtFaceToDirInfo&& from) noexcept
    : EvtFaceToDirInfo() {
    *this = ::std::move(from);
  }

  inline EvtFaceToDirInfo& operator=(EvtFaceToDirInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtFaceToDirInfo& default_instance();

  static inline const EvtFaceToDirInfo* internal_default_instance() {
    return reinterpret_cast<const EvtFaceToDirInfo*>(
               &_EvtFaceToDirInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(EvtFaceToDirInfo* other);
  friend void swap(EvtFaceToDirInfo& a, EvtFaceToDirInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtFaceToDirInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtFaceToDirInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtFaceToDirInfo& from);
  void MergeFrom(const EvtFaceToDirInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtFaceToDirInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector face_dir = 2;
  bool has_face_dir() const;
  void clear_face_dir();
  static const int kFaceDirFieldNumber = 2;
  const ::proto::Vector& face_dir() const;
  ::proto::Vector* mutable_face_dir();
  ::proto::Vector* release_face_dir();
  void set_allocated_face_dir(::proto::Vector* face_dir);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtFaceToDirInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* face_dir_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtFaceToDirNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtFaceToDirNotify) */ {
 public:
  EvtFaceToDirNotify();
  virtual ~EvtFaceToDirNotify();

  EvtFaceToDirNotify(const EvtFaceToDirNotify& from);

  inline EvtFaceToDirNotify& operator=(const EvtFaceToDirNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtFaceToDirNotify(EvtFaceToDirNotify&& from) noexcept
    : EvtFaceToDirNotify() {
    *this = ::std::move(from);
  }

  inline EvtFaceToDirNotify& operator=(EvtFaceToDirNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtFaceToDirNotify& default_instance();

  static inline const EvtFaceToDirNotify* internal_default_instance() {
    return reinterpret_cast<const EvtFaceToDirNotify*>(
               &_EvtFaceToDirNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(EvtFaceToDirNotify* other);
  friend void swap(EvtFaceToDirNotify& a, EvtFaceToDirNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtFaceToDirNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtFaceToDirNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtFaceToDirNotify& from);
  void MergeFrom(const EvtFaceToDirNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtFaceToDirNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtFaceToDirNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtFaceToDirNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtFaceToDirNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtFaceToDirNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtFaceToDirNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtFaceToDirNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtFaceToDirNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtFaceToDirNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtFaceToDirNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtFaceToDirNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtFaceToDirNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtFaceToDirNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtFaceToDirNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtFaceToDirInfo evt_face_to_dir_info = 2;
  bool has_evt_face_to_dir_info() const;
  void clear_evt_face_to_dir_info();
  static const int kEvtFaceToDirInfoFieldNumber = 2;
  const ::proto::EvtFaceToDirInfo& evt_face_to_dir_info() const;
  ::proto::EvtFaceToDirInfo* mutable_evt_face_to_dir_info();
  ::proto::EvtFaceToDirInfo* release_evt_face_to_dir_info();
  void set_allocated_evt_face_to_dir_info(::proto::EvtFaceToDirInfo* evt_face_to_dir_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtFaceToDirNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtFaceToDirInfo* evt_face_to_dir_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtCostStaminaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtCostStaminaNotify) */ {
 public:
  EvtCostStaminaNotify();
  virtual ~EvtCostStaminaNotify();

  EvtCostStaminaNotify(const EvtCostStaminaNotify& from);

  inline EvtCostStaminaNotify& operator=(const EvtCostStaminaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtCostStaminaNotify(EvtCostStaminaNotify&& from) noexcept
    : EvtCostStaminaNotify() {
    *this = ::std::move(from);
  }

  inline EvtCostStaminaNotify& operator=(EvtCostStaminaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtCostStaminaNotify& default_instance();

  static inline const EvtCostStaminaNotify* internal_default_instance() {
    return reinterpret_cast<const EvtCostStaminaNotify*>(
               &_EvtCostStaminaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(EvtCostStaminaNotify* other);
  friend void swap(EvtCostStaminaNotify& a, EvtCostStaminaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtCostStaminaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtCostStaminaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtCostStaminaNotify& from);
  void MergeFrom(const EvtCostStaminaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtCostStaminaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtCostStaminaNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtCostStaminaNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtCostStaminaNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtCostStaminaNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtCostStaminaNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtCostStaminaNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtCostStaminaNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtCostStaminaNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtCostStaminaNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtCostStaminaNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtCostStaminaNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtCostStaminaNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtCostStaminaNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // float cost_stamina = 1;
  void clear_cost_stamina();
  static const int kCostStaminaFieldNumber = 1;
  float cost_stamina() const;
  void set_cost_stamina(float value);

  // uint32 skill_id = 2;
  void clear_skill_id();
  static const int kSkillIdFieldNumber = 2;
  ::google::protobuf::uint32 skill_id() const;
  void set_skill_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtCostStaminaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float cost_stamina_;
  ::google::protobuf::uint32 skill_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtSetAttackTargetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtSetAttackTargetInfo) */ {
 public:
  EvtSetAttackTargetInfo();
  virtual ~EvtSetAttackTargetInfo();

  EvtSetAttackTargetInfo(const EvtSetAttackTargetInfo& from);

  inline EvtSetAttackTargetInfo& operator=(const EvtSetAttackTargetInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtSetAttackTargetInfo(EvtSetAttackTargetInfo&& from) noexcept
    : EvtSetAttackTargetInfo() {
    *this = ::std::move(from);
  }

  inline EvtSetAttackTargetInfo& operator=(EvtSetAttackTargetInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtSetAttackTargetInfo& default_instance();

  static inline const EvtSetAttackTargetInfo* internal_default_instance() {
    return reinterpret_cast<const EvtSetAttackTargetInfo*>(
               &_EvtSetAttackTargetInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(EvtSetAttackTargetInfo* other);
  friend void swap(EvtSetAttackTargetInfo& a, EvtSetAttackTargetInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtSetAttackTargetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtSetAttackTargetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtSetAttackTargetInfo& from);
  void MergeFrom(const EvtSetAttackTargetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtSetAttackTargetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 attack_target_id = 2;
  void clear_attack_target_id();
  static const int kAttackTargetIdFieldNumber = 2;
  ::google::protobuf::uint32 attack_target_id() const;
  void set_attack_target_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtSetAttackTargetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 attack_target_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtSetAttackTargetNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtSetAttackTargetNotify) */ {
 public:
  EvtSetAttackTargetNotify();
  virtual ~EvtSetAttackTargetNotify();

  EvtSetAttackTargetNotify(const EvtSetAttackTargetNotify& from);

  inline EvtSetAttackTargetNotify& operator=(const EvtSetAttackTargetNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtSetAttackTargetNotify(EvtSetAttackTargetNotify&& from) noexcept
    : EvtSetAttackTargetNotify() {
    *this = ::std::move(from);
  }

  inline EvtSetAttackTargetNotify& operator=(EvtSetAttackTargetNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtSetAttackTargetNotify& default_instance();

  static inline const EvtSetAttackTargetNotify* internal_default_instance() {
    return reinterpret_cast<const EvtSetAttackTargetNotify*>(
               &_EvtSetAttackTargetNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(EvtSetAttackTargetNotify* other);
  friend void swap(EvtSetAttackTargetNotify& a, EvtSetAttackTargetNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtSetAttackTargetNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtSetAttackTargetNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtSetAttackTargetNotify& from);
  void MergeFrom(const EvtSetAttackTargetNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtSetAttackTargetNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtSetAttackTargetNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtSetAttackTargetNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtSetAttackTargetNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtSetAttackTargetNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtSetAttackTargetNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtSetAttackTargetNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtSetAttackTargetNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtSetAttackTargetNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtSetAttackTargetNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtSetAttackTargetNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtSetAttackTargetNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtSetAttackTargetNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtSetAttackTargetNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtSetAttackTargetInfo evt_set_attack_target_info = 2;
  bool has_evt_set_attack_target_info() const;
  void clear_evt_set_attack_target_info();
  static const int kEvtSetAttackTargetInfoFieldNumber = 2;
  const ::proto::EvtSetAttackTargetInfo& evt_set_attack_target_info() const;
  ::proto::EvtSetAttackTargetInfo* mutable_evt_set_attack_target_info();
  ::proto::EvtSetAttackTargetInfo* release_evt_set_attack_target_info();
  void set_allocated_evt_set_attack_target_info(::proto::EvtSetAttackTargetInfo* evt_set_attack_target_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtSetAttackTargetNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtSetAttackTargetInfo* evt_set_attack_target_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAnimatorStateChangedInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAnimatorStateChangedInfo) */ {
 public:
  EvtAnimatorStateChangedInfo();
  virtual ~EvtAnimatorStateChangedInfo();

  EvtAnimatorStateChangedInfo(const EvtAnimatorStateChangedInfo& from);

  inline EvtAnimatorStateChangedInfo& operator=(const EvtAnimatorStateChangedInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAnimatorStateChangedInfo(EvtAnimatorStateChangedInfo&& from) noexcept
    : EvtAnimatorStateChangedInfo() {
    *this = ::std::move(from);
  }

  inline EvtAnimatorStateChangedInfo& operator=(EvtAnimatorStateChangedInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAnimatorStateChangedInfo& default_instance();

  static inline const EvtAnimatorStateChangedInfo* internal_default_instance() {
    return reinterpret_cast<const EvtAnimatorStateChangedInfo*>(
               &_EvtAnimatorStateChangedInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(EvtAnimatorStateChangedInfo* other);
  friend void swap(EvtAnimatorStateChangedInfo& a, EvtAnimatorStateChangedInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAnimatorStateChangedInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAnimatorStateChangedInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAnimatorStateChangedInfo& from);
  void MergeFrom(const EvtAnimatorStateChangedInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAnimatorStateChangedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 5;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 5;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 to_state_hash = 2;
  void clear_to_state_hash();
  static const int kToStateHashFieldNumber = 2;
  ::google::protobuf::uint32 to_state_hash() const;
  void set_to_state_hash(::google::protobuf::uint32 value);

  // uint32 normalized_time_compact = 3;
  void clear_normalized_time_compact();
  static const int kNormalizedTimeCompactFieldNumber = 3;
  ::google::protobuf::uint32 normalized_time_compact() const;
  void set_normalized_time_compact(::google::protobuf::uint32 value);

  // int32 face_angle_compact = 4;
  void clear_face_angle_compact();
  static const int kFaceAngleCompactFieldNumber = 4;
  ::google::protobuf::int32 face_angle_compact() const;
  void set_face_angle_compact(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAnimatorStateChangedInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 to_state_hash_;
  ::google::protobuf::uint32 normalized_time_compact_;
  ::google::protobuf::int32 face_angle_compact_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAnimatorStateChangedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAnimatorStateChangedNotify) */ {
 public:
  EvtAnimatorStateChangedNotify();
  virtual ~EvtAnimatorStateChangedNotify();

  EvtAnimatorStateChangedNotify(const EvtAnimatorStateChangedNotify& from);

  inline EvtAnimatorStateChangedNotify& operator=(const EvtAnimatorStateChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAnimatorStateChangedNotify(EvtAnimatorStateChangedNotify&& from) noexcept
    : EvtAnimatorStateChangedNotify() {
    *this = ::std::move(from);
  }

  inline EvtAnimatorStateChangedNotify& operator=(EvtAnimatorStateChangedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAnimatorStateChangedNotify& default_instance();

  static inline const EvtAnimatorStateChangedNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAnimatorStateChangedNotify*>(
               &_EvtAnimatorStateChangedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(EvtAnimatorStateChangedNotify* other);
  friend void swap(EvtAnimatorStateChangedNotify& a, EvtAnimatorStateChangedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAnimatorStateChangedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAnimatorStateChangedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAnimatorStateChangedNotify& from);
  void MergeFrom(const EvtAnimatorStateChangedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAnimatorStateChangedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAnimatorStateChangedNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAnimatorStateChangedNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAnimatorStateChangedNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAnimatorStateChangedNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAnimatorStateChangedNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAnimatorStateChangedNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAnimatorStateChangedNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAnimatorStateChangedNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAnimatorStateChangedNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAnimatorStateChangedNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAnimatorStateChangedNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAnimatorStateChangedNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAnimatorStateChangedNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 2;
  bool has_evt_animator_state_changed_info() const;
  void clear_evt_animator_state_changed_info();
  static const int kEvtAnimatorStateChangedInfoFieldNumber = 2;
  const ::proto::EvtAnimatorStateChangedInfo& evt_animator_state_changed_info() const;
  ::proto::EvtAnimatorStateChangedInfo* mutable_evt_animator_state_changed_info();
  ::proto::EvtAnimatorStateChangedInfo* release_evt_animator_state_changed_info();
  void set_allocated_evt_animator_state_changed_info(::proto::EvtAnimatorStateChangedInfo* evt_animator_state_changed_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtAnimatorStateChangedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtAnimatorStateChangedInfo* evt_animator_state_changed_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtRushMoveInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtRushMoveInfo) */ {
 public:
  EvtRushMoveInfo();
  virtual ~EvtRushMoveInfo();

  EvtRushMoveInfo(const EvtRushMoveInfo& from);

  inline EvtRushMoveInfo& operator=(const EvtRushMoveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtRushMoveInfo(EvtRushMoveInfo&& from) noexcept
    : EvtRushMoveInfo() {
    *this = ::std::move(from);
  }

  inline EvtRushMoveInfo& operator=(EvtRushMoveInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtRushMoveInfo& default_instance();

  static inline const EvtRushMoveInfo* internal_default_instance() {
    return reinterpret_cast<const EvtRushMoveInfo*>(
               &_EvtRushMoveInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(EvtRushMoveInfo* other);
  friend void swap(EvtRushMoveInfo& a, EvtRushMoveInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtRushMoveInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtRushMoveInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtRushMoveInfo& from);
  void MergeFrom(const EvtRushMoveInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtRushMoveInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector velocity = 2;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 2;
  const ::proto::Vector& velocity() const;
  ::proto::Vector* mutable_velocity();
  ::proto::Vector* release_velocity();
  void set_allocated_velocity(::proto::Vector* velocity);

  // .proto.Vector pos = 6;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 6;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rush_attack_target_pos = 7;
  bool has_rush_attack_target_pos() const;
  void clear_rush_attack_target_pos();
  static const int kRushAttackTargetPosFieldNumber = 7;
  const ::proto::Vector& rush_attack_target_pos() const;
  ::proto::Vector* mutable_rush_attack_target_pos();
  ::proto::Vector* release_rush_attack_target_pos();
  void set_allocated_rush_attack_target_pos(::proto::Vector* rush_attack_target_pos);

  // .proto.Vector rush_to_pos = 8;
  bool has_rush_to_pos() const;
  void clear_rush_to_pos();
  static const int kRushToPosFieldNumber = 8;
  const ::proto::Vector& rush_to_pos() const;
  ::proto::Vector* mutable_rush_to_pos();
  ::proto::Vector* release_rush_to_pos();
  void set_allocated_rush_to_pos(::proto::Vector* rush_to_pos);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // float timeRange = 3;
  void clear_timerange();
  static const int kTimeRangeFieldNumber = 3;
  float timerange() const;
  void set_timerange(float value);

  // int32 state_name_hash = 4;
  void clear_state_name_hash();
  static const int kStateNameHashFieldNumber = 4;
  ::google::protobuf::int32 state_name_hash() const;
  void set_state_name_hash(::google::protobuf::int32 value);

  // int32 face_angle_compact = 5;
  void clear_face_angle_compact();
  static const int kFaceAngleCompactFieldNumber = 5;
  ::google::protobuf::int32 face_angle_compact() const;
  void set_face_angle_compact(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtRushMoveInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* velocity_;
  ::proto::Vector* pos_;
  ::proto::Vector* rush_attack_target_pos_;
  ::proto::Vector* rush_to_pos_;
  ::google::protobuf::uint32 entity_id_;
  float timerange_;
  ::google::protobuf::int32 state_name_hash_;
  ::google::protobuf::int32 face_angle_compact_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtRushMoveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtRushMoveNotify) */ {
 public:
  EvtRushMoveNotify();
  virtual ~EvtRushMoveNotify();

  EvtRushMoveNotify(const EvtRushMoveNotify& from);

  inline EvtRushMoveNotify& operator=(const EvtRushMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtRushMoveNotify(EvtRushMoveNotify&& from) noexcept
    : EvtRushMoveNotify() {
    *this = ::std::move(from);
  }

  inline EvtRushMoveNotify& operator=(EvtRushMoveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtRushMoveNotify& default_instance();

  static inline const EvtRushMoveNotify* internal_default_instance() {
    return reinterpret_cast<const EvtRushMoveNotify*>(
               &_EvtRushMoveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(EvtRushMoveNotify* other);
  friend void swap(EvtRushMoveNotify& a, EvtRushMoveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtRushMoveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtRushMoveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtRushMoveNotify& from);
  void MergeFrom(const EvtRushMoveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtRushMoveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtRushMoveNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtRushMoveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtRushMoveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtRushMoveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtRushMoveNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtRushMoveNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtRushMoveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtRushMoveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtRushMoveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtRushMoveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtRushMoveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtRushMoveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtRushMoveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EvtRushMoveInfo evt_rush_move_info = 2;
  bool has_evt_rush_move_info() const;
  void clear_evt_rush_move_info();
  static const int kEvtRushMoveInfoFieldNumber = 2;
  const ::proto::EvtRushMoveInfo& evt_rush_move_info() const;
  ::proto::EvtRushMoveInfo* mutable_evt_rush_move_info();
  ::proto::EvtRushMoveInfo* release_evt_rush_move_info();
  void set_allocated_evt_rush_move_info(::proto::EvtRushMoveInfo* evt_rush_move_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtRushMoveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EvtRushMoveInfo* evt_rush_move_info_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBulletHitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBulletHitNotify) */ {
 public:
  EvtBulletHitNotify();
  virtual ~EvtBulletHitNotify();

  EvtBulletHitNotify(const EvtBulletHitNotify& from);

  inline EvtBulletHitNotify& operator=(const EvtBulletHitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBulletHitNotify(EvtBulletHitNotify&& from) noexcept
    : EvtBulletHitNotify() {
    *this = ::std::move(from);
  }

  inline EvtBulletHitNotify& operator=(EvtBulletHitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBulletHitNotify& default_instance();

  static inline const EvtBulletHitNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBulletHitNotify*>(
               &_EvtBulletHitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(EvtBulletHitNotify* other);
  friend void swap(EvtBulletHitNotify& a, EvtBulletHitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBulletHitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBulletHitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBulletHitNotify& from);
  void MergeFrom(const EvtBulletHitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBulletHitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBulletHitNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBulletHitNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBulletHitNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBulletHitNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBulletHitNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBulletHitNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBulletHitNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBulletHitNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBulletHitNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBulletHitNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBulletHitNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBulletHitNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBulletHitNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector hit_point = 7;
  bool has_hit_point() const;
  void clear_hit_point();
  static const int kHitPointFieldNumber = 7;
  const ::proto::Vector& hit_point() const;
  ::proto::Vector* mutable_hit_point();
  ::proto::Vector* release_hit_point();
  void set_allocated_hit_point(::proto::Vector* hit_point);

  // .proto.Vector hit_normal = 8;
  bool has_hit_normal() const;
  void clear_hit_normal();
  static const int kHitNormalFieldNumber = 8;
  const ::proto::Vector& hit_normal() const;
  ::proto::Vector* mutable_hit_normal();
  ::proto::Vector* release_hit_normal();
  void set_allocated_hit_normal(::proto::Vector* hit_normal);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 forward_peer = 2;
  void clear_forward_peer();
  static const int kForwardPeerFieldNumber = 2;
  ::google::protobuf::uint32 forward_peer() const;
  void set_forward_peer(::google::protobuf::uint32 value);

  // uint32 entity_id = 3;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 hit_entity_id = 4;
  void clear_hit_entity_id();
  static const int kHitEntityIdFieldNumber = 4;
  ::google::protobuf::uint32 hit_entity_id() const;
  void set_hit_entity_id(::google::protobuf::uint32 value);

  // .proto.HitColliderType hit_collider_type = 5;
  void clear_hit_collider_type();
  static const int kHitColliderTypeFieldNumber = 5;
  ::proto::HitColliderType hit_collider_type() const;
  void set_hit_collider_type(::proto::HitColliderType value);

  // int32 hit_box_index = 6;
  void clear_hit_box_index();
  static const int kHitBoxIndexFieldNumber = 6;
  ::google::protobuf::int32 hit_box_index() const;
  void set_hit_box_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtBulletHitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* hit_point_;
  ::proto::Vector* hit_normal_;
  int forward_type_;
  ::google::protobuf::uint32 forward_peer_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 hit_entity_id_;
  int hit_collider_type_;
  ::google::protobuf::int32 hit_box_index_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBulletDeactiveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBulletDeactiveNotify) */ {
 public:
  EvtBulletDeactiveNotify();
  virtual ~EvtBulletDeactiveNotify();

  EvtBulletDeactiveNotify(const EvtBulletDeactiveNotify& from);

  inline EvtBulletDeactiveNotify& operator=(const EvtBulletDeactiveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBulletDeactiveNotify(EvtBulletDeactiveNotify&& from) noexcept
    : EvtBulletDeactiveNotify() {
    *this = ::std::move(from);
  }

  inline EvtBulletDeactiveNotify& operator=(EvtBulletDeactiveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBulletDeactiveNotify& default_instance();

  static inline const EvtBulletDeactiveNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBulletDeactiveNotify*>(
               &_EvtBulletDeactiveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(EvtBulletDeactiveNotify* other);
  friend void swap(EvtBulletDeactiveNotify& a, EvtBulletDeactiveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBulletDeactiveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBulletDeactiveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBulletDeactiveNotify& from);
  void MergeFrom(const EvtBulletDeactiveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBulletDeactiveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBulletDeactiveNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBulletDeactiveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBulletDeactiveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBulletDeactiveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBulletDeactiveNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBulletDeactiveNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBulletDeactiveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBulletDeactiveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBulletDeactiveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBulletDeactiveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBulletDeactiveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBulletDeactiveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBulletDeactiveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector disappear_pos = 3;
  bool has_disappear_pos() const;
  void clear_disappear_pos();
  static const int kDisappearPosFieldNumber = 3;
  const ::proto::Vector& disappear_pos() const;
  ::proto::Vector* mutable_disappear_pos();
  ::proto::Vector* release_disappear_pos();
  void set_allocated_disappear_pos(::proto::Vector* disappear_pos);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtBulletDeactiveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* disappear_pos_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtEntityStartDieEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtEntityStartDieEndNotify) */ {
 public:
  EvtEntityStartDieEndNotify();
  virtual ~EvtEntityStartDieEndNotify();

  EvtEntityStartDieEndNotify(const EvtEntityStartDieEndNotify& from);

  inline EvtEntityStartDieEndNotify& operator=(const EvtEntityStartDieEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtEntityStartDieEndNotify(EvtEntityStartDieEndNotify&& from) noexcept
    : EvtEntityStartDieEndNotify() {
    *this = ::std::move(from);
  }

  inline EvtEntityStartDieEndNotify& operator=(EvtEntityStartDieEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtEntityStartDieEndNotify& default_instance();

  static inline const EvtEntityStartDieEndNotify* internal_default_instance() {
    return reinterpret_cast<const EvtEntityStartDieEndNotify*>(
               &_EvtEntityStartDieEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(EvtEntityStartDieEndNotify* other);
  friend void swap(EvtEntityStartDieEndNotify& a, EvtEntityStartDieEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtEntityStartDieEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtEntityStartDieEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtEntityStartDieEndNotify& from);
  void MergeFrom(const EvtEntityStartDieEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtEntityStartDieEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtEntityStartDieEndNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtEntityStartDieEndNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtEntityStartDieEndNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtEntityStartDieEndNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtEntityStartDieEndNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtEntityStartDieEndNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtEntityStartDieEndNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtEntityStartDieEndNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtEntityStartDieEndNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtEntityStartDieEndNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtEntityStartDieEndNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtEntityStartDieEndNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtEntityStartDieEndNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // bool immediately = 3;
  void clear_immediately();
  static const int kImmediatelyFieldNumber = 3;
  bool immediately() const;
  void set_immediately(bool value);

  // uint32 die_state_flag = 4;
  void clear_die_state_flag();
  static const int kDieStateFlagFieldNumber = 4;
  ::google::protobuf::uint32 die_state_flag() const;
  void set_die_state_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtEntityStartDieEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  bool immediately_;
  ::google::protobuf::uint32 die_state_flag_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBulletMoveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBulletMoveNotify) */ {
 public:
  EvtBulletMoveNotify();
  virtual ~EvtBulletMoveNotify();

  EvtBulletMoveNotify(const EvtBulletMoveNotify& from);

  inline EvtBulletMoveNotify& operator=(const EvtBulletMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBulletMoveNotify(EvtBulletMoveNotify&& from) noexcept
    : EvtBulletMoveNotify() {
    *this = ::std::move(from);
  }

  inline EvtBulletMoveNotify& operator=(EvtBulletMoveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBulletMoveNotify& default_instance();

  static inline const EvtBulletMoveNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBulletMoveNotify*>(
               &_EvtBulletMoveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(EvtBulletMoveNotify* other);
  friend void swap(EvtBulletMoveNotify& a, EvtBulletMoveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBulletMoveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBulletMoveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBulletMoveNotify& from);
  void MergeFrom(const EvtBulletMoveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBulletMoveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBulletMoveNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBulletMoveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBulletMoveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBulletMoveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBulletMoveNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBulletMoveNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBulletMoveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBulletMoveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBulletMoveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBulletMoveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBulletMoveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBulletMoveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBulletMoveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector cur_pos = 3;
  bool has_cur_pos() const;
  void clear_cur_pos();
  static const int kCurPosFieldNumber = 3;
  const ::proto::Vector& cur_pos() const;
  ::proto::Vector* mutable_cur_pos();
  ::proto::Vector* release_cur_pos();
  void set_allocated_cur_pos(::proto::Vector* cur_pos);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtBulletMoveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* cur_pos_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarEnterFocusNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarEnterFocusNotify) */ {
 public:
  EvtAvatarEnterFocusNotify();
  virtual ~EvtAvatarEnterFocusNotify();

  EvtAvatarEnterFocusNotify(const EvtAvatarEnterFocusNotify& from);

  inline EvtAvatarEnterFocusNotify& operator=(const EvtAvatarEnterFocusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarEnterFocusNotify(EvtAvatarEnterFocusNotify&& from) noexcept
    : EvtAvatarEnterFocusNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarEnterFocusNotify& operator=(EvtAvatarEnterFocusNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarEnterFocusNotify& default_instance();

  static inline const EvtAvatarEnterFocusNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarEnterFocusNotify*>(
               &_EvtAvatarEnterFocusNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(EvtAvatarEnterFocusNotify* other);
  friend void swap(EvtAvatarEnterFocusNotify& a, EvtAvatarEnterFocusNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarEnterFocusNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarEnterFocusNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarEnterFocusNotify& from);
  void MergeFrom(const EvtAvatarEnterFocusNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarEnterFocusNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarEnterFocusNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarEnterFocusNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarEnterFocusNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarEnterFocusNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarEnterFocusNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarEnterFocusNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarEnterFocusNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarEnterFocusNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarEnterFocusNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarEnterFocusNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarEnterFocusNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarEnterFocusNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarEnterFocusNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector focus_forward = 9;
  bool has_focus_forward() const;
  void clear_focus_forward();
  static const int kFocusForwardFieldNumber = 9;
  const ::proto::Vector& focus_forward() const;
  ::proto::Vector* mutable_focus_forward();
  ::proto::Vector* release_focus_forward();
  void set_allocated_focus_forward(::proto::Vector* focus_forward);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // bool fast_focus = 3;
  void clear_fast_focus();
  static const int kFastFocusFieldNumber = 3;
  bool fast_focus() const;
  void set_fast_focus(bool value);

  // bool use_focus_sticky = 4;
  void clear_use_focus_sticky();
  static const int kUseFocusStickyFieldNumber = 4;
  bool use_focus_sticky() const;
  void set_use_focus_sticky(bool value);

  // bool use_auto_focus = 5;
  void clear_use_auto_focus();
  static const int kUseAutoFocusFieldNumber = 5;
  bool use_auto_focus() const;
  void set_use_auto_focus(bool value);

  // bool use_gyro = 6;
  void clear_use_gyro();
  static const int kUseGyroFieldNumber = 6;
  bool use_gyro() const;
  void set_use_gyro(bool value);

  // bool can_move = 7;
  void clear_can_move();
  static const int kCanMoveFieldNumber = 7;
  bool can_move() const;
  void set_can_move(bool value);

  // bool show_cross_hair = 8;
  void clear_show_cross_hair();
  static const int kShowCrossHairFieldNumber = 8;
  bool show_cross_hair() const;
  void set_show_cross_hair(bool value);

  // bool enter_normal_focus_shoot = 10;
  void clear_enter_normal_focus_shoot();
  static const int kEnterNormalFocusShootFieldNumber = 10;
  bool enter_normal_focus_shoot() const;
  void set_enter_normal_focus_shoot(bool value);

  // bool enter_holding_focus_shoot = 11;
  void clear_enter_holding_focus_shoot();
  static const int kEnterHoldingFocusShootFieldNumber = 11;
  bool enter_holding_focus_shoot() const;
  void set_enter_holding_focus_shoot(bool value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarEnterFocusNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* focus_forward_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  bool fast_focus_;
  bool use_focus_sticky_;
  bool use_auto_focus_;
  bool use_gyro_;
  bool can_move_;
  bool show_cross_hair_;
  bool enter_normal_focus_shoot_;
  bool enter_holding_focus_shoot_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarExitFocusNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarExitFocusNotify) */ {
 public:
  EvtAvatarExitFocusNotify();
  virtual ~EvtAvatarExitFocusNotify();

  EvtAvatarExitFocusNotify(const EvtAvatarExitFocusNotify& from);

  inline EvtAvatarExitFocusNotify& operator=(const EvtAvatarExitFocusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarExitFocusNotify(EvtAvatarExitFocusNotify&& from) noexcept
    : EvtAvatarExitFocusNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarExitFocusNotify& operator=(EvtAvatarExitFocusNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarExitFocusNotify& default_instance();

  static inline const EvtAvatarExitFocusNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarExitFocusNotify*>(
               &_EvtAvatarExitFocusNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(EvtAvatarExitFocusNotify* other);
  friend void swap(EvtAvatarExitFocusNotify& a, EvtAvatarExitFocusNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarExitFocusNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarExitFocusNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarExitFocusNotify& from);
  void MergeFrom(const EvtAvatarExitFocusNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarExitFocusNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarExitFocusNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarExitFocusNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarExitFocusNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarExitFocusNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarExitFocusNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarExitFocusNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarExitFocusNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarExitFocusNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarExitFocusNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarExitFocusNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarExitFocusNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarExitFocusNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarExitFocusNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector finish_forward = 3;
  bool has_finish_forward() const;
  void clear_finish_forward();
  static const int kFinishForwardFieldNumber = 3;
  const ::proto::Vector& finish_forward() const;
  ::proto::Vector* mutable_finish_forward();
  ::proto::Vector* release_finish_forward();
  void set_allocated_finish_forward(::proto::Vector* finish_forward);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarExitFocusNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* finish_forward_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarUpdateFocusNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarUpdateFocusNotify) */ {
 public:
  EvtAvatarUpdateFocusNotify();
  virtual ~EvtAvatarUpdateFocusNotify();

  EvtAvatarUpdateFocusNotify(const EvtAvatarUpdateFocusNotify& from);

  inline EvtAvatarUpdateFocusNotify& operator=(const EvtAvatarUpdateFocusNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarUpdateFocusNotify(EvtAvatarUpdateFocusNotify&& from) noexcept
    : EvtAvatarUpdateFocusNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarUpdateFocusNotify& operator=(EvtAvatarUpdateFocusNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarUpdateFocusNotify& default_instance();

  static inline const EvtAvatarUpdateFocusNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarUpdateFocusNotify*>(
               &_EvtAvatarUpdateFocusNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(EvtAvatarUpdateFocusNotify* other);
  friend void swap(EvtAvatarUpdateFocusNotify& a, EvtAvatarUpdateFocusNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarUpdateFocusNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarUpdateFocusNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarUpdateFocusNotify& from);
  void MergeFrom(const EvtAvatarUpdateFocusNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarUpdateFocusNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarUpdateFocusNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarUpdateFocusNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarUpdateFocusNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarUpdateFocusNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarUpdateFocusNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarUpdateFocusNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarUpdateFocusNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarUpdateFocusNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarUpdateFocusNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarUpdateFocusNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarUpdateFocusNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarUpdateFocusNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarUpdateFocusNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector focus_forward = 3;
  bool has_focus_forward() const;
  void clear_focus_forward();
  static const int kFocusForwardFieldNumber = 3;
  const ::proto::Vector& focus_forward() const;
  ::proto::Vector* mutable_focus_forward();
  ::proto::Vector* release_focus_forward();
  void set_allocated_focus_forward(::proto::Vector* focus_forward);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarUpdateFocusNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* focus_forward_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityAuthorityChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityAuthorityChangeNotify) */ {
 public:
  EntityAuthorityChangeNotify();
  virtual ~EntityAuthorityChangeNotify();

  EntityAuthorityChangeNotify(const EntityAuthorityChangeNotify& from);

  inline EntityAuthorityChangeNotify& operator=(const EntityAuthorityChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityAuthorityChangeNotify(EntityAuthorityChangeNotify&& from) noexcept
    : EntityAuthorityChangeNotify() {
    *this = ::std::move(from);
  }

  inline EntityAuthorityChangeNotify& operator=(EntityAuthorityChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityAuthorityChangeNotify& default_instance();

  static inline const EntityAuthorityChangeNotify* internal_default_instance() {
    return reinterpret_cast<const EntityAuthorityChangeNotify*>(
               &_EntityAuthorityChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(EntityAuthorityChangeNotify* other);
  friend void swap(EntityAuthorityChangeNotify& a, EntityAuthorityChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityAuthorityChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityAuthorityChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityAuthorityChangeNotify& from);
  void MergeFrom(const EntityAuthorityChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityAuthorityChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityAuthorityChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    EntityAuthorityChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EntityAuthorityChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EntityAuthorityChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EntityAuthorityChangeNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EntityAuthorityChangeNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EntityAuthorityChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EntityAuthorityChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EntityAuthorityChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EntityAuthorityChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EntityAuthorityChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EntityAuthorityChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EntityAuthorityChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.AbilitySyncStateInfo ability_info = 3;
  bool has_ability_info() const;
  void clear_ability_info();
  static const int kAbilityInfoFieldNumber = 3;
  const ::proto::AbilitySyncStateInfo& ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_ability_info();
  ::proto::AbilitySyncStateInfo* release_ability_info();
  void set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info);

  // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
  bool has_renderer_changed_info() const;
  void clear_renderer_changed_info();
  static const int kRendererChangedInfoFieldNumber = 4;
  const ::proto::EntityRendererChangedInfo& renderer_changed_info() const;
  ::proto::EntityRendererChangedInfo* mutable_renderer_changed_info();
  ::proto::EntityRendererChangedInfo* release_renderer_changed_info();
  void set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 2;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 2;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityAuthorityChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilitySyncStateInfo* ability_info_;
  ::proto::EntityRendererChangedInfo* renderer_changed_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 authority_peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarBuffAddNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarBuffAddNotify) */ {
 public:
  AvatarBuffAddNotify();
  virtual ~AvatarBuffAddNotify();

  AvatarBuffAddNotify(const AvatarBuffAddNotify& from);

  inline AvatarBuffAddNotify& operator=(const AvatarBuffAddNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarBuffAddNotify(AvatarBuffAddNotify&& from) noexcept
    : AvatarBuffAddNotify() {
    *this = ::std::move(from);
  }

  inline AvatarBuffAddNotify& operator=(AvatarBuffAddNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarBuffAddNotify& default_instance();

  static inline const AvatarBuffAddNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarBuffAddNotify*>(
               &_AvatarBuffAddNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(AvatarBuffAddNotify* other);
  friend void swap(AvatarBuffAddNotify& a, AvatarBuffAddNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarBuffAddNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarBuffAddNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarBuffAddNotify& from);
  void MergeFrom(const AvatarBuffAddNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarBuffAddNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarBuffAddNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarBuffAddNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarBuffAddNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarBuffAddNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarBuffAddNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarBuffAddNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarBuffAddNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarBuffAddNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarBuffAddNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarBuffAddNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarBuffAddNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarBuffAddNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarBuffAddNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 avatar_guid = 1;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // uint32 buff_id = 2;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  ::google::protobuf::uint32 buff_id() const;
  void set_buff_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarBuffAddNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 avatar_guid_;
  ::google::protobuf::uint32 buff_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarBuffDelNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarBuffDelNotify) */ {
 public:
  AvatarBuffDelNotify();
  virtual ~AvatarBuffDelNotify();

  AvatarBuffDelNotify(const AvatarBuffDelNotify& from);

  inline AvatarBuffDelNotify& operator=(const AvatarBuffDelNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarBuffDelNotify(AvatarBuffDelNotify&& from) noexcept
    : AvatarBuffDelNotify() {
    *this = ::std::move(from);
  }

  inline AvatarBuffDelNotify& operator=(AvatarBuffDelNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarBuffDelNotify& default_instance();

  static inline const AvatarBuffDelNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarBuffDelNotify*>(
               &_AvatarBuffDelNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(AvatarBuffDelNotify* other);
  friend void swap(AvatarBuffDelNotify& a, AvatarBuffDelNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarBuffDelNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarBuffDelNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarBuffDelNotify& from);
  void MergeFrom(const AvatarBuffDelNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarBuffDelNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarBuffDelNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarBuffDelNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarBuffDelNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarBuffDelNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarBuffDelNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarBuffDelNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarBuffDelNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarBuffDelNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarBuffDelNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarBuffDelNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarBuffDelNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarBuffDelNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarBuffDelNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 avatar_guid = 1;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // uint32 buff_id = 2;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  ::google::protobuf::uint32 buff_id() const;
  void set_buff_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarBuffDelNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 avatar_guid_;
  ::google::protobuf::uint32 buff_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonsterAlertChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MonsterAlertChangeNotify) */ {
 public:
  MonsterAlertChangeNotify();
  virtual ~MonsterAlertChangeNotify();

  MonsterAlertChangeNotify(const MonsterAlertChangeNotify& from);

  inline MonsterAlertChangeNotify& operator=(const MonsterAlertChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonsterAlertChangeNotify(MonsterAlertChangeNotify&& from) noexcept
    : MonsterAlertChangeNotify() {
    *this = ::std::move(from);
  }

  inline MonsterAlertChangeNotify& operator=(MonsterAlertChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterAlertChangeNotify& default_instance();

  static inline const MonsterAlertChangeNotify* internal_default_instance() {
    return reinterpret_cast<const MonsterAlertChangeNotify*>(
               &_MonsterAlertChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(MonsterAlertChangeNotify* other);
  friend void swap(MonsterAlertChangeNotify& a, MonsterAlertChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonsterAlertChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MonsterAlertChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonsterAlertChangeNotify& from);
  void MergeFrom(const MonsterAlertChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonsterAlertChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MonsterAlertChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    MonsterAlertChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MonsterAlertChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MonsterAlertChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MonsterAlertChangeNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    MonsterAlertChangeNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return MonsterAlertChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MonsterAlertChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MonsterAlertChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MonsterAlertChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MonsterAlertChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MonsterAlertChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MonsterAlertChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 monster_entity_list = 4;
  int monster_entity_list_size() const;
  void clear_monster_entity_list();
  static const int kMonsterEntityListFieldNumber = 4;
  ::google::protobuf::uint32 monster_entity_list(int index) const;
  void set_monster_entity_list(int index, ::google::protobuf::uint32 value);
  void add_monster_entity_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      monster_entity_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_monster_entity_list();

  // uint32 avatar_entity_id = 2;
  void clear_avatar_entity_id();
  static const int kAvatarEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 avatar_entity_id() const;
  void set_avatar_entity_id(::google::protobuf::uint32 value);

  // uint32 is_alert = 3;
  void clear_is_alert();
  static const int kIsAlertFieldNumber = 3;
  ::google::protobuf::uint32 is_alert() const;
  void set_is_alert(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MonsterAlertChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > monster_entity_list_;
  mutable int _monster_entity_list_cached_byte_size_;
  ::google::protobuf::uint32 avatar_entity_id_;
  ::google::protobuf::uint32 is_alert_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MonsterForceAlertNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MonsterForceAlertNotify) */ {
 public:
  MonsterForceAlertNotify();
  virtual ~MonsterForceAlertNotify();

  MonsterForceAlertNotify(const MonsterForceAlertNotify& from);

  inline MonsterForceAlertNotify& operator=(const MonsterForceAlertNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MonsterForceAlertNotify(MonsterForceAlertNotify&& from) noexcept
    : MonsterForceAlertNotify() {
    *this = ::std::move(from);
  }

  inline MonsterForceAlertNotify& operator=(MonsterForceAlertNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterForceAlertNotify& default_instance();

  static inline const MonsterForceAlertNotify* internal_default_instance() {
    return reinterpret_cast<const MonsterForceAlertNotify*>(
               &_MonsterForceAlertNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(MonsterForceAlertNotify* other);
  friend void swap(MonsterForceAlertNotify& a, MonsterForceAlertNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MonsterForceAlertNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MonsterForceAlertNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MonsterForceAlertNotify& from);
  void MergeFrom(const MonsterForceAlertNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MonsterForceAlertNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MonsterForceAlertNotify_CmdId CmdId;
  static const CmdId NONE =
    MonsterForceAlertNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MonsterForceAlertNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MonsterForceAlertNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MonsterForceAlertNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MonsterForceAlertNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MonsterForceAlertNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MonsterForceAlertNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MonsterForceAlertNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MonsterForceAlertNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MonsterForceAlertNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MonsterForceAlertNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 monster_entity_id = 1;
  void clear_monster_entity_id();
  static const int kMonsterEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_entity_id() const;
  void set_monster_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MonsterForceAlertNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 monster_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarEnterElementViewNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarEnterElementViewNotify) */ {
 public:
  AvatarEnterElementViewNotify();
  virtual ~AvatarEnterElementViewNotify();

  AvatarEnterElementViewNotify(const AvatarEnterElementViewNotify& from);

  inline AvatarEnterElementViewNotify& operator=(const AvatarEnterElementViewNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarEnterElementViewNotify(AvatarEnterElementViewNotify&& from) noexcept
    : AvatarEnterElementViewNotify() {
    *this = ::std::move(from);
  }

  inline AvatarEnterElementViewNotify& operator=(AvatarEnterElementViewNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarEnterElementViewNotify& default_instance();

  static inline const AvatarEnterElementViewNotify* internal_default_instance() {
    return reinterpret_cast<const AvatarEnterElementViewNotify*>(
               &_AvatarEnterElementViewNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(AvatarEnterElementViewNotify* other);
  friend void swap(AvatarEnterElementViewNotify& a, AvatarEnterElementViewNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarEnterElementViewNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarEnterElementViewNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarEnterElementViewNotify& from);
  void MergeFrom(const AvatarEnterElementViewNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarEnterElementViewNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AvatarEnterElementViewNotify_CmdId CmdId;
  static const CmdId NONE =
    AvatarEnterElementViewNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AvatarEnterElementViewNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AvatarEnterElementViewNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AvatarEnterElementViewNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AvatarEnterElementViewNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AvatarEnterElementViewNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AvatarEnterElementViewNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AvatarEnterElementViewNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AvatarEnterElementViewNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AvatarEnterElementViewNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AvatarEnterElementViewNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AvatarEnterElementViewNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 avatar_entity_id = 1;
  void clear_avatar_entity_id();
  static const int kAvatarEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_entity_id() const;
  void set_avatar_entity_id(::google::protobuf::uint32 value);

  // bool is_triggerd = 2;
  void clear_is_triggerd();
  static const int kIsTriggerdFieldNumber = 2;
  bool is_triggerd() const;
  void set_is_triggerd(bool value);

  // @@protoc_insertion_point(class_scope:proto.AvatarEnterElementViewNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_entity_id_;
  bool is_triggerd_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TriggerCreateGadgetToEquipPartNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TriggerCreateGadgetToEquipPartNotify) */ {
 public:
  TriggerCreateGadgetToEquipPartNotify();
  virtual ~TriggerCreateGadgetToEquipPartNotify();

  TriggerCreateGadgetToEquipPartNotify(const TriggerCreateGadgetToEquipPartNotify& from);

  inline TriggerCreateGadgetToEquipPartNotify& operator=(const TriggerCreateGadgetToEquipPartNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriggerCreateGadgetToEquipPartNotify(TriggerCreateGadgetToEquipPartNotify&& from) noexcept
    : TriggerCreateGadgetToEquipPartNotify() {
    *this = ::std::move(from);
  }

  inline TriggerCreateGadgetToEquipPartNotify& operator=(TriggerCreateGadgetToEquipPartNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriggerCreateGadgetToEquipPartNotify& default_instance();

  static inline const TriggerCreateGadgetToEquipPartNotify* internal_default_instance() {
    return reinterpret_cast<const TriggerCreateGadgetToEquipPartNotify*>(
               &_TriggerCreateGadgetToEquipPartNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(TriggerCreateGadgetToEquipPartNotify* other);
  friend void swap(TriggerCreateGadgetToEquipPartNotify& a, TriggerCreateGadgetToEquipPartNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriggerCreateGadgetToEquipPartNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  TriggerCreateGadgetToEquipPartNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TriggerCreateGadgetToEquipPartNotify& from);
  void MergeFrom(const TriggerCreateGadgetToEquipPartNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TriggerCreateGadgetToEquipPartNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TriggerCreateGadgetToEquipPartNotify_CmdId CmdId;
  static const CmdId NONE =
    TriggerCreateGadgetToEquipPartNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    TriggerCreateGadgetToEquipPartNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TriggerCreateGadgetToEquipPartNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TriggerCreateGadgetToEquipPartNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TriggerCreateGadgetToEquipPartNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TriggerCreateGadgetToEquipPartNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TriggerCreateGadgetToEquipPartNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TriggerCreateGadgetToEquipPartNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TriggerCreateGadgetToEquipPartNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string equip_part = 4;
  void clear_equip_part();
  static const int kEquipPartFieldNumber = 4;
  const ::std::string& equip_part() const;
  void set_equip_part(const ::std::string& value);
  #if LANG_CXX11
  void set_equip_part(::std::string&& value);
  #endif
  void set_equip_part(const char* value);
  void set_equip_part(const char* value, size_t size);
  ::std::string* mutable_equip_part();
  ::std::string* release_equip_part();
  void set_allocated_equip_part(::std::string* equip_part);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 gadget_entity_id = 2;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // uint32 gadget_id = 3;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 3;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TriggerCreateGadgetToEquipPartNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr equip_part_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 gadget_entity_id_;
  ::google::protobuf::uint32 gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtEntityRenderersChangedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtEntityRenderersChangedNotify) */ {
 public:
  EvtEntityRenderersChangedNotify();
  virtual ~EvtEntityRenderersChangedNotify();

  EvtEntityRenderersChangedNotify(const EvtEntityRenderersChangedNotify& from);

  inline EvtEntityRenderersChangedNotify& operator=(const EvtEntityRenderersChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtEntityRenderersChangedNotify(EvtEntityRenderersChangedNotify&& from) noexcept
    : EvtEntityRenderersChangedNotify() {
    *this = ::std::move(from);
  }

  inline EvtEntityRenderersChangedNotify& operator=(EvtEntityRenderersChangedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtEntityRenderersChangedNotify& default_instance();

  static inline const EvtEntityRenderersChangedNotify* internal_default_instance() {
    return reinterpret_cast<const EvtEntityRenderersChangedNotify*>(
               &_EvtEntityRenderersChangedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(EvtEntityRenderersChangedNotify* other);
  friend void swap(EvtEntityRenderersChangedNotify& a, EvtEntityRenderersChangedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtEntityRenderersChangedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtEntityRenderersChangedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtEntityRenderersChangedNotify& from);
  void MergeFrom(const EvtEntityRenderersChangedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtEntityRenderersChangedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtEntityRenderersChangedNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtEntityRenderersChangedNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtEntityRenderersChangedNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtEntityRenderersChangedNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtEntityRenderersChangedNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtEntityRenderersChangedNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtEntityRenderersChangedNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtEntityRenderersChangedNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtEntityRenderersChangedNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtEntityRenderersChangedNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtEntityRenderersChangedNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtEntityRenderersChangedNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtEntityRenderersChangedNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
  bool has_renderer_changed_info() const;
  void clear_renderer_changed_info();
  static const int kRendererChangedInfoFieldNumber = 4;
  const ::proto::EntityRendererChangedInfo& renderer_changed_info() const;
  ::proto::EntityRendererChangedInfo* mutable_renderer_changed_info();
  ::proto::EntityRendererChangedInfo* release_renderer_changed_info();
  void set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info);

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // bool is_server_cache = 3;
  void clear_is_server_cache();
  static const int kIsServerCacheFieldNumber = 3;
  bool is_server_cache() const;
  void set_is_server_cache(bool value);

  // @@protoc_insertion_point(class_scope:proto.EvtEntityRenderersChangedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::EntityRendererChangedInfo* renderer_changed_info_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  bool is_server_cache_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AnimatorForceSetAirMoveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AnimatorForceSetAirMoveNotify) */ {
 public:
  AnimatorForceSetAirMoveNotify();
  virtual ~AnimatorForceSetAirMoveNotify();

  AnimatorForceSetAirMoveNotify(const AnimatorForceSetAirMoveNotify& from);

  inline AnimatorForceSetAirMoveNotify& operator=(const AnimatorForceSetAirMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AnimatorForceSetAirMoveNotify(AnimatorForceSetAirMoveNotify&& from) noexcept
    : AnimatorForceSetAirMoveNotify() {
    *this = ::std::move(from);
  }

  inline AnimatorForceSetAirMoveNotify& operator=(AnimatorForceSetAirMoveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AnimatorForceSetAirMoveNotify& default_instance();

  static inline const AnimatorForceSetAirMoveNotify* internal_default_instance() {
    return reinterpret_cast<const AnimatorForceSetAirMoveNotify*>(
               &_AnimatorForceSetAirMoveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(AnimatorForceSetAirMoveNotify* other);
  friend void swap(AnimatorForceSetAirMoveNotify& a, AnimatorForceSetAirMoveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AnimatorForceSetAirMoveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AnimatorForceSetAirMoveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AnimatorForceSetAirMoveNotify& from);
  void MergeFrom(const AnimatorForceSetAirMoveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AnimatorForceSetAirMoveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AnimatorForceSetAirMoveNotify_CmdId CmdId;
  static const CmdId NONE =
    AnimatorForceSetAirMoveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AnimatorForceSetAirMoveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AnimatorForceSetAirMoveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AnimatorForceSetAirMoveNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AnimatorForceSetAirMoveNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AnimatorForceSetAirMoveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AnimatorForceSetAirMoveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AnimatorForceSetAirMoveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AnimatorForceSetAirMoveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AnimatorForceSetAirMoveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AnimatorForceSetAirMoveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AnimatorForceSetAirMoveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // bool in_air_move = 3;
  void clear_in_air_move();
  static const int kInAirMoveFieldNumber = 3;
  bool in_air_move() const;
  void set_in_air_move(bool value);

  // @@protoc_insertion_point(class_scope:proto.AnimatorForceSetAirMoveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int forward_type_;
  ::google::protobuf::uint32 entity_id_;
  bool in_air_move_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AiSkillCdInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AiSkillCdInfo) */ {
 public:
  AiSkillCdInfo();
  virtual ~AiSkillCdInfo();

  AiSkillCdInfo(const AiSkillCdInfo& from);

  inline AiSkillCdInfo& operator=(const AiSkillCdInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AiSkillCdInfo(AiSkillCdInfo&& from) noexcept
    : AiSkillCdInfo() {
    *this = ::std::move(from);
  }

  inline AiSkillCdInfo& operator=(AiSkillCdInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AiSkillCdInfo& default_instance();

  static inline const AiSkillCdInfo* internal_default_instance() {
    return reinterpret_cast<const AiSkillCdInfo*>(
               &_AiSkillCdInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(AiSkillCdInfo* other);
  friend void swap(AiSkillCdInfo& a, AiSkillCdInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AiSkillCdInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AiSkillCdInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AiSkillCdInfo& from);
  void MergeFrom(const AiSkillCdInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AiSkillCdInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> skill_cd_map = 1;
  int skill_cd_map_size() const;
  void clear_skill_cd_map();
  static const int kSkillCdMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      skill_cd_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_skill_cd_map();

  // @@protoc_insertion_point(class_scope:proto.AiSkillCdInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AiSkillCdInfo_SkillCdMapEntry : public ::google::protobuf::internal::MapEntry<AiSkillCdInfo_SkillCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AiSkillCdInfo_SkillCdMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AiSkillCdInfo_SkillCdMapEntry();
    AiSkillCdInfo_SkillCdMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AiSkillCdInfo_SkillCdMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AiSkillCdInfo_SkillCdMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AiSkillCdInfo_SkillCdMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > skill_cd_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class EvtAiSyncSkillCdNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAiSyncSkillCdNotify) */ {
 public:
  EvtAiSyncSkillCdNotify();
  virtual ~EvtAiSyncSkillCdNotify();

  EvtAiSyncSkillCdNotify(const EvtAiSyncSkillCdNotify& from);

  inline EvtAiSyncSkillCdNotify& operator=(const EvtAiSyncSkillCdNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAiSyncSkillCdNotify(EvtAiSyncSkillCdNotify&& from) noexcept
    : EvtAiSyncSkillCdNotify() {
    *this = ::std::move(from);
  }

  inline EvtAiSyncSkillCdNotify& operator=(EvtAiSyncSkillCdNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAiSyncSkillCdNotify& default_instance();

  static inline const EvtAiSyncSkillCdNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAiSyncSkillCdNotify*>(
               &_EvtAiSyncSkillCdNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(EvtAiSyncSkillCdNotify* other);
  friend void swap(EvtAiSyncSkillCdNotify& a, EvtAiSyncSkillCdNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAiSyncSkillCdNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAiSyncSkillCdNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAiSyncSkillCdNotify& from);
  void MergeFrom(const EvtAiSyncSkillCdNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAiSyncSkillCdNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef EvtAiSyncSkillCdNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAiSyncSkillCdNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAiSyncSkillCdNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAiSyncSkillCdNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAiSyncSkillCdNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAiSyncSkillCdNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAiSyncSkillCdNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAiSyncSkillCdNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAiSyncSkillCdNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAiSyncSkillCdNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAiSyncSkillCdNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAiSyncSkillCdNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAiSyncSkillCdNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.AiSkillCdInfo> ai_cd_map = 1;
  int ai_cd_map_size() const;
  void clear_ai_cd_map();
  static const int kAiCdMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >&
      ai_cd_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >*
      mutable_ai_cd_map();

  // @@protoc_insertion_point(class_scope:proto.EvtAiSyncSkillCdNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EvtAiSyncSkillCdNotify_AiCdMapEntry : public ::google::protobuf::internal::MapEntry<EvtAiSyncSkillCdNotify_AiCdMapEntry, 
      ::google::protobuf::uint32, ::proto::AiSkillCdInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EvtAiSyncSkillCdNotify_AiCdMapEntry, 
      ::google::protobuf::uint32, ::proto::AiSkillCdInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    EvtAiSyncSkillCdNotify_AiCdMapEntry();
    EvtAiSyncSkillCdNotify_AiCdMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EvtAiSyncSkillCdNotify_AiCdMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EvtAiSyncSkillCdNotify_AiCdMapEntry,
      ::google::protobuf::uint32, ::proto::AiSkillCdInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ai_cd_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtBeingHitsCombineNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtBeingHitsCombineNotify) */ {
 public:
  EvtBeingHitsCombineNotify();
  virtual ~EvtBeingHitsCombineNotify();

  EvtBeingHitsCombineNotify(const EvtBeingHitsCombineNotify& from);

  inline EvtBeingHitsCombineNotify& operator=(const EvtBeingHitsCombineNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtBeingHitsCombineNotify(EvtBeingHitsCombineNotify&& from) noexcept
    : EvtBeingHitsCombineNotify() {
    *this = ::std::move(from);
  }

  inline EvtBeingHitsCombineNotify& operator=(EvtBeingHitsCombineNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtBeingHitsCombineNotify& default_instance();

  static inline const EvtBeingHitsCombineNotify* internal_default_instance() {
    return reinterpret_cast<const EvtBeingHitsCombineNotify*>(
               &_EvtBeingHitsCombineNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(EvtBeingHitsCombineNotify* other);
  friend void swap(EvtBeingHitsCombineNotify& a, EvtBeingHitsCombineNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtBeingHitsCombineNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtBeingHitsCombineNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtBeingHitsCombineNotify& from);
  void MergeFrom(const EvtBeingHitsCombineNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtBeingHitsCombineNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtBeingHitsCombineNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtBeingHitsCombineNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtBeingHitsCombineNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtBeingHitsCombineNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtBeingHitsCombineNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtBeingHitsCombineNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtBeingHitsCombineNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtBeingHitsCombineNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtBeingHitsCombineNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtBeingHitsCombineNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtBeingHitsCombineNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtBeingHitsCombineNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtBeingHitsCombineNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.EvtBeingHitInfo evt_being_hit_info_list = 2;
  int evt_being_hit_info_list_size() const;
  void clear_evt_being_hit_info_list();
  static const int kEvtBeingHitInfoListFieldNumber = 2;
  const ::proto::EvtBeingHitInfo& evt_being_hit_info_list(int index) const;
  ::proto::EvtBeingHitInfo* mutable_evt_being_hit_info_list(int index);
  ::proto::EvtBeingHitInfo* add_evt_being_hit_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo >*
      mutable_evt_being_hit_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo >&
      evt_being_hit_info_list() const;

  // .proto.ForwardType forward_type = 1;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 1;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.EvtBeingHitsCombineNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo > evt_being_hit_info_list_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarSitDownNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarSitDownNotify) */ {
 public:
  EvtAvatarSitDownNotify();
  virtual ~EvtAvatarSitDownNotify();

  EvtAvatarSitDownNotify(const EvtAvatarSitDownNotify& from);

  inline EvtAvatarSitDownNotify& operator=(const EvtAvatarSitDownNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarSitDownNotify(EvtAvatarSitDownNotify&& from) noexcept
    : EvtAvatarSitDownNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarSitDownNotify& operator=(EvtAvatarSitDownNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarSitDownNotify& default_instance();

  static inline const EvtAvatarSitDownNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarSitDownNotify*>(
               &_EvtAvatarSitDownNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(EvtAvatarSitDownNotify* other);
  friend void swap(EvtAvatarSitDownNotify& a, EvtAvatarSitDownNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarSitDownNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarSitDownNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarSitDownNotify& from);
  void MergeFrom(const EvtAvatarSitDownNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarSitDownNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarSitDownNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarSitDownNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarSitDownNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarSitDownNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarSitDownNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarSitDownNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarSitDownNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarSitDownNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarSitDownNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarSitDownNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarSitDownNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarSitDownNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarSitDownNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarSitDownNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EvtAvatarStandUpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAvatarStandUpNotify) */ {
 public:
  EvtAvatarStandUpNotify();
  virtual ~EvtAvatarStandUpNotify();

  EvtAvatarStandUpNotify(const EvtAvatarStandUpNotify& from);

  inline EvtAvatarStandUpNotify& operator=(const EvtAvatarStandUpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAvatarStandUpNotify(EvtAvatarStandUpNotify&& from) noexcept
    : EvtAvatarStandUpNotify() {
    *this = ::std::move(from);
  }

  inline EvtAvatarStandUpNotify& operator=(EvtAvatarStandUpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAvatarStandUpNotify& default_instance();

  static inline const EvtAvatarStandUpNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAvatarStandUpNotify*>(
               &_EvtAvatarStandUpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(EvtAvatarStandUpNotify* other);
  friend void swap(EvtAvatarStandUpNotify& a, EvtAvatarStandUpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAvatarStandUpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAvatarStandUpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAvatarStandUpNotify& from);
  void MergeFrom(const EvtAvatarStandUpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAvatarStandUpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EvtAvatarStandUpNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAvatarStandUpNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAvatarStandUpNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAvatarStandUpNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAvatarStandUpNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAvatarStandUpNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAvatarStandUpNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAvatarStandUpNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAvatarStandUpNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAvatarStandUpNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAvatarStandUpNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAvatarStandUpNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAvatarStandUpNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // int32 direction = 2;
  void clear_direction();
  static const int kDirectionFieldNumber = 2;
  ::google::protobuf::int32 direction() const;
  void set_direction(::google::protobuf::int32 value);

  // int32 performID = 3;
  void clear_performid();
  static const int kPerformIDFieldNumber = 3;
  ::google::protobuf::int32 performid() const;
  void set_performid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EvtAvatarStandUpNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::int32 performid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateMassiveEntityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateMassiveEntityReq) */ {
 public:
  CreateMassiveEntityReq();
  virtual ~CreateMassiveEntityReq();

  CreateMassiveEntityReq(const CreateMassiveEntityReq& from);

  inline CreateMassiveEntityReq& operator=(const CreateMassiveEntityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMassiveEntityReq(CreateMassiveEntityReq&& from) noexcept
    : CreateMassiveEntityReq() {
    *this = ::std::move(from);
  }

  inline CreateMassiveEntityReq& operator=(CreateMassiveEntityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMassiveEntityReq& default_instance();

  static inline const CreateMassiveEntityReq* internal_default_instance() {
    return reinterpret_cast<const CreateMassiveEntityReq*>(
               &_CreateMassiveEntityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(CreateMassiveEntityReq* other);
  friend void swap(CreateMassiveEntityReq& a, CreateMassiveEntityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMassiveEntityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateMassiveEntityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateMassiveEntityReq& from);
  void MergeFrom(const CreateMassiveEntityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateMassiveEntityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateMassiveEntityReq_CmdId CmdId;
  static const CmdId NONE =
    CreateMassiveEntityReq_CmdId_NONE;
  static const CmdId CMD_ID =
    CreateMassiveEntityReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CreateMassiveEntityReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CreateMassiveEntityReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CreateMassiveEntityReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CreateMassiveEntityReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CreateMassiveEntityReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CreateMassiveEntityReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CreateMassiveEntityReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CreateMassiveEntityReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CreateMassiveEntityReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CreateMassiveEntityReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  int massive_entity_list_size() const;
  void clear_massive_entity_list();
  static const int kMassiveEntityListFieldNumber = 1;
  const ::proto::ClientMassiveEntity& massive_entity_list(int index) const;
  ::proto::ClientMassiveEntity* mutable_massive_entity_list(int index);
  ::proto::ClientMassiveEntity* add_massive_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >*
      mutable_massive_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >&
      massive_entity_list() const;

  // @@protoc_insertion_point(class_scope:proto.CreateMassiveEntityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity > massive_entity_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateMassiveEntityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateMassiveEntityRsp) */ {
 public:
  CreateMassiveEntityRsp();
  virtual ~CreateMassiveEntityRsp();

  CreateMassiveEntityRsp(const CreateMassiveEntityRsp& from);

  inline CreateMassiveEntityRsp& operator=(const CreateMassiveEntityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMassiveEntityRsp(CreateMassiveEntityRsp&& from) noexcept
    : CreateMassiveEntityRsp() {
    *this = ::std::move(from);
  }

  inline CreateMassiveEntityRsp& operator=(CreateMassiveEntityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMassiveEntityRsp& default_instance();

  static inline const CreateMassiveEntityRsp* internal_default_instance() {
    return reinterpret_cast<const CreateMassiveEntityRsp*>(
               &_CreateMassiveEntityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(CreateMassiveEntityRsp* other);
  friend void swap(CreateMassiveEntityRsp& a, CreateMassiveEntityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMassiveEntityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateMassiveEntityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateMassiveEntityRsp& from);
  void MergeFrom(const CreateMassiveEntityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateMassiveEntityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateMassiveEntityRsp_CmdId CmdId;
  static const CmdId NONE =
    CreateMassiveEntityRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    CreateMassiveEntityRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CreateMassiveEntityRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CreateMassiveEntityRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CreateMassiveEntityRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CreateMassiveEntityRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CreateMassiveEntityRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CreateMassiveEntityRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CreateMassiveEntityRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CreateMassiveEntityRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CreateMassiveEntityRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CreateMassiveEntityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateMassiveEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CreateMassiveEntityNotify) */ {
 public:
  CreateMassiveEntityNotify();
  virtual ~CreateMassiveEntityNotify();

  CreateMassiveEntityNotify(const CreateMassiveEntityNotify& from);

  inline CreateMassiveEntityNotify& operator=(const CreateMassiveEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateMassiveEntityNotify(CreateMassiveEntityNotify&& from) noexcept
    : CreateMassiveEntityNotify() {
    *this = ::std::move(from);
  }

  inline CreateMassiveEntityNotify& operator=(CreateMassiveEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMassiveEntityNotify& default_instance();

  static inline const CreateMassiveEntityNotify* internal_default_instance() {
    return reinterpret_cast<const CreateMassiveEntityNotify*>(
               &_CreateMassiveEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(CreateMassiveEntityNotify* other);
  friend void swap(CreateMassiveEntityNotify& a, CreateMassiveEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateMassiveEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateMassiveEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateMassiveEntityNotify& from);
  void MergeFrom(const CreateMassiveEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateMassiveEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CreateMassiveEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    CreateMassiveEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CreateMassiveEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CreateMassiveEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CreateMassiveEntityNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CreateMassiveEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CreateMassiveEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CreateMassiveEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CreateMassiveEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CreateMassiveEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CreateMassiveEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CreateMassiveEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ServerMassiveEntity massive_entity_list = 1;
  int massive_entity_list_size() const;
  void clear_massive_entity_list();
  static const int kMassiveEntityListFieldNumber = 1;
  const ::proto::ServerMassiveEntity& massive_entity_list(int index) const;
  ::proto::ServerMassiveEntity* mutable_massive_entity_list(int index);
  ::proto::ServerMassiveEntity* add_massive_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity >*
      mutable_massive_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity >&
      massive_entity_list() const;

  // @@protoc_insertion_point(class_scope:proto.CreateMassiveEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity > massive_entity_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DestroyMassiveEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DestroyMassiveEntityNotify) */ {
 public:
  DestroyMassiveEntityNotify();
  virtual ~DestroyMassiveEntityNotify();

  DestroyMassiveEntityNotify(const DestroyMassiveEntityNotify& from);

  inline DestroyMassiveEntityNotify& operator=(const DestroyMassiveEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyMassiveEntityNotify(DestroyMassiveEntityNotify&& from) noexcept
    : DestroyMassiveEntityNotify() {
    *this = ::std::move(from);
  }

  inline DestroyMassiveEntityNotify& operator=(DestroyMassiveEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyMassiveEntityNotify& default_instance();

  static inline const DestroyMassiveEntityNotify* internal_default_instance() {
    return reinterpret_cast<const DestroyMassiveEntityNotify*>(
               &_DestroyMassiveEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(DestroyMassiveEntityNotify* other);
  friend void swap(DestroyMassiveEntityNotify& a, DestroyMassiveEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyMassiveEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DestroyMassiveEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DestroyMassiveEntityNotify& from);
  void MergeFrom(const DestroyMassiveEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DestroyMassiveEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DestroyMassiveEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    DestroyMassiveEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DestroyMassiveEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DestroyMassiveEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DestroyMassiveEntityNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    DestroyMassiveEntityNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return DestroyMassiveEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DestroyMassiveEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DestroyMassiveEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DestroyMassiveEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DestroyMassiveEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DestroyMassiveEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DestroyMassiveEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  int massive_entity_list_size() const;
  void clear_massive_entity_list();
  static const int kMassiveEntityListFieldNumber = 1;
  const ::proto::ClientMassiveEntity& massive_entity_list(int index) const;
  ::proto::ClientMassiveEntity* mutable_massive_entity_list(int index);
  ::proto::ClientMassiveEntity* add_massive_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >*
      mutable_massive_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >&
      massive_entity_list() const;

  // @@protoc_insertion_point(class_scope:proto.DestroyMassiveEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity > massive_entity_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MassiveEntityStateChangedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MassiveEntityStateChangedNotify) */ {
 public:
  MassiveEntityStateChangedNotify();
  virtual ~MassiveEntityStateChangedNotify();

  MassiveEntityStateChangedNotify(const MassiveEntityStateChangedNotify& from);

  inline MassiveEntityStateChangedNotify& operator=(const MassiveEntityStateChangedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MassiveEntityStateChangedNotify(MassiveEntityStateChangedNotify&& from) noexcept
    : MassiveEntityStateChangedNotify() {
    *this = ::std::move(from);
  }

  inline MassiveEntityStateChangedNotify& operator=(MassiveEntityStateChangedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MassiveEntityStateChangedNotify& default_instance();

  static inline const MassiveEntityStateChangedNotify* internal_default_instance() {
    return reinterpret_cast<const MassiveEntityStateChangedNotify*>(
               &_MassiveEntityStateChangedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(MassiveEntityStateChangedNotify* other);
  friend void swap(MassiveEntityStateChangedNotify& a, MassiveEntityStateChangedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MassiveEntityStateChangedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MassiveEntityStateChangedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MassiveEntityStateChangedNotify& from);
  void MergeFrom(const MassiveEntityStateChangedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MassiveEntityStateChangedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MassiveEntityStateChangedNotify_CmdId CmdId;
  static const CmdId NONE =
    MassiveEntityStateChangedNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MassiveEntityStateChangedNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MassiveEntityStateChangedNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MassiveEntityStateChangedNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    MassiveEntityStateChangedNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return MassiveEntityStateChangedNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MassiveEntityStateChangedNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MassiveEntityStateChangedNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MassiveEntityStateChangedNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MassiveEntityStateChangedNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MassiveEntityStateChangedNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MassiveEntityStateChangedNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.MassiveEntityState massive_entity_state_list = 1;
  int massive_entity_state_list_size() const;
  void clear_massive_entity_state_list();
  static const int kMassiveEntityStateListFieldNumber = 1;
  const ::proto::MassiveEntityState& massive_entity_state_list(int index) const;
  ::proto::MassiveEntityState* mutable_massive_entity_state_list(int index);
  ::proto::MassiveEntityState* add_massive_entity_state_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState >*
      mutable_massive_entity_state_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState >&
      massive_entity_state_list() const;

  // @@protoc_insertion_point(class_scope:proto.MassiveEntityStateChangedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState > massive_entity_state_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TeamEntityInfo) */ {
 public:
  TeamEntityInfo();
  virtual ~TeamEntityInfo();

  TeamEntityInfo(const TeamEntityInfo& from);

  inline TeamEntityInfo& operator=(const TeamEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamEntityInfo(TeamEntityInfo&& from) noexcept
    : TeamEntityInfo() {
    *this = ::std::move(from);
  }

  inline TeamEntityInfo& operator=(TeamEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamEntityInfo& default_instance();

  static inline const TeamEntityInfo* internal_default_instance() {
    return reinterpret_cast<const TeamEntityInfo*>(
               &_TeamEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(TeamEntityInfo* other);
  friend void swap(TeamEntityInfo& a, TeamEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamEntityInfo& from);
  void MergeFrom(const TeamEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilitySyncStateInfo team_ability_info = 3;
  bool has_team_ability_info() const;
  void clear_team_ability_info();
  static const int kTeamAbilityInfoFieldNumber = 3;
  const ::proto::AbilitySyncStateInfo& team_ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_team_ability_info();
  ::proto::AbilitySyncStateInfo* release_team_ability_info();
  void set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info);

  // uint32 team_entity_id = 1;
  void clear_team_entity_id();
  static const int kTeamEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 team_entity_id() const;
  void set_team_entity_id(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 2;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 2;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TeamEntityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilitySyncStateInfo* team_ability_info_;
  ::google::protobuf::uint32 team_entity_id_;
  ::google::protobuf::uint32 authority_peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncTeamEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SyncTeamEntityNotify) */ {
 public:
  SyncTeamEntityNotify();
  virtual ~SyncTeamEntityNotify();

  SyncTeamEntityNotify(const SyncTeamEntityNotify& from);

  inline SyncTeamEntityNotify& operator=(const SyncTeamEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SyncTeamEntityNotify(SyncTeamEntityNotify&& from) noexcept
    : SyncTeamEntityNotify() {
    *this = ::std::move(from);
  }

  inline SyncTeamEntityNotify& operator=(SyncTeamEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncTeamEntityNotify& default_instance();

  static inline const SyncTeamEntityNotify* internal_default_instance() {
    return reinterpret_cast<const SyncTeamEntityNotify*>(
               &_SyncTeamEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(SyncTeamEntityNotify* other);
  friend void swap(SyncTeamEntityNotify& a, SyncTeamEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SyncTeamEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncTeamEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncTeamEntityNotify& from);
  void MergeFrom(const SyncTeamEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncTeamEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SyncTeamEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    SyncTeamEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SyncTeamEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SyncTeamEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SyncTeamEntityNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SyncTeamEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SyncTeamEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SyncTeamEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SyncTeamEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SyncTeamEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SyncTeamEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SyncTeamEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.TeamEntityInfo team_entity_info_list = 2;
  int team_entity_info_list_size() const;
  void clear_team_entity_info_list();
  static const int kTeamEntityInfoListFieldNumber = 2;
  const ::proto::TeamEntityInfo& team_entity_info_list(int index) const;
  ::proto::TeamEntityInfo* mutable_team_entity_info_list(int index);
  ::proto::TeamEntityInfo* add_team_entity_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo >*
      mutable_team_entity_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo >&
      team_entity_info_list() const;

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SyncTeamEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo > team_entity_info_list_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelTeamEntityNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelTeamEntityNotify) */ {
 public:
  DelTeamEntityNotify();
  virtual ~DelTeamEntityNotify();

  DelTeamEntityNotify(const DelTeamEntityNotify& from);

  inline DelTeamEntityNotify& operator=(const DelTeamEntityNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelTeamEntityNotify(DelTeamEntityNotify&& from) noexcept
    : DelTeamEntityNotify() {
    *this = ::std::move(from);
  }

  inline DelTeamEntityNotify& operator=(DelTeamEntityNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelTeamEntityNotify& default_instance();

  static inline const DelTeamEntityNotify* internal_default_instance() {
    return reinterpret_cast<const DelTeamEntityNotify*>(
               &_DelTeamEntityNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(DelTeamEntityNotify* other);
  friend void swap(DelTeamEntityNotify& a, DelTeamEntityNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelTeamEntityNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DelTeamEntityNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelTeamEntityNotify& from);
  void MergeFrom(const DelTeamEntityNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelTeamEntityNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DelTeamEntityNotify_CmdId CmdId;
  static const CmdId NONE =
    DelTeamEntityNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DelTeamEntityNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DelTeamEntityNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DelTeamEntityNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DelTeamEntityNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DelTeamEntityNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DelTeamEntityNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DelTeamEntityNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DelTeamEntityNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DelTeamEntityNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DelTeamEntityNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 del_entity_id_list = 2;
  int del_entity_id_list_size() const;
  void clear_del_entity_id_list();
  static const int kDelEntityIdListFieldNumber = 2;
  ::google::protobuf::uint32 del_entity_id_list(int index) const;
  void set_del_entity_id_list(int index, ::google::protobuf::uint32 value);
  void add_del_entity_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_entity_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_entity_id_list();

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelTeamEntityNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_entity_id_list_;
  mutable int _del_entity_id_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatInvokeEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatInvokeEntry) */ {
 public:
  CombatInvokeEntry();
  virtual ~CombatInvokeEntry();

  CombatInvokeEntry(const CombatInvokeEntry& from);

  inline CombatInvokeEntry& operator=(const CombatInvokeEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CombatInvokeEntry(CombatInvokeEntry&& from) noexcept
    : CombatInvokeEntry() {
    *this = ::std::move(from);
  }

  inline CombatInvokeEntry& operator=(CombatInvokeEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatInvokeEntry& default_instance();

  static inline const CombatInvokeEntry* internal_default_instance() {
    return reinterpret_cast<const CombatInvokeEntry*>(
               &_CombatInvokeEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(CombatInvokeEntry* other);
  friend void swap(CombatInvokeEntry& a, CombatInvokeEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CombatInvokeEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatInvokeEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatInvokeEntry& from);
  void MergeFrom(const CombatInvokeEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatInvokeEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes combat_data = 3;
  void clear_combat_data();
  static const int kCombatDataFieldNumber = 3;
  const ::std::string& combat_data() const;
  void set_combat_data(const ::std::string& value);
  #if LANG_CXX11
  void set_combat_data(::std::string&& value);
  #endif
  void set_combat_data(const char* value);
  void set_combat_data(const void* value, size_t size);
  ::std::string* mutable_combat_data();
  ::std::string* release_combat_data();
  void set_allocated_combat_data(::std::string* combat_data);

  // .proto.CombatTypeArgument argument_type = 1;
  void clear_argument_type();
  static const int kArgumentTypeFieldNumber = 1;
  ::proto::CombatTypeArgument argument_type() const;
  void set_argument_type(::proto::CombatTypeArgument value);

  // .proto.ForwardType forward_type = 2;
  void clear_forward_type();
  static const int kForwardTypeFieldNumber = 2;
  ::proto::ForwardType forward_type() const;
  void set_forward_type(::proto::ForwardType value);

  // @@protoc_insertion_point(class_scope:proto.CombatInvokeEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr combat_data_;
  int argument_type_;
  int forward_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatInvocationsNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatInvocationsNotify) */ {
 public:
  CombatInvocationsNotify();
  virtual ~CombatInvocationsNotify();

  CombatInvocationsNotify(const CombatInvocationsNotify& from);

  inline CombatInvocationsNotify& operator=(const CombatInvocationsNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CombatInvocationsNotify(CombatInvocationsNotify&& from) noexcept
    : CombatInvocationsNotify() {
    *this = ::std::move(from);
  }

  inline CombatInvocationsNotify& operator=(CombatInvocationsNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatInvocationsNotify& default_instance();

  static inline const CombatInvocationsNotify* internal_default_instance() {
    return reinterpret_cast<const CombatInvocationsNotify*>(
               &_CombatInvocationsNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(CombatInvocationsNotify* other);
  friend void swap(CombatInvocationsNotify& a, CombatInvocationsNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CombatInvocationsNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatInvocationsNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatInvocationsNotify& from);
  void MergeFrom(const CombatInvocationsNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatInvocationsNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CombatInvocationsNotify_CmdId CmdId;
  static const CmdId NONE =
    CombatInvocationsNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CombatInvocationsNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CombatInvocationsNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CombatInvocationsNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CombatInvocationsNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CombatInvocationsNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CombatInvocationsNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CombatInvocationsNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CombatInvocationsNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CombatInvocationsNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CombatInvocationsNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CombatInvocationsNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.CombatInvokeEntry invoke_list = 1;
  int invoke_list_size() const;
  void clear_invoke_list();
  static const int kInvokeListFieldNumber = 1;
  const ::proto::CombatInvokeEntry& invoke_list(int index) const;
  ::proto::CombatInvokeEntry* mutable_invoke_list(int index);
  ::proto::CombatInvokeEntry* add_invoke_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry >*
      mutable_invoke_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry >&
      invoke_list() const;

  // @@protoc_insertion_point(class_scope:proto.CombatInvocationsNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry > invoke_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerBuffChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerBuffChangeNotify) */ {
 public:
  ServerBuffChangeNotify();
  virtual ~ServerBuffChangeNotify();

  ServerBuffChangeNotify(const ServerBuffChangeNotify& from);

  inline ServerBuffChangeNotify& operator=(const ServerBuffChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerBuffChangeNotify(ServerBuffChangeNotify&& from) noexcept
    : ServerBuffChangeNotify() {
    *this = ::std::move(from);
  }

  inline ServerBuffChangeNotify& operator=(ServerBuffChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerBuffChangeNotify& default_instance();

  static inline const ServerBuffChangeNotify* internal_default_instance() {
    return reinterpret_cast<const ServerBuffChangeNotify*>(
               &_ServerBuffChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(ServerBuffChangeNotify* other);
  friend void swap(ServerBuffChangeNotify& a, ServerBuffChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerBuffChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerBuffChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerBuffChangeNotify& from);
  void MergeFrom(const ServerBuffChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerBuffChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ServerBuffChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    ServerBuffChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ServerBuffChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ServerBuffChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ServerBuffChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ServerBuffChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ServerBuffChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ServerBuffChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ServerBuffChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ServerBuffChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ServerBuffChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ServerBuffChangeNotify_CmdId_Parse(name, value);
  }

  typedef ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeType;
  static const ServerBuffChangeType ADD_SERVER_BUFF =
    ServerBuffChangeNotify_ServerBuffChangeType_ADD_SERVER_BUFF;
  static const ServerBuffChangeType DEL_SERVER_BUFF =
    ServerBuffChangeNotify_ServerBuffChangeType_DEL_SERVER_BUFF;
  static inline bool ServerBuffChangeType_IsValid(int value) {
    return ServerBuffChangeNotify_ServerBuffChangeType_IsValid(value);
  }
  static const ServerBuffChangeType ServerBuffChangeType_MIN =
    ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MIN;
  static const ServerBuffChangeType ServerBuffChangeType_MAX =
    ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_MAX;
  static const int ServerBuffChangeType_ARRAYSIZE =
    ServerBuffChangeNotify_ServerBuffChangeType_ServerBuffChangeType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ServerBuffChangeType_descriptor() {
    return ServerBuffChangeNotify_ServerBuffChangeType_descriptor();
  }
  static inline const ::std::string& ServerBuffChangeType_Name(ServerBuffChangeType value) {
    return ServerBuffChangeNotify_ServerBuffChangeType_Name(value);
  }
  static inline bool ServerBuffChangeType_Parse(const ::std::string& name,
      ServerBuffChangeType* value) {
    return ServerBuffChangeNotify_ServerBuffChangeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 avatar_guid_list = 2;
  int avatar_guid_list_size() const;
  void clear_avatar_guid_list();
  static const int kAvatarGuidListFieldNumber = 2;
  ::google::protobuf::uint64 avatar_guid_list(int index) const;
  void set_avatar_guid_list(int index, ::google::protobuf::uint64 value);
  void add_avatar_guid_list(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      avatar_guid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_avatar_guid_list();

  // repeated .proto.ServerBuff server_buff_list = 3;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 3;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // .proto.ServerBuffChangeNotify.ServerBuffChangeType server_buff_change_type = 1;
  void clear_server_buff_change_type();
  static const int kServerBuffChangeTypeFieldNumber = 1;
  ::proto::ServerBuffChangeNotify_ServerBuffChangeType server_buff_change_type() const;
  void set_server_buff_change_type(::proto::ServerBuffChangeNotify_ServerBuffChangeType value);

  // @@protoc_insertion_point(class_scope:proto.ServerBuffChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > avatar_guid_list_;
  mutable int _avatar_guid_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  int server_buff_change_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class AiThreatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AiThreatInfo) */ {
 public:
  AiThreatInfo();
  virtual ~AiThreatInfo();

  AiThreatInfo(const AiThreatInfo& from);

  inline AiThreatInfo& operator=(const AiThreatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AiThreatInfo(AiThreatInfo&& from) noexcept
    : AiThreatInfo() {
    *this = ::std::move(from);
  }

  inline AiThreatInfo& operator=(AiThreatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AiThreatInfo& default_instance();

  static inline const AiThreatInfo* internal_default_instance() {
    return reinterpret_cast<const AiThreatInfo*>(
               &_AiThreatInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(AiThreatInfo* other);
  friend void swap(AiThreatInfo& a, AiThreatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AiThreatInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AiThreatInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AiThreatInfo& from);
  void MergeFrom(const AiThreatInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AiThreatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> ai_threat_map = 1;
  int ai_threat_map_size() const;
  void clear_ai_threat_map();
  static const int kAiThreatMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      ai_threat_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_ai_threat_map();

  // @@protoc_insertion_point(class_scope:proto.AiThreatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class AiThreatInfo_AiThreatMapEntry : public ::google::protobuf::internal::MapEntry<AiThreatInfo_AiThreatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AiThreatInfo_AiThreatMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    AiThreatInfo_AiThreatMapEntry();
    AiThreatInfo_AiThreatMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AiThreatInfo_AiThreatMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AiThreatInfo_AiThreatMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      AiThreatInfo_AiThreatMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > ai_threat_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class EvtAiSyncCombatThreatInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EvtAiSyncCombatThreatInfoNotify) */ {
 public:
  EvtAiSyncCombatThreatInfoNotify();
  virtual ~EvtAiSyncCombatThreatInfoNotify();

  EvtAiSyncCombatThreatInfoNotify(const EvtAiSyncCombatThreatInfoNotify& from);

  inline EvtAiSyncCombatThreatInfoNotify& operator=(const EvtAiSyncCombatThreatInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EvtAiSyncCombatThreatInfoNotify(EvtAiSyncCombatThreatInfoNotify&& from) noexcept
    : EvtAiSyncCombatThreatInfoNotify() {
    *this = ::std::move(from);
  }

  inline EvtAiSyncCombatThreatInfoNotify& operator=(EvtAiSyncCombatThreatInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EvtAiSyncCombatThreatInfoNotify& default_instance();

  static inline const EvtAiSyncCombatThreatInfoNotify* internal_default_instance() {
    return reinterpret_cast<const EvtAiSyncCombatThreatInfoNotify*>(
               &_EvtAiSyncCombatThreatInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(EvtAiSyncCombatThreatInfoNotify* other);
  friend void swap(EvtAiSyncCombatThreatInfoNotify& a, EvtAiSyncCombatThreatInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EvtAiSyncCombatThreatInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EvtAiSyncCombatThreatInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EvtAiSyncCombatThreatInfoNotify& from);
  void MergeFrom(const EvtAiSyncCombatThreatInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EvtAiSyncCombatThreatInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef EvtAiSyncCombatThreatInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    EvtAiSyncCombatThreatInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EvtAiSyncCombatThreatInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EvtAiSyncCombatThreatInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EvtAiSyncCombatThreatInfoNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EvtAiSyncCombatThreatInfoNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EvtAiSyncCombatThreatInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EvtAiSyncCombatThreatInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EvtAiSyncCombatThreatInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EvtAiSyncCombatThreatInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.AiThreatInfo> combat_threat_info_map = 1;
  int combat_threat_info_map_size() const;
  void clear_combat_threat_info_map();
  static const int kCombatThreatInfoMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >&
      combat_threat_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >*
      mutable_combat_threat_info_map();

  // @@protoc_insertion_point(class_scope:proto.EvtAiSyncCombatThreatInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry : public ::google::protobuf::internal::MapEntry<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::AiThreatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::AiThreatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry();
    EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry,
      ::google::protobuf::uint32, ::proto::AiThreatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > combat_threat_info_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5ffight_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HitCollision

// .proto.HitColliderType hit_collider_type = 1;
inline void HitCollision::clear_hit_collider_type() {
  hit_collider_type_ = 0;
}
inline ::proto::HitColliderType HitCollision::hit_collider_type() const {
  // @@protoc_insertion_point(field_get:proto.HitCollision.hit_collider_type)
  return static_cast< ::proto::HitColliderType >(hit_collider_type_);
}
inline void HitCollision::set_hit_collider_type(::proto::HitColliderType value) {
  
  hit_collider_type_ = value;
  // @@protoc_insertion_point(field_set:proto.HitCollision.hit_collider_type)
}

// int32 hit_box_index = 2;
inline void HitCollision::clear_hit_box_index() {
  hit_box_index_ = 0;
}
inline ::google::protobuf::int32 HitCollision::hit_box_index() const {
  // @@protoc_insertion_point(field_get:proto.HitCollision.hit_box_index)
  return hit_box_index_;
}
inline void HitCollision::set_hit_box_index(::google::protobuf::int32 value) {
  
  hit_box_index_ = value;
  // @@protoc_insertion_point(field_set:proto.HitCollision.hit_box_index)
}

// .proto.Vector hit_point = 3;
inline bool HitCollision::has_hit_point() const {
  return this != internal_default_instance() && hit_point_ != NULL;
}
inline void HitCollision::clear_hit_point() {
  if (GetArenaNoVirtual() == NULL && hit_point_ != NULL) delete hit_point_;
  hit_point_ = NULL;
}
inline const ::proto::Vector& HitCollision::hit_point() const {
  const ::proto::Vector* p = hit_point_;
  // @@protoc_insertion_point(field_get:proto.HitCollision.hit_point)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HitCollision::mutable_hit_point() {
  
  if (hit_point_ == NULL) {
    hit_point_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitCollision.hit_point)
  return hit_point_;
}
inline ::proto::Vector* HitCollision::release_hit_point() {
  // @@protoc_insertion_point(field_release:proto.HitCollision.hit_point)
  
  ::proto::Vector* temp = hit_point_;
  hit_point_ = NULL;
  return temp;
}
inline void HitCollision::set_allocated_hit_point(::proto::Vector* hit_point) {
  delete hit_point_;
  hit_point_ = hit_point;
  if (hit_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitCollision.hit_point)
}

// .proto.Vector hit_dir = 4;
inline bool HitCollision::has_hit_dir() const {
  return this != internal_default_instance() && hit_dir_ != NULL;
}
inline void HitCollision::clear_hit_dir() {
  if (GetArenaNoVirtual() == NULL && hit_dir_ != NULL) delete hit_dir_;
  hit_dir_ = NULL;
}
inline const ::proto::Vector& HitCollision::hit_dir() const {
  const ::proto::Vector* p = hit_dir_;
  // @@protoc_insertion_point(field_get:proto.HitCollision.hit_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HitCollision::mutable_hit_dir() {
  
  if (hit_dir_ == NULL) {
    hit_dir_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitCollision.hit_dir)
  return hit_dir_;
}
inline ::proto::Vector* HitCollision::release_hit_dir() {
  // @@protoc_insertion_point(field_release:proto.HitCollision.hit_dir)
  
  ::proto::Vector* temp = hit_dir_;
  hit_dir_ = NULL;
  return temp;
}
inline void HitCollision::set_allocated_hit_dir(::proto::Vector* hit_dir) {
  delete hit_dir_;
  hit_dir_ = hit_dir;
  if (hit_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitCollision.hit_dir)
}

// -------------------------------------------------------------------

// AttackHitEffectResult

// uint32 hit_eff_level = 1;
inline void AttackHitEffectResult::clear_hit_eff_level() {
  hit_eff_level_ = 0u;
}
inline ::google::protobuf::uint32 AttackHitEffectResult::hit_eff_level() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.hit_eff_level)
  return hit_eff_level_;
}
inline void AttackHitEffectResult::set_hit_eff_level(::google::protobuf::uint32 value) {
  
  hit_eff_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.hit_eff_level)
}

// float retreat_strength = 2;
inline void AttackHitEffectResult::clear_retreat_strength() {
  retreat_strength_ = 0;
}
inline float AttackHitEffectResult::retreat_strength() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.retreat_strength)
  return retreat_strength_;
}
inline void AttackHitEffectResult::set_retreat_strength(float value) {
  
  retreat_strength_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.retreat_strength)
}

// float air_strength = 3;
inline void AttackHitEffectResult::clear_air_strength() {
  air_strength_ = 0;
}
inline float AttackHitEffectResult::air_strength() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.air_strength)
  return air_strength_;
}
inline void AttackHitEffectResult::set_air_strength(float value) {
  
  air_strength_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.air_strength)
}

// float hit_halt_time = 4;
inline void AttackHitEffectResult::clear_hit_halt_time() {
  hit_halt_time_ = 0;
}
inline float AttackHitEffectResult::hit_halt_time() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.hit_halt_time)
  return hit_halt_time_;
}
inline void AttackHitEffectResult::set_hit_halt_time(float value) {
  
  hit_halt_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.hit_halt_time)
}

// float hit_halt_time_scale = 5;
inline void AttackHitEffectResult::clear_hit_halt_time_scale() {
  hit_halt_time_scale_ = 0;
}
inline float AttackHitEffectResult::hit_halt_time_scale() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.hit_halt_time_scale)
  return hit_halt_time_scale_;
}
inline void AttackHitEffectResult::set_hit_halt_time_scale(float value) {
  
  hit_halt_time_scale_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.hit_halt_time_scale)
}

// -------------------------------------------------------------------

// AbilityIdentifier

// uint32 instanced_ability_id = 1;
inline void AbilityIdentifier::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityIdentifier::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.instanced_ability_id)
  return instanced_ability_id_;
}
inline void AbilityIdentifier::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.instanced_ability_id)
}

// uint32 ability_caster_id = 2;
inline void AbilityIdentifier::clear_ability_caster_id() {
  ability_caster_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityIdentifier::ability_caster_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.ability_caster_id)
  return ability_caster_id_;
}
inline void AbilityIdentifier::set_ability_caster_id(::google::protobuf::uint32 value) {
  
  ability_caster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.ability_caster_id)
}

// int32 local_id = 3;
inline void AbilityIdentifier::clear_local_id() {
  local_id_ = 0;
}
inline ::google::protobuf::int32 AbilityIdentifier::local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.local_id)
  return local_id_;
}
inline void AbilityIdentifier::set_local_id(::google::protobuf::int32 value) {
  
  local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.local_id)
}

// uint32 instanced_modifier_id = 4;
inline void AbilityIdentifier::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityIdentifier::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.instanced_modifier_id)
  return instanced_modifier_id_;
}
inline void AbilityIdentifier::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.instanced_modifier_id)
}

// uint32 modifier_owner_id = 5;
inline void AbilityIdentifier::clear_modifier_owner_id() {
  modifier_owner_id_ = 0u;
}
inline ::google::protobuf::uint32 AbilityIdentifier::modifier_owner_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.modifier_owner_id)
  return modifier_owner_id_;
}
inline void AbilityIdentifier::set_modifier_owner_id(::google::protobuf::uint32 value) {
  
  modifier_owner_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.modifier_owner_id)
}

// -------------------------------------------------------------------

// AttackResult

// uint32 attacker_id = 1;
inline void AttackResult::clear_attacker_id() {
  attacker_id_ = 0u;
}
inline ::google::protobuf::uint32 AttackResult::attacker_id() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.attacker_id)
  return attacker_id_;
}
inline void AttackResult::set_attacker_id(::google::protobuf::uint32 value) {
  
  attacker_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.attacker_id)
}

// uint32 defense_id = 2;
inline void AttackResult::clear_defense_id() {
  defense_id_ = 0u;
}
inline ::google::protobuf::uint32 AttackResult::defense_id() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.defense_id)
  return defense_id_;
}
inline void AttackResult::set_defense_id(::google::protobuf::uint32 value) {
  
  defense_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.defense_id)
}

// string anim_event_id = 3;
inline void AttackResult::clear_anim_event_id() {
  anim_event_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AttackResult::anim_event_id() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.anim_event_id)
  return anim_event_id_.GetNoArena();
}
inline void AttackResult::set_anim_event_id(const ::std::string& value) {
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AttackResult.anim_event_id)
}
#if LANG_CXX11
inline void AttackResult::set_anim_event_id(::std::string&& value) {
  
  anim_event_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AttackResult.anim_event_id)
}
#endif
inline void AttackResult::set_anim_event_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AttackResult.anim_event_id)
}
inline void AttackResult::set_anim_event_id(const char* value, size_t size) {
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AttackResult.anim_event_id)
}
inline ::std::string* AttackResult::mutable_anim_event_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.anim_event_id)
  return anim_event_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttackResult::release_anim_event_id() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.anim_event_id)
  
  return anim_event_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttackResult::set_allocated_anim_event_id(::std::string* anim_event_id) {
  if (anim_event_id != NULL) {
    
  } else {
    
  }
  anim_event_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anim_event_id);
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.anim_event_id)
}

// .proto.AbilityIdentifier ability_identifier = 4;
inline bool AttackResult::has_ability_identifier() const {
  return this != internal_default_instance() && ability_identifier_ != NULL;
}
inline void AttackResult::clear_ability_identifier() {
  if (GetArenaNoVirtual() == NULL && ability_identifier_ != NULL) delete ability_identifier_;
  ability_identifier_ = NULL;
}
inline const ::proto::AbilityIdentifier& AttackResult::ability_identifier() const {
  const ::proto::AbilityIdentifier* p = ability_identifier_;
  // @@protoc_insertion_point(field_get:proto.AttackResult.ability_identifier)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityIdentifier*>(
      &::proto::_AbilityIdentifier_default_instance_);
}
inline ::proto::AbilityIdentifier* AttackResult::mutable_ability_identifier() {
  
  if (ability_identifier_ == NULL) {
    ability_identifier_ = new ::proto::AbilityIdentifier;
  }
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.ability_identifier)
  return ability_identifier_;
}
inline ::proto::AbilityIdentifier* AttackResult::release_ability_identifier() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.ability_identifier)
  
  ::proto::AbilityIdentifier* temp = ability_identifier_;
  ability_identifier_ = NULL;
  return temp;
}
inline void AttackResult::set_allocated_ability_identifier(::proto::AbilityIdentifier* ability_identifier) {
  delete ability_identifier_;
  ability_identifier_ = ability_identifier;
  if (ability_identifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.ability_identifier)
}

// string attack_tag = 5;
inline void AttackResult::clear_attack_tag() {
  attack_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AttackResult::attack_tag() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.attack_tag)
  return attack_tag_.GetNoArena();
}
inline void AttackResult::set_attack_tag(const ::std::string& value) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AttackResult.attack_tag)
}
#if LANG_CXX11
inline void AttackResult::set_attack_tag(::std::string&& value) {
  
  attack_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AttackResult.attack_tag)
}
#endif
inline void AttackResult::set_attack_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AttackResult.attack_tag)
}
inline void AttackResult::set_attack_tag(const char* value, size_t size) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AttackResult.attack_tag)
}
inline ::std::string* AttackResult::mutable_attack_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.attack_tag)
  return attack_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttackResult::release_attack_tag() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.attack_tag)
  
  return attack_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttackResult::set_allocated_attack_tag(::std::string* attack_tag) {
  if (attack_tag != NULL) {
    
  } else {
    
  }
  attack_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attack_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.attack_tag)
}

// float damage = 6;
inline void AttackResult::clear_damage() {
  damage_ = 0;
}
inline float AttackResult::damage() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.damage)
  return damage_;
}
inline void AttackResult::set_damage(float value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.damage)
}

// bool is_crit = 7;
inline void AttackResult::clear_is_crit() {
  is_crit_ = false;
}
inline bool AttackResult::is_crit() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.is_crit)
  return is_crit_;
}
inline void AttackResult::set_is_crit(bool value) {
  
  is_crit_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.is_crit)
}

// .proto.HitCollision hit_collision = 8;
inline bool AttackResult::has_hit_collision() const {
  return this != internal_default_instance() && hit_collision_ != NULL;
}
inline void AttackResult::clear_hit_collision() {
  if (GetArenaNoVirtual() == NULL && hit_collision_ != NULL) delete hit_collision_;
  hit_collision_ = NULL;
}
inline const ::proto::HitCollision& AttackResult::hit_collision() const {
  const ::proto::HitCollision* p = hit_collision_;
  // @@protoc_insertion_point(field_get:proto.AttackResult.hit_collision)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HitCollision*>(
      &::proto::_HitCollision_default_instance_);
}
inline ::proto::HitCollision* AttackResult::mutable_hit_collision() {
  
  if (hit_collision_ == NULL) {
    hit_collision_ = new ::proto::HitCollision;
  }
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.hit_collision)
  return hit_collision_;
}
inline ::proto::HitCollision* AttackResult::release_hit_collision() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.hit_collision)
  
  ::proto::HitCollision* temp = hit_collision_;
  hit_collision_ = NULL;
  return temp;
}
inline void AttackResult::set_allocated_hit_collision(::proto::HitCollision* hit_collision) {
  delete hit_collision_;
  hit_collision_ = hit_collision;
  if (hit_collision) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.hit_collision)
}

// uint32 hit_pos_type = 9;
inline void AttackResult::clear_hit_pos_type() {
  hit_pos_type_ = 0u;
}
inline ::google::protobuf::uint32 AttackResult::hit_pos_type() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.hit_pos_type)
  return hit_pos_type_;
}
inline void AttackResult::set_hit_pos_type(::google::protobuf::uint32 value) {
  
  hit_pos_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.hit_pos_type)
}

// uint32 endure_break = 10;
inline void AttackResult::clear_endure_break() {
  endure_break_ = 0u;
}
inline ::google::protobuf::uint32 AttackResult::endure_break() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.endure_break)
  return endure_break_;
}
inline void AttackResult::set_endure_break(::google::protobuf::uint32 value) {
  
  endure_break_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.endure_break)
}

// .proto.Vector resolved_dir = 11;
inline bool AttackResult::has_resolved_dir() const {
  return this != internal_default_instance() && resolved_dir_ != NULL;
}
inline void AttackResult::clear_resolved_dir() {
  if (GetArenaNoVirtual() == NULL && resolved_dir_ != NULL) delete resolved_dir_;
  resolved_dir_ = NULL;
}
inline const ::proto::Vector& AttackResult::resolved_dir() const {
  const ::proto::Vector* p = resolved_dir_;
  // @@protoc_insertion_point(field_get:proto.AttackResult.resolved_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AttackResult::mutable_resolved_dir() {
  
  if (resolved_dir_ == NULL) {
    resolved_dir_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.resolved_dir)
  return resolved_dir_;
}
inline ::proto::Vector* AttackResult::release_resolved_dir() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.resolved_dir)
  
  ::proto::Vector* temp = resolved_dir_;
  resolved_dir_ = NULL;
  return temp;
}
inline void AttackResult::set_allocated_resolved_dir(::proto::Vector* resolved_dir) {
  delete resolved_dir_;
  resolved_dir_ = resolved_dir;
  if (resolved_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.resolved_dir)
}

// int32 hit_retreat_angle_compat = 12;
inline void AttackResult::clear_hit_retreat_angle_compat() {
  hit_retreat_angle_compat_ = 0;
}
inline ::google::protobuf::int32 AttackResult::hit_retreat_angle_compat() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.hit_retreat_angle_compat)
  return hit_retreat_angle_compat_;
}
inline void AttackResult::set_hit_retreat_angle_compat(::google::protobuf::int32 value) {
  
  hit_retreat_angle_compat_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.hit_retreat_angle_compat)
}

// .proto.AttackHitEffectResult hit_eff_result = 13;
inline bool AttackResult::has_hit_eff_result() const {
  return this != internal_default_instance() && hit_eff_result_ != NULL;
}
inline void AttackResult::clear_hit_eff_result() {
  if (GetArenaNoVirtual() == NULL && hit_eff_result_ != NULL) delete hit_eff_result_;
  hit_eff_result_ = NULL;
}
inline const ::proto::AttackHitEffectResult& AttackResult::hit_eff_result() const {
  const ::proto::AttackHitEffectResult* p = hit_eff_result_;
  // @@protoc_insertion_point(field_get:proto.AttackResult.hit_eff_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AttackHitEffectResult*>(
      &::proto::_AttackHitEffectResult_default_instance_);
}
inline ::proto::AttackHitEffectResult* AttackResult::mutable_hit_eff_result() {
  
  if (hit_eff_result_ == NULL) {
    hit_eff_result_ = new ::proto::AttackHitEffectResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.hit_eff_result)
  return hit_eff_result_;
}
inline ::proto::AttackHitEffectResult* AttackResult::release_hit_eff_result() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.hit_eff_result)
  
  ::proto::AttackHitEffectResult* temp = hit_eff_result_;
  hit_eff_result_ = NULL;
  return temp;
}
inline void AttackResult::set_allocated_hit_eff_result(::proto::AttackHitEffectResult* hit_eff_result) {
  delete hit_eff_result_;
  hit_eff_result_ = hit_eff_result;
  if (hit_eff_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.hit_eff_result)
}

// uint32 element_type = 14;
inline void AttackResult::clear_element_type() {
  element_type_ = 0u;
}
inline ::google::protobuf::uint32 AttackResult::element_type() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.element_type)
  return element_type_;
}
inline void AttackResult::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.element_type)
}

// float damage_percentage = 15;
inline void AttackResult::clear_damage_percentage() {
  damage_percentage_ = 0;
}
inline float AttackResult::damage_percentage() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.damage_percentage)
  return damage_percentage_;
}
inline void AttackResult::set_damage_percentage(float value) {
  
  damage_percentage_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.damage_percentage)
}

// float damage_extra = 16;
inline void AttackResult::clear_damage_extra() {
  damage_extra_ = 0;
}
inline float AttackResult::damage_extra() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.damage_extra)
  return damage_extra_;
}
inline void AttackResult::set_damage_extra(float value) {
  
  damage_extra_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.damage_extra)
}

// float bonus_critical = 17;
inline void AttackResult::clear_bonus_critical() {
  bonus_critical_ = 0;
}
inline float AttackResult::bonus_critical() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.bonus_critical)
  return bonus_critical_;
}
inline void AttackResult::set_bonus_critical(float value) {
  
  bonus_critical_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.bonus_critical)
}

// float bonus_critical_hurt = 18;
inline void AttackResult::clear_bonus_critical_hurt() {
  bonus_critical_hurt_ = 0;
}
inline float AttackResult::bonus_critical_hurt() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.bonus_critical_hurt)
  return bonus_critical_hurt_;
}
inline void AttackResult::set_bonus_critical_hurt(float value) {
  
  bonus_critical_hurt_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.bonus_critical_hurt)
}

// bool use_gadget_damage_action = 19;
inline void AttackResult::clear_use_gadget_damage_action() {
  use_gadget_damage_action_ = false;
}
inline bool AttackResult::use_gadget_damage_action() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.use_gadget_damage_action)
  return use_gadget_damage_action_;
}
inline void AttackResult::set_use_gadget_damage_action(bool value) {
  
  use_gadget_damage_action_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.use_gadget_damage_action)
}

// uint32 gadget_damage_action_idx = 20;
inline void AttackResult::clear_gadget_damage_action_idx() {
  gadget_damage_action_idx_ = 0u;
}
inline ::google::protobuf::uint32 AttackResult::gadget_damage_action_idx() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.gadget_damage_action_idx)
  return gadget_damage_action_idx_;
}
inline void AttackResult::set_gadget_damage_action_idx(::google::protobuf::uint32 value) {
  
  gadget_damage_action_idx_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.gadget_damage_action_idx)
}

// uint32 strike_type = 21;
inline void AttackResult::clear_strike_type() {
  strike_type_ = 0u;
}
inline ::google::protobuf::uint32 AttackResult::strike_type() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.strike_type)
  return strike_type_;
}
inline void AttackResult::set_strike_type(::google::protobuf::uint32 value) {
  
  strike_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.strike_type)
}

// bool is_resist_text = 22;
inline void AttackResult::clear_is_resist_text() {
  is_resist_text_ = false;
}
inline bool AttackResult::is_resist_text() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.is_resist_text)
  return is_resist_text_;
}
inline void AttackResult::set_is_resist_text(bool value) {
  
  is_resist_text_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.is_resist_text)
}

// float critical_rand = 23;
inline void AttackResult::clear_critical_rand() {
  critical_rand_ = 0;
}
inline float AttackResult::critical_rand() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.critical_rand)
  return critical_rand_;
}
inline void AttackResult::set_critical_rand(float value) {
  
  critical_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.critical_rand)
}

// float element_amplify_rate = 24;
inline void AttackResult::clear_element_amplify_rate() {
  element_amplify_rate_ = 0;
}
inline float AttackResult::element_amplify_rate() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.element_amplify_rate)
  return element_amplify_rate_;
}
inline void AttackResult::set_element_amplify_rate(float value) {
  
  element_amplify_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.element_amplify_rate)
}

// string attenuation_tag = 25;
inline void AttackResult::clear_attenuation_tag() {
  attenuation_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AttackResult::attenuation_tag() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.attenuation_tag)
  return attenuation_tag_.GetNoArena();
}
inline void AttackResult::set_attenuation_tag(const ::std::string& value) {
  
  attenuation_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AttackResult.attenuation_tag)
}
#if LANG_CXX11
inline void AttackResult::set_attenuation_tag(::std::string&& value) {
  
  attenuation_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AttackResult.attenuation_tag)
}
#endif
inline void AttackResult::set_attenuation_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attenuation_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AttackResult.attenuation_tag)
}
inline void AttackResult::set_attenuation_tag(const char* value, size_t size) {
  
  attenuation_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AttackResult.attenuation_tag)
}
inline ::std::string* AttackResult::mutable_attenuation_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.attenuation_tag)
  return attenuation_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttackResult::release_attenuation_tag() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.attenuation_tag)
  
  return attenuation_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttackResult::set_allocated_attenuation_tag(::std::string* attenuation_tag) {
  if (attenuation_tag != NULL) {
    
  } else {
    
  }
  attenuation_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attenuation_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.attenuation_tag)
}

// float damage_shield = 26;
inline void AttackResult::clear_damage_shield() {
  damage_shield_ = 0;
}
inline float AttackResult::damage_shield() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.damage_shield)
  return damage_shield_;
}
inline void AttackResult::set_damage_shield(float value) {
  
  damage_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.damage_shield)
}

// bool mute_element_hurt = 27;
inline void AttackResult::clear_mute_element_hurt() {
  mute_element_hurt_ = false;
}
inline bool AttackResult::mute_element_hurt() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.mute_element_hurt)
  return mute_element_hurt_;
}
inline void AttackResult::set_mute_element_hurt(bool value) {
  
  mute_element_hurt_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.mute_element_hurt)
}

// bool true_damage = 28;
inline void AttackResult::clear_true_damage() {
  true_damage_ = false;
}
inline bool AttackResult::true_damage() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.true_damage)
  return true_damage_;
}
inline void AttackResult::set_true_damage(bool value) {
  
  true_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.true_damage)
}

// string attenuation_group = 29;
inline void AttackResult::clear_attenuation_group() {
  attenuation_group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AttackResult::attenuation_group() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.attenuation_group)
  return attenuation_group_.GetNoArena();
}
inline void AttackResult::set_attenuation_group(const ::std::string& value) {
  
  attenuation_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AttackResult.attenuation_group)
}
#if LANG_CXX11
inline void AttackResult::set_attenuation_group(::std::string&& value) {
  
  attenuation_group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AttackResult.attenuation_group)
}
#endif
inline void AttackResult::set_attenuation_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attenuation_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AttackResult.attenuation_group)
}
inline void AttackResult::set_attenuation_group(const char* value, size_t size) {
  
  attenuation_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AttackResult.attenuation_group)
}
inline ::std::string* AttackResult::mutable_attenuation_group() {
  
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.attenuation_group)
  return attenuation_group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttackResult::release_attenuation_group() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.attenuation_group)
  
  return attenuation_group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttackResult::set_allocated_attenuation_group(::std::string* attenuation_group) {
  if (attenuation_group != NULL) {
    
  } else {
    
  }
  attenuation_group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attenuation_group);
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.attenuation_group)
}

// -------------------------------------------------------------------

// EvtBeingHitInfo

// uint32 peer_id = 1;
inline void EvtBeingHitInfo::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtBeingHitInfo::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitInfo.peer_id)
  return peer_id_;
}
inline void EvtBeingHitInfo::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBeingHitInfo.peer_id)
}

// .proto.AttackResult attack_result = 2;
inline bool EvtBeingHitInfo::has_attack_result() const {
  return this != internal_default_instance() && attack_result_ != NULL;
}
inline void EvtBeingHitInfo::clear_attack_result() {
  if (GetArenaNoVirtual() == NULL && attack_result_ != NULL) delete attack_result_;
  attack_result_ = NULL;
}
inline const ::proto::AttackResult& EvtBeingHitInfo::attack_result() const {
  const ::proto::AttackResult* p = attack_result_;
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitInfo.attack_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AttackResult*>(
      &::proto::_AttackResult_default_instance_);
}
inline ::proto::AttackResult* EvtBeingHitInfo::mutable_attack_result() {
  
  if (attack_result_ == NULL) {
    attack_result_ = new ::proto::AttackResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBeingHitInfo.attack_result)
  return attack_result_;
}
inline ::proto::AttackResult* EvtBeingHitInfo::release_attack_result() {
  // @@protoc_insertion_point(field_release:proto.EvtBeingHitInfo.attack_result)
  
  ::proto::AttackResult* temp = attack_result_;
  attack_result_ = NULL;
  return temp;
}
inline void EvtBeingHitInfo::set_allocated_attack_result(::proto::AttackResult* attack_result) {
  delete attack_result_;
  attack_result_ = attack_result;
  if (attack_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBeingHitInfo.attack_result)
}

// -------------------------------------------------------------------

// EvtBeingHitNotify

// .proto.ForwardType forward_type = 1;
inline void EvtBeingHitNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtBeingHitNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtBeingHitNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBeingHitNotify.forward_type)
}

// .proto.EvtBeingHitInfo being_hit_info = 2;
inline bool EvtBeingHitNotify::has_being_hit_info() const {
  return this != internal_default_instance() && being_hit_info_ != NULL;
}
inline void EvtBeingHitNotify::clear_being_hit_info() {
  if (GetArenaNoVirtual() == NULL && being_hit_info_ != NULL) delete being_hit_info_;
  being_hit_info_ = NULL;
}
inline const ::proto::EvtBeingHitInfo& EvtBeingHitNotify::being_hit_info() const {
  const ::proto::EvtBeingHitInfo* p = being_hit_info_;
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitNotify.being_hit_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtBeingHitInfo*>(
      &::proto::_EvtBeingHitInfo_default_instance_);
}
inline ::proto::EvtBeingHitInfo* EvtBeingHitNotify::mutable_being_hit_info() {
  
  if (being_hit_info_ == NULL) {
    being_hit_info_ = new ::proto::EvtBeingHitInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBeingHitNotify.being_hit_info)
  return being_hit_info_;
}
inline ::proto::EvtBeingHitInfo* EvtBeingHitNotify::release_being_hit_info() {
  // @@protoc_insertion_point(field_release:proto.EvtBeingHitNotify.being_hit_info)
  
  ::proto::EvtBeingHitInfo* temp = being_hit_info_;
  being_hit_info_ = NULL;
  return temp;
}
inline void EvtBeingHitNotify::set_allocated_being_hit_info(::proto::EvtBeingHitInfo* being_hit_info) {
  delete being_hit_info_;
  being_hit_info_ = being_hit_info;
  if (being_hit_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBeingHitNotify.being_hit_info)
}

// -------------------------------------------------------------------

// EvtAnimatorParameterInfo

// uint32 entity_id = 1;
inline void EvtAnimatorParameterInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtAnimatorParameterInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterInfo.entity_id)
  return entity_id_;
}
inline void EvtAnimatorParameterInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorParameterInfo.entity_id)
}

// int32 name_id = 2;
inline void EvtAnimatorParameterInfo::clear_name_id() {
  name_id_ = 0;
}
inline ::google::protobuf::int32 EvtAnimatorParameterInfo::name_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterInfo.name_id)
  return name_id_;
}
inline void EvtAnimatorParameterInfo::set_name_id(::google::protobuf::int32 value) {
  
  name_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorParameterInfo.name_id)
}

// bool is_server_cache = 3;
inline void EvtAnimatorParameterInfo::clear_is_server_cache() {
  is_server_cache_ = false;
}
inline bool EvtAnimatorParameterInfo::is_server_cache() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterInfo.is_server_cache)
  return is_server_cache_;
}
inline void EvtAnimatorParameterInfo::set_is_server_cache(bool value) {
  
  is_server_cache_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorParameterInfo.is_server_cache)
}

// .proto.AnimatorParameterValueInfo value = 4;
inline bool EvtAnimatorParameterInfo::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void EvtAnimatorParameterInfo::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
inline const ::proto::AnimatorParameterValueInfo& EvtAnimatorParameterInfo::value() const {
  const ::proto::AnimatorParameterValueInfo* p = value_;
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterInfo.value)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AnimatorParameterValueInfo*>(
      &::proto::_AnimatorParameterValueInfo_default_instance_);
}
inline ::proto::AnimatorParameterValueInfo* EvtAnimatorParameterInfo::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::proto::AnimatorParameterValueInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAnimatorParameterInfo.value)
  return value_;
}
inline ::proto::AnimatorParameterValueInfo* EvtAnimatorParameterInfo::release_value() {
  // @@protoc_insertion_point(field_release:proto.EvtAnimatorParameterInfo.value)
  
  ::proto::AnimatorParameterValueInfo* temp = value_;
  value_ = NULL;
  return temp;
}
inline void EvtAnimatorParameterInfo::set_allocated_value(::proto::AnimatorParameterValueInfo* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAnimatorParameterInfo.value)
}

// -------------------------------------------------------------------

// EvtAnimatorParameterNotify

// .proto.ForwardType forward_type = 1;
inline void EvtAnimatorParameterNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtAnimatorParameterNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtAnimatorParameterNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorParameterNotify.forward_type)
}

// .proto.EvtAnimatorParameterInfo animator_param_info = 2;
inline bool EvtAnimatorParameterNotify::has_animator_param_info() const {
  return this != internal_default_instance() && animator_param_info_ != NULL;
}
inline void EvtAnimatorParameterNotify::clear_animator_param_info() {
  if (GetArenaNoVirtual() == NULL && animator_param_info_ != NULL) delete animator_param_info_;
  animator_param_info_ = NULL;
}
inline const ::proto::EvtAnimatorParameterInfo& EvtAnimatorParameterNotify::animator_param_info() const {
  const ::proto::EvtAnimatorParameterInfo* p = animator_param_info_;
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterNotify.animator_param_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtAnimatorParameterInfo*>(
      &::proto::_EvtAnimatorParameterInfo_default_instance_);
}
inline ::proto::EvtAnimatorParameterInfo* EvtAnimatorParameterNotify::mutable_animator_param_info() {
  
  if (animator_param_info_ == NULL) {
    animator_param_info_ = new ::proto::EvtAnimatorParameterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAnimatorParameterNotify.animator_param_info)
  return animator_param_info_;
}
inline ::proto::EvtAnimatorParameterInfo* EvtAnimatorParameterNotify::release_animator_param_info() {
  // @@protoc_insertion_point(field_release:proto.EvtAnimatorParameterNotify.animator_param_info)
  
  ::proto::EvtAnimatorParameterInfo* temp = animator_param_info_;
  animator_param_info_ = NULL;
  return temp;
}
inline void EvtAnimatorParameterNotify::set_allocated_animator_param_info(::proto::EvtAnimatorParameterInfo* animator_param_info) {
  delete animator_param_info_;
  animator_param_info_ = animator_param_info;
  if (animator_param_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAnimatorParameterNotify.animator_param_info)
}

// -------------------------------------------------------------------

// AbilityArgument

// uint32 int_arg = 1;
inline bool AbilityArgument::has_int_arg() const {
  return arg_case() == kIntArg;
}
inline void AbilityArgument::set_has_int_arg() {
  _oneof_case_[0] = kIntArg;
}
inline void AbilityArgument::clear_int_arg() {
  if (has_int_arg()) {
    arg_.int_arg_ = 0u;
    clear_has_arg();
  }
}
inline ::google::protobuf::uint32 AbilityArgument::int_arg() const {
  // @@protoc_insertion_point(field_get:proto.AbilityArgument.int_arg)
  if (has_int_arg()) {
    return arg_.int_arg_;
  }
  return 0u;
}
inline void AbilityArgument::set_int_arg(::google::protobuf::uint32 value) {
  if (!has_int_arg()) {
    clear_arg();
    set_has_int_arg();
  }
  arg_.int_arg_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.int_arg)
}

// float float_arg = 2;
inline bool AbilityArgument::has_float_arg() const {
  return arg_case() == kFloatArg;
}
inline void AbilityArgument::set_has_float_arg() {
  _oneof_case_[0] = kFloatArg;
}
inline void AbilityArgument::clear_float_arg() {
  if (has_float_arg()) {
    arg_.float_arg_ = 0;
    clear_has_arg();
  }
}
inline float AbilityArgument::float_arg() const {
  // @@protoc_insertion_point(field_get:proto.AbilityArgument.float_arg)
  if (has_float_arg()) {
    return arg_.float_arg_;
  }
  return 0;
}
inline void AbilityArgument::set_float_arg(float value) {
  if (!has_float_arg()) {
    clear_arg();
    set_has_float_arg();
  }
  arg_.float_arg_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.float_arg)
}

// string str_arg = 3;
inline bool AbilityArgument::has_str_arg() const {
  return arg_case() == kStrArg;
}
inline void AbilityArgument::set_has_str_arg() {
  _oneof_case_[0] = kStrArg;
}
inline void AbilityArgument::clear_str_arg() {
  if (has_str_arg()) {
    arg_.str_arg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_arg();
  }
}
inline const ::std::string& AbilityArgument::str_arg() const {
  // @@protoc_insertion_point(field_get:proto.AbilityArgument.str_arg)
  if (has_str_arg()) {
    return arg_.str_arg_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AbilityArgument::set_str_arg(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.str_arg)
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arg_.str_arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.str_arg)
}
#if LANG_CXX11
inline void AbilityArgument::set_str_arg(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.str_arg)
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arg_.str_arg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityArgument.str_arg)
}
#endif
inline void AbilityArgument::set_str_arg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arg_.str_arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityArgument.str_arg)
}
inline void AbilityArgument::set_str_arg(const char* value, size_t size) {
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arg_.str_arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityArgument.str_arg)
}
inline ::std::string* AbilityArgument::mutable_str_arg() {
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityArgument.str_arg)
  return arg_.str_arg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AbilityArgument::release_str_arg() {
  // @@protoc_insertion_point(field_release:proto.AbilityArgument.str_arg)
  if (has_str_arg()) {
    clear_has_arg();
    return arg_.str_arg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AbilityArgument::set_allocated_str_arg(::std::string* str_arg) {
  if (!has_str_arg()) {
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_arg();
  if (str_arg != NULL) {
    set_has_str_arg();
    arg_.str_arg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        str_arg);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityArgument.str_arg)
}

inline bool AbilityArgument::has_arg() const {
  return arg_case() != ARG_NOT_SET;
}
inline void AbilityArgument::clear_has_arg() {
  _oneof_case_[0] = ARG_NOT_SET;
}
inline AbilityArgument::ArgCase AbilityArgument::arg_case() const {
  return AbilityArgument::ArgCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// HostPlayerNotify

// uint32 host_uid = 1;
inline void HostPlayerNotify::clear_host_uid() {
  host_uid_ = 0u;
}
inline ::google::protobuf::uint32 HostPlayerNotify::host_uid() const {
  // @@protoc_insertion_point(field_get:proto.HostPlayerNotify.host_uid)
  return host_uid_;
}
inline void HostPlayerNotify::set_host_uid(::google::protobuf::uint32 value) {
  
  host_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.HostPlayerNotify.host_uid)
}

// uint32 host_peer_id = 2;
inline void HostPlayerNotify::clear_host_peer_id() {
  host_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 HostPlayerNotify::host_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.HostPlayerNotify.host_peer_id)
  return host_peer_id_;
}
inline void HostPlayerNotify::set_host_peer_id(::google::protobuf::uint32 value) {
  
  host_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HostPlayerNotify.host_peer_id)
}

// -------------------------------------------------------------------

// EvtDoSkillSuccNotify

// .proto.ForwardType forward_type = 1;
inline void EvtDoSkillSuccNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtDoSkillSuccNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtDoSkillSuccNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtDoSkillSuccNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDoSkillSuccNotify.forward_type)
}

// uint32 caster_id = 2;
inline void EvtDoSkillSuccNotify::clear_caster_id() {
  caster_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtDoSkillSuccNotify::caster_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtDoSkillSuccNotify.caster_id)
  return caster_id_;
}
inline void EvtDoSkillSuccNotify::set_caster_id(::google::protobuf::uint32 value) {
  
  caster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDoSkillSuccNotify.caster_id)
}

// uint32 skill_id = 3;
inline void EvtDoSkillSuccNotify::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtDoSkillSuccNotify::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtDoSkillSuccNotify.skill_id)
  return skill_id_;
}
inline void EvtDoSkillSuccNotify::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDoSkillSuccNotify.skill_id)
}

// .proto.Vector forward = 4;
inline bool EvtDoSkillSuccNotify::has_forward() const {
  return this != internal_default_instance() && forward_ != NULL;
}
inline void EvtDoSkillSuccNotify::clear_forward() {
  if (GetArenaNoVirtual() == NULL && forward_ != NULL) delete forward_;
  forward_ = NULL;
}
inline const ::proto::Vector& EvtDoSkillSuccNotify::forward() const {
  const ::proto::Vector* p = forward_;
  // @@protoc_insertion_point(field_get:proto.EvtDoSkillSuccNotify.forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtDoSkillSuccNotify::mutable_forward() {
  
  if (forward_ == NULL) {
    forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtDoSkillSuccNotify.forward)
  return forward_;
}
inline ::proto::Vector* EvtDoSkillSuccNotify::release_forward() {
  // @@protoc_insertion_point(field_release:proto.EvtDoSkillSuccNotify.forward)
  
  ::proto::Vector* temp = forward_;
  forward_ = NULL;
  return temp;
}
inline void EvtDoSkillSuccNotify::set_allocated_forward(::proto::Vector* forward) {
  delete forward_;
  forward_ = forward;
  if (forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtDoSkillSuccNotify.forward)
}

// -------------------------------------------------------------------

// EvtCreateGadgetNotify

// .proto.ForwardType forward_type = 1;
inline void EvtCreateGadgetNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtCreateGadgetNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtCreateGadgetNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtCreateGadgetNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtCreateGadgetNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.entity_id)
  return entity_id_;
}
inline void EvtCreateGadgetNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.entity_id)
}

// uint32 config_id = 3;
inline void EvtCreateGadgetNotify::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtCreateGadgetNotify::config_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.config_id)
  return config_id_;
}
inline void EvtCreateGadgetNotify::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.config_id)
}

// uint32 camp_id = 4;
inline void EvtCreateGadgetNotify::clear_camp_id() {
  camp_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtCreateGadgetNotify::camp_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.camp_id)
  return camp_id_;
}
inline void EvtCreateGadgetNotify::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.camp_id)
}

// uint32 camp_type = 5;
inline void EvtCreateGadgetNotify::clear_camp_type() {
  camp_type_ = 0u;
}
inline ::google::protobuf::uint32 EvtCreateGadgetNotify::camp_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.camp_type)
  return camp_type_;
}
inline void EvtCreateGadgetNotify::set_camp_type(::google::protobuf::uint32 value) {
  
  camp_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.camp_type)
}

// .proto.Vector init_pos = 6;
inline bool EvtCreateGadgetNotify::has_init_pos() const {
  return this != internal_default_instance() && init_pos_ != NULL;
}
inline void EvtCreateGadgetNotify::clear_init_pos() {
  if (GetArenaNoVirtual() == NULL && init_pos_ != NULL) delete init_pos_;
  init_pos_ = NULL;
}
inline const ::proto::Vector& EvtCreateGadgetNotify::init_pos() const {
  const ::proto::Vector* p = init_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.init_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtCreateGadgetNotify::mutable_init_pos() {
  
  if (init_pos_ == NULL) {
    init_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtCreateGadgetNotify.init_pos)
  return init_pos_;
}
inline ::proto::Vector* EvtCreateGadgetNotify::release_init_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtCreateGadgetNotify.init_pos)
  
  ::proto::Vector* temp = init_pos_;
  init_pos_ = NULL;
  return temp;
}
inline void EvtCreateGadgetNotify::set_allocated_init_pos(::proto::Vector* init_pos) {
  delete init_pos_;
  init_pos_ = init_pos;
  if (init_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtCreateGadgetNotify.init_pos)
}

// .proto.Vector init_euler_angles = 7;
inline bool EvtCreateGadgetNotify::has_init_euler_angles() const {
  return this != internal_default_instance() && init_euler_angles_ != NULL;
}
inline void EvtCreateGadgetNotify::clear_init_euler_angles() {
  if (GetArenaNoVirtual() == NULL && init_euler_angles_ != NULL) delete init_euler_angles_;
  init_euler_angles_ = NULL;
}
inline const ::proto::Vector& EvtCreateGadgetNotify::init_euler_angles() const {
  const ::proto::Vector* p = init_euler_angles_;
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.init_euler_angles)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtCreateGadgetNotify::mutable_init_euler_angles() {
  
  if (init_euler_angles_ == NULL) {
    init_euler_angles_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtCreateGadgetNotify.init_euler_angles)
  return init_euler_angles_;
}
inline ::proto::Vector* EvtCreateGadgetNotify::release_init_euler_angles() {
  // @@protoc_insertion_point(field_release:proto.EvtCreateGadgetNotify.init_euler_angles)
  
  ::proto::Vector* temp = init_euler_angles_;
  init_euler_angles_ = NULL;
  return temp;
}
inline void EvtCreateGadgetNotify::set_allocated_init_euler_angles(::proto::Vector* init_euler_angles) {
  delete init_euler_angles_;
  init_euler_angles_ = init_euler_angles;
  if (init_euler_angles) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtCreateGadgetNotify.init_euler_angles)
}

// uint64 guid = 8;
inline void EvtCreateGadgetNotify::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EvtCreateGadgetNotify::guid() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.guid)
  return guid_;
}
inline void EvtCreateGadgetNotify::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.guid)
}

// uint32 owner_entity_id = 9;
inline void EvtCreateGadgetNotify::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtCreateGadgetNotify::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.owner_entity_id)
  return owner_entity_id_;
}
inline void EvtCreateGadgetNotify::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.owner_entity_id)
}

// uint32 target_entity_id = 10;
inline void EvtCreateGadgetNotify::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtCreateGadgetNotify::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.target_entity_id)
  return target_entity_id_;
}
inline void EvtCreateGadgetNotify::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.target_entity_id)
}

// bool is_async_load = 11;
inline void EvtCreateGadgetNotify::clear_is_async_load() {
  is_async_load_ = false;
}
inline bool EvtCreateGadgetNotify::is_async_load() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.is_async_load)
  return is_async_load_;
}
inline void EvtCreateGadgetNotify::set_is_async_load(bool value) {
  
  is_async_load_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.is_async_load)
}

// uint32 target_lock_point_index = 12;
inline void EvtCreateGadgetNotify::clear_target_lock_point_index() {
  target_lock_point_index_ = 0u;
}
inline ::google::protobuf::uint32 EvtCreateGadgetNotify::target_lock_point_index() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.target_lock_point_index)
  return target_lock_point_index_;
}
inline void EvtCreateGadgetNotify::set_target_lock_point_index(::google::protobuf::uint32 value) {
  
  target_lock_point_index_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.target_lock_point_index)
}

// uint32 room_id = 13;
inline void EvtCreateGadgetNotify::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtCreateGadgetNotify::room_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.room_id)
  return room_id_;
}
inline void EvtCreateGadgetNotify::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.room_id)
}

// -------------------------------------------------------------------

// EvtDestroyGadgetNotify

// .proto.ForwardType forward_type = 1;
inline void EvtDestroyGadgetNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtDestroyGadgetNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtDestroyGadgetNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtDestroyGadgetNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDestroyGadgetNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtDestroyGadgetNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtDestroyGadgetNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtDestroyGadgetNotify.entity_id)
  return entity_id_;
}
inline void EvtDestroyGadgetNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDestroyGadgetNotify.entity_id)
}

// -------------------------------------------------------------------

// EvtFaceToEntityNotify

// .proto.ForwardType forward_type = 1;
inline void EvtFaceToEntityNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtFaceToEntityNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToEntityNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtFaceToEntityNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToEntityNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtFaceToEntityNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtFaceToEntityNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToEntityNotify.entity_id)
  return entity_id_;
}
inline void EvtFaceToEntityNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToEntityNotify.entity_id)
}

// uint32 face_entity_id = 3;
inline void EvtFaceToEntityNotify::clear_face_entity_id() {
  face_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtFaceToEntityNotify::face_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToEntityNotify.face_entity_id)
  return face_entity_id_;
}
inline void EvtFaceToEntityNotify::set_face_entity_id(::google::protobuf::uint32 value) {
  
  face_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToEntityNotify.face_entity_id)
}

// -------------------------------------------------------------------

// EvtFaceToDirInfo

// uint32 entity_id = 1;
inline void EvtFaceToDirInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtFaceToDirInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToDirInfo.entity_id)
  return entity_id_;
}
inline void EvtFaceToDirInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToDirInfo.entity_id)
}

// .proto.Vector face_dir = 2;
inline bool EvtFaceToDirInfo::has_face_dir() const {
  return this != internal_default_instance() && face_dir_ != NULL;
}
inline void EvtFaceToDirInfo::clear_face_dir() {
  if (GetArenaNoVirtual() == NULL && face_dir_ != NULL) delete face_dir_;
  face_dir_ = NULL;
}
inline const ::proto::Vector& EvtFaceToDirInfo::face_dir() const {
  const ::proto::Vector* p = face_dir_;
  // @@protoc_insertion_point(field_get:proto.EvtFaceToDirInfo.face_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtFaceToDirInfo::mutable_face_dir() {
  
  if (face_dir_ == NULL) {
    face_dir_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtFaceToDirInfo.face_dir)
  return face_dir_;
}
inline ::proto::Vector* EvtFaceToDirInfo::release_face_dir() {
  // @@protoc_insertion_point(field_release:proto.EvtFaceToDirInfo.face_dir)
  
  ::proto::Vector* temp = face_dir_;
  face_dir_ = NULL;
  return temp;
}
inline void EvtFaceToDirInfo::set_allocated_face_dir(::proto::Vector* face_dir) {
  delete face_dir_;
  face_dir_ = face_dir;
  if (face_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtFaceToDirInfo.face_dir)
}

// -------------------------------------------------------------------

// EvtFaceToDirNotify

// .proto.ForwardType forward_type = 1;
inline void EvtFaceToDirNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtFaceToDirNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToDirNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtFaceToDirNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToDirNotify.forward_type)
}

// .proto.EvtFaceToDirInfo evt_face_to_dir_info = 2;
inline bool EvtFaceToDirNotify::has_evt_face_to_dir_info() const {
  return this != internal_default_instance() && evt_face_to_dir_info_ != NULL;
}
inline void EvtFaceToDirNotify::clear_evt_face_to_dir_info() {
  if (GetArenaNoVirtual() == NULL && evt_face_to_dir_info_ != NULL) delete evt_face_to_dir_info_;
  evt_face_to_dir_info_ = NULL;
}
inline const ::proto::EvtFaceToDirInfo& EvtFaceToDirNotify::evt_face_to_dir_info() const {
  const ::proto::EvtFaceToDirInfo* p = evt_face_to_dir_info_;
  // @@protoc_insertion_point(field_get:proto.EvtFaceToDirNotify.evt_face_to_dir_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtFaceToDirInfo*>(
      &::proto::_EvtFaceToDirInfo_default_instance_);
}
inline ::proto::EvtFaceToDirInfo* EvtFaceToDirNotify::mutable_evt_face_to_dir_info() {
  
  if (evt_face_to_dir_info_ == NULL) {
    evt_face_to_dir_info_ = new ::proto::EvtFaceToDirInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtFaceToDirNotify.evt_face_to_dir_info)
  return evt_face_to_dir_info_;
}
inline ::proto::EvtFaceToDirInfo* EvtFaceToDirNotify::release_evt_face_to_dir_info() {
  // @@protoc_insertion_point(field_release:proto.EvtFaceToDirNotify.evt_face_to_dir_info)
  
  ::proto::EvtFaceToDirInfo* temp = evt_face_to_dir_info_;
  evt_face_to_dir_info_ = NULL;
  return temp;
}
inline void EvtFaceToDirNotify::set_allocated_evt_face_to_dir_info(::proto::EvtFaceToDirInfo* evt_face_to_dir_info) {
  delete evt_face_to_dir_info_;
  evt_face_to_dir_info_ = evt_face_to_dir_info;
  if (evt_face_to_dir_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtFaceToDirNotify.evt_face_to_dir_info)
}

// -------------------------------------------------------------------

// EvtCostStaminaNotify

// float cost_stamina = 1;
inline void EvtCostStaminaNotify::clear_cost_stamina() {
  cost_stamina_ = 0;
}
inline float EvtCostStaminaNotify::cost_stamina() const {
  // @@protoc_insertion_point(field_get:proto.EvtCostStaminaNotify.cost_stamina)
  return cost_stamina_;
}
inline void EvtCostStaminaNotify::set_cost_stamina(float value) {
  
  cost_stamina_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCostStaminaNotify.cost_stamina)
}

// uint32 skill_id = 2;
inline void EvtCostStaminaNotify::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtCostStaminaNotify::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCostStaminaNotify.skill_id)
  return skill_id_;
}
inline void EvtCostStaminaNotify::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCostStaminaNotify.skill_id)
}

// -------------------------------------------------------------------

// EvtSetAttackTargetInfo

// uint32 entity_id = 1;
inline void EvtSetAttackTargetInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtSetAttackTargetInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtSetAttackTargetInfo.entity_id)
  return entity_id_;
}
inline void EvtSetAttackTargetInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtSetAttackTargetInfo.entity_id)
}

// uint32 attack_target_id = 2;
inline void EvtSetAttackTargetInfo::clear_attack_target_id() {
  attack_target_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtSetAttackTargetInfo::attack_target_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtSetAttackTargetInfo.attack_target_id)
  return attack_target_id_;
}
inline void EvtSetAttackTargetInfo::set_attack_target_id(::google::protobuf::uint32 value) {
  
  attack_target_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtSetAttackTargetInfo.attack_target_id)
}

// -------------------------------------------------------------------

// EvtSetAttackTargetNotify

// .proto.ForwardType forward_type = 1;
inline void EvtSetAttackTargetNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtSetAttackTargetNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtSetAttackTargetNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtSetAttackTargetNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtSetAttackTargetNotify.forward_type)
}

// .proto.EvtSetAttackTargetInfo evt_set_attack_target_info = 2;
inline bool EvtSetAttackTargetNotify::has_evt_set_attack_target_info() const {
  return this != internal_default_instance() && evt_set_attack_target_info_ != NULL;
}
inline void EvtSetAttackTargetNotify::clear_evt_set_attack_target_info() {
  if (GetArenaNoVirtual() == NULL && evt_set_attack_target_info_ != NULL) delete evt_set_attack_target_info_;
  evt_set_attack_target_info_ = NULL;
}
inline const ::proto::EvtSetAttackTargetInfo& EvtSetAttackTargetNotify::evt_set_attack_target_info() const {
  const ::proto::EvtSetAttackTargetInfo* p = evt_set_attack_target_info_;
  // @@protoc_insertion_point(field_get:proto.EvtSetAttackTargetNotify.evt_set_attack_target_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtSetAttackTargetInfo*>(
      &::proto::_EvtSetAttackTargetInfo_default_instance_);
}
inline ::proto::EvtSetAttackTargetInfo* EvtSetAttackTargetNotify::mutable_evt_set_attack_target_info() {
  
  if (evt_set_attack_target_info_ == NULL) {
    evt_set_attack_target_info_ = new ::proto::EvtSetAttackTargetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtSetAttackTargetNotify.evt_set_attack_target_info)
  return evt_set_attack_target_info_;
}
inline ::proto::EvtSetAttackTargetInfo* EvtSetAttackTargetNotify::release_evt_set_attack_target_info() {
  // @@protoc_insertion_point(field_release:proto.EvtSetAttackTargetNotify.evt_set_attack_target_info)
  
  ::proto::EvtSetAttackTargetInfo* temp = evt_set_attack_target_info_;
  evt_set_attack_target_info_ = NULL;
  return temp;
}
inline void EvtSetAttackTargetNotify::set_allocated_evt_set_attack_target_info(::proto::EvtSetAttackTargetInfo* evt_set_attack_target_info) {
  delete evt_set_attack_target_info_;
  evt_set_attack_target_info_ = evt_set_attack_target_info;
  if (evt_set_attack_target_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtSetAttackTargetNotify.evt_set_attack_target_info)
}

// -------------------------------------------------------------------

// EvtAnimatorStateChangedInfo

// uint32 entity_id = 1;
inline void EvtAnimatorStateChangedInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtAnimatorStateChangedInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.entity_id)
  return entity_id_;
}
inline void EvtAnimatorStateChangedInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedInfo.entity_id)
}

// uint32 to_state_hash = 2;
inline void EvtAnimatorStateChangedInfo::clear_to_state_hash() {
  to_state_hash_ = 0u;
}
inline ::google::protobuf::uint32 EvtAnimatorStateChangedInfo::to_state_hash() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.to_state_hash)
  return to_state_hash_;
}
inline void EvtAnimatorStateChangedInfo::set_to_state_hash(::google::protobuf::uint32 value) {
  
  to_state_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedInfo.to_state_hash)
}

// uint32 normalized_time_compact = 3;
inline void EvtAnimatorStateChangedInfo::clear_normalized_time_compact() {
  normalized_time_compact_ = 0u;
}
inline ::google::protobuf::uint32 EvtAnimatorStateChangedInfo::normalized_time_compact() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.normalized_time_compact)
  return normalized_time_compact_;
}
inline void EvtAnimatorStateChangedInfo::set_normalized_time_compact(::google::protobuf::uint32 value) {
  
  normalized_time_compact_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedInfo.normalized_time_compact)
}

// int32 face_angle_compact = 4;
inline void EvtAnimatorStateChangedInfo::clear_face_angle_compact() {
  face_angle_compact_ = 0;
}
inline ::google::protobuf::int32 EvtAnimatorStateChangedInfo::face_angle_compact() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.face_angle_compact)
  return face_angle_compact_;
}
inline void EvtAnimatorStateChangedInfo::set_face_angle_compact(::google::protobuf::int32 value) {
  
  face_angle_compact_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedInfo.face_angle_compact)
}

// .proto.Vector pos = 5;
inline bool EvtAnimatorStateChangedInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void EvtAnimatorStateChangedInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& EvtAnimatorStateChangedInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtAnimatorStateChangedInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAnimatorStateChangedInfo.pos)
  return pos_;
}
inline ::proto::Vector* EvtAnimatorStateChangedInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtAnimatorStateChangedInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void EvtAnimatorStateChangedInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAnimatorStateChangedInfo.pos)
}

// -------------------------------------------------------------------

// EvtAnimatorStateChangedNotify

// .proto.ForwardType forward_type = 1;
inline void EvtAnimatorStateChangedNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtAnimatorStateChangedNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtAnimatorStateChangedNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedNotify.forward_type)
}

// .proto.EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 2;
inline bool EvtAnimatorStateChangedNotify::has_evt_animator_state_changed_info() const {
  return this != internal_default_instance() && evt_animator_state_changed_info_ != NULL;
}
inline void EvtAnimatorStateChangedNotify::clear_evt_animator_state_changed_info() {
  if (GetArenaNoVirtual() == NULL && evt_animator_state_changed_info_ != NULL) delete evt_animator_state_changed_info_;
  evt_animator_state_changed_info_ = NULL;
}
inline const ::proto::EvtAnimatorStateChangedInfo& EvtAnimatorStateChangedNotify::evt_animator_state_changed_info() const {
  const ::proto::EvtAnimatorStateChangedInfo* p = evt_animator_state_changed_info_;
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtAnimatorStateChangedInfo*>(
      &::proto::_EvtAnimatorStateChangedInfo_default_instance_);
}
inline ::proto::EvtAnimatorStateChangedInfo* EvtAnimatorStateChangedNotify::mutable_evt_animator_state_changed_info() {
  
  if (evt_animator_state_changed_info_ == NULL) {
    evt_animator_state_changed_info_ = new ::proto::EvtAnimatorStateChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info)
  return evt_animator_state_changed_info_;
}
inline ::proto::EvtAnimatorStateChangedInfo* EvtAnimatorStateChangedNotify::release_evt_animator_state_changed_info() {
  // @@protoc_insertion_point(field_release:proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info)
  
  ::proto::EvtAnimatorStateChangedInfo* temp = evt_animator_state_changed_info_;
  evt_animator_state_changed_info_ = NULL;
  return temp;
}
inline void EvtAnimatorStateChangedNotify::set_allocated_evt_animator_state_changed_info(::proto::EvtAnimatorStateChangedInfo* evt_animator_state_changed_info) {
  delete evt_animator_state_changed_info_;
  evt_animator_state_changed_info_ = evt_animator_state_changed_info;
  if (evt_animator_state_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info)
}

// -------------------------------------------------------------------

// EvtRushMoveInfo

// uint32 entity_id = 1;
inline void EvtRushMoveInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtRushMoveInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.entity_id)
  return entity_id_;
}
inline void EvtRushMoveInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveInfo.entity_id)
}

// .proto.Vector velocity = 2;
inline bool EvtRushMoveInfo::has_velocity() const {
  return this != internal_default_instance() && velocity_ != NULL;
}
inline void EvtRushMoveInfo::clear_velocity() {
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) delete velocity_;
  velocity_ = NULL;
}
inline const ::proto::Vector& EvtRushMoveInfo::velocity() const {
  const ::proto::Vector* p = velocity_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.velocity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtRushMoveInfo::mutable_velocity() {
  
  if (velocity_ == NULL) {
    velocity_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveInfo.velocity)
  return velocity_;
}
inline ::proto::Vector* EvtRushMoveInfo::release_velocity() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveInfo.velocity)
  
  ::proto::Vector* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
inline void EvtRushMoveInfo::set_allocated_velocity(::proto::Vector* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveInfo.velocity)
}

// float timeRange = 3;
inline void EvtRushMoveInfo::clear_timerange() {
  timerange_ = 0;
}
inline float EvtRushMoveInfo::timerange() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.timeRange)
  return timerange_;
}
inline void EvtRushMoveInfo::set_timerange(float value) {
  
  timerange_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveInfo.timeRange)
}

// int32 state_name_hash = 4;
inline void EvtRushMoveInfo::clear_state_name_hash() {
  state_name_hash_ = 0;
}
inline ::google::protobuf::int32 EvtRushMoveInfo::state_name_hash() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.state_name_hash)
  return state_name_hash_;
}
inline void EvtRushMoveInfo::set_state_name_hash(::google::protobuf::int32 value) {
  
  state_name_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveInfo.state_name_hash)
}

// int32 face_angle_compact = 5;
inline void EvtRushMoveInfo::clear_face_angle_compact() {
  face_angle_compact_ = 0;
}
inline ::google::protobuf::int32 EvtRushMoveInfo::face_angle_compact() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.face_angle_compact)
  return face_angle_compact_;
}
inline void EvtRushMoveInfo::set_face_angle_compact(::google::protobuf::int32 value) {
  
  face_angle_compact_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveInfo.face_angle_compact)
}

// .proto.Vector pos = 6;
inline bool EvtRushMoveInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void EvtRushMoveInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& EvtRushMoveInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtRushMoveInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveInfo.pos)
  return pos_;
}
inline ::proto::Vector* EvtRushMoveInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void EvtRushMoveInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveInfo.pos)
}

// .proto.Vector rush_attack_target_pos = 7;
inline bool EvtRushMoveInfo::has_rush_attack_target_pos() const {
  return this != internal_default_instance() && rush_attack_target_pos_ != NULL;
}
inline void EvtRushMoveInfo::clear_rush_attack_target_pos() {
  if (GetArenaNoVirtual() == NULL && rush_attack_target_pos_ != NULL) delete rush_attack_target_pos_;
  rush_attack_target_pos_ = NULL;
}
inline const ::proto::Vector& EvtRushMoveInfo::rush_attack_target_pos() const {
  const ::proto::Vector* p = rush_attack_target_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.rush_attack_target_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtRushMoveInfo::mutable_rush_attack_target_pos() {
  
  if (rush_attack_target_pos_ == NULL) {
    rush_attack_target_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveInfo.rush_attack_target_pos)
  return rush_attack_target_pos_;
}
inline ::proto::Vector* EvtRushMoveInfo::release_rush_attack_target_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveInfo.rush_attack_target_pos)
  
  ::proto::Vector* temp = rush_attack_target_pos_;
  rush_attack_target_pos_ = NULL;
  return temp;
}
inline void EvtRushMoveInfo::set_allocated_rush_attack_target_pos(::proto::Vector* rush_attack_target_pos) {
  delete rush_attack_target_pos_;
  rush_attack_target_pos_ = rush_attack_target_pos;
  if (rush_attack_target_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveInfo.rush_attack_target_pos)
}

// .proto.Vector rush_to_pos = 8;
inline bool EvtRushMoveInfo::has_rush_to_pos() const {
  return this != internal_default_instance() && rush_to_pos_ != NULL;
}
inline void EvtRushMoveInfo::clear_rush_to_pos() {
  if (GetArenaNoVirtual() == NULL && rush_to_pos_ != NULL) delete rush_to_pos_;
  rush_to_pos_ = NULL;
}
inline const ::proto::Vector& EvtRushMoveInfo::rush_to_pos() const {
  const ::proto::Vector* p = rush_to_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.rush_to_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtRushMoveInfo::mutable_rush_to_pos() {
  
  if (rush_to_pos_ == NULL) {
    rush_to_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveInfo.rush_to_pos)
  return rush_to_pos_;
}
inline ::proto::Vector* EvtRushMoveInfo::release_rush_to_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveInfo.rush_to_pos)
  
  ::proto::Vector* temp = rush_to_pos_;
  rush_to_pos_ = NULL;
  return temp;
}
inline void EvtRushMoveInfo::set_allocated_rush_to_pos(::proto::Vector* rush_to_pos) {
  delete rush_to_pos_;
  rush_to_pos_ = rush_to_pos;
  if (rush_to_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveInfo.rush_to_pos)
}

// -------------------------------------------------------------------

// EvtRushMoveNotify

// .proto.ForwardType forward_type = 1;
inline void EvtRushMoveNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtRushMoveNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtRushMoveNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveNotify.forward_type)
}

// .proto.EvtRushMoveInfo evt_rush_move_info = 2;
inline bool EvtRushMoveNotify::has_evt_rush_move_info() const {
  return this != internal_default_instance() && evt_rush_move_info_ != NULL;
}
inline void EvtRushMoveNotify::clear_evt_rush_move_info() {
  if (GetArenaNoVirtual() == NULL && evt_rush_move_info_ != NULL) delete evt_rush_move_info_;
  evt_rush_move_info_ = NULL;
}
inline const ::proto::EvtRushMoveInfo& EvtRushMoveNotify::evt_rush_move_info() const {
  const ::proto::EvtRushMoveInfo* p = evt_rush_move_info_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveNotify.evt_rush_move_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtRushMoveInfo*>(
      &::proto::_EvtRushMoveInfo_default_instance_);
}
inline ::proto::EvtRushMoveInfo* EvtRushMoveNotify::mutable_evt_rush_move_info() {
  
  if (evt_rush_move_info_ == NULL) {
    evt_rush_move_info_ = new ::proto::EvtRushMoveInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveNotify.evt_rush_move_info)
  return evt_rush_move_info_;
}
inline ::proto::EvtRushMoveInfo* EvtRushMoveNotify::release_evt_rush_move_info() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveNotify.evt_rush_move_info)
  
  ::proto::EvtRushMoveInfo* temp = evt_rush_move_info_;
  evt_rush_move_info_ = NULL;
  return temp;
}
inline void EvtRushMoveNotify::set_allocated_evt_rush_move_info(::proto::EvtRushMoveInfo* evt_rush_move_info) {
  delete evt_rush_move_info_;
  evt_rush_move_info_ = evt_rush_move_info;
  if (evt_rush_move_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveNotify.evt_rush_move_info)
}

// -------------------------------------------------------------------

// EvtBulletHitNotify

// .proto.ForwardType forward_type = 1;
inline void EvtBulletHitNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtBulletHitNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtBulletHitNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.forward_type)
}

// uint32 forward_peer = 2;
inline void EvtBulletHitNotify::clear_forward_peer() {
  forward_peer_ = 0u;
}
inline ::google::protobuf::uint32 EvtBulletHitNotify::forward_peer() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.forward_peer)
  return forward_peer_;
}
inline void EvtBulletHitNotify::set_forward_peer(::google::protobuf::uint32 value) {
  
  forward_peer_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.forward_peer)
}

// uint32 entity_id = 3;
inline void EvtBulletHitNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtBulletHitNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.entity_id)
  return entity_id_;
}
inline void EvtBulletHitNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.entity_id)
}

// uint32 hit_entity_id = 4;
inline void EvtBulletHitNotify::clear_hit_entity_id() {
  hit_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtBulletHitNotify::hit_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_entity_id)
  return hit_entity_id_;
}
inline void EvtBulletHitNotify::set_hit_entity_id(::google::protobuf::uint32 value) {
  
  hit_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.hit_entity_id)
}

// .proto.HitColliderType hit_collider_type = 5;
inline void EvtBulletHitNotify::clear_hit_collider_type() {
  hit_collider_type_ = 0;
}
inline ::proto::HitColliderType EvtBulletHitNotify::hit_collider_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_collider_type)
  return static_cast< ::proto::HitColliderType >(hit_collider_type_);
}
inline void EvtBulletHitNotify::set_hit_collider_type(::proto::HitColliderType value) {
  
  hit_collider_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.hit_collider_type)
}

// int32 hit_box_index = 6;
inline void EvtBulletHitNotify::clear_hit_box_index() {
  hit_box_index_ = 0;
}
inline ::google::protobuf::int32 EvtBulletHitNotify::hit_box_index() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_box_index)
  return hit_box_index_;
}
inline void EvtBulletHitNotify::set_hit_box_index(::google::protobuf::int32 value) {
  
  hit_box_index_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.hit_box_index)
}

// .proto.Vector hit_point = 7;
inline bool EvtBulletHitNotify::has_hit_point() const {
  return this != internal_default_instance() && hit_point_ != NULL;
}
inline void EvtBulletHitNotify::clear_hit_point() {
  if (GetArenaNoVirtual() == NULL && hit_point_ != NULL) delete hit_point_;
  hit_point_ = NULL;
}
inline const ::proto::Vector& EvtBulletHitNotify::hit_point() const {
  const ::proto::Vector* p = hit_point_;
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_point)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtBulletHitNotify::mutable_hit_point() {
  
  if (hit_point_ == NULL) {
    hit_point_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBulletHitNotify.hit_point)
  return hit_point_;
}
inline ::proto::Vector* EvtBulletHitNotify::release_hit_point() {
  // @@protoc_insertion_point(field_release:proto.EvtBulletHitNotify.hit_point)
  
  ::proto::Vector* temp = hit_point_;
  hit_point_ = NULL;
  return temp;
}
inline void EvtBulletHitNotify::set_allocated_hit_point(::proto::Vector* hit_point) {
  delete hit_point_;
  hit_point_ = hit_point;
  if (hit_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBulletHitNotify.hit_point)
}

// .proto.Vector hit_normal = 8;
inline bool EvtBulletHitNotify::has_hit_normal() const {
  return this != internal_default_instance() && hit_normal_ != NULL;
}
inline void EvtBulletHitNotify::clear_hit_normal() {
  if (GetArenaNoVirtual() == NULL && hit_normal_ != NULL) delete hit_normal_;
  hit_normal_ = NULL;
}
inline const ::proto::Vector& EvtBulletHitNotify::hit_normal() const {
  const ::proto::Vector* p = hit_normal_;
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_normal)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtBulletHitNotify::mutable_hit_normal() {
  
  if (hit_normal_ == NULL) {
    hit_normal_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBulletHitNotify.hit_normal)
  return hit_normal_;
}
inline ::proto::Vector* EvtBulletHitNotify::release_hit_normal() {
  // @@protoc_insertion_point(field_release:proto.EvtBulletHitNotify.hit_normal)
  
  ::proto::Vector* temp = hit_normal_;
  hit_normal_ = NULL;
  return temp;
}
inline void EvtBulletHitNotify::set_allocated_hit_normal(::proto::Vector* hit_normal) {
  delete hit_normal_;
  hit_normal_ = hit_normal;
  if (hit_normal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBulletHitNotify.hit_normal)
}

// -------------------------------------------------------------------

// EvtBulletDeactiveNotify

// .proto.ForwardType forward_type = 1;
inline void EvtBulletDeactiveNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtBulletDeactiveNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletDeactiveNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtBulletDeactiveNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletDeactiveNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtBulletDeactiveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtBulletDeactiveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletDeactiveNotify.entity_id)
  return entity_id_;
}
inline void EvtBulletDeactiveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletDeactiveNotify.entity_id)
}

// .proto.Vector disappear_pos = 3;
inline bool EvtBulletDeactiveNotify::has_disappear_pos() const {
  return this != internal_default_instance() && disappear_pos_ != NULL;
}
inline void EvtBulletDeactiveNotify::clear_disappear_pos() {
  if (GetArenaNoVirtual() == NULL && disappear_pos_ != NULL) delete disappear_pos_;
  disappear_pos_ = NULL;
}
inline const ::proto::Vector& EvtBulletDeactiveNotify::disappear_pos() const {
  const ::proto::Vector* p = disappear_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtBulletDeactiveNotify.disappear_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtBulletDeactiveNotify::mutable_disappear_pos() {
  
  if (disappear_pos_ == NULL) {
    disappear_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBulletDeactiveNotify.disappear_pos)
  return disappear_pos_;
}
inline ::proto::Vector* EvtBulletDeactiveNotify::release_disappear_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtBulletDeactiveNotify.disappear_pos)
  
  ::proto::Vector* temp = disappear_pos_;
  disappear_pos_ = NULL;
  return temp;
}
inline void EvtBulletDeactiveNotify::set_allocated_disappear_pos(::proto::Vector* disappear_pos) {
  delete disappear_pos_;
  disappear_pos_ = disappear_pos;
  if (disappear_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBulletDeactiveNotify.disappear_pos)
}

// -------------------------------------------------------------------

// EvtEntityStartDieEndNotify

// .proto.ForwardType forward_type = 1;
inline void EvtEntityStartDieEndNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtEntityStartDieEndNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityStartDieEndNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtEntityStartDieEndNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityStartDieEndNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtEntityStartDieEndNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtEntityStartDieEndNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityStartDieEndNotify.entity_id)
  return entity_id_;
}
inline void EvtEntityStartDieEndNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityStartDieEndNotify.entity_id)
}

// bool immediately = 3;
inline void EvtEntityStartDieEndNotify::clear_immediately() {
  immediately_ = false;
}
inline bool EvtEntityStartDieEndNotify::immediately() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityStartDieEndNotify.immediately)
  return immediately_;
}
inline void EvtEntityStartDieEndNotify::set_immediately(bool value) {
  
  immediately_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityStartDieEndNotify.immediately)
}

// uint32 die_state_flag = 4;
inline void EvtEntityStartDieEndNotify::clear_die_state_flag() {
  die_state_flag_ = 0u;
}
inline ::google::protobuf::uint32 EvtEntityStartDieEndNotify::die_state_flag() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityStartDieEndNotify.die_state_flag)
  return die_state_flag_;
}
inline void EvtEntityStartDieEndNotify::set_die_state_flag(::google::protobuf::uint32 value) {
  
  die_state_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityStartDieEndNotify.die_state_flag)
}

// -------------------------------------------------------------------

// EvtBulletMoveNotify

// .proto.ForwardType forward_type = 1;
inline void EvtBulletMoveNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtBulletMoveNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletMoveNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtBulletMoveNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletMoveNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtBulletMoveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtBulletMoveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletMoveNotify.entity_id)
  return entity_id_;
}
inline void EvtBulletMoveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletMoveNotify.entity_id)
}

// .proto.Vector cur_pos = 3;
inline bool EvtBulletMoveNotify::has_cur_pos() const {
  return this != internal_default_instance() && cur_pos_ != NULL;
}
inline void EvtBulletMoveNotify::clear_cur_pos() {
  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) delete cur_pos_;
  cur_pos_ = NULL;
}
inline const ::proto::Vector& EvtBulletMoveNotify::cur_pos() const {
  const ::proto::Vector* p = cur_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtBulletMoveNotify.cur_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtBulletMoveNotify::mutable_cur_pos() {
  
  if (cur_pos_ == NULL) {
    cur_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBulletMoveNotify.cur_pos)
  return cur_pos_;
}
inline ::proto::Vector* EvtBulletMoveNotify::release_cur_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtBulletMoveNotify.cur_pos)
  
  ::proto::Vector* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
inline void EvtBulletMoveNotify::set_allocated_cur_pos(::proto::Vector* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBulletMoveNotify.cur_pos)
}

// -------------------------------------------------------------------

// EvtAvatarEnterFocusNotify

// .proto.ForwardType forward_type = 1;
inline void EvtAvatarEnterFocusNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtAvatarEnterFocusNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtAvatarEnterFocusNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtAvatarEnterFocusNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtAvatarEnterFocusNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.entity_id)
  return entity_id_;
}
inline void EvtAvatarEnterFocusNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.entity_id)
}

// bool fast_focus = 3;
inline void EvtAvatarEnterFocusNotify::clear_fast_focus() {
  fast_focus_ = false;
}
inline bool EvtAvatarEnterFocusNotify::fast_focus() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.fast_focus)
  return fast_focus_;
}
inline void EvtAvatarEnterFocusNotify::set_fast_focus(bool value) {
  
  fast_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.fast_focus)
}

// bool use_focus_sticky = 4;
inline void EvtAvatarEnterFocusNotify::clear_use_focus_sticky() {
  use_focus_sticky_ = false;
}
inline bool EvtAvatarEnterFocusNotify::use_focus_sticky() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.use_focus_sticky)
  return use_focus_sticky_;
}
inline void EvtAvatarEnterFocusNotify::set_use_focus_sticky(bool value) {
  
  use_focus_sticky_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.use_focus_sticky)
}

// bool use_auto_focus = 5;
inline void EvtAvatarEnterFocusNotify::clear_use_auto_focus() {
  use_auto_focus_ = false;
}
inline bool EvtAvatarEnterFocusNotify::use_auto_focus() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.use_auto_focus)
  return use_auto_focus_;
}
inline void EvtAvatarEnterFocusNotify::set_use_auto_focus(bool value) {
  
  use_auto_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.use_auto_focus)
}

// bool use_gyro = 6;
inline void EvtAvatarEnterFocusNotify::clear_use_gyro() {
  use_gyro_ = false;
}
inline bool EvtAvatarEnterFocusNotify::use_gyro() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.use_gyro)
  return use_gyro_;
}
inline void EvtAvatarEnterFocusNotify::set_use_gyro(bool value) {
  
  use_gyro_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.use_gyro)
}

// bool can_move = 7;
inline void EvtAvatarEnterFocusNotify::clear_can_move() {
  can_move_ = false;
}
inline bool EvtAvatarEnterFocusNotify::can_move() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.can_move)
  return can_move_;
}
inline void EvtAvatarEnterFocusNotify::set_can_move(bool value) {
  
  can_move_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.can_move)
}

// bool show_cross_hair = 8;
inline void EvtAvatarEnterFocusNotify::clear_show_cross_hair() {
  show_cross_hair_ = false;
}
inline bool EvtAvatarEnterFocusNotify::show_cross_hair() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.show_cross_hair)
  return show_cross_hair_;
}
inline void EvtAvatarEnterFocusNotify::set_show_cross_hair(bool value) {
  
  show_cross_hair_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.show_cross_hair)
}

// .proto.Vector focus_forward = 9;
inline bool EvtAvatarEnterFocusNotify::has_focus_forward() const {
  return this != internal_default_instance() && focus_forward_ != NULL;
}
inline void EvtAvatarEnterFocusNotify::clear_focus_forward() {
  if (GetArenaNoVirtual() == NULL && focus_forward_ != NULL) delete focus_forward_;
  focus_forward_ = NULL;
}
inline const ::proto::Vector& EvtAvatarEnterFocusNotify::focus_forward() const {
  const ::proto::Vector* p = focus_forward_;
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.focus_forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtAvatarEnterFocusNotify::mutable_focus_forward() {
  
  if (focus_forward_ == NULL) {
    focus_forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAvatarEnterFocusNotify.focus_forward)
  return focus_forward_;
}
inline ::proto::Vector* EvtAvatarEnterFocusNotify::release_focus_forward() {
  // @@protoc_insertion_point(field_release:proto.EvtAvatarEnterFocusNotify.focus_forward)
  
  ::proto::Vector* temp = focus_forward_;
  focus_forward_ = NULL;
  return temp;
}
inline void EvtAvatarEnterFocusNotify::set_allocated_focus_forward(::proto::Vector* focus_forward) {
  delete focus_forward_;
  focus_forward_ = focus_forward;
  if (focus_forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAvatarEnterFocusNotify.focus_forward)
}

// bool enter_normal_focus_shoot = 10;
inline void EvtAvatarEnterFocusNotify::clear_enter_normal_focus_shoot() {
  enter_normal_focus_shoot_ = false;
}
inline bool EvtAvatarEnterFocusNotify::enter_normal_focus_shoot() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.enter_normal_focus_shoot)
  return enter_normal_focus_shoot_;
}
inline void EvtAvatarEnterFocusNotify::set_enter_normal_focus_shoot(bool value) {
  
  enter_normal_focus_shoot_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.enter_normal_focus_shoot)
}

// bool enter_holding_focus_shoot = 11;
inline void EvtAvatarEnterFocusNotify::clear_enter_holding_focus_shoot() {
  enter_holding_focus_shoot_ = false;
}
inline bool EvtAvatarEnterFocusNotify::enter_holding_focus_shoot() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.enter_holding_focus_shoot)
  return enter_holding_focus_shoot_;
}
inline void EvtAvatarEnterFocusNotify::set_enter_holding_focus_shoot(bool value) {
  
  enter_holding_focus_shoot_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.enter_holding_focus_shoot)
}

// -------------------------------------------------------------------

// EvtAvatarExitFocusNotify

// .proto.ForwardType forward_type = 1;
inline void EvtAvatarExitFocusNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtAvatarExitFocusNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarExitFocusNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtAvatarExitFocusNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarExitFocusNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtAvatarExitFocusNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtAvatarExitFocusNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarExitFocusNotify.entity_id)
  return entity_id_;
}
inline void EvtAvatarExitFocusNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarExitFocusNotify.entity_id)
}

// .proto.Vector finish_forward = 3;
inline bool EvtAvatarExitFocusNotify::has_finish_forward() const {
  return this != internal_default_instance() && finish_forward_ != NULL;
}
inline void EvtAvatarExitFocusNotify::clear_finish_forward() {
  if (GetArenaNoVirtual() == NULL && finish_forward_ != NULL) delete finish_forward_;
  finish_forward_ = NULL;
}
inline const ::proto::Vector& EvtAvatarExitFocusNotify::finish_forward() const {
  const ::proto::Vector* p = finish_forward_;
  // @@protoc_insertion_point(field_get:proto.EvtAvatarExitFocusNotify.finish_forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtAvatarExitFocusNotify::mutable_finish_forward() {
  
  if (finish_forward_ == NULL) {
    finish_forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAvatarExitFocusNotify.finish_forward)
  return finish_forward_;
}
inline ::proto::Vector* EvtAvatarExitFocusNotify::release_finish_forward() {
  // @@protoc_insertion_point(field_release:proto.EvtAvatarExitFocusNotify.finish_forward)
  
  ::proto::Vector* temp = finish_forward_;
  finish_forward_ = NULL;
  return temp;
}
inline void EvtAvatarExitFocusNotify::set_allocated_finish_forward(::proto::Vector* finish_forward) {
  delete finish_forward_;
  finish_forward_ = finish_forward;
  if (finish_forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAvatarExitFocusNotify.finish_forward)
}

// -------------------------------------------------------------------

// EvtAvatarUpdateFocusNotify

// .proto.ForwardType forward_type = 1;
inline void EvtAvatarUpdateFocusNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtAvatarUpdateFocusNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarUpdateFocusNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtAvatarUpdateFocusNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarUpdateFocusNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtAvatarUpdateFocusNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtAvatarUpdateFocusNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarUpdateFocusNotify.entity_id)
  return entity_id_;
}
inline void EvtAvatarUpdateFocusNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarUpdateFocusNotify.entity_id)
}

// .proto.Vector focus_forward = 3;
inline bool EvtAvatarUpdateFocusNotify::has_focus_forward() const {
  return this != internal_default_instance() && focus_forward_ != NULL;
}
inline void EvtAvatarUpdateFocusNotify::clear_focus_forward() {
  if (GetArenaNoVirtual() == NULL && focus_forward_ != NULL) delete focus_forward_;
  focus_forward_ = NULL;
}
inline const ::proto::Vector& EvtAvatarUpdateFocusNotify::focus_forward() const {
  const ::proto::Vector* p = focus_forward_;
  // @@protoc_insertion_point(field_get:proto.EvtAvatarUpdateFocusNotify.focus_forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtAvatarUpdateFocusNotify::mutable_focus_forward() {
  
  if (focus_forward_ == NULL) {
    focus_forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAvatarUpdateFocusNotify.focus_forward)
  return focus_forward_;
}
inline ::proto::Vector* EvtAvatarUpdateFocusNotify::release_focus_forward() {
  // @@protoc_insertion_point(field_release:proto.EvtAvatarUpdateFocusNotify.focus_forward)
  
  ::proto::Vector* temp = focus_forward_;
  focus_forward_ = NULL;
  return temp;
}
inline void EvtAvatarUpdateFocusNotify::set_allocated_focus_forward(::proto::Vector* focus_forward) {
  delete focus_forward_;
  focus_forward_ = focus_forward;
  if (focus_forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAvatarUpdateFocusNotify.focus_forward)
}

// -------------------------------------------------------------------

// EntityAuthorityChangeNotify

// uint32 entity_id = 1;
inline void EntityAuthorityChangeNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityAuthorityChangeNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityChangeNotify.entity_id)
  return entity_id_;
}
inline void EntityAuthorityChangeNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityAuthorityChangeNotify.entity_id)
}

// uint32 authority_peer_id = 2;
inline void EntityAuthorityChangeNotify::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityAuthorityChangeNotify::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityChangeNotify.authority_peer_id)
  return authority_peer_id_;
}
inline void EntityAuthorityChangeNotify::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityAuthorityChangeNotify.authority_peer_id)
}

// .proto.AbilitySyncStateInfo ability_info = 3;
inline bool EntityAuthorityChangeNotify::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
inline void EntityAuthorityChangeNotify::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& EntityAuthorityChangeNotify::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityChangeNotify.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* EntityAuthorityChangeNotify::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityChangeNotify.ability_info)
  return ability_info_;
}
inline ::proto::AbilitySyncStateInfo* EntityAuthorityChangeNotify::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityChangeNotify.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
inline void EntityAuthorityChangeNotify::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityChangeNotify.ability_info)
}

// .proto.EntityRendererChangedInfo renderer_changed_info = 4;
inline bool EntityAuthorityChangeNotify::has_renderer_changed_info() const {
  return this != internal_default_instance() && renderer_changed_info_ != NULL;
}
inline void EntityAuthorityChangeNotify::clear_renderer_changed_info() {
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) delete renderer_changed_info_;
  renderer_changed_info_ = NULL;
}
inline const ::proto::EntityRendererChangedInfo& EntityAuthorityChangeNotify::renderer_changed_info() const {
  const ::proto::EntityRendererChangedInfo* p = renderer_changed_info_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityChangeNotify.renderer_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityRendererChangedInfo*>(
      &::proto::_EntityRendererChangedInfo_default_instance_);
}
inline ::proto::EntityRendererChangedInfo* EntityAuthorityChangeNotify::mutable_renderer_changed_info() {
  
  if (renderer_changed_info_ == NULL) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityChangeNotify.renderer_changed_info)
  return renderer_changed_info_;
}
inline ::proto::EntityRendererChangedInfo* EntityAuthorityChangeNotify::release_renderer_changed_info() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityChangeNotify.renderer_changed_info)
  
  ::proto::EntityRendererChangedInfo* temp = renderer_changed_info_;
  renderer_changed_info_ = NULL;
  return temp;
}
inline void EntityAuthorityChangeNotify::set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info) {
  delete renderer_changed_info_;
  renderer_changed_info_ = renderer_changed_info;
  if (renderer_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityChangeNotify.renderer_changed_info)
}

// -------------------------------------------------------------------

// AvatarBuffAddNotify

// uint64 avatar_guid = 1;
inline void AvatarBuffAddNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarBuffAddNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarBuffAddNotify.avatar_guid)
  return avatar_guid_;
}
inline void AvatarBuffAddNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarBuffAddNotify.avatar_guid)
}

// uint32 buff_id = 2;
inline void AvatarBuffAddNotify::clear_buff_id() {
  buff_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarBuffAddNotify::buff_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarBuffAddNotify.buff_id)
  return buff_id_;
}
inline void AvatarBuffAddNotify::set_buff_id(::google::protobuf::uint32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarBuffAddNotify.buff_id)
}

// -------------------------------------------------------------------

// AvatarBuffDelNotify

// uint64 avatar_guid = 1;
inline void AvatarBuffDelNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarBuffDelNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarBuffDelNotify.avatar_guid)
  return avatar_guid_;
}
inline void AvatarBuffDelNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarBuffDelNotify.avatar_guid)
}

// uint32 buff_id = 2;
inline void AvatarBuffDelNotify::clear_buff_id() {
  buff_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarBuffDelNotify::buff_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarBuffDelNotify.buff_id)
  return buff_id_;
}
inline void AvatarBuffDelNotify::set_buff_id(::google::protobuf::uint32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarBuffDelNotify.buff_id)
}

// -------------------------------------------------------------------

// MonsterAlertChangeNotify

// uint32 avatar_entity_id = 2;
inline void MonsterAlertChangeNotify::clear_avatar_entity_id() {
  avatar_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 MonsterAlertChangeNotify::avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MonsterAlertChangeNotify.avatar_entity_id)
  return avatar_entity_id_;
}
inline void MonsterAlertChangeNotify::set_avatar_entity_id(::google::protobuf::uint32 value) {
  
  avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterAlertChangeNotify.avatar_entity_id)
}

// uint32 is_alert = 3;
inline void MonsterAlertChangeNotify::clear_is_alert() {
  is_alert_ = 0u;
}
inline ::google::protobuf::uint32 MonsterAlertChangeNotify::is_alert() const {
  // @@protoc_insertion_point(field_get:proto.MonsterAlertChangeNotify.is_alert)
  return is_alert_;
}
inline void MonsterAlertChangeNotify::set_is_alert(::google::protobuf::uint32 value) {
  
  is_alert_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterAlertChangeNotify.is_alert)
}

// repeated uint32 monster_entity_list = 4;
inline int MonsterAlertChangeNotify::monster_entity_list_size() const {
  return monster_entity_list_.size();
}
inline void MonsterAlertChangeNotify::clear_monster_entity_list() {
  monster_entity_list_.Clear();
}
inline ::google::protobuf::uint32 MonsterAlertChangeNotify::monster_entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MonsterAlertChangeNotify.monster_entity_list)
  return monster_entity_list_.Get(index);
}
inline void MonsterAlertChangeNotify::set_monster_entity_list(int index, ::google::protobuf::uint32 value) {
  monster_entity_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MonsterAlertChangeNotify.monster_entity_list)
}
inline void MonsterAlertChangeNotify::add_monster_entity_list(::google::protobuf::uint32 value) {
  monster_entity_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MonsterAlertChangeNotify.monster_entity_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MonsterAlertChangeNotify::monster_entity_list() const {
  // @@protoc_insertion_point(field_list:proto.MonsterAlertChangeNotify.monster_entity_list)
  return monster_entity_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MonsterAlertChangeNotify::mutable_monster_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MonsterAlertChangeNotify.monster_entity_list)
  return &monster_entity_list_;
}

// -------------------------------------------------------------------

// MonsterForceAlertNotify

// uint32 monster_entity_id = 1;
inline void MonsterForceAlertNotify::clear_monster_entity_id() {
  monster_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 MonsterForceAlertNotify::monster_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MonsterForceAlertNotify.monster_entity_id)
  return monster_entity_id_;
}
inline void MonsterForceAlertNotify::set_monster_entity_id(::google::protobuf::uint32 value) {
  
  monster_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterForceAlertNotify.monster_entity_id)
}

// -------------------------------------------------------------------

// AvatarEnterElementViewNotify

// uint32 avatar_entity_id = 1;
inline void AvatarEnterElementViewNotify::clear_avatar_entity_id() {
  avatar_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarEnterElementViewNotify::avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterElementViewNotify.avatar_entity_id)
  return avatar_entity_id_;
}
inline void AvatarEnterElementViewNotify::set_avatar_entity_id(::google::protobuf::uint32 value) {
  
  avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterElementViewNotify.avatar_entity_id)
}

// bool is_triggerd = 2;
inline void AvatarEnterElementViewNotify::clear_is_triggerd() {
  is_triggerd_ = false;
}
inline bool AvatarEnterElementViewNotify::is_triggerd() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterElementViewNotify.is_triggerd)
  return is_triggerd_;
}
inline void AvatarEnterElementViewNotify::set_is_triggerd(bool value) {
  
  is_triggerd_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterElementViewNotify.is_triggerd)
}

// -------------------------------------------------------------------

// TriggerCreateGadgetToEquipPartNotify

// uint32 entity_id = 1;
inline void TriggerCreateGadgetToEquipPartNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 TriggerCreateGadgetToEquipPartNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TriggerCreateGadgetToEquipPartNotify.entity_id)
  return entity_id_;
}
inline void TriggerCreateGadgetToEquipPartNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TriggerCreateGadgetToEquipPartNotify.entity_id)
}

// uint32 gadget_entity_id = 2;
inline void TriggerCreateGadgetToEquipPartNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 TriggerCreateGadgetToEquipPartNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TriggerCreateGadgetToEquipPartNotify.gadget_entity_id)
  return gadget_entity_id_;
}
inline void TriggerCreateGadgetToEquipPartNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TriggerCreateGadgetToEquipPartNotify.gadget_entity_id)
}

// uint32 gadget_id = 3;
inline void TriggerCreateGadgetToEquipPartNotify::clear_gadget_id() {
  gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 TriggerCreateGadgetToEquipPartNotify::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.TriggerCreateGadgetToEquipPartNotify.gadget_id)
  return gadget_id_;
}
inline void TriggerCreateGadgetToEquipPartNotify::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TriggerCreateGadgetToEquipPartNotify.gadget_id)
}

// string equip_part = 4;
inline void TriggerCreateGadgetToEquipPartNotify::clear_equip_part() {
  equip_part_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TriggerCreateGadgetToEquipPartNotify::equip_part() const {
  // @@protoc_insertion_point(field_get:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
  return equip_part_.GetNoArena();
}
inline void TriggerCreateGadgetToEquipPartNotify::set_equip_part(const ::std::string& value) {
  
  equip_part_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}
#if LANG_CXX11
inline void TriggerCreateGadgetToEquipPartNotify::set_equip_part(::std::string&& value) {
  
  equip_part_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}
#endif
inline void TriggerCreateGadgetToEquipPartNotify::set_equip_part(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  equip_part_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}
inline void TriggerCreateGadgetToEquipPartNotify::set_equip_part(const char* value, size_t size) {
  
  equip_part_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}
inline ::std::string* TriggerCreateGadgetToEquipPartNotify::mutable_equip_part() {
  
  // @@protoc_insertion_point(field_mutable:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
  return equip_part_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TriggerCreateGadgetToEquipPartNotify::release_equip_part() {
  // @@protoc_insertion_point(field_release:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
  
  return equip_part_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TriggerCreateGadgetToEquipPartNotify::set_allocated_equip_part(::std::string* equip_part) {
  if (equip_part != NULL) {
    
  } else {
    
  }
  equip_part_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), equip_part);
  // @@protoc_insertion_point(field_set_allocated:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}

// -------------------------------------------------------------------

// EvtEntityRenderersChangedNotify

// .proto.ForwardType forward_type = 1;
inline void EvtEntityRenderersChangedNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtEntityRenderersChangedNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityRenderersChangedNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtEntityRenderersChangedNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityRenderersChangedNotify.forward_type)
}

// uint32 entity_id = 2;
inline void EvtEntityRenderersChangedNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtEntityRenderersChangedNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityRenderersChangedNotify.entity_id)
  return entity_id_;
}
inline void EvtEntityRenderersChangedNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityRenderersChangedNotify.entity_id)
}

// bool is_server_cache = 3;
inline void EvtEntityRenderersChangedNotify::clear_is_server_cache() {
  is_server_cache_ = false;
}
inline bool EvtEntityRenderersChangedNotify::is_server_cache() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityRenderersChangedNotify.is_server_cache)
  return is_server_cache_;
}
inline void EvtEntityRenderersChangedNotify::set_is_server_cache(bool value) {
  
  is_server_cache_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityRenderersChangedNotify.is_server_cache)
}

// .proto.EntityRendererChangedInfo renderer_changed_info = 4;
inline bool EvtEntityRenderersChangedNotify::has_renderer_changed_info() const {
  return this != internal_default_instance() && renderer_changed_info_ != NULL;
}
inline void EvtEntityRenderersChangedNotify::clear_renderer_changed_info() {
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) delete renderer_changed_info_;
  renderer_changed_info_ = NULL;
}
inline const ::proto::EntityRendererChangedInfo& EvtEntityRenderersChangedNotify::renderer_changed_info() const {
  const ::proto::EntityRendererChangedInfo* p = renderer_changed_info_;
  // @@protoc_insertion_point(field_get:proto.EvtEntityRenderersChangedNotify.renderer_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityRendererChangedInfo*>(
      &::proto::_EntityRendererChangedInfo_default_instance_);
}
inline ::proto::EntityRendererChangedInfo* EvtEntityRenderersChangedNotify::mutable_renderer_changed_info() {
  
  if (renderer_changed_info_ == NULL) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtEntityRenderersChangedNotify.renderer_changed_info)
  return renderer_changed_info_;
}
inline ::proto::EntityRendererChangedInfo* EvtEntityRenderersChangedNotify::release_renderer_changed_info() {
  // @@protoc_insertion_point(field_release:proto.EvtEntityRenderersChangedNotify.renderer_changed_info)
  
  ::proto::EntityRendererChangedInfo* temp = renderer_changed_info_;
  renderer_changed_info_ = NULL;
  return temp;
}
inline void EvtEntityRenderersChangedNotify::set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info) {
  delete renderer_changed_info_;
  renderer_changed_info_ = renderer_changed_info;
  if (renderer_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtEntityRenderersChangedNotify.renderer_changed_info)
}

// -------------------------------------------------------------------

// AnimatorForceSetAirMoveNotify

// .proto.ForwardType forward_type = 1;
inline void AnimatorForceSetAirMoveNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType AnimatorForceSetAirMoveNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorForceSetAirMoveNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void AnimatorForceSetAirMoveNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorForceSetAirMoveNotify.forward_type)
}

// uint32 entity_id = 2;
inline void AnimatorForceSetAirMoveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AnimatorForceSetAirMoveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorForceSetAirMoveNotify.entity_id)
  return entity_id_;
}
inline void AnimatorForceSetAirMoveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorForceSetAirMoveNotify.entity_id)
}

// bool in_air_move = 3;
inline void AnimatorForceSetAirMoveNotify::clear_in_air_move() {
  in_air_move_ = false;
}
inline bool AnimatorForceSetAirMoveNotify::in_air_move() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorForceSetAirMoveNotify.in_air_move)
  return in_air_move_;
}
inline void AnimatorForceSetAirMoveNotify::set_in_air_move(bool value) {
  
  in_air_move_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorForceSetAirMoveNotify.in_air_move)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AiSkillCdInfo

// map<uint32, uint32> skill_cd_map = 1;
inline int AiSkillCdInfo::skill_cd_map_size() const {
  return skill_cd_map_.size();
}
inline void AiSkillCdInfo::clear_skill_cd_map() {
  skill_cd_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AiSkillCdInfo::skill_cd_map() const {
  // @@protoc_insertion_point(field_map:proto.AiSkillCdInfo.skill_cd_map)
  return skill_cd_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AiSkillCdInfo::mutable_skill_cd_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AiSkillCdInfo.skill_cd_map)
  return skill_cd_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EvtAiSyncSkillCdNotify

// map<uint32, .proto.AiSkillCdInfo> ai_cd_map = 1;
inline int EvtAiSyncSkillCdNotify::ai_cd_map_size() const {
  return ai_cd_map_.size();
}
inline void EvtAiSyncSkillCdNotify::clear_ai_cd_map() {
  ai_cd_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >&
EvtAiSyncSkillCdNotify::ai_cd_map() const {
  // @@protoc_insertion_point(field_map:proto.EvtAiSyncSkillCdNotify.ai_cd_map)
  return ai_cd_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >*
EvtAiSyncSkillCdNotify::mutable_ai_cd_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.EvtAiSyncSkillCdNotify.ai_cd_map)
  return ai_cd_map_.MutableMap();
}

// -------------------------------------------------------------------

// EvtBeingHitsCombineNotify

// .proto.ForwardType forward_type = 1;
inline void EvtBeingHitsCombineNotify::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType EvtBeingHitsCombineNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitsCombineNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void EvtBeingHitsCombineNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBeingHitsCombineNotify.forward_type)
}

// repeated .proto.EvtBeingHitInfo evt_being_hit_info_list = 2;
inline int EvtBeingHitsCombineNotify::evt_being_hit_info_list_size() const {
  return evt_being_hit_info_list_.size();
}
inline void EvtBeingHitsCombineNotify::clear_evt_being_hit_info_list() {
  evt_being_hit_info_list_.Clear();
}
inline const ::proto::EvtBeingHitInfo& EvtBeingHitsCombineNotify::evt_being_hit_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return evt_being_hit_info_list_.Get(index);
}
inline ::proto::EvtBeingHitInfo* EvtBeingHitsCombineNotify::mutable_evt_being_hit_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return evt_being_hit_info_list_.Mutable(index);
}
inline ::proto::EvtBeingHitInfo* EvtBeingHitsCombineNotify::add_evt_being_hit_info_list() {
  // @@protoc_insertion_point(field_add:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return evt_being_hit_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo >*
EvtBeingHitsCombineNotify::mutable_evt_being_hit_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return &evt_being_hit_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo >&
EvtBeingHitsCombineNotify::evt_being_hit_info_list() const {
  // @@protoc_insertion_point(field_list:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return evt_being_hit_info_list_;
}

// -------------------------------------------------------------------

// EvtAvatarSitDownNotify

// uint32 entity_id = 1;
inline void EvtAvatarSitDownNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtAvatarSitDownNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarSitDownNotify.entity_id)
  return entity_id_;
}
inline void EvtAvatarSitDownNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarSitDownNotify.entity_id)
}

// .proto.Vector position = 2;
inline bool EvtAvatarSitDownNotify::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void EvtAvatarSitDownNotify::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::proto::Vector& EvtAvatarSitDownNotify::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.EvtAvatarSitDownNotify.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EvtAvatarSitDownNotify::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAvatarSitDownNotify.position)
  return position_;
}
inline ::proto::Vector* EvtAvatarSitDownNotify::release_position() {
  // @@protoc_insertion_point(field_release:proto.EvtAvatarSitDownNotify.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void EvtAvatarSitDownNotify::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAvatarSitDownNotify.position)
}

// -------------------------------------------------------------------

// EvtAvatarStandUpNotify

// uint32 entity_id = 1;
inline void EvtAvatarStandUpNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EvtAvatarStandUpNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarStandUpNotify.entity_id)
  return entity_id_;
}
inline void EvtAvatarStandUpNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarStandUpNotify.entity_id)
}

// int32 direction = 2;
inline void EvtAvatarStandUpNotify::clear_direction() {
  direction_ = 0;
}
inline ::google::protobuf::int32 EvtAvatarStandUpNotify::direction() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarStandUpNotify.direction)
  return direction_;
}
inline void EvtAvatarStandUpNotify::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarStandUpNotify.direction)
}

// int32 performID = 3;
inline void EvtAvatarStandUpNotify::clear_performid() {
  performid_ = 0;
}
inline ::google::protobuf::int32 EvtAvatarStandUpNotify::performid() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarStandUpNotify.performID)
  return performid_;
}
inline void EvtAvatarStandUpNotify::set_performid(::google::protobuf::int32 value) {
  
  performid_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarStandUpNotify.performID)
}

// -------------------------------------------------------------------

// CreateMassiveEntityReq

// repeated .proto.ClientMassiveEntity massive_entity_list = 1;
inline int CreateMassiveEntityReq::massive_entity_list_size() const {
  return massive_entity_list_.size();
}
inline void CreateMassiveEntityReq::clear_massive_entity_list() {
  massive_entity_list_.Clear();
}
inline const ::proto::ClientMassiveEntity& CreateMassiveEntityReq::massive_entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CreateMassiveEntityReq.massive_entity_list)
  return massive_entity_list_.Get(index);
}
inline ::proto::ClientMassiveEntity* CreateMassiveEntityReq::mutable_massive_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CreateMassiveEntityReq.massive_entity_list)
  return massive_entity_list_.Mutable(index);
}
inline ::proto::ClientMassiveEntity* CreateMassiveEntityReq::add_massive_entity_list() {
  // @@protoc_insertion_point(field_add:proto.CreateMassiveEntityReq.massive_entity_list)
  return massive_entity_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >*
CreateMassiveEntityReq::mutable_massive_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CreateMassiveEntityReq.massive_entity_list)
  return &massive_entity_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >&
CreateMassiveEntityReq::massive_entity_list() const {
  // @@protoc_insertion_point(field_list:proto.CreateMassiveEntityReq.massive_entity_list)
  return massive_entity_list_;
}

// -------------------------------------------------------------------

// CreateMassiveEntityRsp

// int32 retcode = 1;
inline void CreateMassiveEntityRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CreateMassiveEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CreateMassiveEntityRsp.retcode)
  return retcode_;
}
inline void CreateMassiveEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateMassiveEntityRsp.retcode)
}

// -------------------------------------------------------------------

// CreateMassiveEntityNotify

// repeated .proto.ServerMassiveEntity massive_entity_list = 1;
inline int CreateMassiveEntityNotify::massive_entity_list_size() const {
  return massive_entity_list_.size();
}
inline void CreateMassiveEntityNotify::clear_massive_entity_list() {
  massive_entity_list_.Clear();
}
inline const ::proto::ServerMassiveEntity& CreateMassiveEntityNotify::massive_entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CreateMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Get(index);
}
inline ::proto::ServerMassiveEntity* CreateMassiveEntityNotify::mutable_massive_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CreateMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Mutable(index);
}
inline ::proto::ServerMassiveEntity* CreateMassiveEntityNotify::add_massive_entity_list() {
  // @@protoc_insertion_point(field_add:proto.CreateMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity >*
CreateMassiveEntityNotify::mutable_massive_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CreateMassiveEntityNotify.massive_entity_list)
  return &massive_entity_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity >&
CreateMassiveEntityNotify::massive_entity_list() const {
  // @@protoc_insertion_point(field_list:proto.CreateMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_;
}

// -------------------------------------------------------------------

// DestroyMassiveEntityNotify

// repeated .proto.ClientMassiveEntity massive_entity_list = 1;
inline int DestroyMassiveEntityNotify::massive_entity_list_size() const {
  return massive_entity_list_.size();
}
inline void DestroyMassiveEntityNotify::clear_massive_entity_list() {
  massive_entity_list_.Clear();
}
inline const ::proto::ClientMassiveEntity& DestroyMassiveEntityNotify::massive_entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Get(index);
}
inline ::proto::ClientMassiveEntity* DestroyMassiveEntityNotify::mutable_massive_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Mutable(index);
}
inline ::proto::ClientMassiveEntity* DestroyMassiveEntityNotify::add_massive_entity_list() {
  // @@protoc_insertion_point(field_add:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >*
DestroyMassiveEntityNotify::mutable_massive_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return &massive_entity_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >&
DestroyMassiveEntityNotify::massive_entity_list() const {
  // @@protoc_insertion_point(field_list:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_;
}

// -------------------------------------------------------------------

// MassiveEntityStateChangedNotify

// repeated .proto.MassiveEntityState massive_entity_state_list = 1;
inline int MassiveEntityStateChangedNotify::massive_entity_state_list_size() const {
  return massive_entity_state_list_.size();
}
inline void MassiveEntityStateChangedNotify::clear_massive_entity_state_list() {
  massive_entity_state_list_.Clear();
}
inline const ::proto::MassiveEntityState& MassiveEntityStateChangedNotify::massive_entity_state_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return massive_entity_state_list_.Get(index);
}
inline ::proto::MassiveEntityState* MassiveEntityStateChangedNotify::mutable_massive_entity_state_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return massive_entity_state_list_.Mutable(index);
}
inline ::proto::MassiveEntityState* MassiveEntityStateChangedNotify::add_massive_entity_state_list() {
  // @@protoc_insertion_point(field_add:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return massive_entity_state_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState >*
MassiveEntityStateChangedNotify::mutable_massive_entity_state_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return &massive_entity_state_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState >&
MassiveEntityStateChangedNotify::massive_entity_state_list() const {
  // @@protoc_insertion_point(field_list:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return massive_entity_state_list_;
}

// -------------------------------------------------------------------

// TeamEntityInfo

// uint32 team_entity_id = 1;
inline void TeamEntityInfo::clear_team_entity_id() {
  team_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 TeamEntityInfo::team_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TeamEntityInfo.team_entity_id)
  return team_entity_id_;
}
inline void TeamEntityInfo::set_team_entity_id(::google::protobuf::uint32 value) {
  
  team_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TeamEntityInfo.team_entity_id)
}

// uint32 authority_peer_id = 2;
inline void TeamEntityInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 TeamEntityInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.TeamEntityInfo.authority_peer_id)
  return authority_peer_id_;
}
inline void TeamEntityInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TeamEntityInfo.authority_peer_id)
}

// .proto.AbilitySyncStateInfo team_ability_info = 3;
inline bool TeamEntityInfo::has_team_ability_info() const {
  return this != internal_default_instance() && team_ability_info_ != NULL;
}
inline void TeamEntityInfo::clear_team_ability_info() {
  if (GetArenaNoVirtual() == NULL && team_ability_info_ != NULL) delete team_ability_info_;
  team_ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& TeamEntityInfo::team_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = team_ability_info_;
  // @@protoc_insertion_point(field_get:proto.TeamEntityInfo.team_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* TeamEntityInfo::mutable_team_ability_info() {
  
  if (team_ability_info_ == NULL) {
    team_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.TeamEntityInfo.team_ability_info)
  return team_ability_info_;
}
inline ::proto::AbilitySyncStateInfo* TeamEntityInfo::release_team_ability_info() {
  // @@protoc_insertion_point(field_release:proto.TeamEntityInfo.team_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = team_ability_info_;
  team_ability_info_ = NULL;
  return temp;
}
inline void TeamEntityInfo::set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info) {
  delete team_ability_info_;
  team_ability_info_ = team_ability_info;
  if (team_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TeamEntityInfo.team_ability_info)
}

// -------------------------------------------------------------------

// SyncTeamEntityNotify

// uint32 scene_id = 1;
inline void SyncTeamEntityNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SyncTeamEntityNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SyncTeamEntityNotify.scene_id)
  return scene_id_;
}
inline void SyncTeamEntityNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SyncTeamEntityNotify.scene_id)
}

// repeated .proto.TeamEntityInfo team_entity_info_list = 2;
inline int SyncTeamEntityNotify::team_entity_info_list_size() const {
  return team_entity_info_list_.size();
}
inline void SyncTeamEntityNotify::clear_team_entity_info_list() {
  team_entity_info_list_.Clear();
}
inline const ::proto::TeamEntityInfo& SyncTeamEntityNotify::team_entity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SyncTeamEntityNotify.team_entity_info_list)
  return team_entity_info_list_.Get(index);
}
inline ::proto::TeamEntityInfo* SyncTeamEntityNotify::mutable_team_entity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SyncTeamEntityNotify.team_entity_info_list)
  return team_entity_info_list_.Mutable(index);
}
inline ::proto::TeamEntityInfo* SyncTeamEntityNotify::add_team_entity_info_list() {
  // @@protoc_insertion_point(field_add:proto.SyncTeamEntityNotify.team_entity_info_list)
  return team_entity_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo >*
SyncTeamEntityNotify::mutable_team_entity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SyncTeamEntityNotify.team_entity_info_list)
  return &team_entity_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo >&
SyncTeamEntityNotify::team_entity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SyncTeamEntityNotify.team_entity_info_list)
  return team_entity_info_list_;
}

// -------------------------------------------------------------------

// DelTeamEntityNotify

// uint32 scene_id = 1;
inline void DelTeamEntityNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 DelTeamEntityNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DelTeamEntityNotify.scene_id)
  return scene_id_;
}
inline void DelTeamEntityNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelTeamEntityNotify.scene_id)
}

// repeated uint32 del_entity_id_list = 2;
inline int DelTeamEntityNotify::del_entity_id_list_size() const {
  return del_entity_id_list_.size();
}
inline void DelTeamEntityNotify::clear_del_entity_id_list() {
  del_entity_id_list_.Clear();
}
inline ::google::protobuf::uint32 DelTeamEntityNotify::del_entity_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelTeamEntityNotify.del_entity_id_list)
  return del_entity_id_list_.Get(index);
}
inline void DelTeamEntityNotify::set_del_entity_id_list(int index, ::google::protobuf::uint32 value) {
  del_entity_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelTeamEntityNotify.del_entity_id_list)
}
inline void DelTeamEntityNotify::add_del_entity_id_list(::google::protobuf::uint32 value) {
  del_entity_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelTeamEntityNotify.del_entity_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelTeamEntityNotify::del_entity_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelTeamEntityNotify.del_entity_id_list)
  return del_entity_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelTeamEntityNotify::mutable_del_entity_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelTeamEntityNotify.del_entity_id_list)
  return &del_entity_id_list_;
}

// -------------------------------------------------------------------

// CombatInvokeEntry

// .proto.CombatTypeArgument argument_type = 1;
inline void CombatInvokeEntry::clear_argument_type() {
  argument_type_ = 0;
}
inline ::proto::CombatTypeArgument CombatInvokeEntry::argument_type() const {
  // @@protoc_insertion_point(field_get:proto.CombatInvokeEntry.argument_type)
  return static_cast< ::proto::CombatTypeArgument >(argument_type_);
}
inline void CombatInvokeEntry::set_argument_type(::proto::CombatTypeArgument value) {
  
  argument_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatInvokeEntry.argument_type)
}

// .proto.ForwardType forward_type = 2;
inline void CombatInvokeEntry::clear_forward_type() {
  forward_type_ = 0;
}
inline ::proto::ForwardType CombatInvokeEntry::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.CombatInvokeEntry.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
inline void CombatInvokeEntry::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatInvokeEntry.forward_type)
}

// bytes combat_data = 3;
inline void CombatInvokeEntry::clear_combat_data() {
  combat_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CombatInvokeEntry::combat_data() const {
  // @@protoc_insertion_point(field_get:proto.CombatInvokeEntry.combat_data)
  return combat_data_.GetNoArena();
}
inline void CombatInvokeEntry::set_combat_data(const ::std::string& value) {
  
  combat_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CombatInvokeEntry.combat_data)
}
#if LANG_CXX11
inline void CombatInvokeEntry::set_combat_data(::std::string&& value) {
  
  combat_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CombatInvokeEntry.combat_data)
}
#endif
inline void CombatInvokeEntry::set_combat_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  combat_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CombatInvokeEntry.combat_data)
}
inline void CombatInvokeEntry::set_combat_data(const void* value, size_t size) {
  
  combat_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CombatInvokeEntry.combat_data)
}
inline ::std::string* CombatInvokeEntry::mutable_combat_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.CombatInvokeEntry.combat_data)
  return combat_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CombatInvokeEntry::release_combat_data() {
  // @@protoc_insertion_point(field_release:proto.CombatInvokeEntry.combat_data)
  
  return combat_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CombatInvokeEntry::set_allocated_combat_data(::std::string* combat_data) {
  if (combat_data != NULL) {
    
  } else {
    
  }
  combat_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), combat_data);
  // @@protoc_insertion_point(field_set_allocated:proto.CombatInvokeEntry.combat_data)
}

// -------------------------------------------------------------------

// CombatInvocationsNotify

// repeated .proto.CombatInvokeEntry invoke_list = 1;
inline int CombatInvocationsNotify::invoke_list_size() const {
  return invoke_list_.size();
}
inline void CombatInvocationsNotify::clear_invoke_list() {
  invoke_list_.Clear();
}
inline const ::proto::CombatInvokeEntry& CombatInvocationsNotify::invoke_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CombatInvocationsNotify.invoke_list)
  return invoke_list_.Get(index);
}
inline ::proto::CombatInvokeEntry* CombatInvocationsNotify::mutable_invoke_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CombatInvocationsNotify.invoke_list)
  return invoke_list_.Mutable(index);
}
inline ::proto::CombatInvokeEntry* CombatInvocationsNotify::add_invoke_list() {
  // @@protoc_insertion_point(field_add:proto.CombatInvocationsNotify.invoke_list)
  return invoke_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry >*
CombatInvocationsNotify::mutable_invoke_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CombatInvocationsNotify.invoke_list)
  return &invoke_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry >&
CombatInvocationsNotify::invoke_list() const {
  // @@protoc_insertion_point(field_list:proto.CombatInvocationsNotify.invoke_list)
  return invoke_list_;
}

// -------------------------------------------------------------------

// ServerBuffChangeNotify

// .proto.ServerBuffChangeNotify.ServerBuffChangeType server_buff_change_type = 1;
inline void ServerBuffChangeNotify::clear_server_buff_change_type() {
  server_buff_change_type_ = 0;
}
inline ::proto::ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify::server_buff_change_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuffChangeNotify.server_buff_change_type)
  return static_cast< ::proto::ServerBuffChangeNotify_ServerBuffChangeType >(server_buff_change_type_);
}
inline void ServerBuffChangeNotify::set_server_buff_change_type(::proto::ServerBuffChangeNotify_ServerBuffChangeType value) {
  
  server_buff_change_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuffChangeNotify.server_buff_change_type)
}

// repeated uint64 avatar_guid_list = 2;
inline int ServerBuffChangeNotify::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
inline void ServerBuffChangeNotify::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
inline ::google::protobuf::uint64 ServerBuffChangeNotify::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerBuffChangeNotify.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
inline void ServerBuffChangeNotify::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerBuffChangeNotify.avatar_guid_list)
}
inline void ServerBuffChangeNotify::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerBuffChangeNotify.avatar_guid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerBuffChangeNotify::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerBuffChangeNotify.avatar_guid_list)
  return avatar_guid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerBuffChangeNotify::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerBuffChangeNotify.avatar_guid_list)
  return &avatar_guid_list_;
}

// repeated .proto.ServerBuff server_buff_list = 3;
inline int ServerBuffChangeNotify::server_buff_list_size() const {
  return server_buff_list_.size();
}
inline void ServerBuffChangeNotify::clear_server_buff_list() {
  server_buff_list_.Clear();
}
inline const ::proto::ServerBuff& ServerBuffChangeNotify::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerBuffChangeNotify.server_buff_list)
  return server_buff_list_.Get(index);
}
inline ::proto::ServerBuff* ServerBuffChangeNotify::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerBuffChangeNotify.server_buff_list)
  return server_buff_list_.Mutable(index);
}
inline ::proto::ServerBuff* ServerBuffChangeNotify::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.ServerBuffChangeNotify.server_buff_list)
  return server_buff_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
ServerBuffChangeNotify::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerBuffChangeNotify.server_buff_list)
  return &server_buff_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
ServerBuffChangeNotify::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerBuffChangeNotify.server_buff_list)
  return server_buff_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// AiThreatInfo

// map<uint32, uint32> ai_threat_map = 1;
inline int AiThreatInfo::ai_threat_map_size() const {
  return ai_threat_map_.size();
}
inline void AiThreatInfo::clear_ai_threat_map() {
  ai_threat_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AiThreatInfo::ai_threat_map() const {
  // @@protoc_insertion_point(field_map:proto.AiThreatInfo.ai_threat_map)
  return ai_threat_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AiThreatInfo::mutable_ai_threat_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AiThreatInfo.ai_threat_map)
  return ai_threat_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EvtAiSyncCombatThreatInfoNotify

// map<uint32, .proto.AiThreatInfo> combat_threat_info_map = 1;
inline int EvtAiSyncCombatThreatInfoNotify::combat_threat_info_map_size() const {
  return combat_threat_info_map_.size();
}
inline void EvtAiSyncCombatThreatInfoNotify::clear_combat_threat_info_map() {
  combat_threat_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >&
EvtAiSyncCombatThreatInfoNotify::combat_threat_info_map() const {
  // @@protoc_insertion_point(field_map:proto.EvtAiSyncCombatThreatInfoNotify.combat_threat_info_map)
  return combat_threat_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >*
EvtAiSyncCombatThreatInfoNotify::mutable_combat_threat_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.EvtAiSyncCombatThreatInfoNotify.combat_threat_info_map)
  return combat_threat_info_map_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::EvtBeingHitNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBeingHitNotify_CmdId>() {
  return ::proto::EvtBeingHitNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAnimatorParameterNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAnimatorParameterNotify_CmdId>() {
  return ::proto::EvtAnimatorParameterNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HostPlayerNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HostPlayerNotify_CmdId>() {
  return ::proto::HostPlayerNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtDoSkillSuccNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtDoSkillSuccNotify_CmdId>() {
  return ::proto::EvtDoSkillSuccNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtCreateGadgetNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtCreateGadgetNotify_CmdId>() {
  return ::proto::EvtCreateGadgetNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtDestroyGadgetNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtDestroyGadgetNotify_CmdId>() {
  return ::proto::EvtDestroyGadgetNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtFaceToEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtFaceToEntityNotify_CmdId>() {
  return ::proto::EvtFaceToEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtFaceToDirNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtFaceToDirNotify_CmdId>() {
  return ::proto::EvtFaceToDirNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtCostStaminaNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtCostStaminaNotify_CmdId>() {
  return ::proto::EvtCostStaminaNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtSetAttackTargetNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtSetAttackTargetNotify_CmdId>() {
  return ::proto::EvtSetAttackTargetNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAnimatorStateChangedNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAnimatorStateChangedNotify_CmdId>() {
  return ::proto::EvtAnimatorStateChangedNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtRushMoveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtRushMoveNotify_CmdId>() {
  return ::proto::EvtRushMoveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBulletHitNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBulletHitNotify_CmdId>() {
  return ::proto::EvtBulletHitNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBulletDeactiveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBulletDeactiveNotify_CmdId>() {
  return ::proto::EvtBulletDeactiveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtEntityStartDieEndNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtEntityStartDieEndNotify_CmdId>() {
  return ::proto::EvtEntityStartDieEndNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBulletMoveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBulletMoveNotify_CmdId>() {
  return ::proto::EvtBulletMoveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarEnterFocusNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarEnterFocusNotify_CmdId>() {
  return ::proto::EvtAvatarEnterFocusNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarExitFocusNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarExitFocusNotify_CmdId>() {
  return ::proto::EvtAvatarExitFocusNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarUpdateFocusNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarUpdateFocusNotify_CmdId>() {
  return ::proto::EvtAvatarUpdateFocusNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityAuthorityChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityAuthorityChangeNotify_CmdId>() {
  return ::proto::EntityAuthorityChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarBuffAddNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarBuffAddNotify_CmdId>() {
  return ::proto::AvatarBuffAddNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarBuffDelNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarBuffDelNotify_CmdId>() {
  return ::proto::AvatarBuffDelNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterAlertChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterAlertChangeNotify_CmdId>() {
  return ::proto::MonsterAlertChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterForceAlertNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterForceAlertNotify_CmdId>() {
  return ::proto::MonsterForceAlertNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarEnterElementViewNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarEnterElementViewNotify_CmdId>() {
  return ::proto::AvatarEnterElementViewNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TriggerCreateGadgetToEquipPartNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TriggerCreateGadgetToEquipPartNotify_CmdId>() {
  return ::proto::TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtEntityRenderersChangedNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtEntityRenderersChangedNotify_CmdId>() {
  return ::proto::EvtEntityRenderersChangedNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AnimatorForceSetAirMoveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AnimatorForceSetAirMoveNotify_CmdId>() {
  return ::proto::AnimatorForceSetAirMoveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAiSyncSkillCdNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAiSyncSkillCdNotify_CmdId>() {
  return ::proto::EvtAiSyncSkillCdNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtBeingHitsCombineNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtBeingHitsCombineNotify_CmdId>() {
  return ::proto::EvtBeingHitsCombineNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarSitDownNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarSitDownNotify_CmdId>() {
  return ::proto::EvtAvatarSitDownNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAvatarStandUpNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAvatarStandUpNotify_CmdId>() {
  return ::proto::EvtAvatarStandUpNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateMassiveEntityReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateMassiveEntityReq_CmdId>() {
  return ::proto::CreateMassiveEntityReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateMassiveEntityRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateMassiveEntityRsp_CmdId>() {
  return ::proto::CreateMassiveEntityRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateMassiveEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateMassiveEntityNotify_CmdId>() {
  return ::proto::CreateMassiveEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DestroyMassiveEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DestroyMassiveEntityNotify_CmdId>() {
  return ::proto::DestroyMassiveEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MassiveEntityStateChangedNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MassiveEntityStateChangedNotify_CmdId>() {
  return ::proto::MassiveEntityStateChangedNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SyncTeamEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SyncTeamEntityNotify_CmdId>() {
  return ::proto::SyncTeamEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DelTeamEntityNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DelTeamEntityNotify_CmdId>() {
  return ::proto::DelTeamEntityNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CombatInvocationsNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CombatInvocationsNotify_CmdId>() {
  return ::proto::CombatInvocationsNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ServerBuffChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ServerBuffChangeNotify_CmdId>() {
  return ::proto::ServerBuffChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ServerBuffChangeNotify_ServerBuffChangeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ServerBuffChangeNotify_ServerBuffChangeType>() {
  return ::proto::ServerBuffChangeNotify_ServerBuffChangeType_descriptor();
}
template <> struct is_proto_enum< ::proto::EvtAiSyncCombatThreatInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EvtAiSyncCombatThreatInfoNotify_CmdId>() {
  return ::proto::EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ForwardType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ForwardType>() {
  return ::proto::ForwardType_descriptor();
}
template <> struct is_proto_enum< ::proto::HitColliderType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HitColliderType>() {
  return ::proto::HitColliderType_descriptor();
}
template <> struct is_proto_enum< ::proto::CombatTypeArgument> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CombatTypeArgument>() {
  return ::proto::CombatTypeArgument_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5ffight_2eproto__INCLUDED
