// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_mp.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_mp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class PlayerApplyEnterMpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpNotify>
     _instance;
} _PlayerApplyEnterMpNotify_default_instance_;
class PlayerApplyEnterMpReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpReq>
     _instance;
} _PlayerApplyEnterMpReq_default_instance_;
class PlayerApplyEnterMpRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpRsp>
     _instance;
} _PlayerApplyEnterMpRsp_default_instance_;
class PlayerApplyEnterMpResultNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpResultNotify>
     _instance;
} _PlayerApplyEnterMpResultNotify_default_instance_;
class PlayerApplyEnterMpResultReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpResultReq>
     _instance;
} _PlayerApplyEnterMpResultReq_default_instance_;
class PlayerApplyEnterMpResultRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerApplyEnterMpResultRsp>
     _instance;
} _PlayerApplyEnterMpResultRsp_default_instance_;
class PlayerQuitFromMpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerQuitFromMpNotify>
     _instance;
} _PlayerQuitFromMpNotify_default_instance_;
class PlayerPreEnterMpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerPreEnterMpNotify>
     _instance;
} _PlayerPreEnterMpNotify_default_instance_;
class GetPlayerMpModeAvailabilityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerMpModeAvailabilityReq>
     _instance;
} _GetPlayerMpModeAvailabilityReq_default_instance_;
class GetPlayerMpModeAvailabilityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerMpModeAvailabilityRsp>
     _instance;
} _GetPlayerMpModeAvailabilityRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5fmp_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[13];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpNotify, src_player_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, is_agreed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultReq, apply_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultReq, is_agreed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, apply_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerApplyEnterMpResultRsp, is_agreed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerQuitFromMpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerQuitFromMpNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPreEnterMpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPreEnterMpNotify, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPreEnterMpNotify, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerPreEnterMpNotify, nickname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityRsp, mp_ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerMpModeAvailabilityRsp, param_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PlayerApplyEnterMpNotify)},
  { 6, -1, sizeof(PlayerApplyEnterMpReq)},
  { 12, -1, sizeof(PlayerApplyEnterMpRsp)},
  { 19, -1, sizeof(PlayerApplyEnterMpResultNotify)},
  { 27, -1, sizeof(PlayerApplyEnterMpResultReq)},
  { 34, -1, sizeof(PlayerApplyEnterMpResultRsp)},
  { 42, -1, sizeof(PlayerQuitFromMpNotify)},
  { 48, -1, sizeof(PlayerPreEnterMpNotify)},
  { 56, -1, sizeof(GetPlayerMpModeAvailabilityReq)},
  { 61, -1, sizeof(GetPlayerMpModeAvailabilityRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpResultNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpResultReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerApplyEnterMpResultRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerQuitFromMpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerPreEnterMpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerMpModeAvailabilityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerMpModeAvailabilityRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_mp.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _PlayerApplyEnterMpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpNotify_default_instance_);_PlayerApplyEnterMpReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpReq_default_instance_);_PlayerApplyEnterMpRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpRsp_default_instance_);_PlayerApplyEnterMpResultNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpResultNotify_default_instance_);_PlayerApplyEnterMpResultReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpResultReq_default_instance_);_PlayerApplyEnterMpResultRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerApplyEnterMpResultRsp_default_instance_);_PlayerQuitFromMpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerQuitFromMpNotify_default_instance_);_PlayerPreEnterMpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerPreEnterMpNotify_default_instance_);_GetPlayerMpModeAvailabilityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerMpModeAvailabilityReq_default_instance_);_GetPlayerMpModeAvailabilityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerMpModeAvailabilityRsp_default_instance_);_PlayerApplyEnterMpNotify_default_instance_._instance.get_mutable()->src_player_info_ = const_cast< ::proto::OnlinePlayerInfo*>(
      ::proto::OnlinePlayerInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020cmd/cmd_mp.proto\022\005proto\032\014define.proto\""
      "\233\001\n\030PlayerApplyEnterMpNotify\0220\n\017src_play"
      "er_info\030\001 \001(\0132\027.proto.OnlinePlayerInfo\"M"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\211\016\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\217\001"
      "\n\025PlayerApplyEnterMpReq\022\022\n\ntarget_uid\030\001 "
      "\001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\212\016\022\023\n\017E"
      "NET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023"
      "\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\213\001\n\025PlayerApplyE"
      "nterMpRsp\022\017\n\007retcode\030\001 \001(\005\022\022\n\ntarget_uid"
      "\030\002 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\213\016\022\023"
      "\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020"
      "\001\032\002\020\001\"\365\002\n\036PlayerApplyEnterMpResultNotify"
      "\022\022\n\ntarget_uid\030\001 \001(\r\022\021\n\tis_agreed\030\002 \001(\010\022"
      "<\n\006reason\030\003 \001(\0162,.proto.PlayerApplyEnter"
      "MpResultNotify.Reason\"M\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\013\n\006CMD_ID\020\214\016\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020EN"
      "ET_IS_RELIABLE\020\001\032\002\020\001\"\236\001\n\006Reason\022\020\n\014PLAYE"
      "R_JUDGE\020\000\022\026\n\022SCENE_CANNOT_ENTER\020\001\022\032\n\026PLA"
      "YER_CANNOT_ENTER_MP\020\002\022\020\n\014SYSTEM_JUDGE\020\003\022"
      "\033\n\027ALLOW_ENTER_PLAYER_FULL\020\004\022\037\n\033WORLD_LE"
      "VEL_LOWER_THAN_HOST\020\005\"\247\001\n\033PlayerApplyEnt"
      "erMpResultReq\022\021\n\tapply_uid\030\001 \001(\r\022\021\n\tis_a"
      "greed\030\002 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\215\016\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\243\001\n\033Play"
      "erApplyEnterMpResultRsp\022\017\n\007retcode\030\001 \001(\005"
      "\022\021\n\tapply_uid\030\002 \001(\r\022\021\n\tis_agreed\030\003 \001(\010\"M"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\216\016\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\227\002"
      "\n\026PlayerQuitFromMpNotify\0228\n\006reason\030\001 \001(\016"
      "2(.proto.PlayerQuitFromMpNotify.QuitReas"
      "on\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\217\016\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020"
      "\001\"t\n\nQuitReason\022\013\n\007INVALID\020\000\022\030\n\024HOST_NO_"
      "OTHER_PLAYER\020\001\022\020\n\014KICK_BY_HOST\020\002\022\024\n\020BACK"
      "_TO_MY_WORLD\020\003\022\027\n\023KICK_BY_HOST_LOGOUT\020\004\""
      "\350\001\n\026PlayerPreEnterMpNotify\022\013\n\003uid\030\001 \001(\r\022"
      "2\n\005state\030\002 \001(\0162#.proto.PlayerPreEnterMpN"
      "otify.State\022\020\n\010nickname\030\003 \001(\t\"M\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\220\016\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\",\n\005State\022\013\n"
      "\007INVALID\020\000\022\t\n\005START\020\001\022\013\n\007TIMEOUT\020\002\"\204\001\n\036G"
      "etPlayerMpModeAvailabilityReq\"b\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\221\016\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLI"
      "ENT\020\001\032\002\020\001\"\244\001\n\036GetPlayerMpModeAvailabilit"
      "yRsp\022\017\n\007retcode\030\001 \001(\005\022\016\n\006mp_ret\030\002 \001(\005\022\022\n"
      "\nparam_list\030\003 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\222\016\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\032\002\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2024);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_mp.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fmp_2eproto

const ::google::protobuf::EnumDescriptor* PlayerApplyEnterMpNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[0];
}
bool PlayerApplyEnterMpNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1801:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerApplyEnterMpNotify_CmdId PlayerApplyEnterMpNotify::NONE;
const PlayerApplyEnterMpNotify_CmdId PlayerApplyEnterMpNotify::CMD_ID;
const PlayerApplyEnterMpNotify_CmdId PlayerApplyEnterMpNotify::ENET_CHANNEL_ID;
const PlayerApplyEnterMpNotify_CmdId PlayerApplyEnterMpNotify::ENET_IS_RELIABLE;
const PlayerApplyEnterMpNotify_CmdId PlayerApplyEnterMpNotify::CmdId_MIN;
const PlayerApplyEnterMpNotify_CmdId PlayerApplyEnterMpNotify::CmdId_MAX;
const int PlayerApplyEnterMpNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerApplyEnterMpReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[1];
}
bool PlayerApplyEnterMpReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1802:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerApplyEnterMpReq_CmdId PlayerApplyEnterMpReq::NONE;
const PlayerApplyEnterMpReq_CmdId PlayerApplyEnterMpReq::CMD_ID;
const PlayerApplyEnterMpReq_CmdId PlayerApplyEnterMpReq::ENET_CHANNEL_ID;
const PlayerApplyEnterMpReq_CmdId PlayerApplyEnterMpReq::ENET_IS_RELIABLE;
const PlayerApplyEnterMpReq_CmdId PlayerApplyEnterMpReq::IS_ALLOW_CLIENT;
const PlayerApplyEnterMpReq_CmdId PlayerApplyEnterMpReq::CmdId_MIN;
const PlayerApplyEnterMpReq_CmdId PlayerApplyEnterMpReq::CmdId_MAX;
const int PlayerApplyEnterMpReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerApplyEnterMpRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[2];
}
bool PlayerApplyEnterMpRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1803:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerApplyEnterMpRsp_CmdId PlayerApplyEnterMpRsp::NONE;
const PlayerApplyEnterMpRsp_CmdId PlayerApplyEnterMpRsp::CMD_ID;
const PlayerApplyEnterMpRsp_CmdId PlayerApplyEnterMpRsp::ENET_CHANNEL_ID;
const PlayerApplyEnterMpRsp_CmdId PlayerApplyEnterMpRsp::ENET_IS_RELIABLE;
const PlayerApplyEnterMpRsp_CmdId PlayerApplyEnterMpRsp::CmdId_MIN;
const PlayerApplyEnterMpRsp_CmdId PlayerApplyEnterMpRsp::CmdId_MAX;
const int PlayerApplyEnterMpRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerApplyEnterMpResultNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[3];
}
bool PlayerApplyEnterMpResultNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1804:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerApplyEnterMpResultNotify_CmdId PlayerApplyEnterMpResultNotify::NONE;
const PlayerApplyEnterMpResultNotify_CmdId PlayerApplyEnterMpResultNotify::CMD_ID;
const PlayerApplyEnterMpResultNotify_CmdId PlayerApplyEnterMpResultNotify::ENET_CHANNEL_ID;
const PlayerApplyEnterMpResultNotify_CmdId PlayerApplyEnterMpResultNotify::ENET_IS_RELIABLE;
const PlayerApplyEnterMpResultNotify_CmdId PlayerApplyEnterMpResultNotify::CmdId_MIN;
const PlayerApplyEnterMpResultNotify_CmdId PlayerApplyEnterMpResultNotify::CmdId_MAX;
const int PlayerApplyEnterMpResultNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerApplyEnterMpResultNotify_Reason_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[4];
}
bool PlayerApplyEnterMpResultNotify_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::PLAYER_JUDGE;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::SCENE_CANNOT_ENTER;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::PLAYER_CANNOT_ENTER_MP;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::SYSTEM_JUDGE;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::ALLOW_ENTER_PLAYER_FULL;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::WORLD_LEVEL_LOWER_THAN_HOST;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::Reason_MIN;
const PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::Reason_MAX;
const int PlayerApplyEnterMpResultNotify::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerApplyEnterMpResultReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[5];
}
bool PlayerApplyEnterMpResultReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1805:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerApplyEnterMpResultReq_CmdId PlayerApplyEnterMpResultReq::NONE;
const PlayerApplyEnterMpResultReq_CmdId PlayerApplyEnterMpResultReq::CMD_ID;
const PlayerApplyEnterMpResultReq_CmdId PlayerApplyEnterMpResultReq::ENET_CHANNEL_ID;
const PlayerApplyEnterMpResultReq_CmdId PlayerApplyEnterMpResultReq::ENET_IS_RELIABLE;
const PlayerApplyEnterMpResultReq_CmdId PlayerApplyEnterMpResultReq::IS_ALLOW_CLIENT;
const PlayerApplyEnterMpResultReq_CmdId PlayerApplyEnterMpResultReq::CmdId_MIN;
const PlayerApplyEnterMpResultReq_CmdId PlayerApplyEnterMpResultReq::CmdId_MAX;
const int PlayerApplyEnterMpResultReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerApplyEnterMpResultRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[6];
}
bool PlayerApplyEnterMpResultRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1806:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerApplyEnterMpResultRsp_CmdId PlayerApplyEnterMpResultRsp::NONE;
const PlayerApplyEnterMpResultRsp_CmdId PlayerApplyEnterMpResultRsp::CMD_ID;
const PlayerApplyEnterMpResultRsp_CmdId PlayerApplyEnterMpResultRsp::ENET_CHANNEL_ID;
const PlayerApplyEnterMpResultRsp_CmdId PlayerApplyEnterMpResultRsp::ENET_IS_RELIABLE;
const PlayerApplyEnterMpResultRsp_CmdId PlayerApplyEnterMpResultRsp::CmdId_MIN;
const PlayerApplyEnterMpResultRsp_CmdId PlayerApplyEnterMpResultRsp::CmdId_MAX;
const int PlayerApplyEnterMpResultRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerQuitFromMpNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[7];
}
bool PlayerQuitFromMpNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1807:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerQuitFromMpNotify_CmdId PlayerQuitFromMpNotify::NONE;
const PlayerQuitFromMpNotify_CmdId PlayerQuitFromMpNotify::CMD_ID;
const PlayerQuitFromMpNotify_CmdId PlayerQuitFromMpNotify::ENET_CHANNEL_ID;
const PlayerQuitFromMpNotify_CmdId PlayerQuitFromMpNotify::ENET_IS_RELIABLE;
const PlayerQuitFromMpNotify_CmdId PlayerQuitFromMpNotify::CmdId_MIN;
const PlayerQuitFromMpNotify_CmdId PlayerQuitFromMpNotify::CmdId_MAX;
const int PlayerQuitFromMpNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerQuitFromMpNotify_QuitReason_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[8];
}
bool PlayerQuitFromMpNotify_QuitReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::INVALID;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::HOST_NO_OTHER_PLAYER;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::KICK_BY_HOST;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::BACK_TO_MY_WORLD;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::KICK_BY_HOST_LOGOUT;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::QuitReason_MIN;
const PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::QuitReason_MAX;
const int PlayerQuitFromMpNotify::QuitReason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerPreEnterMpNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[9];
}
bool PlayerPreEnterMpNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1808:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerPreEnterMpNotify_CmdId PlayerPreEnterMpNotify::NONE;
const PlayerPreEnterMpNotify_CmdId PlayerPreEnterMpNotify::CMD_ID;
const PlayerPreEnterMpNotify_CmdId PlayerPreEnterMpNotify::ENET_CHANNEL_ID;
const PlayerPreEnterMpNotify_CmdId PlayerPreEnterMpNotify::ENET_IS_RELIABLE;
const PlayerPreEnterMpNotify_CmdId PlayerPreEnterMpNotify::CmdId_MIN;
const PlayerPreEnterMpNotify_CmdId PlayerPreEnterMpNotify::CmdId_MAX;
const int PlayerPreEnterMpNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerPreEnterMpNotify_State_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[10];
}
bool PlayerPreEnterMpNotify_State_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::INVALID;
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::START;
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::TIMEOUT;
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::State_MIN;
const PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::State_MAX;
const int PlayerPreEnterMpNotify::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetPlayerMpModeAvailabilityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[11];
}
bool GetPlayerMpModeAvailabilityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1809:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerMpModeAvailabilityReq_CmdId GetPlayerMpModeAvailabilityReq::NONE;
const GetPlayerMpModeAvailabilityReq_CmdId GetPlayerMpModeAvailabilityReq::CMD_ID;
const GetPlayerMpModeAvailabilityReq_CmdId GetPlayerMpModeAvailabilityReq::ENET_CHANNEL_ID;
const GetPlayerMpModeAvailabilityReq_CmdId GetPlayerMpModeAvailabilityReq::ENET_IS_RELIABLE;
const GetPlayerMpModeAvailabilityReq_CmdId GetPlayerMpModeAvailabilityReq::IS_ALLOW_CLIENT;
const GetPlayerMpModeAvailabilityReq_CmdId GetPlayerMpModeAvailabilityReq::CmdId_MIN;
const GetPlayerMpModeAvailabilityReq_CmdId GetPlayerMpModeAvailabilityReq::CmdId_MAX;
const int GetPlayerMpModeAvailabilityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetPlayerMpModeAvailabilityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_enum_descriptors[12];
}
bool GetPlayerMpModeAvailabilityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1810:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerMpModeAvailabilityRsp_CmdId GetPlayerMpModeAvailabilityRsp::NONE;
const GetPlayerMpModeAvailabilityRsp_CmdId GetPlayerMpModeAvailabilityRsp::CMD_ID;
const GetPlayerMpModeAvailabilityRsp_CmdId GetPlayerMpModeAvailabilityRsp::ENET_CHANNEL_ID;
const GetPlayerMpModeAvailabilityRsp_CmdId GetPlayerMpModeAvailabilityRsp::ENET_IS_RELIABLE;
const GetPlayerMpModeAvailabilityRsp_CmdId GetPlayerMpModeAvailabilityRsp::CmdId_MIN;
const GetPlayerMpModeAvailabilityRsp_CmdId GetPlayerMpModeAvailabilityRsp::CmdId_MAX;
const int GetPlayerMpModeAvailabilityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpNotify::kSrcPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpNotify::PlayerApplyEnterMpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpNotify)
}
PlayerApplyEnterMpNotify::PlayerApplyEnterMpNotify(const PlayerApplyEnterMpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_src_player_info()) {
    src_player_info_ = new ::proto::OnlinePlayerInfo(*from.src_player_info_);
  } else {
    src_player_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpNotify)
}

void PlayerApplyEnterMpNotify::SharedCtor() {
  src_player_info_ = NULL;
  _cached_size_ = 0;
}

PlayerApplyEnterMpNotify::~PlayerApplyEnterMpNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpNotify)
  SharedDtor();
}

void PlayerApplyEnterMpNotify::SharedDtor() {
  if (this != internal_default_instance()) delete src_player_info_;
}

void PlayerApplyEnterMpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpNotify& PlayerApplyEnterMpNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpNotify* PlayerApplyEnterMpNotify::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpNotify* n = new PlayerApplyEnterMpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && src_player_info_ != NULL) {
    delete src_player_info_;
  }
  src_player_info_ = NULL;
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.OnlinePlayerInfo src_player_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_src_player_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpNotify)
  return false;
#undef DO_
}

void PlayerApplyEnterMpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OnlinePlayerInfo src_player_info = 1;
  if (this->has_src_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->src_player_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpNotify)
}

::google::protobuf::uint8* PlayerApplyEnterMpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OnlinePlayerInfo src_player_info = 1;
  if (this->has_src_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->src_player_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpNotify)
  return target;
}

size_t PlayerApplyEnterMpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.OnlinePlayerInfo src_player_info = 1;
  if (this->has_src_player_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->src_player_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpNotify)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpNotify::MergeFrom(const PlayerApplyEnterMpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_src_player_info()) {
    mutable_src_player_info()->::proto::OnlinePlayerInfo::MergeFrom(from.src_player_info());
  }
}

void PlayerApplyEnterMpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpNotify::CopyFrom(const PlayerApplyEnterMpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpNotify::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpNotify::Swap(PlayerApplyEnterMpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpNotify::InternalSwap(PlayerApplyEnterMpNotify* other) {
  using std::swap;
  swap(src_player_info_, other->src_player_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpNotify

// .proto.OnlinePlayerInfo src_player_info = 1;
bool PlayerApplyEnterMpNotify::has_src_player_info() const {
  return this != internal_default_instance() && src_player_info_ != NULL;
}
void PlayerApplyEnterMpNotify::clear_src_player_info() {
  if (GetArenaNoVirtual() == NULL && src_player_info_ != NULL) delete src_player_info_;
  src_player_info_ = NULL;
}
const ::proto::OnlinePlayerInfo& PlayerApplyEnterMpNotify::src_player_info() const {
  const ::proto::OnlinePlayerInfo* p = src_player_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpNotify.src_player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
::proto::OnlinePlayerInfo* PlayerApplyEnterMpNotify::mutable_src_player_info() {
  
  if (src_player_info_ == NULL) {
    src_player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerApplyEnterMpNotify.src_player_info)
  return src_player_info_;
}
::proto::OnlinePlayerInfo* PlayerApplyEnterMpNotify::release_src_player_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerApplyEnterMpNotify.src_player_info)
  
  ::proto::OnlinePlayerInfo* temp = src_player_info_;
  src_player_info_ = NULL;
  return temp;
}
void PlayerApplyEnterMpNotify::set_allocated_src_player_info(::proto::OnlinePlayerInfo* src_player_info) {
  delete src_player_info_;
  src_player_info_ = src_player_info;
  if (src_player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerApplyEnterMpNotify.src_player_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpReq::PlayerApplyEnterMpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpReq)
}
PlayerApplyEnterMpReq::PlayerApplyEnterMpReq(const PlayerApplyEnterMpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpReq)
}

void PlayerApplyEnterMpReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

PlayerApplyEnterMpReq::~PlayerApplyEnterMpReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpReq)
  SharedDtor();
}

void PlayerApplyEnterMpReq::SharedDtor() {
}

void PlayerApplyEnterMpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpReq& PlayerApplyEnterMpReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpReq* PlayerApplyEnterMpReq::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpReq* n = new PlayerApplyEnterMpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpReq)
  return false;
#undef DO_
}

void PlayerApplyEnterMpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpReq)
}

::google::protobuf::uint8* PlayerApplyEnterMpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpReq)
  return target;
}

size_t PlayerApplyEnterMpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpReq)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpReq::MergeFrom(const PlayerApplyEnterMpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void PlayerApplyEnterMpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpReq::CopyFrom(const PlayerApplyEnterMpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpReq::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpReq::Swap(PlayerApplyEnterMpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpReq::InternalSwap(PlayerApplyEnterMpReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpReq

// uint32 target_uid = 1;
void PlayerApplyEnterMpReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpReq.target_uid)
  return target_uid_;
}
void PlayerApplyEnterMpReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpRsp::kRetcodeFieldNumber;
const int PlayerApplyEnterMpRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpRsp::PlayerApplyEnterMpRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpRsp)
}
PlayerApplyEnterMpRsp::PlayerApplyEnterMpRsp(const PlayerApplyEnterMpRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpRsp)
}

void PlayerApplyEnterMpRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpRsp::~PlayerApplyEnterMpRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpRsp)
  SharedDtor();
}

void PlayerApplyEnterMpRsp::SharedDtor() {
}

void PlayerApplyEnterMpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpRsp& PlayerApplyEnterMpRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpRsp* PlayerApplyEnterMpRsp::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpRsp* n = new PlayerApplyEnterMpRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpRsp)
  return false;
#undef DO_
}

void PlayerApplyEnterMpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpRsp)
}

::google::protobuf::uint8* PlayerApplyEnterMpRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpRsp)
  return target;
}

size_t PlayerApplyEnterMpRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpRsp)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpRsp::MergeFrom(const PlayerApplyEnterMpRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void PlayerApplyEnterMpRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpRsp::CopyFrom(const PlayerApplyEnterMpRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpRsp::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpRsp::Swap(PlayerApplyEnterMpRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpRsp::InternalSwap(PlayerApplyEnterMpRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpRsp

// int32 retcode = 1;
void PlayerApplyEnterMpRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerApplyEnterMpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpRsp.retcode)
  return retcode_;
}
void PlayerApplyEnterMpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpRsp.retcode)
}

// uint32 target_uid = 2;
void PlayerApplyEnterMpRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpRsp.target_uid)
  return target_uid_;
}
void PlayerApplyEnterMpRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpResultNotify::kTargetUidFieldNumber;
const int PlayerApplyEnterMpResultNotify::kIsAgreedFieldNumber;
const int PlayerApplyEnterMpResultNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpResultNotify::PlayerApplyEnterMpResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpResultNotify)
}
PlayerApplyEnterMpResultNotify::PlayerApplyEnterMpResultNotify(const PlayerApplyEnterMpResultNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpResultNotify)
}

void PlayerApplyEnterMpResultNotify::SharedCtor() {
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpResultNotify::~PlayerApplyEnterMpResultNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpResultNotify)
  SharedDtor();
}

void PlayerApplyEnterMpResultNotify::SharedDtor() {
}

void PlayerApplyEnterMpResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpResultNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpResultNotify& PlayerApplyEnterMpResultNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpResultNotify* PlayerApplyEnterMpResultNotify::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpResultNotify* n = new PlayerApplyEnterMpResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agreed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agreed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerApplyEnterMpResultNotify.Reason reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::PlayerApplyEnterMpResultNotify_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpResultNotify)
  return false;
#undef DO_
}

void PlayerApplyEnterMpResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_agreed(), output);
  }

  // .proto.PlayerApplyEnterMpResultNotify.Reason reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpResultNotify)
}

::google::protobuf::uint8* PlayerApplyEnterMpResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_agreed(), target);
  }

  // .proto.PlayerApplyEnterMpResultNotify.Reason reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpResultNotify)
  return target;
}

size_t PlayerApplyEnterMpResultNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpResultNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    total_size += 1 + 1;
  }

  // .proto.PlayerApplyEnterMpResultNotify.Reason reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpResultNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpResultNotify)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpResultNotify::MergeFrom(const PlayerApplyEnterMpResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.is_agreed() != 0) {
    set_is_agreed(from.is_agreed());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PlayerApplyEnterMpResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpResultNotify::CopyFrom(const PlayerApplyEnterMpResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpResultNotify::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpResultNotify::Swap(PlayerApplyEnterMpResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpResultNotify::InternalSwap(PlayerApplyEnterMpResultNotify* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  swap(is_agreed_, other->is_agreed_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpResultNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpResultNotify

// uint32 target_uid = 1;
void PlayerApplyEnterMpResultNotify::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpResultNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultNotify.target_uid)
  return target_uid_;
}
void PlayerApplyEnterMpResultNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultNotify.target_uid)
}

// bool is_agreed = 2;
void PlayerApplyEnterMpResultNotify::clear_is_agreed() {
  is_agreed_ = false;
}
bool PlayerApplyEnterMpResultNotify::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultNotify.is_agreed)
  return is_agreed_;
}
void PlayerApplyEnterMpResultNotify::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultNotify.is_agreed)
}

// .proto.PlayerApplyEnterMpResultNotify.Reason reason = 3;
void PlayerApplyEnterMpResultNotify::clear_reason() {
  reason_ = 0;
}
::proto::PlayerApplyEnterMpResultNotify_Reason PlayerApplyEnterMpResultNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultNotify.reason)
  return static_cast< ::proto::PlayerApplyEnterMpResultNotify_Reason >(reason_);
}
void PlayerApplyEnterMpResultNotify::set_reason(::proto::PlayerApplyEnterMpResultNotify_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpResultReq::kApplyUidFieldNumber;
const int PlayerApplyEnterMpResultReq::kIsAgreedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpResultReq::PlayerApplyEnterMpResultReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpResultReq)
}
PlayerApplyEnterMpResultReq::PlayerApplyEnterMpResultReq(const PlayerApplyEnterMpResultReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&apply_uid_, &from.apply_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_agreed_) -
    reinterpret_cast<char*>(&apply_uid_)) + sizeof(is_agreed_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpResultReq)
}

void PlayerApplyEnterMpResultReq::SharedCtor() {
  ::memset(&apply_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agreed_) -
      reinterpret_cast<char*>(&apply_uid_)) + sizeof(is_agreed_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpResultReq::~PlayerApplyEnterMpResultReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpResultReq)
  SharedDtor();
}

void PlayerApplyEnterMpResultReq::SharedDtor() {
}

void PlayerApplyEnterMpResultReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpResultReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpResultReq& PlayerApplyEnterMpResultReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpResultReq* PlayerApplyEnterMpResultReq::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpResultReq* n = new PlayerApplyEnterMpResultReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpResultReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpResultReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apply_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agreed_) -
      reinterpret_cast<char*>(&apply_uid_)) + sizeof(is_agreed_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpResultReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpResultReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 apply_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apply_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agreed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agreed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpResultReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpResultReq)
  return false;
#undef DO_
}

void PlayerApplyEnterMpResultReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpResultReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 apply_uid = 1;
  if (this->apply_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->apply_uid(), output);
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_agreed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpResultReq)
}

::google::protobuf::uint8* PlayerApplyEnterMpResultReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpResultReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 apply_uid = 1;
  if (this->apply_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->apply_uid(), target);
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_agreed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpResultReq)
  return target;
}

size_t PlayerApplyEnterMpResultReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpResultReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 apply_uid = 1;
  if (this->apply_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apply_uid());
  }

  // bool is_agreed = 2;
  if (this->is_agreed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpResultReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpResultReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpResultReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpResultReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpResultReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpResultReq)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpResultReq::MergeFrom(const PlayerApplyEnterMpResultReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpResultReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.apply_uid() != 0) {
    set_apply_uid(from.apply_uid());
  }
  if (from.is_agreed() != 0) {
    set_is_agreed(from.is_agreed());
  }
}

void PlayerApplyEnterMpResultReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpResultReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpResultReq::CopyFrom(const PlayerApplyEnterMpResultReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpResultReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpResultReq::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpResultReq::Swap(PlayerApplyEnterMpResultReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpResultReq::InternalSwap(PlayerApplyEnterMpResultReq* other) {
  using std::swap;
  swap(apply_uid_, other->apply_uid_);
  swap(is_agreed_, other->is_agreed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpResultReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpResultReq

// uint32 apply_uid = 1;
void PlayerApplyEnterMpResultReq::clear_apply_uid() {
  apply_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpResultReq::apply_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultReq.apply_uid)
  return apply_uid_;
}
void PlayerApplyEnterMpResultReq::set_apply_uid(::google::protobuf::uint32 value) {
  
  apply_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultReq.apply_uid)
}

// bool is_agreed = 2;
void PlayerApplyEnterMpResultReq::clear_is_agreed() {
  is_agreed_ = false;
}
bool PlayerApplyEnterMpResultReq::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultReq.is_agreed)
  return is_agreed_;
}
void PlayerApplyEnterMpResultReq::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultReq.is_agreed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerApplyEnterMpResultRsp::kRetcodeFieldNumber;
const int PlayerApplyEnterMpResultRsp::kApplyUidFieldNumber;
const int PlayerApplyEnterMpResultRsp::kIsAgreedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerApplyEnterMpResultRsp::PlayerApplyEnterMpResultRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerApplyEnterMpResultRsp)
}
PlayerApplyEnterMpResultRsp::PlayerApplyEnterMpResultRsp(const PlayerApplyEnterMpResultRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_agreed_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(is_agreed_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerApplyEnterMpResultRsp)
}

void PlayerApplyEnterMpResultRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agreed_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_agreed_));
  _cached_size_ = 0;
}

PlayerApplyEnterMpResultRsp::~PlayerApplyEnterMpResultRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerApplyEnterMpResultRsp)
  SharedDtor();
}

void PlayerApplyEnterMpResultRsp::SharedDtor() {
}

void PlayerApplyEnterMpResultRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerApplyEnterMpResultRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerApplyEnterMpResultRsp& PlayerApplyEnterMpResultRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerApplyEnterMpResultRsp* PlayerApplyEnterMpResultRsp::New(::google::protobuf::Arena* arena) const {
  PlayerApplyEnterMpResultRsp* n = new PlayerApplyEnterMpResultRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerApplyEnterMpResultRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerApplyEnterMpResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_agreed_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_agreed_));
  _internal_metadata_.Clear();
}

bool PlayerApplyEnterMpResultRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerApplyEnterMpResultRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 apply_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apply_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agreed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agreed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerApplyEnterMpResultRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerApplyEnterMpResultRsp)
  return false;
#undef DO_
}

void PlayerApplyEnterMpResultRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerApplyEnterMpResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 apply_uid = 2;
  if (this->apply_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->apply_uid(), output);
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_agreed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerApplyEnterMpResultRsp)
}

::google::protobuf::uint8* PlayerApplyEnterMpResultRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerApplyEnterMpResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 apply_uid = 2;
  if (this->apply_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->apply_uid(), target);
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_agreed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerApplyEnterMpResultRsp)
  return target;
}

size_t PlayerApplyEnterMpResultRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerApplyEnterMpResultRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 apply_uid = 2;
  if (this->apply_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apply_uid());
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerApplyEnterMpResultRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerApplyEnterMpResultRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerApplyEnterMpResultRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerApplyEnterMpResultRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerApplyEnterMpResultRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerApplyEnterMpResultRsp)
    MergeFrom(*source);
  }
}

void PlayerApplyEnterMpResultRsp::MergeFrom(const PlayerApplyEnterMpResultRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerApplyEnterMpResultRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.apply_uid() != 0) {
    set_apply_uid(from.apply_uid());
  }
  if (from.is_agreed() != 0) {
    set_is_agreed(from.is_agreed());
  }
}

void PlayerApplyEnterMpResultRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerApplyEnterMpResultRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerApplyEnterMpResultRsp::CopyFrom(const PlayerApplyEnterMpResultRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerApplyEnterMpResultRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerApplyEnterMpResultRsp::IsInitialized() const {
  return true;
}

void PlayerApplyEnterMpResultRsp::Swap(PlayerApplyEnterMpResultRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerApplyEnterMpResultRsp::InternalSwap(PlayerApplyEnterMpResultRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(apply_uid_, other->apply_uid_);
  swap(is_agreed_, other->is_agreed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerApplyEnterMpResultRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerApplyEnterMpResultRsp

// int32 retcode = 1;
void PlayerApplyEnterMpResultRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerApplyEnterMpResultRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultRsp.retcode)
  return retcode_;
}
void PlayerApplyEnterMpResultRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultRsp.retcode)
}

// uint32 apply_uid = 2;
void PlayerApplyEnterMpResultRsp::clear_apply_uid() {
  apply_uid_ = 0u;
}
::google::protobuf::uint32 PlayerApplyEnterMpResultRsp::apply_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultRsp.apply_uid)
  return apply_uid_;
}
void PlayerApplyEnterMpResultRsp::set_apply_uid(::google::protobuf::uint32 value) {
  
  apply_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultRsp.apply_uid)
}

// bool is_agreed = 3;
void PlayerApplyEnterMpResultRsp::clear_is_agreed() {
  is_agreed_ = false;
}
bool PlayerApplyEnterMpResultRsp::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.PlayerApplyEnterMpResultRsp.is_agreed)
  return is_agreed_;
}
void PlayerApplyEnterMpResultRsp::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerApplyEnterMpResultRsp.is_agreed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerQuitFromMpNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerQuitFromMpNotify::PlayerQuitFromMpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerQuitFromMpNotify)
}
PlayerQuitFromMpNotify::PlayerQuitFromMpNotify(const PlayerQuitFromMpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerQuitFromMpNotify)
}

void PlayerQuitFromMpNotify::SharedCtor() {
  reason_ = 0;
  _cached_size_ = 0;
}

PlayerQuitFromMpNotify::~PlayerQuitFromMpNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerQuitFromMpNotify)
  SharedDtor();
}

void PlayerQuitFromMpNotify::SharedDtor() {
}

void PlayerQuitFromMpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerQuitFromMpNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerQuitFromMpNotify& PlayerQuitFromMpNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerQuitFromMpNotify* PlayerQuitFromMpNotify::New(::google::protobuf::Arena* arena) const {
  PlayerQuitFromMpNotify* n = new PlayerQuitFromMpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerQuitFromMpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerQuitFromMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerQuitFromMpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerQuitFromMpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PlayerQuitFromMpNotify.QuitReason reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::PlayerQuitFromMpNotify_QuitReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerQuitFromMpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerQuitFromMpNotify)
  return false;
#undef DO_
}

void PlayerQuitFromMpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerQuitFromMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerQuitFromMpNotify.QuitReason reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerQuitFromMpNotify)
}

::google::protobuf::uint8* PlayerQuitFromMpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerQuitFromMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerQuitFromMpNotify.QuitReason reason = 1;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerQuitFromMpNotify)
  return target;
}

size_t PlayerQuitFromMpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerQuitFromMpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlayerQuitFromMpNotify.QuitReason reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerQuitFromMpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerQuitFromMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerQuitFromMpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerQuitFromMpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerQuitFromMpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerQuitFromMpNotify)
    MergeFrom(*source);
  }
}

void PlayerQuitFromMpNotify::MergeFrom(const PlayerQuitFromMpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerQuitFromMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PlayerQuitFromMpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerQuitFromMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerQuitFromMpNotify::CopyFrom(const PlayerQuitFromMpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerQuitFromMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerQuitFromMpNotify::IsInitialized() const {
  return true;
}

void PlayerQuitFromMpNotify::Swap(PlayerQuitFromMpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerQuitFromMpNotify::InternalSwap(PlayerQuitFromMpNotify* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerQuitFromMpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerQuitFromMpNotify

// .proto.PlayerQuitFromMpNotify.QuitReason reason = 1;
void PlayerQuitFromMpNotify::clear_reason() {
  reason_ = 0;
}
::proto::PlayerQuitFromMpNotify_QuitReason PlayerQuitFromMpNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerQuitFromMpNotify.reason)
  return static_cast< ::proto::PlayerQuitFromMpNotify_QuitReason >(reason_);
}
void PlayerQuitFromMpNotify::set_reason(::proto::PlayerQuitFromMpNotify_QuitReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerQuitFromMpNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerPreEnterMpNotify::kUidFieldNumber;
const int PlayerPreEnterMpNotify::kStateFieldNumber;
const int PlayerPreEnterMpNotify::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerPreEnterMpNotify::PlayerPreEnterMpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerPreEnterMpNotify)
}
PlayerPreEnterMpNotify::PlayerPreEnterMpNotify(const PlayerPreEnterMpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerPreEnterMpNotify)
}

void PlayerPreEnterMpNotify::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(state_));
  _cached_size_ = 0;
}

PlayerPreEnterMpNotify::~PlayerPreEnterMpNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerPreEnterMpNotify)
  SharedDtor();
}

void PlayerPreEnterMpNotify::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerPreEnterMpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerPreEnterMpNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerPreEnterMpNotify& PlayerPreEnterMpNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerPreEnterMpNotify* PlayerPreEnterMpNotify::New(::google::protobuf::Arena* arena) const {
  PlayerPreEnterMpNotify* n = new PlayerPreEnterMpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerPreEnterMpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerPreEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool PlayerPreEnterMpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerPreEnterMpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerPreEnterMpNotify.State state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::proto::PlayerPreEnterMpNotify_State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerPreEnterMpNotify.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerPreEnterMpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerPreEnterMpNotify)
  return false;
#undef DO_
}

void PlayerPreEnterMpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerPreEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // .proto.PlayerPreEnterMpNotify.State state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->state(), output);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerPreEnterMpNotify.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerPreEnterMpNotify)
}

::google::protobuf::uint8* PlayerPreEnterMpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerPreEnterMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // .proto.PlayerPreEnterMpNotify.State state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->state(), target);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerPreEnterMpNotify.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerPreEnterMpNotify)
  return target;
}

size_t PlayerPreEnterMpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerPreEnterMpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 3;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // .proto.PlayerPreEnterMpNotify.State state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerPreEnterMpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerPreEnterMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerPreEnterMpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerPreEnterMpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerPreEnterMpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerPreEnterMpNotify)
    MergeFrom(*source);
  }
}

void PlayerPreEnterMpNotify::MergeFrom(const PlayerPreEnterMpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerPreEnterMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void PlayerPreEnterMpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerPreEnterMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerPreEnterMpNotify::CopyFrom(const PlayerPreEnterMpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerPreEnterMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerPreEnterMpNotify::IsInitialized() const {
  return true;
}

void PlayerPreEnterMpNotify::Swap(PlayerPreEnterMpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerPreEnterMpNotify::InternalSwap(PlayerPreEnterMpNotify* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(uid_, other->uid_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerPreEnterMpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerPreEnterMpNotify

// uint32 uid = 1;
void PlayerPreEnterMpNotify::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 PlayerPreEnterMpNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPreEnterMpNotify.uid)
  return uid_;
}
void PlayerPreEnterMpNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPreEnterMpNotify.uid)
}

// .proto.PlayerPreEnterMpNotify.State state = 2;
void PlayerPreEnterMpNotify::clear_state() {
  state_ = 0;
}
::proto::PlayerPreEnterMpNotify_State PlayerPreEnterMpNotify::state() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPreEnterMpNotify.state)
  return static_cast< ::proto::PlayerPreEnterMpNotify_State >(state_);
}
void PlayerPreEnterMpNotify::set_state(::proto::PlayerPreEnterMpNotify_State value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPreEnterMpNotify.state)
}

// string nickname = 3;
void PlayerPreEnterMpNotify::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerPreEnterMpNotify::nickname() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPreEnterMpNotify.nickname)
  return nickname_.GetNoArena();
}
void PlayerPreEnterMpNotify::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerPreEnterMpNotify.nickname)
}
#if LANG_CXX11
void PlayerPreEnterMpNotify::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerPreEnterMpNotify.nickname)
}
#endif
void PlayerPreEnterMpNotify::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerPreEnterMpNotify.nickname)
}
void PlayerPreEnterMpNotify::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerPreEnterMpNotify.nickname)
}
::std::string* PlayerPreEnterMpNotify::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerPreEnterMpNotify.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerPreEnterMpNotify::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.PlayerPreEnterMpNotify.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerPreEnterMpNotify::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerPreEnterMpNotify.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerMpModeAvailabilityReq::GetPlayerMpModeAvailabilityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerMpModeAvailabilityReq)
}
GetPlayerMpModeAvailabilityReq::GetPlayerMpModeAvailabilityReq(const GetPlayerMpModeAvailabilityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerMpModeAvailabilityReq)
}

void GetPlayerMpModeAvailabilityReq::SharedCtor() {
  _cached_size_ = 0;
}

GetPlayerMpModeAvailabilityReq::~GetPlayerMpModeAvailabilityReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerMpModeAvailabilityReq)
  SharedDtor();
}

void GetPlayerMpModeAvailabilityReq::SharedDtor() {
}

void GetPlayerMpModeAvailabilityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerMpModeAvailabilityReq::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerMpModeAvailabilityReq& GetPlayerMpModeAvailabilityReq::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerMpModeAvailabilityReq* GetPlayerMpModeAvailabilityReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerMpModeAvailabilityReq* n = new GetPlayerMpModeAvailabilityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerMpModeAvailabilityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerMpModeAvailabilityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetPlayerMpModeAvailabilityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerMpModeAvailabilityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerMpModeAvailabilityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerMpModeAvailabilityReq)
  return false;
#undef DO_
}

void GetPlayerMpModeAvailabilityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerMpModeAvailabilityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerMpModeAvailabilityReq)
}

::google::protobuf::uint8* GetPlayerMpModeAvailabilityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerMpModeAvailabilityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerMpModeAvailabilityReq)
  return target;
}

size_t GetPlayerMpModeAvailabilityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerMpModeAvailabilityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerMpModeAvailabilityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerMpModeAvailabilityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerMpModeAvailabilityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerMpModeAvailabilityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerMpModeAvailabilityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerMpModeAvailabilityReq)
    MergeFrom(*source);
  }
}

void GetPlayerMpModeAvailabilityReq::MergeFrom(const GetPlayerMpModeAvailabilityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerMpModeAvailabilityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPlayerMpModeAvailabilityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerMpModeAvailabilityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerMpModeAvailabilityReq::CopyFrom(const GetPlayerMpModeAvailabilityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerMpModeAvailabilityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerMpModeAvailabilityReq::IsInitialized() const {
  return true;
}

void GetPlayerMpModeAvailabilityReq::Swap(GetPlayerMpModeAvailabilityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerMpModeAvailabilityReq::InternalSwap(GetPlayerMpModeAvailabilityReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerMpModeAvailabilityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerMpModeAvailabilityReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerMpModeAvailabilityRsp::kRetcodeFieldNumber;
const int GetPlayerMpModeAvailabilityRsp::kMpRetFieldNumber;
const int GetPlayerMpModeAvailabilityRsp::kParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerMpModeAvailabilityRsp::GetPlayerMpModeAvailabilityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerMpModeAvailabilityRsp)
}
GetPlayerMpModeAvailabilityRsp::GetPlayerMpModeAvailabilityRsp(const GetPlayerMpModeAvailabilityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      param_list_(from.param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&mp_ret_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(mp_ret_));
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerMpModeAvailabilityRsp)
}

void GetPlayerMpModeAvailabilityRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_ret_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mp_ret_));
  _cached_size_ = 0;
}

GetPlayerMpModeAvailabilityRsp::~GetPlayerMpModeAvailabilityRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerMpModeAvailabilityRsp)
  SharedDtor();
}

void GetPlayerMpModeAvailabilityRsp::SharedDtor() {
}

void GetPlayerMpModeAvailabilityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerMpModeAvailabilityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerMpModeAvailabilityRsp& GetPlayerMpModeAvailabilityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmp_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerMpModeAvailabilityRsp* GetPlayerMpModeAvailabilityRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerMpModeAvailabilityRsp* n = new GetPlayerMpModeAvailabilityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerMpModeAvailabilityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerMpModeAvailabilityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_ret_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mp_ret_));
  _internal_metadata_.Clear();
}

bool GetPlayerMpModeAvailabilityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerMpModeAvailabilityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 mp_ret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mp_ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 param_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerMpModeAvailabilityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerMpModeAvailabilityRsp)
  return false;
#undef DO_
}

void GetPlayerMpModeAvailabilityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerMpModeAvailabilityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // int32 mp_ret = 2;
  if (this->mp_ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->mp_ret(), output);
  }

  // repeated uint32 param_list = 3;
  if (this->param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->param_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerMpModeAvailabilityRsp)
}

::google::protobuf::uint8* GetPlayerMpModeAvailabilityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerMpModeAvailabilityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // int32 mp_ret = 2;
  if (this->mp_ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->mp_ret(), target);
  }

  // repeated uint32 param_list = 3;
  if (this->param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->param_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerMpModeAvailabilityRsp)
  return target;
}

size_t GetPlayerMpModeAvailabilityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerMpModeAvailabilityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 param_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // int32 mp_ret = 2;
  if (this->mp_ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->mp_ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerMpModeAvailabilityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerMpModeAvailabilityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerMpModeAvailabilityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerMpModeAvailabilityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerMpModeAvailabilityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerMpModeAvailabilityRsp)
    MergeFrom(*source);
  }
}

void GetPlayerMpModeAvailabilityRsp::MergeFrom(const GetPlayerMpModeAvailabilityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerMpModeAvailabilityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_list_.MergeFrom(from.param_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.mp_ret() != 0) {
    set_mp_ret(from.mp_ret());
  }
}

void GetPlayerMpModeAvailabilityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerMpModeAvailabilityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerMpModeAvailabilityRsp::CopyFrom(const GetPlayerMpModeAvailabilityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerMpModeAvailabilityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerMpModeAvailabilityRsp::IsInitialized() const {
  return true;
}

void GetPlayerMpModeAvailabilityRsp::Swap(GetPlayerMpModeAvailabilityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerMpModeAvailabilityRsp::InternalSwap(GetPlayerMpModeAvailabilityRsp* other) {
  using std::swap;
  param_list_.InternalSwap(&other->param_list_);
  swap(retcode_, other->retcode_);
  swap(mp_ret_, other->mp_ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerMpModeAvailabilityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmp_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerMpModeAvailabilityRsp

// int32 retcode = 1;
void GetPlayerMpModeAvailabilityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerMpModeAvailabilityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerMpModeAvailabilityRsp.retcode)
  return retcode_;
}
void GetPlayerMpModeAvailabilityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerMpModeAvailabilityRsp.retcode)
}

// int32 mp_ret = 2;
void GetPlayerMpModeAvailabilityRsp::clear_mp_ret() {
  mp_ret_ = 0;
}
::google::protobuf::int32 GetPlayerMpModeAvailabilityRsp::mp_ret() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerMpModeAvailabilityRsp.mp_ret)
  return mp_ret_;
}
void GetPlayerMpModeAvailabilityRsp::set_mp_ret(::google::protobuf::int32 value) {
  
  mp_ret_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerMpModeAvailabilityRsp.mp_ret)
}

// repeated uint32 param_list = 3;
int GetPlayerMpModeAvailabilityRsp::param_list_size() const {
  return param_list_.size();
}
void GetPlayerMpModeAvailabilityRsp::clear_param_list() {
  param_list_.Clear();
}
::google::protobuf::uint32 GetPlayerMpModeAvailabilityRsp::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerMpModeAvailabilityRsp.param_list)
  return param_list_.Get(index);
}
void GetPlayerMpModeAvailabilityRsp::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerMpModeAvailabilityRsp.param_list)
}
void GetPlayerMpModeAvailabilityRsp::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetPlayerMpModeAvailabilityRsp.param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetPlayerMpModeAvailabilityRsp::param_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerMpModeAvailabilityRsp.param_list)
  return param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetPlayerMpModeAvailabilityRsp::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerMpModeAvailabilityRsp.param_list)
  return &param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
