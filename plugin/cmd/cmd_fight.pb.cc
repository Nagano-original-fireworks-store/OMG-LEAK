// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_fight.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_fight.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class HitCollisionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HitCollision>
     _instance;
} _HitCollision_default_instance_;
class AttackHitEffectResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AttackHitEffectResult>
     _instance;
} _AttackHitEffectResult_default_instance_;
class AbilityIdentifierDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityIdentifier>
     _instance;
} _AbilityIdentifier_default_instance_;
class AttackResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AttackResult>
     _instance;
} _AttackResult_default_instance_;
class EvtBeingHitInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtBeingHitInfo>
     _instance;
} _EvtBeingHitInfo_default_instance_;
class EvtBeingHitNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtBeingHitNotify>
     _instance;
} _EvtBeingHitNotify_default_instance_;
class EvtAnimatorParameterInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAnimatorParameterInfo>
     _instance;
} _EvtAnimatorParameterInfo_default_instance_;
class EvtAnimatorParameterNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAnimatorParameterNotify>
     _instance;
} _EvtAnimatorParameterNotify_default_instance_;
class AbilityArgumentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AbilityArgument>
     _instance;
  ::google::protobuf::uint32 int_arg_;
  float float_arg_;
  ::google::protobuf::internal::ArenaStringPtr str_arg_;
} _AbilityArgument_default_instance_;
class HostPlayerNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HostPlayerNotify>
     _instance;
} _HostPlayerNotify_default_instance_;
class EvtDoSkillSuccNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtDoSkillSuccNotify>
     _instance;
} _EvtDoSkillSuccNotify_default_instance_;
class EvtCreateGadgetNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtCreateGadgetNotify>
     _instance;
} _EvtCreateGadgetNotify_default_instance_;
class EvtDestroyGadgetNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtDestroyGadgetNotify>
     _instance;
} _EvtDestroyGadgetNotify_default_instance_;
class EvtFaceToEntityNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtFaceToEntityNotify>
     _instance;
} _EvtFaceToEntityNotify_default_instance_;
class EvtFaceToDirInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtFaceToDirInfo>
     _instance;
} _EvtFaceToDirInfo_default_instance_;
class EvtFaceToDirNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtFaceToDirNotify>
     _instance;
} _EvtFaceToDirNotify_default_instance_;
class EvtCostStaminaNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtCostStaminaNotify>
     _instance;
} _EvtCostStaminaNotify_default_instance_;
class EvtSetAttackTargetInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtSetAttackTargetInfo>
     _instance;
} _EvtSetAttackTargetInfo_default_instance_;
class EvtSetAttackTargetNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtSetAttackTargetNotify>
     _instance;
} _EvtSetAttackTargetNotify_default_instance_;
class EvtAnimatorStateChangedInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAnimatorStateChangedInfo>
     _instance;
} _EvtAnimatorStateChangedInfo_default_instance_;
class EvtAnimatorStateChangedNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAnimatorStateChangedNotify>
     _instance;
} _EvtAnimatorStateChangedNotify_default_instance_;
class EvtRushMoveInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtRushMoveInfo>
     _instance;
} _EvtRushMoveInfo_default_instance_;
class EvtRushMoveNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtRushMoveNotify>
     _instance;
} _EvtRushMoveNotify_default_instance_;
class EvtBulletHitNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtBulletHitNotify>
     _instance;
} _EvtBulletHitNotify_default_instance_;
class EvtBulletDeactiveNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtBulletDeactiveNotify>
     _instance;
} _EvtBulletDeactiveNotify_default_instance_;
class EvtEntityStartDieEndNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtEntityStartDieEndNotify>
     _instance;
} _EvtEntityStartDieEndNotify_default_instance_;
class EvtBulletMoveNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtBulletMoveNotify>
     _instance;
} _EvtBulletMoveNotify_default_instance_;
class EvtAvatarEnterFocusNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAvatarEnterFocusNotify>
     _instance;
} _EvtAvatarEnterFocusNotify_default_instance_;
class EvtAvatarExitFocusNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAvatarExitFocusNotify>
     _instance;
} _EvtAvatarExitFocusNotify_default_instance_;
class EvtAvatarUpdateFocusNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAvatarUpdateFocusNotify>
     _instance;
} _EvtAvatarUpdateFocusNotify_default_instance_;
class EntityAuthorityChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityAuthorityChangeNotify>
     _instance;
} _EntityAuthorityChangeNotify_default_instance_;
class AvatarBuffAddNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarBuffAddNotify>
     _instance;
} _AvatarBuffAddNotify_default_instance_;
class AvatarBuffDelNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarBuffDelNotify>
     _instance;
} _AvatarBuffDelNotify_default_instance_;
class MonsterAlertChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MonsterAlertChangeNotify>
     _instance;
} _MonsterAlertChangeNotify_default_instance_;
class MonsterForceAlertNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MonsterForceAlertNotify>
     _instance;
} _MonsterForceAlertNotify_default_instance_;
class AvatarEnterElementViewNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarEnterElementViewNotify>
     _instance;
} _AvatarEnterElementViewNotify_default_instance_;
class TriggerCreateGadgetToEquipPartNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TriggerCreateGadgetToEquipPartNotify>
     _instance;
} _TriggerCreateGadgetToEquipPartNotify_default_instance_;
class EvtEntityRenderersChangedNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtEntityRenderersChangedNotify>
     _instance;
} _EvtEntityRenderersChangedNotify_default_instance_;
class AnimatorForceSetAirMoveNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AnimatorForceSetAirMoveNotify>
     _instance;
} _AnimatorForceSetAirMoveNotify_default_instance_;
class AiSkillCdInfo_SkillCdMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AiSkillCdInfo::AiSkillCdInfo_SkillCdMapEntry>
     _instance;
} _AiSkillCdInfo_SkillCdMapEntry_default_instance_;
class AiSkillCdInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AiSkillCdInfo>
     _instance;
} _AiSkillCdInfo_default_instance_;
class EvtAiSyncSkillCdNotify_AiCdMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify_AiCdMapEntry>
     _instance;
} _EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_;
class EvtAiSyncSkillCdNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAiSyncSkillCdNotify>
     _instance;
} _EvtAiSyncSkillCdNotify_default_instance_;
class EvtBeingHitsCombineNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtBeingHitsCombineNotify>
     _instance;
} _EvtBeingHitsCombineNotify_default_instance_;
class EvtAvatarSitDownNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAvatarSitDownNotify>
     _instance;
} _EvtAvatarSitDownNotify_default_instance_;
class EvtAvatarStandUpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAvatarStandUpNotify>
     _instance;
} _EvtAvatarStandUpNotify_default_instance_;
class CreateMassiveEntityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateMassiveEntityReq>
     _instance;
} _CreateMassiveEntityReq_default_instance_;
class CreateMassiveEntityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateMassiveEntityRsp>
     _instance;
} _CreateMassiveEntityRsp_default_instance_;
class CreateMassiveEntityNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateMassiveEntityNotify>
     _instance;
} _CreateMassiveEntityNotify_default_instance_;
class DestroyMassiveEntityNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DestroyMassiveEntityNotify>
     _instance;
} _DestroyMassiveEntityNotify_default_instance_;
class MassiveEntityStateChangedNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MassiveEntityStateChangedNotify>
     _instance;
} _MassiveEntityStateChangedNotify_default_instance_;
class TeamEntityInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TeamEntityInfo>
     _instance;
} _TeamEntityInfo_default_instance_;
class SyncTeamEntityNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncTeamEntityNotify>
     _instance;
} _SyncTeamEntityNotify_default_instance_;
class DelTeamEntityNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelTeamEntityNotify>
     _instance;
} _DelTeamEntityNotify_default_instance_;
class CombatInvokeEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CombatInvokeEntry>
     _instance;
} _CombatInvokeEntry_default_instance_;
class CombatInvocationsNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CombatInvocationsNotify>
     _instance;
} _CombatInvocationsNotify_default_instance_;
class ServerBuffChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerBuffChangeNotify>
     _instance;
} _ServerBuffChangeNotify_default_instance_;
class AiThreatInfo_AiThreatMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AiThreatInfo::AiThreatInfo_AiThreatMapEntry>
     _instance;
} _AiThreatInfo_AiThreatMapEntry_default_instance_;
class AiThreatInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AiThreatInfo>
     _instance;
} _AiThreatInfo_default_instance_;
class EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry>
     _instance;
} _EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_;
class EvtAiSyncCombatThreatInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EvtAiSyncCombatThreatInfoNotify>
     _instance;
} _EvtAiSyncCombatThreatInfoNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5ffight_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[61];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[46];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitCollision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitCollision, hit_collider_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitCollision, hit_box_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitCollision, hit_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitCollision, hit_dir_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackHitEffectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackHitEffectResult, hit_eff_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackHitEffectResult, retreat_strength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackHitEffectResult, air_strength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackHitEffectResult, hit_halt_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackHitEffectResult, hit_halt_time_scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityIdentifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityIdentifier, instanced_ability_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityIdentifier, ability_caster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityIdentifier, local_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityIdentifier, instanced_modifier_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityIdentifier, modifier_owner_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, attacker_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, defense_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, anim_event_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, ability_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, attack_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, is_crit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, hit_collision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, hit_pos_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, endure_break_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, resolved_dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, hit_retreat_angle_compat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, hit_eff_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, element_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, damage_percentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, damage_extra_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, bonus_critical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, bonus_critical_hurt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, use_gadget_damage_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, gadget_damage_action_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, strike_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, is_resist_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, critical_rand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, element_amplify_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, attenuation_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, damage_shield_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, mute_element_hurt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, true_damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttackResult, attenuation_group_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitInfo, peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitInfo, attack_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitNotify, being_hit_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorParameterInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorParameterInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorParameterInfo, name_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorParameterInfo, is_server_cache_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorParameterInfo, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorParameterNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorParameterNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorParameterNotify, animator_param_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityArgument, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(AbilityArgumentDefaultTypeInternal, int_arg_),
  offsetof(AbilityArgumentDefaultTypeInternal, float_arg_),
  offsetof(AbilityArgumentDefaultTypeInternal, str_arg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AbilityArgument, arg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HostPlayerNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HostPlayerNotify, host_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HostPlayerNotify, host_peer_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtDoSkillSuccNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtDoSkillSuccNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtDoSkillSuccNotify, caster_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtDoSkillSuccNotify, skill_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtDoSkillSuccNotify, forward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, camp_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, camp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, init_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, init_euler_angles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, owner_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, target_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, is_async_load_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, target_lock_point_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCreateGadgetNotify, room_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtDestroyGadgetNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtDestroyGadgetNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtDestroyGadgetNotify, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToEntityNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToEntityNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToEntityNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToEntityNotify, face_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToDirInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToDirInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToDirInfo, face_dir_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToDirNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToDirNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtFaceToDirNotify, evt_face_to_dir_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCostStaminaNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCostStaminaNotify, cost_stamina_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtCostStaminaNotify, skill_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtSetAttackTargetInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtSetAttackTargetInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtSetAttackTargetInfo, attack_target_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtSetAttackTargetNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtSetAttackTargetNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtSetAttackTargetNotify, evt_set_attack_target_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedInfo, to_state_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedInfo, normalized_time_compact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedInfo, face_angle_compact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedInfo, pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAnimatorStateChangedNotify, evt_animator_state_changed_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, timerange_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, state_name_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, face_angle_compact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, rush_attack_target_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveInfo, rush_to_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtRushMoveNotify, evt_rush_move_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, forward_peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, hit_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, hit_collider_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, hit_box_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, hit_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletHitNotify, hit_normal_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletDeactiveNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletDeactiveNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletDeactiveNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletDeactiveNotify, disappear_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityStartDieEndNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityStartDieEndNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityStartDieEndNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityStartDieEndNotify, immediately_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityStartDieEndNotify, die_state_flag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletMoveNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletMoveNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletMoveNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBulletMoveNotify, cur_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, fast_focus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, use_focus_sticky_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, use_auto_focus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, use_gyro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, can_move_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, show_cross_hair_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, focus_forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, enter_normal_focus_shoot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarEnterFocusNotify, enter_holding_focus_shoot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarExitFocusNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarExitFocusNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarExitFocusNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarExitFocusNotify, finish_forward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarUpdateFocusNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarUpdateFocusNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarUpdateFocusNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarUpdateFocusNotify, focus_forward_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAuthorityChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAuthorityChangeNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAuthorityChangeNotify, authority_peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAuthorityChangeNotify, ability_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAuthorityChangeNotify, renderer_changed_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarBuffAddNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarBuffAddNotify, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarBuffAddNotify, buff_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarBuffDelNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarBuffDelNotify, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarBuffDelNotify, buff_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterAlertChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterAlertChangeNotify, avatar_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterAlertChangeNotify, is_alert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterAlertChangeNotify, monster_entity_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterForceAlertNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonsterForceAlertNotify, monster_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterElementViewNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterElementViewNotify, avatar_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterElementViewNotify, is_triggerd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriggerCreateGadgetToEquipPartNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriggerCreateGadgetToEquipPartNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriggerCreateGadgetToEquipPartNotify, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriggerCreateGadgetToEquipPartNotify, gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TriggerCreateGadgetToEquipPartNotify, equip_part_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityRenderersChangedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityRenderersChangedNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityRenderersChangedNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityRenderersChangedNotify, is_server_cache_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtEntityRenderersChangedNotify, renderer_changed_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimatorForceSetAirMoveNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimatorForceSetAirMoveNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimatorForceSetAirMoveNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnimatorForceSetAirMoveNotify, in_air_move_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AiSkillCdInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AiSkillCdInfo, skill_cd_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAiSyncSkillCdNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAiSyncSkillCdNotify, ai_cd_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitsCombineNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitsCombineNotify, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtBeingHitsCombineNotify, evt_being_hit_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarSitDownNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarSitDownNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarSitDownNotify, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarStandUpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarStandUpNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarStandUpNotify, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAvatarStandUpNotify, performid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMassiveEntityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMassiveEntityReq, massive_entity_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMassiveEntityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMassiveEntityRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMassiveEntityNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateMassiveEntityNotify, massive_entity_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMassiveEntityNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroyMassiveEntityNotify, massive_entity_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveEntityStateChangedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MassiveEntityStateChangedNotify, massive_entity_state_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEntityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEntityInfo, team_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEntityInfo, authority_peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEntityInfo, team_ability_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTeamEntityNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTeamEntityNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncTeamEntityNotify, team_entity_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelTeamEntityNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelTeamEntityNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelTeamEntityNotify, del_entity_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CombatInvokeEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CombatInvokeEntry, argument_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CombatInvokeEntry, forward_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CombatInvokeEntry, combat_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CombatInvocationsNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CombatInvocationsNotify, invoke_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuffChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuffChangeNotify, server_buff_change_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuffChangeNotify, avatar_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBuffChangeNotify, server_buff_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AiThreatInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AiThreatInfo, ai_threat_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAiSyncCombatThreatInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EvtAiSyncCombatThreatInfoNotify, combat_threat_info_map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(HitCollision)},
  { 9, -1, sizeof(AttackHitEffectResult)},
  { 19, -1, sizeof(AbilityIdentifier)},
  { 29, -1, sizeof(AttackResult)},
  { 63, -1, sizeof(EvtBeingHitInfo)},
  { 70, -1, sizeof(EvtBeingHitNotify)},
  { 77, -1, sizeof(EvtAnimatorParameterInfo)},
  { 86, -1, sizeof(EvtAnimatorParameterNotify)},
  { 93, -1, sizeof(AbilityArgument)},
  { 102, -1, sizeof(HostPlayerNotify)},
  { 109, -1, sizeof(EvtDoSkillSuccNotify)},
  { 118, -1, sizeof(EvtCreateGadgetNotify)},
  { 136, -1, sizeof(EvtDestroyGadgetNotify)},
  { 143, -1, sizeof(EvtFaceToEntityNotify)},
  { 151, -1, sizeof(EvtFaceToDirInfo)},
  { 158, -1, sizeof(EvtFaceToDirNotify)},
  { 165, -1, sizeof(EvtCostStaminaNotify)},
  { 172, -1, sizeof(EvtSetAttackTargetInfo)},
  { 179, -1, sizeof(EvtSetAttackTargetNotify)},
  { 186, -1, sizeof(EvtAnimatorStateChangedInfo)},
  { 196, -1, sizeof(EvtAnimatorStateChangedNotify)},
  { 203, -1, sizeof(EvtRushMoveInfo)},
  { 216, -1, sizeof(EvtRushMoveNotify)},
  { 223, -1, sizeof(EvtBulletHitNotify)},
  { 236, -1, sizeof(EvtBulletDeactiveNotify)},
  { 244, -1, sizeof(EvtEntityStartDieEndNotify)},
  { 253, -1, sizeof(EvtBulletMoveNotify)},
  { 261, -1, sizeof(EvtAvatarEnterFocusNotify)},
  { 277, -1, sizeof(EvtAvatarExitFocusNotify)},
  { 285, -1, sizeof(EvtAvatarUpdateFocusNotify)},
  { 293, -1, sizeof(EntityAuthorityChangeNotify)},
  { 302, -1, sizeof(AvatarBuffAddNotify)},
  { 309, -1, sizeof(AvatarBuffDelNotify)},
  { 316, -1, sizeof(MonsterAlertChangeNotify)},
  { 324, -1, sizeof(MonsterForceAlertNotify)},
  { 330, -1, sizeof(AvatarEnterElementViewNotify)},
  { 337, -1, sizeof(TriggerCreateGadgetToEquipPartNotify)},
  { 346, -1, sizeof(EvtEntityRenderersChangedNotify)},
  { 355, -1, sizeof(AnimatorForceSetAirMoveNotify)},
  { 363, -1, sizeof(AiSkillCdInfo)},
  { 369, -1, sizeof(EvtAiSyncSkillCdNotify)},
  { 375, -1, sizeof(EvtBeingHitsCombineNotify)},
  { 382, -1, sizeof(EvtAvatarSitDownNotify)},
  { 389, -1, sizeof(EvtAvatarStandUpNotify)},
  { 397, -1, sizeof(CreateMassiveEntityReq)},
  { 403, -1, sizeof(CreateMassiveEntityRsp)},
  { 409, -1, sizeof(CreateMassiveEntityNotify)},
  { 415, -1, sizeof(DestroyMassiveEntityNotify)},
  { 421, -1, sizeof(MassiveEntityStateChangedNotify)},
  { 427, -1, sizeof(TeamEntityInfo)},
  { 435, -1, sizeof(SyncTeamEntityNotify)},
  { 442, -1, sizeof(DelTeamEntityNotify)},
  { 449, -1, sizeof(CombatInvokeEntry)},
  { 457, -1, sizeof(CombatInvocationsNotify)},
  { 463, -1, sizeof(ServerBuffChangeNotify)},
  { 471, -1, sizeof(AiThreatInfo)},
  { 477, -1, sizeof(EvtAiSyncCombatThreatInfoNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_HitCollision_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AttackHitEffectResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityIdentifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AttackResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtBeingHitInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtBeingHitNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAnimatorParameterInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAnimatorParameterNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AbilityArgument_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HostPlayerNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtDoSkillSuccNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtCreateGadgetNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtDestroyGadgetNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtFaceToEntityNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtFaceToDirInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtFaceToDirNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtCostStaminaNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtSetAttackTargetInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtSetAttackTargetNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAnimatorStateChangedInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAnimatorStateChangedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtRushMoveInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtRushMoveNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtBulletHitNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtBulletDeactiveNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtEntityStartDieEndNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtBulletMoveNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAvatarEnterFocusNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAvatarExitFocusNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAvatarUpdateFocusNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityAuthorityChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarBuffAddNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarBuffDelNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MonsterAlertChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MonsterForceAlertNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarEnterElementViewNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TriggerCreateGadgetToEquipPartNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtEntityRenderersChangedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AnimatorForceSetAirMoveNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AiSkillCdInfo_SkillCdMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AiSkillCdInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAiSyncSkillCdNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtBeingHitsCombineNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAvatarSitDownNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAvatarStandUpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateMassiveEntityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateMassiveEntityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateMassiveEntityNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DestroyMassiveEntityNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MassiveEntityStateChangedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamEntityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncTeamEntityNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelTeamEntityNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CombatInvokeEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CombatInvocationsNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerBuffChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AiThreatInfo_AiThreatMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AiThreatInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EvtAiSyncCombatThreatInfoNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_fight.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[39].reflection = AiSkillCdInfo::AiSkillCdInfo_SkillCdMapEntry::CreateReflection(file_level_metadata[39].descriptor, _AiSkillCdInfo_SkillCdMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[41].reflection = EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify_AiCdMapEntry::CreateReflection(file_level_metadata[41].descriptor, _EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[57].reflection = AiThreatInfo::AiThreatInfo_AiThreatMapEntry::CreateReflection(file_level_metadata[57].descriptor, _AiThreatInfo_AiThreatMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[59].reflection = EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry::CreateReflection(file_level_metadata[59].descriptor, _EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 61);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _HitCollision_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HitCollision_default_instance_);_AttackHitEffectResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AttackHitEffectResult_default_instance_);_AbilityIdentifier_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityIdentifier_default_instance_);_AttackResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AttackResult_default_instance_);_EvtBeingHitInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtBeingHitInfo_default_instance_);_EvtBeingHitNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtBeingHitNotify_default_instance_);_EvtAnimatorParameterInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAnimatorParameterInfo_default_instance_);_EvtAnimatorParameterNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAnimatorParameterNotify_default_instance_);_AbilityArgument_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AbilityArgument_default_instance_);_HostPlayerNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HostPlayerNotify_default_instance_);_EvtDoSkillSuccNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtDoSkillSuccNotify_default_instance_);_EvtCreateGadgetNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtCreateGadgetNotify_default_instance_);_EvtDestroyGadgetNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtDestroyGadgetNotify_default_instance_);_EvtFaceToEntityNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtFaceToEntityNotify_default_instance_);_EvtFaceToDirInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtFaceToDirInfo_default_instance_);_EvtFaceToDirNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtFaceToDirNotify_default_instance_);_EvtCostStaminaNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtCostStaminaNotify_default_instance_);_EvtSetAttackTargetInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtSetAttackTargetInfo_default_instance_);_EvtSetAttackTargetNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtSetAttackTargetNotify_default_instance_);_EvtAnimatorStateChangedInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAnimatorStateChangedInfo_default_instance_);_EvtAnimatorStateChangedNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAnimatorStateChangedNotify_default_instance_);_EvtRushMoveInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtRushMoveInfo_default_instance_);_EvtRushMoveNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtRushMoveNotify_default_instance_);_EvtBulletHitNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtBulletHitNotify_default_instance_);_EvtBulletDeactiveNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtBulletDeactiveNotify_default_instance_);_EvtEntityStartDieEndNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtEntityStartDieEndNotify_default_instance_);_EvtBulletMoveNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtBulletMoveNotify_default_instance_);_EvtAvatarEnterFocusNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAvatarEnterFocusNotify_default_instance_);_EvtAvatarExitFocusNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAvatarExitFocusNotify_default_instance_);_EvtAvatarUpdateFocusNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAvatarUpdateFocusNotify_default_instance_);_EntityAuthorityChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityAuthorityChangeNotify_default_instance_);_AvatarBuffAddNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarBuffAddNotify_default_instance_);_AvatarBuffDelNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarBuffDelNotify_default_instance_);_MonsterAlertChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MonsterAlertChangeNotify_default_instance_);_MonsterForceAlertNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MonsterForceAlertNotify_default_instance_);_AvatarEnterElementViewNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarEnterElementViewNotify_default_instance_);_TriggerCreateGadgetToEquipPartNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TriggerCreateGadgetToEquipPartNotify_default_instance_);_EvtEntityRenderersChangedNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtEntityRenderersChangedNotify_default_instance_);_AnimatorForceSetAirMoveNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AnimatorForceSetAirMoveNotify_default_instance_);_AiSkillCdInfo_SkillCdMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AiSkillCdInfo_SkillCdMapEntry_default_instance_);_AiSkillCdInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AiSkillCdInfo_default_instance_);_EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_);_EvtAiSyncSkillCdNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAiSyncSkillCdNotify_default_instance_);_EvtBeingHitsCombineNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtBeingHitsCombineNotify_default_instance_);_EvtAvatarSitDownNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAvatarSitDownNotify_default_instance_);_EvtAvatarStandUpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAvatarStandUpNotify_default_instance_);_CreateMassiveEntityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateMassiveEntityReq_default_instance_);_CreateMassiveEntityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateMassiveEntityRsp_default_instance_);_CreateMassiveEntityNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateMassiveEntityNotify_default_instance_);_DestroyMassiveEntityNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DestroyMassiveEntityNotify_default_instance_);_MassiveEntityStateChangedNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MassiveEntityStateChangedNotify_default_instance_);_TeamEntityInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TeamEntityInfo_default_instance_);_SyncTeamEntityNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncTeamEntityNotify_default_instance_);_DelTeamEntityNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelTeamEntityNotify_default_instance_);_CombatInvokeEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CombatInvokeEntry_default_instance_);_CombatInvocationsNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CombatInvocationsNotify_default_instance_);_ServerBuffChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerBuffChangeNotify_default_instance_);_AiThreatInfo_AiThreatMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AiThreatInfo_AiThreatMapEntry_default_instance_);_AiThreatInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AiThreatInfo_default_instance_);_EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_);_EvtAiSyncCombatThreatInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EvtAiSyncCombatThreatInfoNotify_default_instance_);_HitCollision_default_instance_._instance.get_mutable()->hit_point_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _HitCollision_default_instance_._instance.get_mutable()->hit_dir_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _AttackResult_default_instance_._instance.get_mutable()->ability_identifier_ = const_cast< ::proto::AbilityIdentifier*>(
      ::proto::AbilityIdentifier::internal_default_instance());
  _AttackResult_default_instance_._instance.get_mutable()->hit_collision_ = const_cast< ::proto::HitCollision*>(
      ::proto::HitCollision::internal_default_instance());
  _AttackResult_default_instance_._instance.get_mutable()->resolved_dir_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _AttackResult_default_instance_._instance.get_mutable()->hit_eff_result_ = const_cast< ::proto::AttackHitEffectResult*>(
      ::proto::AttackHitEffectResult::internal_default_instance());
  _EvtBeingHitInfo_default_instance_._instance.get_mutable()->attack_result_ = const_cast< ::proto::AttackResult*>(
      ::proto::AttackResult::internal_default_instance());
  _EvtBeingHitNotify_default_instance_._instance.get_mutable()->being_hit_info_ = const_cast< ::proto::EvtBeingHitInfo*>(
      ::proto::EvtBeingHitInfo::internal_default_instance());
  _EvtAnimatorParameterInfo_default_instance_._instance.get_mutable()->value_ = const_cast< ::proto::AnimatorParameterValueInfo*>(
      ::proto::AnimatorParameterValueInfo::internal_default_instance());
  _EvtAnimatorParameterNotify_default_instance_._instance.get_mutable()->animator_param_info_ = const_cast< ::proto::EvtAnimatorParameterInfo*>(
      ::proto::EvtAnimatorParameterInfo::internal_default_instance());
  _AbilityArgument_default_instance_.int_arg_ = 0u;
  _AbilityArgument_default_instance_.float_arg_ = 0;
  _AbilityArgument_default_instance_.str_arg_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _EvtDoSkillSuccNotify_default_instance_._instance.get_mutable()->forward_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtCreateGadgetNotify_default_instance_._instance.get_mutable()->init_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtCreateGadgetNotify_default_instance_._instance.get_mutable()->init_euler_angles_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtFaceToDirInfo_default_instance_._instance.get_mutable()->face_dir_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtFaceToDirNotify_default_instance_._instance.get_mutable()->evt_face_to_dir_info_ = const_cast< ::proto::EvtFaceToDirInfo*>(
      ::proto::EvtFaceToDirInfo::internal_default_instance());
  _EvtSetAttackTargetNotify_default_instance_._instance.get_mutable()->evt_set_attack_target_info_ = const_cast< ::proto::EvtSetAttackTargetInfo*>(
      ::proto::EvtSetAttackTargetInfo::internal_default_instance());
  _EvtAnimatorStateChangedInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtAnimatorStateChangedNotify_default_instance_._instance.get_mutable()->evt_animator_state_changed_info_ = const_cast< ::proto::EvtAnimatorStateChangedInfo*>(
      ::proto::EvtAnimatorStateChangedInfo::internal_default_instance());
  _EvtRushMoveInfo_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtRushMoveInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtRushMoveInfo_default_instance_._instance.get_mutable()->rush_attack_target_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtRushMoveInfo_default_instance_._instance.get_mutable()->rush_to_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtRushMoveNotify_default_instance_._instance.get_mutable()->evt_rush_move_info_ = const_cast< ::proto::EvtRushMoveInfo*>(
      ::proto::EvtRushMoveInfo::internal_default_instance());
  _EvtBulletHitNotify_default_instance_._instance.get_mutable()->hit_point_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtBulletHitNotify_default_instance_._instance.get_mutable()->hit_normal_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtBulletDeactiveNotify_default_instance_._instance.get_mutable()->disappear_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtBulletMoveNotify_default_instance_._instance.get_mutable()->cur_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtAvatarEnterFocusNotify_default_instance_._instance.get_mutable()->focus_forward_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtAvatarExitFocusNotify_default_instance_._instance.get_mutable()->finish_forward_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EvtAvatarUpdateFocusNotify_default_instance_._instance.get_mutable()->focus_forward_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EntityAuthorityChangeNotify_default_instance_._instance.get_mutable()->ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _EntityAuthorityChangeNotify_default_instance_._instance.get_mutable()->renderer_changed_info_ = const_cast< ::proto::EntityRendererChangedInfo*>(
      ::proto::EntityRendererChangedInfo::internal_default_instance());
  _EvtEntityRenderersChangedNotify_default_instance_._instance.get_mutable()->renderer_changed_info_ = const_cast< ::proto::EntityRendererChangedInfo*>(
      ::proto::EntityRendererChangedInfo::internal_default_instance());
  _AiSkillCdInfo_SkillCdMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AiSkillCdInfo_SkillCdMapEntry_default_instance_._instance.get_mutable());
  _AiSkillCdInfo_SkillCdMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_._instance.get_mutable());
  _EvtAiSyncSkillCdNotify_AiCdMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _EvtAvatarSitDownNotify_default_instance_._instance.get_mutable()->position_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _TeamEntityInfo_default_instance_._instance.get_mutable()->team_ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _AiThreatInfo_AiThreatMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_AiThreatInfo_AiThreatMapEntry_default_instance_._instance.get_mutable());
  _AiThreatInfo_AiThreatMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_._instance.get_mutable());
  _EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023cmd/cmd_fight.proto\022\005proto\032\014define.pro"
      "to\"\232\001\n\014HitCollision\0221\n\021hit_collider_type"
      "\030\001 \001(\0162\026.proto.HitColliderType\022\025\n\rhit_bo"
      "x_index\030\002 \001(\005\022 \n\thit_point\030\003 \001(\0132\r.proto"
      ".Vector\022\036\n\007hit_dir\030\004 \001(\0132\r.proto.Vector\""
      "\222\001\n\025AttackHitEffectResult\022\025\n\rhit_eff_lev"
      "el\030\001 \001(\r\022\030\n\020retreat_strength\030\002 \001(\002\022\024\n\014ai"
      "r_strength\030\003 \001(\002\022\025\n\rhit_halt_time\030\004 \001(\002\022"
      "\033\n\023hit_halt_time_scale\030\005 \001(\002\"\230\001\n\021Ability"
      "Identifier\022\034\n\024instanced_ability_id\030\001 \001(\r"
      "\022\031\n\021ability_caster_id\030\002 \001(\r\022\020\n\010local_id\030"
      "\003 \001(\005\022\035\n\025instanced_modifier_id\030\004 \001(\r\022\031\n\021"
      "modifier_owner_id\030\005 \001(\r\"\253\006\n\014AttackResult"
      "\022\023\n\013attacker_id\030\001 \001(\r\022\022\n\ndefense_id\030\002 \001("
      "\r\022\025\n\ranim_event_id\030\003 \001(\t\0224\n\022ability_iden"
      "tifier\030\004 \001(\0132\030.proto.AbilityIdentifier\022\022"
      "\n\nattack_tag\030\005 \001(\t\022\016\n\006damage\030\006 \001(\002\022\017\n\007is"
      "_crit\030\007 \001(\010\022*\n\rhit_collision\030\010 \001(\0132\023.pro"
      "to.HitCollision\022\024\n\014hit_pos_type\030\t \001(\r\022\024\n"
      "\014endure_break\030\n \001(\r\022#\n\014resolved_dir\030\013 \001("
      "\0132\r.proto.Vector\022 \n\030hit_retreat_angle_co"
      "mpat\030\014 \001(\005\0224\n\016hit_eff_result\030\r \001(\0132\034.pro"
      "to.AttackHitEffectResult\022\024\n\014element_type"
      "\030\016 \001(\r\022\031\n\021damage_percentage\030\017 \001(\002\022\024\n\014dam"
      "age_extra\030\020 \001(\002\022\026\n\016bonus_critical\030\021 \001(\002\022"
      "\033\n\023bonus_critical_hurt\030\022 \001(\002\022 \n\030use_gadg"
      "et_damage_action\030\023 \001(\010\022 \n\030gadget_damage_"
      "action_idx\030\024 \001(\r\022\023\n\013strike_type\030\025 \001(\r\022\026\n"
      "\016is_resist_text\030\026 \001(\010\022\025\n\rcritical_rand\030\027"
      " \001(\002\022\034\n\024element_amplify_rate\030\030 \001(\002\022\027\n\017at"
      "tenuation_tag\030\031 \001(\t\022\025\n\rdamage_shield\030\032 \001"
      "(\002\022\031\n\021mute_element_hurt\030\033 \001(\010\022\023\n\013true_da"
      "mage\030\034 \001(\010\022\031\n\021attenuation_group\030\035 \001(\t\"N\n"
      "\017EvtBeingHitInfo\022\017\n\007peer_id\030\001 \001(\r\022*\n\ratt"
      "ack_result\030\002 \001(\0132\023.proto.AttackResult\"\321\001"
      "\n\021EvtBeingHitNotify\022(\n\014forward_type\030\001 \001("
      "\0162\022.proto.ForwardType\022.\n\016being_hit_info\030"
      "\002 \001(\0132\026.proto.EvtBeingHitInfo\"b\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\255\002\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLI"
      "ENT\020\001\032\002\020\001\"\211\001\n\030EvtAnimatorParameterInfo\022\021"
      "\n\tentity_id\030\001 \001(\r\022\017\n\007name_id\030\002 \001(\005\022\027\n\017is"
      "_server_cache\030\003 \001(\010\0220\n\005value\030\004 \001(\0132!.pro"
      "to.AnimatorParameterValueInfo\"\350\001\n\032EvtAni"
      "matorParameterNotify\022(\n\014forward_type\030\001 \001"
      "(\0162\022.proto.ForwardType\022<\n\023animator_param"
      "_info\030\002 \001(\0132\037.proto.EvtAnimatorParameter"
      "Info\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\256\002\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022"
      "\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"S\n\017AbilityArgum"
      "ent\022\021\n\007int_arg\030\001 \001(\rH\000\022\023\n\tfloat_arg\030\002 \001("
      "\002H\000\022\021\n\007str_arg\030\003 \001(\tH\000B\005\n\003arg\"\211\001\n\020HostPl"
      "ayerNotify\022\020\n\010host_uid\030\001 \001(\r\022\024\n\014host_pee"
      "r_id\030\002 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\257\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\032\002\020\001\"\351\001\n\024EvtDoSkillSuccNotify\022(\n\014fo"
      "rward_type\030\001 \001(\0162\022.proto.ForwardType\022\021\n\t"
      "caster_id\030\002 \001(\r\022\020\n\010skill_id\030\003 \001(\r\022\036\n\007for"
      "ward\030\004 \001(\0132\r.proto.Vector\"b\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\260\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020"
      "\001\032\002\020\001\"\304\003\n\025EvtCreateGadgetNotify\022(\n\014forwa"
      "rd_type\030\001 \001(\0162\022.proto.ForwardType\022\021\n\tent"
      "ity_id\030\002 \001(\r\022\021\n\tconfig_id\030\003 \001(\r\022\017\n\007camp_"
      "id\030\004 \001(\r\022\021\n\tcamp_type\030\005 \001(\r\022\037\n\010init_pos\030"
      "\006 \001(\0132\r.proto.Vector\022(\n\021init_euler_angle"
      "s\030\007 \001(\0132\r.proto.Vector\022\014\n\004guid\030\010 \001(\004\022\027\n\017"
      "owner_entity_id\030\t \001(\r\022\030\n\020target_entity_i"
      "d\030\n \001(\r\022\025\n\ris_async_load\030\013 \001(\010\022\037\n\027target"
      "_lock_point_index\030\014 \001(\r\022\017\n\007room_id\030\r \001(\r"
      "\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\261\002\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017I"
      "S_ALLOW_CLIENT\020\001\032\002\020\001\"\271\001\n\026EvtDestroyGadge"
      "tNotify\022(\n\014forward_type\030\001 \001(\0162\022.proto.Fo"
      "rwardType\022\021\n\tentity_id\030\002 \001(\r\"b\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\262\002\022\023\n\017ENET_CHANNEL_ID\020"
      "\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIE"
      "NT\020\001\032\002\020\001\"\320\001\n\025EvtFaceToEntityNotify\022(\n\014fo"
      "rward_type\030\001 \001(\0162\022.proto.ForwardType\022\021\n\t"
      "entity_id\030\002 \001(\r\022\026\n\016face_entity_id\030\003 \001(\r\""
      "b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\263\002\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS"
      "_ALLOW_CLIENT\020\001\032\002\020\001\"F\n\020EvtFaceToDirInfo\022"
      "\021\n\tentity_id\030\001 \001(\r\022\037\n\010face_dir\030\002 \001(\0132\r.p"
      "roto.Vector\"\331\001\n\022EvtFaceToDirNotify\022(\n\014fo"
      "rward_type\030\001 \001(\0162\022.proto.ForwardType\0225\n\024"
      "evt_face_to_dir_info\030\002 \001(\0132\027.proto.EvtFa"
      "ceToDirInfo\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\264\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\242\001\n\024EvtC"
      "ostStaminaNotify\022\024\n\014cost_stamina\030\001 \001(\002\022\020"
      "\n\010skill_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\265\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"E\n\026"
      "EvtSetAttackTargetInfo\022\021\n\tentity_id\030\001 \001("
      "\r\022\030\n\020attack_target_id\030\002 \001(\r\"\353\001\n\030EvtSetAt"
      "tackTargetNotify\022(\n\014forward_type\030\001 \001(\0162\022"
      ".proto.ForwardType\022A\n\032evt_set_attack_tar"
      "get_info\030\002 \001(\0132\035.proto.EvtSetAttackTarge"
      "tInfo\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\266\002\022\023\n"
      "\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001"
      "\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\240\001\n\033EvtAnimato"
      "rStateChangedInfo\022\021\n\tentity_id\030\001 \001(\r\022\025\n\r"
      "to_state_hash\030\002 \001(\r\022\037\n\027normalized_time_c"
      "ompact\030\003 \001(\r\022\032\n\022face_angle_compact\030\004 \001(\005"
      "\022\032\n\003pos\030\005 \001(\0132\r.proto.Vector\"\372\001\n\035EvtAnim"
      "atorStateChangedNotify\022(\n\014forward_type\030\001"
      " \001(\0162\022.proto.ForwardType\022K\n\037evt_animator"
      "_state_changed_info\030\002 \001(\0132\".proto.EvtAni"
      "matorStateChangedInfo\"b\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\013\n\006CMD_ID\020\267\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020EN"
      "ET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020"
      "\001\"\374\001\n\017EvtRushMoveInfo\022\021\n\tentity_id\030\001 \001(\r"
      "\022\037\n\010velocity\030\002 \001(\0132\r.proto.Vector\022\021\n\ttim"
      "eRange\030\003 \001(\002\022\027\n\017state_name_hash\030\004 \001(\005\022\032\n"
      "\022face_angle_compact\030\005 \001(\005\022\032\n\003pos\030\006 \001(\0132\r"
      ".proto.Vector\022-\n\026rush_attack_target_pos\030"
      "\007 \001(\0132\r.proto.Vector\022\"\n\013rush_to_pos\030\010 \001("
      "\0132\r.proto.Vector\"\325\001\n\021EvtRushMoveNotify\022("
      "\n\014forward_type\030\001 \001(\0162\022.proto.ForwardType"
      "\0222\n\022evt_rush_move_info\030\002 \001(\0132\026.proto.Evt"
      "RushMoveInfo\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\270\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\361\002\n\022Evt"
      "BulletHitNotify\022(\n\014forward_type\030\001 \001(\0162\022."
      "proto.ForwardType\022\024\n\014forward_peer\030\002 \001(\r\022"
      "\021\n\tentity_id\030\003 \001(\r\022\025\n\rhit_entity_id\030\004 \001("
      "\r\0221\n\021hit_collider_type\030\005 \001(\0162\026.proto.Hit"
      "ColliderType\022\025\n\rhit_box_index\030\006 \001(\005\022 \n\th"
      "it_point\030\007 \001(\0132\r.proto.Vector\022!\n\nhit_nor"
      "mal\030\010 \001(\0132\r.proto.Vector\"b\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\271\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001"
      "\032\002\020\001\"\340\001\n\027EvtBulletDeactiveNotify\022(\n\014forw"
      "ard_type\030\001 \001(\0162\022.proto.ForwardType\022\021\n\ten"
      "tity_id\030\002 \001(\r\022$\n\rdisappear_pos\030\003 \001(\0132\r.p"
      "roto.Vector\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\272\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\352\001\n\032EvtE"
      "ntityStartDieEndNotify\022(\n\014forward_type\030\001"
      " \001(\0162\022.proto.ForwardType\022\021\n\tentity_id\030\002 "
      "\001(\r\022\023\n\013immediately\030\003 \001(\010\022\026\n\016die_state_fl"
      "ag\030\004 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\273\002"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\326\001\n\023EvtBull"
      "etMoveNotify\022(\n\014forward_type\030\001 \001(\0162\022.pro"
      "to.ForwardType\022\021\n\tentity_id\030\002 \001(\r\022\036\n\007cur"
      "_pos\030\003 \001(\0132\r.proto.Vector\"b\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\302\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020"
      "\001\032\002\020\001\"\252\003\n\031EvtAvatarEnterFocusNotify\022(\n\014f"
      "orward_type\030\001 \001(\0162\022.proto.ForwardType\022\021\n"
      "\tentity_id\030\002 \001(\r\022\022\n\nfast_focus\030\003 \001(\010\022\030\n\020"
      "use_focus_sticky\030\004 \001(\010\022\026\n\016use_auto_focus"
      "\030\005 \001(\010\022\020\n\010use_gyro\030\006 \001(\010\022\020\n\010can_move\030\007 \001"
      "(\010\022\027\n\017show_cross_hair\030\010 \001(\010\022$\n\rfocus_for"
      "ward\030\t \001(\0132\r.proto.Vector\022 \n\030enter_norma"
      "l_focus_shoot\030\n \001(\010\022!\n\031enter_holding_foc"
      "us_shoot\030\013 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD"
      "_ID\020\303\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\342\001\n\030E"
      "vtAvatarExitFocusNotify\022(\n\014forward_type\030"
      "\001 \001(\0162\022.proto.ForwardType\022\021\n\tentity_id\030\002"
      " \001(\r\022%\n\016finish_forward\030\003 \001(\0132\r.proto.Vec"
      "tor\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\304\002\022\023\n\017E"
      "NET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023"
      "\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\343\001\n\032EvtAvatarUpd"
      "ateFocusNotify\022(\n\014forward_type\030\001 \001(\0162\022.p"
      "roto.ForwardType\022\021\n\tentity_id\030\002 \001(\r\022$\n\rf"
      "ocus_forward\030\003 \001(\0132\r.proto.Vector\"b\n\005Cmd"
      "Id\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\305\002\022\023\n\017ENET_CHANNE"
      "L_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW"
      "_CLIENT\020\001\032\002\020\001\"\243\002\n\033EntityAuthorityChangeN"
      "otify\022\021\n\tentity_id\030\001 \001(\r\022\031\n\021authority_pe"
      "er_id\030\002 \001(\r\0221\n\014ability_info\030\003 \001(\0132\033.prot"
      "o.AbilitySyncStateInfo\022\?\n\025renderer_chang"
      "ed_info\030\004 \001(\0132 .proto.EntityRendererChan"
      "gedInfo\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\306\002\022"
      "\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\237\001\n\023AvatarBu"
      "ffAddNotify\022\023\n\013avatar_guid\030\001 \001(\004\022\017\n\007buff"
      "_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\307"
      "\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\237\001\n\023Avatar"
      "BuffDelNotify\022\023\n\013avatar_guid\030\001 \001(\004\022\017\n\007bu"
      "ff_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\310\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\307\001\n\030Mons"
      "terAlertChangeNotify\022\030\n\020avatar_entity_id"
      "\030\002 \001(\r\022\020\n\010is_alert\030\003 \001(\r\022\033\n\023monster_enti"
      "ty_list\030\004 \003(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\311\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\203\001\n\027Mo"
      "nsterForceAlertNotify\022\031\n\021monster_entity_"
      "id\030\001 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\312\002"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\261\001\n\034AvatarEnterElementViewNotify"
      "\022\030\n\020avatar_entity_id\030\001 \001(\r\022\023\n\013is_trigger"
      "d\030\002 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\314\002\022"
      "\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\336\001\n$TriggerC"
      "reateGadgetToEquipPartNotify\022\021\n\tentity_i"
      "d\030\001 \001(\r\022\030\n\020gadget_entity_id\030\002 \001(\r\022\021\n\tgad"
      "get_id\030\003 \001(\r\022\022\n\nequip_part\030\004 \001(\t\"b\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\315\002\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_"
      "CLIENT\020\001\032\002\020\001\"\234\002\n\037EvtEntityRenderersChang"
      "edNotify\022(\n\014forward_type\030\001 \001(\0162\022.proto.F"
      "orwardType\022\021\n\tentity_id\030\002 \001(\r\022\027\n\017is_serv"
      "er_cache\030\003 \001(\010\022\?\n\025renderer_changed_info\030"
      "\004 \001(\0132 .proto.EntityRendererChangedInfo\""
      "b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\316\002\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS"
      "_ALLOW_CLIENT\020\001\032\002\020\001\"\325\001\n\035AnimatorForceSet"
      "AirMoveNotify\022(\n\014forward_type\030\001 \001(\0162\022.pr"
      "oto.ForwardType\022\021\n\tentity_id\030\002 \001(\r\022\023\n\013in"
      "_air_move\030\003 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\317\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"~\n\rA"
      "iSkillCdInfo\022:\n\014skill_cd_map\030\001 \003(\0132$.pro"
      "to.AiSkillCdInfo.SkillCdMapEntry\0321\n\017Skil"
      "lCdMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:"
      "\0028\001\"\201\002\n\026EvtAiSyncSkillCdNotify\022=\n\tai_cd_"
      "map\030\001 \003(\0132*.proto.EvtAiSyncSkillCdNotify"
      ".AiCdMapEntry\032D\n\014AiCdMapEntry\022\013\n\003key\030\001 \001"
      "(\r\022#\n\005value\030\002 \001(\0132\024.proto.AiSkillCdInfo:"
      "\0028\001\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\320\002\022\023\n\017E"
      "NET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023"
      "\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\342\001\n\031EvtBeingHits"
      "CombineNotify\022(\n\014forward_type\030\001 \001(\0162\022.pr"
      "oto.ForwardType\0227\n\027evt_being_hit_info_li"
      "st\030\002 \003(\0132\026.proto.EvtBeingHitInfo\"b\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\321\002\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_"
      "CLIENT\020\001\032\002\020\001\"\260\001\n\026EvtAvatarSitDownNotify\022"
      "\021\n\tentity_id\030\001 \001(\r\022\037\n\010position\030\002 \001(\0132\r.p"
      "roto.Vector\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\325\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\265\001\n\026EvtA"
      "vatarStandUpNotify\022\021\n\tentity_id\030\001 \001(\r\022\021\n"
      "\tdirection\030\002 \001(\005\022\021\n\tperformID\030\003 \001(\005\"b\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\326\002\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALL"
      "OW_CLIENT\020\001\032\002\020\001\"\265\001\n\026CreateMassiveEntityR"
      "eq\0227\n\023massive_entity_list\030\001 \003(\0132\032.proto."
      "ClientMassiveEntity\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013"
      "\n\006CMD_ID\020\327\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\""
      "x\n\026CreateMassiveEntityRsp\022\017\n\007retcode\030\001 \001"
      "(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\330\002\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020"
      "\001\"\243\001\n\031CreateMassiveEntityNotify\0227\n\023massi"
      "ve_entity_list\030\001 \003(\0132\032.proto.ServerMassi"
      "veEntity\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\331\002"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\271\001\n\032DestroyMassiveEntityNotify\0227"
      "\n\023massive_entity_list\030\001 \003(\0132\032.proto.Clie"
      "ntMassiveEntity\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\332\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\303\001\n\037"
      "MassiveEntityStateChangedNotify\022<\n\031massi"
      "ve_entity_state_list\030\001 \003(\0132\031.proto.Massi"
      "veEntityState\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\333\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"{\n\016Tea"
      "mEntityInfo\022\026\n\016team_entity_id\030\001 \001(\r\022\031\n\021a"
      "uthority_peer_id\030\002 \001(\r\0226\n\021team_ability_i"
      "nfo\030\003 \001(\0132\033.proto.AbilitySyncStateInfo\"\255"
      "\001\n\024SyncTeamEntityNotify\022\020\n\010scene_id\030\001 \001("
      "\r\0224\n\025team_entity_info_list\030\002 \003(\0132\025.proto"
      ".TeamEntityInfo\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\334\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\032\002\020\001\"\222\001\n\023DelTeamEntityNotify\022\020"
      "\n\010scene_id\030\001 \001(\r\022\032\n\022del_entity_id_list\030\002"
      " \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\335\002\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032"
      "\002\020\001\"\204\001\n\021CombatInvokeEntry\0220\n\rargument_ty"
      "pe\030\001 \001(\0162\031.proto.CombatTypeArgument\022(\n\014f"
      "orward_type\030\002 \001(\0162\022.proto.ForwardType\022\023\n"
      "\013combat_data\030\003 \001(\014\"\254\001\n\027CombatInvocations"
      "Notify\022-\n\013invoke_list\030\001 \003(\0132\030.proto.Comb"
      "atInvokeEntry\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\336\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\305\002\n\026Se"
      "rverBuffChangeNotify\022S\n\027server_buff_chan"
      "ge_type\030\001 \001(\01622.proto.ServerBuffChangeNo"
      "tify.ServerBuffChangeType\022\030\n\020avatar_guid"
      "_list\030\002 \003(\004\022+\n\020server_buff_list\030\003 \003(\0132\021."
      "proto.ServerBuff\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\337\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\032\002\020\001\"@\n\024ServerBuffChangeType\022"
      "\023\n\017ADD_SERVER_BUFF\020\000\022\023\n\017DEL_SERVER_BUFF\020"
      "\001\"\177\n\014AiThreatInfo\022;\n\rai_threat_map\030\001 \003(\013"
      "2$.proto.AiThreatInfo.AiThreatMapEntry\0322"
      "\n\020AiThreatMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value"
      "\030\002 \001(\r:\0028\001\"\267\002\n\037EvtAiSyncCombatThreatInfo"
      "Notify\022_\n\026combat_threat_info_map\030\001 \003(\0132\?"
      ".proto.EvtAiSyncCombatThreatInfoNotify.C"
      "ombatThreatInfoMapEntry\032O\n\030CombatThreatI"
      "nfoMapEntry\022\013\n\003key\030\001 \001(\r\022\"\n\005value\030\002 \001(\0132"
      "\023.proto.AiThreatInfo:\0028\001\"b\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\340\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001"
      "\032\002\020\001*\353\001\n\013ForwardType\022\021\n\rFORWARD_LOCAL\020\000\022"
      "\022\n\016FORWARD_TO_ALL\020\001\022\035\n\031FORWARD_TO_ALL_EX"
      "CEPT_CUR\020\002\022\023\n\017FORWARD_TO_HOST\020\003\022\030\n\024FORWA"
      "RD_TO_ALL_GUEST\020\004\022\023\n\017FORWARD_TO_PEER\020\005\022\024"
      "\n\020FORWARD_TO_PEERS\020\006\022\027\n\023FORWARD_ONLY_SER"
      "VER\020\007\022#\n\037FORWARD_TO_ALL_EXIST_EXCEPT_CUR"
      "\020\010*~\n\017HitColliderType\022\030\n\024HIT_COLLIDER_IN"
      "VALID\020\000\022\030\n\024HIT_COLLIDER_HIT_BOX\020\001\022\034\n\030HIT"
      "_COLLIDER_WET_HIT_BOX\020\002\022\031\n\025HIT_COLLIDER_"
      "HEAD_BOX\020\003*\325\001\n\022CombatTypeArgument\022\017\n\013COM"
      "BAT_NONE\020\000\022\030\n\024COMBAT_EVT_BEING_HIT\020\001\022!\n\035"
      "COMBAT_ANIMATOR_STATE_CHANGED\020\002\022\026\n\022COMBA"
      "T_FACE_TO_DIR\020\003\022\034\n\030COMBAT_SET_ATTACK_TAR"
      "GET\020\004\022\024\n\020COMBAT_RUSH_MOVE\020\005\022%\n!COMBAT_AN"
      "IMATOR_PARAMETER_CHANGED\020\006b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 12714);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_fight.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5ffight_2eproto

const ::google::protobuf::EnumDescriptor* EvtBeingHitNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[0];
}
bool EvtBeingHitNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 301:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtBeingHitNotify_CmdId EvtBeingHitNotify::NONE;
const EvtBeingHitNotify_CmdId EvtBeingHitNotify::CMD_ID;
const EvtBeingHitNotify_CmdId EvtBeingHitNotify::ENET_CHANNEL_ID;
const EvtBeingHitNotify_CmdId EvtBeingHitNotify::ENET_IS_RELIABLE;
const EvtBeingHitNotify_CmdId EvtBeingHitNotify::IS_ALLOW_CLIENT;
const EvtBeingHitNotify_CmdId EvtBeingHitNotify::CmdId_MIN;
const EvtBeingHitNotify_CmdId EvtBeingHitNotify::CmdId_MAX;
const int EvtBeingHitNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAnimatorParameterNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[1];
}
bool EvtAnimatorParameterNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 302:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify::NONE;
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify::CMD_ID;
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify::ENET_CHANNEL_ID;
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify::ENET_IS_RELIABLE;
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify::IS_ALLOW_CLIENT;
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify::CmdId_MIN;
const EvtAnimatorParameterNotify_CmdId EvtAnimatorParameterNotify::CmdId_MAX;
const int EvtAnimatorParameterNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* HostPlayerNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[2];
}
bool HostPlayerNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 303:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HostPlayerNotify_CmdId HostPlayerNotify::NONE;
const HostPlayerNotify_CmdId HostPlayerNotify::CMD_ID;
const HostPlayerNotify_CmdId HostPlayerNotify::ENET_CHANNEL_ID;
const HostPlayerNotify_CmdId HostPlayerNotify::ENET_IS_RELIABLE;
const HostPlayerNotify_CmdId HostPlayerNotify::CmdId_MIN;
const HostPlayerNotify_CmdId HostPlayerNotify::CmdId_MAX;
const int HostPlayerNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtDoSkillSuccNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[3];
}
bool EvtDoSkillSuccNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 304:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify::NONE;
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify::CMD_ID;
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify::ENET_CHANNEL_ID;
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify::ENET_IS_RELIABLE;
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify::IS_ALLOW_CLIENT;
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify::CmdId_MIN;
const EvtDoSkillSuccNotify_CmdId EvtDoSkillSuccNotify::CmdId_MAX;
const int EvtDoSkillSuccNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtCreateGadgetNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[4];
}
bool EvtCreateGadgetNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 305:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify::NONE;
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify::CMD_ID;
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify::ENET_CHANNEL_ID;
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify::ENET_IS_RELIABLE;
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify::IS_ALLOW_CLIENT;
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify::CmdId_MIN;
const EvtCreateGadgetNotify_CmdId EvtCreateGadgetNotify::CmdId_MAX;
const int EvtCreateGadgetNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtDestroyGadgetNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[5];
}
bool EvtDestroyGadgetNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 306:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify::NONE;
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify::CMD_ID;
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify::ENET_CHANNEL_ID;
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify::ENET_IS_RELIABLE;
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify::IS_ALLOW_CLIENT;
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify::CmdId_MIN;
const EvtDestroyGadgetNotify_CmdId EvtDestroyGadgetNotify::CmdId_MAX;
const int EvtDestroyGadgetNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtFaceToEntityNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[6];
}
bool EvtFaceToEntityNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 307:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify::NONE;
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify::CMD_ID;
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify::ENET_CHANNEL_ID;
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify::ENET_IS_RELIABLE;
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify::IS_ALLOW_CLIENT;
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify::CmdId_MIN;
const EvtFaceToEntityNotify_CmdId EvtFaceToEntityNotify::CmdId_MAX;
const int EvtFaceToEntityNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtFaceToDirNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[7];
}
bool EvtFaceToDirNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 308:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify::NONE;
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify::CMD_ID;
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify::ENET_CHANNEL_ID;
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify::ENET_IS_RELIABLE;
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify::IS_ALLOW_CLIENT;
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify::CmdId_MIN;
const EvtFaceToDirNotify_CmdId EvtFaceToDirNotify::CmdId_MAX;
const int EvtFaceToDirNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtCostStaminaNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[8];
}
bool EvtCostStaminaNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 309:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify::NONE;
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify::CMD_ID;
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify::ENET_CHANNEL_ID;
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify::ENET_IS_RELIABLE;
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify::IS_ALLOW_CLIENT;
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify::CmdId_MIN;
const EvtCostStaminaNotify_CmdId EvtCostStaminaNotify::CmdId_MAX;
const int EvtCostStaminaNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtSetAttackTargetNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[9];
}
bool EvtSetAttackTargetNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 310:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify::NONE;
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify::CMD_ID;
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify::ENET_CHANNEL_ID;
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify::ENET_IS_RELIABLE;
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify::IS_ALLOW_CLIENT;
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify::CmdId_MIN;
const EvtSetAttackTargetNotify_CmdId EvtSetAttackTargetNotify::CmdId_MAX;
const int EvtSetAttackTargetNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAnimatorStateChangedNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[10];
}
bool EvtAnimatorStateChangedNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 311:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify::NONE;
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify::CMD_ID;
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify::ENET_CHANNEL_ID;
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify::ENET_IS_RELIABLE;
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify::IS_ALLOW_CLIENT;
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify::CmdId_MIN;
const EvtAnimatorStateChangedNotify_CmdId EvtAnimatorStateChangedNotify::CmdId_MAX;
const int EvtAnimatorStateChangedNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtRushMoveNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[11];
}
bool EvtRushMoveNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 312:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtRushMoveNotify_CmdId EvtRushMoveNotify::NONE;
const EvtRushMoveNotify_CmdId EvtRushMoveNotify::CMD_ID;
const EvtRushMoveNotify_CmdId EvtRushMoveNotify::ENET_CHANNEL_ID;
const EvtRushMoveNotify_CmdId EvtRushMoveNotify::ENET_IS_RELIABLE;
const EvtRushMoveNotify_CmdId EvtRushMoveNotify::IS_ALLOW_CLIENT;
const EvtRushMoveNotify_CmdId EvtRushMoveNotify::CmdId_MIN;
const EvtRushMoveNotify_CmdId EvtRushMoveNotify::CmdId_MAX;
const int EvtRushMoveNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtBulletHitNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[12];
}
bool EvtBulletHitNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 313:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtBulletHitNotify_CmdId EvtBulletHitNotify::NONE;
const EvtBulletHitNotify_CmdId EvtBulletHitNotify::CMD_ID;
const EvtBulletHitNotify_CmdId EvtBulletHitNotify::ENET_CHANNEL_ID;
const EvtBulletHitNotify_CmdId EvtBulletHitNotify::ENET_IS_RELIABLE;
const EvtBulletHitNotify_CmdId EvtBulletHitNotify::IS_ALLOW_CLIENT;
const EvtBulletHitNotify_CmdId EvtBulletHitNotify::CmdId_MIN;
const EvtBulletHitNotify_CmdId EvtBulletHitNotify::CmdId_MAX;
const int EvtBulletHitNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtBulletDeactiveNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[13];
}
bool EvtBulletDeactiveNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 314:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify::NONE;
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify::CMD_ID;
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify::ENET_CHANNEL_ID;
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify::ENET_IS_RELIABLE;
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify::IS_ALLOW_CLIENT;
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify::CmdId_MIN;
const EvtBulletDeactiveNotify_CmdId EvtBulletDeactiveNotify::CmdId_MAX;
const int EvtBulletDeactiveNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtEntityStartDieEndNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[14];
}
bool EvtEntityStartDieEndNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 315:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify::NONE;
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify::CMD_ID;
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify::ENET_CHANNEL_ID;
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify::ENET_IS_RELIABLE;
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify::IS_ALLOW_CLIENT;
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify::CmdId_MIN;
const EvtEntityStartDieEndNotify_CmdId EvtEntityStartDieEndNotify::CmdId_MAX;
const int EvtEntityStartDieEndNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtBulletMoveNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[15];
}
bool EvtBulletMoveNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 322:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify::NONE;
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify::CMD_ID;
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify::ENET_CHANNEL_ID;
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify::ENET_IS_RELIABLE;
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify::IS_ALLOW_CLIENT;
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify::CmdId_MIN;
const EvtBulletMoveNotify_CmdId EvtBulletMoveNotify::CmdId_MAX;
const int EvtBulletMoveNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAvatarEnterFocusNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[16];
}
bool EvtAvatarEnterFocusNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 323:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify::NONE;
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify::CMD_ID;
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify::ENET_CHANNEL_ID;
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify::ENET_IS_RELIABLE;
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify::IS_ALLOW_CLIENT;
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify::CmdId_MIN;
const EvtAvatarEnterFocusNotify_CmdId EvtAvatarEnterFocusNotify::CmdId_MAX;
const int EvtAvatarEnterFocusNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAvatarExitFocusNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[17];
}
bool EvtAvatarExitFocusNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 324:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify::NONE;
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify::CMD_ID;
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify::ENET_CHANNEL_ID;
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify::ENET_IS_RELIABLE;
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify::IS_ALLOW_CLIENT;
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify::CmdId_MIN;
const EvtAvatarExitFocusNotify_CmdId EvtAvatarExitFocusNotify::CmdId_MAX;
const int EvtAvatarExitFocusNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAvatarUpdateFocusNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[18];
}
bool EvtAvatarUpdateFocusNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 325:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify::NONE;
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify::CMD_ID;
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify::ENET_CHANNEL_ID;
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify::ENET_IS_RELIABLE;
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify::IS_ALLOW_CLIENT;
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify::CmdId_MIN;
const EvtAvatarUpdateFocusNotify_CmdId EvtAvatarUpdateFocusNotify::CmdId_MAX;
const int EvtAvatarUpdateFocusNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EntityAuthorityChangeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[19];
}
bool EntityAuthorityChangeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 326:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify::NONE;
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify::CMD_ID;
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify::ENET_CHANNEL_ID;
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify::ENET_IS_RELIABLE;
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify::IS_ALLOW_CLIENT;
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify::CmdId_MIN;
const EntityAuthorityChangeNotify_CmdId EntityAuthorityChangeNotify::CmdId_MAX;
const int EntityAuthorityChangeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AvatarBuffAddNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[20];
}
bool AvatarBuffAddNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 327:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify::NONE;
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify::CMD_ID;
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify::ENET_CHANNEL_ID;
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify::ENET_IS_RELIABLE;
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify::IS_ALLOW_CLIENT;
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify::CmdId_MIN;
const AvatarBuffAddNotify_CmdId AvatarBuffAddNotify::CmdId_MAX;
const int AvatarBuffAddNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AvatarBuffDelNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[21];
}
bool AvatarBuffDelNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 328:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify::NONE;
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify::CMD_ID;
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify::ENET_CHANNEL_ID;
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify::ENET_IS_RELIABLE;
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify::IS_ALLOW_CLIENT;
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify::CmdId_MIN;
const AvatarBuffDelNotify_CmdId AvatarBuffDelNotify::CmdId_MAX;
const int AvatarBuffDelNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MonsterAlertChangeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[22];
}
bool MonsterAlertChangeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 329:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify::NONE;
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify::CMD_ID;
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify::ENET_CHANNEL_ID;
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify::ENET_IS_RELIABLE;
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify::IS_ALLOW_CLIENT;
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify::CmdId_MIN;
const MonsterAlertChangeNotify_CmdId MonsterAlertChangeNotify::CmdId_MAX;
const int MonsterAlertChangeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MonsterForceAlertNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[23];
}
bool MonsterForceAlertNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 330:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify::NONE;
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify::CMD_ID;
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify::ENET_CHANNEL_ID;
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify::ENET_IS_RELIABLE;
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify::CmdId_MIN;
const MonsterForceAlertNotify_CmdId MonsterForceAlertNotify::CmdId_MAX;
const int MonsterForceAlertNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AvatarEnterElementViewNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[24];
}
bool AvatarEnterElementViewNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 332:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify::NONE;
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify::CMD_ID;
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify::ENET_CHANNEL_ID;
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify::ENET_IS_RELIABLE;
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify::IS_ALLOW_CLIENT;
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify::CmdId_MIN;
const AvatarEnterElementViewNotify_CmdId AvatarEnterElementViewNotify::CmdId_MAX;
const int AvatarEnterElementViewNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* TriggerCreateGadgetToEquipPartNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[25];
}
bool TriggerCreateGadgetToEquipPartNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 333:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify::NONE;
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify::CMD_ID;
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify::ENET_CHANNEL_ID;
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify::ENET_IS_RELIABLE;
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify::IS_ALLOW_CLIENT;
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify::CmdId_MIN;
const TriggerCreateGadgetToEquipPartNotify_CmdId TriggerCreateGadgetToEquipPartNotify::CmdId_MAX;
const int TriggerCreateGadgetToEquipPartNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtEntityRenderersChangedNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[26];
}
bool EvtEntityRenderersChangedNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 334:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify::NONE;
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify::CMD_ID;
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify::ENET_CHANNEL_ID;
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify::ENET_IS_RELIABLE;
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify::IS_ALLOW_CLIENT;
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify::CmdId_MIN;
const EvtEntityRenderersChangedNotify_CmdId EvtEntityRenderersChangedNotify::CmdId_MAX;
const int EvtEntityRenderersChangedNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AnimatorForceSetAirMoveNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[27];
}
bool AnimatorForceSetAirMoveNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 335:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify::NONE;
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify::CMD_ID;
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify::ENET_CHANNEL_ID;
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify::ENET_IS_RELIABLE;
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify::IS_ALLOW_CLIENT;
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify::CmdId_MIN;
const AnimatorForceSetAirMoveNotify_CmdId AnimatorForceSetAirMoveNotify::CmdId_MAX;
const int AnimatorForceSetAirMoveNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAiSyncSkillCdNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[28];
}
bool EvtAiSyncSkillCdNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 336:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify::NONE;
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify::CMD_ID;
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify::ENET_CHANNEL_ID;
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify::ENET_IS_RELIABLE;
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify::IS_ALLOW_CLIENT;
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify::CmdId_MIN;
const EvtAiSyncSkillCdNotify_CmdId EvtAiSyncSkillCdNotify::CmdId_MAX;
const int EvtAiSyncSkillCdNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtBeingHitsCombineNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[29];
}
bool EvtBeingHitsCombineNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 337:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify::NONE;
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify::CMD_ID;
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify::ENET_CHANNEL_ID;
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify::ENET_IS_RELIABLE;
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify::IS_ALLOW_CLIENT;
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify::CmdId_MIN;
const EvtBeingHitsCombineNotify_CmdId EvtBeingHitsCombineNotify::CmdId_MAX;
const int EvtBeingHitsCombineNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAvatarSitDownNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[30];
}
bool EvtAvatarSitDownNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 341:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify::NONE;
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify::CMD_ID;
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify::ENET_CHANNEL_ID;
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify::ENET_IS_RELIABLE;
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify::IS_ALLOW_CLIENT;
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify::CmdId_MIN;
const EvtAvatarSitDownNotify_CmdId EvtAvatarSitDownNotify::CmdId_MAX;
const int EvtAvatarSitDownNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAvatarStandUpNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[31];
}
bool EvtAvatarStandUpNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 342:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify::NONE;
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify::CMD_ID;
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify::ENET_CHANNEL_ID;
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify::ENET_IS_RELIABLE;
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify::IS_ALLOW_CLIENT;
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify::CmdId_MIN;
const EvtAvatarStandUpNotify_CmdId EvtAvatarStandUpNotify::CmdId_MAX;
const int EvtAvatarStandUpNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CreateMassiveEntityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[32];
}
bool CreateMassiveEntityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 343:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq::NONE;
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq::CMD_ID;
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq::ENET_CHANNEL_ID;
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq::ENET_IS_RELIABLE;
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq::IS_ALLOW_CLIENT;
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq::CmdId_MIN;
const CreateMassiveEntityReq_CmdId CreateMassiveEntityReq::CmdId_MAX;
const int CreateMassiveEntityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CreateMassiveEntityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[33];
}
bool CreateMassiveEntityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 344:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp::NONE;
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp::CMD_ID;
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp::ENET_CHANNEL_ID;
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp::ENET_IS_RELIABLE;
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp::CmdId_MIN;
const CreateMassiveEntityRsp_CmdId CreateMassiveEntityRsp::CmdId_MAX;
const int CreateMassiveEntityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CreateMassiveEntityNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[34];
}
bool CreateMassiveEntityNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 345:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify::NONE;
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify::CMD_ID;
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify::ENET_CHANNEL_ID;
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify::ENET_IS_RELIABLE;
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify::CmdId_MIN;
const CreateMassiveEntityNotify_CmdId CreateMassiveEntityNotify::CmdId_MAX;
const int CreateMassiveEntityNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DestroyMassiveEntityNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[35];
}
bool DestroyMassiveEntityNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 346:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify::NONE;
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify::CMD_ID;
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify::ENET_CHANNEL_ID;
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify::ENET_IS_RELIABLE;
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify::IS_ALLOW_CLIENT;
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify::CmdId_MIN;
const DestroyMassiveEntityNotify_CmdId DestroyMassiveEntityNotify::CmdId_MAX;
const int DestroyMassiveEntityNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MassiveEntityStateChangedNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[36];
}
bool MassiveEntityStateChangedNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 347:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify::NONE;
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify::CMD_ID;
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify::ENET_CHANNEL_ID;
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify::ENET_IS_RELIABLE;
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify::IS_ALLOW_CLIENT;
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify::CmdId_MIN;
const MassiveEntityStateChangedNotify_CmdId MassiveEntityStateChangedNotify::CmdId_MAX;
const int MassiveEntityStateChangedNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SyncTeamEntityNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[37];
}
bool SyncTeamEntityNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 348:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify::NONE;
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify::CMD_ID;
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify::ENET_CHANNEL_ID;
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify::ENET_IS_RELIABLE;
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify::CmdId_MIN;
const SyncTeamEntityNotify_CmdId SyncTeamEntityNotify::CmdId_MAX;
const int SyncTeamEntityNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DelTeamEntityNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[38];
}
bool DelTeamEntityNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 349:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DelTeamEntityNotify_CmdId DelTeamEntityNotify::NONE;
const DelTeamEntityNotify_CmdId DelTeamEntityNotify::CMD_ID;
const DelTeamEntityNotify_CmdId DelTeamEntityNotify::ENET_CHANNEL_ID;
const DelTeamEntityNotify_CmdId DelTeamEntityNotify::ENET_IS_RELIABLE;
const DelTeamEntityNotify_CmdId DelTeamEntityNotify::CmdId_MIN;
const DelTeamEntityNotify_CmdId DelTeamEntityNotify::CmdId_MAX;
const int DelTeamEntityNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CombatInvocationsNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[39];
}
bool CombatInvocationsNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 350:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CombatInvocationsNotify_CmdId CombatInvocationsNotify::NONE;
const CombatInvocationsNotify_CmdId CombatInvocationsNotify::CMD_ID;
const CombatInvocationsNotify_CmdId CombatInvocationsNotify::ENET_CHANNEL_ID;
const CombatInvocationsNotify_CmdId CombatInvocationsNotify::ENET_IS_RELIABLE;
const CombatInvocationsNotify_CmdId CombatInvocationsNotify::IS_ALLOW_CLIENT;
const CombatInvocationsNotify_CmdId CombatInvocationsNotify::CmdId_MIN;
const CombatInvocationsNotify_CmdId CombatInvocationsNotify::CmdId_MAX;
const int CombatInvocationsNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ServerBuffChangeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[40];
}
bool ServerBuffChangeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 351:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify::NONE;
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify::CMD_ID;
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify::ENET_CHANNEL_ID;
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify::ENET_IS_RELIABLE;
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify::CmdId_MIN;
const ServerBuffChangeNotify_CmdId ServerBuffChangeNotify::CmdId_MAX;
const int ServerBuffChangeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ServerBuffChangeNotify_ServerBuffChangeType_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[41];
}
bool ServerBuffChangeNotify_ServerBuffChangeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify::ADD_SERVER_BUFF;
const ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify::DEL_SERVER_BUFF;
const ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify::ServerBuffChangeType_MIN;
const ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify::ServerBuffChangeType_MAX;
const int ServerBuffChangeNotify::ServerBuffChangeType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EvtAiSyncCombatThreatInfoNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[42];
}
bool EvtAiSyncCombatThreatInfoNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 352:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify::NONE;
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify::CMD_ID;
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify::ENET_CHANNEL_ID;
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify::ENET_IS_RELIABLE;
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify::IS_ALLOW_CLIENT;
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify::CmdId_MIN;
const EvtAiSyncCombatThreatInfoNotify_CmdId EvtAiSyncCombatThreatInfoNotify::CmdId_MAX;
const int EvtAiSyncCombatThreatInfoNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ForwardType_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[43];
}
bool ForwardType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HitColliderType_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[44];
}
bool HitColliderType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CombatTypeArgument_descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_enum_descriptors[45];
}
bool CombatTypeArgument_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HitCollision::kHitColliderTypeFieldNumber;
const int HitCollision::kHitBoxIndexFieldNumber;
const int HitCollision::kHitPointFieldNumber;
const int HitCollision::kHitDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HitCollision::HitCollision()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HitCollision)
}
HitCollision::HitCollision(const HitCollision& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hit_point()) {
    hit_point_ = new ::proto::Vector(*from.hit_point_);
  } else {
    hit_point_ = NULL;
  }
  if (from.has_hit_dir()) {
    hit_dir_ = new ::proto::Vector(*from.hit_dir_);
  } else {
    hit_dir_ = NULL;
  }
  ::memcpy(&hit_collider_type_, &from.hit_collider_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&hit_box_index_) -
    reinterpret_cast<char*>(&hit_collider_type_)) + sizeof(hit_box_index_));
  // @@protoc_insertion_point(copy_constructor:proto.HitCollision)
}

void HitCollision::SharedCtor() {
  ::memset(&hit_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hit_box_index_) -
      reinterpret_cast<char*>(&hit_point_)) + sizeof(hit_box_index_));
  _cached_size_ = 0;
}

HitCollision::~HitCollision() {
  // @@protoc_insertion_point(destructor:proto.HitCollision)
  SharedDtor();
}

void HitCollision::SharedDtor() {
  if (this != internal_default_instance()) delete hit_point_;
  if (this != internal_default_instance()) delete hit_dir_;
}

void HitCollision::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HitCollision::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HitCollision& HitCollision::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

HitCollision* HitCollision::New(::google::protobuf::Arena* arena) const {
  HitCollision* n = new HitCollision;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HitCollision::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HitCollision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hit_point_ != NULL) {
    delete hit_point_;
  }
  hit_point_ = NULL;
  if (GetArenaNoVirtual() == NULL && hit_dir_ != NULL) {
    delete hit_dir_;
  }
  hit_dir_ = NULL;
  ::memset(&hit_collider_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hit_box_index_) -
      reinterpret_cast<char*>(&hit_collider_type_)) + sizeof(hit_box_index_));
  _internal_metadata_.Clear();
}

bool HitCollision::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HitCollision)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.HitColliderType hit_collider_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hit_collider_type(static_cast< ::proto::HitColliderType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hit_box_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_box_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector hit_point = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hit_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector hit_dir = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hit_dir()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HitCollision)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HitCollision)
  return false;
#undef DO_
}

void HitCollision::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HitCollision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HitColliderType hit_collider_type = 1;
  if (this->hit_collider_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->hit_collider_type(), output);
  }

  // int32 hit_box_index = 2;
  if (this->hit_box_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hit_box_index(), output);
  }

  // .proto.Vector hit_point = 3;
  if (this->has_hit_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->hit_point_, output);
  }

  // .proto.Vector hit_dir = 4;
  if (this->has_hit_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->hit_dir_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HitCollision)
}

::google::protobuf::uint8* HitCollision::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HitCollision)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.HitColliderType hit_collider_type = 1;
  if (this->hit_collider_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->hit_collider_type(), target);
  }

  // int32 hit_box_index = 2;
  if (this->hit_box_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hit_box_index(), target);
  }

  // .proto.Vector hit_point = 3;
  if (this->has_hit_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->hit_point_, deterministic, target);
  }

  // .proto.Vector hit_dir = 4;
  if (this->has_hit_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->hit_dir_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HitCollision)
  return target;
}

size_t HitCollision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HitCollision)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector hit_point = 3;
  if (this->has_hit_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hit_point_);
  }

  // .proto.Vector hit_dir = 4;
  if (this->has_hit_dir()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hit_dir_);
  }

  // .proto.HitColliderType hit_collider_type = 1;
  if (this->hit_collider_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hit_collider_type());
  }

  // int32 hit_box_index = 2;
  if (this->hit_box_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hit_box_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HitCollision::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HitCollision)
  GOOGLE_DCHECK_NE(&from, this);
  const HitCollision* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HitCollision>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HitCollision)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HitCollision)
    MergeFrom(*source);
  }
}

void HitCollision::MergeFrom(const HitCollision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HitCollision)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hit_point()) {
    mutable_hit_point()->::proto::Vector::MergeFrom(from.hit_point());
  }
  if (from.has_hit_dir()) {
    mutable_hit_dir()->::proto::Vector::MergeFrom(from.hit_dir());
  }
  if (from.hit_collider_type() != 0) {
    set_hit_collider_type(from.hit_collider_type());
  }
  if (from.hit_box_index() != 0) {
    set_hit_box_index(from.hit_box_index());
  }
}

void HitCollision::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HitCollision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HitCollision::CopyFrom(const HitCollision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HitCollision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HitCollision::IsInitialized() const {
  return true;
}

void HitCollision::Swap(HitCollision* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HitCollision::InternalSwap(HitCollision* other) {
  using std::swap;
  swap(hit_point_, other->hit_point_);
  swap(hit_dir_, other->hit_dir_);
  swap(hit_collider_type_, other->hit_collider_type_);
  swap(hit_box_index_, other->hit_box_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HitCollision::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HitCollision

// .proto.HitColliderType hit_collider_type = 1;
void HitCollision::clear_hit_collider_type() {
  hit_collider_type_ = 0;
}
::proto::HitColliderType HitCollision::hit_collider_type() const {
  // @@protoc_insertion_point(field_get:proto.HitCollision.hit_collider_type)
  return static_cast< ::proto::HitColliderType >(hit_collider_type_);
}
void HitCollision::set_hit_collider_type(::proto::HitColliderType value) {
  
  hit_collider_type_ = value;
  // @@protoc_insertion_point(field_set:proto.HitCollision.hit_collider_type)
}

// int32 hit_box_index = 2;
void HitCollision::clear_hit_box_index() {
  hit_box_index_ = 0;
}
::google::protobuf::int32 HitCollision::hit_box_index() const {
  // @@protoc_insertion_point(field_get:proto.HitCollision.hit_box_index)
  return hit_box_index_;
}
void HitCollision::set_hit_box_index(::google::protobuf::int32 value) {
  
  hit_box_index_ = value;
  // @@protoc_insertion_point(field_set:proto.HitCollision.hit_box_index)
}

// .proto.Vector hit_point = 3;
bool HitCollision::has_hit_point() const {
  return this != internal_default_instance() && hit_point_ != NULL;
}
void HitCollision::clear_hit_point() {
  if (GetArenaNoVirtual() == NULL && hit_point_ != NULL) delete hit_point_;
  hit_point_ = NULL;
}
const ::proto::Vector& HitCollision::hit_point() const {
  const ::proto::Vector* p = hit_point_;
  // @@protoc_insertion_point(field_get:proto.HitCollision.hit_point)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* HitCollision::mutable_hit_point() {
  
  if (hit_point_ == NULL) {
    hit_point_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitCollision.hit_point)
  return hit_point_;
}
::proto::Vector* HitCollision::release_hit_point() {
  // @@protoc_insertion_point(field_release:proto.HitCollision.hit_point)
  
  ::proto::Vector* temp = hit_point_;
  hit_point_ = NULL;
  return temp;
}
void HitCollision::set_allocated_hit_point(::proto::Vector* hit_point) {
  delete hit_point_;
  hit_point_ = hit_point;
  if (hit_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitCollision.hit_point)
}

// .proto.Vector hit_dir = 4;
bool HitCollision::has_hit_dir() const {
  return this != internal_default_instance() && hit_dir_ != NULL;
}
void HitCollision::clear_hit_dir() {
  if (GetArenaNoVirtual() == NULL && hit_dir_ != NULL) delete hit_dir_;
  hit_dir_ = NULL;
}
const ::proto::Vector& HitCollision::hit_dir() const {
  const ::proto::Vector* p = hit_dir_;
  // @@protoc_insertion_point(field_get:proto.HitCollision.hit_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* HitCollision::mutable_hit_dir() {
  
  if (hit_dir_ == NULL) {
    hit_dir_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitCollision.hit_dir)
  return hit_dir_;
}
::proto::Vector* HitCollision::release_hit_dir() {
  // @@protoc_insertion_point(field_release:proto.HitCollision.hit_dir)
  
  ::proto::Vector* temp = hit_dir_;
  hit_dir_ = NULL;
  return temp;
}
void HitCollision::set_allocated_hit_dir(::proto::Vector* hit_dir) {
  delete hit_dir_;
  hit_dir_ = hit_dir;
  if (hit_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitCollision.hit_dir)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttackHitEffectResult::kHitEffLevelFieldNumber;
const int AttackHitEffectResult::kRetreatStrengthFieldNumber;
const int AttackHitEffectResult::kAirStrengthFieldNumber;
const int AttackHitEffectResult::kHitHaltTimeFieldNumber;
const int AttackHitEffectResult::kHitHaltTimeScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttackHitEffectResult::AttackHitEffectResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AttackHitEffectResult)
}
AttackHitEffectResult::AttackHitEffectResult(const AttackHitEffectResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hit_eff_level_, &from.hit_eff_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&hit_halt_time_scale_) -
    reinterpret_cast<char*>(&hit_eff_level_)) + sizeof(hit_halt_time_scale_));
  // @@protoc_insertion_point(copy_constructor:proto.AttackHitEffectResult)
}

void AttackHitEffectResult::SharedCtor() {
  ::memset(&hit_eff_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hit_halt_time_scale_) -
      reinterpret_cast<char*>(&hit_eff_level_)) + sizeof(hit_halt_time_scale_));
  _cached_size_ = 0;
}

AttackHitEffectResult::~AttackHitEffectResult() {
  // @@protoc_insertion_point(destructor:proto.AttackHitEffectResult)
  SharedDtor();
}

void AttackHitEffectResult::SharedDtor() {
}

void AttackHitEffectResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttackHitEffectResult::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttackHitEffectResult& AttackHitEffectResult::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AttackHitEffectResult* AttackHitEffectResult::New(::google::protobuf::Arena* arena) const {
  AttackHitEffectResult* n = new AttackHitEffectResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttackHitEffectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AttackHitEffectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hit_eff_level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hit_halt_time_scale_) -
      reinterpret_cast<char*>(&hit_eff_level_)) + sizeof(hit_halt_time_scale_));
  _internal_metadata_.Clear();
}

bool AttackHitEffectResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AttackHitEffectResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 hit_eff_level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hit_eff_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float retreat_strength = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &retreat_strength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float air_strength = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &air_strength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float hit_halt_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hit_halt_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float hit_halt_time_scale = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hit_halt_time_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AttackHitEffectResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AttackHitEffectResult)
  return false;
#undef DO_
}

void AttackHitEffectResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AttackHitEffectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 hit_eff_level = 1;
  if (this->hit_eff_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hit_eff_level(), output);
  }

  // float retreat_strength = 2;
  if (this->retreat_strength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->retreat_strength(), output);
  }

  // float air_strength = 3;
  if (this->air_strength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->air_strength(), output);
  }

  // float hit_halt_time = 4;
  if (this->hit_halt_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->hit_halt_time(), output);
  }

  // float hit_halt_time_scale = 5;
  if (this->hit_halt_time_scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->hit_halt_time_scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AttackHitEffectResult)
}

::google::protobuf::uint8* AttackHitEffectResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AttackHitEffectResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 hit_eff_level = 1;
  if (this->hit_eff_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hit_eff_level(), target);
  }

  // float retreat_strength = 2;
  if (this->retreat_strength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->retreat_strength(), target);
  }

  // float air_strength = 3;
  if (this->air_strength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->air_strength(), target);
  }

  // float hit_halt_time = 4;
  if (this->hit_halt_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->hit_halt_time(), target);
  }

  // float hit_halt_time_scale = 5;
  if (this->hit_halt_time_scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->hit_halt_time_scale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AttackHitEffectResult)
  return target;
}

size_t AttackHitEffectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AttackHitEffectResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 hit_eff_level = 1;
  if (this->hit_eff_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hit_eff_level());
  }

  // float retreat_strength = 2;
  if (this->retreat_strength() != 0) {
    total_size += 1 + 4;
  }

  // float air_strength = 3;
  if (this->air_strength() != 0) {
    total_size += 1 + 4;
  }

  // float hit_halt_time = 4;
  if (this->hit_halt_time() != 0) {
    total_size += 1 + 4;
  }

  // float hit_halt_time_scale = 5;
  if (this->hit_halt_time_scale() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttackHitEffectResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AttackHitEffectResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AttackHitEffectResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttackHitEffectResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AttackHitEffectResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AttackHitEffectResult)
    MergeFrom(*source);
  }
}

void AttackHitEffectResult::MergeFrom(const AttackHitEffectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AttackHitEffectResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hit_eff_level() != 0) {
    set_hit_eff_level(from.hit_eff_level());
  }
  if (from.retreat_strength() != 0) {
    set_retreat_strength(from.retreat_strength());
  }
  if (from.air_strength() != 0) {
    set_air_strength(from.air_strength());
  }
  if (from.hit_halt_time() != 0) {
    set_hit_halt_time(from.hit_halt_time());
  }
  if (from.hit_halt_time_scale() != 0) {
    set_hit_halt_time_scale(from.hit_halt_time_scale());
  }
}

void AttackHitEffectResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AttackHitEffectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttackHitEffectResult::CopyFrom(const AttackHitEffectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AttackHitEffectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackHitEffectResult::IsInitialized() const {
  return true;
}

void AttackHitEffectResult::Swap(AttackHitEffectResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttackHitEffectResult::InternalSwap(AttackHitEffectResult* other) {
  using std::swap;
  swap(hit_eff_level_, other->hit_eff_level_);
  swap(retreat_strength_, other->retreat_strength_);
  swap(air_strength_, other->air_strength_);
  swap(hit_halt_time_, other->hit_halt_time_);
  swap(hit_halt_time_scale_, other->hit_halt_time_scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttackHitEffectResult::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttackHitEffectResult

// uint32 hit_eff_level = 1;
void AttackHitEffectResult::clear_hit_eff_level() {
  hit_eff_level_ = 0u;
}
::google::protobuf::uint32 AttackHitEffectResult::hit_eff_level() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.hit_eff_level)
  return hit_eff_level_;
}
void AttackHitEffectResult::set_hit_eff_level(::google::protobuf::uint32 value) {
  
  hit_eff_level_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.hit_eff_level)
}

// float retreat_strength = 2;
void AttackHitEffectResult::clear_retreat_strength() {
  retreat_strength_ = 0;
}
float AttackHitEffectResult::retreat_strength() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.retreat_strength)
  return retreat_strength_;
}
void AttackHitEffectResult::set_retreat_strength(float value) {
  
  retreat_strength_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.retreat_strength)
}

// float air_strength = 3;
void AttackHitEffectResult::clear_air_strength() {
  air_strength_ = 0;
}
float AttackHitEffectResult::air_strength() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.air_strength)
  return air_strength_;
}
void AttackHitEffectResult::set_air_strength(float value) {
  
  air_strength_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.air_strength)
}

// float hit_halt_time = 4;
void AttackHitEffectResult::clear_hit_halt_time() {
  hit_halt_time_ = 0;
}
float AttackHitEffectResult::hit_halt_time() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.hit_halt_time)
  return hit_halt_time_;
}
void AttackHitEffectResult::set_hit_halt_time(float value) {
  
  hit_halt_time_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.hit_halt_time)
}

// float hit_halt_time_scale = 5;
void AttackHitEffectResult::clear_hit_halt_time_scale() {
  hit_halt_time_scale_ = 0;
}
float AttackHitEffectResult::hit_halt_time_scale() const {
  // @@protoc_insertion_point(field_get:proto.AttackHitEffectResult.hit_halt_time_scale)
  return hit_halt_time_scale_;
}
void AttackHitEffectResult::set_hit_halt_time_scale(float value) {
  
  hit_halt_time_scale_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackHitEffectResult.hit_halt_time_scale)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityIdentifier::kInstancedAbilityIdFieldNumber;
const int AbilityIdentifier::kAbilityCasterIdFieldNumber;
const int AbilityIdentifier::kLocalIdFieldNumber;
const int AbilityIdentifier::kInstancedModifierIdFieldNumber;
const int AbilityIdentifier::kModifierOwnerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityIdentifier::AbilityIdentifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityIdentifier)
}
AbilityIdentifier::AbilityIdentifier(const AbilityIdentifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&instanced_ability_id_, &from.instanced_ability_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&modifier_owner_id_) -
    reinterpret_cast<char*>(&instanced_ability_id_)) + sizeof(modifier_owner_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AbilityIdentifier)
}

void AbilityIdentifier::SharedCtor() {
  ::memset(&instanced_ability_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modifier_owner_id_) -
      reinterpret_cast<char*>(&instanced_ability_id_)) + sizeof(modifier_owner_id_));
  _cached_size_ = 0;
}

AbilityIdentifier::~AbilityIdentifier() {
  // @@protoc_insertion_point(destructor:proto.AbilityIdentifier)
  SharedDtor();
}

void AbilityIdentifier::SharedDtor() {
}

void AbilityIdentifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityIdentifier::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityIdentifier& AbilityIdentifier::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityIdentifier* AbilityIdentifier::New(::google::protobuf::Arena* arena) const {
  AbilityIdentifier* n = new AbilityIdentifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityIdentifier::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&instanced_ability_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&modifier_owner_id_) -
      reinterpret_cast<char*>(&instanced_ability_id_)) + sizeof(modifier_owner_id_));
  _internal_metadata_.Clear();
}

bool AbilityIdentifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityIdentifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 instanced_ability_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instanced_ability_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ability_caster_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_caster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 local_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &local_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 instanced_modifier_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &instanced_modifier_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 modifier_owner_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &modifier_owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityIdentifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityIdentifier)
  return false;
#undef DO_
}

void AbilityIdentifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 instanced_ability_id = 1;
  if (this->instanced_ability_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->instanced_ability_id(), output);
  }

  // uint32 ability_caster_id = 2;
  if (this->ability_caster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ability_caster_id(), output);
  }

  // int32 local_id = 3;
  if (this->local_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->local_id(), output);
  }

  // uint32 instanced_modifier_id = 4;
  if (this->instanced_modifier_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->instanced_modifier_id(), output);
  }

  // uint32 modifier_owner_id = 5;
  if (this->modifier_owner_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->modifier_owner_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityIdentifier)
}

::google::protobuf::uint8* AbilityIdentifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityIdentifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 instanced_ability_id = 1;
  if (this->instanced_ability_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->instanced_ability_id(), target);
  }

  // uint32 ability_caster_id = 2;
  if (this->ability_caster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ability_caster_id(), target);
  }

  // int32 local_id = 3;
  if (this->local_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->local_id(), target);
  }

  // uint32 instanced_modifier_id = 4;
  if (this->instanced_modifier_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->instanced_modifier_id(), target);
  }

  // uint32 modifier_owner_id = 5;
  if (this->modifier_owner_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->modifier_owner_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityIdentifier)
  return target;
}

size_t AbilityIdentifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityIdentifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 instanced_ability_id = 1;
  if (this->instanced_ability_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instanced_ability_id());
  }

  // uint32 ability_caster_id = 2;
  if (this->ability_caster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ability_caster_id());
  }

  // int32 local_id = 3;
  if (this->local_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->local_id());
  }

  // uint32 instanced_modifier_id = 4;
  if (this->instanced_modifier_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->instanced_modifier_id());
  }

  // uint32 modifier_owner_id = 5;
  if (this->modifier_owner_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->modifier_owner_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityIdentifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityIdentifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityIdentifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityIdentifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityIdentifier)
    MergeFrom(*source);
  }
}

void AbilityIdentifier::MergeFrom(const AbilityIdentifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityIdentifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.instanced_ability_id() != 0) {
    set_instanced_ability_id(from.instanced_ability_id());
  }
  if (from.ability_caster_id() != 0) {
    set_ability_caster_id(from.ability_caster_id());
  }
  if (from.local_id() != 0) {
    set_local_id(from.local_id());
  }
  if (from.instanced_modifier_id() != 0) {
    set_instanced_modifier_id(from.instanced_modifier_id());
  }
  if (from.modifier_owner_id() != 0) {
    set_modifier_owner_id(from.modifier_owner_id());
  }
}

void AbilityIdentifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityIdentifier::CopyFrom(const AbilityIdentifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityIdentifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityIdentifier::IsInitialized() const {
  return true;
}

void AbilityIdentifier::Swap(AbilityIdentifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityIdentifier::InternalSwap(AbilityIdentifier* other) {
  using std::swap;
  swap(instanced_ability_id_, other->instanced_ability_id_);
  swap(ability_caster_id_, other->ability_caster_id_);
  swap(local_id_, other->local_id_);
  swap(instanced_modifier_id_, other->instanced_modifier_id_);
  swap(modifier_owner_id_, other->modifier_owner_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityIdentifier::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityIdentifier

// uint32 instanced_ability_id = 1;
void AbilityIdentifier::clear_instanced_ability_id() {
  instanced_ability_id_ = 0u;
}
::google::protobuf::uint32 AbilityIdentifier::instanced_ability_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.instanced_ability_id)
  return instanced_ability_id_;
}
void AbilityIdentifier::set_instanced_ability_id(::google::protobuf::uint32 value) {
  
  instanced_ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.instanced_ability_id)
}

// uint32 ability_caster_id = 2;
void AbilityIdentifier::clear_ability_caster_id() {
  ability_caster_id_ = 0u;
}
::google::protobuf::uint32 AbilityIdentifier::ability_caster_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.ability_caster_id)
  return ability_caster_id_;
}
void AbilityIdentifier::set_ability_caster_id(::google::protobuf::uint32 value) {
  
  ability_caster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.ability_caster_id)
}

// int32 local_id = 3;
void AbilityIdentifier::clear_local_id() {
  local_id_ = 0;
}
::google::protobuf::int32 AbilityIdentifier::local_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.local_id)
  return local_id_;
}
void AbilityIdentifier::set_local_id(::google::protobuf::int32 value) {
  
  local_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.local_id)
}

// uint32 instanced_modifier_id = 4;
void AbilityIdentifier::clear_instanced_modifier_id() {
  instanced_modifier_id_ = 0u;
}
::google::protobuf::uint32 AbilityIdentifier::instanced_modifier_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.instanced_modifier_id)
  return instanced_modifier_id_;
}
void AbilityIdentifier::set_instanced_modifier_id(::google::protobuf::uint32 value) {
  
  instanced_modifier_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.instanced_modifier_id)
}

// uint32 modifier_owner_id = 5;
void AbilityIdentifier::clear_modifier_owner_id() {
  modifier_owner_id_ = 0u;
}
::google::protobuf::uint32 AbilityIdentifier::modifier_owner_id() const {
  // @@protoc_insertion_point(field_get:proto.AbilityIdentifier.modifier_owner_id)
  return modifier_owner_id_;
}
void AbilityIdentifier::set_modifier_owner_id(::google::protobuf::uint32 value) {
  
  modifier_owner_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityIdentifier.modifier_owner_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttackResult::kAttackerIdFieldNumber;
const int AttackResult::kDefenseIdFieldNumber;
const int AttackResult::kAnimEventIdFieldNumber;
const int AttackResult::kAbilityIdentifierFieldNumber;
const int AttackResult::kAttackTagFieldNumber;
const int AttackResult::kDamageFieldNumber;
const int AttackResult::kIsCritFieldNumber;
const int AttackResult::kHitCollisionFieldNumber;
const int AttackResult::kHitPosTypeFieldNumber;
const int AttackResult::kEndureBreakFieldNumber;
const int AttackResult::kResolvedDirFieldNumber;
const int AttackResult::kHitRetreatAngleCompatFieldNumber;
const int AttackResult::kHitEffResultFieldNumber;
const int AttackResult::kElementTypeFieldNumber;
const int AttackResult::kDamagePercentageFieldNumber;
const int AttackResult::kDamageExtraFieldNumber;
const int AttackResult::kBonusCriticalFieldNumber;
const int AttackResult::kBonusCriticalHurtFieldNumber;
const int AttackResult::kUseGadgetDamageActionFieldNumber;
const int AttackResult::kGadgetDamageActionIdxFieldNumber;
const int AttackResult::kStrikeTypeFieldNumber;
const int AttackResult::kIsResistTextFieldNumber;
const int AttackResult::kCriticalRandFieldNumber;
const int AttackResult::kElementAmplifyRateFieldNumber;
const int AttackResult::kAttenuationTagFieldNumber;
const int AttackResult::kDamageShieldFieldNumber;
const int AttackResult::kMuteElementHurtFieldNumber;
const int AttackResult::kTrueDamageFieldNumber;
const int AttackResult::kAttenuationGroupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttackResult::AttackResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AttackResult)
}
AttackResult::AttackResult(const AttackResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  anim_event_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.anim_event_id().size() > 0) {
    anim_event_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anim_event_id_);
  }
  attack_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attack_tag().size() > 0) {
    attack_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attack_tag_);
  }
  attenuation_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attenuation_tag().size() > 0) {
    attenuation_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attenuation_tag_);
  }
  attenuation_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.attenuation_group().size() > 0) {
    attenuation_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attenuation_group_);
  }
  if (from.has_ability_identifier()) {
    ability_identifier_ = new ::proto::AbilityIdentifier(*from.ability_identifier_);
  } else {
    ability_identifier_ = NULL;
  }
  if (from.has_hit_collision()) {
    hit_collision_ = new ::proto::HitCollision(*from.hit_collision_);
  } else {
    hit_collision_ = NULL;
  }
  if (from.has_resolved_dir()) {
    resolved_dir_ = new ::proto::Vector(*from.resolved_dir_);
  } else {
    resolved_dir_ = NULL;
  }
  if (from.has_hit_eff_result()) {
    hit_eff_result_ = new ::proto::AttackHitEffectResult(*from.hit_eff_result_);
  } else {
    hit_eff_result_ = NULL;
  }
  ::memcpy(&attacker_id_, &from.attacker_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&true_damage_) -
    reinterpret_cast<char*>(&attacker_id_)) + sizeof(true_damage_));
  // @@protoc_insertion_point(copy_constructor:proto.AttackResult)
}

void AttackResult::SharedCtor() {
  anim_event_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attack_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attenuation_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attenuation_group_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ability_identifier_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&true_damage_) -
      reinterpret_cast<char*>(&ability_identifier_)) + sizeof(true_damage_));
  _cached_size_ = 0;
}

AttackResult::~AttackResult() {
  // @@protoc_insertion_point(destructor:proto.AttackResult)
  SharedDtor();
}

void AttackResult::SharedDtor() {
  anim_event_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attack_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attenuation_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attenuation_group_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ability_identifier_;
  if (this != internal_default_instance()) delete hit_collision_;
  if (this != internal_default_instance()) delete resolved_dir_;
  if (this != internal_default_instance()) delete hit_eff_result_;
}

void AttackResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttackResult::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttackResult& AttackResult::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AttackResult* AttackResult::New(::google::protobuf::Arena* arena) const {
  AttackResult* n = new AttackResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttackResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AttackResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  anim_event_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attack_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attenuation_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attenuation_group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ability_identifier_ != NULL) {
    delete ability_identifier_;
  }
  ability_identifier_ = NULL;
  if (GetArenaNoVirtual() == NULL && hit_collision_ != NULL) {
    delete hit_collision_;
  }
  hit_collision_ = NULL;
  if (GetArenaNoVirtual() == NULL && resolved_dir_ != NULL) {
    delete resolved_dir_;
  }
  resolved_dir_ = NULL;
  if (GetArenaNoVirtual() == NULL && hit_eff_result_ != NULL) {
    delete hit_eff_result_;
  }
  hit_eff_result_ = NULL;
  ::memset(&attacker_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&true_damage_) -
      reinterpret_cast<char*>(&attacker_id_)) + sizeof(true_damage_));
  _internal_metadata_.Clear();
}

bool AttackResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AttackResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 attacker_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attacker_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 defense_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &defense_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string anim_event_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anim_event_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->anim_event_id().data(), static_cast<int>(this->anim_event_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AttackResult.anim_event_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilityIdentifier ability_identifier = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_identifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attack_tag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attack_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attack_tag().data(), static_cast<int>(this->attack_tag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AttackResult.attack_tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float damage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_crit = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_crit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HitCollision hit_collision = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hit_collision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hit_pos_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hit_pos_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 endure_break = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &endure_break_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector resolved_dir = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resolved_dir()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hit_retreat_angle_compat = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_retreat_angle_compat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AttackHitEffectResult hit_eff_result = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hit_eff_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 element_type = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &element_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float damage_percentage = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u /* 125 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &damage_percentage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float damage_extra = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(133u /* 133 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &damage_extra_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bonus_critical = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(141u /* 141 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bonus_critical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float bonus_critical_hurt = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 149 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bonus_critical_hurt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_gadget_damage_action = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_gadget_damage_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_damage_action_idx = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_damage_action_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 strike_type = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strike_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_resist_text = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_resist_text_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float critical_rand = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(189u /* 189 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &critical_rand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float element_amplify_rate = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &element_amplify_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attenuation_tag = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attenuation_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attenuation_tag().data(), static_cast<int>(this->attenuation_tag().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AttackResult.attenuation_tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float damage_shield = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(213u /* 213 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &damage_shield_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool mute_element_hurt = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mute_element_hurt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool true_damage = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &true_damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string attenuation_group = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attenuation_group()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->attenuation_group().data(), static_cast<int>(this->attenuation_group().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AttackResult.attenuation_group"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AttackResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AttackResult)
  return false;
#undef DO_
}

void AttackResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AttackResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 attacker_id = 1;
  if (this->attacker_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->attacker_id(), output);
  }

  // uint32 defense_id = 2;
  if (this->defense_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->defense_id(), output);
  }

  // string anim_event_id = 3;
  if (this->anim_event_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anim_event_id().data(), static_cast<int>(this->anim_event_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AttackResult.anim_event_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->anim_event_id(), output);
  }

  // .proto.AbilityIdentifier ability_identifier = 4;
  if (this->has_ability_identifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->ability_identifier_, output);
  }

  // string attack_tag = 5;
  if (this->attack_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attack_tag().data(), static_cast<int>(this->attack_tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AttackResult.attack_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->attack_tag(), output);
  }

  // float damage = 6;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->damage(), output);
  }

  // bool is_crit = 7;
  if (this->is_crit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_crit(), output);
  }

  // .proto.HitCollision hit_collision = 8;
  if (this->has_hit_collision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->hit_collision_, output);
  }

  // uint32 hit_pos_type = 9;
  if (this->hit_pos_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hit_pos_type(), output);
  }

  // uint32 endure_break = 10;
  if (this->endure_break() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->endure_break(), output);
  }

  // .proto.Vector resolved_dir = 11;
  if (this->has_resolved_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->resolved_dir_, output);
  }

  // int32 hit_retreat_angle_compat = 12;
  if (this->hit_retreat_angle_compat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->hit_retreat_angle_compat(), output);
  }

  // .proto.AttackHitEffectResult hit_eff_result = 13;
  if (this->has_hit_eff_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->hit_eff_result_, output);
  }

  // uint32 element_type = 14;
  if (this->element_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->element_type(), output);
  }

  // float damage_percentage = 15;
  if (this->damage_percentage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->damage_percentage(), output);
  }

  // float damage_extra = 16;
  if (this->damage_extra() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(16, this->damage_extra(), output);
  }

  // float bonus_critical = 17;
  if (this->bonus_critical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(17, this->bonus_critical(), output);
  }

  // float bonus_critical_hurt = 18;
  if (this->bonus_critical_hurt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(18, this->bonus_critical_hurt(), output);
  }

  // bool use_gadget_damage_action = 19;
  if (this->use_gadget_damage_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->use_gadget_damage_action(), output);
  }

  // uint32 gadget_damage_action_idx = 20;
  if (this->gadget_damage_action_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->gadget_damage_action_idx(), output);
  }

  // uint32 strike_type = 21;
  if (this->strike_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->strike_type(), output);
  }

  // bool is_resist_text = 22;
  if (this->is_resist_text() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(22, this->is_resist_text(), output);
  }

  // float critical_rand = 23;
  if (this->critical_rand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(23, this->critical_rand(), output);
  }

  // float element_amplify_rate = 24;
  if (this->element_amplify_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(24, this->element_amplify_rate(), output);
  }

  // string attenuation_tag = 25;
  if (this->attenuation_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attenuation_tag().data(), static_cast<int>(this->attenuation_tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AttackResult.attenuation_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->attenuation_tag(), output);
  }

  // float damage_shield = 26;
  if (this->damage_shield() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(26, this->damage_shield(), output);
  }

  // bool mute_element_hurt = 27;
  if (this->mute_element_hurt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->mute_element_hurt(), output);
  }

  // bool true_damage = 28;
  if (this->true_damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(28, this->true_damage(), output);
  }

  // string attenuation_group = 29;
  if (this->attenuation_group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attenuation_group().data(), static_cast<int>(this->attenuation_group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AttackResult.attenuation_group");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->attenuation_group(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AttackResult)
}

::google::protobuf::uint8* AttackResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AttackResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 attacker_id = 1;
  if (this->attacker_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->attacker_id(), target);
  }

  // uint32 defense_id = 2;
  if (this->defense_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->defense_id(), target);
  }

  // string anim_event_id = 3;
  if (this->anim_event_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->anim_event_id().data(), static_cast<int>(this->anim_event_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AttackResult.anim_event_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->anim_event_id(), target);
  }

  // .proto.AbilityIdentifier ability_identifier = 4;
  if (this->has_ability_identifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->ability_identifier_, deterministic, target);
  }

  // string attack_tag = 5;
  if (this->attack_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attack_tag().data(), static_cast<int>(this->attack_tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AttackResult.attack_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->attack_tag(), target);
  }

  // float damage = 6;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->damage(), target);
  }

  // bool is_crit = 7;
  if (this->is_crit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_crit(), target);
  }

  // .proto.HitCollision hit_collision = 8;
  if (this->has_hit_collision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->hit_collision_, deterministic, target);
  }

  // uint32 hit_pos_type = 9;
  if (this->hit_pos_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hit_pos_type(), target);
  }

  // uint32 endure_break = 10;
  if (this->endure_break() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->endure_break(), target);
  }

  // .proto.Vector resolved_dir = 11;
  if (this->has_resolved_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->resolved_dir_, deterministic, target);
  }

  // int32 hit_retreat_angle_compat = 12;
  if (this->hit_retreat_angle_compat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->hit_retreat_angle_compat(), target);
  }

  // .proto.AttackHitEffectResult hit_eff_result = 13;
  if (this->has_hit_eff_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->hit_eff_result_, deterministic, target);
  }

  // uint32 element_type = 14;
  if (this->element_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->element_type(), target);
  }

  // float damage_percentage = 15;
  if (this->damage_percentage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->damage_percentage(), target);
  }

  // float damage_extra = 16;
  if (this->damage_extra() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(16, this->damage_extra(), target);
  }

  // float bonus_critical = 17;
  if (this->bonus_critical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(17, this->bonus_critical(), target);
  }

  // float bonus_critical_hurt = 18;
  if (this->bonus_critical_hurt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(18, this->bonus_critical_hurt(), target);
  }

  // bool use_gadget_damage_action = 19;
  if (this->use_gadget_damage_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->use_gadget_damage_action(), target);
  }

  // uint32 gadget_damage_action_idx = 20;
  if (this->gadget_damage_action_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->gadget_damage_action_idx(), target);
  }

  // uint32 strike_type = 21;
  if (this->strike_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->strike_type(), target);
  }

  // bool is_resist_text = 22;
  if (this->is_resist_text() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(22, this->is_resist_text(), target);
  }

  // float critical_rand = 23;
  if (this->critical_rand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(23, this->critical_rand(), target);
  }

  // float element_amplify_rate = 24;
  if (this->element_amplify_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(24, this->element_amplify_rate(), target);
  }

  // string attenuation_tag = 25;
  if (this->attenuation_tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attenuation_tag().data(), static_cast<int>(this->attenuation_tag().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AttackResult.attenuation_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->attenuation_tag(), target);
  }

  // float damage_shield = 26;
  if (this->damage_shield() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(26, this->damage_shield(), target);
  }

  // bool mute_element_hurt = 27;
  if (this->mute_element_hurt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->mute_element_hurt(), target);
  }

  // bool true_damage = 28;
  if (this->true_damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(28, this->true_damage(), target);
  }

  // string attenuation_group = 29;
  if (this->attenuation_group().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->attenuation_group().data(), static_cast<int>(this->attenuation_group().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AttackResult.attenuation_group");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->attenuation_group(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AttackResult)
  return target;
}

size_t AttackResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AttackResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string anim_event_id = 3;
  if (this->anim_event_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->anim_event_id());
  }

  // string attack_tag = 5;
  if (this->attack_tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attack_tag());
  }

  // string attenuation_tag = 25;
  if (this->attenuation_tag().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attenuation_tag());
  }

  // string attenuation_group = 29;
  if (this->attenuation_group().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->attenuation_group());
  }

  // .proto.AbilityIdentifier ability_identifier = 4;
  if (this->has_ability_identifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ability_identifier_);
  }

  // .proto.HitCollision hit_collision = 8;
  if (this->has_hit_collision()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hit_collision_);
  }

  // .proto.Vector resolved_dir = 11;
  if (this->has_resolved_dir()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->resolved_dir_);
  }

  // .proto.AttackHitEffectResult hit_eff_result = 13;
  if (this->has_hit_eff_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hit_eff_result_);
  }

  // uint32 attacker_id = 1;
  if (this->attacker_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attacker_id());
  }

  // uint32 defense_id = 2;
  if (this->defense_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->defense_id());
  }

  // float damage = 6;
  if (this->damage() != 0) {
    total_size += 1 + 4;
  }

  // uint32 hit_pos_type = 9;
  if (this->hit_pos_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hit_pos_type());
  }

  // uint32 endure_break = 10;
  if (this->endure_break() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->endure_break());
  }

  // int32 hit_retreat_angle_compat = 12;
  if (this->hit_retreat_angle_compat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hit_retreat_angle_compat());
  }

  // uint32 element_type = 14;
  if (this->element_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->element_type());
  }

  // float damage_percentage = 15;
  if (this->damage_percentage() != 0) {
    total_size += 1 + 4;
  }

  // float damage_extra = 16;
  if (this->damage_extra() != 0) {
    total_size += 2 + 4;
  }

  // float bonus_critical = 17;
  if (this->bonus_critical() != 0) {
    total_size += 2 + 4;
  }

  // float bonus_critical_hurt = 18;
  if (this->bonus_critical_hurt() != 0) {
    total_size += 2 + 4;
  }

  // bool is_crit = 7;
  if (this->is_crit() != 0) {
    total_size += 1 + 1;
  }

  // bool use_gadget_damage_action = 19;
  if (this->use_gadget_damage_action() != 0) {
    total_size += 2 + 1;
  }

  // bool is_resist_text = 22;
  if (this->is_resist_text() != 0) {
    total_size += 2 + 1;
  }

  // bool mute_element_hurt = 27;
  if (this->mute_element_hurt() != 0) {
    total_size += 2 + 1;
  }

  // uint32 gadget_damage_action_idx = 20;
  if (this->gadget_damage_action_idx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_damage_action_idx());
  }

  // uint32 strike_type = 21;
  if (this->strike_type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->strike_type());
  }

  // float critical_rand = 23;
  if (this->critical_rand() != 0) {
    total_size += 2 + 4;
  }

  // float element_amplify_rate = 24;
  if (this->element_amplify_rate() != 0) {
    total_size += 2 + 4;
  }

  // float damage_shield = 26;
  if (this->damage_shield() != 0) {
    total_size += 2 + 4;
  }

  // bool true_damage = 28;
  if (this->true_damage() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttackResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AttackResult)
  GOOGLE_DCHECK_NE(&from, this);
  const AttackResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttackResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AttackResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AttackResult)
    MergeFrom(*source);
  }
}

void AttackResult::MergeFrom(const AttackResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AttackResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.anim_event_id().size() > 0) {

    anim_event_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anim_event_id_);
  }
  if (from.attack_tag().size() > 0) {

    attack_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attack_tag_);
  }
  if (from.attenuation_tag().size() > 0) {

    attenuation_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attenuation_tag_);
  }
  if (from.attenuation_group().size() > 0) {

    attenuation_group_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attenuation_group_);
  }
  if (from.has_ability_identifier()) {
    mutable_ability_identifier()->::proto::AbilityIdentifier::MergeFrom(from.ability_identifier());
  }
  if (from.has_hit_collision()) {
    mutable_hit_collision()->::proto::HitCollision::MergeFrom(from.hit_collision());
  }
  if (from.has_resolved_dir()) {
    mutable_resolved_dir()->::proto::Vector::MergeFrom(from.resolved_dir());
  }
  if (from.has_hit_eff_result()) {
    mutable_hit_eff_result()->::proto::AttackHitEffectResult::MergeFrom(from.hit_eff_result());
  }
  if (from.attacker_id() != 0) {
    set_attacker_id(from.attacker_id());
  }
  if (from.defense_id() != 0) {
    set_defense_id(from.defense_id());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.hit_pos_type() != 0) {
    set_hit_pos_type(from.hit_pos_type());
  }
  if (from.endure_break() != 0) {
    set_endure_break(from.endure_break());
  }
  if (from.hit_retreat_angle_compat() != 0) {
    set_hit_retreat_angle_compat(from.hit_retreat_angle_compat());
  }
  if (from.element_type() != 0) {
    set_element_type(from.element_type());
  }
  if (from.damage_percentage() != 0) {
    set_damage_percentage(from.damage_percentage());
  }
  if (from.damage_extra() != 0) {
    set_damage_extra(from.damage_extra());
  }
  if (from.bonus_critical() != 0) {
    set_bonus_critical(from.bonus_critical());
  }
  if (from.bonus_critical_hurt() != 0) {
    set_bonus_critical_hurt(from.bonus_critical_hurt());
  }
  if (from.is_crit() != 0) {
    set_is_crit(from.is_crit());
  }
  if (from.use_gadget_damage_action() != 0) {
    set_use_gadget_damage_action(from.use_gadget_damage_action());
  }
  if (from.is_resist_text() != 0) {
    set_is_resist_text(from.is_resist_text());
  }
  if (from.mute_element_hurt() != 0) {
    set_mute_element_hurt(from.mute_element_hurt());
  }
  if (from.gadget_damage_action_idx() != 0) {
    set_gadget_damage_action_idx(from.gadget_damage_action_idx());
  }
  if (from.strike_type() != 0) {
    set_strike_type(from.strike_type());
  }
  if (from.critical_rand() != 0) {
    set_critical_rand(from.critical_rand());
  }
  if (from.element_amplify_rate() != 0) {
    set_element_amplify_rate(from.element_amplify_rate());
  }
  if (from.damage_shield() != 0) {
    set_damage_shield(from.damage_shield());
  }
  if (from.true_damage() != 0) {
    set_true_damage(from.true_damage());
  }
}

void AttackResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AttackResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttackResult::CopyFrom(const AttackResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AttackResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackResult::IsInitialized() const {
  return true;
}

void AttackResult::Swap(AttackResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttackResult::InternalSwap(AttackResult* other) {
  using std::swap;
  anim_event_id_.Swap(&other->anim_event_id_);
  attack_tag_.Swap(&other->attack_tag_);
  attenuation_tag_.Swap(&other->attenuation_tag_);
  attenuation_group_.Swap(&other->attenuation_group_);
  swap(ability_identifier_, other->ability_identifier_);
  swap(hit_collision_, other->hit_collision_);
  swap(resolved_dir_, other->resolved_dir_);
  swap(hit_eff_result_, other->hit_eff_result_);
  swap(attacker_id_, other->attacker_id_);
  swap(defense_id_, other->defense_id_);
  swap(damage_, other->damage_);
  swap(hit_pos_type_, other->hit_pos_type_);
  swap(endure_break_, other->endure_break_);
  swap(hit_retreat_angle_compat_, other->hit_retreat_angle_compat_);
  swap(element_type_, other->element_type_);
  swap(damage_percentage_, other->damage_percentage_);
  swap(damage_extra_, other->damage_extra_);
  swap(bonus_critical_, other->bonus_critical_);
  swap(bonus_critical_hurt_, other->bonus_critical_hurt_);
  swap(is_crit_, other->is_crit_);
  swap(use_gadget_damage_action_, other->use_gadget_damage_action_);
  swap(is_resist_text_, other->is_resist_text_);
  swap(mute_element_hurt_, other->mute_element_hurt_);
  swap(gadget_damage_action_idx_, other->gadget_damage_action_idx_);
  swap(strike_type_, other->strike_type_);
  swap(critical_rand_, other->critical_rand_);
  swap(element_amplify_rate_, other->element_amplify_rate_);
  swap(damage_shield_, other->damage_shield_);
  swap(true_damage_, other->true_damage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttackResult::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttackResult

// uint32 attacker_id = 1;
void AttackResult::clear_attacker_id() {
  attacker_id_ = 0u;
}
::google::protobuf::uint32 AttackResult::attacker_id() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.attacker_id)
  return attacker_id_;
}
void AttackResult::set_attacker_id(::google::protobuf::uint32 value) {
  
  attacker_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.attacker_id)
}

// uint32 defense_id = 2;
void AttackResult::clear_defense_id() {
  defense_id_ = 0u;
}
::google::protobuf::uint32 AttackResult::defense_id() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.defense_id)
  return defense_id_;
}
void AttackResult::set_defense_id(::google::protobuf::uint32 value) {
  
  defense_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.defense_id)
}

// string anim_event_id = 3;
void AttackResult::clear_anim_event_id() {
  anim_event_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttackResult::anim_event_id() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.anim_event_id)
  return anim_event_id_.GetNoArena();
}
void AttackResult::set_anim_event_id(const ::std::string& value) {
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AttackResult.anim_event_id)
}
#if LANG_CXX11
void AttackResult::set_anim_event_id(::std::string&& value) {
  
  anim_event_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AttackResult.anim_event_id)
}
#endif
void AttackResult::set_anim_event_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AttackResult.anim_event_id)
}
void AttackResult::set_anim_event_id(const char* value, size_t size) {
  
  anim_event_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AttackResult.anim_event_id)
}
::std::string* AttackResult::mutable_anim_event_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.anim_event_id)
  return anim_event_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttackResult::release_anim_event_id() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.anim_event_id)
  
  return anim_event_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttackResult::set_allocated_anim_event_id(::std::string* anim_event_id) {
  if (anim_event_id != NULL) {
    
  } else {
    
  }
  anim_event_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anim_event_id);
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.anim_event_id)
}

// .proto.AbilityIdentifier ability_identifier = 4;
bool AttackResult::has_ability_identifier() const {
  return this != internal_default_instance() && ability_identifier_ != NULL;
}
void AttackResult::clear_ability_identifier() {
  if (GetArenaNoVirtual() == NULL && ability_identifier_ != NULL) delete ability_identifier_;
  ability_identifier_ = NULL;
}
const ::proto::AbilityIdentifier& AttackResult::ability_identifier() const {
  const ::proto::AbilityIdentifier* p = ability_identifier_;
  // @@protoc_insertion_point(field_get:proto.AttackResult.ability_identifier)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilityIdentifier*>(
      &::proto::_AbilityIdentifier_default_instance_);
}
::proto::AbilityIdentifier* AttackResult::mutable_ability_identifier() {
  
  if (ability_identifier_ == NULL) {
    ability_identifier_ = new ::proto::AbilityIdentifier;
  }
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.ability_identifier)
  return ability_identifier_;
}
::proto::AbilityIdentifier* AttackResult::release_ability_identifier() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.ability_identifier)
  
  ::proto::AbilityIdentifier* temp = ability_identifier_;
  ability_identifier_ = NULL;
  return temp;
}
void AttackResult::set_allocated_ability_identifier(::proto::AbilityIdentifier* ability_identifier) {
  delete ability_identifier_;
  ability_identifier_ = ability_identifier;
  if (ability_identifier) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.ability_identifier)
}

// string attack_tag = 5;
void AttackResult::clear_attack_tag() {
  attack_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttackResult::attack_tag() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.attack_tag)
  return attack_tag_.GetNoArena();
}
void AttackResult::set_attack_tag(const ::std::string& value) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AttackResult.attack_tag)
}
#if LANG_CXX11
void AttackResult::set_attack_tag(::std::string&& value) {
  
  attack_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AttackResult.attack_tag)
}
#endif
void AttackResult::set_attack_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AttackResult.attack_tag)
}
void AttackResult::set_attack_tag(const char* value, size_t size) {
  
  attack_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AttackResult.attack_tag)
}
::std::string* AttackResult::mutable_attack_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.attack_tag)
  return attack_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttackResult::release_attack_tag() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.attack_tag)
  
  return attack_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttackResult::set_allocated_attack_tag(::std::string* attack_tag) {
  if (attack_tag != NULL) {
    
  } else {
    
  }
  attack_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attack_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.attack_tag)
}

// float damage = 6;
void AttackResult::clear_damage() {
  damage_ = 0;
}
float AttackResult::damage() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.damage)
  return damage_;
}
void AttackResult::set_damage(float value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.damage)
}

// bool is_crit = 7;
void AttackResult::clear_is_crit() {
  is_crit_ = false;
}
bool AttackResult::is_crit() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.is_crit)
  return is_crit_;
}
void AttackResult::set_is_crit(bool value) {
  
  is_crit_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.is_crit)
}

// .proto.HitCollision hit_collision = 8;
bool AttackResult::has_hit_collision() const {
  return this != internal_default_instance() && hit_collision_ != NULL;
}
void AttackResult::clear_hit_collision() {
  if (GetArenaNoVirtual() == NULL && hit_collision_ != NULL) delete hit_collision_;
  hit_collision_ = NULL;
}
const ::proto::HitCollision& AttackResult::hit_collision() const {
  const ::proto::HitCollision* p = hit_collision_;
  // @@protoc_insertion_point(field_get:proto.AttackResult.hit_collision)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HitCollision*>(
      &::proto::_HitCollision_default_instance_);
}
::proto::HitCollision* AttackResult::mutable_hit_collision() {
  
  if (hit_collision_ == NULL) {
    hit_collision_ = new ::proto::HitCollision;
  }
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.hit_collision)
  return hit_collision_;
}
::proto::HitCollision* AttackResult::release_hit_collision() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.hit_collision)
  
  ::proto::HitCollision* temp = hit_collision_;
  hit_collision_ = NULL;
  return temp;
}
void AttackResult::set_allocated_hit_collision(::proto::HitCollision* hit_collision) {
  delete hit_collision_;
  hit_collision_ = hit_collision;
  if (hit_collision) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.hit_collision)
}

// uint32 hit_pos_type = 9;
void AttackResult::clear_hit_pos_type() {
  hit_pos_type_ = 0u;
}
::google::protobuf::uint32 AttackResult::hit_pos_type() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.hit_pos_type)
  return hit_pos_type_;
}
void AttackResult::set_hit_pos_type(::google::protobuf::uint32 value) {
  
  hit_pos_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.hit_pos_type)
}

// uint32 endure_break = 10;
void AttackResult::clear_endure_break() {
  endure_break_ = 0u;
}
::google::protobuf::uint32 AttackResult::endure_break() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.endure_break)
  return endure_break_;
}
void AttackResult::set_endure_break(::google::protobuf::uint32 value) {
  
  endure_break_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.endure_break)
}

// .proto.Vector resolved_dir = 11;
bool AttackResult::has_resolved_dir() const {
  return this != internal_default_instance() && resolved_dir_ != NULL;
}
void AttackResult::clear_resolved_dir() {
  if (GetArenaNoVirtual() == NULL && resolved_dir_ != NULL) delete resolved_dir_;
  resolved_dir_ = NULL;
}
const ::proto::Vector& AttackResult::resolved_dir() const {
  const ::proto::Vector* p = resolved_dir_;
  // @@protoc_insertion_point(field_get:proto.AttackResult.resolved_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* AttackResult::mutable_resolved_dir() {
  
  if (resolved_dir_ == NULL) {
    resolved_dir_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.resolved_dir)
  return resolved_dir_;
}
::proto::Vector* AttackResult::release_resolved_dir() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.resolved_dir)
  
  ::proto::Vector* temp = resolved_dir_;
  resolved_dir_ = NULL;
  return temp;
}
void AttackResult::set_allocated_resolved_dir(::proto::Vector* resolved_dir) {
  delete resolved_dir_;
  resolved_dir_ = resolved_dir;
  if (resolved_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.resolved_dir)
}

// int32 hit_retreat_angle_compat = 12;
void AttackResult::clear_hit_retreat_angle_compat() {
  hit_retreat_angle_compat_ = 0;
}
::google::protobuf::int32 AttackResult::hit_retreat_angle_compat() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.hit_retreat_angle_compat)
  return hit_retreat_angle_compat_;
}
void AttackResult::set_hit_retreat_angle_compat(::google::protobuf::int32 value) {
  
  hit_retreat_angle_compat_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.hit_retreat_angle_compat)
}

// .proto.AttackHitEffectResult hit_eff_result = 13;
bool AttackResult::has_hit_eff_result() const {
  return this != internal_default_instance() && hit_eff_result_ != NULL;
}
void AttackResult::clear_hit_eff_result() {
  if (GetArenaNoVirtual() == NULL && hit_eff_result_ != NULL) delete hit_eff_result_;
  hit_eff_result_ = NULL;
}
const ::proto::AttackHitEffectResult& AttackResult::hit_eff_result() const {
  const ::proto::AttackHitEffectResult* p = hit_eff_result_;
  // @@protoc_insertion_point(field_get:proto.AttackResult.hit_eff_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AttackHitEffectResult*>(
      &::proto::_AttackHitEffectResult_default_instance_);
}
::proto::AttackHitEffectResult* AttackResult::mutable_hit_eff_result() {
  
  if (hit_eff_result_ == NULL) {
    hit_eff_result_ = new ::proto::AttackHitEffectResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.hit_eff_result)
  return hit_eff_result_;
}
::proto::AttackHitEffectResult* AttackResult::release_hit_eff_result() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.hit_eff_result)
  
  ::proto::AttackHitEffectResult* temp = hit_eff_result_;
  hit_eff_result_ = NULL;
  return temp;
}
void AttackResult::set_allocated_hit_eff_result(::proto::AttackHitEffectResult* hit_eff_result) {
  delete hit_eff_result_;
  hit_eff_result_ = hit_eff_result;
  if (hit_eff_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.hit_eff_result)
}

// uint32 element_type = 14;
void AttackResult::clear_element_type() {
  element_type_ = 0u;
}
::google::protobuf::uint32 AttackResult::element_type() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.element_type)
  return element_type_;
}
void AttackResult::set_element_type(::google::protobuf::uint32 value) {
  
  element_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.element_type)
}

// float damage_percentage = 15;
void AttackResult::clear_damage_percentage() {
  damage_percentage_ = 0;
}
float AttackResult::damage_percentage() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.damage_percentage)
  return damage_percentage_;
}
void AttackResult::set_damage_percentage(float value) {
  
  damage_percentage_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.damage_percentage)
}

// float damage_extra = 16;
void AttackResult::clear_damage_extra() {
  damage_extra_ = 0;
}
float AttackResult::damage_extra() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.damage_extra)
  return damage_extra_;
}
void AttackResult::set_damage_extra(float value) {
  
  damage_extra_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.damage_extra)
}

// float bonus_critical = 17;
void AttackResult::clear_bonus_critical() {
  bonus_critical_ = 0;
}
float AttackResult::bonus_critical() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.bonus_critical)
  return bonus_critical_;
}
void AttackResult::set_bonus_critical(float value) {
  
  bonus_critical_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.bonus_critical)
}

// float bonus_critical_hurt = 18;
void AttackResult::clear_bonus_critical_hurt() {
  bonus_critical_hurt_ = 0;
}
float AttackResult::bonus_critical_hurt() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.bonus_critical_hurt)
  return bonus_critical_hurt_;
}
void AttackResult::set_bonus_critical_hurt(float value) {
  
  bonus_critical_hurt_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.bonus_critical_hurt)
}

// bool use_gadget_damage_action = 19;
void AttackResult::clear_use_gadget_damage_action() {
  use_gadget_damage_action_ = false;
}
bool AttackResult::use_gadget_damage_action() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.use_gadget_damage_action)
  return use_gadget_damage_action_;
}
void AttackResult::set_use_gadget_damage_action(bool value) {
  
  use_gadget_damage_action_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.use_gadget_damage_action)
}

// uint32 gadget_damage_action_idx = 20;
void AttackResult::clear_gadget_damage_action_idx() {
  gadget_damage_action_idx_ = 0u;
}
::google::protobuf::uint32 AttackResult::gadget_damage_action_idx() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.gadget_damage_action_idx)
  return gadget_damage_action_idx_;
}
void AttackResult::set_gadget_damage_action_idx(::google::protobuf::uint32 value) {
  
  gadget_damage_action_idx_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.gadget_damage_action_idx)
}

// uint32 strike_type = 21;
void AttackResult::clear_strike_type() {
  strike_type_ = 0u;
}
::google::protobuf::uint32 AttackResult::strike_type() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.strike_type)
  return strike_type_;
}
void AttackResult::set_strike_type(::google::protobuf::uint32 value) {
  
  strike_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.strike_type)
}

// bool is_resist_text = 22;
void AttackResult::clear_is_resist_text() {
  is_resist_text_ = false;
}
bool AttackResult::is_resist_text() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.is_resist_text)
  return is_resist_text_;
}
void AttackResult::set_is_resist_text(bool value) {
  
  is_resist_text_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.is_resist_text)
}

// float critical_rand = 23;
void AttackResult::clear_critical_rand() {
  critical_rand_ = 0;
}
float AttackResult::critical_rand() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.critical_rand)
  return critical_rand_;
}
void AttackResult::set_critical_rand(float value) {
  
  critical_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.critical_rand)
}

// float element_amplify_rate = 24;
void AttackResult::clear_element_amplify_rate() {
  element_amplify_rate_ = 0;
}
float AttackResult::element_amplify_rate() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.element_amplify_rate)
  return element_amplify_rate_;
}
void AttackResult::set_element_amplify_rate(float value) {
  
  element_amplify_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.element_amplify_rate)
}

// string attenuation_tag = 25;
void AttackResult::clear_attenuation_tag() {
  attenuation_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttackResult::attenuation_tag() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.attenuation_tag)
  return attenuation_tag_.GetNoArena();
}
void AttackResult::set_attenuation_tag(const ::std::string& value) {
  
  attenuation_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AttackResult.attenuation_tag)
}
#if LANG_CXX11
void AttackResult::set_attenuation_tag(::std::string&& value) {
  
  attenuation_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AttackResult.attenuation_tag)
}
#endif
void AttackResult::set_attenuation_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attenuation_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AttackResult.attenuation_tag)
}
void AttackResult::set_attenuation_tag(const char* value, size_t size) {
  
  attenuation_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AttackResult.attenuation_tag)
}
::std::string* AttackResult::mutable_attenuation_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.attenuation_tag)
  return attenuation_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttackResult::release_attenuation_tag() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.attenuation_tag)
  
  return attenuation_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttackResult::set_allocated_attenuation_tag(::std::string* attenuation_tag) {
  if (attenuation_tag != NULL) {
    
  } else {
    
  }
  attenuation_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attenuation_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.attenuation_tag)
}

// float damage_shield = 26;
void AttackResult::clear_damage_shield() {
  damage_shield_ = 0;
}
float AttackResult::damage_shield() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.damage_shield)
  return damage_shield_;
}
void AttackResult::set_damage_shield(float value) {
  
  damage_shield_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.damage_shield)
}

// bool mute_element_hurt = 27;
void AttackResult::clear_mute_element_hurt() {
  mute_element_hurt_ = false;
}
bool AttackResult::mute_element_hurt() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.mute_element_hurt)
  return mute_element_hurt_;
}
void AttackResult::set_mute_element_hurt(bool value) {
  
  mute_element_hurt_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.mute_element_hurt)
}

// bool true_damage = 28;
void AttackResult::clear_true_damage() {
  true_damage_ = false;
}
bool AttackResult::true_damage() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.true_damage)
  return true_damage_;
}
void AttackResult::set_true_damage(bool value) {
  
  true_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.AttackResult.true_damage)
}

// string attenuation_group = 29;
void AttackResult::clear_attenuation_group() {
  attenuation_group_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AttackResult::attenuation_group() const {
  // @@protoc_insertion_point(field_get:proto.AttackResult.attenuation_group)
  return attenuation_group_.GetNoArena();
}
void AttackResult::set_attenuation_group(const ::std::string& value) {
  
  attenuation_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AttackResult.attenuation_group)
}
#if LANG_CXX11
void AttackResult::set_attenuation_group(::std::string&& value) {
  
  attenuation_group_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AttackResult.attenuation_group)
}
#endif
void AttackResult::set_attenuation_group(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  attenuation_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AttackResult.attenuation_group)
}
void AttackResult::set_attenuation_group(const char* value, size_t size) {
  
  attenuation_group_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AttackResult.attenuation_group)
}
::std::string* AttackResult::mutable_attenuation_group() {
  
  // @@protoc_insertion_point(field_mutable:proto.AttackResult.attenuation_group)
  return attenuation_group_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttackResult::release_attenuation_group() {
  // @@protoc_insertion_point(field_release:proto.AttackResult.attenuation_group)
  
  return attenuation_group_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttackResult::set_allocated_attenuation_group(::std::string* attenuation_group) {
  if (attenuation_group != NULL) {
    
  } else {
    
  }
  attenuation_group_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attenuation_group);
  // @@protoc_insertion_point(field_set_allocated:proto.AttackResult.attenuation_group)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtBeingHitInfo::kPeerIdFieldNumber;
const int EvtBeingHitInfo::kAttackResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtBeingHitInfo::EvtBeingHitInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtBeingHitInfo)
}
EvtBeingHitInfo::EvtBeingHitInfo(const EvtBeingHitInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_attack_result()) {
    attack_result_ = new ::proto::AttackResult(*from.attack_result_);
  } else {
    attack_result_ = NULL;
  }
  peer_id_ = from.peer_id_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtBeingHitInfo)
}

void EvtBeingHitInfo::SharedCtor() {
  ::memset(&attack_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&peer_id_) -
      reinterpret_cast<char*>(&attack_result_)) + sizeof(peer_id_));
  _cached_size_ = 0;
}

EvtBeingHitInfo::~EvtBeingHitInfo() {
  // @@protoc_insertion_point(destructor:proto.EvtBeingHitInfo)
  SharedDtor();
}

void EvtBeingHitInfo::SharedDtor() {
  if (this != internal_default_instance()) delete attack_result_;
}

void EvtBeingHitInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtBeingHitInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtBeingHitInfo& EvtBeingHitInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtBeingHitInfo* EvtBeingHitInfo::New(::google::protobuf::Arena* arena) const {
  EvtBeingHitInfo* n = new EvtBeingHitInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtBeingHitInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtBeingHitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && attack_result_ != NULL) {
    delete attack_result_;
  }
  attack_result_ = NULL;
  peer_id_ = 0u;
  _internal_metadata_.Clear();
}

bool EvtBeingHitInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtBeingHitInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 peer_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AttackResult attack_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attack_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtBeingHitInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtBeingHitInfo)
  return false;
#undef DO_
}

void EvtBeingHitInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtBeingHitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 peer_id = 1;
  if (this->peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->peer_id(), output);
  }

  // .proto.AttackResult attack_result = 2;
  if (this->has_attack_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->attack_result_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtBeingHitInfo)
}

::google::protobuf::uint8* EvtBeingHitInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtBeingHitInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 peer_id = 1;
  if (this->peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->peer_id(), target);
  }

  // .proto.AttackResult attack_result = 2;
  if (this->has_attack_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->attack_result_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtBeingHitInfo)
  return target;
}

size_t EvtBeingHitInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtBeingHitInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AttackResult attack_result = 2;
  if (this->has_attack_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->attack_result_);
  }

  // uint32 peer_id = 1;
  if (this->peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtBeingHitInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtBeingHitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtBeingHitInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtBeingHitInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtBeingHitInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtBeingHitInfo)
    MergeFrom(*source);
  }
}

void EvtBeingHitInfo::MergeFrom(const EvtBeingHitInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtBeingHitInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_attack_result()) {
    mutable_attack_result()->::proto::AttackResult::MergeFrom(from.attack_result());
  }
  if (from.peer_id() != 0) {
    set_peer_id(from.peer_id());
  }
}

void EvtBeingHitInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtBeingHitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtBeingHitInfo::CopyFrom(const EvtBeingHitInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtBeingHitInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtBeingHitInfo::IsInitialized() const {
  return true;
}

void EvtBeingHitInfo::Swap(EvtBeingHitInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtBeingHitInfo::InternalSwap(EvtBeingHitInfo* other) {
  using std::swap;
  swap(attack_result_, other->attack_result_);
  swap(peer_id_, other->peer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtBeingHitInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtBeingHitInfo

// uint32 peer_id = 1;
void EvtBeingHitInfo::clear_peer_id() {
  peer_id_ = 0u;
}
::google::protobuf::uint32 EvtBeingHitInfo::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitInfo.peer_id)
  return peer_id_;
}
void EvtBeingHitInfo::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBeingHitInfo.peer_id)
}

// .proto.AttackResult attack_result = 2;
bool EvtBeingHitInfo::has_attack_result() const {
  return this != internal_default_instance() && attack_result_ != NULL;
}
void EvtBeingHitInfo::clear_attack_result() {
  if (GetArenaNoVirtual() == NULL && attack_result_ != NULL) delete attack_result_;
  attack_result_ = NULL;
}
const ::proto::AttackResult& EvtBeingHitInfo::attack_result() const {
  const ::proto::AttackResult* p = attack_result_;
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitInfo.attack_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AttackResult*>(
      &::proto::_AttackResult_default_instance_);
}
::proto::AttackResult* EvtBeingHitInfo::mutable_attack_result() {
  
  if (attack_result_ == NULL) {
    attack_result_ = new ::proto::AttackResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBeingHitInfo.attack_result)
  return attack_result_;
}
::proto::AttackResult* EvtBeingHitInfo::release_attack_result() {
  // @@protoc_insertion_point(field_release:proto.EvtBeingHitInfo.attack_result)
  
  ::proto::AttackResult* temp = attack_result_;
  attack_result_ = NULL;
  return temp;
}
void EvtBeingHitInfo::set_allocated_attack_result(::proto::AttackResult* attack_result) {
  delete attack_result_;
  attack_result_ = attack_result;
  if (attack_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBeingHitInfo.attack_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtBeingHitNotify::kForwardTypeFieldNumber;
const int EvtBeingHitNotify::kBeingHitInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtBeingHitNotify::EvtBeingHitNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtBeingHitNotify)
}
EvtBeingHitNotify::EvtBeingHitNotify(const EvtBeingHitNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_being_hit_info()) {
    being_hit_info_ = new ::proto::EvtBeingHitInfo(*from.being_hit_info_);
  } else {
    being_hit_info_ = NULL;
  }
  forward_type_ = from.forward_type_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtBeingHitNotify)
}

void EvtBeingHitNotify::SharedCtor() {
  ::memset(&being_hit_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_type_) -
      reinterpret_cast<char*>(&being_hit_info_)) + sizeof(forward_type_));
  _cached_size_ = 0;
}

EvtBeingHitNotify::~EvtBeingHitNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtBeingHitNotify)
  SharedDtor();
}

void EvtBeingHitNotify::SharedDtor() {
  if (this != internal_default_instance()) delete being_hit_info_;
}

void EvtBeingHitNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtBeingHitNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtBeingHitNotify& EvtBeingHitNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtBeingHitNotify* EvtBeingHitNotify::New(::google::protobuf::Arena* arena) const {
  EvtBeingHitNotify* n = new EvtBeingHitNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtBeingHitNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtBeingHitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && being_hit_info_ != NULL) {
    delete being_hit_info_;
  }
  being_hit_info_ = NULL;
  forward_type_ = 0;
  _internal_metadata_.Clear();
}

bool EvtBeingHitNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtBeingHitNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EvtBeingHitInfo being_hit_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_being_hit_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtBeingHitNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtBeingHitNotify)
  return false;
#undef DO_
}

void EvtBeingHitNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtBeingHitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // .proto.EvtBeingHitInfo being_hit_info = 2;
  if (this->has_being_hit_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->being_hit_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtBeingHitNotify)
}

::google::protobuf::uint8* EvtBeingHitNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtBeingHitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // .proto.EvtBeingHitInfo being_hit_info = 2;
  if (this->has_being_hit_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->being_hit_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtBeingHitNotify)
  return target;
}

size_t EvtBeingHitNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtBeingHitNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EvtBeingHitInfo being_hit_info = 2;
  if (this->has_being_hit_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->being_hit_info_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtBeingHitNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtBeingHitNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtBeingHitNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtBeingHitNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtBeingHitNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtBeingHitNotify)
    MergeFrom(*source);
  }
}

void EvtBeingHitNotify::MergeFrom(const EvtBeingHitNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtBeingHitNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_being_hit_info()) {
    mutable_being_hit_info()->::proto::EvtBeingHitInfo::MergeFrom(from.being_hit_info());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
}

void EvtBeingHitNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtBeingHitNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtBeingHitNotify::CopyFrom(const EvtBeingHitNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtBeingHitNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtBeingHitNotify::IsInitialized() const {
  return true;
}

void EvtBeingHitNotify::Swap(EvtBeingHitNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtBeingHitNotify::InternalSwap(EvtBeingHitNotify* other) {
  using std::swap;
  swap(being_hit_info_, other->being_hit_info_);
  swap(forward_type_, other->forward_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtBeingHitNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtBeingHitNotify

// .proto.ForwardType forward_type = 1;
void EvtBeingHitNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtBeingHitNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtBeingHitNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBeingHitNotify.forward_type)
}

// .proto.EvtBeingHitInfo being_hit_info = 2;
bool EvtBeingHitNotify::has_being_hit_info() const {
  return this != internal_default_instance() && being_hit_info_ != NULL;
}
void EvtBeingHitNotify::clear_being_hit_info() {
  if (GetArenaNoVirtual() == NULL && being_hit_info_ != NULL) delete being_hit_info_;
  being_hit_info_ = NULL;
}
const ::proto::EvtBeingHitInfo& EvtBeingHitNotify::being_hit_info() const {
  const ::proto::EvtBeingHitInfo* p = being_hit_info_;
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitNotify.being_hit_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtBeingHitInfo*>(
      &::proto::_EvtBeingHitInfo_default_instance_);
}
::proto::EvtBeingHitInfo* EvtBeingHitNotify::mutable_being_hit_info() {
  
  if (being_hit_info_ == NULL) {
    being_hit_info_ = new ::proto::EvtBeingHitInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBeingHitNotify.being_hit_info)
  return being_hit_info_;
}
::proto::EvtBeingHitInfo* EvtBeingHitNotify::release_being_hit_info() {
  // @@protoc_insertion_point(field_release:proto.EvtBeingHitNotify.being_hit_info)
  
  ::proto::EvtBeingHitInfo* temp = being_hit_info_;
  being_hit_info_ = NULL;
  return temp;
}
void EvtBeingHitNotify::set_allocated_being_hit_info(::proto::EvtBeingHitInfo* being_hit_info) {
  delete being_hit_info_;
  being_hit_info_ = being_hit_info;
  if (being_hit_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBeingHitNotify.being_hit_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAnimatorParameterInfo::kEntityIdFieldNumber;
const int EvtAnimatorParameterInfo::kNameIdFieldNumber;
const int EvtAnimatorParameterInfo::kIsServerCacheFieldNumber;
const int EvtAnimatorParameterInfo::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAnimatorParameterInfo::EvtAnimatorParameterInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAnimatorParameterInfo)
}
EvtAnimatorParameterInfo::EvtAnimatorParameterInfo(const EvtAnimatorParameterInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::proto::AnimatorParameterValueInfo(*from.value_);
  } else {
    value_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_server_cache_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(is_server_cache_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtAnimatorParameterInfo)
}

void EvtAnimatorParameterInfo::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_server_cache_) -
      reinterpret_cast<char*>(&value_)) + sizeof(is_server_cache_));
  _cached_size_ = 0;
}

EvtAnimatorParameterInfo::~EvtAnimatorParameterInfo() {
  // @@protoc_insertion_point(destructor:proto.EvtAnimatorParameterInfo)
  SharedDtor();
}

void EvtAnimatorParameterInfo::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void EvtAnimatorParameterInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAnimatorParameterInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAnimatorParameterInfo& EvtAnimatorParameterInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAnimatorParameterInfo* EvtAnimatorParameterInfo::New(::google::protobuf::Arena* arena) const {
  EvtAnimatorParameterInfo* n = new EvtAnimatorParameterInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAnimatorParameterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAnimatorParameterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_server_cache_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(is_server_cache_));
  _internal_metadata_.Clear();
}

bool EvtAnimatorParameterInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAnimatorParameterInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 name_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_server_cache = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_server_cache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AnimatorParameterValueInfo value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAnimatorParameterInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAnimatorParameterInfo)
  return false;
#undef DO_
}

void EvtAnimatorParameterInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAnimatorParameterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // int32 name_id = 2;
  if (this->name_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->name_id(), output);
  }

  // bool is_server_cache = 3;
  if (this->is_server_cache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_server_cache(), output);
  }

  // .proto.AnimatorParameterValueInfo value = 4;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->value_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAnimatorParameterInfo)
}

::google::protobuf::uint8* EvtAnimatorParameterInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAnimatorParameterInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // int32 name_id = 2;
  if (this->name_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->name_id(), target);
  }

  // bool is_server_cache = 3;
  if (this->is_server_cache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_server_cache(), target);
  }

  // .proto.AnimatorParameterValueInfo value = 4;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->value_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAnimatorParameterInfo)
  return target;
}

size_t EvtAnimatorParameterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAnimatorParameterInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AnimatorParameterValueInfo value = 4;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // int32 name_id = 2;
  if (this->name_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->name_id());
  }

  // bool is_server_cache = 3;
  if (this->is_server_cache() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAnimatorParameterInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAnimatorParameterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAnimatorParameterInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAnimatorParameterInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAnimatorParameterInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAnimatorParameterInfo)
    MergeFrom(*source);
  }
}

void EvtAnimatorParameterInfo::MergeFrom(const EvtAnimatorParameterInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAnimatorParameterInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    mutable_value()->::proto::AnimatorParameterValueInfo::MergeFrom(from.value());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.name_id() != 0) {
    set_name_id(from.name_id());
  }
  if (from.is_server_cache() != 0) {
    set_is_server_cache(from.is_server_cache());
  }
}

void EvtAnimatorParameterInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAnimatorParameterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAnimatorParameterInfo::CopyFrom(const EvtAnimatorParameterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAnimatorParameterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAnimatorParameterInfo::IsInitialized() const {
  return true;
}

void EvtAnimatorParameterInfo::Swap(EvtAnimatorParameterInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAnimatorParameterInfo::InternalSwap(EvtAnimatorParameterInfo* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(entity_id_, other->entity_id_);
  swap(name_id_, other->name_id_);
  swap(is_server_cache_, other->is_server_cache_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAnimatorParameterInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAnimatorParameterInfo

// uint32 entity_id = 1;
void EvtAnimatorParameterInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtAnimatorParameterInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterInfo.entity_id)
  return entity_id_;
}
void EvtAnimatorParameterInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorParameterInfo.entity_id)
}

// int32 name_id = 2;
void EvtAnimatorParameterInfo::clear_name_id() {
  name_id_ = 0;
}
::google::protobuf::int32 EvtAnimatorParameterInfo::name_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterInfo.name_id)
  return name_id_;
}
void EvtAnimatorParameterInfo::set_name_id(::google::protobuf::int32 value) {
  
  name_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorParameterInfo.name_id)
}

// bool is_server_cache = 3;
void EvtAnimatorParameterInfo::clear_is_server_cache() {
  is_server_cache_ = false;
}
bool EvtAnimatorParameterInfo::is_server_cache() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterInfo.is_server_cache)
  return is_server_cache_;
}
void EvtAnimatorParameterInfo::set_is_server_cache(bool value) {
  
  is_server_cache_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorParameterInfo.is_server_cache)
}

// .proto.AnimatorParameterValueInfo value = 4;
bool EvtAnimatorParameterInfo::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
void EvtAnimatorParameterInfo::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::proto::AnimatorParameterValueInfo& EvtAnimatorParameterInfo::value() const {
  const ::proto::AnimatorParameterValueInfo* p = value_;
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterInfo.value)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AnimatorParameterValueInfo*>(
      &::proto::_AnimatorParameterValueInfo_default_instance_);
}
::proto::AnimatorParameterValueInfo* EvtAnimatorParameterInfo::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::proto::AnimatorParameterValueInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAnimatorParameterInfo.value)
  return value_;
}
::proto::AnimatorParameterValueInfo* EvtAnimatorParameterInfo::release_value() {
  // @@protoc_insertion_point(field_release:proto.EvtAnimatorParameterInfo.value)
  
  ::proto::AnimatorParameterValueInfo* temp = value_;
  value_ = NULL;
  return temp;
}
void EvtAnimatorParameterInfo::set_allocated_value(::proto::AnimatorParameterValueInfo* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAnimatorParameterInfo.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAnimatorParameterNotify::kForwardTypeFieldNumber;
const int EvtAnimatorParameterNotify::kAnimatorParamInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAnimatorParameterNotify::EvtAnimatorParameterNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAnimatorParameterNotify)
}
EvtAnimatorParameterNotify::EvtAnimatorParameterNotify(const EvtAnimatorParameterNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_animator_param_info()) {
    animator_param_info_ = new ::proto::EvtAnimatorParameterInfo(*from.animator_param_info_);
  } else {
    animator_param_info_ = NULL;
  }
  forward_type_ = from.forward_type_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtAnimatorParameterNotify)
}

void EvtAnimatorParameterNotify::SharedCtor() {
  ::memset(&animator_param_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_type_) -
      reinterpret_cast<char*>(&animator_param_info_)) + sizeof(forward_type_));
  _cached_size_ = 0;
}

EvtAnimatorParameterNotify::~EvtAnimatorParameterNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAnimatorParameterNotify)
  SharedDtor();
}

void EvtAnimatorParameterNotify::SharedDtor() {
  if (this != internal_default_instance()) delete animator_param_info_;
}

void EvtAnimatorParameterNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAnimatorParameterNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAnimatorParameterNotify& EvtAnimatorParameterNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAnimatorParameterNotify* EvtAnimatorParameterNotify::New(::google::protobuf::Arena* arena) const {
  EvtAnimatorParameterNotify* n = new EvtAnimatorParameterNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAnimatorParameterNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAnimatorParameterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && animator_param_info_ != NULL) {
    delete animator_param_info_;
  }
  animator_param_info_ = NULL;
  forward_type_ = 0;
  _internal_metadata_.Clear();
}

bool EvtAnimatorParameterNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAnimatorParameterNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EvtAnimatorParameterInfo animator_param_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_animator_param_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAnimatorParameterNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAnimatorParameterNotify)
  return false;
#undef DO_
}

void EvtAnimatorParameterNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAnimatorParameterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // .proto.EvtAnimatorParameterInfo animator_param_info = 2;
  if (this->has_animator_param_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->animator_param_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAnimatorParameterNotify)
}

::google::protobuf::uint8* EvtAnimatorParameterNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAnimatorParameterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // .proto.EvtAnimatorParameterInfo animator_param_info = 2;
  if (this->has_animator_param_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->animator_param_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAnimatorParameterNotify)
  return target;
}

size_t EvtAnimatorParameterNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAnimatorParameterNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EvtAnimatorParameterInfo animator_param_info = 2;
  if (this->has_animator_param_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->animator_param_info_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAnimatorParameterNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAnimatorParameterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAnimatorParameterNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAnimatorParameterNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAnimatorParameterNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAnimatorParameterNotify)
    MergeFrom(*source);
  }
}

void EvtAnimatorParameterNotify::MergeFrom(const EvtAnimatorParameterNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAnimatorParameterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_animator_param_info()) {
    mutable_animator_param_info()->::proto::EvtAnimatorParameterInfo::MergeFrom(from.animator_param_info());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
}

void EvtAnimatorParameterNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAnimatorParameterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAnimatorParameterNotify::CopyFrom(const EvtAnimatorParameterNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAnimatorParameterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAnimatorParameterNotify::IsInitialized() const {
  return true;
}

void EvtAnimatorParameterNotify::Swap(EvtAnimatorParameterNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAnimatorParameterNotify::InternalSwap(EvtAnimatorParameterNotify* other) {
  using std::swap;
  swap(animator_param_info_, other->animator_param_info_);
  swap(forward_type_, other->forward_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAnimatorParameterNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAnimatorParameterNotify

// .proto.ForwardType forward_type = 1;
void EvtAnimatorParameterNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtAnimatorParameterNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtAnimatorParameterNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorParameterNotify.forward_type)
}

// .proto.EvtAnimatorParameterInfo animator_param_info = 2;
bool EvtAnimatorParameterNotify::has_animator_param_info() const {
  return this != internal_default_instance() && animator_param_info_ != NULL;
}
void EvtAnimatorParameterNotify::clear_animator_param_info() {
  if (GetArenaNoVirtual() == NULL && animator_param_info_ != NULL) delete animator_param_info_;
  animator_param_info_ = NULL;
}
const ::proto::EvtAnimatorParameterInfo& EvtAnimatorParameterNotify::animator_param_info() const {
  const ::proto::EvtAnimatorParameterInfo* p = animator_param_info_;
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorParameterNotify.animator_param_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtAnimatorParameterInfo*>(
      &::proto::_EvtAnimatorParameterInfo_default_instance_);
}
::proto::EvtAnimatorParameterInfo* EvtAnimatorParameterNotify::mutable_animator_param_info() {
  
  if (animator_param_info_ == NULL) {
    animator_param_info_ = new ::proto::EvtAnimatorParameterInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAnimatorParameterNotify.animator_param_info)
  return animator_param_info_;
}
::proto::EvtAnimatorParameterInfo* EvtAnimatorParameterNotify::release_animator_param_info() {
  // @@protoc_insertion_point(field_release:proto.EvtAnimatorParameterNotify.animator_param_info)
  
  ::proto::EvtAnimatorParameterInfo* temp = animator_param_info_;
  animator_param_info_ = NULL;
  return temp;
}
void EvtAnimatorParameterNotify::set_allocated_animator_param_info(::proto::EvtAnimatorParameterInfo* animator_param_info) {
  delete animator_param_info_;
  animator_param_info_ = animator_param_info;
  if (animator_param_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAnimatorParameterNotify.animator_param_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AbilityArgument::kIntArgFieldNumber;
const int AbilityArgument::kFloatArgFieldNumber;
const int AbilityArgument::kStrArgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AbilityArgument::AbilityArgument()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AbilityArgument)
}
AbilityArgument::AbilityArgument(const AbilityArgument& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_arg();
  switch (from.arg_case()) {
    case kIntArg: {
      set_int_arg(from.int_arg());
      break;
    }
    case kFloatArg: {
      set_float_arg(from.float_arg());
      break;
    }
    case kStrArg: {
      set_str_arg(from.str_arg());
      break;
    }
    case ARG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.AbilityArgument)
}

void AbilityArgument::SharedCtor() {
  clear_has_arg();
  _cached_size_ = 0;
}

AbilityArgument::~AbilityArgument() {
  // @@protoc_insertion_point(destructor:proto.AbilityArgument)
  SharedDtor();
}

void AbilityArgument::SharedDtor() {
  if (has_arg()) {
    clear_arg();
  }
}

void AbilityArgument::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AbilityArgument::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AbilityArgument& AbilityArgument::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AbilityArgument* AbilityArgument::New(::google::protobuf::Arena* arena) const {
  AbilityArgument* n = new AbilityArgument;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AbilityArgument::clear_arg() {
// @@protoc_insertion_point(one_of_clear_start:proto.AbilityArgument)
  switch (arg_case()) {
    case kIntArg: {
      // No need to clear
      break;
    }
    case kFloatArg: {
      // No need to clear
      break;
    }
    case kStrArg: {
      arg_.str_arg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ARG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ARG_NOT_SET;
}


void AbilityArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AbilityArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_arg();
  _internal_metadata_.Clear();
}

bool AbilityArgument::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AbilityArgument)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 int_arg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_arg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &arg_.int_arg_)));
          set_has_int_arg();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_arg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_arg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &arg_.float_arg_)));
          set_has_float_arg();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_arg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_arg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_arg().data(), static_cast<int>(this->str_arg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AbilityArgument.str_arg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AbilityArgument)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AbilityArgument)
  return false;
#undef DO_
}

void AbilityArgument::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AbilityArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 int_arg = 1;
  if (has_int_arg()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->int_arg(), output);
  }

  // float float_arg = 2;
  if (has_float_arg()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->float_arg(), output);
  }

  // string str_arg = 3;
  if (has_str_arg()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_arg().data(), static_cast<int>(this->str_arg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AbilityArgument.str_arg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->str_arg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AbilityArgument)
}

::google::protobuf::uint8* AbilityArgument::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AbilityArgument)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 int_arg = 1;
  if (has_int_arg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->int_arg(), target);
  }

  // float float_arg = 2;
  if (has_float_arg()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->float_arg(), target);
  }

  // string str_arg = 3;
  if (has_str_arg()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_arg().data(), static_cast<int>(this->str_arg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AbilityArgument.str_arg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->str_arg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AbilityArgument)
  return target;
}

size_t AbilityArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AbilityArgument)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (arg_case()) {
    // uint32 int_arg = 1;
    case kIntArg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->int_arg());
      break;
    }
    // float float_arg = 2;
    case kFloatArg: {
      total_size += 1 + 4;
      break;
    }
    // string str_arg = 3;
    case kStrArg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_arg());
      break;
    }
    case ARG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AbilityArgument::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AbilityArgument)
  GOOGLE_DCHECK_NE(&from, this);
  const AbilityArgument* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AbilityArgument>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AbilityArgument)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AbilityArgument)
    MergeFrom(*source);
  }
}

void AbilityArgument::MergeFrom(const AbilityArgument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AbilityArgument)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.arg_case()) {
    case kIntArg: {
      set_int_arg(from.int_arg());
      break;
    }
    case kFloatArg: {
      set_float_arg(from.float_arg());
      break;
    }
    case kStrArg: {
      set_str_arg(from.str_arg());
      break;
    }
    case ARG_NOT_SET: {
      break;
    }
  }
}

void AbilityArgument::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AbilityArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AbilityArgument::CopyFrom(const AbilityArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AbilityArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AbilityArgument::IsInitialized() const {
  return true;
}

void AbilityArgument::Swap(AbilityArgument* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AbilityArgument::InternalSwap(AbilityArgument* other) {
  using std::swap;
  swap(arg_, other->arg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AbilityArgument::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AbilityArgument

// uint32 int_arg = 1;
bool AbilityArgument::has_int_arg() const {
  return arg_case() == kIntArg;
}
void AbilityArgument::set_has_int_arg() {
  _oneof_case_[0] = kIntArg;
}
void AbilityArgument::clear_int_arg() {
  if (has_int_arg()) {
    arg_.int_arg_ = 0u;
    clear_has_arg();
  }
}
::google::protobuf::uint32 AbilityArgument::int_arg() const {
  // @@protoc_insertion_point(field_get:proto.AbilityArgument.int_arg)
  if (has_int_arg()) {
    return arg_.int_arg_;
  }
  return 0u;
}
void AbilityArgument::set_int_arg(::google::protobuf::uint32 value) {
  if (!has_int_arg()) {
    clear_arg();
    set_has_int_arg();
  }
  arg_.int_arg_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.int_arg)
}

// float float_arg = 2;
bool AbilityArgument::has_float_arg() const {
  return arg_case() == kFloatArg;
}
void AbilityArgument::set_has_float_arg() {
  _oneof_case_[0] = kFloatArg;
}
void AbilityArgument::clear_float_arg() {
  if (has_float_arg()) {
    arg_.float_arg_ = 0;
    clear_has_arg();
  }
}
float AbilityArgument::float_arg() const {
  // @@protoc_insertion_point(field_get:proto.AbilityArgument.float_arg)
  if (has_float_arg()) {
    return arg_.float_arg_;
  }
  return 0;
}
void AbilityArgument::set_float_arg(float value) {
  if (!has_float_arg()) {
    clear_arg();
    set_has_float_arg();
  }
  arg_.float_arg_ = value;
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.float_arg)
}

// string str_arg = 3;
bool AbilityArgument::has_str_arg() const {
  return arg_case() == kStrArg;
}
void AbilityArgument::set_has_str_arg() {
  _oneof_case_[0] = kStrArg;
}
void AbilityArgument::clear_str_arg() {
  if (has_str_arg()) {
    arg_.str_arg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_arg();
  }
}
const ::std::string& AbilityArgument::str_arg() const {
  // @@protoc_insertion_point(field_get:proto.AbilityArgument.str_arg)
  if (has_str_arg()) {
    return arg_.str_arg_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void AbilityArgument::set_str_arg(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.str_arg)
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arg_.str_arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.str_arg)
}
#if LANG_CXX11
void AbilityArgument::set_str_arg(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.AbilityArgument.str_arg)
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arg_.str_arg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AbilityArgument.str_arg)
}
#endif
void AbilityArgument::set_str_arg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arg_.str_arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AbilityArgument.str_arg)
}
void AbilityArgument::set_str_arg(const char* value, size_t size) {
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  arg_.str_arg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AbilityArgument.str_arg)
}
::std::string* AbilityArgument::mutable_str_arg() {
  if (!has_str_arg()) {
    clear_arg();
    set_has_str_arg();
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.AbilityArgument.str_arg)
  return arg_.str_arg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AbilityArgument::release_str_arg() {
  // @@protoc_insertion_point(field_release:proto.AbilityArgument.str_arg)
  if (has_str_arg()) {
    clear_has_arg();
    return arg_.str_arg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void AbilityArgument::set_allocated_str_arg(::std::string* str_arg) {
  if (!has_str_arg()) {
    arg_.str_arg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_arg();
  if (str_arg != NULL) {
    set_has_str_arg();
    arg_.str_arg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        str_arg);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AbilityArgument.str_arg)
}

bool AbilityArgument::has_arg() const {
  return arg_case() != ARG_NOT_SET;
}
void AbilityArgument::clear_has_arg() {
  _oneof_case_[0] = ARG_NOT_SET;
}
AbilityArgument::ArgCase AbilityArgument::arg_case() const {
  return AbilityArgument::ArgCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostPlayerNotify::kHostUidFieldNumber;
const int HostPlayerNotify::kHostPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostPlayerNotify::HostPlayerNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HostPlayerNotify)
}
HostPlayerNotify::HostPlayerNotify(const HostPlayerNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&host_uid_, &from.host_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_peer_id_) -
    reinterpret_cast<char*>(&host_uid_)) + sizeof(host_peer_id_));
  // @@protoc_insertion_point(copy_constructor:proto.HostPlayerNotify)
}

void HostPlayerNotify::SharedCtor() {
  ::memset(&host_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_peer_id_) -
      reinterpret_cast<char*>(&host_uid_)) + sizeof(host_peer_id_));
  _cached_size_ = 0;
}

HostPlayerNotify::~HostPlayerNotify() {
  // @@protoc_insertion_point(destructor:proto.HostPlayerNotify)
  SharedDtor();
}

void HostPlayerNotify::SharedDtor() {
}

void HostPlayerNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostPlayerNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostPlayerNotify& HostPlayerNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

HostPlayerNotify* HostPlayerNotify::New(::google::protobuf::Arena* arena) const {
  HostPlayerNotify* n = new HostPlayerNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostPlayerNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HostPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&host_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_peer_id_) -
      reinterpret_cast<char*>(&host_uid_)) + sizeof(host_peer_id_));
  _internal_metadata_.Clear();
}

bool HostPlayerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HostPlayerNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 host_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 host_peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HostPlayerNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HostPlayerNotify)
  return false;
#undef DO_
}

void HostPlayerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HostPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 host_uid = 1;
  if (this->host_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->host_uid(), output);
  }

  // uint32 host_peer_id = 2;
  if (this->host_peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->host_peer_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HostPlayerNotify)
}

::google::protobuf::uint8* HostPlayerNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HostPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 host_uid = 1;
  if (this->host_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->host_uid(), target);
  }

  // uint32 host_peer_id = 2;
  if (this->host_peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->host_peer_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HostPlayerNotify)
  return target;
}

size_t HostPlayerNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HostPlayerNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 host_uid = 1;
  if (this->host_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->host_uid());
  }

  // uint32 host_peer_id = 2;
  if (this->host_peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->host_peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostPlayerNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HostPlayerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const HostPlayerNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostPlayerNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HostPlayerNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HostPlayerNotify)
    MergeFrom(*source);
  }
}

void HostPlayerNotify::MergeFrom(const HostPlayerNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HostPlayerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_uid() != 0) {
    set_host_uid(from.host_uid());
  }
  if (from.host_peer_id() != 0) {
    set_host_peer_id(from.host_peer_id());
  }
}

void HostPlayerNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HostPlayerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostPlayerNotify::CopyFrom(const HostPlayerNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HostPlayerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostPlayerNotify::IsInitialized() const {
  return true;
}

void HostPlayerNotify::Swap(HostPlayerNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostPlayerNotify::InternalSwap(HostPlayerNotify* other) {
  using std::swap;
  swap(host_uid_, other->host_uid_);
  swap(host_peer_id_, other->host_peer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostPlayerNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HostPlayerNotify

// uint32 host_uid = 1;
void HostPlayerNotify::clear_host_uid() {
  host_uid_ = 0u;
}
::google::protobuf::uint32 HostPlayerNotify::host_uid() const {
  // @@protoc_insertion_point(field_get:proto.HostPlayerNotify.host_uid)
  return host_uid_;
}
void HostPlayerNotify::set_host_uid(::google::protobuf::uint32 value) {
  
  host_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.HostPlayerNotify.host_uid)
}

// uint32 host_peer_id = 2;
void HostPlayerNotify::clear_host_peer_id() {
  host_peer_id_ = 0u;
}
::google::protobuf::uint32 HostPlayerNotify::host_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.HostPlayerNotify.host_peer_id)
  return host_peer_id_;
}
void HostPlayerNotify::set_host_peer_id(::google::protobuf::uint32 value) {
  
  host_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HostPlayerNotify.host_peer_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtDoSkillSuccNotify::kForwardTypeFieldNumber;
const int EvtDoSkillSuccNotify::kCasterIdFieldNumber;
const int EvtDoSkillSuccNotify::kSkillIdFieldNumber;
const int EvtDoSkillSuccNotify::kForwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtDoSkillSuccNotify::EvtDoSkillSuccNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtDoSkillSuccNotify)
}
EvtDoSkillSuccNotify::EvtDoSkillSuccNotify(const EvtDoSkillSuccNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_forward()) {
    forward_ = new ::proto::Vector(*from.forward_);
  } else {
    forward_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&skill_id_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(skill_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtDoSkillSuccNotify)
}

void EvtDoSkillSuccNotify::SharedCtor() {
  ::memset(&forward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_id_) -
      reinterpret_cast<char*>(&forward_)) + sizeof(skill_id_));
  _cached_size_ = 0;
}

EvtDoSkillSuccNotify::~EvtDoSkillSuccNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtDoSkillSuccNotify)
  SharedDtor();
}

void EvtDoSkillSuccNotify::SharedDtor() {
  if (this != internal_default_instance()) delete forward_;
}

void EvtDoSkillSuccNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtDoSkillSuccNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtDoSkillSuccNotify& EvtDoSkillSuccNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtDoSkillSuccNotify* EvtDoSkillSuccNotify::New(::google::protobuf::Arena* arena) const {
  EvtDoSkillSuccNotify* n = new EvtDoSkillSuccNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtDoSkillSuccNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtDoSkillSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && forward_ != NULL) {
    delete forward_;
  }
  forward_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(skill_id_));
  _internal_metadata_.Clear();
}

bool EvtDoSkillSuccNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtDoSkillSuccNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 caster_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &caster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skill_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector forward = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtDoSkillSuccNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtDoSkillSuccNotify)
  return false;
#undef DO_
}

void EvtDoSkillSuccNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtDoSkillSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 caster_id = 2;
  if (this->caster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->caster_id(), output);
  }

  // uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->skill_id(), output);
  }

  // .proto.Vector forward = 4;
  if (this->has_forward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->forward_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtDoSkillSuccNotify)
}

::google::protobuf::uint8* EvtDoSkillSuccNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtDoSkillSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 caster_id = 2;
  if (this->caster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->caster_id(), target);
  }

  // uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->skill_id(), target);
  }

  // .proto.Vector forward = 4;
  if (this->has_forward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->forward_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtDoSkillSuccNotify)
  return target;
}

size_t EvtDoSkillSuccNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtDoSkillSuccNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector forward = 4;
  if (this->has_forward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->forward_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 caster_id = 2;
  if (this->caster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->caster_id());
  }

  // uint32 skill_id = 3;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtDoSkillSuccNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtDoSkillSuccNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtDoSkillSuccNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtDoSkillSuccNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtDoSkillSuccNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtDoSkillSuccNotify)
    MergeFrom(*source);
  }
}

void EvtDoSkillSuccNotify::MergeFrom(const EvtDoSkillSuccNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtDoSkillSuccNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_forward()) {
    mutable_forward()->::proto::Vector::MergeFrom(from.forward());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.caster_id() != 0) {
    set_caster_id(from.caster_id());
  }
  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
}

void EvtDoSkillSuccNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtDoSkillSuccNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtDoSkillSuccNotify::CopyFrom(const EvtDoSkillSuccNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtDoSkillSuccNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtDoSkillSuccNotify::IsInitialized() const {
  return true;
}

void EvtDoSkillSuccNotify::Swap(EvtDoSkillSuccNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtDoSkillSuccNotify::InternalSwap(EvtDoSkillSuccNotify* other) {
  using std::swap;
  swap(forward_, other->forward_);
  swap(forward_type_, other->forward_type_);
  swap(caster_id_, other->caster_id_);
  swap(skill_id_, other->skill_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtDoSkillSuccNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtDoSkillSuccNotify

// .proto.ForwardType forward_type = 1;
void EvtDoSkillSuccNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtDoSkillSuccNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtDoSkillSuccNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtDoSkillSuccNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDoSkillSuccNotify.forward_type)
}

// uint32 caster_id = 2;
void EvtDoSkillSuccNotify::clear_caster_id() {
  caster_id_ = 0u;
}
::google::protobuf::uint32 EvtDoSkillSuccNotify::caster_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtDoSkillSuccNotify.caster_id)
  return caster_id_;
}
void EvtDoSkillSuccNotify::set_caster_id(::google::protobuf::uint32 value) {
  
  caster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDoSkillSuccNotify.caster_id)
}

// uint32 skill_id = 3;
void EvtDoSkillSuccNotify::clear_skill_id() {
  skill_id_ = 0u;
}
::google::protobuf::uint32 EvtDoSkillSuccNotify::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtDoSkillSuccNotify.skill_id)
  return skill_id_;
}
void EvtDoSkillSuccNotify::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDoSkillSuccNotify.skill_id)
}

// .proto.Vector forward = 4;
bool EvtDoSkillSuccNotify::has_forward() const {
  return this != internal_default_instance() && forward_ != NULL;
}
void EvtDoSkillSuccNotify::clear_forward() {
  if (GetArenaNoVirtual() == NULL && forward_ != NULL) delete forward_;
  forward_ = NULL;
}
const ::proto::Vector& EvtDoSkillSuccNotify::forward() const {
  const ::proto::Vector* p = forward_;
  // @@protoc_insertion_point(field_get:proto.EvtDoSkillSuccNotify.forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtDoSkillSuccNotify::mutable_forward() {
  
  if (forward_ == NULL) {
    forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtDoSkillSuccNotify.forward)
  return forward_;
}
::proto::Vector* EvtDoSkillSuccNotify::release_forward() {
  // @@protoc_insertion_point(field_release:proto.EvtDoSkillSuccNotify.forward)
  
  ::proto::Vector* temp = forward_;
  forward_ = NULL;
  return temp;
}
void EvtDoSkillSuccNotify::set_allocated_forward(::proto::Vector* forward) {
  delete forward_;
  forward_ = forward;
  if (forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtDoSkillSuccNotify.forward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtCreateGadgetNotify::kForwardTypeFieldNumber;
const int EvtCreateGadgetNotify::kEntityIdFieldNumber;
const int EvtCreateGadgetNotify::kConfigIdFieldNumber;
const int EvtCreateGadgetNotify::kCampIdFieldNumber;
const int EvtCreateGadgetNotify::kCampTypeFieldNumber;
const int EvtCreateGadgetNotify::kInitPosFieldNumber;
const int EvtCreateGadgetNotify::kInitEulerAnglesFieldNumber;
const int EvtCreateGadgetNotify::kGuidFieldNumber;
const int EvtCreateGadgetNotify::kOwnerEntityIdFieldNumber;
const int EvtCreateGadgetNotify::kTargetEntityIdFieldNumber;
const int EvtCreateGadgetNotify::kIsAsyncLoadFieldNumber;
const int EvtCreateGadgetNotify::kTargetLockPointIndexFieldNumber;
const int EvtCreateGadgetNotify::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtCreateGadgetNotify::EvtCreateGadgetNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtCreateGadgetNotify)
}
EvtCreateGadgetNotify::EvtCreateGadgetNotify(const EvtCreateGadgetNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_init_pos()) {
    init_pos_ = new ::proto::Vector(*from.init_pos_);
  } else {
    init_pos_ = NULL;
  }
  if (from.has_init_euler_angles()) {
    init_euler_angles_ = new ::proto::Vector(*from.init_euler_angles_);
  } else {
    init_euler_angles_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtCreateGadgetNotify)
}

void EvtCreateGadgetNotify::SharedCtor() {
  ::memset(&init_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&init_pos_)) + sizeof(room_id_));
  _cached_size_ = 0;
}

EvtCreateGadgetNotify::~EvtCreateGadgetNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtCreateGadgetNotify)
  SharedDtor();
}

void EvtCreateGadgetNotify::SharedDtor() {
  if (this != internal_default_instance()) delete init_pos_;
  if (this != internal_default_instance()) delete init_euler_angles_;
}

void EvtCreateGadgetNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtCreateGadgetNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtCreateGadgetNotify& EvtCreateGadgetNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtCreateGadgetNotify* EvtCreateGadgetNotify::New(::google::protobuf::Arena* arena) const {
  EvtCreateGadgetNotify* n = new EvtCreateGadgetNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtCreateGadgetNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtCreateGadgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && init_pos_ != NULL) {
    delete init_pos_;
  }
  init_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && init_euler_angles_ != NULL) {
    delete init_euler_angles_;
  }
  init_euler_angles_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(room_id_));
  _internal_metadata_.Clear();
}

bool EvtCreateGadgetNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtCreateGadgetNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 camp_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 camp_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &camp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector init_pos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector init_euler_angles = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_init_euler_angles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 guid = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 owner_entity_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_entity_id = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_async_load = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_async_load_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_lock_point_index = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_lock_point_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 room_id = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtCreateGadgetNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtCreateGadgetNotify)
  return false;
#undef DO_
}

void EvtCreateGadgetNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtCreateGadgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->config_id(), output);
  }

  // uint32 camp_id = 4;
  if (this->camp_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->camp_id(), output);
  }

  // uint32 camp_type = 5;
  if (this->camp_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->camp_type(), output);
  }

  // .proto.Vector init_pos = 6;
  if (this->has_init_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->init_pos_, output);
  }

  // .proto.Vector init_euler_angles = 7;
  if (this->has_init_euler_angles()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->init_euler_angles_, output);
  }

  // uint64 guid = 8;
  if (this->guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->guid(), output);
  }

  // uint32 owner_entity_id = 9;
  if (this->owner_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->owner_entity_id(), output);
  }

  // uint32 target_entity_id = 10;
  if (this->target_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->target_entity_id(), output);
  }

  // bool is_async_load = 11;
  if (this->is_async_load() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->is_async_load(), output);
  }

  // uint32 target_lock_point_index = 12;
  if (this->target_lock_point_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->target_lock_point_index(), output);
  }

  // uint32 room_id = 13;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->room_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtCreateGadgetNotify)
}

::google::protobuf::uint8* EvtCreateGadgetNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtCreateGadgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->config_id(), target);
  }

  // uint32 camp_id = 4;
  if (this->camp_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->camp_id(), target);
  }

  // uint32 camp_type = 5;
  if (this->camp_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->camp_type(), target);
  }

  // .proto.Vector init_pos = 6;
  if (this->has_init_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->init_pos_, deterministic, target);
  }

  // .proto.Vector init_euler_angles = 7;
  if (this->has_init_euler_angles()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->init_euler_angles_, deterministic, target);
  }

  // uint64 guid = 8;
  if (this->guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->guid(), target);
  }

  // uint32 owner_entity_id = 9;
  if (this->owner_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->owner_entity_id(), target);
  }

  // uint32 target_entity_id = 10;
  if (this->target_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->target_entity_id(), target);
  }

  // bool is_async_load = 11;
  if (this->is_async_load() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->is_async_load(), target);
  }

  // uint32 target_lock_point_index = 12;
  if (this->target_lock_point_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->target_lock_point_index(), target);
  }

  // uint32 room_id = 13;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->room_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtCreateGadgetNotify)
  return target;
}

size_t EvtCreateGadgetNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtCreateGadgetNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector init_pos = 6;
  if (this->has_init_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->init_pos_);
  }

  // .proto.Vector init_euler_angles = 7;
  if (this->has_init_euler_angles()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->init_euler_angles_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 camp_id = 4;
  if (this->camp_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp_id());
  }

  // uint32 camp_type = 5;
  if (this->camp_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->camp_type());
  }

  // uint32 owner_entity_id = 9;
  if (this->owner_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_entity_id());
  }

  // uint64 guid = 8;
  if (this->guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->guid());
  }

  // uint32 target_entity_id = 10;
  if (this->target_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_entity_id());
  }

  // bool is_async_load = 11;
  if (this->is_async_load() != 0) {
    total_size += 1 + 1;
  }

  // uint32 target_lock_point_index = 12;
  if (this->target_lock_point_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_lock_point_index());
  }

  // uint32 room_id = 13;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtCreateGadgetNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtCreateGadgetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtCreateGadgetNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtCreateGadgetNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtCreateGadgetNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtCreateGadgetNotify)
    MergeFrom(*source);
  }
}

void EvtCreateGadgetNotify::MergeFrom(const EvtCreateGadgetNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtCreateGadgetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_init_pos()) {
    mutable_init_pos()->::proto::Vector::MergeFrom(from.init_pos());
  }
  if (from.has_init_euler_angles()) {
    mutable_init_euler_angles()->::proto::Vector::MergeFrom(from.init_euler_angles());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.camp_id() != 0) {
    set_camp_id(from.camp_id());
  }
  if (from.camp_type() != 0) {
    set_camp_type(from.camp_type());
  }
  if (from.owner_entity_id() != 0) {
    set_owner_entity_id(from.owner_entity_id());
  }
  if (from.guid() != 0) {
    set_guid(from.guid());
  }
  if (from.target_entity_id() != 0) {
    set_target_entity_id(from.target_entity_id());
  }
  if (from.is_async_load() != 0) {
    set_is_async_load(from.is_async_load());
  }
  if (from.target_lock_point_index() != 0) {
    set_target_lock_point_index(from.target_lock_point_index());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void EvtCreateGadgetNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtCreateGadgetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtCreateGadgetNotify::CopyFrom(const EvtCreateGadgetNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtCreateGadgetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtCreateGadgetNotify::IsInitialized() const {
  return true;
}

void EvtCreateGadgetNotify::Swap(EvtCreateGadgetNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtCreateGadgetNotify::InternalSwap(EvtCreateGadgetNotify* other) {
  using std::swap;
  swap(init_pos_, other->init_pos_);
  swap(init_euler_angles_, other->init_euler_angles_);
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  swap(config_id_, other->config_id_);
  swap(camp_id_, other->camp_id_);
  swap(camp_type_, other->camp_type_);
  swap(owner_entity_id_, other->owner_entity_id_);
  swap(guid_, other->guid_);
  swap(target_entity_id_, other->target_entity_id_);
  swap(is_async_load_, other->is_async_load_);
  swap(target_lock_point_index_, other->target_lock_point_index_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtCreateGadgetNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtCreateGadgetNotify

// .proto.ForwardType forward_type = 1;
void EvtCreateGadgetNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtCreateGadgetNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtCreateGadgetNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtCreateGadgetNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtCreateGadgetNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.entity_id)
  return entity_id_;
}
void EvtCreateGadgetNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.entity_id)
}

// uint32 config_id = 3;
void EvtCreateGadgetNotify::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 EvtCreateGadgetNotify::config_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.config_id)
  return config_id_;
}
void EvtCreateGadgetNotify::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.config_id)
}

// uint32 camp_id = 4;
void EvtCreateGadgetNotify::clear_camp_id() {
  camp_id_ = 0u;
}
::google::protobuf::uint32 EvtCreateGadgetNotify::camp_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.camp_id)
  return camp_id_;
}
void EvtCreateGadgetNotify::set_camp_id(::google::protobuf::uint32 value) {
  
  camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.camp_id)
}

// uint32 camp_type = 5;
void EvtCreateGadgetNotify::clear_camp_type() {
  camp_type_ = 0u;
}
::google::protobuf::uint32 EvtCreateGadgetNotify::camp_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.camp_type)
  return camp_type_;
}
void EvtCreateGadgetNotify::set_camp_type(::google::protobuf::uint32 value) {
  
  camp_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.camp_type)
}

// .proto.Vector init_pos = 6;
bool EvtCreateGadgetNotify::has_init_pos() const {
  return this != internal_default_instance() && init_pos_ != NULL;
}
void EvtCreateGadgetNotify::clear_init_pos() {
  if (GetArenaNoVirtual() == NULL && init_pos_ != NULL) delete init_pos_;
  init_pos_ = NULL;
}
const ::proto::Vector& EvtCreateGadgetNotify::init_pos() const {
  const ::proto::Vector* p = init_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.init_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtCreateGadgetNotify::mutable_init_pos() {
  
  if (init_pos_ == NULL) {
    init_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtCreateGadgetNotify.init_pos)
  return init_pos_;
}
::proto::Vector* EvtCreateGadgetNotify::release_init_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtCreateGadgetNotify.init_pos)
  
  ::proto::Vector* temp = init_pos_;
  init_pos_ = NULL;
  return temp;
}
void EvtCreateGadgetNotify::set_allocated_init_pos(::proto::Vector* init_pos) {
  delete init_pos_;
  init_pos_ = init_pos;
  if (init_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtCreateGadgetNotify.init_pos)
}

// .proto.Vector init_euler_angles = 7;
bool EvtCreateGadgetNotify::has_init_euler_angles() const {
  return this != internal_default_instance() && init_euler_angles_ != NULL;
}
void EvtCreateGadgetNotify::clear_init_euler_angles() {
  if (GetArenaNoVirtual() == NULL && init_euler_angles_ != NULL) delete init_euler_angles_;
  init_euler_angles_ = NULL;
}
const ::proto::Vector& EvtCreateGadgetNotify::init_euler_angles() const {
  const ::proto::Vector* p = init_euler_angles_;
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.init_euler_angles)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtCreateGadgetNotify::mutable_init_euler_angles() {
  
  if (init_euler_angles_ == NULL) {
    init_euler_angles_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtCreateGadgetNotify.init_euler_angles)
  return init_euler_angles_;
}
::proto::Vector* EvtCreateGadgetNotify::release_init_euler_angles() {
  // @@protoc_insertion_point(field_release:proto.EvtCreateGadgetNotify.init_euler_angles)
  
  ::proto::Vector* temp = init_euler_angles_;
  init_euler_angles_ = NULL;
  return temp;
}
void EvtCreateGadgetNotify::set_allocated_init_euler_angles(::proto::Vector* init_euler_angles) {
  delete init_euler_angles_;
  init_euler_angles_ = init_euler_angles;
  if (init_euler_angles) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtCreateGadgetNotify.init_euler_angles)
}

// uint64 guid = 8;
void EvtCreateGadgetNotify::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 EvtCreateGadgetNotify::guid() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.guid)
  return guid_;
}
void EvtCreateGadgetNotify::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.guid)
}

// uint32 owner_entity_id = 9;
void EvtCreateGadgetNotify::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
::google::protobuf::uint32 EvtCreateGadgetNotify::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.owner_entity_id)
  return owner_entity_id_;
}
void EvtCreateGadgetNotify::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.owner_entity_id)
}

// uint32 target_entity_id = 10;
void EvtCreateGadgetNotify::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
::google::protobuf::uint32 EvtCreateGadgetNotify::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.target_entity_id)
  return target_entity_id_;
}
void EvtCreateGadgetNotify::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.target_entity_id)
}

// bool is_async_load = 11;
void EvtCreateGadgetNotify::clear_is_async_load() {
  is_async_load_ = false;
}
bool EvtCreateGadgetNotify::is_async_load() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.is_async_load)
  return is_async_load_;
}
void EvtCreateGadgetNotify::set_is_async_load(bool value) {
  
  is_async_load_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.is_async_load)
}

// uint32 target_lock_point_index = 12;
void EvtCreateGadgetNotify::clear_target_lock_point_index() {
  target_lock_point_index_ = 0u;
}
::google::protobuf::uint32 EvtCreateGadgetNotify::target_lock_point_index() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.target_lock_point_index)
  return target_lock_point_index_;
}
void EvtCreateGadgetNotify::set_target_lock_point_index(::google::protobuf::uint32 value) {
  
  target_lock_point_index_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.target_lock_point_index)
}

// uint32 room_id = 13;
void EvtCreateGadgetNotify::clear_room_id() {
  room_id_ = 0u;
}
::google::protobuf::uint32 EvtCreateGadgetNotify::room_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCreateGadgetNotify.room_id)
  return room_id_;
}
void EvtCreateGadgetNotify::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCreateGadgetNotify.room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtDestroyGadgetNotify::kForwardTypeFieldNumber;
const int EvtDestroyGadgetNotify::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtDestroyGadgetNotify::EvtDestroyGadgetNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtDestroyGadgetNotify)
}
EvtDestroyGadgetNotify::EvtDestroyGadgetNotify(const EvtDestroyGadgetNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtDestroyGadgetNotify)
}

void EvtDestroyGadgetNotify::SharedCtor() {
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

EvtDestroyGadgetNotify::~EvtDestroyGadgetNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtDestroyGadgetNotify)
  SharedDtor();
}

void EvtDestroyGadgetNotify::SharedDtor() {
}

void EvtDestroyGadgetNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtDestroyGadgetNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtDestroyGadgetNotify& EvtDestroyGadgetNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtDestroyGadgetNotify* EvtDestroyGadgetNotify::New(::google::protobuf::Arena* arena) const {
  EvtDestroyGadgetNotify* n = new EvtDestroyGadgetNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtDestroyGadgetNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtDestroyGadgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool EvtDestroyGadgetNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtDestroyGadgetNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtDestroyGadgetNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtDestroyGadgetNotify)
  return false;
#undef DO_
}

void EvtDestroyGadgetNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtDestroyGadgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtDestroyGadgetNotify)
}

::google::protobuf::uint8* EvtDestroyGadgetNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtDestroyGadgetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtDestroyGadgetNotify)
  return target;
}

size_t EvtDestroyGadgetNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtDestroyGadgetNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtDestroyGadgetNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtDestroyGadgetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtDestroyGadgetNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtDestroyGadgetNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtDestroyGadgetNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtDestroyGadgetNotify)
    MergeFrom(*source);
  }
}

void EvtDestroyGadgetNotify::MergeFrom(const EvtDestroyGadgetNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtDestroyGadgetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void EvtDestroyGadgetNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtDestroyGadgetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtDestroyGadgetNotify::CopyFrom(const EvtDestroyGadgetNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtDestroyGadgetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtDestroyGadgetNotify::IsInitialized() const {
  return true;
}

void EvtDestroyGadgetNotify::Swap(EvtDestroyGadgetNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtDestroyGadgetNotify::InternalSwap(EvtDestroyGadgetNotify* other) {
  using std::swap;
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtDestroyGadgetNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtDestroyGadgetNotify

// .proto.ForwardType forward_type = 1;
void EvtDestroyGadgetNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtDestroyGadgetNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtDestroyGadgetNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtDestroyGadgetNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDestroyGadgetNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtDestroyGadgetNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtDestroyGadgetNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtDestroyGadgetNotify.entity_id)
  return entity_id_;
}
void EvtDestroyGadgetNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtDestroyGadgetNotify.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtFaceToEntityNotify::kForwardTypeFieldNumber;
const int EvtFaceToEntityNotify::kEntityIdFieldNumber;
const int EvtFaceToEntityNotify::kFaceEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtFaceToEntityNotify::EvtFaceToEntityNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtFaceToEntityNotify)
}
EvtFaceToEntityNotify::EvtFaceToEntityNotify(const EvtFaceToEntityNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&face_entity_id_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(face_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtFaceToEntityNotify)
}

void EvtFaceToEntityNotify::SharedCtor() {
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_entity_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(face_entity_id_));
  _cached_size_ = 0;
}

EvtFaceToEntityNotify::~EvtFaceToEntityNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtFaceToEntityNotify)
  SharedDtor();
}

void EvtFaceToEntityNotify::SharedDtor() {
}

void EvtFaceToEntityNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtFaceToEntityNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtFaceToEntityNotify& EvtFaceToEntityNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtFaceToEntityNotify* EvtFaceToEntityNotify::New(::google::protobuf::Arena* arena) const {
  EvtFaceToEntityNotify* n = new EvtFaceToEntityNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtFaceToEntityNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtFaceToEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_entity_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(face_entity_id_));
  _internal_metadata_.Clear();
}

bool EvtFaceToEntityNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtFaceToEntityNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 face_entity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &face_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtFaceToEntityNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtFaceToEntityNotify)
  return false;
#undef DO_
}

void EvtFaceToEntityNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtFaceToEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // uint32 face_entity_id = 3;
  if (this->face_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->face_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtFaceToEntityNotify)
}

::google::protobuf::uint8* EvtFaceToEntityNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtFaceToEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // uint32 face_entity_id = 3;
  if (this->face_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->face_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtFaceToEntityNotify)
  return target;
}

size_t EvtFaceToEntityNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtFaceToEntityNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 face_entity_id = 3;
  if (this->face_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->face_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtFaceToEntityNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtFaceToEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtFaceToEntityNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtFaceToEntityNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtFaceToEntityNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtFaceToEntityNotify)
    MergeFrom(*source);
  }
}

void EvtFaceToEntityNotify::MergeFrom(const EvtFaceToEntityNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtFaceToEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.face_entity_id() != 0) {
    set_face_entity_id(from.face_entity_id());
  }
}

void EvtFaceToEntityNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtFaceToEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtFaceToEntityNotify::CopyFrom(const EvtFaceToEntityNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtFaceToEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtFaceToEntityNotify::IsInitialized() const {
  return true;
}

void EvtFaceToEntityNotify::Swap(EvtFaceToEntityNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtFaceToEntityNotify::InternalSwap(EvtFaceToEntityNotify* other) {
  using std::swap;
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  swap(face_entity_id_, other->face_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtFaceToEntityNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtFaceToEntityNotify

// .proto.ForwardType forward_type = 1;
void EvtFaceToEntityNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtFaceToEntityNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToEntityNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtFaceToEntityNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToEntityNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtFaceToEntityNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtFaceToEntityNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToEntityNotify.entity_id)
  return entity_id_;
}
void EvtFaceToEntityNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToEntityNotify.entity_id)
}

// uint32 face_entity_id = 3;
void EvtFaceToEntityNotify::clear_face_entity_id() {
  face_entity_id_ = 0u;
}
::google::protobuf::uint32 EvtFaceToEntityNotify::face_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToEntityNotify.face_entity_id)
  return face_entity_id_;
}
void EvtFaceToEntityNotify::set_face_entity_id(::google::protobuf::uint32 value) {
  
  face_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToEntityNotify.face_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtFaceToDirInfo::kEntityIdFieldNumber;
const int EvtFaceToDirInfo::kFaceDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtFaceToDirInfo::EvtFaceToDirInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtFaceToDirInfo)
}
EvtFaceToDirInfo::EvtFaceToDirInfo(const EvtFaceToDirInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_face_dir()) {
    face_dir_ = new ::proto::Vector(*from.face_dir_);
  } else {
    face_dir_ = NULL;
  }
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtFaceToDirInfo)
}

void EvtFaceToDirInfo::SharedCtor() {
  ::memset(&face_dir_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&face_dir_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

EvtFaceToDirInfo::~EvtFaceToDirInfo() {
  // @@protoc_insertion_point(destructor:proto.EvtFaceToDirInfo)
  SharedDtor();
}

void EvtFaceToDirInfo::SharedDtor() {
  if (this != internal_default_instance()) delete face_dir_;
}

void EvtFaceToDirInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtFaceToDirInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtFaceToDirInfo& EvtFaceToDirInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtFaceToDirInfo* EvtFaceToDirInfo::New(::google::protobuf::Arena* arena) const {
  EvtFaceToDirInfo* n = new EvtFaceToDirInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtFaceToDirInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtFaceToDirInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && face_dir_ != NULL) {
    delete face_dir_;
  }
  face_dir_ = NULL;
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool EvtFaceToDirInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtFaceToDirInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector face_dir = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_face_dir()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtFaceToDirInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtFaceToDirInfo)
  return false;
#undef DO_
}

void EvtFaceToDirInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtFaceToDirInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.Vector face_dir = 2;
  if (this->has_face_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->face_dir_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtFaceToDirInfo)
}

::google::protobuf::uint8* EvtFaceToDirInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtFaceToDirInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.Vector face_dir = 2;
  if (this->has_face_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->face_dir_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtFaceToDirInfo)
  return target;
}

size_t EvtFaceToDirInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtFaceToDirInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector face_dir = 2;
  if (this->has_face_dir()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->face_dir_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtFaceToDirInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtFaceToDirInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtFaceToDirInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtFaceToDirInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtFaceToDirInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtFaceToDirInfo)
    MergeFrom(*source);
  }
}

void EvtFaceToDirInfo::MergeFrom(const EvtFaceToDirInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtFaceToDirInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_face_dir()) {
    mutable_face_dir()->::proto::Vector::MergeFrom(from.face_dir());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void EvtFaceToDirInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtFaceToDirInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtFaceToDirInfo::CopyFrom(const EvtFaceToDirInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtFaceToDirInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtFaceToDirInfo::IsInitialized() const {
  return true;
}

void EvtFaceToDirInfo::Swap(EvtFaceToDirInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtFaceToDirInfo::InternalSwap(EvtFaceToDirInfo* other) {
  using std::swap;
  swap(face_dir_, other->face_dir_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtFaceToDirInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtFaceToDirInfo

// uint32 entity_id = 1;
void EvtFaceToDirInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtFaceToDirInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToDirInfo.entity_id)
  return entity_id_;
}
void EvtFaceToDirInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToDirInfo.entity_id)
}

// .proto.Vector face_dir = 2;
bool EvtFaceToDirInfo::has_face_dir() const {
  return this != internal_default_instance() && face_dir_ != NULL;
}
void EvtFaceToDirInfo::clear_face_dir() {
  if (GetArenaNoVirtual() == NULL && face_dir_ != NULL) delete face_dir_;
  face_dir_ = NULL;
}
const ::proto::Vector& EvtFaceToDirInfo::face_dir() const {
  const ::proto::Vector* p = face_dir_;
  // @@protoc_insertion_point(field_get:proto.EvtFaceToDirInfo.face_dir)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtFaceToDirInfo::mutable_face_dir() {
  
  if (face_dir_ == NULL) {
    face_dir_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtFaceToDirInfo.face_dir)
  return face_dir_;
}
::proto::Vector* EvtFaceToDirInfo::release_face_dir() {
  // @@protoc_insertion_point(field_release:proto.EvtFaceToDirInfo.face_dir)
  
  ::proto::Vector* temp = face_dir_;
  face_dir_ = NULL;
  return temp;
}
void EvtFaceToDirInfo::set_allocated_face_dir(::proto::Vector* face_dir) {
  delete face_dir_;
  face_dir_ = face_dir;
  if (face_dir) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtFaceToDirInfo.face_dir)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtFaceToDirNotify::kForwardTypeFieldNumber;
const int EvtFaceToDirNotify::kEvtFaceToDirInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtFaceToDirNotify::EvtFaceToDirNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtFaceToDirNotify)
}
EvtFaceToDirNotify::EvtFaceToDirNotify(const EvtFaceToDirNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_evt_face_to_dir_info()) {
    evt_face_to_dir_info_ = new ::proto::EvtFaceToDirInfo(*from.evt_face_to_dir_info_);
  } else {
    evt_face_to_dir_info_ = NULL;
  }
  forward_type_ = from.forward_type_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtFaceToDirNotify)
}

void EvtFaceToDirNotify::SharedCtor() {
  ::memset(&evt_face_to_dir_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_type_) -
      reinterpret_cast<char*>(&evt_face_to_dir_info_)) + sizeof(forward_type_));
  _cached_size_ = 0;
}

EvtFaceToDirNotify::~EvtFaceToDirNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtFaceToDirNotify)
  SharedDtor();
}

void EvtFaceToDirNotify::SharedDtor() {
  if (this != internal_default_instance()) delete evt_face_to_dir_info_;
}

void EvtFaceToDirNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtFaceToDirNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtFaceToDirNotify& EvtFaceToDirNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtFaceToDirNotify* EvtFaceToDirNotify::New(::google::protobuf::Arena* arena) const {
  EvtFaceToDirNotify* n = new EvtFaceToDirNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtFaceToDirNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtFaceToDirNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && evt_face_to_dir_info_ != NULL) {
    delete evt_face_to_dir_info_;
  }
  evt_face_to_dir_info_ = NULL;
  forward_type_ = 0;
  _internal_metadata_.Clear();
}

bool EvtFaceToDirNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtFaceToDirNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EvtFaceToDirInfo evt_face_to_dir_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_evt_face_to_dir_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtFaceToDirNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtFaceToDirNotify)
  return false;
#undef DO_
}

void EvtFaceToDirNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtFaceToDirNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // .proto.EvtFaceToDirInfo evt_face_to_dir_info = 2;
  if (this->has_evt_face_to_dir_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->evt_face_to_dir_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtFaceToDirNotify)
}

::google::protobuf::uint8* EvtFaceToDirNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtFaceToDirNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // .proto.EvtFaceToDirInfo evt_face_to_dir_info = 2;
  if (this->has_evt_face_to_dir_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->evt_face_to_dir_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtFaceToDirNotify)
  return target;
}

size_t EvtFaceToDirNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtFaceToDirNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EvtFaceToDirInfo evt_face_to_dir_info = 2;
  if (this->has_evt_face_to_dir_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->evt_face_to_dir_info_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtFaceToDirNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtFaceToDirNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtFaceToDirNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtFaceToDirNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtFaceToDirNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtFaceToDirNotify)
    MergeFrom(*source);
  }
}

void EvtFaceToDirNotify::MergeFrom(const EvtFaceToDirNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtFaceToDirNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_evt_face_to_dir_info()) {
    mutable_evt_face_to_dir_info()->::proto::EvtFaceToDirInfo::MergeFrom(from.evt_face_to_dir_info());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
}

void EvtFaceToDirNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtFaceToDirNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtFaceToDirNotify::CopyFrom(const EvtFaceToDirNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtFaceToDirNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtFaceToDirNotify::IsInitialized() const {
  return true;
}

void EvtFaceToDirNotify::Swap(EvtFaceToDirNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtFaceToDirNotify::InternalSwap(EvtFaceToDirNotify* other) {
  using std::swap;
  swap(evt_face_to_dir_info_, other->evt_face_to_dir_info_);
  swap(forward_type_, other->forward_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtFaceToDirNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtFaceToDirNotify

// .proto.ForwardType forward_type = 1;
void EvtFaceToDirNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtFaceToDirNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtFaceToDirNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtFaceToDirNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtFaceToDirNotify.forward_type)
}

// .proto.EvtFaceToDirInfo evt_face_to_dir_info = 2;
bool EvtFaceToDirNotify::has_evt_face_to_dir_info() const {
  return this != internal_default_instance() && evt_face_to_dir_info_ != NULL;
}
void EvtFaceToDirNotify::clear_evt_face_to_dir_info() {
  if (GetArenaNoVirtual() == NULL && evt_face_to_dir_info_ != NULL) delete evt_face_to_dir_info_;
  evt_face_to_dir_info_ = NULL;
}
const ::proto::EvtFaceToDirInfo& EvtFaceToDirNotify::evt_face_to_dir_info() const {
  const ::proto::EvtFaceToDirInfo* p = evt_face_to_dir_info_;
  // @@protoc_insertion_point(field_get:proto.EvtFaceToDirNotify.evt_face_to_dir_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtFaceToDirInfo*>(
      &::proto::_EvtFaceToDirInfo_default_instance_);
}
::proto::EvtFaceToDirInfo* EvtFaceToDirNotify::mutable_evt_face_to_dir_info() {
  
  if (evt_face_to_dir_info_ == NULL) {
    evt_face_to_dir_info_ = new ::proto::EvtFaceToDirInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtFaceToDirNotify.evt_face_to_dir_info)
  return evt_face_to_dir_info_;
}
::proto::EvtFaceToDirInfo* EvtFaceToDirNotify::release_evt_face_to_dir_info() {
  // @@protoc_insertion_point(field_release:proto.EvtFaceToDirNotify.evt_face_to_dir_info)
  
  ::proto::EvtFaceToDirInfo* temp = evt_face_to_dir_info_;
  evt_face_to_dir_info_ = NULL;
  return temp;
}
void EvtFaceToDirNotify::set_allocated_evt_face_to_dir_info(::proto::EvtFaceToDirInfo* evt_face_to_dir_info) {
  delete evt_face_to_dir_info_;
  evt_face_to_dir_info_ = evt_face_to_dir_info;
  if (evt_face_to_dir_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtFaceToDirNotify.evt_face_to_dir_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtCostStaminaNotify::kCostStaminaFieldNumber;
const int EvtCostStaminaNotify::kSkillIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtCostStaminaNotify::EvtCostStaminaNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtCostStaminaNotify)
}
EvtCostStaminaNotify::EvtCostStaminaNotify(const EvtCostStaminaNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cost_stamina_, &from.cost_stamina_,
    static_cast<size_t>(reinterpret_cast<char*>(&skill_id_) -
    reinterpret_cast<char*>(&cost_stamina_)) + sizeof(skill_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtCostStaminaNotify)
}

void EvtCostStaminaNotify::SharedCtor() {
  ::memset(&cost_stamina_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_id_) -
      reinterpret_cast<char*>(&cost_stamina_)) + sizeof(skill_id_));
  _cached_size_ = 0;
}

EvtCostStaminaNotify::~EvtCostStaminaNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtCostStaminaNotify)
  SharedDtor();
}

void EvtCostStaminaNotify::SharedDtor() {
}

void EvtCostStaminaNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtCostStaminaNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtCostStaminaNotify& EvtCostStaminaNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtCostStaminaNotify* EvtCostStaminaNotify::New(::google::protobuf::Arena* arena) const {
  EvtCostStaminaNotify* n = new EvtCostStaminaNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtCostStaminaNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtCostStaminaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cost_stamina_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&skill_id_) -
      reinterpret_cast<char*>(&cost_stamina_)) + sizeof(skill_id_));
  _internal_metadata_.Clear();
}

bool EvtCostStaminaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtCostStaminaNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float cost_stamina = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_stamina_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 skill_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skill_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtCostStaminaNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtCostStaminaNotify)
  return false;
#undef DO_
}

void EvtCostStaminaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtCostStaminaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float cost_stamina = 1;
  if (this->cost_stamina() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->cost_stamina(), output);
  }

  // uint32 skill_id = 2;
  if (this->skill_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->skill_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtCostStaminaNotify)
}

::google::protobuf::uint8* EvtCostStaminaNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtCostStaminaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float cost_stamina = 1;
  if (this->cost_stamina() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->cost_stamina(), target);
  }

  // uint32 skill_id = 2;
  if (this->skill_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->skill_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtCostStaminaNotify)
  return target;
}

size_t EvtCostStaminaNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtCostStaminaNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float cost_stamina = 1;
  if (this->cost_stamina() != 0) {
    total_size += 1 + 4;
  }

  // uint32 skill_id = 2;
  if (this->skill_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skill_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtCostStaminaNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtCostStaminaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtCostStaminaNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtCostStaminaNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtCostStaminaNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtCostStaminaNotify)
    MergeFrom(*source);
  }
}

void EvtCostStaminaNotify::MergeFrom(const EvtCostStaminaNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtCostStaminaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cost_stamina() != 0) {
    set_cost_stamina(from.cost_stamina());
  }
  if (from.skill_id() != 0) {
    set_skill_id(from.skill_id());
  }
}

void EvtCostStaminaNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtCostStaminaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtCostStaminaNotify::CopyFrom(const EvtCostStaminaNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtCostStaminaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtCostStaminaNotify::IsInitialized() const {
  return true;
}

void EvtCostStaminaNotify::Swap(EvtCostStaminaNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtCostStaminaNotify::InternalSwap(EvtCostStaminaNotify* other) {
  using std::swap;
  swap(cost_stamina_, other->cost_stamina_);
  swap(skill_id_, other->skill_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtCostStaminaNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtCostStaminaNotify

// float cost_stamina = 1;
void EvtCostStaminaNotify::clear_cost_stamina() {
  cost_stamina_ = 0;
}
float EvtCostStaminaNotify::cost_stamina() const {
  // @@protoc_insertion_point(field_get:proto.EvtCostStaminaNotify.cost_stamina)
  return cost_stamina_;
}
void EvtCostStaminaNotify::set_cost_stamina(float value) {
  
  cost_stamina_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCostStaminaNotify.cost_stamina)
}

// uint32 skill_id = 2;
void EvtCostStaminaNotify::clear_skill_id() {
  skill_id_ = 0u;
}
::google::protobuf::uint32 EvtCostStaminaNotify::skill_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtCostStaminaNotify.skill_id)
  return skill_id_;
}
void EvtCostStaminaNotify::set_skill_id(::google::protobuf::uint32 value) {
  
  skill_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtCostStaminaNotify.skill_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtSetAttackTargetInfo::kEntityIdFieldNumber;
const int EvtSetAttackTargetInfo::kAttackTargetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtSetAttackTargetInfo::EvtSetAttackTargetInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtSetAttackTargetInfo)
}
EvtSetAttackTargetInfo::EvtSetAttackTargetInfo(const EvtSetAttackTargetInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&attack_target_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(attack_target_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtSetAttackTargetInfo)
}

void EvtSetAttackTargetInfo::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attack_target_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(attack_target_id_));
  _cached_size_ = 0;
}

EvtSetAttackTargetInfo::~EvtSetAttackTargetInfo() {
  // @@protoc_insertion_point(destructor:proto.EvtSetAttackTargetInfo)
  SharedDtor();
}

void EvtSetAttackTargetInfo::SharedDtor() {
}

void EvtSetAttackTargetInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtSetAttackTargetInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtSetAttackTargetInfo& EvtSetAttackTargetInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtSetAttackTargetInfo* EvtSetAttackTargetInfo::New(::google::protobuf::Arena* arena) const {
  EvtSetAttackTargetInfo* n = new EvtSetAttackTargetInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtSetAttackTargetInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtSetAttackTargetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attack_target_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(attack_target_id_));
  _internal_metadata_.Clear();
}

bool EvtSetAttackTargetInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtSetAttackTargetInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 attack_target_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attack_target_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtSetAttackTargetInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtSetAttackTargetInfo)
  return false;
#undef DO_
}

void EvtSetAttackTargetInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtSetAttackTargetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 attack_target_id = 2;
  if (this->attack_target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attack_target_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtSetAttackTargetInfo)
}

::google::protobuf::uint8* EvtSetAttackTargetInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtSetAttackTargetInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 attack_target_id = 2;
  if (this->attack_target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attack_target_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtSetAttackTargetInfo)
  return target;
}

size_t EvtSetAttackTargetInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtSetAttackTargetInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 attack_target_id = 2;
  if (this->attack_target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->attack_target_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtSetAttackTargetInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtSetAttackTargetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtSetAttackTargetInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtSetAttackTargetInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtSetAttackTargetInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtSetAttackTargetInfo)
    MergeFrom(*source);
  }
}

void EvtSetAttackTargetInfo::MergeFrom(const EvtSetAttackTargetInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtSetAttackTargetInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.attack_target_id() != 0) {
    set_attack_target_id(from.attack_target_id());
  }
}

void EvtSetAttackTargetInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtSetAttackTargetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtSetAttackTargetInfo::CopyFrom(const EvtSetAttackTargetInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtSetAttackTargetInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtSetAttackTargetInfo::IsInitialized() const {
  return true;
}

void EvtSetAttackTargetInfo::Swap(EvtSetAttackTargetInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtSetAttackTargetInfo::InternalSwap(EvtSetAttackTargetInfo* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(attack_target_id_, other->attack_target_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtSetAttackTargetInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtSetAttackTargetInfo

// uint32 entity_id = 1;
void EvtSetAttackTargetInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtSetAttackTargetInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtSetAttackTargetInfo.entity_id)
  return entity_id_;
}
void EvtSetAttackTargetInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtSetAttackTargetInfo.entity_id)
}

// uint32 attack_target_id = 2;
void EvtSetAttackTargetInfo::clear_attack_target_id() {
  attack_target_id_ = 0u;
}
::google::protobuf::uint32 EvtSetAttackTargetInfo::attack_target_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtSetAttackTargetInfo.attack_target_id)
  return attack_target_id_;
}
void EvtSetAttackTargetInfo::set_attack_target_id(::google::protobuf::uint32 value) {
  
  attack_target_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtSetAttackTargetInfo.attack_target_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtSetAttackTargetNotify::kForwardTypeFieldNumber;
const int EvtSetAttackTargetNotify::kEvtSetAttackTargetInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtSetAttackTargetNotify::EvtSetAttackTargetNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtSetAttackTargetNotify)
}
EvtSetAttackTargetNotify::EvtSetAttackTargetNotify(const EvtSetAttackTargetNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_evt_set_attack_target_info()) {
    evt_set_attack_target_info_ = new ::proto::EvtSetAttackTargetInfo(*from.evt_set_attack_target_info_);
  } else {
    evt_set_attack_target_info_ = NULL;
  }
  forward_type_ = from.forward_type_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtSetAttackTargetNotify)
}

void EvtSetAttackTargetNotify::SharedCtor() {
  ::memset(&evt_set_attack_target_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_type_) -
      reinterpret_cast<char*>(&evt_set_attack_target_info_)) + sizeof(forward_type_));
  _cached_size_ = 0;
}

EvtSetAttackTargetNotify::~EvtSetAttackTargetNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtSetAttackTargetNotify)
  SharedDtor();
}

void EvtSetAttackTargetNotify::SharedDtor() {
  if (this != internal_default_instance()) delete evt_set_attack_target_info_;
}

void EvtSetAttackTargetNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtSetAttackTargetNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtSetAttackTargetNotify& EvtSetAttackTargetNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtSetAttackTargetNotify* EvtSetAttackTargetNotify::New(::google::protobuf::Arena* arena) const {
  EvtSetAttackTargetNotify* n = new EvtSetAttackTargetNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtSetAttackTargetNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtSetAttackTargetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && evt_set_attack_target_info_ != NULL) {
    delete evt_set_attack_target_info_;
  }
  evt_set_attack_target_info_ = NULL;
  forward_type_ = 0;
  _internal_metadata_.Clear();
}

bool EvtSetAttackTargetNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtSetAttackTargetNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EvtSetAttackTargetInfo evt_set_attack_target_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_evt_set_attack_target_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtSetAttackTargetNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtSetAttackTargetNotify)
  return false;
#undef DO_
}

void EvtSetAttackTargetNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtSetAttackTargetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // .proto.EvtSetAttackTargetInfo evt_set_attack_target_info = 2;
  if (this->has_evt_set_attack_target_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->evt_set_attack_target_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtSetAttackTargetNotify)
}

::google::protobuf::uint8* EvtSetAttackTargetNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtSetAttackTargetNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // .proto.EvtSetAttackTargetInfo evt_set_attack_target_info = 2;
  if (this->has_evt_set_attack_target_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->evt_set_attack_target_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtSetAttackTargetNotify)
  return target;
}

size_t EvtSetAttackTargetNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtSetAttackTargetNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EvtSetAttackTargetInfo evt_set_attack_target_info = 2;
  if (this->has_evt_set_attack_target_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->evt_set_attack_target_info_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtSetAttackTargetNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtSetAttackTargetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtSetAttackTargetNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtSetAttackTargetNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtSetAttackTargetNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtSetAttackTargetNotify)
    MergeFrom(*source);
  }
}

void EvtSetAttackTargetNotify::MergeFrom(const EvtSetAttackTargetNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtSetAttackTargetNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_evt_set_attack_target_info()) {
    mutable_evt_set_attack_target_info()->::proto::EvtSetAttackTargetInfo::MergeFrom(from.evt_set_attack_target_info());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
}

void EvtSetAttackTargetNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtSetAttackTargetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtSetAttackTargetNotify::CopyFrom(const EvtSetAttackTargetNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtSetAttackTargetNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtSetAttackTargetNotify::IsInitialized() const {
  return true;
}

void EvtSetAttackTargetNotify::Swap(EvtSetAttackTargetNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtSetAttackTargetNotify::InternalSwap(EvtSetAttackTargetNotify* other) {
  using std::swap;
  swap(evt_set_attack_target_info_, other->evt_set_attack_target_info_);
  swap(forward_type_, other->forward_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtSetAttackTargetNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtSetAttackTargetNotify

// .proto.ForwardType forward_type = 1;
void EvtSetAttackTargetNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtSetAttackTargetNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtSetAttackTargetNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtSetAttackTargetNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtSetAttackTargetNotify.forward_type)
}

// .proto.EvtSetAttackTargetInfo evt_set_attack_target_info = 2;
bool EvtSetAttackTargetNotify::has_evt_set_attack_target_info() const {
  return this != internal_default_instance() && evt_set_attack_target_info_ != NULL;
}
void EvtSetAttackTargetNotify::clear_evt_set_attack_target_info() {
  if (GetArenaNoVirtual() == NULL && evt_set_attack_target_info_ != NULL) delete evt_set_attack_target_info_;
  evt_set_attack_target_info_ = NULL;
}
const ::proto::EvtSetAttackTargetInfo& EvtSetAttackTargetNotify::evt_set_attack_target_info() const {
  const ::proto::EvtSetAttackTargetInfo* p = evt_set_attack_target_info_;
  // @@protoc_insertion_point(field_get:proto.EvtSetAttackTargetNotify.evt_set_attack_target_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtSetAttackTargetInfo*>(
      &::proto::_EvtSetAttackTargetInfo_default_instance_);
}
::proto::EvtSetAttackTargetInfo* EvtSetAttackTargetNotify::mutable_evt_set_attack_target_info() {
  
  if (evt_set_attack_target_info_ == NULL) {
    evt_set_attack_target_info_ = new ::proto::EvtSetAttackTargetInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtSetAttackTargetNotify.evt_set_attack_target_info)
  return evt_set_attack_target_info_;
}
::proto::EvtSetAttackTargetInfo* EvtSetAttackTargetNotify::release_evt_set_attack_target_info() {
  // @@protoc_insertion_point(field_release:proto.EvtSetAttackTargetNotify.evt_set_attack_target_info)
  
  ::proto::EvtSetAttackTargetInfo* temp = evt_set_attack_target_info_;
  evt_set_attack_target_info_ = NULL;
  return temp;
}
void EvtSetAttackTargetNotify::set_allocated_evt_set_attack_target_info(::proto::EvtSetAttackTargetInfo* evt_set_attack_target_info) {
  delete evt_set_attack_target_info_;
  evt_set_attack_target_info_ = evt_set_attack_target_info;
  if (evt_set_attack_target_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtSetAttackTargetNotify.evt_set_attack_target_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAnimatorStateChangedInfo::kEntityIdFieldNumber;
const int EvtAnimatorStateChangedInfo::kToStateHashFieldNumber;
const int EvtAnimatorStateChangedInfo::kNormalizedTimeCompactFieldNumber;
const int EvtAnimatorStateChangedInfo::kFaceAngleCompactFieldNumber;
const int EvtAnimatorStateChangedInfo::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAnimatorStateChangedInfo::EvtAnimatorStateChangedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAnimatorStateChangedInfo)
}
EvtAnimatorStateChangedInfo::EvtAnimatorStateChangedInfo(const EvtAnimatorStateChangedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&face_angle_compact_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(face_angle_compact_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtAnimatorStateChangedInfo)
}

void EvtAnimatorStateChangedInfo::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_angle_compact_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(face_angle_compact_));
  _cached_size_ = 0;
}

EvtAnimatorStateChangedInfo::~EvtAnimatorStateChangedInfo() {
  // @@protoc_insertion_point(destructor:proto.EvtAnimatorStateChangedInfo)
  SharedDtor();
}

void EvtAnimatorStateChangedInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void EvtAnimatorStateChangedInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAnimatorStateChangedInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAnimatorStateChangedInfo& EvtAnimatorStateChangedInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAnimatorStateChangedInfo* EvtAnimatorStateChangedInfo::New(::google::protobuf::Arena* arena) const {
  EvtAnimatorStateChangedInfo* n = new EvtAnimatorStateChangedInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAnimatorStateChangedInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAnimatorStateChangedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_angle_compact_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(face_angle_compact_));
  _internal_metadata_.Clear();
}

bool EvtAnimatorStateChangedInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAnimatorStateChangedInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_state_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_state_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 normalized_time_compact = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &normalized_time_compact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 face_angle_compact = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &face_angle_compact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAnimatorStateChangedInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAnimatorStateChangedInfo)
  return false;
#undef DO_
}

void EvtAnimatorStateChangedInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAnimatorStateChangedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 to_state_hash = 2;
  if (this->to_state_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_state_hash(), output);
  }

  // uint32 normalized_time_compact = 3;
  if (this->normalized_time_compact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->normalized_time_compact(), output);
  }

  // int32 face_angle_compact = 4;
  if (this->face_angle_compact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->face_angle_compact(), output);
  }

  // .proto.Vector pos = 5;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAnimatorStateChangedInfo)
}

::google::protobuf::uint8* EvtAnimatorStateChangedInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAnimatorStateChangedInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 to_state_hash = 2;
  if (this->to_state_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_state_hash(), target);
  }

  // uint32 normalized_time_compact = 3;
  if (this->normalized_time_compact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->normalized_time_compact(), target);
  }

  // int32 face_angle_compact = 4;
  if (this->face_angle_compact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->face_angle_compact(), target);
  }

  // .proto.Vector pos = 5;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAnimatorStateChangedInfo)
  return target;
}

size_t EvtAnimatorStateChangedInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAnimatorStateChangedInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 5;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 to_state_hash = 2;
  if (this->to_state_hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_state_hash());
  }

  // uint32 normalized_time_compact = 3;
  if (this->normalized_time_compact() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->normalized_time_compact());
  }

  // int32 face_angle_compact = 4;
  if (this->face_angle_compact() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->face_angle_compact());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAnimatorStateChangedInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAnimatorStateChangedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAnimatorStateChangedInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAnimatorStateChangedInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAnimatorStateChangedInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAnimatorStateChangedInfo)
    MergeFrom(*source);
  }
}

void EvtAnimatorStateChangedInfo::MergeFrom(const EvtAnimatorStateChangedInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAnimatorStateChangedInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.to_state_hash() != 0) {
    set_to_state_hash(from.to_state_hash());
  }
  if (from.normalized_time_compact() != 0) {
    set_normalized_time_compact(from.normalized_time_compact());
  }
  if (from.face_angle_compact() != 0) {
    set_face_angle_compact(from.face_angle_compact());
  }
}

void EvtAnimatorStateChangedInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAnimatorStateChangedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAnimatorStateChangedInfo::CopyFrom(const EvtAnimatorStateChangedInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAnimatorStateChangedInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAnimatorStateChangedInfo::IsInitialized() const {
  return true;
}

void EvtAnimatorStateChangedInfo::Swap(EvtAnimatorStateChangedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAnimatorStateChangedInfo::InternalSwap(EvtAnimatorStateChangedInfo* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(entity_id_, other->entity_id_);
  swap(to_state_hash_, other->to_state_hash_);
  swap(normalized_time_compact_, other->normalized_time_compact_);
  swap(face_angle_compact_, other->face_angle_compact_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAnimatorStateChangedInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAnimatorStateChangedInfo

// uint32 entity_id = 1;
void EvtAnimatorStateChangedInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtAnimatorStateChangedInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.entity_id)
  return entity_id_;
}
void EvtAnimatorStateChangedInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedInfo.entity_id)
}

// uint32 to_state_hash = 2;
void EvtAnimatorStateChangedInfo::clear_to_state_hash() {
  to_state_hash_ = 0u;
}
::google::protobuf::uint32 EvtAnimatorStateChangedInfo::to_state_hash() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.to_state_hash)
  return to_state_hash_;
}
void EvtAnimatorStateChangedInfo::set_to_state_hash(::google::protobuf::uint32 value) {
  
  to_state_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedInfo.to_state_hash)
}

// uint32 normalized_time_compact = 3;
void EvtAnimatorStateChangedInfo::clear_normalized_time_compact() {
  normalized_time_compact_ = 0u;
}
::google::protobuf::uint32 EvtAnimatorStateChangedInfo::normalized_time_compact() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.normalized_time_compact)
  return normalized_time_compact_;
}
void EvtAnimatorStateChangedInfo::set_normalized_time_compact(::google::protobuf::uint32 value) {
  
  normalized_time_compact_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedInfo.normalized_time_compact)
}

// int32 face_angle_compact = 4;
void EvtAnimatorStateChangedInfo::clear_face_angle_compact() {
  face_angle_compact_ = 0;
}
::google::protobuf::int32 EvtAnimatorStateChangedInfo::face_angle_compact() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.face_angle_compact)
  return face_angle_compact_;
}
void EvtAnimatorStateChangedInfo::set_face_angle_compact(::google::protobuf::int32 value) {
  
  face_angle_compact_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedInfo.face_angle_compact)
}

// .proto.Vector pos = 5;
bool EvtAnimatorStateChangedInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void EvtAnimatorStateChangedInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& EvtAnimatorStateChangedInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtAnimatorStateChangedInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAnimatorStateChangedInfo.pos)
  return pos_;
}
::proto::Vector* EvtAnimatorStateChangedInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtAnimatorStateChangedInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void EvtAnimatorStateChangedInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAnimatorStateChangedInfo.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAnimatorStateChangedNotify::kForwardTypeFieldNumber;
const int EvtAnimatorStateChangedNotify::kEvtAnimatorStateChangedInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAnimatorStateChangedNotify::EvtAnimatorStateChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAnimatorStateChangedNotify)
}
EvtAnimatorStateChangedNotify::EvtAnimatorStateChangedNotify(const EvtAnimatorStateChangedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_evt_animator_state_changed_info()) {
    evt_animator_state_changed_info_ = new ::proto::EvtAnimatorStateChangedInfo(*from.evt_animator_state_changed_info_);
  } else {
    evt_animator_state_changed_info_ = NULL;
  }
  forward_type_ = from.forward_type_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtAnimatorStateChangedNotify)
}

void EvtAnimatorStateChangedNotify::SharedCtor() {
  ::memset(&evt_animator_state_changed_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_type_) -
      reinterpret_cast<char*>(&evt_animator_state_changed_info_)) + sizeof(forward_type_));
  _cached_size_ = 0;
}

EvtAnimatorStateChangedNotify::~EvtAnimatorStateChangedNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAnimatorStateChangedNotify)
  SharedDtor();
}

void EvtAnimatorStateChangedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete evt_animator_state_changed_info_;
}

void EvtAnimatorStateChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAnimatorStateChangedNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAnimatorStateChangedNotify& EvtAnimatorStateChangedNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAnimatorStateChangedNotify* EvtAnimatorStateChangedNotify::New(::google::protobuf::Arena* arena) const {
  EvtAnimatorStateChangedNotify* n = new EvtAnimatorStateChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAnimatorStateChangedNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAnimatorStateChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && evt_animator_state_changed_info_ != NULL) {
    delete evt_animator_state_changed_info_;
  }
  evt_animator_state_changed_info_ = NULL;
  forward_type_ = 0;
  _internal_metadata_.Clear();
}

bool EvtAnimatorStateChangedNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAnimatorStateChangedNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_evt_animator_state_changed_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAnimatorStateChangedNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAnimatorStateChangedNotify)
  return false;
#undef DO_
}

void EvtAnimatorStateChangedNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAnimatorStateChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // .proto.EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 2;
  if (this->has_evt_animator_state_changed_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->evt_animator_state_changed_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAnimatorStateChangedNotify)
}

::google::protobuf::uint8* EvtAnimatorStateChangedNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAnimatorStateChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // .proto.EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 2;
  if (this->has_evt_animator_state_changed_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->evt_animator_state_changed_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAnimatorStateChangedNotify)
  return target;
}

size_t EvtAnimatorStateChangedNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAnimatorStateChangedNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 2;
  if (this->has_evt_animator_state_changed_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->evt_animator_state_changed_info_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAnimatorStateChangedNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAnimatorStateChangedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAnimatorStateChangedNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAnimatorStateChangedNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAnimatorStateChangedNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAnimatorStateChangedNotify)
    MergeFrom(*source);
  }
}

void EvtAnimatorStateChangedNotify::MergeFrom(const EvtAnimatorStateChangedNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAnimatorStateChangedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_evt_animator_state_changed_info()) {
    mutable_evt_animator_state_changed_info()->::proto::EvtAnimatorStateChangedInfo::MergeFrom(from.evt_animator_state_changed_info());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
}

void EvtAnimatorStateChangedNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAnimatorStateChangedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAnimatorStateChangedNotify::CopyFrom(const EvtAnimatorStateChangedNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAnimatorStateChangedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAnimatorStateChangedNotify::IsInitialized() const {
  return true;
}

void EvtAnimatorStateChangedNotify::Swap(EvtAnimatorStateChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAnimatorStateChangedNotify::InternalSwap(EvtAnimatorStateChangedNotify* other) {
  using std::swap;
  swap(evt_animator_state_changed_info_, other->evt_animator_state_changed_info_);
  swap(forward_type_, other->forward_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAnimatorStateChangedNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAnimatorStateChangedNotify

// .proto.ForwardType forward_type = 1;
void EvtAnimatorStateChangedNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtAnimatorStateChangedNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtAnimatorStateChangedNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAnimatorStateChangedNotify.forward_type)
}

// .proto.EvtAnimatorStateChangedInfo evt_animator_state_changed_info = 2;
bool EvtAnimatorStateChangedNotify::has_evt_animator_state_changed_info() const {
  return this != internal_default_instance() && evt_animator_state_changed_info_ != NULL;
}
void EvtAnimatorStateChangedNotify::clear_evt_animator_state_changed_info() {
  if (GetArenaNoVirtual() == NULL && evt_animator_state_changed_info_ != NULL) delete evt_animator_state_changed_info_;
  evt_animator_state_changed_info_ = NULL;
}
const ::proto::EvtAnimatorStateChangedInfo& EvtAnimatorStateChangedNotify::evt_animator_state_changed_info() const {
  const ::proto::EvtAnimatorStateChangedInfo* p = evt_animator_state_changed_info_;
  // @@protoc_insertion_point(field_get:proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtAnimatorStateChangedInfo*>(
      &::proto::_EvtAnimatorStateChangedInfo_default_instance_);
}
::proto::EvtAnimatorStateChangedInfo* EvtAnimatorStateChangedNotify::mutable_evt_animator_state_changed_info() {
  
  if (evt_animator_state_changed_info_ == NULL) {
    evt_animator_state_changed_info_ = new ::proto::EvtAnimatorStateChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info)
  return evt_animator_state_changed_info_;
}
::proto::EvtAnimatorStateChangedInfo* EvtAnimatorStateChangedNotify::release_evt_animator_state_changed_info() {
  // @@protoc_insertion_point(field_release:proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info)
  
  ::proto::EvtAnimatorStateChangedInfo* temp = evt_animator_state_changed_info_;
  evt_animator_state_changed_info_ = NULL;
  return temp;
}
void EvtAnimatorStateChangedNotify::set_allocated_evt_animator_state_changed_info(::proto::EvtAnimatorStateChangedInfo* evt_animator_state_changed_info) {
  delete evt_animator_state_changed_info_;
  evt_animator_state_changed_info_ = evt_animator_state_changed_info;
  if (evt_animator_state_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAnimatorStateChangedNotify.evt_animator_state_changed_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtRushMoveInfo::kEntityIdFieldNumber;
const int EvtRushMoveInfo::kVelocityFieldNumber;
const int EvtRushMoveInfo::kTimeRangeFieldNumber;
const int EvtRushMoveInfo::kStateNameHashFieldNumber;
const int EvtRushMoveInfo::kFaceAngleCompactFieldNumber;
const int EvtRushMoveInfo::kPosFieldNumber;
const int EvtRushMoveInfo::kRushAttackTargetPosFieldNumber;
const int EvtRushMoveInfo::kRushToPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtRushMoveInfo::EvtRushMoveInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtRushMoveInfo)
}
EvtRushMoveInfo::EvtRushMoveInfo(const EvtRushMoveInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_velocity()) {
    velocity_ = new ::proto::Vector(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rush_attack_target_pos()) {
    rush_attack_target_pos_ = new ::proto::Vector(*from.rush_attack_target_pos_);
  } else {
    rush_attack_target_pos_ = NULL;
  }
  if (from.has_rush_to_pos()) {
    rush_to_pos_ = new ::proto::Vector(*from.rush_to_pos_);
  } else {
    rush_to_pos_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&face_angle_compact_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(face_angle_compact_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtRushMoveInfo)
}

void EvtRushMoveInfo::SharedCtor() {
  ::memset(&velocity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_angle_compact_) -
      reinterpret_cast<char*>(&velocity_)) + sizeof(face_angle_compact_));
  _cached_size_ = 0;
}

EvtRushMoveInfo::~EvtRushMoveInfo() {
  // @@protoc_insertion_point(destructor:proto.EvtRushMoveInfo)
  SharedDtor();
}

void EvtRushMoveInfo::SharedDtor() {
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rush_attack_target_pos_;
  if (this != internal_default_instance()) delete rush_to_pos_;
}

void EvtRushMoveInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtRushMoveInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtRushMoveInfo& EvtRushMoveInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtRushMoveInfo* EvtRushMoveInfo::New(::google::protobuf::Arena* arena) const {
  EvtRushMoveInfo* n = new EvtRushMoveInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtRushMoveInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtRushMoveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rush_attack_target_pos_ != NULL) {
    delete rush_attack_target_pos_;
  }
  rush_attack_target_pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rush_to_pos_ != NULL) {
    delete rush_to_pos_;
  }
  rush_to_pos_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&face_angle_compact_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(face_angle_compact_));
  _internal_metadata_.Clear();
}

bool EvtRushMoveInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtRushMoveInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector velocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float timeRange = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timerange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 state_name_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &state_name_hash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 face_angle_compact = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &face_angle_compact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rush_attack_target_pos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rush_attack_target_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rush_to_pos = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rush_to_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtRushMoveInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtRushMoveInfo)
  return false;
#undef DO_
}

void EvtRushMoveInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtRushMoveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.Vector velocity = 2;
  if (this->has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->velocity_, output);
  }

  // float timeRange = 3;
  if (this->timerange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->timerange(), output);
  }

  // int32 state_name_hash = 4;
  if (this->state_name_hash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->state_name_hash(), output);
  }

  // int32 face_angle_compact = 5;
  if (this->face_angle_compact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->face_angle_compact(), output);
  }

  // .proto.Vector pos = 6;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pos_, output);
  }

  // .proto.Vector rush_attack_target_pos = 7;
  if (this->has_rush_attack_target_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->rush_attack_target_pos_, output);
  }

  // .proto.Vector rush_to_pos = 8;
  if (this->has_rush_to_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->rush_to_pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtRushMoveInfo)
}

::google::protobuf::uint8* EvtRushMoveInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtRushMoveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.Vector velocity = 2;
  if (this->has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->velocity_, deterministic, target);
  }

  // float timeRange = 3;
  if (this->timerange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->timerange(), target);
  }

  // int32 state_name_hash = 4;
  if (this->state_name_hash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->state_name_hash(), target);
  }

  // int32 face_angle_compact = 5;
  if (this->face_angle_compact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->face_angle_compact(), target);
  }

  // .proto.Vector pos = 6;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->pos_, deterministic, target);
  }

  // .proto.Vector rush_attack_target_pos = 7;
  if (this->has_rush_attack_target_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->rush_attack_target_pos_, deterministic, target);
  }

  // .proto.Vector rush_to_pos = 8;
  if (this->has_rush_to_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->rush_to_pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtRushMoveInfo)
  return target;
}

size_t EvtRushMoveInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtRushMoveInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector velocity = 2;
  if (this->has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->velocity_);
  }

  // .proto.Vector pos = 6;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector rush_attack_target_pos = 7;
  if (this->has_rush_attack_target_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rush_attack_target_pos_);
  }

  // .proto.Vector rush_to_pos = 8;
  if (this->has_rush_to_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rush_to_pos_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // float timeRange = 3;
  if (this->timerange() != 0) {
    total_size += 1 + 4;
  }

  // int32 state_name_hash = 4;
  if (this->state_name_hash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->state_name_hash());
  }

  // int32 face_angle_compact = 5;
  if (this->face_angle_compact() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->face_angle_compact());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtRushMoveInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtRushMoveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtRushMoveInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtRushMoveInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtRushMoveInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtRushMoveInfo)
    MergeFrom(*source);
  }
}

void EvtRushMoveInfo::MergeFrom(const EvtRushMoveInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtRushMoveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_velocity()) {
    mutable_velocity()->::proto::Vector::MergeFrom(from.velocity());
  }
  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_rush_attack_target_pos()) {
    mutable_rush_attack_target_pos()->::proto::Vector::MergeFrom(from.rush_attack_target_pos());
  }
  if (from.has_rush_to_pos()) {
    mutable_rush_to_pos()->::proto::Vector::MergeFrom(from.rush_to_pos());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.timerange() != 0) {
    set_timerange(from.timerange());
  }
  if (from.state_name_hash() != 0) {
    set_state_name_hash(from.state_name_hash());
  }
  if (from.face_angle_compact() != 0) {
    set_face_angle_compact(from.face_angle_compact());
  }
}

void EvtRushMoveInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtRushMoveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtRushMoveInfo::CopyFrom(const EvtRushMoveInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtRushMoveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtRushMoveInfo::IsInitialized() const {
  return true;
}

void EvtRushMoveInfo::Swap(EvtRushMoveInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtRushMoveInfo::InternalSwap(EvtRushMoveInfo* other) {
  using std::swap;
  swap(velocity_, other->velocity_);
  swap(pos_, other->pos_);
  swap(rush_attack_target_pos_, other->rush_attack_target_pos_);
  swap(rush_to_pos_, other->rush_to_pos_);
  swap(entity_id_, other->entity_id_);
  swap(timerange_, other->timerange_);
  swap(state_name_hash_, other->state_name_hash_);
  swap(face_angle_compact_, other->face_angle_compact_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtRushMoveInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtRushMoveInfo

// uint32 entity_id = 1;
void EvtRushMoveInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtRushMoveInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.entity_id)
  return entity_id_;
}
void EvtRushMoveInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveInfo.entity_id)
}

// .proto.Vector velocity = 2;
bool EvtRushMoveInfo::has_velocity() const {
  return this != internal_default_instance() && velocity_ != NULL;
}
void EvtRushMoveInfo::clear_velocity() {
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) delete velocity_;
  velocity_ = NULL;
}
const ::proto::Vector& EvtRushMoveInfo::velocity() const {
  const ::proto::Vector* p = velocity_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.velocity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtRushMoveInfo::mutable_velocity() {
  
  if (velocity_ == NULL) {
    velocity_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveInfo.velocity)
  return velocity_;
}
::proto::Vector* EvtRushMoveInfo::release_velocity() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveInfo.velocity)
  
  ::proto::Vector* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
void EvtRushMoveInfo::set_allocated_velocity(::proto::Vector* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveInfo.velocity)
}

// float timeRange = 3;
void EvtRushMoveInfo::clear_timerange() {
  timerange_ = 0;
}
float EvtRushMoveInfo::timerange() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.timeRange)
  return timerange_;
}
void EvtRushMoveInfo::set_timerange(float value) {
  
  timerange_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveInfo.timeRange)
}

// int32 state_name_hash = 4;
void EvtRushMoveInfo::clear_state_name_hash() {
  state_name_hash_ = 0;
}
::google::protobuf::int32 EvtRushMoveInfo::state_name_hash() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.state_name_hash)
  return state_name_hash_;
}
void EvtRushMoveInfo::set_state_name_hash(::google::protobuf::int32 value) {
  
  state_name_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveInfo.state_name_hash)
}

// int32 face_angle_compact = 5;
void EvtRushMoveInfo::clear_face_angle_compact() {
  face_angle_compact_ = 0;
}
::google::protobuf::int32 EvtRushMoveInfo::face_angle_compact() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.face_angle_compact)
  return face_angle_compact_;
}
void EvtRushMoveInfo::set_face_angle_compact(::google::protobuf::int32 value) {
  
  face_angle_compact_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveInfo.face_angle_compact)
}

// .proto.Vector pos = 6;
bool EvtRushMoveInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void EvtRushMoveInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& EvtRushMoveInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtRushMoveInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveInfo.pos)
  return pos_;
}
::proto::Vector* EvtRushMoveInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void EvtRushMoveInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveInfo.pos)
}

// .proto.Vector rush_attack_target_pos = 7;
bool EvtRushMoveInfo::has_rush_attack_target_pos() const {
  return this != internal_default_instance() && rush_attack_target_pos_ != NULL;
}
void EvtRushMoveInfo::clear_rush_attack_target_pos() {
  if (GetArenaNoVirtual() == NULL && rush_attack_target_pos_ != NULL) delete rush_attack_target_pos_;
  rush_attack_target_pos_ = NULL;
}
const ::proto::Vector& EvtRushMoveInfo::rush_attack_target_pos() const {
  const ::proto::Vector* p = rush_attack_target_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.rush_attack_target_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtRushMoveInfo::mutable_rush_attack_target_pos() {
  
  if (rush_attack_target_pos_ == NULL) {
    rush_attack_target_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveInfo.rush_attack_target_pos)
  return rush_attack_target_pos_;
}
::proto::Vector* EvtRushMoveInfo::release_rush_attack_target_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveInfo.rush_attack_target_pos)
  
  ::proto::Vector* temp = rush_attack_target_pos_;
  rush_attack_target_pos_ = NULL;
  return temp;
}
void EvtRushMoveInfo::set_allocated_rush_attack_target_pos(::proto::Vector* rush_attack_target_pos) {
  delete rush_attack_target_pos_;
  rush_attack_target_pos_ = rush_attack_target_pos;
  if (rush_attack_target_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveInfo.rush_attack_target_pos)
}

// .proto.Vector rush_to_pos = 8;
bool EvtRushMoveInfo::has_rush_to_pos() const {
  return this != internal_default_instance() && rush_to_pos_ != NULL;
}
void EvtRushMoveInfo::clear_rush_to_pos() {
  if (GetArenaNoVirtual() == NULL && rush_to_pos_ != NULL) delete rush_to_pos_;
  rush_to_pos_ = NULL;
}
const ::proto::Vector& EvtRushMoveInfo::rush_to_pos() const {
  const ::proto::Vector* p = rush_to_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveInfo.rush_to_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtRushMoveInfo::mutable_rush_to_pos() {
  
  if (rush_to_pos_ == NULL) {
    rush_to_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveInfo.rush_to_pos)
  return rush_to_pos_;
}
::proto::Vector* EvtRushMoveInfo::release_rush_to_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveInfo.rush_to_pos)
  
  ::proto::Vector* temp = rush_to_pos_;
  rush_to_pos_ = NULL;
  return temp;
}
void EvtRushMoveInfo::set_allocated_rush_to_pos(::proto::Vector* rush_to_pos) {
  delete rush_to_pos_;
  rush_to_pos_ = rush_to_pos;
  if (rush_to_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveInfo.rush_to_pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtRushMoveNotify::kForwardTypeFieldNumber;
const int EvtRushMoveNotify::kEvtRushMoveInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtRushMoveNotify::EvtRushMoveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtRushMoveNotify)
}
EvtRushMoveNotify::EvtRushMoveNotify(const EvtRushMoveNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_evt_rush_move_info()) {
    evt_rush_move_info_ = new ::proto::EvtRushMoveInfo(*from.evt_rush_move_info_);
  } else {
    evt_rush_move_info_ = NULL;
  }
  forward_type_ = from.forward_type_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtRushMoveNotify)
}

void EvtRushMoveNotify::SharedCtor() {
  ::memset(&evt_rush_move_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_type_) -
      reinterpret_cast<char*>(&evt_rush_move_info_)) + sizeof(forward_type_));
  _cached_size_ = 0;
}

EvtRushMoveNotify::~EvtRushMoveNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtRushMoveNotify)
  SharedDtor();
}

void EvtRushMoveNotify::SharedDtor() {
  if (this != internal_default_instance()) delete evt_rush_move_info_;
}

void EvtRushMoveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtRushMoveNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtRushMoveNotify& EvtRushMoveNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtRushMoveNotify* EvtRushMoveNotify::New(::google::protobuf::Arena* arena) const {
  EvtRushMoveNotify* n = new EvtRushMoveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtRushMoveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtRushMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && evt_rush_move_info_ != NULL) {
    delete evt_rush_move_info_;
  }
  evt_rush_move_info_ = NULL;
  forward_type_ = 0;
  _internal_metadata_.Clear();
}

bool EvtRushMoveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtRushMoveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EvtRushMoveInfo evt_rush_move_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_evt_rush_move_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtRushMoveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtRushMoveNotify)
  return false;
#undef DO_
}

void EvtRushMoveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtRushMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // .proto.EvtRushMoveInfo evt_rush_move_info = 2;
  if (this->has_evt_rush_move_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->evt_rush_move_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtRushMoveNotify)
}

::google::protobuf::uint8* EvtRushMoveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtRushMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // .proto.EvtRushMoveInfo evt_rush_move_info = 2;
  if (this->has_evt_rush_move_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->evt_rush_move_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtRushMoveNotify)
  return target;
}

size_t EvtRushMoveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtRushMoveNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EvtRushMoveInfo evt_rush_move_info = 2;
  if (this->has_evt_rush_move_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->evt_rush_move_info_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtRushMoveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtRushMoveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtRushMoveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtRushMoveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtRushMoveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtRushMoveNotify)
    MergeFrom(*source);
  }
}

void EvtRushMoveNotify::MergeFrom(const EvtRushMoveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtRushMoveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_evt_rush_move_info()) {
    mutable_evt_rush_move_info()->::proto::EvtRushMoveInfo::MergeFrom(from.evt_rush_move_info());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
}

void EvtRushMoveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtRushMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtRushMoveNotify::CopyFrom(const EvtRushMoveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtRushMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtRushMoveNotify::IsInitialized() const {
  return true;
}

void EvtRushMoveNotify::Swap(EvtRushMoveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtRushMoveNotify::InternalSwap(EvtRushMoveNotify* other) {
  using std::swap;
  swap(evt_rush_move_info_, other->evt_rush_move_info_);
  swap(forward_type_, other->forward_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtRushMoveNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtRushMoveNotify

// .proto.ForwardType forward_type = 1;
void EvtRushMoveNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtRushMoveNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtRushMoveNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtRushMoveNotify.forward_type)
}

// .proto.EvtRushMoveInfo evt_rush_move_info = 2;
bool EvtRushMoveNotify::has_evt_rush_move_info() const {
  return this != internal_default_instance() && evt_rush_move_info_ != NULL;
}
void EvtRushMoveNotify::clear_evt_rush_move_info() {
  if (GetArenaNoVirtual() == NULL && evt_rush_move_info_ != NULL) delete evt_rush_move_info_;
  evt_rush_move_info_ = NULL;
}
const ::proto::EvtRushMoveInfo& EvtRushMoveNotify::evt_rush_move_info() const {
  const ::proto::EvtRushMoveInfo* p = evt_rush_move_info_;
  // @@protoc_insertion_point(field_get:proto.EvtRushMoveNotify.evt_rush_move_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EvtRushMoveInfo*>(
      &::proto::_EvtRushMoveInfo_default_instance_);
}
::proto::EvtRushMoveInfo* EvtRushMoveNotify::mutable_evt_rush_move_info() {
  
  if (evt_rush_move_info_ == NULL) {
    evt_rush_move_info_ = new ::proto::EvtRushMoveInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtRushMoveNotify.evt_rush_move_info)
  return evt_rush_move_info_;
}
::proto::EvtRushMoveInfo* EvtRushMoveNotify::release_evt_rush_move_info() {
  // @@protoc_insertion_point(field_release:proto.EvtRushMoveNotify.evt_rush_move_info)
  
  ::proto::EvtRushMoveInfo* temp = evt_rush_move_info_;
  evt_rush_move_info_ = NULL;
  return temp;
}
void EvtRushMoveNotify::set_allocated_evt_rush_move_info(::proto::EvtRushMoveInfo* evt_rush_move_info) {
  delete evt_rush_move_info_;
  evt_rush_move_info_ = evt_rush_move_info;
  if (evt_rush_move_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtRushMoveNotify.evt_rush_move_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtBulletHitNotify::kForwardTypeFieldNumber;
const int EvtBulletHitNotify::kForwardPeerFieldNumber;
const int EvtBulletHitNotify::kEntityIdFieldNumber;
const int EvtBulletHitNotify::kHitEntityIdFieldNumber;
const int EvtBulletHitNotify::kHitColliderTypeFieldNumber;
const int EvtBulletHitNotify::kHitBoxIndexFieldNumber;
const int EvtBulletHitNotify::kHitPointFieldNumber;
const int EvtBulletHitNotify::kHitNormalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtBulletHitNotify::EvtBulletHitNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtBulletHitNotify)
}
EvtBulletHitNotify::EvtBulletHitNotify(const EvtBulletHitNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hit_point()) {
    hit_point_ = new ::proto::Vector(*from.hit_point_);
  } else {
    hit_point_ = NULL;
  }
  if (from.has_hit_normal()) {
    hit_normal_ = new ::proto::Vector(*from.hit_normal_);
  } else {
    hit_normal_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&hit_box_index_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(hit_box_index_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtBulletHitNotify)
}

void EvtBulletHitNotify::SharedCtor() {
  ::memset(&hit_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hit_box_index_) -
      reinterpret_cast<char*>(&hit_point_)) + sizeof(hit_box_index_));
  _cached_size_ = 0;
}

EvtBulletHitNotify::~EvtBulletHitNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtBulletHitNotify)
  SharedDtor();
}

void EvtBulletHitNotify::SharedDtor() {
  if (this != internal_default_instance()) delete hit_point_;
  if (this != internal_default_instance()) delete hit_normal_;
}

void EvtBulletHitNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtBulletHitNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtBulletHitNotify& EvtBulletHitNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtBulletHitNotify* EvtBulletHitNotify::New(::google::protobuf::Arena* arena) const {
  EvtBulletHitNotify* n = new EvtBulletHitNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtBulletHitNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtBulletHitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hit_point_ != NULL) {
    delete hit_point_;
  }
  hit_point_ = NULL;
  if (GetArenaNoVirtual() == NULL && hit_normal_ != NULL) {
    delete hit_normal_;
  }
  hit_normal_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hit_box_index_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(hit_box_index_));
  _internal_metadata_.Clear();
}

bool EvtBulletHitNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtBulletHitNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 forward_peer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &forward_peer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hit_entity_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hit_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.HitColliderType hit_collider_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hit_collider_type(static_cast< ::proto::HitColliderType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 hit_box_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hit_box_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector hit_point = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hit_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector hit_normal = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hit_normal()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtBulletHitNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtBulletHitNotify)
  return false;
#undef DO_
}

void EvtBulletHitNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtBulletHitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 forward_peer = 2;
  if (this->forward_peer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->forward_peer(), output);
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->entity_id(), output);
  }

  // uint32 hit_entity_id = 4;
  if (this->hit_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->hit_entity_id(), output);
  }

  // .proto.HitColliderType hit_collider_type = 5;
  if (this->hit_collider_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->hit_collider_type(), output);
  }

  // int32 hit_box_index = 6;
  if (this->hit_box_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->hit_box_index(), output);
  }

  // .proto.Vector hit_point = 7;
  if (this->has_hit_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->hit_point_, output);
  }

  // .proto.Vector hit_normal = 8;
  if (this->has_hit_normal()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->hit_normal_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtBulletHitNotify)
}

::google::protobuf::uint8* EvtBulletHitNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtBulletHitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 forward_peer = 2;
  if (this->forward_peer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->forward_peer(), target);
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->entity_id(), target);
  }

  // uint32 hit_entity_id = 4;
  if (this->hit_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->hit_entity_id(), target);
  }

  // .proto.HitColliderType hit_collider_type = 5;
  if (this->hit_collider_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->hit_collider_type(), target);
  }

  // int32 hit_box_index = 6;
  if (this->hit_box_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->hit_box_index(), target);
  }

  // .proto.Vector hit_point = 7;
  if (this->has_hit_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->hit_point_, deterministic, target);
  }

  // .proto.Vector hit_normal = 8;
  if (this->has_hit_normal()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->hit_normal_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtBulletHitNotify)
  return target;
}

size_t EvtBulletHitNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtBulletHitNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector hit_point = 7;
  if (this->has_hit_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hit_point_);
  }

  // .proto.Vector hit_normal = 8;
  if (this->has_hit_normal()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->hit_normal_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 forward_peer = 2;
  if (this->forward_peer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->forward_peer());
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 hit_entity_id = 4;
  if (this->hit_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hit_entity_id());
  }

  // .proto.HitColliderType hit_collider_type = 5;
  if (this->hit_collider_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hit_collider_type());
  }

  // int32 hit_box_index = 6;
  if (this->hit_box_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hit_box_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtBulletHitNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtBulletHitNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtBulletHitNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtBulletHitNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtBulletHitNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtBulletHitNotify)
    MergeFrom(*source);
  }
}

void EvtBulletHitNotify::MergeFrom(const EvtBulletHitNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtBulletHitNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hit_point()) {
    mutable_hit_point()->::proto::Vector::MergeFrom(from.hit_point());
  }
  if (from.has_hit_normal()) {
    mutable_hit_normal()->::proto::Vector::MergeFrom(from.hit_normal());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.forward_peer() != 0) {
    set_forward_peer(from.forward_peer());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.hit_entity_id() != 0) {
    set_hit_entity_id(from.hit_entity_id());
  }
  if (from.hit_collider_type() != 0) {
    set_hit_collider_type(from.hit_collider_type());
  }
  if (from.hit_box_index() != 0) {
    set_hit_box_index(from.hit_box_index());
  }
}

void EvtBulletHitNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtBulletHitNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtBulletHitNotify::CopyFrom(const EvtBulletHitNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtBulletHitNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtBulletHitNotify::IsInitialized() const {
  return true;
}

void EvtBulletHitNotify::Swap(EvtBulletHitNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtBulletHitNotify::InternalSwap(EvtBulletHitNotify* other) {
  using std::swap;
  swap(hit_point_, other->hit_point_);
  swap(hit_normal_, other->hit_normal_);
  swap(forward_type_, other->forward_type_);
  swap(forward_peer_, other->forward_peer_);
  swap(entity_id_, other->entity_id_);
  swap(hit_entity_id_, other->hit_entity_id_);
  swap(hit_collider_type_, other->hit_collider_type_);
  swap(hit_box_index_, other->hit_box_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtBulletHitNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtBulletHitNotify

// .proto.ForwardType forward_type = 1;
void EvtBulletHitNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtBulletHitNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtBulletHitNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.forward_type)
}

// uint32 forward_peer = 2;
void EvtBulletHitNotify::clear_forward_peer() {
  forward_peer_ = 0u;
}
::google::protobuf::uint32 EvtBulletHitNotify::forward_peer() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.forward_peer)
  return forward_peer_;
}
void EvtBulletHitNotify::set_forward_peer(::google::protobuf::uint32 value) {
  
  forward_peer_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.forward_peer)
}

// uint32 entity_id = 3;
void EvtBulletHitNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtBulletHitNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.entity_id)
  return entity_id_;
}
void EvtBulletHitNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.entity_id)
}

// uint32 hit_entity_id = 4;
void EvtBulletHitNotify::clear_hit_entity_id() {
  hit_entity_id_ = 0u;
}
::google::protobuf::uint32 EvtBulletHitNotify::hit_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_entity_id)
  return hit_entity_id_;
}
void EvtBulletHitNotify::set_hit_entity_id(::google::protobuf::uint32 value) {
  
  hit_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.hit_entity_id)
}

// .proto.HitColliderType hit_collider_type = 5;
void EvtBulletHitNotify::clear_hit_collider_type() {
  hit_collider_type_ = 0;
}
::proto::HitColliderType EvtBulletHitNotify::hit_collider_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_collider_type)
  return static_cast< ::proto::HitColliderType >(hit_collider_type_);
}
void EvtBulletHitNotify::set_hit_collider_type(::proto::HitColliderType value) {
  
  hit_collider_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.hit_collider_type)
}

// int32 hit_box_index = 6;
void EvtBulletHitNotify::clear_hit_box_index() {
  hit_box_index_ = 0;
}
::google::protobuf::int32 EvtBulletHitNotify::hit_box_index() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_box_index)
  return hit_box_index_;
}
void EvtBulletHitNotify::set_hit_box_index(::google::protobuf::int32 value) {
  
  hit_box_index_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletHitNotify.hit_box_index)
}

// .proto.Vector hit_point = 7;
bool EvtBulletHitNotify::has_hit_point() const {
  return this != internal_default_instance() && hit_point_ != NULL;
}
void EvtBulletHitNotify::clear_hit_point() {
  if (GetArenaNoVirtual() == NULL && hit_point_ != NULL) delete hit_point_;
  hit_point_ = NULL;
}
const ::proto::Vector& EvtBulletHitNotify::hit_point() const {
  const ::proto::Vector* p = hit_point_;
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_point)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtBulletHitNotify::mutable_hit_point() {
  
  if (hit_point_ == NULL) {
    hit_point_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBulletHitNotify.hit_point)
  return hit_point_;
}
::proto::Vector* EvtBulletHitNotify::release_hit_point() {
  // @@protoc_insertion_point(field_release:proto.EvtBulletHitNotify.hit_point)
  
  ::proto::Vector* temp = hit_point_;
  hit_point_ = NULL;
  return temp;
}
void EvtBulletHitNotify::set_allocated_hit_point(::proto::Vector* hit_point) {
  delete hit_point_;
  hit_point_ = hit_point;
  if (hit_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBulletHitNotify.hit_point)
}

// .proto.Vector hit_normal = 8;
bool EvtBulletHitNotify::has_hit_normal() const {
  return this != internal_default_instance() && hit_normal_ != NULL;
}
void EvtBulletHitNotify::clear_hit_normal() {
  if (GetArenaNoVirtual() == NULL && hit_normal_ != NULL) delete hit_normal_;
  hit_normal_ = NULL;
}
const ::proto::Vector& EvtBulletHitNotify::hit_normal() const {
  const ::proto::Vector* p = hit_normal_;
  // @@protoc_insertion_point(field_get:proto.EvtBulletHitNotify.hit_normal)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtBulletHitNotify::mutable_hit_normal() {
  
  if (hit_normal_ == NULL) {
    hit_normal_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBulletHitNotify.hit_normal)
  return hit_normal_;
}
::proto::Vector* EvtBulletHitNotify::release_hit_normal() {
  // @@protoc_insertion_point(field_release:proto.EvtBulletHitNotify.hit_normal)
  
  ::proto::Vector* temp = hit_normal_;
  hit_normal_ = NULL;
  return temp;
}
void EvtBulletHitNotify::set_allocated_hit_normal(::proto::Vector* hit_normal) {
  delete hit_normal_;
  hit_normal_ = hit_normal;
  if (hit_normal) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBulletHitNotify.hit_normal)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtBulletDeactiveNotify::kForwardTypeFieldNumber;
const int EvtBulletDeactiveNotify::kEntityIdFieldNumber;
const int EvtBulletDeactiveNotify::kDisappearPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtBulletDeactiveNotify::EvtBulletDeactiveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtBulletDeactiveNotify)
}
EvtBulletDeactiveNotify::EvtBulletDeactiveNotify(const EvtBulletDeactiveNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_disappear_pos()) {
    disappear_pos_ = new ::proto::Vector(*from.disappear_pos_);
  } else {
    disappear_pos_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtBulletDeactiveNotify)
}

void EvtBulletDeactiveNotify::SharedCtor() {
  ::memset(&disappear_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&disappear_pos_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

EvtBulletDeactiveNotify::~EvtBulletDeactiveNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtBulletDeactiveNotify)
  SharedDtor();
}

void EvtBulletDeactiveNotify::SharedDtor() {
  if (this != internal_default_instance()) delete disappear_pos_;
}

void EvtBulletDeactiveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtBulletDeactiveNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtBulletDeactiveNotify& EvtBulletDeactiveNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtBulletDeactiveNotify* EvtBulletDeactiveNotify::New(::google::protobuf::Arena* arena) const {
  EvtBulletDeactiveNotify* n = new EvtBulletDeactiveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtBulletDeactiveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtBulletDeactiveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && disappear_pos_ != NULL) {
    delete disappear_pos_;
  }
  disappear_pos_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool EvtBulletDeactiveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtBulletDeactiveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector disappear_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_disappear_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtBulletDeactiveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtBulletDeactiveNotify)
  return false;
#undef DO_
}

void EvtBulletDeactiveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtBulletDeactiveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.Vector disappear_pos = 3;
  if (this->has_disappear_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->disappear_pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtBulletDeactiveNotify)
}

::google::protobuf::uint8* EvtBulletDeactiveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtBulletDeactiveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.Vector disappear_pos = 3;
  if (this->has_disappear_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->disappear_pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtBulletDeactiveNotify)
  return target;
}

size_t EvtBulletDeactiveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtBulletDeactiveNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector disappear_pos = 3;
  if (this->has_disappear_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->disappear_pos_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtBulletDeactiveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtBulletDeactiveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtBulletDeactiveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtBulletDeactiveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtBulletDeactiveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtBulletDeactiveNotify)
    MergeFrom(*source);
  }
}

void EvtBulletDeactiveNotify::MergeFrom(const EvtBulletDeactiveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtBulletDeactiveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_disappear_pos()) {
    mutable_disappear_pos()->::proto::Vector::MergeFrom(from.disappear_pos());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void EvtBulletDeactiveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtBulletDeactiveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtBulletDeactiveNotify::CopyFrom(const EvtBulletDeactiveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtBulletDeactiveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtBulletDeactiveNotify::IsInitialized() const {
  return true;
}

void EvtBulletDeactiveNotify::Swap(EvtBulletDeactiveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtBulletDeactiveNotify::InternalSwap(EvtBulletDeactiveNotify* other) {
  using std::swap;
  swap(disappear_pos_, other->disappear_pos_);
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtBulletDeactiveNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtBulletDeactiveNotify

// .proto.ForwardType forward_type = 1;
void EvtBulletDeactiveNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtBulletDeactiveNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletDeactiveNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtBulletDeactiveNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletDeactiveNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtBulletDeactiveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtBulletDeactiveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletDeactiveNotify.entity_id)
  return entity_id_;
}
void EvtBulletDeactiveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletDeactiveNotify.entity_id)
}

// .proto.Vector disappear_pos = 3;
bool EvtBulletDeactiveNotify::has_disappear_pos() const {
  return this != internal_default_instance() && disappear_pos_ != NULL;
}
void EvtBulletDeactiveNotify::clear_disappear_pos() {
  if (GetArenaNoVirtual() == NULL && disappear_pos_ != NULL) delete disappear_pos_;
  disappear_pos_ = NULL;
}
const ::proto::Vector& EvtBulletDeactiveNotify::disappear_pos() const {
  const ::proto::Vector* p = disappear_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtBulletDeactiveNotify.disappear_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtBulletDeactiveNotify::mutable_disappear_pos() {
  
  if (disappear_pos_ == NULL) {
    disappear_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBulletDeactiveNotify.disappear_pos)
  return disappear_pos_;
}
::proto::Vector* EvtBulletDeactiveNotify::release_disappear_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtBulletDeactiveNotify.disappear_pos)
  
  ::proto::Vector* temp = disappear_pos_;
  disappear_pos_ = NULL;
  return temp;
}
void EvtBulletDeactiveNotify::set_allocated_disappear_pos(::proto::Vector* disappear_pos) {
  delete disappear_pos_;
  disappear_pos_ = disappear_pos;
  if (disappear_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBulletDeactiveNotify.disappear_pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtEntityStartDieEndNotify::kForwardTypeFieldNumber;
const int EvtEntityStartDieEndNotify::kEntityIdFieldNumber;
const int EvtEntityStartDieEndNotify::kImmediatelyFieldNumber;
const int EvtEntityStartDieEndNotify::kDieStateFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtEntityStartDieEndNotify::EvtEntityStartDieEndNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtEntityStartDieEndNotify)
}
EvtEntityStartDieEndNotify::EvtEntityStartDieEndNotify(const EvtEntityStartDieEndNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&die_state_flag_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(die_state_flag_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtEntityStartDieEndNotify)
}

void EvtEntityStartDieEndNotify::SharedCtor() {
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&die_state_flag_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(die_state_flag_));
  _cached_size_ = 0;
}

EvtEntityStartDieEndNotify::~EvtEntityStartDieEndNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtEntityStartDieEndNotify)
  SharedDtor();
}

void EvtEntityStartDieEndNotify::SharedDtor() {
}

void EvtEntityStartDieEndNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtEntityStartDieEndNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtEntityStartDieEndNotify& EvtEntityStartDieEndNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtEntityStartDieEndNotify* EvtEntityStartDieEndNotify::New(::google::protobuf::Arena* arena) const {
  EvtEntityStartDieEndNotify* n = new EvtEntityStartDieEndNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtEntityStartDieEndNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtEntityStartDieEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&die_state_flag_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(die_state_flag_));
  _internal_metadata_.Clear();
}

bool EvtEntityStartDieEndNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtEntityStartDieEndNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool immediately = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &immediately_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 die_state_flag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &die_state_flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtEntityStartDieEndNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtEntityStartDieEndNotify)
  return false;
#undef DO_
}

void EvtEntityStartDieEndNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtEntityStartDieEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // bool immediately = 3;
  if (this->immediately() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->immediately(), output);
  }

  // uint32 die_state_flag = 4;
  if (this->die_state_flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->die_state_flag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtEntityStartDieEndNotify)
}

::google::protobuf::uint8* EvtEntityStartDieEndNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtEntityStartDieEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // bool immediately = 3;
  if (this->immediately() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->immediately(), target);
  }

  // uint32 die_state_flag = 4;
  if (this->die_state_flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->die_state_flag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtEntityStartDieEndNotify)
  return target;
}

size_t EvtEntityStartDieEndNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtEntityStartDieEndNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // bool immediately = 3;
  if (this->immediately() != 0) {
    total_size += 1 + 1;
  }

  // uint32 die_state_flag = 4;
  if (this->die_state_flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->die_state_flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtEntityStartDieEndNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtEntityStartDieEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtEntityStartDieEndNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtEntityStartDieEndNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtEntityStartDieEndNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtEntityStartDieEndNotify)
    MergeFrom(*source);
  }
}

void EvtEntityStartDieEndNotify::MergeFrom(const EvtEntityStartDieEndNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtEntityStartDieEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.immediately() != 0) {
    set_immediately(from.immediately());
  }
  if (from.die_state_flag() != 0) {
    set_die_state_flag(from.die_state_flag());
  }
}

void EvtEntityStartDieEndNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtEntityStartDieEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtEntityStartDieEndNotify::CopyFrom(const EvtEntityStartDieEndNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtEntityStartDieEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtEntityStartDieEndNotify::IsInitialized() const {
  return true;
}

void EvtEntityStartDieEndNotify::Swap(EvtEntityStartDieEndNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtEntityStartDieEndNotify::InternalSwap(EvtEntityStartDieEndNotify* other) {
  using std::swap;
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  swap(immediately_, other->immediately_);
  swap(die_state_flag_, other->die_state_flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtEntityStartDieEndNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtEntityStartDieEndNotify

// .proto.ForwardType forward_type = 1;
void EvtEntityStartDieEndNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtEntityStartDieEndNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityStartDieEndNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtEntityStartDieEndNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityStartDieEndNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtEntityStartDieEndNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtEntityStartDieEndNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityStartDieEndNotify.entity_id)
  return entity_id_;
}
void EvtEntityStartDieEndNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityStartDieEndNotify.entity_id)
}

// bool immediately = 3;
void EvtEntityStartDieEndNotify::clear_immediately() {
  immediately_ = false;
}
bool EvtEntityStartDieEndNotify::immediately() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityStartDieEndNotify.immediately)
  return immediately_;
}
void EvtEntityStartDieEndNotify::set_immediately(bool value) {
  
  immediately_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityStartDieEndNotify.immediately)
}

// uint32 die_state_flag = 4;
void EvtEntityStartDieEndNotify::clear_die_state_flag() {
  die_state_flag_ = 0u;
}
::google::protobuf::uint32 EvtEntityStartDieEndNotify::die_state_flag() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityStartDieEndNotify.die_state_flag)
  return die_state_flag_;
}
void EvtEntityStartDieEndNotify::set_die_state_flag(::google::protobuf::uint32 value) {
  
  die_state_flag_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityStartDieEndNotify.die_state_flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtBulletMoveNotify::kForwardTypeFieldNumber;
const int EvtBulletMoveNotify::kEntityIdFieldNumber;
const int EvtBulletMoveNotify::kCurPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtBulletMoveNotify::EvtBulletMoveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtBulletMoveNotify)
}
EvtBulletMoveNotify::EvtBulletMoveNotify(const EvtBulletMoveNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cur_pos()) {
    cur_pos_ = new ::proto::Vector(*from.cur_pos_);
  } else {
    cur_pos_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtBulletMoveNotify)
}

void EvtBulletMoveNotify::SharedCtor() {
  ::memset(&cur_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&cur_pos_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

EvtBulletMoveNotify::~EvtBulletMoveNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtBulletMoveNotify)
  SharedDtor();
}

void EvtBulletMoveNotify::SharedDtor() {
  if (this != internal_default_instance()) delete cur_pos_;
}

void EvtBulletMoveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtBulletMoveNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtBulletMoveNotify& EvtBulletMoveNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtBulletMoveNotify* EvtBulletMoveNotify::New(::google::protobuf::Arena* arena) const {
  EvtBulletMoveNotify* n = new EvtBulletMoveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtBulletMoveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtBulletMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) {
    delete cur_pos_;
  }
  cur_pos_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool EvtBulletMoveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtBulletMoveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector cur_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtBulletMoveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtBulletMoveNotify)
  return false;
#undef DO_
}

void EvtBulletMoveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtBulletMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.Vector cur_pos = 3;
  if (this->has_cur_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cur_pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtBulletMoveNotify)
}

::google::protobuf::uint8* EvtBulletMoveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtBulletMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.Vector cur_pos = 3;
  if (this->has_cur_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cur_pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtBulletMoveNotify)
  return target;
}

size_t EvtBulletMoveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtBulletMoveNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector cur_pos = 3;
  if (this->has_cur_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_pos_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtBulletMoveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtBulletMoveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtBulletMoveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtBulletMoveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtBulletMoveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtBulletMoveNotify)
    MergeFrom(*source);
  }
}

void EvtBulletMoveNotify::MergeFrom(const EvtBulletMoveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtBulletMoveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cur_pos()) {
    mutable_cur_pos()->::proto::Vector::MergeFrom(from.cur_pos());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void EvtBulletMoveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtBulletMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtBulletMoveNotify::CopyFrom(const EvtBulletMoveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtBulletMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtBulletMoveNotify::IsInitialized() const {
  return true;
}

void EvtBulletMoveNotify::Swap(EvtBulletMoveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtBulletMoveNotify::InternalSwap(EvtBulletMoveNotify* other) {
  using std::swap;
  swap(cur_pos_, other->cur_pos_);
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtBulletMoveNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtBulletMoveNotify

// .proto.ForwardType forward_type = 1;
void EvtBulletMoveNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtBulletMoveNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletMoveNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtBulletMoveNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletMoveNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtBulletMoveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtBulletMoveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtBulletMoveNotify.entity_id)
  return entity_id_;
}
void EvtBulletMoveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBulletMoveNotify.entity_id)
}

// .proto.Vector cur_pos = 3;
bool EvtBulletMoveNotify::has_cur_pos() const {
  return this != internal_default_instance() && cur_pos_ != NULL;
}
void EvtBulletMoveNotify::clear_cur_pos() {
  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) delete cur_pos_;
  cur_pos_ = NULL;
}
const ::proto::Vector& EvtBulletMoveNotify::cur_pos() const {
  const ::proto::Vector* p = cur_pos_;
  // @@protoc_insertion_point(field_get:proto.EvtBulletMoveNotify.cur_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtBulletMoveNotify::mutable_cur_pos() {
  
  if (cur_pos_ == NULL) {
    cur_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtBulletMoveNotify.cur_pos)
  return cur_pos_;
}
::proto::Vector* EvtBulletMoveNotify::release_cur_pos() {
  // @@protoc_insertion_point(field_release:proto.EvtBulletMoveNotify.cur_pos)
  
  ::proto::Vector* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
void EvtBulletMoveNotify::set_allocated_cur_pos(::proto::Vector* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtBulletMoveNotify.cur_pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAvatarEnterFocusNotify::kForwardTypeFieldNumber;
const int EvtAvatarEnterFocusNotify::kEntityIdFieldNumber;
const int EvtAvatarEnterFocusNotify::kFastFocusFieldNumber;
const int EvtAvatarEnterFocusNotify::kUseFocusStickyFieldNumber;
const int EvtAvatarEnterFocusNotify::kUseAutoFocusFieldNumber;
const int EvtAvatarEnterFocusNotify::kUseGyroFieldNumber;
const int EvtAvatarEnterFocusNotify::kCanMoveFieldNumber;
const int EvtAvatarEnterFocusNotify::kShowCrossHairFieldNumber;
const int EvtAvatarEnterFocusNotify::kFocusForwardFieldNumber;
const int EvtAvatarEnterFocusNotify::kEnterNormalFocusShootFieldNumber;
const int EvtAvatarEnterFocusNotify::kEnterHoldingFocusShootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAvatarEnterFocusNotify::EvtAvatarEnterFocusNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAvatarEnterFocusNotify)
}
EvtAvatarEnterFocusNotify::EvtAvatarEnterFocusNotify(const EvtAvatarEnterFocusNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_focus_forward()) {
    focus_forward_ = new ::proto::Vector(*from.focus_forward_);
  } else {
    focus_forward_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&enter_holding_focus_shoot_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(enter_holding_focus_shoot_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtAvatarEnterFocusNotify)
}

void EvtAvatarEnterFocusNotify::SharedCtor() {
  ::memset(&focus_forward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enter_holding_focus_shoot_) -
      reinterpret_cast<char*>(&focus_forward_)) + sizeof(enter_holding_focus_shoot_));
  _cached_size_ = 0;
}

EvtAvatarEnterFocusNotify::~EvtAvatarEnterFocusNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAvatarEnterFocusNotify)
  SharedDtor();
}

void EvtAvatarEnterFocusNotify::SharedDtor() {
  if (this != internal_default_instance()) delete focus_forward_;
}

void EvtAvatarEnterFocusNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAvatarEnterFocusNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAvatarEnterFocusNotify& EvtAvatarEnterFocusNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAvatarEnterFocusNotify* EvtAvatarEnterFocusNotify::New(::google::protobuf::Arena* arena) const {
  EvtAvatarEnterFocusNotify* n = new EvtAvatarEnterFocusNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAvatarEnterFocusNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAvatarEnterFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && focus_forward_ != NULL) {
    delete focus_forward_;
  }
  focus_forward_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enter_holding_focus_shoot_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(enter_holding_focus_shoot_));
  _internal_metadata_.Clear();
}

bool EvtAvatarEnterFocusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAvatarEnterFocusNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fast_focus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fast_focus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_focus_sticky = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_focus_sticky_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_auto_focus = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_auto_focus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_gyro = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_gyro_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool can_move = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_move_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool show_cross_hair = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &show_cross_hair_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector focus_forward = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_focus_forward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enter_normal_focus_shoot = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enter_normal_focus_shoot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enter_holding_focus_shoot = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enter_holding_focus_shoot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAvatarEnterFocusNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAvatarEnterFocusNotify)
  return false;
#undef DO_
}

void EvtAvatarEnterFocusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAvatarEnterFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // bool fast_focus = 3;
  if (this->fast_focus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->fast_focus(), output);
  }

  // bool use_focus_sticky = 4;
  if (this->use_focus_sticky() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->use_focus_sticky(), output);
  }

  // bool use_auto_focus = 5;
  if (this->use_auto_focus() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->use_auto_focus(), output);
  }

  // bool use_gyro = 6;
  if (this->use_gyro() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->use_gyro(), output);
  }

  // bool can_move = 7;
  if (this->can_move() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->can_move(), output);
  }

  // bool show_cross_hair = 8;
  if (this->show_cross_hair() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->show_cross_hair(), output);
  }

  // .proto.Vector focus_forward = 9;
  if (this->has_focus_forward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->focus_forward_, output);
  }

  // bool enter_normal_focus_shoot = 10;
  if (this->enter_normal_focus_shoot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->enter_normal_focus_shoot(), output);
  }

  // bool enter_holding_focus_shoot = 11;
  if (this->enter_holding_focus_shoot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->enter_holding_focus_shoot(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAvatarEnterFocusNotify)
}

::google::protobuf::uint8* EvtAvatarEnterFocusNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAvatarEnterFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // bool fast_focus = 3;
  if (this->fast_focus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->fast_focus(), target);
  }

  // bool use_focus_sticky = 4;
  if (this->use_focus_sticky() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->use_focus_sticky(), target);
  }

  // bool use_auto_focus = 5;
  if (this->use_auto_focus() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->use_auto_focus(), target);
  }

  // bool use_gyro = 6;
  if (this->use_gyro() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->use_gyro(), target);
  }

  // bool can_move = 7;
  if (this->can_move() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->can_move(), target);
  }

  // bool show_cross_hair = 8;
  if (this->show_cross_hair() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->show_cross_hair(), target);
  }

  // .proto.Vector focus_forward = 9;
  if (this->has_focus_forward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->focus_forward_, deterministic, target);
  }

  // bool enter_normal_focus_shoot = 10;
  if (this->enter_normal_focus_shoot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->enter_normal_focus_shoot(), target);
  }

  // bool enter_holding_focus_shoot = 11;
  if (this->enter_holding_focus_shoot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->enter_holding_focus_shoot(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAvatarEnterFocusNotify)
  return target;
}

size_t EvtAvatarEnterFocusNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAvatarEnterFocusNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector focus_forward = 9;
  if (this->has_focus_forward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->focus_forward_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // bool fast_focus = 3;
  if (this->fast_focus() != 0) {
    total_size += 1 + 1;
  }

  // bool use_focus_sticky = 4;
  if (this->use_focus_sticky() != 0) {
    total_size += 1 + 1;
  }

  // bool use_auto_focus = 5;
  if (this->use_auto_focus() != 0) {
    total_size += 1 + 1;
  }

  // bool use_gyro = 6;
  if (this->use_gyro() != 0) {
    total_size += 1 + 1;
  }

  // bool can_move = 7;
  if (this->can_move() != 0) {
    total_size += 1 + 1;
  }

  // bool show_cross_hair = 8;
  if (this->show_cross_hair() != 0) {
    total_size += 1 + 1;
  }

  // bool enter_normal_focus_shoot = 10;
  if (this->enter_normal_focus_shoot() != 0) {
    total_size += 1 + 1;
  }

  // bool enter_holding_focus_shoot = 11;
  if (this->enter_holding_focus_shoot() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAvatarEnterFocusNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAvatarEnterFocusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAvatarEnterFocusNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAvatarEnterFocusNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAvatarEnterFocusNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAvatarEnterFocusNotify)
    MergeFrom(*source);
  }
}

void EvtAvatarEnterFocusNotify::MergeFrom(const EvtAvatarEnterFocusNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAvatarEnterFocusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_focus_forward()) {
    mutable_focus_forward()->::proto::Vector::MergeFrom(from.focus_forward());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.fast_focus() != 0) {
    set_fast_focus(from.fast_focus());
  }
  if (from.use_focus_sticky() != 0) {
    set_use_focus_sticky(from.use_focus_sticky());
  }
  if (from.use_auto_focus() != 0) {
    set_use_auto_focus(from.use_auto_focus());
  }
  if (from.use_gyro() != 0) {
    set_use_gyro(from.use_gyro());
  }
  if (from.can_move() != 0) {
    set_can_move(from.can_move());
  }
  if (from.show_cross_hair() != 0) {
    set_show_cross_hair(from.show_cross_hair());
  }
  if (from.enter_normal_focus_shoot() != 0) {
    set_enter_normal_focus_shoot(from.enter_normal_focus_shoot());
  }
  if (from.enter_holding_focus_shoot() != 0) {
    set_enter_holding_focus_shoot(from.enter_holding_focus_shoot());
  }
}

void EvtAvatarEnterFocusNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAvatarEnterFocusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAvatarEnterFocusNotify::CopyFrom(const EvtAvatarEnterFocusNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAvatarEnterFocusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAvatarEnterFocusNotify::IsInitialized() const {
  return true;
}

void EvtAvatarEnterFocusNotify::Swap(EvtAvatarEnterFocusNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAvatarEnterFocusNotify::InternalSwap(EvtAvatarEnterFocusNotify* other) {
  using std::swap;
  swap(focus_forward_, other->focus_forward_);
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  swap(fast_focus_, other->fast_focus_);
  swap(use_focus_sticky_, other->use_focus_sticky_);
  swap(use_auto_focus_, other->use_auto_focus_);
  swap(use_gyro_, other->use_gyro_);
  swap(can_move_, other->can_move_);
  swap(show_cross_hair_, other->show_cross_hair_);
  swap(enter_normal_focus_shoot_, other->enter_normal_focus_shoot_);
  swap(enter_holding_focus_shoot_, other->enter_holding_focus_shoot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAvatarEnterFocusNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAvatarEnterFocusNotify

// .proto.ForwardType forward_type = 1;
void EvtAvatarEnterFocusNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtAvatarEnterFocusNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtAvatarEnterFocusNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtAvatarEnterFocusNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtAvatarEnterFocusNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.entity_id)
  return entity_id_;
}
void EvtAvatarEnterFocusNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.entity_id)
}

// bool fast_focus = 3;
void EvtAvatarEnterFocusNotify::clear_fast_focus() {
  fast_focus_ = false;
}
bool EvtAvatarEnterFocusNotify::fast_focus() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.fast_focus)
  return fast_focus_;
}
void EvtAvatarEnterFocusNotify::set_fast_focus(bool value) {
  
  fast_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.fast_focus)
}

// bool use_focus_sticky = 4;
void EvtAvatarEnterFocusNotify::clear_use_focus_sticky() {
  use_focus_sticky_ = false;
}
bool EvtAvatarEnterFocusNotify::use_focus_sticky() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.use_focus_sticky)
  return use_focus_sticky_;
}
void EvtAvatarEnterFocusNotify::set_use_focus_sticky(bool value) {
  
  use_focus_sticky_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.use_focus_sticky)
}

// bool use_auto_focus = 5;
void EvtAvatarEnterFocusNotify::clear_use_auto_focus() {
  use_auto_focus_ = false;
}
bool EvtAvatarEnterFocusNotify::use_auto_focus() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.use_auto_focus)
  return use_auto_focus_;
}
void EvtAvatarEnterFocusNotify::set_use_auto_focus(bool value) {
  
  use_auto_focus_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.use_auto_focus)
}

// bool use_gyro = 6;
void EvtAvatarEnterFocusNotify::clear_use_gyro() {
  use_gyro_ = false;
}
bool EvtAvatarEnterFocusNotify::use_gyro() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.use_gyro)
  return use_gyro_;
}
void EvtAvatarEnterFocusNotify::set_use_gyro(bool value) {
  
  use_gyro_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.use_gyro)
}

// bool can_move = 7;
void EvtAvatarEnterFocusNotify::clear_can_move() {
  can_move_ = false;
}
bool EvtAvatarEnterFocusNotify::can_move() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.can_move)
  return can_move_;
}
void EvtAvatarEnterFocusNotify::set_can_move(bool value) {
  
  can_move_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.can_move)
}

// bool show_cross_hair = 8;
void EvtAvatarEnterFocusNotify::clear_show_cross_hair() {
  show_cross_hair_ = false;
}
bool EvtAvatarEnterFocusNotify::show_cross_hair() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.show_cross_hair)
  return show_cross_hair_;
}
void EvtAvatarEnterFocusNotify::set_show_cross_hair(bool value) {
  
  show_cross_hair_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.show_cross_hair)
}

// .proto.Vector focus_forward = 9;
bool EvtAvatarEnterFocusNotify::has_focus_forward() const {
  return this != internal_default_instance() && focus_forward_ != NULL;
}
void EvtAvatarEnterFocusNotify::clear_focus_forward() {
  if (GetArenaNoVirtual() == NULL && focus_forward_ != NULL) delete focus_forward_;
  focus_forward_ = NULL;
}
const ::proto::Vector& EvtAvatarEnterFocusNotify::focus_forward() const {
  const ::proto::Vector* p = focus_forward_;
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.focus_forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtAvatarEnterFocusNotify::mutable_focus_forward() {
  
  if (focus_forward_ == NULL) {
    focus_forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAvatarEnterFocusNotify.focus_forward)
  return focus_forward_;
}
::proto::Vector* EvtAvatarEnterFocusNotify::release_focus_forward() {
  // @@protoc_insertion_point(field_release:proto.EvtAvatarEnterFocusNotify.focus_forward)
  
  ::proto::Vector* temp = focus_forward_;
  focus_forward_ = NULL;
  return temp;
}
void EvtAvatarEnterFocusNotify::set_allocated_focus_forward(::proto::Vector* focus_forward) {
  delete focus_forward_;
  focus_forward_ = focus_forward;
  if (focus_forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAvatarEnterFocusNotify.focus_forward)
}

// bool enter_normal_focus_shoot = 10;
void EvtAvatarEnterFocusNotify::clear_enter_normal_focus_shoot() {
  enter_normal_focus_shoot_ = false;
}
bool EvtAvatarEnterFocusNotify::enter_normal_focus_shoot() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.enter_normal_focus_shoot)
  return enter_normal_focus_shoot_;
}
void EvtAvatarEnterFocusNotify::set_enter_normal_focus_shoot(bool value) {
  
  enter_normal_focus_shoot_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.enter_normal_focus_shoot)
}

// bool enter_holding_focus_shoot = 11;
void EvtAvatarEnterFocusNotify::clear_enter_holding_focus_shoot() {
  enter_holding_focus_shoot_ = false;
}
bool EvtAvatarEnterFocusNotify::enter_holding_focus_shoot() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarEnterFocusNotify.enter_holding_focus_shoot)
  return enter_holding_focus_shoot_;
}
void EvtAvatarEnterFocusNotify::set_enter_holding_focus_shoot(bool value) {
  
  enter_holding_focus_shoot_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarEnterFocusNotify.enter_holding_focus_shoot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAvatarExitFocusNotify::kForwardTypeFieldNumber;
const int EvtAvatarExitFocusNotify::kEntityIdFieldNumber;
const int EvtAvatarExitFocusNotify::kFinishForwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAvatarExitFocusNotify::EvtAvatarExitFocusNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAvatarExitFocusNotify)
}
EvtAvatarExitFocusNotify::EvtAvatarExitFocusNotify(const EvtAvatarExitFocusNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_finish_forward()) {
    finish_forward_ = new ::proto::Vector(*from.finish_forward_);
  } else {
    finish_forward_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtAvatarExitFocusNotify)
}

void EvtAvatarExitFocusNotify::SharedCtor() {
  ::memset(&finish_forward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&finish_forward_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

EvtAvatarExitFocusNotify::~EvtAvatarExitFocusNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAvatarExitFocusNotify)
  SharedDtor();
}

void EvtAvatarExitFocusNotify::SharedDtor() {
  if (this != internal_default_instance()) delete finish_forward_;
}

void EvtAvatarExitFocusNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAvatarExitFocusNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAvatarExitFocusNotify& EvtAvatarExitFocusNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAvatarExitFocusNotify* EvtAvatarExitFocusNotify::New(::google::protobuf::Arena* arena) const {
  EvtAvatarExitFocusNotify* n = new EvtAvatarExitFocusNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAvatarExitFocusNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAvatarExitFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && finish_forward_ != NULL) {
    delete finish_forward_;
  }
  finish_forward_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool EvtAvatarExitFocusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAvatarExitFocusNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector finish_forward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finish_forward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAvatarExitFocusNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAvatarExitFocusNotify)
  return false;
#undef DO_
}

void EvtAvatarExitFocusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAvatarExitFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.Vector finish_forward = 3;
  if (this->has_finish_forward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->finish_forward_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAvatarExitFocusNotify)
}

::google::protobuf::uint8* EvtAvatarExitFocusNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAvatarExitFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.Vector finish_forward = 3;
  if (this->has_finish_forward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->finish_forward_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAvatarExitFocusNotify)
  return target;
}

size_t EvtAvatarExitFocusNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAvatarExitFocusNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector finish_forward = 3;
  if (this->has_finish_forward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->finish_forward_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAvatarExitFocusNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAvatarExitFocusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAvatarExitFocusNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAvatarExitFocusNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAvatarExitFocusNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAvatarExitFocusNotify)
    MergeFrom(*source);
  }
}

void EvtAvatarExitFocusNotify::MergeFrom(const EvtAvatarExitFocusNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAvatarExitFocusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_finish_forward()) {
    mutable_finish_forward()->::proto::Vector::MergeFrom(from.finish_forward());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void EvtAvatarExitFocusNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAvatarExitFocusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAvatarExitFocusNotify::CopyFrom(const EvtAvatarExitFocusNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAvatarExitFocusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAvatarExitFocusNotify::IsInitialized() const {
  return true;
}

void EvtAvatarExitFocusNotify::Swap(EvtAvatarExitFocusNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAvatarExitFocusNotify::InternalSwap(EvtAvatarExitFocusNotify* other) {
  using std::swap;
  swap(finish_forward_, other->finish_forward_);
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAvatarExitFocusNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAvatarExitFocusNotify

// .proto.ForwardType forward_type = 1;
void EvtAvatarExitFocusNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtAvatarExitFocusNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarExitFocusNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtAvatarExitFocusNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarExitFocusNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtAvatarExitFocusNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtAvatarExitFocusNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarExitFocusNotify.entity_id)
  return entity_id_;
}
void EvtAvatarExitFocusNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarExitFocusNotify.entity_id)
}

// .proto.Vector finish_forward = 3;
bool EvtAvatarExitFocusNotify::has_finish_forward() const {
  return this != internal_default_instance() && finish_forward_ != NULL;
}
void EvtAvatarExitFocusNotify::clear_finish_forward() {
  if (GetArenaNoVirtual() == NULL && finish_forward_ != NULL) delete finish_forward_;
  finish_forward_ = NULL;
}
const ::proto::Vector& EvtAvatarExitFocusNotify::finish_forward() const {
  const ::proto::Vector* p = finish_forward_;
  // @@protoc_insertion_point(field_get:proto.EvtAvatarExitFocusNotify.finish_forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtAvatarExitFocusNotify::mutable_finish_forward() {
  
  if (finish_forward_ == NULL) {
    finish_forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAvatarExitFocusNotify.finish_forward)
  return finish_forward_;
}
::proto::Vector* EvtAvatarExitFocusNotify::release_finish_forward() {
  // @@protoc_insertion_point(field_release:proto.EvtAvatarExitFocusNotify.finish_forward)
  
  ::proto::Vector* temp = finish_forward_;
  finish_forward_ = NULL;
  return temp;
}
void EvtAvatarExitFocusNotify::set_allocated_finish_forward(::proto::Vector* finish_forward) {
  delete finish_forward_;
  finish_forward_ = finish_forward;
  if (finish_forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAvatarExitFocusNotify.finish_forward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAvatarUpdateFocusNotify::kForwardTypeFieldNumber;
const int EvtAvatarUpdateFocusNotify::kEntityIdFieldNumber;
const int EvtAvatarUpdateFocusNotify::kFocusForwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAvatarUpdateFocusNotify::EvtAvatarUpdateFocusNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAvatarUpdateFocusNotify)
}
EvtAvatarUpdateFocusNotify::EvtAvatarUpdateFocusNotify(const EvtAvatarUpdateFocusNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_focus_forward()) {
    focus_forward_ = new ::proto::Vector(*from.focus_forward_);
  } else {
    focus_forward_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtAvatarUpdateFocusNotify)
}

void EvtAvatarUpdateFocusNotify::SharedCtor() {
  ::memset(&focus_forward_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&focus_forward_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

EvtAvatarUpdateFocusNotify::~EvtAvatarUpdateFocusNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAvatarUpdateFocusNotify)
  SharedDtor();
}

void EvtAvatarUpdateFocusNotify::SharedDtor() {
  if (this != internal_default_instance()) delete focus_forward_;
}

void EvtAvatarUpdateFocusNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAvatarUpdateFocusNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAvatarUpdateFocusNotify& EvtAvatarUpdateFocusNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAvatarUpdateFocusNotify* EvtAvatarUpdateFocusNotify::New(::google::protobuf::Arena* arena) const {
  EvtAvatarUpdateFocusNotify* n = new EvtAvatarUpdateFocusNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAvatarUpdateFocusNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAvatarUpdateFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && focus_forward_ != NULL) {
    delete focus_forward_;
  }
  focus_forward_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool EvtAvatarUpdateFocusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAvatarUpdateFocusNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector focus_forward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_focus_forward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAvatarUpdateFocusNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAvatarUpdateFocusNotify)
  return false;
#undef DO_
}

void EvtAvatarUpdateFocusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAvatarUpdateFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.Vector focus_forward = 3;
  if (this->has_focus_forward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->focus_forward_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAvatarUpdateFocusNotify)
}

::google::protobuf::uint8* EvtAvatarUpdateFocusNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAvatarUpdateFocusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.Vector focus_forward = 3;
  if (this->has_focus_forward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->focus_forward_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAvatarUpdateFocusNotify)
  return target;
}

size_t EvtAvatarUpdateFocusNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAvatarUpdateFocusNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector focus_forward = 3;
  if (this->has_focus_forward()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->focus_forward_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAvatarUpdateFocusNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAvatarUpdateFocusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAvatarUpdateFocusNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAvatarUpdateFocusNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAvatarUpdateFocusNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAvatarUpdateFocusNotify)
    MergeFrom(*source);
  }
}

void EvtAvatarUpdateFocusNotify::MergeFrom(const EvtAvatarUpdateFocusNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAvatarUpdateFocusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_focus_forward()) {
    mutable_focus_forward()->::proto::Vector::MergeFrom(from.focus_forward());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void EvtAvatarUpdateFocusNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAvatarUpdateFocusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAvatarUpdateFocusNotify::CopyFrom(const EvtAvatarUpdateFocusNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAvatarUpdateFocusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAvatarUpdateFocusNotify::IsInitialized() const {
  return true;
}

void EvtAvatarUpdateFocusNotify::Swap(EvtAvatarUpdateFocusNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAvatarUpdateFocusNotify::InternalSwap(EvtAvatarUpdateFocusNotify* other) {
  using std::swap;
  swap(focus_forward_, other->focus_forward_);
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAvatarUpdateFocusNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAvatarUpdateFocusNotify

// .proto.ForwardType forward_type = 1;
void EvtAvatarUpdateFocusNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtAvatarUpdateFocusNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarUpdateFocusNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtAvatarUpdateFocusNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarUpdateFocusNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtAvatarUpdateFocusNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtAvatarUpdateFocusNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarUpdateFocusNotify.entity_id)
  return entity_id_;
}
void EvtAvatarUpdateFocusNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarUpdateFocusNotify.entity_id)
}

// .proto.Vector focus_forward = 3;
bool EvtAvatarUpdateFocusNotify::has_focus_forward() const {
  return this != internal_default_instance() && focus_forward_ != NULL;
}
void EvtAvatarUpdateFocusNotify::clear_focus_forward() {
  if (GetArenaNoVirtual() == NULL && focus_forward_ != NULL) delete focus_forward_;
  focus_forward_ = NULL;
}
const ::proto::Vector& EvtAvatarUpdateFocusNotify::focus_forward() const {
  const ::proto::Vector* p = focus_forward_;
  // @@protoc_insertion_point(field_get:proto.EvtAvatarUpdateFocusNotify.focus_forward)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtAvatarUpdateFocusNotify::mutable_focus_forward() {
  
  if (focus_forward_ == NULL) {
    focus_forward_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAvatarUpdateFocusNotify.focus_forward)
  return focus_forward_;
}
::proto::Vector* EvtAvatarUpdateFocusNotify::release_focus_forward() {
  // @@protoc_insertion_point(field_release:proto.EvtAvatarUpdateFocusNotify.focus_forward)
  
  ::proto::Vector* temp = focus_forward_;
  focus_forward_ = NULL;
  return temp;
}
void EvtAvatarUpdateFocusNotify::set_allocated_focus_forward(::proto::Vector* focus_forward) {
  delete focus_forward_;
  focus_forward_ = focus_forward;
  if (focus_forward) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAvatarUpdateFocusNotify.focus_forward)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityAuthorityChangeNotify::kEntityIdFieldNumber;
const int EntityAuthorityChangeNotify::kAuthorityPeerIdFieldNumber;
const int EntityAuthorityChangeNotify::kAbilityInfoFieldNumber;
const int EntityAuthorityChangeNotify::kRendererChangedInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityAuthorityChangeNotify::EntityAuthorityChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityAuthorityChangeNotify)
}
EntityAuthorityChangeNotify::EntityAuthorityChangeNotify(const EntityAuthorityChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ability_info()) {
    ability_info_ = new ::proto::AbilitySyncStateInfo(*from.ability_info_);
  } else {
    ability_info_ = NULL;
  }
  if (from.has_renderer_changed_info()) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo(*from.renderer_changed_info_);
  } else {
    renderer_changed_info_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&authority_peer_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(authority_peer_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EntityAuthorityChangeNotify)
}

void EntityAuthorityChangeNotify::SharedCtor() {
  ::memset(&ability_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authority_peer_id_) -
      reinterpret_cast<char*>(&ability_info_)) + sizeof(authority_peer_id_));
  _cached_size_ = 0;
}

EntityAuthorityChangeNotify::~EntityAuthorityChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.EntityAuthorityChangeNotify)
  SharedDtor();
}

void EntityAuthorityChangeNotify::SharedDtor() {
  if (this != internal_default_instance()) delete ability_info_;
  if (this != internal_default_instance()) delete renderer_changed_info_;
}

void EntityAuthorityChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityAuthorityChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityAuthorityChangeNotify& EntityAuthorityChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityAuthorityChangeNotify* EntityAuthorityChangeNotify::New(::google::protobuf::Arena* arena) const {
  EntityAuthorityChangeNotify* n = new EntityAuthorityChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityAuthorityChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityAuthorityChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) {
    delete ability_info_;
  }
  ability_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) {
    delete renderer_changed_info_;
  }
  renderer_changed_info_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authority_peer_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(authority_peer_id_));
  _internal_metadata_.Clear();
}

bool EntityAuthorityChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityAuthorityChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 authority_peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authority_peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo ability_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_renderer_changed_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityAuthorityChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityAuthorityChangeNotify)
  return false;
#undef DO_
}

void EntityAuthorityChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityAuthorityChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->authority_peer_id(), output);
  }

  // .proto.AbilitySyncStateInfo ability_info = 3;
  if (this->has_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ability_info_, output);
  }

  // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
  if (this->has_renderer_changed_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->renderer_changed_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityAuthorityChangeNotify)
}

::google::protobuf::uint8* EntityAuthorityChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityAuthorityChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->authority_peer_id(), target);
  }

  // .proto.AbilitySyncStateInfo ability_info = 3;
  if (this->has_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ability_info_, deterministic, target);
  }

  // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
  if (this->has_renderer_changed_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->renderer_changed_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityAuthorityChangeNotify)
  return target;
}

size_t EntityAuthorityChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityAuthorityChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AbilitySyncStateInfo ability_info = 3;
  if (this->has_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ability_info_);
  }

  // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
  if (this->has_renderer_changed_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->renderer_changed_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authority_peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityAuthorityChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityAuthorityChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityAuthorityChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityAuthorityChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityAuthorityChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityAuthorityChangeNotify)
    MergeFrom(*source);
  }
}

void EntityAuthorityChangeNotify::MergeFrom(const EntityAuthorityChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityAuthorityChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ability_info()) {
    mutable_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.ability_info());
  }
  if (from.has_renderer_changed_info()) {
    mutable_renderer_changed_info()->::proto::EntityRendererChangedInfo::MergeFrom(from.renderer_changed_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.authority_peer_id() != 0) {
    set_authority_peer_id(from.authority_peer_id());
  }
}

void EntityAuthorityChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityAuthorityChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityAuthorityChangeNotify::CopyFrom(const EntityAuthorityChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityAuthorityChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityAuthorityChangeNotify::IsInitialized() const {
  return true;
}

void EntityAuthorityChangeNotify::Swap(EntityAuthorityChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityAuthorityChangeNotify::InternalSwap(EntityAuthorityChangeNotify* other) {
  using std::swap;
  swap(ability_info_, other->ability_info_);
  swap(renderer_changed_info_, other->renderer_changed_info_);
  swap(entity_id_, other->entity_id_);
  swap(authority_peer_id_, other->authority_peer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityAuthorityChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityAuthorityChangeNotify

// uint32 entity_id = 1;
void EntityAuthorityChangeNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EntityAuthorityChangeNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityChangeNotify.entity_id)
  return entity_id_;
}
void EntityAuthorityChangeNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityAuthorityChangeNotify.entity_id)
}

// uint32 authority_peer_id = 2;
void EntityAuthorityChangeNotify::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
::google::protobuf::uint32 EntityAuthorityChangeNotify::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityChangeNotify.authority_peer_id)
  return authority_peer_id_;
}
void EntityAuthorityChangeNotify::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityAuthorityChangeNotify.authority_peer_id)
}

// .proto.AbilitySyncStateInfo ability_info = 3;
bool EntityAuthorityChangeNotify::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
void EntityAuthorityChangeNotify::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& EntityAuthorityChangeNotify::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityChangeNotify.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* EntityAuthorityChangeNotify::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityChangeNotify.ability_info)
  return ability_info_;
}
::proto::AbilitySyncStateInfo* EntityAuthorityChangeNotify::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityChangeNotify.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
void EntityAuthorityChangeNotify::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityChangeNotify.ability_info)
}

// .proto.EntityRendererChangedInfo renderer_changed_info = 4;
bool EntityAuthorityChangeNotify::has_renderer_changed_info() const {
  return this != internal_default_instance() && renderer_changed_info_ != NULL;
}
void EntityAuthorityChangeNotify::clear_renderer_changed_info() {
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) delete renderer_changed_info_;
  renderer_changed_info_ = NULL;
}
const ::proto::EntityRendererChangedInfo& EntityAuthorityChangeNotify::renderer_changed_info() const {
  const ::proto::EntityRendererChangedInfo* p = renderer_changed_info_;
  // @@protoc_insertion_point(field_get:proto.EntityAuthorityChangeNotify.renderer_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityRendererChangedInfo*>(
      &::proto::_EntityRendererChangedInfo_default_instance_);
}
::proto::EntityRendererChangedInfo* EntityAuthorityChangeNotify::mutable_renderer_changed_info() {
  
  if (renderer_changed_info_ == NULL) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityAuthorityChangeNotify.renderer_changed_info)
  return renderer_changed_info_;
}
::proto::EntityRendererChangedInfo* EntityAuthorityChangeNotify::release_renderer_changed_info() {
  // @@protoc_insertion_point(field_release:proto.EntityAuthorityChangeNotify.renderer_changed_info)
  
  ::proto::EntityRendererChangedInfo* temp = renderer_changed_info_;
  renderer_changed_info_ = NULL;
  return temp;
}
void EntityAuthorityChangeNotify::set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info) {
  delete renderer_changed_info_;
  renderer_changed_info_ = renderer_changed_info;
  if (renderer_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityAuthorityChangeNotify.renderer_changed_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarBuffAddNotify::kAvatarGuidFieldNumber;
const int AvatarBuffAddNotify::kBuffIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarBuffAddNotify::AvatarBuffAddNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarBuffAddNotify)
}
AvatarBuffAddNotify::AvatarBuffAddNotify(const AvatarBuffAddNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&buff_id_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(buff_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarBuffAddNotify)
}

void AvatarBuffAddNotify::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buff_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(buff_id_));
  _cached_size_ = 0;
}

AvatarBuffAddNotify::~AvatarBuffAddNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarBuffAddNotify)
  SharedDtor();
}

void AvatarBuffAddNotify::SharedDtor() {
}

void AvatarBuffAddNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarBuffAddNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarBuffAddNotify& AvatarBuffAddNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarBuffAddNotify* AvatarBuffAddNotify::New(::google::protobuf::Arena* arena) const {
  AvatarBuffAddNotify* n = new AvatarBuffAddNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarBuffAddNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarBuffAddNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buff_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(buff_id_));
  _internal_metadata_.Clear();
}

bool AvatarBuffAddNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarBuffAddNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 buff_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buff_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarBuffAddNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarBuffAddNotify)
  return false;
#undef DO_
}

void AvatarBuffAddNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarBuffAddNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->avatar_guid(), output);
  }

  // uint32 buff_id = 2;
  if (this->buff_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buff_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarBuffAddNotify)
}

::google::protobuf::uint8* AvatarBuffAddNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarBuffAddNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->avatar_guid(), target);
  }

  // uint32 buff_id = 2;
  if (this->buff_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buff_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarBuffAddNotify)
  return target;
}

size_t AvatarBuffAddNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarBuffAddNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // uint32 buff_id = 2;
  if (this->buff_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buff_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarBuffAddNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarBuffAddNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarBuffAddNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarBuffAddNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarBuffAddNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarBuffAddNotify)
    MergeFrom(*source);
  }
}

void AvatarBuffAddNotify::MergeFrom(const AvatarBuffAddNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarBuffAddNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.buff_id() != 0) {
    set_buff_id(from.buff_id());
  }
}

void AvatarBuffAddNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarBuffAddNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarBuffAddNotify::CopyFrom(const AvatarBuffAddNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarBuffAddNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarBuffAddNotify::IsInitialized() const {
  return true;
}

void AvatarBuffAddNotify::Swap(AvatarBuffAddNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarBuffAddNotify::InternalSwap(AvatarBuffAddNotify* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(buff_id_, other->buff_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarBuffAddNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarBuffAddNotify

// uint64 avatar_guid = 1;
void AvatarBuffAddNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarBuffAddNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarBuffAddNotify.avatar_guid)
  return avatar_guid_;
}
void AvatarBuffAddNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarBuffAddNotify.avatar_guid)
}

// uint32 buff_id = 2;
void AvatarBuffAddNotify::clear_buff_id() {
  buff_id_ = 0u;
}
::google::protobuf::uint32 AvatarBuffAddNotify::buff_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarBuffAddNotify.buff_id)
  return buff_id_;
}
void AvatarBuffAddNotify::set_buff_id(::google::protobuf::uint32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarBuffAddNotify.buff_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarBuffDelNotify::kAvatarGuidFieldNumber;
const int AvatarBuffDelNotify::kBuffIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarBuffDelNotify::AvatarBuffDelNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarBuffDelNotify)
}
AvatarBuffDelNotify::AvatarBuffDelNotify(const AvatarBuffDelNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&buff_id_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(buff_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarBuffDelNotify)
}

void AvatarBuffDelNotify::SharedCtor() {
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buff_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(buff_id_));
  _cached_size_ = 0;
}

AvatarBuffDelNotify::~AvatarBuffDelNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarBuffDelNotify)
  SharedDtor();
}

void AvatarBuffDelNotify::SharedDtor() {
}

void AvatarBuffDelNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarBuffDelNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarBuffDelNotify& AvatarBuffDelNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarBuffDelNotify* AvatarBuffDelNotify::New(::google::protobuf::Arena* arena) const {
  AvatarBuffDelNotify* n = new AvatarBuffDelNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarBuffDelNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarBuffDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&buff_id_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(buff_id_));
  _internal_metadata_.Clear();
}

bool AvatarBuffDelNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarBuffDelNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 buff_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buff_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarBuffDelNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarBuffDelNotify)
  return false;
#undef DO_
}

void AvatarBuffDelNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarBuffDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->avatar_guid(), output);
  }

  // uint32 buff_id = 2;
  if (this->buff_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->buff_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarBuffDelNotify)
}

::google::protobuf::uint8* AvatarBuffDelNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarBuffDelNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->avatar_guid(), target);
  }

  // uint32 buff_id = 2;
  if (this->buff_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->buff_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarBuffDelNotify)
  return target;
}

size_t AvatarBuffDelNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarBuffDelNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // uint32 buff_id = 2;
  if (this->buff_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->buff_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarBuffDelNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarBuffDelNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarBuffDelNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarBuffDelNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarBuffDelNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarBuffDelNotify)
    MergeFrom(*source);
  }
}

void AvatarBuffDelNotify::MergeFrom(const AvatarBuffDelNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarBuffDelNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.buff_id() != 0) {
    set_buff_id(from.buff_id());
  }
}

void AvatarBuffDelNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarBuffDelNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarBuffDelNotify::CopyFrom(const AvatarBuffDelNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarBuffDelNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarBuffDelNotify::IsInitialized() const {
  return true;
}

void AvatarBuffDelNotify::Swap(AvatarBuffDelNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarBuffDelNotify::InternalSwap(AvatarBuffDelNotify* other) {
  using std::swap;
  swap(avatar_guid_, other->avatar_guid_);
  swap(buff_id_, other->buff_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarBuffDelNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarBuffDelNotify

// uint64 avatar_guid = 1;
void AvatarBuffDelNotify::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarBuffDelNotify::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarBuffDelNotify.avatar_guid)
  return avatar_guid_;
}
void AvatarBuffDelNotify::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarBuffDelNotify.avatar_guid)
}

// uint32 buff_id = 2;
void AvatarBuffDelNotify::clear_buff_id() {
  buff_id_ = 0u;
}
::google::protobuf::uint32 AvatarBuffDelNotify::buff_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarBuffDelNotify.buff_id)
  return buff_id_;
}
void AvatarBuffDelNotify::set_buff_id(::google::protobuf::uint32 value) {
  
  buff_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarBuffDelNotify.buff_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonsterAlertChangeNotify::kAvatarEntityIdFieldNumber;
const int MonsterAlertChangeNotify::kIsAlertFieldNumber;
const int MonsterAlertChangeNotify::kMonsterEntityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonsterAlertChangeNotify::MonsterAlertChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MonsterAlertChangeNotify)
}
MonsterAlertChangeNotify::MonsterAlertChangeNotify(const MonsterAlertChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      monster_entity_list_(from.monster_entity_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_entity_id_, &from.avatar_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_alert_) -
    reinterpret_cast<char*>(&avatar_entity_id_)) + sizeof(is_alert_));
  // @@protoc_insertion_point(copy_constructor:proto.MonsterAlertChangeNotify)
}

void MonsterAlertChangeNotify::SharedCtor() {
  ::memset(&avatar_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_alert_) -
      reinterpret_cast<char*>(&avatar_entity_id_)) + sizeof(is_alert_));
  _cached_size_ = 0;
}

MonsterAlertChangeNotify::~MonsterAlertChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.MonsterAlertChangeNotify)
  SharedDtor();
}

void MonsterAlertChangeNotify::SharedDtor() {
}

void MonsterAlertChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonsterAlertChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonsterAlertChangeNotify& MonsterAlertChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

MonsterAlertChangeNotify* MonsterAlertChangeNotify::New(::google::protobuf::Arena* arena) const {
  MonsterAlertChangeNotify* n = new MonsterAlertChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonsterAlertChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MonsterAlertChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monster_entity_list_.Clear();
  ::memset(&avatar_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_alert_) -
      reinterpret_cast<char*>(&avatar_entity_id_)) + sizeof(is_alert_));
  _internal_metadata_.Clear();
}

bool MonsterAlertChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MonsterAlertChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 is_alert = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_alert_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 monster_entity_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_monster_entity_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_monster_entity_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MonsterAlertChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MonsterAlertChangeNotify)
  return false;
#undef DO_
}

void MonsterAlertChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MonsterAlertChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_entity_id = 2;
  if (this->avatar_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->avatar_entity_id(), output);
  }

  // uint32 is_alert = 3;
  if (this->is_alert() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->is_alert(), output);
  }

  // repeated uint32 monster_entity_list = 4;
  if (this->monster_entity_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _monster_entity_list_cached_byte_size_));
  }
  for (int i = 0, n = this->monster_entity_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->monster_entity_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MonsterAlertChangeNotify)
}

::google::protobuf::uint8* MonsterAlertChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MonsterAlertChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_entity_id = 2;
  if (this->avatar_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->avatar_entity_id(), target);
  }

  // uint32 is_alert = 3;
  if (this->is_alert() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->is_alert(), target);
  }

  // repeated uint32 monster_entity_list = 4;
  if (this->monster_entity_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _monster_entity_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->monster_entity_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MonsterAlertChangeNotify)
  return target;
}

size_t MonsterAlertChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MonsterAlertChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 monster_entity_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->monster_entity_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _monster_entity_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 avatar_entity_id = 2;
  if (this->avatar_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_entity_id());
  }

  // uint32 is_alert = 3;
  if (this->is_alert() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_alert());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonsterAlertChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MonsterAlertChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MonsterAlertChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonsterAlertChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MonsterAlertChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MonsterAlertChangeNotify)
    MergeFrom(*source);
  }
}

void MonsterAlertChangeNotify::MergeFrom(const MonsterAlertChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MonsterAlertChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monster_entity_list_.MergeFrom(from.monster_entity_list_);
  if (from.avatar_entity_id() != 0) {
    set_avatar_entity_id(from.avatar_entity_id());
  }
  if (from.is_alert() != 0) {
    set_is_alert(from.is_alert());
  }
}

void MonsterAlertChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MonsterAlertChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonsterAlertChangeNotify::CopyFrom(const MonsterAlertChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MonsterAlertChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonsterAlertChangeNotify::IsInitialized() const {
  return true;
}

void MonsterAlertChangeNotify::Swap(MonsterAlertChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonsterAlertChangeNotify::InternalSwap(MonsterAlertChangeNotify* other) {
  using std::swap;
  monster_entity_list_.InternalSwap(&other->monster_entity_list_);
  swap(avatar_entity_id_, other->avatar_entity_id_);
  swap(is_alert_, other->is_alert_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonsterAlertChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonsterAlertChangeNotify

// uint32 avatar_entity_id = 2;
void MonsterAlertChangeNotify::clear_avatar_entity_id() {
  avatar_entity_id_ = 0u;
}
::google::protobuf::uint32 MonsterAlertChangeNotify::avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MonsterAlertChangeNotify.avatar_entity_id)
  return avatar_entity_id_;
}
void MonsterAlertChangeNotify::set_avatar_entity_id(::google::protobuf::uint32 value) {
  
  avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterAlertChangeNotify.avatar_entity_id)
}

// uint32 is_alert = 3;
void MonsterAlertChangeNotify::clear_is_alert() {
  is_alert_ = 0u;
}
::google::protobuf::uint32 MonsterAlertChangeNotify::is_alert() const {
  // @@protoc_insertion_point(field_get:proto.MonsterAlertChangeNotify.is_alert)
  return is_alert_;
}
void MonsterAlertChangeNotify::set_is_alert(::google::protobuf::uint32 value) {
  
  is_alert_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterAlertChangeNotify.is_alert)
}

// repeated uint32 monster_entity_list = 4;
int MonsterAlertChangeNotify::monster_entity_list_size() const {
  return monster_entity_list_.size();
}
void MonsterAlertChangeNotify::clear_monster_entity_list() {
  monster_entity_list_.Clear();
}
::google::protobuf::uint32 MonsterAlertChangeNotify::monster_entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MonsterAlertChangeNotify.monster_entity_list)
  return monster_entity_list_.Get(index);
}
void MonsterAlertChangeNotify::set_monster_entity_list(int index, ::google::protobuf::uint32 value) {
  monster_entity_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MonsterAlertChangeNotify.monster_entity_list)
}
void MonsterAlertChangeNotify::add_monster_entity_list(::google::protobuf::uint32 value) {
  monster_entity_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MonsterAlertChangeNotify.monster_entity_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MonsterAlertChangeNotify::monster_entity_list() const {
  // @@protoc_insertion_point(field_list:proto.MonsterAlertChangeNotify.monster_entity_list)
  return monster_entity_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MonsterAlertChangeNotify::mutable_monster_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MonsterAlertChangeNotify.monster_entity_list)
  return &monster_entity_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonsterForceAlertNotify::kMonsterEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonsterForceAlertNotify::MonsterForceAlertNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MonsterForceAlertNotify)
}
MonsterForceAlertNotify::MonsterForceAlertNotify(const MonsterForceAlertNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  monster_entity_id_ = from.monster_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.MonsterForceAlertNotify)
}

void MonsterForceAlertNotify::SharedCtor() {
  monster_entity_id_ = 0u;
  _cached_size_ = 0;
}

MonsterForceAlertNotify::~MonsterForceAlertNotify() {
  // @@protoc_insertion_point(destructor:proto.MonsterForceAlertNotify)
  SharedDtor();
}

void MonsterForceAlertNotify::SharedDtor() {
}

void MonsterForceAlertNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonsterForceAlertNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonsterForceAlertNotify& MonsterForceAlertNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

MonsterForceAlertNotify* MonsterForceAlertNotify::New(::google::protobuf::Arena* arena) const {
  MonsterForceAlertNotify* n = new MonsterForceAlertNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonsterForceAlertNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MonsterForceAlertNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monster_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MonsterForceAlertNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MonsterForceAlertNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 monster_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MonsterForceAlertNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MonsterForceAlertNotify)
  return false;
#undef DO_
}

void MonsterForceAlertNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MonsterForceAlertNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_entity_id = 1;
  if (this->monster_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->monster_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MonsterForceAlertNotify)
}

::google::protobuf::uint8* MonsterForceAlertNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MonsterForceAlertNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_entity_id = 1;
  if (this->monster_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->monster_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MonsterForceAlertNotify)
  return target;
}

size_t MonsterForceAlertNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MonsterForceAlertNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 monster_entity_id = 1;
  if (this->monster_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonsterForceAlertNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MonsterForceAlertNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MonsterForceAlertNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonsterForceAlertNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MonsterForceAlertNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MonsterForceAlertNotify)
    MergeFrom(*source);
  }
}

void MonsterForceAlertNotify::MergeFrom(const MonsterForceAlertNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MonsterForceAlertNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.monster_entity_id() != 0) {
    set_monster_entity_id(from.monster_entity_id());
  }
}

void MonsterForceAlertNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MonsterForceAlertNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonsterForceAlertNotify::CopyFrom(const MonsterForceAlertNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MonsterForceAlertNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonsterForceAlertNotify::IsInitialized() const {
  return true;
}

void MonsterForceAlertNotify::Swap(MonsterForceAlertNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonsterForceAlertNotify::InternalSwap(MonsterForceAlertNotify* other) {
  using std::swap;
  swap(monster_entity_id_, other->monster_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonsterForceAlertNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonsterForceAlertNotify

// uint32 monster_entity_id = 1;
void MonsterForceAlertNotify::clear_monster_entity_id() {
  monster_entity_id_ = 0u;
}
::google::protobuf::uint32 MonsterForceAlertNotify::monster_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MonsterForceAlertNotify.monster_entity_id)
  return monster_entity_id_;
}
void MonsterForceAlertNotify::set_monster_entity_id(::google::protobuf::uint32 value) {
  
  monster_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MonsterForceAlertNotify.monster_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarEnterElementViewNotify::kAvatarEntityIdFieldNumber;
const int AvatarEnterElementViewNotify::kIsTriggerdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarEnterElementViewNotify::AvatarEnterElementViewNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarEnterElementViewNotify)
}
AvatarEnterElementViewNotify::AvatarEnterElementViewNotify(const AvatarEnterElementViewNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&avatar_entity_id_, &from.avatar_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_triggerd_) -
    reinterpret_cast<char*>(&avatar_entity_id_)) + sizeof(is_triggerd_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarEnterElementViewNotify)
}

void AvatarEnterElementViewNotify::SharedCtor() {
  ::memset(&avatar_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_triggerd_) -
      reinterpret_cast<char*>(&avatar_entity_id_)) + sizeof(is_triggerd_));
  _cached_size_ = 0;
}

AvatarEnterElementViewNotify::~AvatarEnterElementViewNotify() {
  // @@protoc_insertion_point(destructor:proto.AvatarEnterElementViewNotify)
  SharedDtor();
}

void AvatarEnterElementViewNotify::SharedDtor() {
}

void AvatarEnterElementViewNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarEnterElementViewNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarEnterElementViewNotify& AvatarEnterElementViewNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarEnterElementViewNotify* AvatarEnterElementViewNotify::New(::google::protobuf::Arena* arena) const {
  AvatarEnterElementViewNotify* n = new AvatarEnterElementViewNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarEnterElementViewNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarEnterElementViewNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&avatar_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_triggerd_) -
      reinterpret_cast<char*>(&avatar_entity_id_)) + sizeof(is_triggerd_));
  _internal_metadata_.Clear();
}

bool AvatarEnterElementViewNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarEnterElementViewNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_triggerd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_triggerd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarEnterElementViewNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarEnterElementViewNotify)
  return false;
#undef DO_
}

void AvatarEnterElementViewNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarEnterElementViewNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_entity_id = 1;
  if (this->avatar_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_entity_id(), output);
  }

  // bool is_triggerd = 2;
  if (this->is_triggerd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_triggerd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarEnterElementViewNotify)
}

::google::protobuf::uint8* AvatarEnterElementViewNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarEnterElementViewNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_entity_id = 1;
  if (this->avatar_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_entity_id(), target);
  }

  // bool is_triggerd = 2;
  if (this->is_triggerd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_triggerd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarEnterElementViewNotify)
  return target;
}

size_t AvatarEnterElementViewNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarEnterElementViewNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_entity_id = 1;
  if (this->avatar_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_entity_id());
  }

  // bool is_triggerd = 2;
  if (this->is_triggerd() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarEnterElementViewNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarEnterElementViewNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarEnterElementViewNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarEnterElementViewNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarEnterElementViewNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarEnterElementViewNotify)
    MergeFrom(*source);
  }
}

void AvatarEnterElementViewNotify::MergeFrom(const AvatarEnterElementViewNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarEnterElementViewNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_entity_id() != 0) {
    set_avatar_entity_id(from.avatar_entity_id());
  }
  if (from.is_triggerd() != 0) {
    set_is_triggerd(from.is_triggerd());
  }
}

void AvatarEnterElementViewNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarEnterElementViewNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarEnterElementViewNotify::CopyFrom(const AvatarEnterElementViewNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarEnterElementViewNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarEnterElementViewNotify::IsInitialized() const {
  return true;
}

void AvatarEnterElementViewNotify::Swap(AvatarEnterElementViewNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarEnterElementViewNotify::InternalSwap(AvatarEnterElementViewNotify* other) {
  using std::swap;
  swap(avatar_entity_id_, other->avatar_entity_id_);
  swap(is_triggerd_, other->is_triggerd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarEnterElementViewNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarEnterElementViewNotify

// uint32 avatar_entity_id = 1;
void AvatarEnterElementViewNotify::clear_avatar_entity_id() {
  avatar_entity_id_ = 0u;
}
::google::protobuf::uint32 AvatarEnterElementViewNotify::avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterElementViewNotify.avatar_entity_id)
  return avatar_entity_id_;
}
void AvatarEnterElementViewNotify::set_avatar_entity_id(::google::protobuf::uint32 value) {
  
  avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterElementViewNotify.avatar_entity_id)
}

// bool is_triggerd = 2;
void AvatarEnterElementViewNotify::clear_is_triggerd() {
  is_triggerd_ = false;
}
bool AvatarEnterElementViewNotify::is_triggerd() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterElementViewNotify.is_triggerd)
  return is_triggerd_;
}
void AvatarEnterElementViewNotify::set_is_triggerd(bool value) {
  
  is_triggerd_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterElementViewNotify.is_triggerd)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TriggerCreateGadgetToEquipPartNotify::kEntityIdFieldNumber;
const int TriggerCreateGadgetToEquipPartNotify::kGadgetEntityIdFieldNumber;
const int TriggerCreateGadgetToEquipPartNotify::kGadgetIdFieldNumber;
const int TriggerCreateGadgetToEquipPartNotify::kEquipPartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TriggerCreateGadgetToEquipPartNotify::TriggerCreateGadgetToEquipPartNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TriggerCreateGadgetToEquipPartNotify)
}
TriggerCreateGadgetToEquipPartNotify::TriggerCreateGadgetToEquipPartNotify(const TriggerCreateGadgetToEquipPartNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  equip_part_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.equip_part().size() > 0) {
    equip_part_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.equip_part_);
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(gadget_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TriggerCreateGadgetToEquipPartNotify)
}

void TriggerCreateGadgetToEquipPartNotify::SharedCtor() {
  equip_part_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(gadget_id_));
  _cached_size_ = 0;
}

TriggerCreateGadgetToEquipPartNotify::~TriggerCreateGadgetToEquipPartNotify() {
  // @@protoc_insertion_point(destructor:proto.TriggerCreateGadgetToEquipPartNotify)
  SharedDtor();
}

void TriggerCreateGadgetToEquipPartNotify::SharedDtor() {
  equip_part_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TriggerCreateGadgetToEquipPartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TriggerCreateGadgetToEquipPartNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TriggerCreateGadgetToEquipPartNotify& TriggerCreateGadgetToEquipPartNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

TriggerCreateGadgetToEquipPartNotify* TriggerCreateGadgetToEquipPartNotify::New(::google::protobuf::Arena* arena) const {
  TriggerCreateGadgetToEquipPartNotify* n = new TriggerCreateGadgetToEquipPartNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TriggerCreateGadgetToEquipPartNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TriggerCreateGadgetToEquipPartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  equip_part_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(gadget_id_));
  _internal_metadata_.Clear();
}

bool TriggerCreateGadgetToEquipPartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TriggerCreateGadgetToEquipPartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string equip_part = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_equip_part()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->equip_part().data(), static_cast<int>(this->equip_part().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.TriggerCreateGadgetToEquipPartNotify.equip_part"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TriggerCreateGadgetToEquipPartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TriggerCreateGadgetToEquipPartNotify)
  return false;
#undef DO_
}

void TriggerCreateGadgetToEquipPartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TriggerCreateGadgetToEquipPartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gadget_entity_id(), output);
  }

  // uint32 gadget_id = 3;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gadget_id(), output);
  }

  // string equip_part = 4;
  if (this->equip_part().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->equip_part().data(), static_cast<int>(this->equip_part().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TriggerCreateGadgetToEquipPartNotify.equip_part");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->equip_part(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TriggerCreateGadgetToEquipPartNotify)
}

::google::protobuf::uint8* TriggerCreateGadgetToEquipPartNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TriggerCreateGadgetToEquipPartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gadget_entity_id(), target);
  }

  // uint32 gadget_id = 3;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gadget_id(), target);
  }

  // string equip_part = 4;
  if (this->equip_part().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->equip_part().data(), static_cast<int>(this->equip_part().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.TriggerCreateGadgetToEquipPartNotify.equip_part");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->equip_part(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TriggerCreateGadgetToEquipPartNotify)
  return target;
}

size_t TriggerCreateGadgetToEquipPartNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TriggerCreateGadgetToEquipPartNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string equip_part = 4;
  if (this->equip_part().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->equip_part());
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // uint32 gadget_id = 3;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TriggerCreateGadgetToEquipPartNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TriggerCreateGadgetToEquipPartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const TriggerCreateGadgetToEquipPartNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TriggerCreateGadgetToEquipPartNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TriggerCreateGadgetToEquipPartNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TriggerCreateGadgetToEquipPartNotify)
    MergeFrom(*source);
  }
}

void TriggerCreateGadgetToEquipPartNotify::MergeFrom(const TriggerCreateGadgetToEquipPartNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TriggerCreateGadgetToEquipPartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.equip_part().size() > 0) {

    equip_part_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.equip_part_);
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
}

void TriggerCreateGadgetToEquipPartNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TriggerCreateGadgetToEquipPartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TriggerCreateGadgetToEquipPartNotify::CopyFrom(const TriggerCreateGadgetToEquipPartNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TriggerCreateGadgetToEquipPartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerCreateGadgetToEquipPartNotify::IsInitialized() const {
  return true;
}

void TriggerCreateGadgetToEquipPartNotify::Swap(TriggerCreateGadgetToEquipPartNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TriggerCreateGadgetToEquipPartNotify::InternalSwap(TriggerCreateGadgetToEquipPartNotify* other) {
  using std::swap;
  equip_part_.Swap(&other->equip_part_);
  swap(entity_id_, other->entity_id_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(gadget_id_, other->gadget_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TriggerCreateGadgetToEquipPartNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TriggerCreateGadgetToEquipPartNotify

// uint32 entity_id = 1;
void TriggerCreateGadgetToEquipPartNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 TriggerCreateGadgetToEquipPartNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TriggerCreateGadgetToEquipPartNotify.entity_id)
  return entity_id_;
}
void TriggerCreateGadgetToEquipPartNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TriggerCreateGadgetToEquipPartNotify.entity_id)
}

// uint32 gadget_entity_id = 2;
void TriggerCreateGadgetToEquipPartNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 TriggerCreateGadgetToEquipPartNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TriggerCreateGadgetToEquipPartNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void TriggerCreateGadgetToEquipPartNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TriggerCreateGadgetToEquipPartNotify.gadget_entity_id)
}

// uint32 gadget_id = 3;
void TriggerCreateGadgetToEquipPartNotify::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 TriggerCreateGadgetToEquipPartNotify::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.TriggerCreateGadgetToEquipPartNotify.gadget_id)
  return gadget_id_;
}
void TriggerCreateGadgetToEquipPartNotify::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TriggerCreateGadgetToEquipPartNotify.gadget_id)
}

// string equip_part = 4;
void TriggerCreateGadgetToEquipPartNotify::clear_equip_part() {
  equip_part_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TriggerCreateGadgetToEquipPartNotify::equip_part() const {
  // @@protoc_insertion_point(field_get:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
  return equip_part_.GetNoArena();
}
void TriggerCreateGadgetToEquipPartNotify::set_equip_part(const ::std::string& value) {
  
  equip_part_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}
#if LANG_CXX11
void TriggerCreateGadgetToEquipPartNotify::set_equip_part(::std::string&& value) {
  
  equip_part_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}
#endif
void TriggerCreateGadgetToEquipPartNotify::set_equip_part(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  equip_part_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}
void TriggerCreateGadgetToEquipPartNotify::set_equip_part(const char* value, size_t size) {
  
  equip_part_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}
::std::string* TriggerCreateGadgetToEquipPartNotify::mutable_equip_part() {
  
  // @@protoc_insertion_point(field_mutable:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
  return equip_part_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TriggerCreateGadgetToEquipPartNotify::release_equip_part() {
  // @@protoc_insertion_point(field_release:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
  
  return equip_part_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TriggerCreateGadgetToEquipPartNotify::set_allocated_equip_part(::std::string* equip_part) {
  if (equip_part != NULL) {
    
  } else {
    
  }
  equip_part_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), equip_part);
  // @@protoc_insertion_point(field_set_allocated:proto.TriggerCreateGadgetToEquipPartNotify.equip_part)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtEntityRenderersChangedNotify::kForwardTypeFieldNumber;
const int EvtEntityRenderersChangedNotify::kEntityIdFieldNumber;
const int EvtEntityRenderersChangedNotify::kIsServerCacheFieldNumber;
const int EvtEntityRenderersChangedNotify::kRendererChangedInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtEntityRenderersChangedNotify::EvtEntityRenderersChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtEntityRenderersChangedNotify)
}
EvtEntityRenderersChangedNotify::EvtEntityRenderersChangedNotify(const EvtEntityRenderersChangedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_renderer_changed_info()) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo(*from.renderer_changed_info_);
  } else {
    renderer_changed_info_ = NULL;
  }
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_server_cache_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(is_server_cache_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtEntityRenderersChangedNotify)
}

void EvtEntityRenderersChangedNotify::SharedCtor() {
  ::memset(&renderer_changed_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_server_cache_) -
      reinterpret_cast<char*>(&renderer_changed_info_)) + sizeof(is_server_cache_));
  _cached_size_ = 0;
}

EvtEntityRenderersChangedNotify::~EvtEntityRenderersChangedNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtEntityRenderersChangedNotify)
  SharedDtor();
}

void EvtEntityRenderersChangedNotify::SharedDtor() {
  if (this != internal_default_instance()) delete renderer_changed_info_;
}

void EvtEntityRenderersChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtEntityRenderersChangedNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtEntityRenderersChangedNotify& EvtEntityRenderersChangedNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtEntityRenderersChangedNotify* EvtEntityRenderersChangedNotify::New(::google::protobuf::Arena* arena) const {
  EvtEntityRenderersChangedNotify* n = new EvtEntityRenderersChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtEntityRenderersChangedNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtEntityRenderersChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) {
    delete renderer_changed_info_;
  }
  renderer_changed_info_ = NULL;
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_server_cache_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(is_server_cache_));
  _internal_metadata_.Clear();
}

bool EvtEntityRenderersChangedNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtEntityRenderersChangedNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_server_cache = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_server_cache_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_renderer_changed_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtEntityRenderersChangedNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtEntityRenderersChangedNotify)
  return false;
#undef DO_
}

void EvtEntityRenderersChangedNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtEntityRenderersChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // bool is_server_cache = 3;
  if (this->is_server_cache() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_server_cache(), output);
  }

  // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
  if (this->has_renderer_changed_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->renderer_changed_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtEntityRenderersChangedNotify)
}

::google::protobuf::uint8* EvtEntityRenderersChangedNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtEntityRenderersChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // bool is_server_cache = 3;
  if (this->is_server_cache() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_server_cache(), target);
  }

  // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
  if (this->has_renderer_changed_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->renderer_changed_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtEntityRenderersChangedNotify)
  return target;
}

size_t EvtEntityRenderersChangedNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtEntityRenderersChangedNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.EntityRendererChangedInfo renderer_changed_info = 4;
  if (this->has_renderer_changed_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->renderer_changed_info_);
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // bool is_server_cache = 3;
  if (this->is_server_cache() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtEntityRenderersChangedNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtEntityRenderersChangedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtEntityRenderersChangedNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtEntityRenderersChangedNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtEntityRenderersChangedNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtEntityRenderersChangedNotify)
    MergeFrom(*source);
  }
}

void EvtEntityRenderersChangedNotify::MergeFrom(const EvtEntityRenderersChangedNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtEntityRenderersChangedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_renderer_changed_info()) {
    mutable_renderer_changed_info()->::proto::EntityRendererChangedInfo::MergeFrom(from.renderer_changed_info());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.is_server_cache() != 0) {
    set_is_server_cache(from.is_server_cache());
  }
}

void EvtEntityRenderersChangedNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtEntityRenderersChangedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtEntityRenderersChangedNotify::CopyFrom(const EvtEntityRenderersChangedNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtEntityRenderersChangedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtEntityRenderersChangedNotify::IsInitialized() const {
  return true;
}

void EvtEntityRenderersChangedNotify::Swap(EvtEntityRenderersChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtEntityRenderersChangedNotify::InternalSwap(EvtEntityRenderersChangedNotify* other) {
  using std::swap;
  swap(renderer_changed_info_, other->renderer_changed_info_);
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  swap(is_server_cache_, other->is_server_cache_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtEntityRenderersChangedNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtEntityRenderersChangedNotify

// .proto.ForwardType forward_type = 1;
void EvtEntityRenderersChangedNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtEntityRenderersChangedNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityRenderersChangedNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtEntityRenderersChangedNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityRenderersChangedNotify.forward_type)
}

// uint32 entity_id = 2;
void EvtEntityRenderersChangedNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtEntityRenderersChangedNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityRenderersChangedNotify.entity_id)
  return entity_id_;
}
void EvtEntityRenderersChangedNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityRenderersChangedNotify.entity_id)
}

// bool is_server_cache = 3;
void EvtEntityRenderersChangedNotify::clear_is_server_cache() {
  is_server_cache_ = false;
}
bool EvtEntityRenderersChangedNotify::is_server_cache() const {
  // @@protoc_insertion_point(field_get:proto.EvtEntityRenderersChangedNotify.is_server_cache)
  return is_server_cache_;
}
void EvtEntityRenderersChangedNotify::set_is_server_cache(bool value) {
  
  is_server_cache_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtEntityRenderersChangedNotify.is_server_cache)
}

// .proto.EntityRendererChangedInfo renderer_changed_info = 4;
bool EvtEntityRenderersChangedNotify::has_renderer_changed_info() const {
  return this != internal_default_instance() && renderer_changed_info_ != NULL;
}
void EvtEntityRenderersChangedNotify::clear_renderer_changed_info() {
  if (GetArenaNoVirtual() == NULL && renderer_changed_info_ != NULL) delete renderer_changed_info_;
  renderer_changed_info_ = NULL;
}
const ::proto::EntityRendererChangedInfo& EvtEntityRenderersChangedNotify::renderer_changed_info() const {
  const ::proto::EntityRendererChangedInfo* p = renderer_changed_info_;
  // @@protoc_insertion_point(field_get:proto.EvtEntityRenderersChangedNotify.renderer_changed_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::EntityRendererChangedInfo*>(
      &::proto::_EntityRendererChangedInfo_default_instance_);
}
::proto::EntityRendererChangedInfo* EvtEntityRenderersChangedNotify::mutable_renderer_changed_info() {
  
  if (renderer_changed_info_ == NULL) {
    renderer_changed_info_ = new ::proto::EntityRendererChangedInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtEntityRenderersChangedNotify.renderer_changed_info)
  return renderer_changed_info_;
}
::proto::EntityRendererChangedInfo* EvtEntityRenderersChangedNotify::release_renderer_changed_info() {
  // @@protoc_insertion_point(field_release:proto.EvtEntityRenderersChangedNotify.renderer_changed_info)
  
  ::proto::EntityRendererChangedInfo* temp = renderer_changed_info_;
  renderer_changed_info_ = NULL;
  return temp;
}
void EvtEntityRenderersChangedNotify::set_allocated_renderer_changed_info(::proto::EntityRendererChangedInfo* renderer_changed_info) {
  delete renderer_changed_info_;
  renderer_changed_info_ = renderer_changed_info;
  if (renderer_changed_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtEntityRenderersChangedNotify.renderer_changed_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnimatorForceSetAirMoveNotify::kForwardTypeFieldNumber;
const int AnimatorForceSetAirMoveNotify::kEntityIdFieldNumber;
const int AnimatorForceSetAirMoveNotify::kInAirMoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AnimatorForceSetAirMoveNotify::AnimatorForceSetAirMoveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AnimatorForceSetAirMoveNotify)
}
AnimatorForceSetAirMoveNotify::AnimatorForceSetAirMoveNotify(const AnimatorForceSetAirMoveNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&forward_type_, &from.forward_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&in_air_move_) -
    reinterpret_cast<char*>(&forward_type_)) + sizeof(in_air_move_));
  // @@protoc_insertion_point(copy_constructor:proto.AnimatorForceSetAirMoveNotify)
}

void AnimatorForceSetAirMoveNotify::SharedCtor() {
  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&in_air_move_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(in_air_move_));
  _cached_size_ = 0;
}

AnimatorForceSetAirMoveNotify::~AnimatorForceSetAirMoveNotify() {
  // @@protoc_insertion_point(destructor:proto.AnimatorForceSetAirMoveNotify)
  SharedDtor();
}

void AnimatorForceSetAirMoveNotify::SharedDtor() {
}

void AnimatorForceSetAirMoveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnimatorForceSetAirMoveNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AnimatorForceSetAirMoveNotify& AnimatorForceSetAirMoveNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AnimatorForceSetAirMoveNotify* AnimatorForceSetAirMoveNotify::New(::google::protobuf::Arena* arena) const {
  AnimatorForceSetAirMoveNotify* n = new AnimatorForceSetAirMoveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AnimatorForceSetAirMoveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AnimatorForceSetAirMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&forward_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&in_air_move_) -
      reinterpret_cast<char*>(&forward_type_)) + sizeof(in_air_move_));
  _internal_metadata_.Clear();
}

bool AnimatorForceSetAirMoveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AnimatorForceSetAirMoveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool in_air_move = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_air_move_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AnimatorForceSetAirMoveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AnimatorForceSetAirMoveNotify)
  return false;
#undef DO_
}

void AnimatorForceSetAirMoveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AnimatorForceSetAirMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // bool in_air_move = 3;
  if (this->in_air_move() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->in_air_move(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AnimatorForceSetAirMoveNotify)
}

::google::protobuf::uint8* AnimatorForceSetAirMoveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AnimatorForceSetAirMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // bool in_air_move = 3;
  if (this->in_air_move() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->in_air_move(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AnimatorForceSetAirMoveNotify)
  return target;
}

size_t AnimatorForceSetAirMoveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AnimatorForceSetAirMoveNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // bool in_air_move = 3;
  if (this->in_air_move() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnimatorForceSetAirMoveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AnimatorForceSetAirMoveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AnimatorForceSetAirMoveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AnimatorForceSetAirMoveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AnimatorForceSetAirMoveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AnimatorForceSetAirMoveNotify)
    MergeFrom(*source);
  }
}

void AnimatorForceSetAirMoveNotify::MergeFrom(const AnimatorForceSetAirMoveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AnimatorForceSetAirMoveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.in_air_move() != 0) {
    set_in_air_move(from.in_air_move());
  }
}

void AnimatorForceSetAirMoveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AnimatorForceSetAirMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnimatorForceSetAirMoveNotify::CopyFrom(const AnimatorForceSetAirMoveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AnimatorForceSetAirMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnimatorForceSetAirMoveNotify::IsInitialized() const {
  return true;
}

void AnimatorForceSetAirMoveNotify::Swap(AnimatorForceSetAirMoveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AnimatorForceSetAirMoveNotify::InternalSwap(AnimatorForceSetAirMoveNotify* other) {
  using std::swap;
  swap(forward_type_, other->forward_type_);
  swap(entity_id_, other->entity_id_);
  swap(in_air_move_, other->in_air_move_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AnimatorForceSetAirMoveNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AnimatorForceSetAirMoveNotify

// .proto.ForwardType forward_type = 1;
void AnimatorForceSetAirMoveNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType AnimatorForceSetAirMoveNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorForceSetAirMoveNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void AnimatorForceSetAirMoveNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorForceSetAirMoveNotify.forward_type)
}

// uint32 entity_id = 2;
void AnimatorForceSetAirMoveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 AnimatorForceSetAirMoveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorForceSetAirMoveNotify.entity_id)
  return entity_id_;
}
void AnimatorForceSetAirMoveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorForceSetAirMoveNotify.entity_id)
}

// bool in_air_move = 3;
void AnimatorForceSetAirMoveNotify::clear_in_air_move() {
  in_air_move_ = false;
}
bool AnimatorForceSetAirMoveNotify::in_air_move() const {
  // @@protoc_insertion_point(field_get:proto.AnimatorForceSetAirMoveNotify.in_air_move)
  return in_air_move_;
}
void AnimatorForceSetAirMoveNotify::set_in_air_move(bool value) {
  
  in_air_move_ = value;
  // @@protoc_insertion_point(field_set:proto.AnimatorForceSetAirMoveNotify.in_air_move)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AiSkillCdInfo::AiSkillCdInfo_SkillCdMapEntry::AiSkillCdInfo_SkillCdMapEntry() {}
AiSkillCdInfo::AiSkillCdInfo_SkillCdMapEntry::AiSkillCdInfo_SkillCdMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AiSkillCdInfo::AiSkillCdInfo_SkillCdMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[39];
}
void AiSkillCdInfo::AiSkillCdInfo_SkillCdMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AiSkillCdInfo::AiSkillCdInfo_SkillCdMapEntry::MergeFrom(const AiSkillCdInfo_SkillCdMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AiSkillCdInfo::kSkillCdMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AiSkillCdInfo::AiSkillCdInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AiSkillCdInfo)
}
AiSkillCdInfo::AiSkillCdInfo(const AiSkillCdInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skill_cd_map_.MergeFrom(from.skill_cd_map_);
  // @@protoc_insertion_point(copy_constructor:proto.AiSkillCdInfo)
}

void AiSkillCdInfo::SharedCtor() {
  _cached_size_ = 0;
}

AiSkillCdInfo::~AiSkillCdInfo() {
  // @@protoc_insertion_point(destructor:proto.AiSkillCdInfo)
  SharedDtor();
}

void AiSkillCdInfo::SharedDtor() {
}

void AiSkillCdInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AiSkillCdInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AiSkillCdInfo& AiSkillCdInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AiSkillCdInfo* AiSkillCdInfo::New(::google::protobuf::Arena* arena) const {
  AiSkillCdInfo* n = new AiSkillCdInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AiSkillCdInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AiSkillCdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  skill_cd_map_.Clear();
  _internal_metadata_.Clear();
}

bool AiSkillCdInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AiSkillCdInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> skill_cd_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          AiSkillCdInfo_SkillCdMapEntry::Parser< ::google::protobuf::internal::MapField<
              AiSkillCdInfo_SkillCdMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&skill_cd_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AiSkillCdInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AiSkillCdInfo)
  return false;
#undef DO_
}

void AiSkillCdInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AiSkillCdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> skill_cd_map = 1;
  if (!this->skill_cd_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->skill_cd_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_cd_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_cd_map().begin();
          it != this->skill_cd_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AiSkillCdInfo_SkillCdMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_cd_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AiSkillCdInfo_SkillCdMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_cd_map().begin();
          it != this->skill_cd_map().end(); ++it) {
        entry.reset(skill_cd_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AiSkillCdInfo)
}

::google::protobuf::uint8* AiSkillCdInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AiSkillCdInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> skill_cd_map = 1;
  if (!this->skill_cd_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->skill_cd_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->skill_cd_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_cd_map().begin();
          it != this->skill_cd_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AiSkillCdInfo_SkillCdMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(skill_cd_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AiSkillCdInfo_SkillCdMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->skill_cd_map().begin();
          it != this->skill_cd_map().end(); ++it) {
        entry.reset(skill_cd_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AiSkillCdInfo)
  return target;
}

size_t AiSkillCdInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AiSkillCdInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> skill_cd_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->skill_cd_map_size());
  {
    ::google::protobuf::scoped_ptr<AiSkillCdInfo_SkillCdMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->skill_cd_map().begin();
        it != this->skill_cd_map().end(); ++it) {
      entry.reset(skill_cd_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AiSkillCdInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AiSkillCdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AiSkillCdInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AiSkillCdInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AiSkillCdInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AiSkillCdInfo)
    MergeFrom(*source);
  }
}

void AiSkillCdInfo::MergeFrom(const AiSkillCdInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AiSkillCdInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skill_cd_map_.MergeFrom(from.skill_cd_map_);
}

void AiSkillCdInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AiSkillCdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AiSkillCdInfo::CopyFrom(const AiSkillCdInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AiSkillCdInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AiSkillCdInfo::IsInitialized() const {
  return true;
}

void AiSkillCdInfo::Swap(AiSkillCdInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AiSkillCdInfo::InternalSwap(AiSkillCdInfo* other) {
  using std::swap;
  skill_cd_map_.Swap(&other->skill_cd_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AiSkillCdInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AiSkillCdInfo

// map<uint32, uint32> skill_cd_map = 1;
int AiSkillCdInfo::skill_cd_map_size() const {
  return skill_cd_map_.size();
}
void AiSkillCdInfo::clear_skill_cd_map() {
  skill_cd_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AiSkillCdInfo::skill_cd_map() const {
  // @@protoc_insertion_point(field_map:proto.AiSkillCdInfo.skill_cd_map)
  return skill_cd_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AiSkillCdInfo::mutable_skill_cd_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AiSkillCdInfo.skill_cd_map)
  return skill_cd_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify_AiCdMapEntry::EvtAiSyncSkillCdNotify_AiCdMapEntry() {}
EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify_AiCdMapEntry::EvtAiSyncSkillCdNotify_AiCdMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify_AiCdMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[41];
}
void EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify_AiCdMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify_AiCdMapEntry::MergeFrom(const EvtAiSyncSkillCdNotify_AiCdMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAiSyncSkillCdNotify::kAiCdMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAiSyncSkillCdNotify)
}
EvtAiSyncSkillCdNotify::EvtAiSyncSkillCdNotify(const EvtAiSyncSkillCdNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ai_cd_map_.MergeFrom(from.ai_cd_map_);
  // @@protoc_insertion_point(copy_constructor:proto.EvtAiSyncSkillCdNotify)
}

void EvtAiSyncSkillCdNotify::SharedCtor() {
  _cached_size_ = 0;
}

EvtAiSyncSkillCdNotify::~EvtAiSyncSkillCdNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAiSyncSkillCdNotify)
  SharedDtor();
}

void EvtAiSyncSkillCdNotify::SharedDtor() {
}

void EvtAiSyncSkillCdNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAiSyncSkillCdNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAiSyncSkillCdNotify& EvtAiSyncSkillCdNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAiSyncSkillCdNotify* EvtAiSyncSkillCdNotify::New(::google::protobuf::Arena* arena) const {
  EvtAiSyncSkillCdNotify* n = new EvtAiSyncSkillCdNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAiSyncSkillCdNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAiSyncSkillCdNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ai_cd_map_.Clear();
  _internal_metadata_.Clear();
}

bool EvtAiSyncSkillCdNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAiSyncSkillCdNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.AiSkillCdInfo> ai_cd_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          EvtAiSyncSkillCdNotify_AiCdMapEntry::Parser< ::google::protobuf::internal::MapField<
              EvtAiSyncSkillCdNotify_AiCdMapEntry,
              ::google::protobuf::uint32, ::proto::AiSkillCdInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo > > parser(&ai_cd_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAiSyncSkillCdNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAiSyncSkillCdNotify)
  return false;
#undef DO_
}

void EvtAiSyncSkillCdNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAiSyncSkillCdNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.AiSkillCdInfo> ai_cd_map = 1;
  if (!this->ai_cd_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->ai_cd_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ai_cd_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::const_iterator
          it = this->ai_cd_map().begin();
          it != this->ai_cd_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<EvtAiSyncSkillCdNotify_AiCdMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ai_cd_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<EvtAiSyncSkillCdNotify_AiCdMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::const_iterator
          it = this->ai_cd_map().begin();
          it != this->ai_cd_map().end(); ++it) {
        entry.reset(ai_cd_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAiSyncSkillCdNotify)
}

::google::protobuf::uint8* EvtAiSyncSkillCdNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAiSyncSkillCdNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.AiSkillCdInfo> ai_cd_map = 1;
  if (!this->ai_cd_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->ai_cd_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ai_cd_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::const_iterator
          it = this->ai_cd_map().begin();
          it != this->ai_cd_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<EvtAiSyncSkillCdNotify_AiCdMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ai_cd_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<EvtAiSyncSkillCdNotify_AiCdMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::const_iterator
          it = this->ai_cd_map().begin();
          it != this->ai_cd_map().end(); ++it) {
        entry.reset(ai_cd_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAiSyncSkillCdNotify)
  return target;
}

size_t EvtAiSyncSkillCdNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAiSyncSkillCdNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.AiSkillCdInfo> ai_cd_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ai_cd_map_size());
  {
    ::google::protobuf::scoped_ptr<EvtAiSyncSkillCdNotify_AiCdMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >::const_iterator
        it = this->ai_cd_map().begin();
        it != this->ai_cd_map().end(); ++it) {
      entry.reset(ai_cd_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAiSyncSkillCdNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAiSyncSkillCdNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAiSyncSkillCdNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAiSyncSkillCdNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAiSyncSkillCdNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAiSyncSkillCdNotify)
    MergeFrom(*source);
  }
}

void EvtAiSyncSkillCdNotify::MergeFrom(const EvtAiSyncSkillCdNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAiSyncSkillCdNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ai_cd_map_.MergeFrom(from.ai_cd_map_);
}

void EvtAiSyncSkillCdNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAiSyncSkillCdNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAiSyncSkillCdNotify::CopyFrom(const EvtAiSyncSkillCdNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAiSyncSkillCdNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAiSyncSkillCdNotify::IsInitialized() const {
  return true;
}

void EvtAiSyncSkillCdNotify::Swap(EvtAiSyncSkillCdNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAiSyncSkillCdNotify::InternalSwap(EvtAiSyncSkillCdNotify* other) {
  using std::swap;
  ai_cd_map_.Swap(&other->ai_cd_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAiSyncSkillCdNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAiSyncSkillCdNotify

// map<uint32, .proto.AiSkillCdInfo> ai_cd_map = 1;
int EvtAiSyncSkillCdNotify::ai_cd_map_size() const {
  return ai_cd_map_.size();
}
void EvtAiSyncSkillCdNotify::clear_ai_cd_map() {
  ai_cd_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >&
EvtAiSyncSkillCdNotify::ai_cd_map() const {
  // @@protoc_insertion_point(field_map:proto.EvtAiSyncSkillCdNotify.ai_cd_map)
  return ai_cd_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiSkillCdInfo >*
EvtAiSyncSkillCdNotify::mutable_ai_cd_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.EvtAiSyncSkillCdNotify.ai_cd_map)
  return ai_cd_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtBeingHitsCombineNotify::kForwardTypeFieldNumber;
const int EvtBeingHitsCombineNotify::kEvtBeingHitInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtBeingHitsCombineNotify::EvtBeingHitsCombineNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtBeingHitsCombineNotify)
}
EvtBeingHitsCombineNotify::EvtBeingHitsCombineNotify(const EvtBeingHitsCombineNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      evt_being_hit_info_list_(from.evt_being_hit_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  forward_type_ = from.forward_type_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtBeingHitsCombineNotify)
}

void EvtBeingHitsCombineNotify::SharedCtor() {
  forward_type_ = 0;
  _cached_size_ = 0;
}

EvtBeingHitsCombineNotify::~EvtBeingHitsCombineNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtBeingHitsCombineNotify)
  SharedDtor();
}

void EvtBeingHitsCombineNotify::SharedDtor() {
}

void EvtBeingHitsCombineNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtBeingHitsCombineNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtBeingHitsCombineNotify& EvtBeingHitsCombineNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtBeingHitsCombineNotify* EvtBeingHitsCombineNotify::New(::google::protobuf::Arena* arena) const {
  EvtBeingHitsCombineNotify* n = new EvtBeingHitsCombineNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtBeingHitsCombineNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtBeingHitsCombineNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  evt_being_hit_info_list_.Clear();
  forward_type_ = 0;
  _internal_metadata_.Clear();
}

bool EvtBeingHitsCombineNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtBeingHitsCombineNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ForwardType forward_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.EvtBeingHitInfo evt_being_hit_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_evt_being_hit_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtBeingHitsCombineNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtBeingHitsCombineNotify)
  return false;
#undef DO_
}

void EvtBeingHitsCombineNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtBeingHitsCombineNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->forward_type(), output);
  }

  // repeated .proto.EvtBeingHitInfo evt_being_hit_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->evt_being_hit_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->evt_being_hit_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtBeingHitsCombineNotify)
}

::google::protobuf::uint8* EvtBeingHitsCombineNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtBeingHitsCombineNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->forward_type(), target);
  }

  // repeated .proto.EvtBeingHitInfo evt_being_hit_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->evt_being_hit_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->evt_being_hit_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtBeingHitsCombineNotify)
  return target;
}

size_t EvtBeingHitsCombineNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtBeingHitsCombineNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.EvtBeingHitInfo evt_being_hit_info_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->evt_being_hit_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->evt_being_hit_info_list(static_cast<int>(i)));
    }
  }

  // .proto.ForwardType forward_type = 1;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtBeingHitsCombineNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtBeingHitsCombineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtBeingHitsCombineNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtBeingHitsCombineNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtBeingHitsCombineNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtBeingHitsCombineNotify)
    MergeFrom(*source);
  }
}

void EvtBeingHitsCombineNotify::MergeFrom(const EvtBeingHitsCombineNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtBeingHitsCombineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  evt_being_hit_info_list_.MergeFrom(from.evt_being_hit_info_list_);
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
}

void EvtBeingHitsCombineNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtBeingHitsCombineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtBeingHitsCombineNotify::CopyFrom(const EvtBeingHitsCombineNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtBeingHitsCombineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtBeingHitsCombineNotify::IsInitialized() const {
  return true;
}

void EvtBeingHitsCombineNotify::Swap(EvtBeingHitsCombineNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtBeingHitsCombineNotify::InternalSwap(EvtBeingHitsCombineNotify* other) {
  using std::swap;
  evt_being_hit_info_list_.InternalSwap(&other->evt_being_hit_info_list_);
  swap(forward_type_, other->forward_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtBeingHitsCombineNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtBeingHitsCombineNotify

// .proto.ForwardType forward_type = 1;
void EvtBeingHitsCombineNotify::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType EvtBeingHitsCombineNotify::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitsCombineNotify.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void EvtBeingHitsCombineNotify::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtBeingHitsCombineNotify.forward_type)
}

// repeated .proto.EvtBeingHitInfo evt_being_hit_info_list = 2;
int EvtBeingHitsCombineNotify::evt_being_hit_info_list_size() const {
  return evt_being_hit_info_list_.size();
}
void EvtBeingHitsCombineNotify::clear_evt_being_hit_info_list() {
  evt_being_hit_info_list_.Clear();
}
const ::proto::EvtBeingHitInfo& EvtBeingHitsCombineNotify::evt_being_hit_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return evt_being_hit_info_list_.Get(index);
}
::proto::EvtBeingHitInfo* EvtBeingHitsCombineNotify::mutable_evt_being_hit_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return evt_being_hit_info_list_.Mutable(index);
}
::proto::EvtBeingHitInfo* EvtBeingHitsCombineNotify::add_evt_being_hit_info_list() {
  // @@protoc_insertion_point(field_add:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return evt_being_hit_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo >*
EvtBeingHitsCombineNotify::mutable_evt_being_hit_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return &evt_being_hit_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::EvtBeingHitInfo >&
EvtBeingHitsCombineNotify::evt_being_hit_info_list() const {
  // @@protoc_insertion_point(field_list:proto.EvtBeingHitsCombineNotify.evt_being_hit_info_list)
  return evt_being_hit_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAvatarSitDownNotify::kEntityIdFieldNumber;
const int EvtAvatarSitDownNotify::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAvatarSitDownNotify::EvtAvatarSitDownNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAvatarSitDownNotify)
}
EvtAvatarSitDownNotify::EvtAvatarSitDownNotify(const EvtAvatarSitDownNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::proto::Vector(*from.position_);
  } else {
    position_ = NULL;
  }
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.EvtAvatarSitDownNotify)
}

void EvtAvatarSitDownNotify::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

EvtAvatarSitDownNotify::~EvtAvatarSitDownNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAvatarSitDownNotify)
  SharedDtor();
}

void EvtAvatarSitDownNotify::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void EvtAvatarSitDownNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAvatarSitDownNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAvatarSitDownNotify& EvtAvatarSitDownNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAvatarSitDownNotify* EvtAvatarSitDownNotify::New(::google::protobuf::Arena* arena) const {
  EvtAvatarSitDownNotify* n = new EvtAvatarSitDownNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAvatarSitDownNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAvatarSitDownNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool EvtAvatarSitDownNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAvatarSitDownNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAvatarSitDownNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAvatarSitDownNotify)
  return false;
#undef DO_
}

void EvtAvatarSitDownNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAvatarSitDownNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.Vector position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAvatarSitDownNotify)
}

::google::protobuf::uint8* EvtAvatarSitDownNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAvatarSitDownNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.Vector position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->position_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAvatarSitDownNotify)
  return target;
}

size_t EvtAvatarSitDownNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAvatarSitDownNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAvatarSitDownNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAvatarSitDownNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAvatarSitDownNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAvatarSitDownNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAvatarSitDownNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAvatarSitDownNotify)
    MergeFrom(*source);
  }
}

void EvtAvatarSitDownNotify::MergeFrom(const EvtAvatarSitDownNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAvatarSitDownNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::proto::Vector::MergeFrom(from.position());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void EvtAvatarSitDownNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAvatarSitDownNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAvatarSitDownNotify::CopyFrom(const EvtAvatarSitDownNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAvatarSitDownNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAvatarSitDownNotify::IsInitialized() const {
  return true;
}

void EvtAvatarSitDownNotify::Swap(EvtAvatarSitDownNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAvatarSitDownNotify::InternalSwap(EvtAvatarSitDownNotify* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAvatarSitDownNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAvatarSitDownNotify

// uint32 entity_id = 1;
void EvtAvatarSitDownNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtAvatarSitDownNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarSitDownNotify.entity_id)
  return entity_id_;
}
void EvtAvatarSitDownNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarSitDownNotify.entity_id)
}

// .proto.Vector position = 2;
bool EvtAvatarSitDownNotify::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void EvtAvatarSitDownNotify::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::proto::Vector& EvtAvatarSitDownNotify::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.EvtAvatarSitDownNotify.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EvtAvatarSitDownNotify::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EvtAvatarSitDownNotify.position)
  return position_;
}
::proto::Vector* EvtAvatarSitDownNotify::release_position() {
  // @@protoc_insertion_point(field_release:proto.EvtAvatarSitDownNotify.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
void EvtAvatarSitDownNotify::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EvtAvatarSitDownNotify.position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAvatarStandUpNotify::kEntityIdFieldNumber;
const int EvtAvatarStandUpNotify::kDirectionFieldNumber;
const int EvtAvatarStandUpNotify::kPerformIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAvatarStandUpNotify::EvtAvatarStandUpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAvatarStandUpNotify)
}
EvtAvatarStandUpNotify::EvtAvatarStandUpNotify(const EvtAvatarStandUpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&performid_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(performid_));
  // @@protoc_insertion_point(copy_constructor:proto.EvtAvatarStandUpNotify)
}

void EvtAvatarStandUpNotify::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&performid_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(performid_));
  _cached_size_ = 0;
}

EvtAvatarStandUpNotify::~EvtAvatarStandUpNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAvatarStandUpNotify)
  SharedDtor();
}

void EvtAvatarStandUpNotify::SharedDtor() {
}

void EvtAvatarStandUpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAvatarStandUpNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAvatarStandUpNotify& EvtAvatarStandUpNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAvatarStandUpNotify* EvtAvatarStandUpNotify::New(::google::protobuf::Arena* arena) const {
  EvtAvatarStandUpNotify* n = new EvtAvatarStandUpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAvatarStandUpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAvatarStandUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&performid_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(performid_));
  _internal_metadata_.Clear();
}

bool EvtAvatarStandUpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAvatarStandUpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 direction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &direction_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 performID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &performid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAvatarStandUpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAvatarStandUpNotify)
  return false;
#undef DO_
}

void EvtAvatarStandUpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAvatarStandUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // int32 direction = 2;
  if (this->direction() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->direction(), output);
  }

  // int32 performID = 3;
  if (this->performid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->performid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAvatarStandUpNotify)
}

::google::protobuf::uint8* EvtAvatarStandUpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAvatarStandUpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // int32 direction = 2;
  if (this->direction() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->direction(), target);
  }

  // int32 performID = 3;
  if (this->performid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->performid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAvatarStandUpNotify)
  return target;
}

size_t EvtAvatarStandUpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAvatarStandUpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // int32 direction = 2;
  if (this->direction() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->direction());
  }

  // int32 performID = 3;
  if (this->performid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->performid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAvatarStandUpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAvatarStandUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAvatarStandUpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAvatarStandUpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAvatarStandUpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAvatarStandUpNotify)
    MergeFrom(*source);
  }
}

void EvtAvatarStandUpNotify::MergeFrom(const EvtAvatarStandUpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAvatarStandUpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.direction() != 0) {
    set_direction(from.direction());
  }
  if (from.performid() != 0) {
    set_performid(from.performid());
  }
}

void EvtAvatarStandUpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAvatarStandUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAvatarStandUpNotify::CopyFrom(const EvtAvatarStandUpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAvatarStandUpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAvatarStandUpNotify::IsInitialized() const {
  return true;
}

void EvtAvatarStandUpNotify::Swap(EvtAvatarStandUpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAvatarStandUpNotify::InternalSwap(EvtAvatarStandUpNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(direction_, other->direction_);
  swap(performid_, other->performid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAvatarStandUpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAvatarStandUpNotify

// uint32 entity_id = 1;
void EvtAvatarStandUpNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EvtAvatarStandUpNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarStandUpNotify.entity_id)
  return entity_id_;
}
void EvtAvatarStandUpNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarStandUpNotify.entity_id)
}

// int32 direction = 2;
void EvtAvatarStandUpNotify::clear_direction() {
  direction_ = 0;
}
::google::protobuf::int32 EvtAvatarStandUpNotify::direction() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarStandUpNotify.direction)
  return direction_;
}
void EvtAvatarStandUpNotify::set_direction(::google::protobuf::int32 value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarStandUpNotify.direction)
}

// int32 performID = 3;
void EvtAvatarStandUpNotify::clear_performid() {
  performid_ = 0;
}
::google::protobuf::int32 EvtAvatarStandUpNotify::performid() const {
  // @@protoc_insertion_point(field_get:proto.EvtAvatarStandUpNotify.performID)
  return performid_;
}
void EvtAvatarStandUpNotify::set_performid(::google::protobuf::int32 value) {
  
  performid_ = value;
  // @@protoc_insertion_point(field_set:proto.EvtAvatarStandUpNotify.performID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMassiveEntityReq::kMassiveEntityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMassiveEntityReq::CreateMassiveEntityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CreateMassiveEntityReq)
}
CreateMassiveEntityReq::CreateMassiveEntityReq(const CreateMassiveEntityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      massive_entity_list_(from.massive_entity_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CreateMassiveEntityReq)
}

void CreateMassiveEntityReq::SharedCtor() {
  _cached_size_ = 0;
}

CreateMassiveEntityReq::~CreateMassiveEntityReq() {
  // @@protoc_insertion_point(destructor:proto.CreateMassiveEntityReq)
  SharedDtor();
}

void CreateMassiveEntityReq::SharedDtor() {
}

void CreateMassiveEntityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateMassiveEntityReq::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateMassiveEntityReq& CreateMassiveEntityReq::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateMassiveEntityReq* CreateMassiveEntityReq::New(::google::protobuf::Arena* arena) const {
  CreateMassiveEntityReq* n = new CreateMassiveEntityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateMassiveEntityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateMassiveEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  massive_entity_list_.Clear();
  _internal_metadata_.Clear();
}

bool CreateMassiveEntityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CreateMassiveEntityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_massive_entity_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CreateMassiveEntityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CreateMassiveEntityReq)
  return false;
#undef DO_
}

void CreateMassiveEntityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CreateMassiveEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->massive_entity_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->massive_entity_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CreateMassiveEntityReq)
}

::google::protobuf::uint8* CreateMassiveEntityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateMassiveEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->massive_entity_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->massive_entity_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateMassiveEntityReq)
  return target;
}

size_t CreateMassiveEntityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateMassiveEntityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->massive_entity_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->massive_entity_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateMassiveEntityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CreateMassiveEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMassiveEntityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMassiveEntityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CreateMassiveEntityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CreateMassiveEntityReq)
    MergeFrom(*source);
  }
}

void CreateMassiveEntityReq::MergeFrom(const CreateMassiveEntityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateMassiveEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  massive_entity_list_.MergeFrom(from.massive_entity_list_);
}

void CreateMassiveEntityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CreateMassiveEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMassiveEntityReq::CopyFrom(const CreateMassiveEntityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateMassiveEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMassiveEntityReq::IsInitialized() const {
  return true;
}

void CreateMassiveEntityReq::Swap(CreateMassiveEntityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMassiveEntityReq::InternalSwap(CreateMassiveEntityReq* other) {
  using std::swap;
  massive_entity_list_.InternalSwap(&other->massive_entity_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateMassiveEntityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateMassiveEntityReq

// repeated .proto.ClientMassiveEntity massive_entity_list = 1;
int CreateMassiveEntityReq::massive_entity_list_size() const {
  return massive_entity_list_.size();
}
void CreateMassiveEntityReq::clear_massive_entity_list() {
  massive_entity_list_.Clear();
}
const ::proto::ClientMassiveEntity& CreateMassiveEntityReq::massive_entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CreateMassiveEntityReq.massive_entity_list)
  return massive_entity_list_.Get(index);
}
::proto::ClientMassiveEntity* CreateMassiveEntityReq::mutable_massive_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CreateMassiveEntityReq.massive_entity_list)
  return massive_entity_list_.Mutable(index);
}
::proto::ClientMassiveEntity* CreateMassiveEntityReq::add_massive_entity_list() {
  // @@protoc_insertion_point(field_add:proto.CreateMassiveEntityReq.massive_entity_list)
  return massive_entity_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >*
CreateMassiveEntityReq::mutable_massive_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CreateMassiveEntityReq.massive_entity_list)
  return &massive_entity_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >&
CreateMassiveEntityReq::massive_entity_list() const {
  // @@protoc_insertion_point(field_list:proto.CreateMassiveEntityReq.massive_entity_list)
  return massive_entity_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMassiveEntityRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMassiveEntityRsp::CreateMassiveEntityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CreateMassiveEntityRsp)
}
CreateMassiveEntityRsp::CreateMassiveEntityRsp(const CreateMassiveEntityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.CreateMassiveEntityRsp)
}

void CreateMassiveEntityRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

CreateMassiveEntityRsp::~CreateMassiveEntityRsp() {
  // @@protoc_insertion_point(destructor:proto.CreateMassiveEntityRsp)
  SharedDtor();
}

void CreateMassiveEntityRsp::SharedDtor() {
}

void CreateMassiveEntityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateMassiveEntityRsp::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateMassiveEntityRsp& CreateMassiveEntityRsp::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateMassiveEntityRsp* CreateMassiveEntityRsp::New(::google::protobuf::Arena* arena) const {
  CreateMassiveEntityRsp* n = new CreateMassiveEntityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateMassiveEntityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateMassiveEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool CreateMassiveEntityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CreateMassiveEntityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CreateMassiveEntityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CreateMassiveEntityRsp)
  return false;
#undef DO_
}

void CreateMassiveEntityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CreateMassiveEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CreateMassiveEntityRsp)
}

::google::protobuf::uint8* CreateMassiveEntityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateMassiveEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateMassiveEntityRsp)
  return target;
}

size_t CreateMassiveEntityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateMassiveEntityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateMassiveEntityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CreateMassiveEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMassiveEntityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMassiveEntityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CreateMassiveEntityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CreateMassiveEntityRsp)
    MergeFrom(*source);
  }
}

void CreateMassiveEntityRsp::MergeFrom(const CreateMassiveEntityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateMassiveEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void CreateMassiveEntityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CreateMassiveEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMassiveEntityRsp::CopyFrom(const CreateMassiveEntityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateMassiveEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMassiveEntityRsp::IsInitialized() const {
  return true;
}

void CreateMassiveEntityRsp::Swap(CreateMassiveEntityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMassiveEntityRsp::InternalSwap(CreateMassiveEntityRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateMassiveEntityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateMassiveEntityRsp

// int32 retcode = 1;
void CreateMassiveEntityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 CreateMassiveEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CreateMassiveEntityRsp.retcode)
  return retcode_;
}
void CreateMassiveEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CreateMassiveEntityRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateMassiveEntityNotify::kMassiveEntityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateMassiveEntityNotify::CreateMassiveEntityNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CreateMassiveEntityNotify)
}
CreateMassiveEntityNotify::CreateMassiveEntityNotify(const CreateMassiveEntityNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      massive_entity_list_(from.massive_entity_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CreateMassiveEntityNotify)
}

void CreateMassiveEntityNotify::SharedCtor() {
  _cached_size_ = 0;
}

CreateMassiveEntityNotify::~CreateMassiveEntityNotify() {
  // @@protoc_insertion_point(destructor:proto.CreateMassiveEntityNotify)
  SharedDtor();
}

void CreateMassiveEntityNotify::SharedDtor() {
}

void CreateMassiveEntityNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateMassiveEntityNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateMassiveEntityNotify& CreateMassiveEntityNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateMassiveEntityNotify* CreateMassiveEntityNotify::New(::google::protobuf::Arena* arena) const {
  CreateMassiveEntityNotify* n = new CreateMassiveEntityNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateMassiveEntityNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateMassiveEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  massive_entity_list_.Clear();
  _internal_metadata_.Clear();
}

bool CreateMassiveEntityNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CreateMassiveEntityNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ServerMassiveEntity massive_entity_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_massive_entity_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CreateMassiveEntityNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CreateMassiveEntityNotify)
  return false;
#undef DO_
}

void CreateMassiveEntityNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CreateMassiveEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ServerMassiveEntity massive_entity_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->massive_entity_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->massive_entity_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CreateMassiveEntityNotify)
}

::google::protobuf::uint8* CreateMassiveEntityNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateMassiveEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ServerMassiveEntity massive_entity_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->massive_entity_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->massive_entity_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateMassiveEntityNotify)
  return target;
}

size_t CreateMassiveEntityNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateMassiveEntityNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ServerMassiveEntity massive_entity_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->massive_entity_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->massive_entity_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateMassiveEntityNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CreateMassiveEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateMassiveEntityNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateMassiveEntityNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CreateMassiveEntityNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CreateMassiveEntityNotify)
    MergeFrom(*source);
  }
}

void CreateMassiveEntityNotify::MergeFrom(const CreateMassiveEntityNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateMassiveEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  massive_entity_list_.MergeFrom(from.massive_entity_list_);
}

void CreateMassiveEntityNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CreateMassiveEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateMassiveEntityNotify::CopyFrom(const CreateMassiveEntityNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateMassiveEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateMassiveEntityNotify::IsInitialized() const {
  return true;
}

void CreateMassiveEntityNotify::Swap(CreateMassiveEntityNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateMassiveEntityNotify::InternalSwap(CreateMassiveEntityNotify* other) {
  using std::swap;
  massive_entity_list_.InternalSwap(&other->massive_entity_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateMassiveEntityNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateMassiveEntityNotify

// repeated .proto.ServerMassiveEntity massive_entity_list = 1;
int CreateMassiveEntityNotify::massive_entity_list_size() const {
  return massive_entity_list_.size();
}
void CreateMassiveEntityNotify::clear_massive_entity_list() {
  massive_entity_list_.Clear();
}
const ::proto::ServerMassiveEntity& CreateMassiveEntityNotify::massive_entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CreateMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Get(index);
}
::proto::ServerMassiveEntity* CreateMassiveEntityNotify::mutable_massive_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CreateMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Mutable(index);
}
::proto::ServerMassiveEntity* CreateMassiveEntityNotify::add_massive_entity_list() {
  // @@protoc_insertion_point(field_add:proto.CreateMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity >*
CreateMassiveEntityNotify::mutable_massive_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CreateMassiveEntityNotify.massive_entity_list)
  return &massive_entity_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ServerMassiveEntity >&
CreateMassiveEntityNotify::massive_entity_list() const {
  // @@protoc_insertion_point(field_list:proto.CreateMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroyMassiveEntityNotify::kMassiveEntityListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroyMassiveEntityNotify::DestroyMassiveEntityNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DestroyMassiveEntityNotify)
}
DestroyMassiveEntityNotify::DestroyMassiveEntityNotify(const DestroyMassiveEntityNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      massive_entity_list_(from.massive_entity_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.DestroyMassiveEntityNotify)
}

void DestroyMassiveEntityNotify::SharedCtor() {
  _cached_size_ = 0;
}

DestroyMassiveEntityNotify::~DestroyMassiveEntityNotify() {
  // @@protoc_insertion_point(destructor:proto.DestroyMassiveEntityNotify)
  SharedDtor();
}

void DestroyMassiveEntityNotify::SharedDtor() {
}

void DestroyMassiveEntityNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroyMassiveEntityNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DestroyMassiveEntityNotify& DestroyMassiveEntityNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

DestroyMassiveEntityNotify* DestroyMassiveEntityNotify::New(::google::protobuf::Arena* arena) const {
  DestroyMassiveEntityNotify* n = new DestroyMassiveEntityNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroyMassiveEntityNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DestroyMassiveEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  massive_entity_list_.Clear();
  _internal_metadata_.Clear();
}

bool DestroyMassiveEntityNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DestroyMassiveEntityNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_massive_entity_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DestroyMassiveEntityNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DestroyMassiveEntityNotify)
  return false;
#undef DO_
}

void DestroyMassiveEntityNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DestroyMassiveEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->massive_entity_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->massive_entity_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DestroyMassiveEntityNotify)
}

::google::protobuf::uint8* DestroyMassiveEntityNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DestroyMassiveEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->massive_entity_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->massive_entity_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DestroyMassiveEntityNotify)
  return target;
}

size_t DestroyMassiveEntityNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DestroyMassiveEntityNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ClientMassiveEntity massive_entity_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->massive_entity_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->massive_entity_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DestroyMassiveEntityNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DestroyMassiveEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DestroyMassiveEntityNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DestroyMassiveEntityNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DestroyMassiveEntityNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DestroyMassiveEntityNotify)
    MergeFrom(*source);
  }
}

void DestroyMassiveEntityNotify::MergeFrom(const DestroyMassiveEntityNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DestroyMassiveEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  massive_entity_list_.MergeFrom(from.massive_entity_list_);
}

void DestroyMassiveEntityNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DestroyMassiveEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DestroyMassiveEntityNotify::CopyFrom(const DestroyMassiveEntityNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DestroyMassiveEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DestroyMassiveEntityNotify::IsInitialized() const {
  return true;
}

void DestroyMassiveEntityNotify::Swap(DestroyMassiveEntityNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroyMassiveEntityNotify::InternalSwap(DestroyMassiveEntityNotify* other) {
  using std::swap;
  massive_entity_list_.InternalSwap(&other->massive_entity_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DestroyMassiveEntityNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroyMassiveEntityNotify

// repeated .proto.ClientMassiveEntity massive_entity_list = 1;
int DestroyMassiveEntityNotify::massive_entity_list_size() const {
  return massive_entity_list_.size();
}
void DestroyMassiveEntityNotify::clear_massive_entity_list() {
  massive_entity_list_.Clear();
}
const ::proto::ClientMassiveEntity& DestroyMassiveEntityNotify::massive_entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Get(index);
}
::proto::ClientMassiveEntity* DestroyMassiveEntityNotify::mutable_massive_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Mutable(index);
}
::proto::ClientMassiveEntity* DestroyMassiveEntityNotify::add_massive_entity_list() {
  // @@protoc_insertion_point(field_add:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >*
DestroyMassiveEntityNotify::mutable_massive_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return &massive_entity_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ClientMassiveEntity >&
DestroyMassiveEntityNotify::massive_entity_list() const {
  // @@protoc_insertion_point(field_list:proto.DestroyMassiveEntityNotify.massive_entity_list)
  return massive_entity_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MassiveEntityStateChangedNotify::kMassiveEntityStateListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MassiveEntityStateChangedNotify::MassiveEntityStateChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MassiveEntityStateChangedNotify)
}
MassiveEntityStateChangedNotify::MassiveEntityStateChangedNotify(const MassiveEntityStateChangedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      massive_entity_state_list_(from.massive_entity_state_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.MassiveEntityStateChangedNotify)
}

void MassiveEntityStateChangedNotify::SharedCtor() {
  _cached_size_ = 0;
}

MassiveEntityStateChangedNotify::~MassiveEntityStateChangedNotify() {
  // @@protoc_insertion_point(destructor:proto.MassiveEntityStateChangedNotify)
  SharedDtor();
}

void MassiveEntityStateChangedNotify::SharedDtor() {
}

void MassiveEntityStateChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MassiveEntityStateChangedNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MassiveEntityStateChangedNotify& MassiveEntityStateChangedNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

MassiveEntityStateChangedNotify* MassiveEntityStateChangedNotify::New(::google::protobuf::Arena* arena) const {
  MassiveEntityStateChangedNotify* n = new MassiveEntityStateChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MassiveEntityStateChangedNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MassiveEntityStateChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  massive_entity_state_list_.Clear();
  _internal_metadata_.Clear();
}

bool MassiveEntityStateChangedNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MassiveEntityStateChangedNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.MassiveEntityState massive_entity_state_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_massive_entity_state_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MassiveEntityStateChangedNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MassiveEntityStateChangedNotify)
  return false;
#undef DO_
}

void MassiveEntityStateChangedNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MassiveEntityStateChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MassiveEntityState massive_entity_state_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->massive_entity_state_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->massive_entity_state_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MassiveEntityStateChangedNotify)
}

::google::protobuf::uint8* MassiveEntityStateChangedNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MassiveEntityStateChangedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MassiveEntityState massive_entity_state_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->massive_entity_state_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->massive_entity_state_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MassiveEntityStateChangedNotify)
  return target;
}

size_t MassiveEntityStateChangedNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MassiveEntityStateChangedNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MassiveEntityState massive_entity_state_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->massive_entity_state_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->massive_entity_state_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MassiveEntityStateChangedNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MassiveEntityStateChangedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MassiveEntityStateChangedNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MassiveEntityStateChangedNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MassiveEntityStateChangedNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MassiveEntityStateChangedNotify)
    MergeFrom(*source);
  }
}

void MassiveEntityStateChangedNotify::MergeFrom(const MassiveEntityStateChangedNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MassiveEntityStateChangedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  massive_entity_state_list_.MergeFrom(from.massive_entity_state_list_);
}

void MassiveEntityStateChangedNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MassiveEntityStateChangedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MassiveEntityStateChangedNotify::CopyFrom(const MassiveEntityStateChangedNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MassiveEntityStateChangedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MassiveEntityStateChangedNotify::IsInitialized() const {
  return true;
}

void MassiveEntityStateChangedNotify::Swap(MassiveEntityStateChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MassiveEntityStateChangedNotify::InternalSwap(MassiveEntityStateChangedNotify* other) {
  using std::swap;
  massive_entity_state_list_.InternalSwap(&other->massive_entity_state_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MassiveEntityStateChangedNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MassiveEntityStateChangedNotify

// repeated .proto.MassiveEntityState massive_entity_state_list = 1;
int MassiveEntityStateChangedNotify::massive_entity_state_list_size() const {
  return massive_entity_state_list_.size();
}
void MassiveEntityStateChangedNotify::clear_massive_entity_state_list() {
  massive_entity_state_list_.Clear();
}
const ::proto::MassiveEntityState& MassiveEntityStateChangedNotify::massive_entity_state_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return massive_entity_state_list_.Get(index);
}
::proto::MassiveEntityState* MassiveEntityStateChangedNotify::mutable_massive_entity_state_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return massive_entity_state_list_.Mutable(index);
}
::proto::MassiveEntityState* MassiveEntityStateChangedNotify::add_massive_entity_state_list() {
  // @@protoc_insertion_point(field_add:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return massive_entity_state_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState >*
MassiveEntityStateChangedNotify::mutable_massive_entity_state_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return &massive_entity_state_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MassiveEntityState >&
MassiveEntityStateChangedNotify::massive_entity_state_list() const {
  // @@protoc_insertion_point(field_list:proto.MassiveEntityStateChangedNotify.massive_entity_state_list)
  return massive_entity_state_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamEntityInfo::kTeamEntityIdFieldNumber;
const int TeamEntityInfo::kAuthorityPeerIdFieldNumber;
const int TeamEntityInfo::kTeamAbilityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamEntityInfo::TeamEntityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TeamEntityInfo)
}
TeamEntityInfo::TeamEntityInfo(const TeamEntityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_team_ability_info()) {
    team_ability_info_ = new ::proto::AbilitySyncStateInfo(*from.team_ability_info_);
  } else {
    team_ability_info_ = NULL;
  }
  ::memcpy(&team_entity_id_, &from.team_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&authority_peer_id_) -
    reinterpret_cast<char*>(&team_entity_id_)) + sizeof(authority_peer_id_));
  // @@protoc_insertion_point(copy_constructor:proto.TeamEntityInfo)
}

void TeamEntityInfo::SharedCtor() {
  ::memset(&team_ability_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authority_peer_id_) -
      reinterpret_cast<char*>(&team_ability_info_)) + sizeof(authority_peer_id_));
  _cached_size_ = 0;
}

TeamEntityInfo::~TeamEntityInfo() {
  // @@protoc_insertion_point(destructor:proto.TeamEntityInfo)
  SharedDtor();
}

void TeamEntityInfo::SharedDtor() {
  if (this != internal_default_instance()) delete team_ability_info_;
}

void TeamEntityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamEntityInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamEntityInfo& TeamEntityInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamEntityInfo* TeamEntityInfo::New(::google::protobuf::Arena* arena) const {
  TeamEntityInfo* n = new TeamEntityInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamEntityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TeamEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && team_ability_info_ != NULL) {
    delete team_ability_info_;
  }
  team_ability_info_ = NULL;
  ::memset(&team_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authority_peer_id_) -
      reinterpret_cast<char*>(&team_entity_id_)) + sizeof(authority_peer_id_));
  _internal_metadata_.Clear();
}

bool TeamEntityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TeamEntityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 team_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 authority_peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authority_peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo team_ability_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_team_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TeamEntityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TeamEntityInfo)
  return false;
#undef DO_
}

void TeamEntityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TeamEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 team_entity_id = 1;
  if (this->team_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->team_entity_id(), output);
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->authority_peer_id(), output);
  }

  // .proto.AbilitySyncStateInfo team_ability_info = 3;
  if (this->has_team_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->team_ability_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TeamEntityInfo)
}

::google::protobuf::uint8* TeamEntityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TeamEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 team_entity_id = 1;
  if (this->team_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->team_entity_id(), target);
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->authority_peer_id(), target);
  }

  // .proto.AbilitySyncStateInfo team_ability_info = 3;
  if (this->has_team_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->team_ability_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TeamEntityInfo)
  return target;
}

size_t TeamEntityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TeamEntityInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AbilitySyncStateInfo team_ability_info = 3;
  if (this->has_team_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->team_ability_info_);
  }

  // uint32 team_entity_id = 1;
  if (this->team_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->team_entity_id());
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authority_peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamEntityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TeamEntityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamEntityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamEntityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TeamEntityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TeamEntityInfo)
    MergeFrom(*source);
  }
}

void TeamEntityInfo::MergeFrom(const TeamEntityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TeamEntityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_team_ability_info()) {
    mutable_team_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.team_ability_info());
  }
  if (from.team_entity_id() != 0) {
    set_team_entity_id(from.team_entity_id());
  }
  if (from.authority_peer_id() != 0) {
    set_authority_peer_id(from.authority_peer_id());
  }
}

void TeamEntityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TeamEntityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamEntityInfo::CopyFrom(const TeamEntityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TeamEntityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamEntityInfo::IsInitialized() const {
  return true;
}

void TeamEntityInfo::Swap(TeamEntityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamEntityInfo::InternalSwap(TeamEntityInfo* other) {
  using std::swap;
  swap(team_ability_info_, other->team_ability_info_);
  swap(team_entity_id_, other->team_entity_id_);
  swap(authority_peer_id_, other->authority_peer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamEntityInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamEntityInfo

// uint32 team_entity_id = 1;
void TeamEntityInfo::clear_team_entity_id() {
  team_entity_id_ = 0u;
}
::google::protobuf::uint32 TeamEntityInfo::team_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TeamEntityInfo.team_entity_id)
  return team_entity_id_;
}
void TeamEntityInfo::set_team_entity_id(::google::protobuf::uint32 value) {
  
  team_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TeamEntityInfo.team_entity_id)
}

// uint32 authority_peer_id = 2;
void TeamEntityInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
::google::protobuf::uint32 TeamEntityInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.TeamEntityInfo.authority_peer_id)
  return authority_peer_id_;
}
void TeamEntityInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TeamEntityInfo.authority_peer_id)
}

// .proto.AbilitySyncStateInfo team_ability_info = 3;
bool TeamEntityInfo::has_team_ability_info() const {
  return this != internal_default_instance() && team_ability_info_ != NULL;
}
void TeamEntityInfo::clear_team_ability_info() {
  if (GetArenaNoVirtual() == NULL && team_ability_info_ != NULL) delete team_ability_info_;
  team_ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& TeamEntityInfo::team_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = team_ability_info_;
  // @@protoc_insertion_point(field_get:proto.TeamEntityInfo.team_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* TeamEntityInfo::mutable_team_ability_info() {
  
  if (team_ability_info_ == NULL) {
    team_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.TeamEntityInfo.team_ability_info)
  return team_ability_info_;
}
::proto::AbilitySyncStateInfo* TeamEntityInfo::release_team_ability_info() {
  // @@protoc_insertion_point(field_release:proto.TeamEntityInfo.team_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = team_ability_info_;
  team_ability_info_ = NULL;
  return temp;
}
void TeamEntityInfo::set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info) {
  delete team_ability_info_;
  team_ability_info_ = team_ability_info;
  if (team_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TeamEntityInfo.team_ability_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncTeamEntityNotify::kSceneIdFieldNumber;
const int SyncTeamEntityNotify::kTeamEntityInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncTeamEntityNotify::SyncTeamEntityNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SyncTeamEntityNotify)
}
SyncTeamEntityNotify::SyncTeamEntityNotify(const SyncTeamEntityNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      team_entity_info_list_(from.team_entity_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SyncTeamEntityNotify)
}

void SyncTeamEntityNotify::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

SyncTeamEntityNotify::~SyncTeamEntityNotify() {
  // @@protoc_insertion_point(destructor:proto.SyncTeamEntityNotify)
  SharedDtor();
}

void SyncTeamEntityNotify::SharedDtor() {
}

void SyncTeamEntityNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncTeamEntityNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncTeamEntityNotify& SyncTeamEntityNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncTeamEntityNotify* SyncTeamEntityNotify::New(::google::protobuf::Arena* arena) const {
  SyncTeamEntityNotify* n = new SyncTeamEntityNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncTeamEntityNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SyncTeamEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  team_entity_info_list_.Clear();
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SyncTeamEntityNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SyncTeamEntityNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.TeamEntityInfo team_entity_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_team_entity_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SyncTeamEntityNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SyncTeamEntityNotify)
  return false;
#undef DO_
}

void SyncTeamEntityNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SyncTeamEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // repeated .proto.TeamEntityInfo team_entity_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->team_entity_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->team_entity_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SyncTeamEntityNotify)
}

::google::protobuf::uint8* SyncTeamEntityNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SyncTeamEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // repeated .proto.TeamEntityInfo team_entity_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->team_entity_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->team_entity_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SyncTeamEntityNotify)
  return target;
}

size_t SyncTeamEntityNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SyncTeamEntityNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.TeamEntityInfo team_entity_info_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->team_entity_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->team_entity_info_list(static_cast<int>(i)));
    }
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncTeamEntityNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SyncTeamEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncTeamEntityNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncTeamEntityNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SyncTeamEntityNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SyncTeamEntityNotify)
    MergeFrom(*source);
  }
}

void SyncTeamEntityNotify::MergeFrom(const SyncTeamEntityNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SyncTeamEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  team_entity_info_list_.MergeFrom(from.team_entity_info_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void SyncTeamEntityNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SyncTeamEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncTeamEntityNotify::CopyFrom(const SyncTeamEntityNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SyncTeamEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncTeamEntityNotify::IsInitialized() const {
  return true;
}

void SyncTeamEntityNotify::Swap(SyncTeamEntityNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncTeamEntityNotify::InternalSwap(SyncTeamEntityNotify* other) {
  using std::swap;
  team_entity_info_list_.InternalSwap(&other->team_entity_info_list_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncTeamEntityNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncTeamEntityNotify

// uint32 scene_id = 1;
void SyncTeamEntityNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SyncTeamEntityNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SyncTeamEntityNotify.scene_id)
  return scene_id_;
}
void SyncTeamEntityNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SyncTeamEntityNotify.scene_id)
}

// repeated .proto.TeamEntityInfo team_entity_info_list = 2;
int SyncTeamEntityNotify::team_entity_info_list_size() const {
  return team_entity_info_list_.size();
}
void SyncTeamEntityNotify::clear_team_entity_info_list() {
  team_entity_info_list_.Clear();
}
const ::proto::TeamEntityInfo& SyncTeamEntityNotify::team_entity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SyncTeamEntityNotify.team_entity_info_list)
  return team_entity_info_list_.Get(index);
}
::proto::TeamEntityInfo* SyncTeamEntityNotify::mutable_team_entity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SyncTeamEntityNotify.team_entity_info_list)
  return team_entity_info_list_.Mutable(index);
}
::proto::TeamEntityInfo* SyncTeamEntityNotify::add_team_entity_info_list() {
  // @@protoc_insertion_point(field_add:proto.SyncTeamEntityNotify.team_entity_info_list)
  return team_entity_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo >*
SyncTeamEntityNotify::mutable_team_entity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SyncTeamEntityNotify.team_entity_info_list)
  return &team_entity_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::TeamEntityInfo >&
SyncTeamEntityNotify::team_entity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SyncTeamEntityNotify.team_entity_info_list)
  return team_entity_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelTeamEntityNotify::kSceneIdFieldNumber;
const int DelTeamEntityNotify::kDelEntityIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelTeamEntityNotify::DelTeamEntityNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelTeamEntityNotify)
}
DelTeamEntityNotify::DelTeamEntityNotify(const DelTeamEntityNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      del_entity_id_list_(from.del_entity_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.DelTeamEntityNotify)
}

void DelTeamEntityNotify::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

DelTeamEntityNotify::~DelTeamEntityNotify() {
  // @@protoc_insertion_point(destructor:proto.DelTeamEntityNotify)
  SharedDtor();
}

void DelTeamEntityNotify::SharedDtor() {
}

void DelTeamEntityNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelTeamEntityNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelTeamEntityNotify& DelTeamEntityNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelTeamEntityNotify* DelTeamEntityNotify::New(::google::protobuf::Arena* arena) const {
  DelTeamEntityNotify* n = new DelTeamEntityNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelTeamEntityNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelTeamEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  del_entity_id_list_.Clear();
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool DelTeamEntityNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelTeamEntityNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 del_entity_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_del_entity_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_del_entity_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelTeamEntityNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelTeamEntityNotify)
  return false;
#undef DO_
}

void DelTeamEntityNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelTeamEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // repeated uint32 del_entity_id_list = 2;
  if (this->del_entity_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _del_entity_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->del_entity_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->del_entity_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelTeamEntityNotify)
}

::google::protobuf::uint8* DelTeamEntityNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelTeamEntityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // repeated uint32 del_entity_id_list = 2;
  if (this->del_entity_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _del_entity_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->del_entity_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelTeamEntityNotify)
  return target;
}

size_t DelTeamEntityNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelTeamEntityNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 del_entity_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->del_entity_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _del_entity_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelTeamEntityNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelTeamEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DelTeamEntityNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelTeamEntityNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelTeamEntityNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelTeamEntityNotify)
    MergeFrom(*source);
  }
}

void DelTeamEntityNotify::MergeFrom(const DelTeamEntityNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelTeamEntityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  del_entity_id_list_.MergeFrom(from.del_entity_id_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void DelTeamEntityNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelTeamEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelTeamEntityNotify::CopyFrom(const DelTeamEntityNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelTeamEntityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelTeamEntityNotify::IsInitialized() const {
  return true;
}

void DelTeamEntityNotify::Swap(DelTeamEntityNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelTeamEntityNotify::InternalSwap(DelTeamEntityNotify* other) {
  using std::swap;
  del_entity_id_list_.InternalSwap(&other->del_entity_id_list_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelTeamEntityNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelTeamEntityNotify

// uint32 scene_id = 1;
void DelTeamEntityNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 DelTeamEntityNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DelTeamEntityNotify.scene_id)
  return scene_id_;
}
void DelTeamEntityNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelTeamEntityNotify.scene_id)
}

// repeated uint32 del_entity_id_list = 2;
int DelTeamEntityNotify::del_entity_id_list_size() const {
  return del_entity_id_list_.size();
}
void DelTeamEntityNotify::clear_del_entity_id_list() {
  del_entity_id_list_.Clear();
}
::google::protobuf::uint32 DelTeamEntityNotify::del_entity_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelTeamEntityNotify.del_entity_id_list)
  return del_entity_id_list_.Get(index);
}
void DelTeamEntityNotify::set_del_entity_id_list(int index, ::google::protobuf::uint32 value) {
  del_entity_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelTeamEntityNotify.del_entity_id_list)
}
void DelTeamEntityNotify::add_del_entity_id_list(::google::protobuf::uint32 value) {
  del_entity_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelTeamEntityNotify.del_entity_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelTeamEntityNotify::del_entity_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelTeamEntityNotify.del_entity_id_list)
  return del_entity_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelTeamEntityNotify::mutable_del_entity_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelTeamEntityNotify.del_entity_id_list)
  return &del_entity_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CombatInvokeEntry::kArgumentTypeFieldNumber;
const int CombatInvokeEntry::kForwardTypeFieldNumber;
const int CombatInvokeEntry::kCombatDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CombatInvokeEntry::CombatInvokeEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CombatInvokeEntry)
}
CombatInvokeEntry::CombatInvokeEntry(const CombatInvokeEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  combat_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.combat_data().size() > 0) {
    combat_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.combat_data_);
  }
  ::memcpy(&argument_type_, &from.argument_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&forward_type_) -
    reinterpret_cast<char*>(&argument_type_)) + sizeof(forward_type_));
  // @@protoc_insertion_point(copy_constructor:proto.CombatInvokeEntry)
}

void CombatInvokeEntry::SharedCtor() {
  combat_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&argument_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_type_) -
      reinterpret_cast<char*>(&argument_type_)) + sizeof(forward_type_));
  _cached_size_ = 0;
}

CombatInvokeEntry::~CombatInvokeEntry() {
  // @@protoc_insertion_point(destructor:proto.CombatInvokeEntry)
  SharedDtor();
}

void CombatInvokeEntry::SharedDtor() {
  combat_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CombatInvokeEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CombatInvokeEntry::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CombatInvokeEntry& CombatInvokeEntry::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

CombatInvokeEntry* CombatInvokeEntry::New(::google::protobuf::Arena* arena) const {
  CombatInvokeEntry* n = new CombatInvokeEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CombatInvokeEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CombatInvokeEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  combat_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&argument_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forward_type_) -
      reinterpret_cast<char*>(&argument_type_)) + sizeof(forward_type_));
  _internal_metadata_.Clear();
}

bool CombatInvokeEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CombatInvokeEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.CombatTypeArgument argument_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_argument_type(static_cast< ::proto::CombatTypeArgument >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ForwardType forward_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forward_type(static_cast< ::proto::ForwardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes combat_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_combat_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CombatInvokeEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CombatInvokeEntry)
  return false;
#undef DO_
}

void CombatInvokeEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CombatInvokeEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CombatTypeArgument argument_type = 1;
  if (this->argument_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->argument_type(), output);
  }

  // .proto.ForwardType forward_type = 2;
  if (this->forward_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->forward_type(), output);
  }

  // bytes combat_data = 3;
  if (this->combat_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->combat_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CombatInvokeEntry)
}

::google::protobuf::uint8* CombatInvokeEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CombatInvokeEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CombatTypeArgument argument_type = 1;
  if (this->argument_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->argument_type(), target);
  }

  // .proto.ForwardType forward_type = 2;
  if (this->forward_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->forward_type(), target);
  }

  // bytes combat_data = 3;
  if (this->combat_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->combat_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CombatInvokeEntry)
  return target;
}

size_t CombatInvokeEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CombatInvokeEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes combat_data = 3;
  if (this->combat_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->combat_data());
  }

  // .proto.CombatTypeArgument argument_type = 1;
  if (this->argument_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->argument_type());
  }

  // .proto.ForwardType forward_type = 2;
  if (this->forward_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forward_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CombatInvokeEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CombatInvokeEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CombatInvokeEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CombatInvokeEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CombatInvokeEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CombatInvokeEntry)
    MergeFrom(*source);
  }
}

void CombatInvokeEntry::MergeFrom(const CombatInvokeEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CombatInvokeEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.combat_data().size() > 0) {

    combat_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.combat_data_);
  }
  if (from.argument_type() != 0) {
    set_argument_type(from.argument_type());
  }
  if (from.forward_type() != 0) {
    set_forward_type(from.forward_type());
  }
}

void CombatInvokeEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CombatInvokeEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CombatInvokeEntry::CopyFrom(const CombatInvokeEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CombatInvokeEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CombatInvokeEntry::IsInitialized() const {
  return true;
}

void CombatInvokeEntry::Swap(CombatInvokeEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CombatInvokeEntry::InternalSwap(CombatInvokeEntry* other) {
  using std::swap;
  combat_data_.Swap(&other->combat_data_);
  swap(argument_type_, other->argument_type_);
  swap(forward_type_, other->forward_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CombatInvokeEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CombatInvokeEntry

// .proto.CombatTypeArgument argument_type = 1;
void CombatInvokeEntry::clear_argument_type() {
  argument_type_ = 0;
}
::proto::CombatTypeArgument CombatInvokeEntry::argument_type() const {
  // @@protoc_insertion_point(field_get:proto.CombatInvokeEntry.argument_type)
  return static_cast< ::proto::CombatTypeArgument >(argument_type_);
}
void CombatInvokeEntry::set_argument_type(::proto::CombatTypeArgument value) {
  
  argument_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatInvokeEntry.argument_type)
}

// .proto.ForwardType forward_type = 2;
void CombatInvokeEntry::clear_forward_type() {
  forward_type_ = 0;
}
::proto::ForwardType CombatInvokeEntry::forward_type() const {
  // @@protoc_insertion_point(field_get:proto.CombatInvokeEntry.forward_type)
  return static_cast< ::proto::ForwardType >(forward_type_);
}
void CombatInvokeEntry::set_forward_type(::proto::ForwardType value) {
  
  forward_type_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatInvokeEntry.forward_type)
}

// bytes combat_data = 3;
void CombatInvokeEntry::clear_combat_data() {
  combat_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CombatInvokeEntry::combat_data() const {
  // @@protoc_insertion_point(field_get:proto.CombatInvokeEntry.combat_data)
  return combat_data_.GetNoArena();
}
void CombatInvokeEntry::set_combat_data(const ::std::string& value) {
  
  combat_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CombatInvokeEntry.combat_data)
}
#if LANG_CXX11
void CombatInvokeEntry::set_combat_data(::std::string&& value) {
  
  combat_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CombatInvokeEntry.combat_data)
}
#endif
void CombatInvokeEntry::set_combat_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  combat_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CombatInvokeEntry.combat_data)
}
void CombatInvokeEntry::set_combat_data(const void* value, size_t size) {
  
  combat_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CombatInvokeEntry.combat_data)
}
::std::string* CombatInvokeEntry::mutable_combat_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.CombatInvokeEntry.combat_data)
  return combat_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CombatInvokeEntry::release_combat_data() {
  // @@protoc_insertion_point(field_release:proto.CombatInvokeEntry.combat_data)
  
  return combat_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CombatInvokeEntry::set_allocated_combat_data(::std::string* combat_data) {
  if (combat_data != NULL) {
    
  } else {
    
  }
  combat_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), combat_data);
  // @@protoc_insertion_point(field_set_allocated:proto.CombatInvokeEntry.combat_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CombatInvocationsNotify::kInvokeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CombatInvocationsNotify::CombatInvocationsNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CombatInvocationsNotify)
}
CombatInvocationsNotify::CombatInvocationsNotify(const CombatInvocationsNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      invoke_list_(from.invoke_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CombatInvocationsNotify)
}

void CombatInvocationsNotify::SharedCtor() {
  _cached_size_ = 0;
}

CombatInvocationsNotify::~CombatInvocationsNotify() {
  // @@protoc_insertion_point(destructor:proto.CombatInvocationsNotify)
  SharedDtor();
}

void CombatInvocationsNotify::SharedDtor() {
}

void CombatInvocationsNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CombatInvocationsNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CombatInvocationsNotify& CombatInvocationsNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

CombatInvocationsNotify* CombatInvocationsNotify::New(::google::protobuf::Arena* arena) const {
  CombatInvocationsNotify* n = new CombatInvocationsNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CombatInvocationsNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CombatInvocationsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  invoke_list_.Clear();
  _internal_metadata_.Clear();
}

bool CombatInvocationsNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CombatInvocationsNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.CombatInvokeEntry invoke_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_invoke_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CombatInvocationsNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CombatInvocationsNotify)
  return false;
#undef DO_
}

void CombatInvocationsNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CombatInvocationsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.CombatInvokeEntry invoke_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invoke_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->invoke_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CombatInvocationsNotify)
}

::google::protobuf::uint8* CombatInvocationsNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CombatInvocationsNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.CombatInvokeEntry invoke_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->invoke_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->invoke_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CombatInvocationsNotify)
  return target;
}

size_t CombatInvocationsNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CombatInvocationsNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.CombatInvokeEntry invoke_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->invoke_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->invoke_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CombatInvocationsNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CombatInvocationsNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CombatInvocationsNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CombatInvocationsNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CombatInvocationsNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CombatInvocationsNotify)
    MergeFrom(*source);
  }
}

void CombatInvocationsNotify::MergeFrom(const CombatInvocationsNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CombatInvocationsNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  invoke_list_.MergeFrom(from.invoke_list_);
}

void CombatInvocationsNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CombatInvocationsNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CombatInvocationsNotify::CopyFrom(const CombatInvocationsNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CombatInvocationsNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CombatInvocationsNotify::IsInitialized() const {
  return true;
}

void CombatInvocationsNotify::Swap(CombatInvocationsNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CombatInvocationsNotify::InternalSwap(CombatInvocationsNotify* other) {
  using std::swap;
  invoke_list_.InternalSwap(&other->invoke_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CombatInvocationsNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CombatInvocationsNotify

// repeated .proto.CombatInvokeEntry invoke_list = 1;
int CombatInvocationsNotify::invoke_list_size() const {
  return invoke_list_.size();
}
void CombatInvocationsNotify::clear_invoke_list() {
  invoke_list_.Clear();
}
const ::proto::CombatInvokeEntry& CombatInvocationsNotify::invoke_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CombatInvocationsNotify.invoke_list)
  return invoke_list_.Get(index);
}
::proto::CombatInvokeEntry* CombatInvocationsNotify::mutable_invoke_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CombatInvocationsNotify.invoke_list)
  return invoke_list_.Mutable(index);
}
::proto::CombatInvokeEntry* CombatInvocationsNotify::add_invoke_list() {
  // @@protoc_insertion_point(field_add:proto.CombatInvocationsNotify.invoke_list)
  return invoke_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry >*
CombatInvocationsNotify::mutable_invoke_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CombatInvocationsNotify.invoke_list)
  return &invoke_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CombatInvokeEntry >&
CombatInvocationsNotify::invoke_list() const {
  // @@protoc_insertion_point(field_list:proto.CombatInvocationsNotify.invoke_list)
  return invoke_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerBuffChangeNotify::kServerBuffChangeTypeFieldNumber;
const int ServerBuffChangeNotify::kAvatarGuidListFieldNumber;
const int ServerBuffChangeNotify::kServerBuffListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerBuffChangeNotify::ServerBuffChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerBuffChangeNotify)
}
ServerBuffChangeNotify::ServerBuffChangeNotify(const ServerBuffChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_guid_list_(from.avatar_guid_list_),
      server_buff_list_(from.server_buff_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_buff_change_type_ = from.server_buff_change_type_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerBuffChangeNotify)
}

void ServerBuffChangeNotify::SharedCtor() {
  server_buff_change_type_ = 0;
  _cached_size_ = 0;
}

ServerBuffChangeNotify::~ServerBuffChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerBuffChangeNotify)
  SharedDtor();
}

void ServerBuffChangeNotify::SharedDtor() {
}

void ServerBuffChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerBuffChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerBuffChangeNotify& ServerBuffChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerBuffChangeNotify* ServerBuffChangeNotify::New(::google::protobuf::Arena* arena) const {
  ServerBuffChangeNotify* n = new ServerBuffChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerBuffChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerBuffChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_guid_list_.Clear();
  server_buff_list_.Clear();
  server_buff_change_type_ = 0;
  _internal_metadata_.Clear();
}

bool ServerBuffChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerBuffChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ServerBuffChangeNotify.ServerBuffChangeType server_buff_change_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_server_buff_change_type(static_cast< ::proto::ServerBuffChangeNotify_ServerBuffChangeType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 avatar_guid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_avatar_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_avatar_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ServerBuff server_buff_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_buff_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerBuffChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerBuffChangeNotify)
  return false;
#undef DO_
}

void ServerBuffChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerBuffChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ServerBuffChangeNotify.ServerBuffChangeType server_buff_change_type = 1;
  if (this->server_buff_change_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->server_buff_change_type(), output);
  }

  // repeated uint64 avatar_guid_list = 2;
  if (this->avatar_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _avatar_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->avatar_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->avatar_guid_list(i), output);
  }

  // repeated .proto.ServerBuff server_buff_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_buff_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->server_buff_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerBuffChangeNotify)
}

::google::protobuf::uint8* ServerBuffChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerBuffChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ServerBuffChangeNotify.ServerBuffChangeType server_buff_change_type = 1;
  if (this->server_buff_change_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->server_buff_change_type(), target);
  }

  // repeated uint64 avatar_guid_list = 2;
  if (this->avatar_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _avatar_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->avatar_guid_list_, target);
  }

  // repeated .proto.ServerBuff server_buff_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_buff_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->server_buff_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerBuffChangeNotify)
  return target;
}

size_t ServerBuffChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerBuffChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 avatar_guid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->avatar_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _avatar_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.ServerBuff server_buff_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->server_buff_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_buff_list(static_cast<int>(i)));
    }
  }

  // .proto.ServerBuffChangeNotify.ServerBuffChangeType server_buff_change_type = 1;
  if (this->server_buff_change_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->server_buff_change_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerBuffChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerBuffChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerBuffChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerBuffChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerBuffChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerBuffChangeNotify)
    MergeFrom(*source);
  }
}

void ServerBuffChangeNotify::MergeFrom(const ServerBuffChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerBuffChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_guid_list_.MergeFrom(from.avatar_guid_list_);
  server_buff_list_.MergeFrom(from.server_buff_list_);
  if (from.server_buff_change_type() != 0) {
    set_server_buff_change_type(from.server_buff_change_type());
  }
}

void ServerBuffChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerBuffChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerBuffChangeNotify::CopyFrom(const ServerBuffChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerBuffChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerBuffChangeNotify::IsInitialized() const {
  return true;
}

void ServerBuffChangeNotify::Swap(ServerBuffChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerBuffChangeNotify::InternalSwap(ServerBuffChangeNotify* other) {
  using std::swap;
  avatar_guid_list_.InternalSwap(&other->avatar_guid_list_);
  server_buff_list_.InternalSwap(&other->server_buff_list_);
  swap(server_buff_change_type_, other->server_buff_change_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerBuffChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerBuffChangeNotify

// .proto.ServerBuffChangeNotify.ServerBuffChangeType server_buff_change_type = 1;
void ServerBuffChangeNotify::clear_server_buff_change_type() {
  server_buff_change_type_ = 0;
}
::proto::ServerBuffChangeNotify_ServerBuffChangeType ServerBuffChangeNotify::server_buff_change_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerBuffChangeNotify.server_buff_change_type)
  return static_cast< ::proto::ServerBuffChangeNotify_ServerBuffChangeType >(server_buff_change_type_);
}
void ServerBuffChangeNotify::set_server_buff_change_type(::proto::ServerBuffChangeNotify_ServerBuffChangeType value) {
  
  server_buff_change_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBuffChangeNotify.server_buff_change_type)
}

// repeated uint64 avatar_guid_list = 2;
int ServerBuffChangeNotify::avatar_guid_list_size() const {
  return avatar_guid_list_.size();
}
void ServerBuffChangeNotify::clear_avatar_guid_list() {
  avatar_guid_list_.Clear();
}
::google::protobuf::uint64 ServerBuffChangeNotify::avatar_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerBuffChangeNotify.avatar_guid_list)
  return avatar_guid_list_.Get(index);
}
void ServerBuffChangeNotify::set_avatar_guid_list(int index, ::google::protobuf::uint64 value) {
  avatar_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerBuffChangeNotify.avatar_guid_list)
}
void ServerBuffChangeNotify::add_avatar_guid_list(::google::protobuf::uint64 value) {
  avatar_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerBuffChangeNotify.avatar_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerBuffChangeNotify::avatar_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerBuffChangeNotify.avatar_guid_list)
  return avatar_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerBuffChangeNotify::mutable_avatar_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerBuffChangeNotify.avatar_guid_list)
  return &avatar_guid_list_;
}

// repeated .proto.ServerBuff server_buff_list = 3;
int ServerBuffChangeNotify::server_buff_list_size() const {
  return server_buff_list_.size();
}
void ServerBuffChangeNotify::clear_server_buff_list() {
  server_buff_list_.Clear();
}
const ::proto::ServerBuff& ServerBuffChangeNotify::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerBuffChangeNotify.server_buff_list)
  return server_buff_list_.Get(index);
}
::proto::ServerBuff* ServerBuffChangeNotify::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerBuffChangeNotify.server_buff_list)
  return server_buff_list_.Mutable(index);
}
::proto::ServerBuff* ServerBuffChangeNotify::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.ServerBuffChangeNotify.server_buff_list)
  return server_buff_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
ServerBuffChangeNotify::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerBuffChangeNotify.server_buff_list)
  return &server_buff_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
ServerBuffChangeNotify::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerBuffChangeNotify.server_buff_list)
  return server_buff_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

AiThreatInfo::AiThreatInfo_AiThreatMapEntry::AiThreatInfo_AiThreatMapEntry() {}
AiThreatInfo::AiThreatInfo_AiThreatMapEntry::AiThreatInfo_AiThreatMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AiThreatInfo::AiThreatInfo_AiThreatMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[57];
}
void AiThreatInfo::AiThreatInfo_AiThreatMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AiThreatInfo::AiThreatInfo_AiThreatMapEntry::MergeFrom(const AiThreatInfo_AiThreatMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AiThreatInfo::kAiThreatMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AiThreatInfo::AiThreatInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AiThreatInfo)
}
AiThreatInfo::AiThreatInfo(const AiThreatInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ai_threat_map_.MergeFrom(from.ai_threat_map_);
  // @@protoc_insertion_point(copy_constructor:proto.AiThreatInfo)
}

void AiThreatInfo::SharedCtor() {
  _cached_size_ = 0;
}

AiThreatInfo::~AiThreatInfo() {
  // @@protoc_insertion_point(destructor:proto.AiThreatInfo)
  SharedDtor();
}

void AiThreatInfo::SharedDtor() {
}

void AiThreatInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AiThreatInfo::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AiThreatInfo& AiThreatInfo::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

AiThreatInfo* AiThreatInfo::New(::google::protobuf::Arena* arena) const {
  AiThreatInfo* n = new AiThreatInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AiThreatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AiThreatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ai_threat_map_.Clear();
  _internal_metadata_.Clear();
}

bool AiThreatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AiThreatInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, uint32> ai_threat_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          AiThreatInfo_AiThreatMapEntry::Parser< ::google::protobuf::internal::MapField<
              AiThreatInfo_AiThreatMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&ai_threat_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AiThreatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AiThreatInfo)
  return false;
#undef DO_
}

void AiThreatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AiThreatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> ai_threat_map = 1;
  if (!this->ai_threat_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->ai_threat_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ai_threat_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->ai_threat_map().begin();
          it != this->ai_threat_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AiThreatInfo_AiThreatMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ai_threat_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<AiThreatInfo_AiThreatMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->ai_threat_map().begin();
          it != this->ai_threat_map().end(); ++it) {
        entry.reset(ai_threat_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AiThreatInfo)
}

::google::protobuf::uint8* AiThreatInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AiThreatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, uint32> ai_threat_map = 1;
  if (!this->ai_threat_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->ai_threat_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ai_threat_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->ai_threat_map().begin();
          it != this->ai_threat_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<AiThreatInfo_AiThreatMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ai_threat_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<AiThreatInfo_AiThreatMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->ai_threat_map().begin();
          it != this->ai_threat_map().end(); ++it) {
        entry.reset(ai_threat_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AiThreatInfo)
  return target;
}

size_t AiThreatInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AiThreatInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> ai_threat_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ai_threat_map_size());
  {
    ::google::protobuf::scoped_ptr<AiThreatInfo_AiThreatMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->ai_threat_map().begin();
        it != this->ai_threat_map().end(); ++it) {
      entry.reset(ai_threat_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AiThreatInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AiThreatInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AiThreatInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AiThreatInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AiThreatInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AiThreatInfo)
    MergeFrom(*source);
  }
}

void AiThreatInfo::MergeFrom(const AiThreatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AiThreatInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ai_threat_map_.MergeFrom(from.ai_threat_map_);
}

void AiThreatInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AiThreatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AiThreatInfo::CopyFrom(const AiThreatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AiThreatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AiThreatInfo::IsInitialized() const {
  return true;
}

void AiThreatInfo::Swap(AiThreatInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AiThreatInfo::InternalSwap(AiThreatInfo* other) {
  using std::swap;
  ai_threat_map_.Swap(&other->ai_threat_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AiThreatInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AiThreatInfo

// map<uint32, uint32> ai_threat_map = 1;
int AiThreatInfo::ai_threat_map_size() const {
  return ai_threat_map_.size();
}
void AiThreatInfo::clear_ai_threat_map() {
  ai_threat_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
AiThreatInfo::ai_threat_map() const {
  // @@protoc_insertion_point(field_map:proto.AiThreatInfo.ai_threat_map)
  return ai_threat_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
AiThreatInfo::mutable_ai_threat_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.AiThreatInfo.ai_threat_map)
  return ai_threat_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry() {}
EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[59];
}
void EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry::MergeFrom(const EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EvtAiSyncCombatThreatInfoNotify::kCombatThreatInfoMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EvtAiSyncCombatThreatInfoNotify)
}
EvtAiSyncCombatThreatInfoNotify::EvtAiSyncCombatThreatInfoNotify(const EvtAiSyncCombatThreatInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  combat_threat_info_map_.MergeFrom(from.combat_threat_info_map_);
  // @@protoc_insertion_point(copy_constructor:proto.EvtAiSyncCombatThreatInfoNotify)
}

void EvtAiSyncCombatThreatInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

EvtAiSyncCombatThreatInfoNotify::~EvtAiSyncCombatThreatInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.EvtAiSyncCombatThreatInfoNotify)
  SharedDtor();
}

void EvtAiSyncCombatThreatInfoNotify::SharedDtor() {
}

void EvtAiSyncCombatThreatInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EvtAiSyncCombatThreatInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EvtAiSyncCombatThreatInfoNotify& EvtAiSyncCombatThreatInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5ffight_2eproto::InitDefaults();
  return *internal_default_instance();
}

EvtAiSyncCombatThreatInfoNotify* EvtAiSyncCombatThreatInfoNotify::New(::google::protobuf::Arena* arena) const {
  EvtAiSyncCombatThreatInfoNotify* n = new EvtAiSyncCombatThreatInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EvtAiSyncCombatThreatInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EvtAiSyncCombatThreatInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  combat_threat_info_map_.Clear();
  _internal_metadata_.Clear();
}

bool EvtAiSyncCombatThreatInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EvtAiSyncCombatThreatInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.AiThreatInfo> combat_threat_info_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry,
              ::google::protobuf::uint32, ::proto::AiThreatInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo > > parser(&combat_threat_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EvtAiSyncCombatThreatInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EvtAiSyncCombatThreatInfoNotify)
  return false;
#undef DO_
}

void EvtAiSyncCombatThreatInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EvtAiSyncCombatThreatInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.AiThreatInfo> combat_threat_info_map = 1;
  if (!this->combat_threat_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->combat_threat_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->combat_threat_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::const_iterator
          it = this->combat_threat_info_map().begin();
          it != this->combat_threat_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(combat_threat_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::const_iterator
          it = this->combat_threat_info_map().begin();
          it != this->combat_threat_info_map().end(); ++it) {
        entry.reset(combat_threat_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EvtAiSyncCombatThreatInfoNotify)
}

::google::protobuf::uint8* EvtAiSyncCombatThreatInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EvtAiSyncCombatThreatInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.AiThreatInfo> combat_threat_info_map = 1;
  if (!this->combat_threat_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->combat_threat_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->combat_threat_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::const_iterator
          it = this->combat_threat_info_map().begin();
          it != this->combat_threat_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(combat_threat_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::const_iterator
          it = this->combat_threat_info_map().begin();
          it != this->combat_threat_info_map().end(); ++it) {
        entry.reset(combat_threat_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EvtAiSyncCombatThreatInfoNotify)
  return target;
}

size_t EvtAiSyncCombatThreatInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EvtAiSyncCombatThreatInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.AiThreatInfo> combat_threat_info_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->combat_threat_info_map_size());
  {
    ::google::protobuf::scoped_ptr<EvtAiSyncCombatThreatInfoNotify_CombatThreatInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >::const_iterator
        it = this->combat_threat_info_map().begin();
        it != this->combat_threat_info_map().end(); ++it) {
      entry.reset(combat_threat_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EvtAiSyncCombatThreatInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EvtAiSyncCombatThreatInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EvtAiSyncCombatThreatInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EvtAiSyncCombatThreatInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EvtAiSyncCombatThreatInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EvtAiSyncCombatThreatInfoNotify)
    MergeFrom(*source);
  }
}

void EvtAiSyncCombatThreatInfoNotify::MergeFrom(const EvtAiSyncCombatThreatInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EvtAiSyncCombatThreatInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  combat_threat_info_map_.MergeFrom(from.combat_threat_info_map_);
}

void EvtAiSyncCombatThreatInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EvtAiSyncCombatThreatInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EvtAiSyncCombatThreatInfoNotify::CopyFrom(const EvtAiSyncCombatThreatInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EvtAiSyncCombatThreatInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EvtAiSyncCombatThreatInfoNotify::IsInitialized() const {
  return true;
}

void EvtAiSyncCombatThreatInfoNotify::Swap(EvtAiSyncCombatThreatInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EvtAiSyncCombatThreatInfoNotify::InternalSwap(EvtAiSyncCombatThreatInfoNotify* other) {
  using std::swap;
  combat_threat_info_map_.Swap(&other->combat_threat_info_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EvtAiSyncCombatThreatInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5ffight_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5ffight_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EvtAiSyncCombatThreatInfoNotify

// map<uint32, .proto.AiThreatInfo> combat_threat_info_map = 1;
int EvtAiSyncCombatThreatInfoNotify::combat_threat_info_map_size() const {
  return combat_threat_info_map_.size();
}
void EvtAiSyncCombatThreatInfoNotify::clear_combat_threat_info_map() {
  combat_threat_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >&
EvtAiSyncCombatThreatInfoNotify::combat_threat_info_map() const {
  // @@protoc_insertion_point(field_map:proto.EvtAiSyncCombatThreatInfoNotify.combat_threat_info_map)
  return combat_threat_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AiThreatInfo >*
EvtAiSyncCombatThreatInfoNotify::mutable_combat_threat_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.EvtAiSyncCombatThreatInfoNotify.combat_threat_info_map)
  return combat_threat_info_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
