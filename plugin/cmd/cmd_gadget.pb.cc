// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_gadget.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_gadget.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class GadgetInteractReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetInteractReq>
     _instance;
} _GadgetInteractReq_default_instance_;
class GadgetInteractRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetInteractRsp>
     _instance;
} _GadgetInteractRsp_default_instance_;
class GadgetStateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetStateNotify>
     _instance;
} _GadgetStateNotify_default_instance_;
class WorktopOptionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorktopOptionNotify>
     _instance;
} _WorktopOptionNotify_default_instance_;
class SelectWorktopOptionReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectWorktopOptionReq>
     _instance;
} _SelectWorktopOptionReq_default_instance_;
class SelectWorktopOptionRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SelectWorktopOptionRsp>
     _instance;
} _SelectWorktopOptionRsp_default_instance_;
class BossChestActivateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BossChestActivateNotify>
     _instance;
} _BossChestActivateNotify_default_instance_;
class BlossomChestInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlossomChestInfoNotify>
     _instance;
} _BlossomChestInfoNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fgadget_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[10];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractReq, gadget_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, interact_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetInteractRsp, gadget_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetStateNotify, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetStateNotify, gadget_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetStateNotify, is_enable_interact_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopOptionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopOptionNotify, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorktopOptionNotify, option_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionReq, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionReq, option_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionRsp, gadget_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectWorktopOptionRsp, option_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestActivateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestActivateNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestActivateNotify, qualify_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfoNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestInfoNotify, blossom_chest_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(GadgetInteractReq)},
  { 8, -1, sizeof(GadgetInteractRsp)},
  { 18, -1, sizeof(GadgetStateNotify)},
  { 26, -1, sizeof(WorktopOptionNotify)},
  { 33, -1, sizeof(SelectWorktopOptionReq)},
  { 40, -1, sizeof(SelectWorktopOptionRsp)},
  { 48, -1, sizeof(BossChestActivateNotify)},
  { 55, -1, sizeof(BlossomChestInfoNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetInteractReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetInteractRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorktopOptionNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectWorktopOptionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectWorktopOptionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BossChestActivateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlossomChestInfoNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_gadget.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _GadgetInteractReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetInteractReq_default_instance_);_GadgetInteractRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetInteractRsp_default_instance_);_GadgetStateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetStateNotify_default_instance_);_WorktopOptionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorktopOptionNotify_default_instance_);_SelectWorktopOptionReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectWorktopOptionReq_default_instance_);_SelectWorktopOptionRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SelectWorktopOptionRsp_default_instance_);_BossChestActivateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BossChestActivateNotify_default_instance_);_BlossomChestInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlossomChestInfoNotify_default_instance_);_BlossomChestInfoNotify_default_instance_._instance.get_mutable()->blossom_chest_info_ = const_cast< ::proto::BlossomChestInfo*>(
      ::proto::BlossomChestInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024cmd/cmd_gadget.proto\022\005proto\032\014define.pr"
      "oto\"\311\001\n\021GadgetInteractReq\022\030\n\020gadget_enti"
      "ty_id\030\001 \001(\r\022#\n\007op_type\030\002 \001(\0162\022.proto.Int"
      "erOpType\022\021\n\tgadget_id\030\003 \001(\r\"b\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\013\n\006CMD_ID\020\241\006\022\023\n\017ENET_CHANNEL_ID\020\000"
      "\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIEN"
      "T\020\001\032\002\020\001\"\361\001\n\021GadgetInteractRsp\022\017\n\007retcode"
      "\030\001 \001(\005\022\030\n\020gadget_entity_id\030\002 \001(\r\022*\n\rinte"
      "ract_type\030\003 \001(\0162\023.proto.InteractType\022#\n\007"
      "op_type\030\004 \001(\0162\022.proto.InterOpType\022\021\n\tgad"
      "get_id\030\005 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\242\006\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\032\002\020\001\"\256\001\n\021GadgetStateNotify\022\030\n\020gad"
      "get_entity_id\030\001 \001(\r\022\024\n\014gadget_state\030\002 \001("
      "\r\022\032\n\022is_enable_interact\030\003 \001(\010\"M\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\243\006\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\223\001\n\023Worktop"
      "OptionNotify\022\030\n\020gadget_entity_id\030\001 \001(\r\022\023"
      "\n\013option_list\030\002 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013"
      "\n\006CMD_ID\020\244\006\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\032\002\020\001\"\251\001\n\026SelectWorktopOpti"
      "onReq\022\030\n\020gadget_entity_id\030\001 \001(\r\022\021\n\toptio"
      "n_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\245\006\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\245\001\n\026Selec"
      "tWorktopOptionRsp\022\017\n\007retcode\030\001 \001(\005\022\030\n\020ga"
      "dget_entity_id\030\002 \001(\r\022\021\n\toption_id\030\003 \001(\r\""
      "M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\246\006\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\225"
      "\001\n\027BossChestActivateNotify\022\021\n\tentity_id\030"
      "\001 \001(\r\022\030\n\020qualify_uid_list\030\002 \003(\r\"M\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\247\006\022\023\n\017ENET_CHANNEL_"
      "ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\257\001\n\026Bloss"
      "omChestInfoNotify\022\021\n\tentity_id\030\001 \001(\r\0223\n\022"
      "blossom_chest_info\030\002 \001(\0132\027.proto.Blossom"
      "ChestInfo\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\250"
      "\006\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\032\002\020\001*\226\001\n\014InteractType\022\021\n\rINTERACT_NO"
      "NE\020\000\022\026\n\022INTERACT_PICK_ITEM\020\001\022\023\n\017INTERACT"
      "_GATHER\020\002\022\027\n\023INTERACT_OPEN_CHEST\020\003\022\030\n\024IN"
      "TERACT_OPEN_STATUE\020\004\022\023\n\017INTERACT_CONSUM\020"
      "\005*6\n\013InterOpType\022\023\n\017INTER_OP_FINISH\020\000\022\022\n"
      "\016INTER_OP_START\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1705);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_gadget.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fgadget_2eproto

const ::google::protobuf::EnumDescriptor* GadgetInteractReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[0];
}
bool GadgetInteractReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 801:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GadgetInteractReq_CmdId GadgetInteractReq::NONE;
const GadgetInteractReq_CmdId GadgetInteractReq::CMD_ID;
const GadgetInteractReq_CmdId GadgetInteractReq::ENET_CHANNEL_ID;
const GadgetInteractReq_CmdId GadgetInteractReq::ENET_IS_RELIABLE;
const GadgetInteractReq_CmdId GadgetInteractReq::IS_ALLOW_CLIENT;
const GadgetInteractReq_CmdId GadgetInteractReq::CmdId_MIN;
const GadgetInteractReq_CmdId GadgetInteractReq::CmdId_MAX;
const int GadgetInteractReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GadgetInteractRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[1];
}
bool GadgetInteractRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 802:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GadgetInteractRsp_CmdId GadgetInteractRsp::NONE;
const GadgetInteractRsp_CmdId GadgetInteractRsp::CMD_ID;
const GadgetInteractRsp_CmdId GadgetInteractRsp::ENET_CHANNEL_ID;
const GadgetInteractRsp_CmdId GadgetInteractRsp::ENET_IS_RELIABLE;
const GadgetInteractRsp_CmdId GadgetInteractRsp::CmdId_MIN;
const GadgetInteractRsp_CmdId GadgetInteractRsp::CmdId_MAX;
const int GadgetInteractRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GadgetStateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[2];
}
bool GadgetStateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 803:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GadgetStateNotify_CmdId GadgetStateNotify::NONE;
const GadgetStateNotify_CmdId GadgetStateNotify::CMD_ID;
const GadgetStateNotify_CmdId GadgetStateNotify::ENET_CHANNEL_ID;
const GadgetStateNotify_CmdId GadgetStateNotify::ENET_IS_RELIABLE;
const GadgetStateNotify_CmdId GadgetStateNotify::CmdId_MIN;
const GadgetStateNotify_CmdId GadgetStateNotify::CmdId_MAX;
const int GadgetStateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorktopOptionNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[3];
}
bool WorktopOptionNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 804:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorktopOptionNotify_CmdId WorktopOptionNotify::NONE;
const WorktopOptionNotify_CmdId WorktopOptionNotify::CMD_ID;
const WorktopOptionNotify_CmdId WorktopOptionNotify::ENET_CHANNEL_ID;
const WorktopOptionNotify_CmdId WorktopOptionNotify::ENET_IS_RELIABLE;
const WorktopOptionNotify_CmdId WorktopOptionNotify::CmdId_MIN;
const WorktopOptionNotify_CmdId WorktopOptionNotify::CmdId_MAX;
const int WorktopOptionNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SelectWorktopOptionReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[4];
}
bool SelectWorktopOptionReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 805:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq::NONE;
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq::CMD_ID;
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq::ENET_CHANNEL_ID;
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq::ENET_IS_RELIABLE;
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq::IS_ALLOW_CLIENT;
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq::CmdId_MIN;
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq::CmdId_MAX;
const int SelectWorktopOptionReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SelectWorktopOptionRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[5];
}
bool SelectWorktopOptionRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 806:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp::NONE;
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp::CMD_ID;
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp::ENET_CHANNEL_ID;
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp::ENET_IS_RELIABLE;
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp::CmdId_MIN;
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp::CmdId_MAX;
const int SelectWorktopOptionRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BossChestActivateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[6];
}
bool BossChestActivateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 807:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BossChestActivateNotify_CmdId BossChestActivateNotify::NONE;
const BossChestActivateNotify_CmdId BossChestActivateNotify::CMD_ID;
const BossChestActivateNotify_CmdId BossChestActivateNotify::ENET_CHANNEL_ID;
const BossChestActivateNotify_CmdId BossChestActivateNotify::ENET_IS_RELIABLE;
const BossChestActivateNotify_CmdId BossChestActivateNotify::CmdId_MIN;
const BossChestActivateNotify_CmdId BossChestActivateNotify::CmdId_MAX;
const int BossChestActivateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BlossomChestInfoNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[7];
}
bool BlossomChestInfoNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 808:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify::NONE;
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify::CMD_ID;
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify::ENET_CHANNEL_ID;
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify::ENET_IS_RELIABLE;
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify::CmdId_MIN;
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify::CmdId_MAX;
const int BlossomChestInfoNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* InteractType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[8];
}
bool InteractType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* InterOpType_descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_enum_descriptors[9];
}
bool InterOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetInteractReq::kGadgetEntityIdFieldNumber;
const int GadgetInteractReq::kOpTypeFieldNumber;
const int GadgetInteractReq::kGadgetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetInteractReq::GadgetInteractReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetInteractReq)
}
GadgetInteractReq::GadgetInteractReq(const GadgetInteractReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_entity_id_, &from.gadget_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_id_) -
    reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(gadget_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetInteractReq)
}

void GadgetInteractReq::SharedCtor() {
  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(gadget_id_));
  _cached_size_ = 0;
}

GadgetInteractReq::~GadgetInteractReq() {
  // @@protoc_insertion_point(destructor:proto.GadgetInteractReq)
  SharedDtor();
}

void GadgetInteractReq::SharedDtor() {
}

void GadgetInteractReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetInteractReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetInteractReq& GadgetInteractReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetInteractReq* GadgetInteractReq::New(::google::protobuf::Arena* arena) const {
  GadgetInteractReq* n = new GadgetInteractReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetInteractReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(gadget_id_));
  _internal_metadata_.Clear();
}

bool GadgetInteractReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetInteractReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InterOpType op_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::InterOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetInteractReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetInteractReq)
  return false;
#undef DO_
}

void GadgetInteractReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gadget_entity_id(), output);
  }

  // .proto.InterOpType op_type = 2;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op_type(), output);
  }

  // uint32 gadget_id = 3;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetInteractReq)
}

::google::protobuf::uint8* GadgetInteractReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetInteractReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gadget_entity_id(), target);
  }

  // .proto.InterOpType op_type = 2;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op_type(), target);
  }

  // uint32 gadget_id = 3;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetInteractReq)
  return target;
}

size_t GadgetInteractReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetInteractReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // .proto.InterOpType op_type = 2;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // uint32 gadget_id = 3;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetInteractReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetInteractReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetInteractReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetInteractReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetInteractReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetInteractReq)
    MergeFrom(*source);
  }
}

void GadgetInteractReq::MergeFrom(const GadgetInteractReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetInteractReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
}

void GadgetInteractReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetInteractReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetInteractReq::CopyFrom(const GadgetInteractReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetInteractReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetInteractReq::IsInitialized() const {
  return true;
}

void GadgetInteractReq::Swap(GadgetInteractReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetInteractReq::InternalSwap(GadgetInteractReq* other) {
  using std::swap;
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(op_type_, other->op_type_);
  swap(gadget_id_, other->gadget_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetInteractReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetInteractReq

// uint32 gadget_entity_id = 1;
void GadgetInteractReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetInteractReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.gadget_entity_id)
}

// .proto.InterOpType op_type = 2;
void GadgetInteractReq::clear_op_type() {
  op_type_ = 0;
}
::proto::InterOpType GadgetInteractReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.op_type)
  return static_cast< ::proto::InterOpType >(op_type_);
}
void GadgetInteractReq::set_op_type(::proto::InterOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.op_type)
}

// uint32 gadget_id = 3;
void GadgetInteractReq::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractReq::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.gadget_id)
  return gadget_id_;
}
void GadgetInteractReq::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.gadget_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetInteractRsp::kRetcodeFieldNumber;
const int GadgetInteractRsp::kGadgetEntityIdFieldNumber;
const int GadgetInteractRsp::kInteractTypeFieldNumber;
const int GadgetInteractRsp::kOpTypeFieldNumber;
const int GadgetInteractRsp::kGadgetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetInteractRsp::GadgetInteractRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetInteractRsp)
}
GadgetInteractRsp::GadgetInteractRsp(const GadgetInteractRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(gadget_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetInteractRsp)
}

void GadgetInteractRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(gadget_id_));
  _cached_size_ = 0;
}

GadgetInteractRsp::~GadgetInteractRsp() {
  // @@protoc_insertion_point(destructor:proto.GadgetInteractRsp)
  SharedDtor();
}

void GadgetInteractRsp::SharedDtor() {
}

void GadgetInteractRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetInteractRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetInteractRsp& GadgetInteractRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetInteractRsp* GadgetInteractRsp::New(::google::protobuf::Arena* arena) const {
  GadgetInteractRsp* n = new GadgetInteractRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetInteractRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(gadget_id_));
  _internal_metadata_.Clear();
}

bool GadgetInteractRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetInteractRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InteractType interact_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interact_type(static_cast< ::proto::InteractType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.InterOpType op_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::InterOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetInteractRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetInteractRsp)
  return false;
#undef DO_
}

void GadgetInteractRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gadget_entity_id(), output);
  }

  // .proto.InteractType interact_type = 3;
  if (this->interact_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->interact_type(), output);
  }

  // .proto.InterOpType op_type = 4;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->op_type(), output);
  }

  // uint32 gadget_id = 5;
  if (this->gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetInteractRsp)
}

::google::protobuf::uint8* GadgetInteractRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetInteractRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gadget_entity_id(), target);
  }

  // .proto.InteractType interact_type = 3;
  if (this->interact_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->interact_type(), target);
  }

  // .proto.InterOpType op_type = 4;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->op_type(), target);
  }

  // uint32 gadget_id = 5;
  if (this->gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetInteractRsp)
  return target;
}

size_t GadgetInteractRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetInteractRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // .proto.InteractType interact_type = 3;
  if (this->interact_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interact_type());
  }

  // .proto.InterOpType op_type = 4;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // uint32 gadget_id = 5;
  if (this->gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetInteractRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetInteractRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetInteractRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetInteractRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetInteractRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetInteractRsp)
    MergeFrom(*source);
  }
}

void GadgetInteractRsp::MergeFrom(const GadgetInteractRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetInteractRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.interact_type() != 0) {
    set_interact_type(from.interact_type());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.gadget_id() != 0) {
    set_gadget_id(from.gadget_id());
  }
}

void GadgetInteractRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetInteractRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetInteractRsp::CopyFrom(const GadgetInteractRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetInteractRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetInteractRsp::IsInitialized() const {
  return true;
}

void GadgetInteractRsp::Swap(GadgetInteractRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetInteractRsp::InternalSwap(GadgetInteractRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(interact_type_, other->interact_type_);
  swap(op_type_, other->op_type_);
  swap(gadget_id_, other->gadget_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetInteractRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetInteractRsp

// int32 retcode = 1;
void GadgetInteractRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GadgetInteractRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.retcode)
  return retcode_;
}
void GadgetInteractRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.retcode)
}

// uint32 gadget_entity_id = 2;
void GadgetInteractRsp::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractRsp::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetInteractRsp::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.gadget_entity_id)
}

// .proto.InteractType interact_type = 3;
void GadgetInteractRsp::clear_interact_type() {
  interact_type_ = 0;
}
::proto::InteractType GadgetInteractRsp::interact_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.interact_type)
  return static_cast< ::proto::InteractType >(interact_type_);
}
void GadgetInteractRsp::set_interact_type(::proto::InteractType value) {
  
  interact_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.interact_type)
}

// .proto.InterOpType op_type = 4;
void GadgetInteractRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::InterOpType GadgetInteractRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.op_type)
  return static_cast< ::proto::InterOpType >(op_type_);
}
void GadgetInteractRsp::set_op_type(::proto::InterOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.op_type)
}

// uint32 gadget_id = 5;
void GadgetInteractRsp::clear_gadget_id() {
  gadget_id_ = 0u;
}
::google::protobuf::uint32 GadgetInteractRsp::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.gadget_id)
  return gadget_id_;
}
void GadgetInteractRsp::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.gadget_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetStateNotify::kGadgetEntityIdFieldNumber;
const int GadgetStateNotify::kGadgetStateFieldNumber;
const int GadgetStateNotify::kIsEnableInteractFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetStateNotify::GadgetStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetStateNotify)
}
GadgetStateNotify::GadgetStateNotify(const GadgetStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_entity_id_, &from.gadget_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_enable_interact_) -
    reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(is_enable_interact_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetStateNotify)
}

void GadgetStateNotify::SharedCtor() {
  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_enable_interact_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(is_enable_interact_));
  _cached_size_ = 0;
}

GadgetStateNotify::~GadgetStateNotify() {
  // @@protoc_insertion_point(destructor:proto.GadgetStateNotify)
  SharedDtor();
}

void GadgetStateNotify::SharedDtor() {
}

void GadgetStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetStateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetStateNotify& GadgetStateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetStateNotify* GadgetStateNotify::New(::google::protobuf::Arena* arena) const {
  GadgetStateNotify* n = new GadgetStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_enable_interact_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(is_enable_interact_));
  _internal_metadata_.Clear();
}

bool GadgetStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_enable_interact = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_enable_interact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetStateNotify)
  return false;
#undef DO_
}

void GadgetStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gadget_entity_id(), output);
  }

  // uint32 gadget_state = 2;
  if (this->gadget_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gadget_state(), output);
  }

  // bool is_enable_interact = 3;
  if (this->is_enable_interact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_enable_interact(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetStateNotify)
}

::google::protobuf::uint8* GadgetStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gadget_entity_id(), target);
  }

  // uint32 gadget_state = 2;
  if (this->gadget_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gadget_state(), target);
  }

  // bool is_enable_interact = 3;
  if (this->is_enable_interact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_enable_interact(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetStateNotify)
  return target;
}

size_t GadgetStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetStateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // uint32 gadget_state = 2;
  if (this->gadget_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_state());
  }

  // bool is_enable_interact = 3;
  if (this->is_enable_interact() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetStateNotify)
    MergeFrom(*source);
  }
}

void GadgetStateNotify::MergeFrom(const GadgetStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.gadget_state() != 0) {
    set_gadget_state(from.gadget_state());
  }
  if (from.is_enable_interact() != 0) {
    set_is_enable_interact(from.is_enable_interact());
  }
}

void GadgetStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetStateNotify::CopyFrom(const GadgetStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetStateNotify::IsInitialized() const {
  return true;
}

void GadgetStateNotify::Swap(GadgetStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetStateNotify::InternalSwap(GadgetStateNotify* other) {
  using std::swap;
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(gadget_state_, other->gadget_state_);
  swap(is_enable_interact_, other->is_enable_interact_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetStateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetStateNotify

// uint32 gadget_entity_id = 1;
void GadgetStateNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 GadgetStateNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void GadgetStateNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.gadget_entity_id)
}

// uint32 gadget_state = 2;
void GadgetStateNotify::clear_gadget_state() {
  gadget_state_ = 0u;
}
::google::protobuf::uint32 GadgetStateNotify::gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.gadget_state)
  return gadget_state_;
}
void GadgetStateNotify::set_gadget_state(::google::protobuf::uint32 value) {
  
  gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.gadget_state)
}

// bool is_enable_interact = 3;
void GadgetStateNotify::clear_is_enable_interact() {
  is_enable_interact_ = false;
}
bool GadgetStateNotify::is_enable_interact() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.is_enable_interact)
  return is_enable_interact_;
}
void GadgetStateNotify::set_is_enable_interact(bool value) {
  
  is_enable_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.is_enable_interact)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorktopOptionNotify::kGadgetEntityIdFieldNumber;
const int WorktopOptionNotify::kOptionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorktopOptionNotify::WorktopOptionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorktopOptionNotify)
}
WorktopOptionNotify::WorktopOptionNotify(const WorktopOptionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      option_list_(from.option_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gadget_entity_id_ = from.gadget_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.WorktopOptionNotify)
}

void WorktopOptionNotify::SharedCtor() {
  gadget_entity_id_ = 0u;
  _cached_size_ = 0;
}

WorktopOptionNotify::~WorktopOptionNotify() {
  // @@protoc_insertion_point(destructor:proto.WorktopOptionNotify)
  SharedDtor();
}

void WorktopOptionNotify::SharedDtor() {
}

void WorktopOptionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorktopOptionNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorktopOptionNotify& WorktopOptionNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorktopOptionNotify* WorktopOptionNotify::New(::google::protobuf::Arena* arena) const {
  WorktopOptionNotify* n = new WorktopOptionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorktopOptionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorktopOptionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  option_list_.Clear();
  gadget_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool WorktopOptionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorktopOptionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 option_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_option_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_option_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorktopOptionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorktopOptionNotify)
  return false;
#undef DO_
}

void WorktopOptionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorktopOptionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gadget_entity_id(), output);
  }

  // repeated uint32 option_list = 2;
  if (this->option_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _option_list_cached_byte_size_));
  }
  for (int i = 0, n = this->option_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->option_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorktopOptionNotify)
}

::google::protobuf::uint8* WorktopOptionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorktopOptionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gadget_entity_id(), target);
  }

  // repeated uint32 option_list = 2;
  if (this->option_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _option_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->option_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorktopOptionNotify)
  return target;
}

size_t WorktopOptionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorktopOptionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 option_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->option_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _option_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorktopOptionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorktopOptionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorktopOptionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorktopOptionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorktopOptionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorktopOptionNotify)
    MergeFrom(*source);
  }
}

void WorktopOptionNotify::MergeFrom(const WorktopOptionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorktopOptionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  option_list_.MergeFrom(from.option_list_);
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
}

void WorktopOptionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorktopOptionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorktopOptionNotify::CopyFrom(const WorktopOptionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorktopOptionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorktopOptionNotify::IsInitialized() const {
  return true;
}

void WorktopOptionNotify::Swap(WorktopOptionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorktopOptionNotify::InternalSwap(WorktopOptionNotify* other) {
  using std::swap;
  option_list_.InternalSwap(&other->option_list_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorktopOptionNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorktopOptionNotify

// uint32 gadget_entity_id = 1;
void WorktopOptionNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 WorktopOptionNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WorktopOptionNotify.gadget_entity_id)
  return gadget_entity_id_;
}
void WorktopOptionNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorktopOptionNotify.gadget_entity_id)
}

// repeated uint32 option_list = 2;
int WorktopOptionNotify::option_list_size() const {
  return option_list_.size();
}
void WorktopOptionNotify::clear_option_list() {
  option_list_.Clear();
}
::google::protobuf::uint32 WorktopOptionNotify::option_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorktopOptionNotify.option_list)
  return option_list_.Get(index);
}
void WorktopOptionNotify::set_option_list(int index, ::google::protobuf::uint32 value) {
  option_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorktopOptionNotify.option_list)
}
void WorktopOptionNotify::add_option_list(::google::protobuf::uint32 value) {
  option_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorktopOptionNotify.option_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorktopOptionNotify::option_list() const {
  // @@protoc_insertion_point(field_list:proto.WorktopOptionNotify.option_list)
  return option_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorktopOptionNotify::mutable_option_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorktopOptionNotify.option_list)
  return &option_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectWorktopOptionReq::kGadgetEntityIdFieldNumber;
const int SelectWorktopOptionReq::kOptionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectWorktopOptionReq::SelectWorktopOptionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SelectWorktopOptionReq)
}
SelectWorktopOptionReq::SelectWorktopOptionReq(const SelectWorktopOptionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_entity_id_, &from.gadget_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&option_id_) -
    reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(option_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SelectWorktopOptionReq)
}

void SelectWorktopOptionReq::SharedCtor() {
  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(option_id_));
  _cached_size_ = 0;
}

SelectWorktopOptionReq::~SelectWorktopOptionReq() {
  // @@protoc_insertion_point(destructor:proto.SelectWorktopOptionReq)
  SharedDtor();
}

void SelectWorktopOptionReq::SharedDtor() {
}

void SelectWorktopOptionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectWorktopOptionReq::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectWorktopOptionReq& SelectWorktopOptionReq::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectWorktopOptionReq* SelectWorktopOptionReq::New(::google::protobuf::Arena* arena) const {
  SelectWorktopOptionReq* n = new SelectWorktopOptionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectWorktopOptionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SelectWorktopOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_id_) -
      reinterpret_cast<char*>(&gadget_entity_id_)) + sizeof(option_id_));
  _internal_metadata_.Clear();
}

bool SelectWorktopOptionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SelectWorktopOptionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 option_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &option_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SelectWorktopOptionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SelectWorktopOptionReq)
  return false;
#undef DO_
}

void SelectWorktopOptionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SelectWorktopOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gadget_entity_id(), output);
  }

  // uint32 option_id = 2;
  if (this->option_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->option_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SelectWorktopOptionReq)
}

::google::protobuf::uint8* SelectWorktopOptionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SelectWorktopOptionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gadget_entity_id(), target);
  }

  // uint32 option_id = 2;
  if (this->option_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->option_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SelectWorktopOptionReq)
  return target;
}

size_t SelectWorktopOptionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SelectWorktopOptionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_entity_id = 1;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // uint32 option_id = 2;
  if (this->option_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->option_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectWorktopOptionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SelectWorktopOptionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectWorktopOptionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectWorktopOptionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SelectWorktopOptionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SelectWorktopOptionReq)
    MergeFrom(*source);
  }
}

void SelectWorktopOptionReq::MergeFrom(const SelectWorktopOptionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SelectWorktopOptionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.option_id() != 0) {
    set_option_id(from.option_id());
  }
}

void SelectWorktopOptionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SelectWorktopOptionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectWorktopOptionReq::CopyFrom(const SelectWorktopOptionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SelectWorktopOptionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectWorktopOptionReq::IsInitialized() const {
  return true;
}

void SelectWorktopOptionReq::Swap(SelectWorktopOptionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectWorktopOptionReq::InternalSwap(SelectWorktopOptionReq* other) {
  using std::swap;
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(option_id_, other->option_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectWorktopOptionReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectWorktopOptionReq

// uint32 gadget_entity_id = 1;
void SelectWorktopOptionReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 SelectWorktopOptionReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionReq.gadget_entity_id)
  return gadget_entity_id_;
}
void SelectWorktopOptionReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionReq.gadget_entity_id)
}

// uint32 option_id = 2;
void SelectWorktopOptionReq::clear_option_id() {
  option_id_ = 0u;
}
::google::protobuf::uint32 SelectWorktopOptionReq::option_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionReq.option_id)
  return option_id_;
}
void SelectWorktopOptionReq::set_option_id(::google::protobuf::uint32 value) {
  
  option_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionReq.option_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectWorktopOptionRsp::kRetcodeFieldNumber;
const int SelectWorktopOptionRsp::kGadgetEntityIdFieldNumber;
const int SelectWorktopOptionRsp::kOptionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectWorktopOptionRsp::SelectWorktopOptionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SelectWorktopOptionRsp)
}
SelectWorktopOptionRsp::SelectWorktopOptionRsp(const SelectWorktopOptionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&option_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(option_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SelectWorktopOptionRsp)
}

void SelectWorktopOptionRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(option_id_));
  _cached_size_ = 0;
}

SelectWorktopOptionRsp::~SelectWorktopOptionRsp() {
  // @@protoc_insertion_point(destructor:proto.SelectWorktopOptionRsp)
  SharedDtor();
}

void SelectWorktopOptionRsp::SharedDtor() {
}

void SelectWorktopOptionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectWorktopOptionRsp::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectWorktopOptionRsp& SelectWorktopOptionRsp::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

SelectWorktopOptionRsp* SelectWorktopOptionRsp::New(::google::protobuf::Arena* arena) const {
  SelectWorktopOptionRsp* n = new SelectWorktopOptionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectWorktopOptionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SelectWorktopOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&option_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(option_id_));
  _internal_metadata_.Clear();
}

bool SelectWorktopOptionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SelectWorktopOptionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 option_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &option_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SelectWorktopOptionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SelectWorktopOptionRsp)
  return false;
#undef DO_
}

void SelectWorktopOptionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SelectWorktopOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gadget_entity_id(), output);
  }

  // uint32 option_id = 3;
  if (this->option_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->option_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SelectWorktopOptionRsp)
}

::google::protobuf::uint8* SelectWorktopOptionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SelectWorktopOptionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gadget_entity_id(), target);
  }

  // uint32 option_id = 3;
  if (this->option_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->option_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SelectWorktopOptionRsp)
  return target;
}

size_t SelectWorktopOptionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SelectWorktopOptionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 gadget_entity_id = 2;
  if (this->gadget_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_entity_id());
  }

  // uint32 option_id = 3;
  if (this->option_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->option_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectWorktopOptionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SelectWorktopOptionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectWorktopOptionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectWorktopOptionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SelectWorktopOptionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SelectWorktopOptionRsp)
    MergeFrom(*source);
  }
}

void SelectWorktopOptionRsp::MergeFrom(const SelectWorktopOptionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SelectWorktopOptionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.gadget_entity_id() != 0) {
    set_gadget_entity_id(from.gadget_entity_id());
  }
  if (from.option_id() != 0) {
    set_option_id(from.option_id());
  }
}

void SelectWorktopOptionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SelectWorktopOptionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectWorktopOptionRsp::CopyFrom(const SelectWorktopOptionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SelectWorktopOptionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectWorktopOptionRsp::IsInitialized() const {
  return true;
}

void SelectWorktopOptionRsp::Swap(SelectWorktopOptionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectWorktopOptionRsp::InternalSwap(SelectWorktopOptionRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(gadget_entity_id_, other->gadget_entity_id_);
  swap(option_id_, other->option_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectWorktopOptionRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectWorktopOptionRsp

// int32 retcode = 1;
void SelectWorktopOptionRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SelectWorktopOptionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.retcode)
  return retcode_;
}
void SelectWorktopOptionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.retcode)
}

// uint32 gadget_entity_id = 2;
void SelectWorktopOptionRsp::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
::google::protobuf::uint32 SelectWorktopOptionRsp::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.gadget_entity_id)
  return gadget_entity_id_;
}
void SelectWorktopOptionRsp::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.gadget_entity_id)
}

// uint32 option_id = 3;
void SelectWorktopOptionRsp::clear_option_id() {
  option_id_ = 0u;
}
::google::protobuf::uint32 SelectWorktopOptionRsp::option_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.option_id)
  return option_id_;
}
void SelectWorktopOptionRsp::set_option_id(::google::protobuf::uint32 value) {
  
  option_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.option_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BossChestActivateNotify::kEntityIdFieldNumber;
const int BossChestActivateNotify::kQualifyUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BossChestActivateNotify::BossChestActivateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BossChestActivateNotify)
}
BossChestActivateNotify::BossChestActivateNotify(const BossChestActivateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      qualify_uid_list_(from.qualify_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.BossChestActivateNotify)
}

void BossChestActivateNotify::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

BossChestActivateNotify::~BossChestActivateNotify() {
  // @@protoc_insertion_point(destructor:proto.BossChestActivateNotify)
  SharedDtor();
}

void BossChestActivateNotify::SharedDtor() {
}

void BossChestActivateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BossChestActivateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BossChestActivateNotify& BossChestActivateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

BossChestActivateNotify* BossChestActivateNotify::New(::google::protobuf::Arena* arena) const {
  BossChestActivateNotify* n = new BossChestActivateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BossChestActivateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BossChestActivateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  qualify_uid_list_.Clear();
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BossChestActivateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BossChestActivateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 qualify_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_qualify_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_qualify_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BossChestActivateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BossChestActivateNotify)
  return false;
#undef DO_
}

void BossChestActivateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BossChestActivateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // repeated uint32 qualify_uid_list = 2;
  if (this->qualify_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _qualify_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->qualify_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->qualify_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BossChestActivateNotify)
}

::google::protobuf::uint8* BossChestActivateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BossChestActivateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // repeated uint32 qualify_uid_list = 2;
  if (this->qualify_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _qualify_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->qualify_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BossChestActivateNotify)
  return target;
}

size_t BossChestActivateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BossChestActivateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 qualify_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->qualify_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _qualify_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BossChestActivateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BossChestActivateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BossChestActivateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BossChestActivateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BossChestActivateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BossChestActivateNotify)
    MergeFrom(*source);
  }
}

void BossChestActivateNotify::MergeFrom(const BossChestActivateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BossChestActivateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  qualify_uid_list_.MergeFrom(from.qualify_uid_list_);
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void BossChestActivateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BossChestActivateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BossChestActivateNotify::CopyFrom(const BossChestActivateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BossChestActivateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BossChestActivateNotify::IsInitialized() const {
  return true;
}

void BossChestActivateNotify::Swap(BossChestActivateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BossChestActivateNotify::InternalSwap(BossChestActivateNotify* other) {
  using std::swap;
  qualify_uid_list_.InternalSwap(&other->qualify_uid_list_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BossChestActivateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BossChestActivateNotify

// uint32 entity_id = 1;
void BossChestActivateNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 BossChestActivateNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.BossChestActivateNotify.entity_id)
  return entity_id_;
}
void BossChestActivateNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestActivateNotify.entity_id)
}

// repeated uint32 qualify_uid_list = 2;
int BossChestActivateNotify::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
void BossChestActivateNotify::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
::google::protobuf::uint32 BossChestActivateNotify::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestActivateNotify.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
void BossChestActivateNotify::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestActivateNotify.qualify_uid_list)
}
void BossChestActivateNotify::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestActivateNotify.qualify_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestActivateNotify::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestActivateNotify.qualify_uid_list)
  return qualify_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestActivateNotify::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestActivateNotify.qualify_uid_list)
  return &qualify_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlossomChestInfoNotify::kEntityIdFieldNumber;
const int BlossomChestInfoNotify::kBlossomChestInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlossomChestInfoNotify::BlossomChestInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlossomChestInfoNotify)
}
BlossomChestInfoNotify::BlossomChestInfoNotify(const BlossomChestInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_blossom_chest_info()) {
    blossom_chest_info_ = new ::proto::BlossomChestInfo(*from.blossom_chest_info_);
  } else {
    blossom_chest_info_ = NULL;
  }
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.BlossomChestInfoNotify)
}

void BlossomChestInfoNotify::SharedCtor() {
  ::memset(&blossom_chest_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&blossom_chest_info_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

BlossomChestInfoNotify::~BlossomChestInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.BlossomChestInfoNotify)
  SharedDtor();
}

void BlossomChestInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete blossom_chest_info_;
}

void BlossomChestInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlossomChestInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlossomChestInfoNotify& BlossomChestInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fgadget_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlossomChestInfoNotify* BlossomChestInfoNotify::New(::google::protobuf::Arena* arena) const {
  BlossomChestInfoNotify* n = new BlossomChestInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlossomChestInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlossomChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && blossom_chest_info_ != NULL) {
    delete blossom_chest_info_;
  }
  blossom_chest_info_ = NULL;
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool BlossomChestInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlossomChestInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BlossomChestInfo blossom_chest_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blossom_chest_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlossomChestInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlossomChestInfoNotify)
  return false;
#undef DO_
}

void BlossomChestInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlossomChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.BlossomChestInfo blossom_chest_info = 2;
  if (this->has_blossom_chest_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->blossom_chest_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlossomChestInfoNotify)
}

::google::protobuf::uint8* BlossomChestInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlossomChestInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.BlossomChestInfo blossom_chest_info = 2;
  if (this->has_blossom_chest_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->blossom_chest_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlossomChestInfoNotify)
  return target;
}

size_t BlossomChestInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlossomChestInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.BlossomChestInfo blossom_chest_info = 2;
  if (this->has_blossom_chest_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->blossom_chest_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlossomChestInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlossomChestInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BlossomChestInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlossomChestInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlossomChestInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlossomChestInfoNotify)
    MergeFrom(*source);
  }
}

void BlossomChestInfoNotify::MergeFrom(const BlossomChestInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlossomChestInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_blossom_chest_info()) {
    mutable_blossom_chest_info()->::proto::BlossomChestInfo::MergeFrom(from.blossom_chest_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void BlossomChestInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlossomChestInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlossomChestInfoNotify::CopyFrom(const BlossomChestInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlossomChestInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlossomChestInfoNotify::IsInitialized() const {
  return true;
}

void BlossomChestInfoNotify::Swap(BlossomChestInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlossomChestInfoNotify::InternalSwap(BlossomChestInfoNotify* other) {
  using std::swap;
  swap(blossom_chest_info_, other->blossom_chest_info_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlossomChestInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fgadget_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fgadget_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlossomChestInfoNotify

// uint32 entity_id = 1;
void BlossomChestInfoNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 BlossomChestInfoNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfoNotify.entity_id)
  return entity_id_;
}
void BlossomChestInfoNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfoNotify.entity_id)
}

// .proto.BlossomChestInfo blossom_chest_info = 2;
bool BlossomChestInfoNotify::has_blossom_chest_info() const {
  return this != internal_default_instance() && blossom_chest_info_ != NULL;
}
void BlossomChestInfoNotify::clear_blossom_chest_info() {
  if (GetArenaNoVirtual() == NULL && blossom_chest_info_ != NULL) delete blossom_chest_info_;
  blossom_chest_info_ = NULL;
}
const ::proto::BlossomChestInfo& BlossomChestInfoNotify::blossom_chest_info() const {
  const ::proto::BlossomChestInfo* p = blossom_chest_info_;
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfoNotify.blossom_chest_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BlossomChestInfo*>(
      &::proto::_BlossomChestInfo_default_instance_);
}
::proto::BlossomChestInfo* BlossomChestInfoNotify::mutable_blossom_chest_info() {
  
  if (blossom_chest_info_ == NULL) {
    blossom_chest_info_ = new ::proto::BlossomChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.BlossomChestInfoNotify.blossom_chest_info)
  return blossom_chest_info_;
}
::proto::BlossomChestInfo* BlossomChestInfoNotify::release_blossom_chest_info() {
  // @@protoc_insertion_point(field_release:proto.BlossomChestInfoNotify.blossom_chest_info)
  
  ::proto::BlossomChestInfo* temp = blossom_chest_info_;
  blossom_chest_info_ = NULL;
  return temp;
}
void BlossomChestInfoNotify::set_allocated_blossom_chest_info(::proto::BlossomChestInfo* blossom_chest_info) {
  delete blossom_chest_info_;
  blossom_chest_info_ = blossom_chest_info;
  if (blossom_chest_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BlossomChestInfoNotify.blossom_chest_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
