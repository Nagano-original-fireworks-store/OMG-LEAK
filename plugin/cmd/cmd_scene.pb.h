// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_scene.proto

#ifndef PROTOBUF_cmd_2fcmd_5fscene_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fscene_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AddSeenMonsterNotify;
class AddSeenMonsterNotifyDefaultTypeInternal;
extern AddSeenMonsterNotifyDefaultTypeInternal _AddSeenMonsterNotify_default_instance_;
class AllMarkPointNotify;
class AllMarkPointNotifyDefaultTypeInternal;
extern AllMarkPointNotifyDefaultTypeInternal _AllMarkPointNotify_default_instance_;
class AllSeenMonsterNotify;
class AllSeenMonsterNotifyDefaultTypeInternal;
extern AllSeenMonsterNotifyDefaultTypeInternal _AllSeenMonsterNotify_default_instance_;
class AvatarEnterSceneInfo;
class AvatarEnterSceneInfoDefaultTypeInternal;
extern AvatarEnterSceneInfoDefaultTypeInternal _AvatarEnterSceneInfo_default_instance_;
class BackMyWorldReq;
class BackMyWorldReqDefaultTypeInternal;
extern BackMyWorldReqDefaultTypeInternal _BackMyWorldReq_default_instance_;
class BackMyWorldRsp;
class BackMyWorldRspDefaultTypeInternal;
extern BackMyWorldRspDefaultTypeInternal _BackMyWorldRsp_default_instance_;
class BeginCameraSceneLookNotify;
class BeginCameraSceneLookNotifyDefaultTypeInternal;
extern BeginCameraSceneLookNotifyDefaultTypeInternal _BeginCameraSceneLookNotify_default_instance_;
class ChatHistoryNotify;
class ChatHistoryNotifyDefaultTypeInternal;
extern ChatHistoryNotifyDefaultTypeInternal _ChatHistoryNotify_default_instance_;
class ChatInfo;
class ChatInfoDefaultTypeInternal;
extern ChatInfoDefaultTypeInternal _ChatInfo_default_instance_;
class ChatInfo_SystemHint;
class ChatInfo_SystemHintDefaultTypeInternal;
extern ChatInfo_SystemHintDefaultTypeInternal _ChatInfo_SystemHint_default_instance_;
class CityInfo;
class CityInfoDefaultTypeInternal;
extern CityInfoDefaultTypeInternal _CityInfo_default_instance_;
class ClientPauseNotify;
class ClientPauseNotifyDefaultTypeInternal;
extern ClientPauseNotifyDefaultTypeInternal _ClientPauseNotify_default_instance_;
class ClientScriptEventNotify;
class ClientScriptEventNotifyDefaultTypeInternal;
extern ClientScriptEventNotifyDefaultTypeInternal _ClientScriptEventNotify_default_instance_;
class ClientTransmitReq;
class ClientTransmitReqDefaultTypeInternal;
extern ClientTransmitReqDefaultTypeInternal _ClientTransmitReq_default_instance_;
class ClientTransmitRsp;
class ClientTransmitRspDefaultTypeInternal;
extern ClientTransmitRspDefaultTypeInternal _ClientTransmitRsp_default_instance_;
class CutSceneBeginNotify;
class CutSceneBeginNotifyDefaultTypeInternal;
extern CutSceneBeginNotifyDefaultTypeInternal _CutSceneBeginNotify_default_instance_;
class CutSceneEndNotify;
class CutSceneEndNotifyDefaultTypeInternal;
extern CutSceneEndNotifyDefaultTypeInternal _CutSceneEndNotify_default_instance_;
class CutSceneFinishNotify;
class CutSceneFinishNotifyDefaultTypeInternal;
extern CutSceneFinishNotifyDefaultTypeInternal _CutSceneFinishNotify_default_instance_;
class DropSubfieldReq;
class DropSubfieldReqDefaultTypeInternal;
extern DropSubfieldReqDefaultTypeInternal _DropSubfieldReq_default_instance_;
class DropSubfieldRsp;
class DropSubfieldRspDefaultTypeInternal;
extern DropSubfieldRspDefaultTypeInternal _DropSubfieldRsp_default_instance_;
class DungeonEntryCond;
class DungeonEntryCondDefaultTypeInternal;
extern DungeonEntryCondDefaultTypeInternal _DungeonEntryCond_default_instance_;
class DungeonEntryToBeExploreNotify;
class DungeonEntryToBeExploreNotifyDefaultTypeInternal;
extern DungeonEntryToBeExploreNotifyDefaultTypeInternal _DungeonEntryToBeExploreNotify_default_instance_;
class EndCameraSceneLookNotify;
class EndCameraSceneLookNotifyDefaultTypeInternal;
extern EndCameraSceneLookNotifyDefaultTypeInternal _EndCameraSceneLookNotify_default_instance_;
class EnterSceneDoneReq;
class EnterSceneDoneReqDefaultTypeInternal;
extern EnterSceneDoneReqDefaultTypeInternal _EnterSceneDoneReq_default_instance_;
class EnterSceneDoneRsp;
class EnterSceneDoneRspDefaultTypeInternal;
extern EnterSceneDoneRspDefaultTypeInternal _EnterSceneDoneRsp_default_instance_;
class EnterScenePeerNotify;
class EnterScenePeerNotifyDefaultTypeInternal;
extern EnterScenePeerNotifyDefaultTypeInternal _EnterScenePeerNotify_default_instance_;
class EnterSceneReadyReq;
class EnterSceneReadyReqDefaultTypeInternal;
extern EnterSceneReadyReqDefaultTypeInternal _EnterSceneReadyReq_default_instance_;
class EnterSceneReadyRsp;
class EnterSceneReadyRspDefaultTypeInternal;
extern EnterSceneReadyRspDefaultTypeInternal _EnterSceneReadyRsp_default_instance_;
class EnterSceneWeatherAreaNotify;
class EnterSceneWeatherAreaNotifyDefaultTypeInternal;
extern EnterSceneWeatherAreaNotifyDefaultTypeInternal _EnterSceneWeatherAreaNotify_default_instance_;
class EnterTransPointRegionNotify;
class EnterTransPointRegionNotifyDefaultTypeInternal;
extern EnterTransPointRegionNotifyDefaultTypeInternal _EnterTransPointRegionNotify_default_instance_;
class EnterWorldAreaReq;
class EnterWorldAreaReqDefaultTypeInternal;
extern EnterWorldAreaReqDefaultTypeInternal _EnterWorldAreaReq_default_instance_;
class EnterWorldAreaRsp;
class EnterWorldAreaRspDefaultTypeInternal;
extern EnterWorldAreaRspDefaultTypeInternal _EnterWorldAreaRsp_default_instance_;
class EnterWorldFogAreaNotify;
class EnterWorldFogAreaNotifyDefaultTypeInternal;
extern EnterWorldFogAreaNotifyDefaultTypeInternal _EnterWorldFogAreaNotify_default_instance_;
class EntityForceSyncReq;
class EntityForceSyncReqDefaultTypeInternal;
extern EntityForceSyncReqDefaultTypeInternal _EntityForceSyncReq_default_instance_;
class EntityForceSyncRsp;
class EntityForceSyncRspDefaultTypeInternal;
extern EntityForceSyncRspDefaultTypeInternal _EntityForceSyncRsp_default_instance_;
class EntityJumpNotify;
class EntityJumpNotifyDefaultTypeInternal;
extern EntityJumpNotifyDefaultTypeInternal _EntityJumpNotify_default_instance_;
class EntityMoveFailInfo;
class EntityMoveFailInfoDefaultTypeInternal;
extern EntityMoveFailInfoDefaultTypeInternal _EntityMoveFailInfo_default_instance_;
class EntityMoveInfo;
class EntityMoveInfoDefaultTypeInternal;
extern EntityMoveInfoDefaultTypeInternal _EntityMoveInfo_default_instance_;
class EntityMoveRoomNotify;
class EntityMoveRoomNotifyDefaultTypeInternal;
extern EntityMoveRoomNotifyDefaultTypeInternal _EntityMoveRoomNotify_default_instance_;
class ExecuteGadgetLuaReq;
class ExecuteGadgetLuaReqDefaultTypeInternal;
extern ExecuteGadgetLuaReqDefaultTypeInternal _ExecuteGadgetLuaReq_default_instance_;
class ExecuteGadgetLuaRsp;
class ExecuteGadgetLuaRspDefaultTypeInternal;
extern ExecuteGadgetLuaRspDefaultTypeInternal _ExecuteGadgetLuaRsp_default_instance_;
class ExecuteGroupTriggerReq;
class ExecuteGroupTriggerReqDefaultTypeInternal;
extern ExecuteGroupTriggerReqDefaultTypeInternal _ExecuteGroupTriggerReq_default_instance_;
class ExecuteGroupTriggerRsp;
class ExecuteGroupTriggerRspDefaultTypeInternal;
extern ExecuteGroupTriggerRspDefaultTypeInternal _ExecuteGroupTriggerRsp_default_instance_;
class ExitSceneWeatherAreaNotify;
class ExitSceneWeatherAreaNotifyDefaultTypeInternal;
extern ExitSceneWeatherAreaNotifyDefaultTypeInternal _ExitSceneWeatherAreaNotify_default_instance_;
class ExitTransPointRegionNotify;
class ExitTransPointRegionNotifyDefaultTypeInternal;
extern ExitTransPointRegionNotifyDefaultTypeInternal _ExitTransPointRegionNotify_default_instance_;
class GetDungeonEntryExploreConditionReq;
class GetDungeonEntryExploreConditionReqDefaultTypeInternal;
extern GetDungeonEntryExploreConditionReqDefaultTypeInternal _GetDungeonEntryExploreConditionReq_default_instance_;
class GetDungeonEntryExploreConditionRsp;
class GetDungeonEntryExploreConditionRspDefaultTypeInternal;
extern GetDungeonEntryExploreConditionRspDefaultTypeInternal _GetDungeonEntryExploreConditionRsp_default_instance_;
class GetSceneAreaReq;
class GetSceneAreaReqDefaultTypeInternal;
extern GetSceneAreaReqDefaultTypeInternal _GetSceneAreaReq_default_instance_;
class GetSceneAreaRsp;
class GetSceneAreaRspDefaultTypeInternal;
extern GetSceneAreaRspDefaultTypeInternal _GetSceneAreaRsp_default_instance_;
class GetScenePointReq;
class GetScenePointReqDefaultTypeInternal;
extern GetScenePointReqDefaultTypeInternal _GetScenePointReq_default_instance_;
class GetScenePointRsp;
class GetScenePointRspDefaultTypeInternal;
extern GetScenePointRspDefaultTypeInternal _GetScenePointRsp_default_instance_;
class HitClientTrivialNotify;
class HitClientTrivialNotifyDefaultTypeInternal;
extern HitClientTrivialNotifyDefaultTypeInternal _HitClientTrivialNotify_default_instance_;
class JoinPlayerFailNotify;
class JoinPlayerFailNotifyDefaultTypeInternal;
extern JoinPlayerFailNotifyDefaultTypeInternal _JoinPlayerFailNotify_default_instance_;
class JoinPlayerSceneReq;
class JoinPlayerSceneReqDefaultTypeInternal;
extern JoinPlayerSceneReqDefaultTypeInternal _JoinPlayerSceneReq_default_instance_;
class JoinPlayerSceneRsp;
class JoinPlayerSceneRspDefaultTypeInternal;
extern JoinPlayerSceneRspDefaultTypeInternal _JoinPlayerSceneRsp_default_instance_;
class LeaveSceneReq;
class LeaveSceneReqDefaultTypeInternal;
extern LeaveSceneReqDefaultTypeInternal _LeaveSceneReq_default_instance_;
class LeaveSceneRsp;
class LeaveSceneRspDefaultTypeInternal;
extern LeaveSceneRspDefaultTypeInternal _LeaveSceneRsp_default_instance_;
class LevelupCityReq;
class LevelupCityReqDefaultTypeInternal;
extern LevelupCityReqDefaultTypeInternal _LevelupCityReq_default_instance_;
class LevelupCityRsp;
class LevelupCityRspDefaultTypeInternal;
extern LevelupCityRspDefaultTypeInternal _LevelupCityRsp_default_instance_;
class LockWorldFogAreaNotify;
class LockWorldFogAreaNotifyDefaultTypeInternal;
extern LockWorldFogAreaNotifyDefaultTypeInternal _LockWorldFogAreaNotify_default_instance_;
class MPLevelEntityInfo;
class MPLevelEntityInfoDefaultTypeInternal;
extern MPLevelEntityInfoDefaultTypeInternal _MPLevelEntityInfo_default_instance_;
class MarkEntityInMinMapNotify;
class MarkEntityInMinMapNotifyDefaultTypeInternal;
extern MarkEntityInMinMapNotifyDefaultTypeInternal _MarkEntityInMinMapNotify_default_instance_;
class MarkMapReq;
class MarkMapReqDefaultTypeInternal;
extern MarkMapReqDefaultTypeInternal _MarkMapReq_default_instance_;
class MarkMapRsp;
class MarkMapRspDefaultTypeInternal;
extern MarkMapRspDefaultTypeInternal _MarkMapRsp_default_instance_;
class PersonalSceneJumpReq;
class PersonalSceneJumpReqDefaultTypeInternal;
extern PersonalSceneJumpReqDefaultTypeInternal _PersonalSceneJumpReq_default_instance_;
class PersonalSceneJumpRsp;
class PersonalSceneJumpRspDefaultTypeInternal;
extern PersonalSceneJumpRspDefaultTypeInternal _PersonalSceneJumpRsp_default_instance_;
class PlatformChangeRouteNotify;
class PlatformChangeRouteNotifyDefaultTypeInternal;
extern PlatformChangeRouteNotifyDefaultTypeInternal _PlatformChangeRouteNotify_default_instance_;
class PlatformRouteStateNotify;
class PlatformRouteStateNotifyDefaultTypeInternal;
extern PlatformRouteStateNotifyDefaultTypeInternal _PlatformRouteStateNotify_default_instance_;
class PlatformStartRouteNotify;
class PlatformStartRouteNotifyDefaultTypeInternal;
extern PlatformStartRouteNotifyDefaultTypeInternal _PlatformStartRouteNotify_default_instance_;
class PlatformStopRouteNotify;
class PlatformStopRouteNotifyDefaultTypeInternal;
extern PlatformStopRouteNotifyDefaultTypeInternal _PlatformStopRouteNotify_default_instance_;
class PlayerChatCDNotify;
class PlayerChatCDNotifyDefaultTypeInternal;
extern PlayerChatCDNotifyDefaultTypeInternal _PlayerChatCDNotify_default_instance_;
class PlayerChatNotify;
class PlayerChatNotifyDefaultTypeInternal;
extern PlayerChatNotifyDefaultTypeInternal _PlayerChatNotify_default_instance_;
class PlayerChatReq;
class PlayerChatReqDefaultTypeInternal;
extern PlayerChatReqDefaultTypeInternal _PlayerChatReq_default_instance_;
class PlayerChatRsp;
class PlayerChatRspDefaultTypeInternal;
extern PlayerChatRspDefaultTypeInternal _PlayerChatRsp_default_instance_;
class PlayerEnterSceneInfoNotify;
class PlayerEnterSceneInfoNotifyDefaultTypeInternal;
extern PlayerEnterSceneInfoNotifyDefaultTypeInternal _PlayerEnterSceneInfoNotify_default_instance_;
class PlayerEnterSceneNotify;
class PlayerEnterSceneNotifyDefaultTypeInternal;
extern PlayerEnterSceneNotifyDefaultTypeInternal _PlayerEnterSceneNotify_default_instance_;
class PlayerLocationInfo;
class PlayerLocationInfoDefaultTypeInternal;
extern PlayerLocationInfoDefaultTypeInternal _PlayerLocationInfo_default_instance_;
class PostEnterSceneReq;
class PostEnterSceneReqDefaultTypeInternal;
extern PostEnterSceneReqDefaultTypeInternal _PostEnterSceneReq_default_instance_;
class PostEnterSceneRsp;
class PostEnterSceneRspDefaultTypeInternal;
extern PostEnterSceneRspDefaultTypeInternal _PostEnterSceneRsp_default_instance_;
class RoutePointChangeInfo;
class RoutePointChangeInfoDefaultTypeInternal;
extern RoutePointChangeInfoDefaultTypeInternal _RoutePointChangeInfo_default_instance_;
class SceneAreaExploreNotify;
class SceneAreaExploreNotifyDefaultTypeInternal;
extern SceneAreaExploreNotifyDefaultTypeInternal _SceneAreaExploreNotify_default_instance_;
class SceneAreaUnlockNotify;
class SceneAreaUnlockNotifyDefaultTypeInternal;
extern SceneAreaUnlockNotifyDefaultTypeInternal _SceneAreaUnlockNotify_default_instance_;
class SceneAreaWeatherNotify;
class SceneAreaWeatherNotifyDefaultTypeInternal;
extern SceneAreaWeatherNotifyDefaultTypeInternal _SceneAreaWeatherNotify_default_instance_;
class SceneAreaWeatherNotify_WeatherValueMapEntry;
class SceneAreaWeatherNotify_WeatherValueMapEntryDefaultTypeInternal;
extern SceneAreaWeatherNotify_WeatherValueMapEntryDefaultTypeInternal _SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_;
class SceneAvatarStaminaStepReq;
class SceneAvatarStaminaStepReqDefaultTypeInternal;
extern SceneAvatarStaminaStepReqDefaultTypeInternal _SceneAvatarStaminaStepReq_default_instance_;
class SceneAvatarStaminaStepRsp;
class SceneAvatarStaminaStepRspDefaultTypeInternal;
extern SceneAvatarStaminaStepRspDefaultTypeInternal _SceneAvatarStaminaStepRsp_default_instance_;
class SceneCreateEntityReq;
class SceneCreateEntityReqDefaultTypeInternal;
extern SceneCreateEntityReqDefaultTypeInternal _SceneCreateEntityReq_default_instance_;
class SceneCreateEntityRsp;
class SceneCreateEntityRspDefaultTypeInternal;
extern SceneCreateEntityRspDefaultTypeInternal _SceneCreateEntityRsp_default_instance_;
class SceneDataNotify;
class SceneDataNotifyDefaultTypeInternal;
extern SceneDataNotifyDefaultTypeInternal _SceneDataNotify_default_instance_;
class SceneDestroyEntityReq;
class SceneDestroyEntityReqDefaultTypeInternal;
extern SceneDestroyEntityReqDefaultTypeInternal _SceneDestroyEntityReq_default_instance_;
class SceneDestroyEntityRsp;
class SceneDestroyEntityRspDefaultTypeInternal;
extern SceneDestroyEntityRspDefaultTypeInternal _SceneDestroyEntityRsp_default_instance_;
class SceneEntitiesMoveCombineNotify;
class SceneEntitiesMoveCombineNotifyDefaultTypeInternal;
extern SceneEntitiesMoveCombineNotifyDefaultTypeInternal _SceneEntitiesMoveCombineNotify_default_instance_;
class SceneEntitiesMovesReq;
class SceneEntitiesMovesReqDefaultTypeInternal;
extern SceneEntitiesMovesReqDefaultTypeInternal _SceneEntitiesMovesReq_default_instance_;
class SceneEntitiesMovesRsp;
class SceneEntitiesMovesRspDefaultTypeInternal;
extern SceneEntitiesMovesRspDefaultTypeInternal _SceneEntitiesMovesRsp_default_instance_;
class SceneEntityAppearNotify;
class SceneEntityAppearNotifyDefaultTypeInternal;
extern SceneEntityAppearNotifyDefaultTypeInternal _SceneEntityAppearNotify_default_instance_;
class SceneEntityDisappearNotify;
class SceneEntityDisappearNotifyDefaultTypeInternal;
extern SceneEntityDisappearNotifyDefaultTypeInternal _SceneEntityDisappearNotify_default_instance_;
class SceneEntityDrownReq;
class SceneEntityDrownReqDefaultTypeInternal;
extern SceneEntityDrownReqDefaultTypeInternal _SceneEntityDrownReq_default_instance_;
class SceneEntityDrownRsp;
class SceneEntityDrownRspDefaultTypeInternal;
extern SceneEntityDrownRspDefaultTypeInternal _SceneEntityDrownRsp_default_instance_;
class SceneEntityMoveNotify;
class SceneEntityMoveNotifyDefaultTypeInternal;
extern SceneEntityMoveNotifyDefaultTypeInternal _SceneEntityMoveNotify_default_instance_;
class SceneEntityMoveReq;
class SceneEntityMoveReqDefaultTypeInternal;
extern SceneEntityMoveReqDefaultTypeInternal _SceneEntityMoveReq_default_instance_;
class SceneEntityMoveRsp;
class SceneEntityMoveRspDefaultTypeInternal;
extern SceneEntityMoveRspDefaultTypeInternal _SceneEntityMoveRsp_default_instance_;
class SceneForceLockNotify;
class SceneForceLockNotifyDefaultTypeInternal;
extern SceneForceLockNotifyDefaultTypeInternal _SceneForceLockNotify_default_instance_;
class SceneForceUnlockNotify;
class SceneForceUnlockNotifyDefaultTypeInternal;
extern SceneForceUnlockNotifyDefaultTypeInternal _SceneForceUnlockNotify_default_instance_;
class SceneGetAreaExplorePercentReq;
class SceneGetAreaExplorePercentReqDefaultTypeInternal;
extern SceneGetAreaExplorePercentReqDefaultTypeInternal _SceneGetAreaExplorePercentReq_default_instance_;
class SceneGetAreaExplorePercentRsp;
class SceneGetAreaExplorePercentRspDefaultTypeInternal;
extern SceneGetAreaExplorePercentRspDefaultTypeInternal _SceneGetAreaExplorePercentRsp_default_instance_;
class SceneInitFinishReq;
class SceneInitFinishReqDefaultTypeInternal;
extern SceneInitFinishReqDefaultTypeInternal _SceneInitFinishReq_default_instance_;
class SceneInitFinishRsp;
class SceneInitFinishRspDefaultTypeInternal;
extern SceneInitFinishRspDefaultTypeInternal _SceneInitFinishRsp_default_instance_;
class SceneKickPlayerNotify;
class SceneKickPlayerNotifyDefaultTypeInternal;
extern SceneKickPlayerNotifyDefaultTypeInternal _SceneKickPlayerNotify_default_instance_;
class SceneKickPlayerReq;
class SceneKickPlayerReqDefaultTypeInternal;
extern SceneKickPlayerReqDefaultTypeInternal _SceneKickPlayerReq_default_instance_;
class SceneKickPlayerRsp;
class SceneKickPlayerRspDefaultTypeInternal;
extern SceneKickPlayerRspDefaultTypeInternal _SceneKickPlayerRsp_default_instance_;
class ScenePlayerInfo;
class ScenePlayerInfoDefaultTypeInternal;
extern ScenePlayerInfoDefaultTypeInternal _ScenePlayerInfo_default_instance_;
class ScenePlayerInfoNotify;
class ScenePlayerInfoNotifyDefaultTypeInternal;
extern ScenePlayerInfoNotifyDefaultTypeInternal _ScenePlayerInfoNotify_default_instance_;
class ScenePlayerLocationNotify;
class ScenePlayerLocationNotifyDefaultTypeInternal;
extern ScenePlayerLocationNotifyDefaultTypeInternal _ScenePlayerLocationNotify_default_instance_;
class ScenePlayerSoundNotify;
class ScenePlayerSoundNotifyDefaultTypeInternal;
extern ScenePlayerSoundNotifyDefaultTypeInternal _ScenePlayerSoundNotify_default_instance_;
class ScenePointUnlockNotify;
class ScenePointUnlockNotifyDefaultTypeInternal;
extern ScenePointUnlockNotifyDefaultTypeInternal _ScenePointUnlockNotify_default_instance_;
class SceneRouteChangeInfo;
class SceneRouteChangeInfoDefaultTypeInternal;
extern SceneRouteChangeInfoDefaultTypeInternal _SceneRouteChangeInfo_default_instance_;
class SceneRouteChangeNotify;
class SceneRouteChangeNotifyDefaultTypeInternal;
extern SceneRouteChangeNotifyDefaultTypeInternal _SceneRouteChangeNotify_default_instance_;
class SceneTimeNotify;
class SceneTimeNotifyDefaultTypeInternal;
extern SceneTimeNotifyDefaultTypeInternal _SceneTimeNotify_default_instance_;
class SceneTransToPointReq;
class SceneTransToPointReqDefaultTypeInternal;
extern SceneTransToPointReqDefaultTypeInternal _SceneTransToPointReq_default_instance_;
class SceneTransToPointRsp;
class SceneTransToPointRspDefaultTypeInternal;
extern SceneTransToPointRspDefaultTypeInternal _SceneTransToPointRsp_default_instance_;
class SceneWeatherForcastReq;
class SceneWeatherForcastReqDefaultTypeInternal;
extern SceneWeatherForcastReqDefaultTypeInternal _SceneWeatherForcastReq_default_instance_;
class SceneWeatherForcastRsp;
class SceneWeatherForcastRspDefaultTypeInternal;
extern SceneWeatherForcastRspDefaultTypeInternal _SceneWeatherForcastRsp_default_instance_;
class SealBattleBeginNotify;
class SealBattleBeginNotifyDefaultTypeInternal;
extern SealBattleBeginNotifyDefaultTypeInternal _SealBattleBeginNotify_default_instance_;
class SealBattleEndNotify;
class SealBattleEndNotifyDefaultTypeInternal;
extern SealBattleEndNotifyDefaultTypeInternal _SealBattleEndNotify_default_instance_;
class SealBattleProgressNotify;
class SealBattleProgressNotifyDefaultTypeInternal;
extern SealBattleProgressNotifyDefaultTypeInternal _SealBattleProgressNotify_default_instance_;
class SeeMonsterReq;
class SeeMonsterReqDefaultTypeInternal;
extern SeeMonsterReqDefaultTypeInternal _SeeMonsterReq_default_instance_;
class SeeMonsterRsp;
class SeeMonsterRspDefaultTypeInternal;
extern SeeMonsterRspDefaultTypeInternal _SeeMonsterRsp_default_instance_;
class SetEntityClientDataNotify;
class SetEntityClientDataNotifyDefaultTypeInternal;
extern SetEntityClientDataNotifyDefaultTypeInternal _SetEntityClientDataNotify_default_instance_;
class SetSceneWeatherAreaReq;
class SetSceneWeatherAreaReqDefaultTypeInternal;
extern SetSceneWeatherAreaReqDefaultTypeInternal _SetSceneWeatherAreaReq_default_instance_;
class SetSceneWeatherAreaReq_WeatherValueMapEntry;
class SetSceneWeatherAreaReq_WeatherValueMapEntryDefaultTypeInternal;
extern SetSceneWeatherAreaReq_WeatherValueMapEntryDefaultTypeInternal _SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_;
class SetSceneWeatherAreaRsp;
class SetSceneWeatherAreaRspDefaultTypeInternal;
extern SetSceneWeatherAreaRspDefaultTypeInternal _SetSceneWeatherAreaRsp_default_instance_;
class TeamEnterSceneInfo;
class TeamEnterSceneInfoDefaultTypeInternal;
extern TeamEnterSceneInfoDefaultTypeInternal _TeamEnterSceneInfo_default_instance_;
class UnfreezeGroupLimitNotify;
class UnfreezeGroupLimitNotifyDefaultTypeInternal;
extern UnfreezeGroupLimitNotifyDefaultTypeInternal _UnfreezeGroupLimitNotify_default_instance_;
class UnlockTransPointReq;
class UnlockTransPointReqDefaultTypeInternal;
extern UnlockTransPointReqDefaultTypeInternal _UnlockTransPointReq_default_instance_;
class UnlockTransPointRsp;
class UnlockTransPointRspDefaultTypeInternal;
extern UnlockTransPointRspDefaultTypeInternal _UnlockTransPointRsp_default_instance_;
class UnlockWorldFogAreaNotify;
class UnlockWorldFogAreaNotifyDefaultTypeInternal;
extern UnlockWorldFogAreaNotifyDefaultTypeInternal _UnlockWorldFogAreaNotify_default_instance_;
class UnmarkEntityInMinMapNotify;
class UnmarkEntityInMinMapNotifyDefaultTypeInternal;
extern UnmarkEntityInMinMapNotifyDefaultTypeInternal _UnmarkEntityInMinMapNotify_default_instance_;
class WorldDataNotify;
class WorldDataNotifyDefaultTypeInternal;
extern WorldDataNotifyDefaultTypeInternal _WorldDataNotify_default_instance_;
class WorldDataNotify_WorldPropMapEntry;
class WorldDataNotify_WorldPropMapEntryDefaultTypeInternal;
extern WorldDataNotify_WorldPropMapEntryDefaultTypeInternal _WorldDataNotify_WorldPropMapEntry_default_instance_;
class WorldPlayerDieNotify;
class WorldPlayerDieNotifyDefaultTypeInternal;
extern WorldPlayerDieNotifyDefaultTypeInternal _WorldPlayerDieNotify_default_instance_;
class WorldPlayerInfoNotify;
class WorldPlayerInfoNotifyDefaultTypeInternal;
extern WorldPlayerInfoNotifyDefaultTypeInternal _WorldPlayerInfoNotify_default_instance_;
class WorldPlayerLocationNotify;
class WorldPlayerLocationNotifyDefaultTypeInternal;
extern WorldPlayerLocationNotifyDefaultTypeInternal _WorldPlayerLocationNotify_default_instance_;
class WorldPlayerReviveReq;
class WorldPlayerReviveReqDefaultTypeInternal;
extern WorldPlayerReviveReqDefaultTypeInternal _WorldPlayerReviveReq_default_instance_;
class WorldPlayerReviveRsp;
class WorldPlayerReviveRspDefaultTypeInternal;
extern WorldPlayerReviveRspDefaultTypeInternal _WorldPlayerReviveRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fscene_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fscene_2eproto

enum PlayerEnterSceneNotify_CmdId {
  PlayerEnterSceneNotify_CmdId_NONE = 0,
  PlayerEnterSceneNotify_CmdId_CMD_ID = 201,
  PlayerEnterSceneNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerEnterSceneNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerEnterSceneNotify_CmdId_PlayerEnterSceneNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerEnterSceneNotify_CmdId_PlayerEnterSceneNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerEnterSceneNotify_CmdId_IsValid(int value);
const PlayerEnterSceneNotify_CmdId PlayerEnterSceneNotify_CmdId_CmdId_MIN = PlayerEnterSceneNotify_CmdId_NONE;
const PlayerEnterSceneNotify_CmdId PlayerEnterSceneNotify_CmdId_CmdId_MAX = PlayerEnterSceneNotify_CmdId_CMD_ID;
const int PlayerEnterSceneNotify_CmdId_CmdId_ARRAYSIZE = PlayerEnterSceneNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerEnterSceneNotify_CmdId_descriptor();
inline const ::std::string& PlayerEnterSceneNotify_CmdId_Name(PlayerEnterSceneNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerEnterSceneNotify_CmdId_descriptor(), value);
}
inline bool PlayerEnterSceneNotify_CmdId_Parse(
    const ::std::string& name, PlayerEnterSceneNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerEnterSceneNotify_CmdId>(
    PlayerEnterSceneNotify_CmdId_descriptor(), name, value);
}
enum LeaveSceneReq_CmdId {
  LeaveSceneReq_CmdId_NONE = 0,
  LeaveSceneReq_CmdId_CMD_ID = 202,
  LeaveSceneReq_CmdId_ENET_CHANNEL_ID = 0,
  LeaveSceneReq_CmdId_ENET_IS_RELIABLE = 1,
  LeaveSceneReq_CmdId_IS_ALLOW_CLIENT = 1,
  LeaveSceneReq_CmdId_LeaveSceneReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LeaveSceneReq_CmdId_LeaveSceneReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LeaveSceneReq_CmdId_IsValid(int value);
const LeaveSceneReq_CmdId LeaveSceneReq_CmdId_CmdId_MIN = LeaveSceneReq_CmdId_NONE;
const LeaveSceneReq_CmdId LeaveSceneReq_CmdId_CmdId_MAX = LeaveSceneReq_CmdId_CMD_ID;
const int LeaveSceneReq_CmdId_CmdId_ARRAYSIZE = LeaveSceneReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LeaveSceneReq_CmdId_descriptor();
inline const ::std::string& LeaveSceneReq_CmdId_Name(LeaveSceneReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LeaveSceneReq_CmdId_descriptor(), value);
}
inline bool LeaveSceneReq_CmdId_Parse(
    const ::std::string& name, LeaveSceneReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LeaveSceneReq_CmdId>(
    LeaveSceneReq_CmdId_descriptor(), name, value);
}
enum LeaveSceneRsp_CmdId {
  LeaveSceneRsp_CmdId_NONE = 0,
  LeaveSceneRsp_CmdId_CMD_ID = 203,
  LeaveSceneRsp_CmdId_ENET_CHANNEL_ID = 0,
  LeaveSceneRsp_CmdId_ENET_IS_RELIABLE = 1,
  LeaveSceneRsp_CmdId_LeaveSceneRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LeaveSceneRsp_CmdId_LeaveSceneRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LeaveSceneRsp_CmdId_IsValid(int value);
const LeaveSceneRsp_CmdId LeaveSceneRsp_CmdId_CmdId_MIN = LeaveSceneRsp_CmdId_NONE;
const LeaveSceneRsp_CmdId LeaveSceneRsp_CmdId_CmdId_MAX = LeaveSceneRsp_CmdId_CMD_ID;
const int LeaveSceneRsp_CmdId_CmdId_ARRAYSIZE = LeaveSceneRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LeaveSceneRsp_CmdId_descriptor();
inline const ::std::string& LeaveSceneRsp_CmdId_Name(LeaveSceneRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LeaveSceneRsp_CmdId_descriptor(), value);
}
inline bool LeaveSceneRsp_CmdId_Parse(
    const ::std::string& name, LeaveSceneRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LeaveSceneRsp_CmdId>(
    LeaveSceneRsp_CmdId_descriptor(), name, value);
}
enum SceneInitFinishReq_CmdId {
  SceneInitFinishReq_CmdId_NONE = 0,
  SceneInitFinishReq_CmdId_CMD_ID = 204,
  SceneInitFinishReq_CmdId_ENET_CHANNEL_ID = 0,
  SceneInitFinishReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneInitFinishReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneInitFinishReq_CmdId_SceneInitFinishReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneInitFinishReq_CmdId_SceneInitFinishReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneInitFinishReq_CmdId_IsValid(int value);
const SceneInitFinishReq_CmdId SceneInitFinishReq_CmdId_CmdId_MIN = SceneInitFinishReq_CmdId_NONE;
const SceneInitFinishReq_CmdId SceneInitFinishReq_CmdId_CmdId_MAX = SceneInitFinishReq_CmdId_CMD_ID;
const int SceneInitFinishReq_CmdId_CmdId_ARRAYSIZE = SceneInitFinishReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneInitFinishReq_CmdId_descriptor();
inline const ::std::string& SceneInitFinishReq_CmdId_Name(SceneInitFinishReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneInitFinishReq_CmdId_descriptor(), value);
}
inline bool SceneInitFinishReq_CmdId_Parse(
    const ::std::string& name, SceneInitFinishReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneInitFinishReq_CmdId>(
    SceneInitFinishReq_CmdId_descriptor(), name, value);
}
enum SceneInitFinishRsp_CmdId {
  SceneInitFinishRsp_CmdId_NONE = 0,
  SceneInitFinishRsp_CmdId_CMD_ID = 205,
  SceneInitFinishRsp_CmdId_ENET_CHANNEL_ID = 0,
  SceneInitFinishRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneInitFinishRsp_CmdId_IS_ALLOW_CLIENT = 1,
  SceneInitFinishRsp_CmdId_SceneInitFinishRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneInitFinishRsp_CmdId_SceneInitFinishRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneInitFinishRsp_CmdId_IsValid(int value);
const SceneInitFinishRsp_CmdId SceneInitFinishRsp_CmdId_CmdId_MIN = SceneInitFinishRsp_CmdId_NONE;
const SceneInitFinishRsp_CmdId SceneInitFinishRsp_CmdId_CmdId_MAX = SceneInitFinishRsp_CmdId_CMD_ID;
const int SceneInitFinishRsp_CmdId_CmdId_ARRAYSIZE = SceneInitFinishRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneInitFinishRsp_CmdId_descriptor();
inline const ::std::string& SceneInitFinishRsp_CmdId_Name(SceneInitFinishRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneInitFinishRsp_CmdId_descriptor(), value);
}
inline bool SceneInitFinishRsp_CmdId_Parse(
    const ::std::string& name, SceneInitFinishRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneInitFinishRsp_CmdId>(
    SceneInitFinishRsp_CmdId_descriptor(), name, value);
}
enum SceneEntityAppearNotify_CmdId {
  SceneEntityAppearNotify_CmdId_NONE = 0,
  SceneEntityAppearNotify_CmdId_CMD_ID = 206,
  SceneEntityAppearNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneEntityAppearNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneEntityAppearNotify_CmdId_SceneEntityAppearNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntityAppearNotify_CmdId_SceneEntityAppearNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntityAppearNotify_CmdId_IsValid(int value);
const SceneEntityAppearNotify_CmdId SceneEntityAppearNotify_CmdId_CmdId_MIN = SceneEntityAppearNotify_CmdId_NONE;
const SceneEntityAppearNotify_CmdId SceneEntityAppearNotify_CmdId_CmdId_MAX = SceneEntityAppearNotify_CmdId_CMD_ID;
const int SceneEntityAppearNotify_CmdId_CmdId_ARRAYSIZE = SceneEntityAppearNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntityAppearNotify_CmdId_descriptor();
inline const ::std::string& SceneEntityAppearNotify_CmdId_Name(SceneEntityAppearNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntityAppearNotify_CmdId_descriptor(), value);
}
inline bool SceneEntityAppearNotify_CmdId_Parse(
    const ::std::string& name, SceneEntityAppearNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntityAppearNotify_CmdId>(
    SceneEntityAppearNotify_CmdId_descriptor(), name, value);
}
enum SceneEntityDisappearNotify_CmdId {
  SceneEntityDisappearNotify_CmdId_NONE = 0,
  SceneEntityDisappearNotify_CmdId_CMD_ID = 207,
  SceneEntityDisappearNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneEntityDisappearNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneEntityDisappearNotify_CmdId_SceneEntityDisappearNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntityDisappearNotify_CmdId_SceneEntityDisappearNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntityDisappearNotify_CmdId_IsValid(int value);
const SceneEntityDisappearNotify_CmdId SceneEntityDisappearNotify_CmdId_CmdId_MIN = SceneEntityDisappearNotify_CmdId_NONE;
const SceneEntityDisappearNotify_CmdId SceneEntityDisappearNotify_CmdId_CmdId_MAX = SceneEntityDisappearNotify_CmdId_CMD_ID;
const int SceneEntityDisappearNotify_CmdId_CmdId_ARRAYSIZE = SceneEntityDisappearNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntityDisappearNotify_CmdId_descriptor();
inline const ::std::string& SceneEntityDisappearNotify_CmdId_Name(SceneEntityDisappearNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntityDisappearNotify_CmdId_descriptor(), value);
}
inline bool SceneEntityDisappearNotify_CmdId_Parse(
    const ::std::string& name, SceneEntityDisappearNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntityDisappearNotify_CmdId>(
    SceneEntityDisappearNotify_CmdId_descriptor(), name, value);
}
enum SceneEntityMoveReq_CmdId {
  SceneEntityMoveReq_CmdId_NONE = 0,
  SceneEntityMoveReq_CmdId_CMD_ID = 208,
  SceneEntityMoveReq_CmdId_ENET_CHANNEL_ID = 1,
  SceneEntityMoveReq_CmdId_ENET_IS_RELIABLE = 0,
  SceneEntityMoveReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneEntityMoveReq_CmdId_SceneEntityMoveReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntityMoveReq_CmdId_SceneEntityMoveReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntityMoveReq_CmdId_IsValid(int value);
const SceneEntityMoveReq_CmdId SceneEntityMoveReq_CmdId_CmdId_MIN = SceneEntityMoveReq_CmdId_NONE;
const SceneEntityMoveReq_CmdId SceneEntityMoveReq_CmdId_CmdId_MAX = SceneEntityMoveReq_CmdId_CMD_ID;
const int SceneEntityMoveReq_CmdId_CmdId_ARRAYSIZE = SceneEntityMoveReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntityMoveReq_CmdId_descriptor();
inline const ::std::string& SceneEntityMoveReq_CmdId_Name(SceneEntityMoveReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntityMoveReq_CmdId_descriptor(), value);
}
inline bool SceneEntityMoveReq_CmdId_Parse(
    const ::std::string& name, SceneEntityMoveReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntityMoveReq_CmdId>(
    SceneEntityMoveReq_CmdId_descriptor(), name, value);
}
enum SceneEntityMoveRsp_CmdId {
  SceneEntityMoveRsp_CmdId_NONE = 0,
  SceneEntityMoveRsp_CmdId_CMD_ID = 209,
  SceneEntityMoveRsp_CmdId_ENET_CHANNEL_ID = 1,
  SceneEntityMoveRsp_CmdId_ENET_IS_RELIABLE = 0,
  SceneEntityMoveRsp_CmdId_SceneEntityMoveRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntityMoveRsp_CmdId_SceneEntityMoveRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntityMoveRsp_CmdId_IsValid(int value);
const SceneEntityMoveRsp_CmdId SceneEntityMoveRsp_CmdId_CmdId_MIN = SceneEntityMoveRsp_CmdId_NONE;
const SceneEntityMoveRsp_CmdId SceneEntityMoveRsp_CmdId_CmdId_MAX = SceneEntityMoveRsp_CmdId_CMD_ID;
const int SceneEntityMoveRsp_CmdId_CmdId_ARRAYSIZE = SceneEntityMoveRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntityMoveRsp_CmdId_descriptor();
inline const ::std::string& SceneEntityMoveRsp_CmdId_Name(SceneEntityMoveRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntityMoveRsp_CmdId_descriptor(), value);
}
inline bool SceneEntityMoveRsp_CmdId_Parse(
    const ::std::string& name, SceneEntityMoveRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntityMoveRsp_CmdId>(
    SceneEntityMoveRsp_CmdId_descriptor(), name, value);
}
enum SceneAvatarStaminaStepReq_CmdId {
  SceneAvatarStaminaStepReq_CmdId_NONE = 0,
  SceneAvatarStaminaStepReq_CmdId_CMD_ID = 210,
  SceneAvatarStaminaStepReq_CmdId_ENET_CHANNEL_ID = 1,
  SceneAvatarStaminaStepReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneAvatarStaminaStepReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneAvatarStaminaStepReq_CmdId_SceneAvatarStaminaStepReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneAvatarStaminaStepReq_CmdId_SceneAvatarStaminaStepReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneAvatarStaminaStepReq_CmdId_IsValid(int value);
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq_CmdId_CmdId_MIN = SceneAvatarStaminaStepReq_CmdId_NONE;
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq_CmdId_CmdId_MAX = SceneAvatarStaminaStepReq_CmdId_CMD_ID;
const int SceneAvatarStaminaStepReq_CmdId_CmdId_ARRAYSIZE = SceneAvatarStaminaStepReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneAvatarStaminaStepReq_CmdId_descriptor();
inline const ::std::string& SceneAvatarStaminaStepReq_CmdId_Name(SceneAvatarStaminaStepReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneAvatarStaminaStepReq_CmdId_descriptor(), value);
}
inline bool SceneAvatarStaminaStepReq_CmdId_Parse(
    const ::std::string& name, SceneAvatarStaminaStepReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneAvatarStaminaStepReq_CmdId>(
    SceneAvatarStaminaStepReq_CmdId_descriptor(), name, value);
}
enum SceneAvatarStaminaStepRsp_CmdId {
  SceneAvatarStaminaStepRsp_CmdId_NONE = 0,
  SceneAvatarStaminaStepRsp_CmdId_CMD_ID = 211,
  SceneAvatarStaminaStepRsp_CmdId_ENET_CHANNEL_ID = 1,
  SceneAvatarStaminaStepRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneAvatarStaminaStepRsp_CmdId_SceneAvatarStaminaStepRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneAvatarStaminaStepRsp_CmdId_SceneAvatarStaminaStepRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneAvatarStaminaStepRsp_CmdId_IsValid(int value);
const SceneAvatarStaminaStepRsp_CmdId SceneAvatarStaminaStepRsp_CmdId_CmdId_MIN = SceneAvatarStaminaStepRsp_CmdId_NONE;
const SceneAvatarStaminaStepRsp_CmdId SceneAvatarStaminaStepRsp_CmdId_CmdId_MAX = SceneAvatarStaminaStepRsp_CmdId_CMD_ID;
const int SceneAvatarStaminaStepRsp_CmdId_CmdId_ARRAYSIZE = SceneAvatarStaminaStepRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneAvatarStaminaStepRsp_CmdId_descriptor();
inline const ::std::string& SceneAvatarStaminaStepRsp_CmdId_Name(SceneAvatarStaminaStepRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneAvatarStaminaStepRsp_CmdId_descriptor(), value);
}
inline bool SceneAvatarStaminaStepRsp_CmdId_Parse(
    const ::std::string& name, SceneAvatarStaminaStepRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneAvatarStaminaStepRsp_CmdId>(
    SceneAvatarStaminaStepRsp_CmdId_descriptor(), name, value);
}
enum SceneEntityMoveNotify_CmdId {
  SceneEntityMoveNotify_CmdId_NONE = 0,
  SceneEntityMoveNotify_CmdId_CMD_ID = 212,
  SceneEntityMoveNotify_CmdId_ENET_CHANNEL_ID = 1,
  SceneEntityMoveNotify_CmdId_ENET_IS_RELIABLE = 0,
  SceneEntityMoveNotify_CmdId_SceneEntityMoveNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntityMoveNotify_CmdId_SceneEntityMoveNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntityMoveNotify_CmdId_IsValid(int value);
const SceneEntityMoveNotify_CmdId SceneEntityMoveNotify_CmdId_CmdId_MIN = SceneEntityMoveNotify_CmdId_NONE;
const SceneEntityMoveNotify_CmdId SceneEntityMoveNotify_CmdId_CmdId_MAX = SceneEntityMoveNotify_CmdId_CMD_ID;
const int SceneEntityMoveNotify_CmdId_CmdId_ARRAYSIZE = SceneEntityMoveNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntityMoveNotify_CmdId_descriptor();
inline const ::std::string& SceneEntityMoveNotify_CmdId_Name(SceneEntityMoveNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntityMoveNotify_CmdId_descriptor(), value);
}
inline bool SceneEntityMoveNotify_CmdId_Parse(
    const ::std::string& name, SceneEntityMoveNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntityMoveNotify_CmdId>(
    SceneEntityMoveNotify_CmdId_descriptor(), name, value);
}
enum ScenePlayerLocationNotify_CmdId {
  ScenePlayerLocationNotify_CmdId_NONE = 0,
  ScenePlayerLocationNotify_CmdId_CMD_ID = 213,
  ScenePlayerLocationNotify_CmdId_ENET_CHANNEL_ID = 1,
  ScenePlayerLocationNotify_CmdId_ENET_IS_RELIABLE = 1,
  ScenePlayerLocationNotify_CmdId_ScenePlayerLocationNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScenePlayerLocationNotify_CmdId_ScenePlayerLocationNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScenePlayerLocationNotify_CmdId_IsValid(int value);
const ScenePlayerLocationNotify_CmdId ScenePlayerLocationNotify_CmdId_CmdId_MIN = ScenePlayerLocationNotify_CmdId_NONE;
const ScenePlayerLocationNotify_CmdId ScenePlayerLocationNotify_CmdId_CmdId_MAX = ScenePlayerLocationNotify_CmdId_CMD_ID;
const int ScenePlayerLocationNotify_CmdId_CmdId_ARRAYSIZE = ScenePlayerLocationNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScenePlayerLocationNotify_CmdId_descriptor();
inline const ::std::string& ScenePlayerLocationNotify_CmdId_Name(ScenePlayerLocationNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScenePlayerLocationNotify_CmdId_descriptor(), value);
}
inline bool ScenePlayerLocationNotify_CmdId_Parse(
    const ::std::string& name, ScenePlayerLocationNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScenePlayerLocationNotify_CmdId>(
    ScenePlayerLocationNotify_CmdId_descriptor(), name, value);
}
enum GetScenePointReq_CmdId {
  GetScenePointReq_CmdId_NONE = 0,
  GetScenePointReq_CmdId_CMD_ID = 214,
  GetScenePointReq_CmdId_ENET_CHANNEL_ID = 0,
  GetScenePointReq_CmdId_ENET_IS_RELIABLE = 1,
  GetScenePointReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetScenePointReq_CmdId_GetScenePointReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetScenePointReq_CmdId_GetScenePointReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetScenePointReq_CmdId_IsValid(int value);
const GetScenePointReq_CmdId GetScenePointReq_CmdId_CmdId_MIN = GetScenePointReq_CmdId_NONE;
const GetScenePointReq_CmdId GetScenePointReq_CmdId_CmdId_MAX = GetScenePointReq_CmdId_CMD_ID;
const int GetScenePointReq_CmdId_CmdId_ARRAYSIZE = GetScenePointReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetScenePointReq_CmdId_descriptor();
inline const ::std::string& GetScenePointReq_CmdId_Name(GetScenePointReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetScenePointReq_CmdId_descriptor(), value);
}
inline bool GetScenePointReq_CmdId_Parse(
    const ::std::string& name, GetScenePointReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetScenePointReq_CmdId>(
    GetScenePointReq_CmdId_descriptor(), name, value);
}
enum GetScenePointRsp_CmdId {
  GetScenePointRsp_CmdId_NONE = 0,
  GetScenePointRsp_CmdId_CMD_ID = 215,
  GetScenePointRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetScenePointRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetScenePointRsp_CmdId_GetScenePointRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetScenePointRsp_CmdId_GetScenePointRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetScenePointRsp_CmdId_IsValid(int value);
const GetScenePointRsp_CmdId GetScenePointRsp_CmdId_CmdId_MIN = GetScenePointRsp_CmdId_NONE;
const GetScenePointRsp_CmdId GetScenePointRsp_CmdId_CmdId_MAX = GetScenePointRsp_CmdId_CMD_ID;
const int GetScenePointRsp_CmdId_CmdId_ARRAYSIZE = GetScenePointRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetScenePointRsp_CmdId_descriptor();
inline const ::std::string& GetScenePointRsp_CmdId_Name(GetScenePointRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetScenePointRsp_CmdId_descriptor(), value);
}
inline bool GetScenePointRsp_CmdId_Parse(
    const ::std::string& name, GetScenePointRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetScenePointRsp_CmdId>(
    GetScenePointRsp_CmdId_descriptor(), name, value);
}
enum EnterTransPointRegionNotify_CmdId {
  EnterTransPointRegionNotify_CmdId_NONE = 0,
  EnterTransPointRegionNotify_CmdId_CMD_ID = 216,
  EnterTransPointRegionNotify_CmdId_ENET_CHANNEL_ID = 0,
  EnterTransPointRegionNotify_CmdId_ENET_IS_RELIABLE = 1,
  EnterTransPointRegionNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EnterTransPointRegionNotify_CmdId_EnterTransPointRegionNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterTransPointRegionNotify_CmdId_EnterTransPointRegionNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterTransPointRegionNotify_CmdId_IsValid(int value);
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify_CmdId_CmdId_MIN = EnterTransPointRegionNotify_CmdId_NONE;
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify_CmdId_CmdId_MAX = EnterTransPointRegionNotify_CmdId_CMD_ID;
const int EnterTransPointRegionNotify_CmdId_CmdId_ARRAYSIZE = EnterTransPointRegionNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterTransPointRegionNotify_CmdId_descriptor();
inline const ::std::string& EnterTransPointRegionNotify_CmdId_Name(EnterTransPointRegionNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterTransPointRegionNotify_CmdId_descriptor(), value);
}
inline bool EnterTransPointRegionNotify_CmdId_Parse(
    const ::std::string& name, EnterTransPointRegionNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterTransPointRegionNotify_CmdId>(
    EnterTransPointRegionNotify_CmdId_descriptor(), name, value);
}
enum ExitTransPointRegionNotify_CmdId {
  ExitTransPointRegionNotify_CmdId_NONE = 0,
  ExitTransPointRegionNotify_CmdId_CMD_ID = 217,
  ExitTransPointRegionNotify_CmdId_ENET_CHANNEL_ID = 0,
  ExitTransPointRegionNotify_CmdId_ENET_IS_RELIABLE = 1,
  ExitTransPointRegionNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ExitTransPointRegionNotify_CmdId_ExitTransPointRegionNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExitTransPointRegionNotify_CmdId_ExitTransPointRegionNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExitTransPointRegionNotify_CmdId_IsValid(int value);
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify_CmdId_CmdId_MIN = ExitTransPointRegionNotify_CmdId_NONE;
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify_CmdId_CmdId_MAX = ExitTransPointRegionNotify_CmdId_CMD_ID;
const int ExitTransPointRegionNotify_CmdId_CmdId_ARRAYSIZE = ExitTransPointRegionNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExitTransPointRegionNotify_CmdId_descriptor();
inline const ::std::string& ExitTransPointRegionNotify_CmdId_Name(ExitTransPointRegionNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExitTransPointRegionNotify_CmdId_descriptor(), value);
}
inline bool ExitTransPointRegionNotify_CmdId_Parse(
    const ::std::string& name, ExitTransPointRegionNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExitTransPointRegionNotify_CmdId>(
    ExitTransPointRegionNotify_CmdId_descriptor(), name, value);
}
enum ScenePointUnlockNotify_CmdId {
  ScenePointUnlockNotify_CmdId_NONE = 0,
  ScenePointUnlockNotify_CmdId_CMD_ID = 218,
  ScenePointUnlockNotify_CmdId_ENET_CHANNEL_ID = 0,
  ScenePointUnlockNotify_CmdId_ENET_IS_RELIABLE = 1,
  ScenePointUnlockNotify_CmdId_ScenePointUnlockNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScenePointUnlockNotify_CmdId_ScenePointUnlockNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScenePointUnlockNotify_CmdId_IsValid(int value);
const ScenePointUnlockNotify_CmdId ScenePointUnlockNotify_CmdId_CmdId_MIN = ScenePointUnlockNotify_CmdId_NONE;
const ScenePointUnlockNotify_CmdId ScenePointUnlockNotify_CmdId_CmdId_MAX = ScenePointUnlockNotify_CmdId_CMD_ID;
const int ScenePointUnlockNotify_CmdId_CmdId_ARRAYSIZE = ScenePointUnlockNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScenePointUnlockNotify_CmdId_descriptor();
inline const ::std::string& ScenePointUnlockNotify_CmdId_Name(ScenePointUnlockNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScenePointUnlockNotify_CmdId_descriptor(), value);
}
inline bool ScenePointUnlockNotify_CmdId_Parse(
    const ::std::string& name, ScenePointUnlockNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScenePointUnlockNotify_CmdId>(
    ScenePointUnlockNotify_CmdId_descriptor(), name, value);
}
enum SceneTransToPointReq_CmdId {
  SceneTransToPointReq_CmdId_NONE = 0,
  SceneTransToPointReq_CmdId_CMD_ID = 219,
  SceneTransToPointReq_CmdId_ENET_CHANNEL_ID = 0,
  SceneTransToPointReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneTransToPointReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneTransToPointReq_CmdId_SceneTransToPointReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneTransToPointReq_CmdId_SceneTransToPointReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneTransToPointReq_CmdId_IsValid(int value);
const SceneTransToPointReq_CmdId SceneTransToPointReq_CmdId_CmdId_MIN = SceneTransToPointReq_CmdId_NONE;
const SceneTransToPointReq_CmdId SceneTransToPointReq_CmdId_CmdId_MAX = SceneTransToPointReq_CmdId_CMD_ID;
const int SceneTransToPointReq_CmdId_CmdId_ARRAYSIZE = SceneTransToPointReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneTransToPointReq_CmdId_descriptor();
inline const ::std::string& SceneTransToPointReq_CmdId_Name(SceneTransToPointReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneTransToPointReq_CmdId_descriptor(), value);
}
inline bool SceneTransToPointReq_CmdId_Parse(
    const ::std::string& name, SceneTransToPointReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneTransToPointReq_CmdId>(
    SceneTransToPointReq_CmdId_descriptor(), name, value);
}
enum SceneTransToPointRsp_CmdId {
  SceneTransToPointRsp_CmdId_NONE = 0,
  SceneTransToPointRsp_CmdId_CMD_ID = 220,
  SceneTransToPointRsp_CmdId_ENET_CHANNEL_ID = 0,
  SceneTransToPointRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneTransToPointRsp_CmdId_SceneTransToPointRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneTransToPointRsp_CmdId_SceneTransToPointRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneTransToPointRsp_CmdId_IsValid(int value);
const SceneTransToPointRsp_CmdId SceneTransToPointRsp_CmdId_CmdId_MIN = SceneTransToPointRsp_CmdId_NONE;
const SceneTransToPointRsp_CmdId SceneTransToPointRsp_CmdId_CmdId_MAX = SceneTransToPointRsp_CmdId_CMD_ID;
const int SceneTransToPointRsp_CmdId_CmdId_ARRAYSIZE = SceneTransToPointRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneTransToPointRsp_CmdId_descriptor();
inline const ::std::string& SceneTransToPointRsp_CmdId_Name(SceneTransToPointRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneTransToPointRsp_CmdId_descriptor(), value);
}
inline bool SceneTransToPointRsp_CmdId_Parse(
    const ::std::string& name, SceneTransToPointRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneTransToPointRsp_CmdId>(
    SceneTransToPointRsp_CmdId_descriptor(), name, value);
}
enum EntityJumpNotify_CmdId {
  EntityJumpNotify_CmdId_NONE = 0,
  EntityJumpNotify_CmdId_CMD_ID = 221,
  EntityJumpNotify_CmdId_ENET_CHANNEL_ID = 0,
  EntityJumpNotify_CmdId_ENET_IS_RELIABLE = 1,
  EntityJumpNotify_CmdId_EntityJumpNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityJumpNotify_CmdId_EntityJumpNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityJumpNotify_CmdId_IsValid(int value);
const EntityJumpNotify_CmdId EntityJumpNotify_CmdId_CmdId_MIN = EntityJumpNotify_CmdId_NONE;
const EntityJumpNotify_CmdId EntityJumpNotify_CmdId_CmdId_MAX = EntityJumpNotify_CmdId_CMD_ID;
const int EntityJumpNotify_CmdId_CmdId_ARRAYSIZE = EntityJumpNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityJumpNotify_CmdId_descriptor();
inline const ::std::string& EntityJumpNotify_CmdId_Name(EntityJumpNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityJumpNotify_CmdId_descriptor(), value);
}
inline bool EntityJumpNotify_CmdId_Parse(
    const ::std::string& name, EntityJumpNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityJumpNotify_CmdId>(
    EntityJumpNotify_CmdId_descriptor(), name, value);
}
enum EntityJumpNotify_Type {
  EntityJumpNotify_Type_NULL_ = 0,
  EntityJumpNotify_Type_ACTIVE = 1,
  EntityJumpNotify_Type_PASSIVE = 2,
  EntityJumpNotify_Type_EntityJumpNotify_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityJumpNotify_Type_EntityJumpNotify_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityJumpNotify_Type_IsValid(int value);
const EntityJumpNotify_Type EntityJumpNotify_Type_Type_MIN = EntityJumpNotify_Type_NULL_;
const EntityJumpNotify_Type EntityJumpNotify_Type_Type_MAX = EntityJumpNotify_Type_PASSIVE;
const int EntityJumpNotify_Type_Type_ARRAYSIZE = EntityJumpNotify_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityJumpNotify_Type_descriptor();
inline const ::std::string& EntityJumpNotify_Type_Name(EntityJumpNotify_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityJumpNotify_Type_descriptor(), value);
}
inline bool EntityJumpNotify_Type_Parse(
    const ::std::string& name, EntityJumpNotify_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityJumpNotify_Type>(
    EntityJumpNotify_Type_descriptor(), name, value);
}
enum GetSceneAreaReq_CmdId {
  GetSceneAreaReq_CmdId_NONE = 0,
  GetSceneAreaReq_CmdId_CMD_ID = 222,
  GetSceneAreaReq_CmdId_ENET_CHANNEL_ID = 0,
  GetSceneAreaReq_CmdId_ENET_IS_RELIABLE = 1,
  GetSceneAreaReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetSceneAreaReq_CmdId_GetSceneAreaReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetSceneAreaReq_CmdId_GetSceneAreaReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetSceneAreaReq_CmdId_IsValid(int value);
const GetSceneAreaReq_CmdId GetSceneAreaReq_CmdId_CmdId_MIN = GetSceneAreaReq_CmdId_NONE;
const GetSceneAreaReq_CmdId GetSceneAreaReq_CmdId_CmdId_MAX = GetSceneAreaReq_CmdId_CMD_ID;
const int GetSceneAreaReq_CmdId_CmdId_ARRAYSIZE = GetSceneAreaReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetSceneAreaReq_CmdId_descriptor();
inline const ::std::string& GetSceneAreaReq_CmdId_Name(GetSceneAreaReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetSceneAreaReq_CmdId_descriptor(), value);
}
inline bool GetSceneAreaReq_CmdId_Parse(
    const ::std::string& name, GetSceneAreaReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetSceneAreaReq_CmdId>(
    GetSceneAreaReq_CmdId_descriptor(), name, value);
}
enum GetSceneAreaRsp_CmdId {
  GetSceneAreaRsp_CmdId_NONE = 0,
  GetSceneAreaRsp_CmdId_CMD_ID = 223,
  GetSceneAreaRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetSceneAreaRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetSceneAreaRsp_CmdId_GetSceneAreaRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetSceneAreaRsp_CmdId_GetSceneAreaRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetSceneAreaRsp_CmdId_IsValid(int value);
const GetSceneAreaRsp_CmdId GetSceneAreaRsp_CmdId_CmdId_MIN = GetSceneAreaRsp_CmdId_NONE;
const GetSceneAreaRsp_CmdId GetSceneAreaRsp_CmdId_CmdId_MAX = GetSceneAreaRsp_CmdId_CMD_ID;
const int GetSceneAreaRsp_CmdId_CmdId_ARRAYSIZE = GetSceneAreaRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetSceneAreaRsp_CmdId_descriptor();
inline const ::std::string& GetSceneAreaRsp_CmdId_Name(GetSceneAreaRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetSceneAreaRsp_CmdId_descriptor(), value);
}
inline bool GetSceneAreaRsp_CmdId_Parse(
    const ::std::string& name, GetSceneAreaRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetSceneAreaRsp_CmdId>(
    GetSceneAreaRsp_CmdId_descriptor(), name, value);
}
enum SceneAreaUnlockNotify_CmdId {
  SceneAreaUnlockNotify_CmdId_NONE = 0,
  SceneAreaUnlockNotify_CmdId_CMD_ID = 224,
  SceneAreaUnlockNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneAreaUnlockNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneAreaUnlockNotify_CmdId_SceneAreaUnlockNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneAreaUnlockNotify_CmdId_SceneAreaUnlockNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneAreaUnlockNotify_CmdId_IsValid(int value);
const SceneAreaUnlockNotify_CmdId SceneAreaUnlockNotify_CmdId_CmdId_MIN = SceneAreaUnlockNotify_CmdId_NONE;
const SceneAreaUnlockNotify_CmdId SceneAreaUnlockNotify_CmdId_CmdId_MAX = SceneAreaUnlockNotify_CmdId_CMD_ID;
const int SceneAreaUnlockNotify_CmdId_CmdId_ARRAYSIZE = SceneAreaUnlockNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneAreaUnlockNotify_CmdId_descriptor();
inline const ::std::string& SceneAreaUnlockNotify_CmdId_Name(SceneAreaUnlockNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneAreaUnlockNotify_CmdId_descriptor(), value);
}
inline bool SceneAreaUnlockNotify_CmdId_Parse(
    const ::std::string& name, SceneAreaUnlockNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneAreaUnlockNotify_CmdId>(
    SceneAreaUnlockNotify_CmdId_descriptor(), name, value);
}
enum SceneEntityDrownReq_CmdId {
  SceneEntityDrownReq_CmdId_NONE = 0,
  SceneEntityDrownReq_CmdId_CMD_ID = 225,
  SceneEntityDrownReq_CmdId_ENET_CHANNEL_ID = 0,
  SceneEntityDrownReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneEntityDrownReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneEntityDrownReq_CmdId_SceneEntityDrownReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntityDrownReq_CmdId_SceneEntityDrownReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntityDrownReq_CmdId_IsValid(int value);
const SceneEntityDrownReq_CmdId SceneEntityDrownReq_CmdId_CmdId_MIN = SceneEntityDrownReq_CmdId_NONE;
const SceneEntityDrownReq_CmdId SceneEntityDrownReq_CmdId_CmdId_MAX = SceneEntityDrownReq_CmdId_CMD_ID;
const int SceneEntityDrownReq_CmdId_CmdId_ARRAYSIZE = SceneEntityDrownReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntityDrownReq_CmdId_descriptor();
inline const ::std::string& SceneEntityDrownReq_CmdId_Name(SceneEntityDrownReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntityDrownReq_CmdId_descriptor(), value);
}
inline bool SceneEntityDrownReq_CmdId_Parse(
    const ::std::string& name, SceneEntityDrownReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntityDrownReq_CmdId>(
    SceneEntityDrownReq_CmdId_descriptor(), name, value);
}
enum SceneEntityDrownRsp_CmdId {
  SceneEntityDrownRsp_CmdId_NONE = 0,
  SceneEntityDrownRsp_CmdId_CMD_ID = 226,
  SceneEntityDrownRsp_CmdId_ENET_CHANNEL_ID = 0,
  SceneEntityDrownRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneEntityDrownRsp_CmdId_SceneEntityDrownRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntityDrownRsp_CmdId_SceneEntityDrownRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntityDrownRsp_CmdId_IsValid(int value);
const SceneEntityDrownRsp_CmdId SceneEntityDrownRsp_CmdId_CmdId_MIN = SceneEntityDrownRsp_CmdId_NONE;
const SceneEntityDrownRsp_CmdId SceneEntityDrownRsp_CmdId_CmdId_MAX = SceneEntityDrownRsp_CmdId_CMD_ID;
const int SceneEntityDrownRsp_CmdId_CmdId_ARRAYSIZE = SceneEntityDrownRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntityDrownRsp_CmdId_descriptor();
inline const ::std::string& SceneEntityDrownRsp_CmdId_Name(SceneEntityDrownRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntityDrownRsp_CmdId_descriptor(), value);
}
inline bool SceneEntityDrownRsp_CmdId_Parse(
    const ::std::string& name, SceneEntityDrownRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntityDrownRsp_CmdId>(
    SceneEntityDrownRsp_CmdId_descriptor(), name, value);
}
enum SceneCreateEntityReq_CmdId {
  SceneCreateEntityReq_CmdId_NONE = 0,
  SceneCreateEntityReq_CmdId_CMD_ID = 227,
  SceneCreateEntityReq_CmdId_ENET_CHANNEL_ID = 0,
  SceneCreateEntityReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneCreateEntityReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneCreateEntityReq_CmdId_SceneCreateEntityReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneCreateEntityReq_CmdId_SceneCreateEntityReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneCreateEntityReq_CmdId_IsValid(int value);
const SceneCreateEntityReq_CmdId SceneCreateEntityReq_CmdId_CmdId_MIN = SceneCreateEntityReq_CmdId_NONE;
const SceneCreateEntityReq_CmdId SceneCreateEntityReq_CmdId_CmdId_MAX = SceneCreateEntityReq_CmdId_CMD_ID;
const int SceneCreateEntityReq_CmdId_CmdId_ARRAYSIZE = SceneCreateEntityReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneCreateEntityReq_CmdId_descriptor();
inline const ::std::string& SceneCreateEntityReq_CmdId_Name(SceneCreateEntityReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneCreateEntityReq_CmdId_descriptor(), value);
}
inline bool SceneCreateEntityReq_CmdId_Parse(
    const ::std::string& name, SceneCreateEntityReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneCreateEntityReq_CmdId>(
    SceneCreateEntityReq_CmdId_descriptor(), name, value);
}
enum SceneCreateEntityRsp_CmdId {
  SceneCreateEntityRsp_CmdId_NONE = 0,
  SceneCreateEntityRsp_CmdId_CMD_ID = 228,
  SceneCreateEntityRsp_CmdId_ENET_CHANNEL_ID = 0,
  SceneCreateEntityRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneCreateEntityRsp_CmdId_SceneCreateEntityRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneCreateEntityRsp_CmdId_SceneCreateEntityRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneCreateEntityRsp_CmdId_IsValid(int value);
const SceneCreateEntityRsp_CmdId SceneCreateEntityRsp_CmdId_CmdId_MIN = SceneCreateEntityRsp_CmdId_NONE;
const SceneCreateEntityRsp_CmdId SceneCreateEntityRsp_CmdId_CmdId_MAX = SceneCreateEntityRsp_CmdId_CMD_ID;
const int SceneCreateEntityRsp_CmdId_CmdId_ARRAYSIZE = SceneCreateEntityRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneCreateEntityRsp_CmdId_descriptor();
inline const ::std::string& SceneCreateEntityRsp_CmdId_Name(SceneCreateEntityRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneCreateEntityRsp_CmdId_descriptor(), value);
}
inline bool SceneCreateEntityRsp_CmdId_Parse(
    const ::std::string& name, SceneCreateEntityRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneCreateEntityRsp_CmdId>(
    SceneCreateEntityRsp_CmdId_descriptor(), name, value);
}
enum SceneDestroyEntityReq_CmdId {
  SceneDestroyEntityReq_CmdId_NONE = 0,
  SceneDestroyEntityReq_CmdId_CMD_ID = 229,
  SceneDestroyEntityReq_CmdId_ENET_CHANNEL_ID = 0,
  SceneDestroyEntityReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneDestroyEntityReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneDestroyEntityReq_CmdId_SceneDestroyEntityReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneDestroyEntityReq_CmdId_SceneDestroyEntityReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneDestroyEntityReq_CmdId_IsValid(int value);
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq_CmdId_CmdId_MIN = SceneDestroyEntityReq_CmdId_NONE;
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq_CmdId_CmdId_MAX = SceneDestroyEntityReq_CmdId_CMD_ID;
const int SceneDestroyEntityReq_CmdId_CmdId_ARRAYSIZE = SceneDestroyEntityReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneDestroyEntityReq_CmdId_descriptor();
inline const ::std::string& SceneDestroyEntityReq_CmdId_Name(SceneDestroyEntityReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneDestroyEntityReq_CmdId_descriptor(), value);
}
inline bool SceneDestroyEntityReq_CmdId_Parse(
    const ::std::string& name, SceneDestroyEntityReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneDestroyEntityReq_CmdId>(
    SceneDestroyEntityReq_CmdId_descriptor(), name, value);
}
enum SceneDestroyEntityRsp_CmdId {
  SceneDestroyEntityRsp_CmdId_NONE = 0,
  SceneDestroyEntityRsp_CmdId_CMD_ID = 230,
  SceneDestroyEntityRsp_CmdId_ENET_CHANNEL_ID = 0,
  SceneDestroyEntityRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneDestroyEntityRsp_CmdId_SceneDestroyEntityRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneDestroyEntityRsp_CmdId_SceneDestroyEntityRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneDestroyEntityRsp_CmdId_IsValid(int value);
const SceneDestroyEntityRsp_CmdId SceneDestroyEntityRsp_CmdId_CmdId_MIN = SceneDestroyEntityRsp_CmdId_NONE;
const SceneDestroyEntityRsp_CmdId SceneDestroyEntityRsp_CmdId_CmdId_MAX = SceneDestroyEntityRsp_CmdId_CMD_ID;
const int SceneDestroyEntityRsp_CmdId_CmdId_ARRAYSIZE = SceneDestroyEntityRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneDestroyEntityRsp_CmdId_descriptor();
inline const ::std::string& SceneDestroyEntityRsp_CmdId_Name(SceneDestroyEntityRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneDestroyEntityRsp_CmdId_descriptor(), value);
}
inline bool SceneDestroyEntityRsp_CmdId_Parse(
    const ::std::string& name, SceneDestroyEntityRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneDestroyEntityRsp_CmdId>(
    SceneDestroyEntityRsp_CmdId_descriptor(), name, value);
}
enum SceneForceUnlockNotify_CmdId {
  SceneForceUnlockNotify_CmdId_NONE = 0,
  SceneForceUnlockNotify_CmdId_CMD_ID = 231,
  SceneForceUnlockNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneForceUnlockNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneForceUnlockNotify_CmdId_SceneForceUnlockNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneForceUnlockNotify_CmdId_SceneForceUnlockNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneForceUnlockNotify_CmdId_IsValid(int value);
const SceneForceUnlockNotify_CmdId SceneForceUnlockNotify_CmdId_CmdId_MIN = SceneForceUnlockNotify_CmdId_NONE;
const SceneForceUnlockNotify_CmdId SceneForceUnlockNotify_CmdId_CmdId_MAX = SceneForceUnlockNotify_CmdId_CMD_ID;
const int SceneForceUnlockNotify_CmdId_CmdId_ARRAYSIZE = SceneForceUnlockNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneForceUnlockNotify_CmdId_descriptor();
inline const ::std::string& SceneForceUnlockNotify_CmdId_Name(SceneForceUnlockNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneForceUnlockNotify_CmdId_descriptor(), value);
}
inline bool SceneForceUnlockNotify_CmdId_Parse(
    const ::std::string& name, SceneForceUnlockNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneForceUnlockNotify_CmdId>(
    SceneForceUnlockNotify_CmdId_descriptor(), name, value);
}
enum SceneForceLockNotify_CmdId {
  SceneForceLockNotify_CmdId_NONE = 0,
  SceneForceLockNotify_CmdId_CMD_ID = 232,
  SceneForceLockNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneForceLockNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneForceLockNotify_CmdId_SceneForceLockNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneForceLockNotify_CmdId_SceneForceLockNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneForceLockNotify_CmdId_IsValid(int value);
const SceneForceLockNotify_CmdId SceneForceLockNotify_CmdId_CmdId_MIN = SceneForceLockNotify_CmdId_NONE;
const SceneForceLockNotify_CmdId SceneForceLockNotify_CmdId_CmdId_MAX = SceneForceLockNotify_CmdId_CMD_ID;
const int SceneForceLockNotify_CmdId_CmdId_ARRAYSIZE = SceneForceLockNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneForceLockNotify_CmdId_descriptor();
inline const ::std::string& SceneForceLockNotify_CmdId_Name(SceneForceLockNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneForceLockNotify_CmdId_descriptor(), value);
}
inline bool SceneForceLockNotify_CmdId_Parse(
    const ::std::string& name, SceneForceLockNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneForceLockNotify_CmdId>(
    SceneForceLockNotify_CmdId_descriptor(), name, value);
}
enum EnterWorldAreaReq_CmdId {
  EnterWorldAreaReq_CmdId_NONE = 0,
  EnterWorldAreaReq_CmdId_CMD_ID = 233,
  EnterWorldAreaReq_CmdId_ENET_CHANNEL_ID = 0,
  EnterWorldAreaReq_CmdId_ENET_IS_RELIABLE = 1,
  EnterWorldAreaReq_CmdId_IS_ALLOW_CLIENT = 1,
  EnterWorldAreaReq_CmdId_EnterWorldAreaReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterWorldAreaReq_CmdId_EnterWorldAreaReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterWorldAreaReq_CmdId_IsValid(int value);
const EnterWorldAreaReq_CmdId EnterWorldAreaReq_CmdId_CmdId_MIN = EnterWorldAreaReq_CmdId_NONE;
const EnterWorldAreaReq_CmdId EnterWorldAreaReq_CmdId_CmdId_MAX = EnterWorldAreaReq_CmdId_CMD_ID;
const int EnterWorldAreaReq_CmdId_CmdId_ARRAYSIZE = EnterWorldAreaReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterWorldAreaReq_CmdId_descriptor();
inline const ::std::string& EnterWorldAreaReq_CmdId_Name(EnterWorldAreaReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterWorldAreaReq_CmdId_descriptor(), value);
}
inline bool EnterWorldAreaReq_CmdId_Parse(
    const ::std::string& name, EnterWorldAreaReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterWorldAreaReq_CmdId>(
    EnterWorldAreaReq_CmdId_descriptor(), name, value);
}
enum EnterWorldAreaRsp_CmdId {
  EnterWorldAreaRsp_CmdId_NONE = 0,
  EnterWorldAreaRsp_CmdId_CMD_ID = 234,
  EnterWorldAreaRsp_CmdId_ENET_CHANNEL_ID = 0,
  EnterWorldAreaRsp_CmdId_ENET_IS_RELIABLE = 1,
  EnterWorldAreaRsp_CmdId_EnterWorldAreaRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterWorldAreaRsp_CmdId_EnterWorldAreaRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterWorldAreaRsp_CmdId_IsValid(int value);
const EnterWorldAreaRsp_CmdId EnterWorldAreaRsp_CmdId_CmdId_MIN = EnterWorldAreaRsp_CmdId_NONE;
const EnterWorldAreaRsp_CmdId EnterWorldAreaRsp_CmdId_CmdId_MAX = EnterWorldAreaRsp_CmdId_CMD_ID;
const int EnterWorldAreaRsp_CmdId_CmdId_ARRAYSIZE = EnterWorldAreaRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterWorldAreaRsp_CmdId_descriptor();
inline const ::std::string& EnterWorldAreaRsp_CmdId_Name(EnterWorldAreaRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterWorldAreaRsp_CmdId_descriptor(), value);
}
inline bool EnterWorldAreaRsp_CmdId_Parse(
    const ::std::string& name, EnterWorldAreaRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterWorldAreaRsp_CmdId>(
    EnterWorldAreaRsp_CmdId_descriptor(), name, value);
}
enum EntityForceSyncReq_CmdId {
  EntityForceSyncReq_CmdId_NONE = 0,
  EntityForceSyncReq_CmdId_CMD_ID = 235,
  EntityForceSyncReq_CmdId_ENET_CHANNEL_ID = 0,
  EntityForceSyncReq_CmdId_ENET_IS_RELIABLE = 1,
  EntityForceSyncReq_CmdId_IS_ALLOW_CLIENT = 1,
  EntityForceSyncReq_CmdId_EntityForceSyncReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityForceSyncReq_CmdId_EntityForceSyncReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityForceSyncReq_CmdId_IsValid(int value);
const EntityForceSyncReq_CmdId EntityForceSyncReq_CmdId_CmdId_MIN = EntityForceSyncReq_CmdId_NONE;
const EntityForceSyncReq_CmdId EntityForceSyncReq_CmdId_CmdId_MAX = EntityForceSyncReq_CmdId_CMD_ID;
const int EntityForceSyncReq_CmdId_CmdId_ARRAYSIZE = EntityForceSyncReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityForceSyncReq_CmdId_descriptor();
inline const ::std::string& EntityForceSyncReq_CmdId_Name(EntityForceSyncReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityForceSyncReq_CmdId_descriptor(), value);
}
inline bool EntityForceSyncReq_CmdId_Parse(
    const ::std::string& name, EntityForceSyncReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityForceSyncReq_CmdId>(
    EntityForceSyncReq_CmdId_descriptor(), name, value);
}
enum EntityForceSyncRsp_CmdId {
  EntityForceSyncRsp_CmdId_NONE = 0,
  EntityForceSyncRsp_CmdId_CMD_ID = 236,
  EntityForceSyncRsp_CmdId_ENET_CHANNEL_ID = 0,
  EntityForceSyncRsp_CmdId_ENET_IS_RELIABLE = 1,
  EntityForceSyncRsp_CmdId_EntityForceSyncRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityForceSyncRsp_CmdId_EntityForceSyncRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityForceSyncRsp_CmdId_IsValid(int value);
const EntityForceSyncRsp_CmdId EntityForceSyncRsp_CmdId_CmdId_MIN = EntityForceSyncRsp_CmdId_NONE;
const EntityForceSyncRsp_CmdId EntityForceSyncRsp_CmdId_CmdId_MAX = EntityForceSyncRsp_CmdId_CMD_ID;
const int EntityForceSyncRsp_CmdId_CmdId_ARRAYSIZE = EntityForceSyncRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityForceSyncRsp_CmdId_descriptor();
inline const ::std::string& EntityForceSyncRsp_CmdId_Name(EntityForceSyncRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityForceSyncRsp_CmdId_descriptor(), value);
}
inline bool EntityForceSyncRsp_CmdId_Parse(
    const ::std::string& name, EntityForceSyncRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityForceSyncRsp_CmdId>(
    EntityForceSyncRsp_CmdId_descriptor(), name, value);
}
enum SceneAreaExploreNotify_CmdId {
  SceneAreaExploreNotify_CmdId_NONE = 0,
  SceneAreaExploreNotify_CmdId_CMD_ID = 237,
  SceneAreaExploreNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneAreaExploreNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneAreaExploreNotify_CmdId_SceneAreaExploreNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneAreaExploreNotify_CmdId_SceneAreaExploreNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneAreaExploreNotify_CmdId_IsValid(int value);
const SceneAreaExploreNotify_CmdId SceneAreaExploreNotify_CmdId_CmdId_MIN = SceneAreaExploreNotify_CmdId_NONE;
const SceneAreaExploreNotify_CmdId SceneAreaExploreNotify_CmdId_CmdId_MAX = SceneAreaExploreNotify_CmdId_CMD_ID;
const int SceneAreaExploreNotify_CmdId_CmdId_ARRAYSIZE = SceneAreaExploreNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneAreaExploreNotify_CmdId_descriptor();
inline const ::std::string& SceneAreaExploreNotify_CmdId_Name(SceneAreaExploreNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneAreaExploreNotify_CmdId_descriptor(), value);
}
inline bool SceneAreaExploreNotify_CmdId_Parse(
    const ::std::string& name, SceneAreaExploreNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneAreaExploreNotify_CmdId>(
    SceneAreaExploreNotify_CmdId_descriptor(), name, value);
}
enum SceneGetAreaExplorePercentReq_CmdId {
  SceneGetAreaExplorePercentReq_CmdId_NONE = 0,
  SceneGetAreaExplorePercentReq_CmdId_CMD_ID = 238,
  SceneGetAreaExplorePercentReq_CmdId_ENET_CHANNEL_ID = 0,
  SceneGetAreaExplorePercentReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneGetAreaExplorePercentReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneGetAreaExplorePercentReq_CmdId_SceneGetAreaExplorePercentReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneGetAreaExplorePercentReq_CmdId_SceneGetAreaExplorePercentReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneGetAreaExplorePercentReq_CmdId_IsValid(int value);
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq_CmdId_CmdId_MIN = SceneGetAreaExplorePercentReq_CmdId_NONE;
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq_CmdId_CmdId_MAX = SceneGetAreaExplorePercentReq_CmdId_CMD_ID;
const int SceneGetAreaExplorePercentReq_CmdId_CmdId_ARRAYSIZE = SceneGetAreaExplorePercentReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneGetAreaExplorePercentReq_CmdId_descriptor();
inline const ::std::string& SceneGetAreaExplorePercentReq_CmdId_Name(SceneGetAreaExplorePercentReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneGetAreaExplorePercentReq_CmdId_descriptor(), value);
}
inline bool SceneGetAreaExplorePercentReq_CmdId_Parse(
    const ::std::string& name, SceneGetAreaExplorePercentReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneGetAreaExplorePercentReq_CmdId>(
    SceneGetAreaExplorePercentReq_CmdId_descriptor(), name, value);
}
enum SceneGetAreaExplorePercentRsp_CmdId {
  SceneGetAreaExplorePercentRsp_CmdId_NONE = 0,
  SceneGetAreaExplorePercentRsp_CmdId_CMD_ID = 239,
  SceneGetAreaExplorePercentRsp_CmdId_ENET_CHANNEL_ID = 0,
  SceneGetAreaExplorePercentRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneGetAreaExplorePercentRsp_CmdId_SceneGetAreaExplorePercentRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneGetAreaExplorePercentRsp_CmdId_SceneGetAreaExplorePercentRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneGetAreaExplorePercentRsp_CmdId_IsValid(int value);
const SceneGetAreaExplorePercentRsp_CmdId SceneGetAreaExplorePercentRsp_CmdId_CmdId_MIN = SceneGetAreaExplorePercentRsp_CmdId_NONE;
const SceneGetAreaExplorePercentRsp_CmdId SceneGetAreaExplorePercentRsp_CmdId_CmdId_MAX = SceneGetAreaExplorePercentRsp_CmdId_CMD_ID;
const int SceneGetAreaExplorePercentRsp_CmdId_CmdId_ARRAYSIZE = SceneGetAreaExplorePercentRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneGetAreaExplorePercentRsp_CmdId_descriptor();
inline const ::std::string& SceneGetAreaExplorePercentRsp_CmdId_Name(SceneGetAreaExplorePercentRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneGetAreaExplorePercentRsp_CmdId_descriptor(), value);
}
inline bool SceneGetAreaExplorePercentRsp_CmdId_Parse(
    const ::std::string& name, SceneGetAreaExplorePercentRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneGetAreaExplorePercentRsp_CmdId>(
    SceneGetAreaExplorePercentRsp_CmdId_descriptor(), name, value);
}
enum ClientTransmitReq_CmdId {
  ClientTransmitReq_CmdId_NONE = 0,
  ClientTransmitReq_CmdId_CMD_ID = 240,
  ClientTransmitReq_CmdId_ENET_CHANNEL_ID = 0,
  ClientTransmitReq_CmdId_ENET_IS_RELIABLE = 1,
  ClientTransmitReq_CmdId_IS_ALLOW_CLIENT = 1,
  ClientTransmitReq_CmdId_ClientTransmitReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientTransmitReq_CmdId_ClientTransmitReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientTransmitReq_CmdId_IsValid(int value);
const ClientTransmitReq_CmdId ClientTransmitReq_CmdId_CmdId_MIN = ClientTransmitReq_CmdId_NONE;
const ClientTransmitReq_CmdId ClientTransmitReq_CmdId_CmdId_MAX = ClientTransmitReq_CmdId_CMD_ID;
const int ClientTransmitReq_CmdId_CmdId_ARRAYSIZE = ClientTransmitReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientTransmitReq_CmdId_descriptor();
inline const ::std::string& ClientTransmitReq_CmdId_Name(ClientTransmitReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientTransmitReq_CmdId_descriptor(), value);
}
inline bool ClientTransmitReq_CmdId_Parse(
    const ::std::string& name, ClientTransmitReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientTransmitReq_CmdId>(
    ClientTransmitReq_CmdId_descriptor(), name, value);
}
enum ClientTransmitRsp_CmdId {
  ClientTransmitRsp_CmdId_NONE = 0,
  ClientTransmitRsp_CmdId_CMD_ID = 241,
  ClientTransmitRsp_CmdId_ENET_CHANNEL_ID = 0,
  ClientTransmitRsp_CmdId_ENET_IS_RELIABLE = 1,
  ClientTransmitRsp_CmdId_ClientTransmitRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientTransmitRsp_CmdId_ClientTransmitRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientTransmitRsp_CmdId_IsValid(int value);
const ClientTransmitRsp_CmdId ClientTransmitRsp_CmdId_CmdId_MIN = ClientTransmitRsp_CmdId_NONE;
const ClientTransmitRsp_CmdId ClientTransmitRsp_CmdId_CmdId_MAX = ClientTransmitRsp_CmdId_CMD_ID;
const int ClientTransmitRsp_CmdId_CmdId_ARRAYSIZE = ClientTransmitRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientTransmitRsp_CmdId_descriptor();
inline const ::std::string& ClientTransmitRsp_CmdId_Name(ClientTransmitRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientTransmitRsp_CmdId_descriptor(), value);
}
inline bool ClientTransmitRsp_CmdId_Parse(
    const ::std::string& name, ClientTransmitRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientTransmitRsp_CmdId>(
    ClientTransmitRsp_CmdId_descriptor(), name, value);
}
enum EnterSceneWeatherAreaNotify_CmdId {
  EnterSceneWeatherAreaNotify_CmdId_NONE = 0,
  EnterSceneWeatherAreaNotify_CmdId_CMD_ID = 242,
  EnterSceneWeatherAreaNotify_CmdId_ENET_CHANNEL_ID = 0,
  EnterSceneWeatherAreaNotify_CmdId_ENET_IS_RELIABLE = 1,
  EnterSceneWeatherAreaNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EnterSceneWeatherAreaNotify_CmdId_EnterSceneWeatherAreaNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterSceneWeatherAreaNotify_CmdId_EnterSceneWeatherAreaNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterSceneWeatherAreaNotify_CmdId_IsValid(int value);
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify_CmdId_CmdId_MIN = EnterSceneWeatherAreaNotify_CmdId_NONE;
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify_CmdId_CmdId_MAX = EnterSceneWeatherAreaNotify_CmdId_CMD_ID;
const int EnterSceneWeatherAreaNotify_CmdId_CmdId_ARRAYSIZE = EnterSceneWeatherAreaNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterSceneWeatherAreaNotify_CmdId_descriptor();
inline const ::std::string& EnterSceneWeatherAreaNotify_CmdId_Name(EnterSceneWeatherAreaNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterSceneWeatherAreaNotify_CmdId_descriptor(), value);
}
inline bool EnterSceneWeatherAreaNotify_CmdId_Parse(
    const ::std::string& name, EnterSceneWeatherAreaNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterSceneWeatherAreaNotify_CmdId>(
    EnterSceneWeatherAreaNotify_CmdId_descriptor(), name, value);
}
enum ExitSceneWeatherAreaNotify_CmdId {
  ExitSceneWeatherAreaNotify_CmdId_NONE = 0,
  ExitSceneWeatherAreaNotify_CmdId_CMD_ID = 243,
  ExitSceneWeatherAreaNotify_CmdId_ENET_CHANNEL_ID = 0,
  ExitSceneWeatherAreaNotify_CmdId_ENET_IS_RELIABLE = 1,
  ExitSceneWeatherAreaNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ExitSceneWeatherAreaNotify_CmdId_ExitSceneWeatherAreaNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExitSceneWeatherAreaNotify_CmdId_ExitSceneWeatherAreaNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExitSceneWeatherAreaNotify_CmdId_IsValid(int value);
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify_CmdId_CmdId_MIN = ExitSceneWeatherAreaNotify_CmdId_NONE;
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify_CmdId_CmdId_MAX = ExitSceneWeatherAreaNotify_CmdId_CMD_ID;
const int ExitSceneWeatherAreaNotify_CmdId_CmdId_ARRAYSIZE = ExitSceneWeatherAreaNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExitSceneWeatherAreaNotify_CmdId_descriptor();
inline const ::std::string& ExitSceneWeatherAreaNotify_CmdId_Name(ExitSceneWeatherAreaNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExitSceneWeatherAreaNotify_CmdId_descriptor(), value);
}
inline bool ExitSceneWeatherAreaNotify_CmdId_Parse(
    const ::std::string& name, ExitSceneWeatherAreaNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExitSceneWeatherAreaNotify_CmdId>(
    ExitSceneWeatherAreaNotify_CmdId_descriptor(), name, value);
}
enum SceneAreaWeatherNotify_CmdId {
  SceneAreaWeatherNotify_CmdId_NONE = 0,
  SceneAreaWeatherNotify_CmdId_CMD_ID = 244,
  SceneAreaWeatherNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneAreaWeatherNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneAreaWeatherNotify_CmdId_SceneAreaWeatherNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneAreaWeatherNotify_CmdId_SceneAreaWeatherNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneAreaWeatherNotify_CmdId_IsValid(int value);
const SceneAreaWeatherNotify_CmdId SceneAreaWeatherNotify_CmdId_CmdId_MIN = SceneAreaWeatherNotify_CmdId_NONE;
const SceneAreaWeatherNotify_CmdId SceneAreaWeatherNotify_CmdId_CmdId_MAX = SceneAreaWeatherNotify_CmdId_CMD_ID;
const int SceneAreaWeatherNotify_CmdId_CmdId_ARRAYSIZE = SceneAreaWeatherNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneAreaWeatherNotify_CmdId_descriptor();
inline const ::std::string& SceneAreaWeatherNotify_CmdId_Name(SceneAreaWeatherNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneAreaWeatherNotify_CmdId_descriptor(), value);
}
inline bool SceneAreaWeatherNotify_CmdId_Parse(
    const ::std::string& name, SceneAreaWeatherNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneAreaWeatherNotify_CmdId>(
    SceneAreaWeatherNotify_CmdId_descriptor(), name, value);
}
enum ScenePlayerInfoNotify_CmdId {
  ScenePlayerInfoNotify_CmdId_NONE = 0,
  ScenePlayerInfoNotify_CmdId_CMD_ID = 245,
  ScenePlayerInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  ScenePlayerInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  ScenePlayerInfoNotify_CmdId_ScenePlayerInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScenePlayerInfoNotify_CmdId_ScenePlayerInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScenePlayerInfoNotify_CmdId_IsValid(int value);
const ScenePlayerInfoNotify_CmdId ScenePlayerInfoNotify_CmdId_CmdId_MIN = ScenePlayerInfoNotify_CmdId_NONE;
const ScenePlayerInfoNotify_CmdId ScenePlayerInfoNotify_CmdId_CmdId_MAX = ScenePlayerInfoNotify_CmdId_CMD_ID;
const int ScenePlayerInfoNotify_CmdId_CmdId_ARRAYSIZE = ScenePlayerInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScenePlayerInfoNotify_CmdId_descriptor();
inline const ::std::string& ScenePlayerInfoNotify_CmdId_Name(ScenePlayerInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScenePlayerInfoNotify_CmdId_descriptor(), value);
}
inline bool ScenePlayerInfoNotify_CmdId_Parse(
    const ::std::string& name, ScenePlayerInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScenePlayerInfoNotify_CmdId>(
    ScenePlayerInfoNotify_CmdId_descriptor(), name, value);
}
enum WorldPlayerLocationNotify_CmdId {
  WorldPlayerLocationNotify_CmdId_NONE = 0,
  WorldPlayerLocationNotify_CmdId_CMD_ID = 246,
  WorldPlayerLocationNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldPlayerLocationNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldPlayerLocationNotify_CmdId_WorldPlayerLocationNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldPlayerLocationNotify_CmdId_WorldPlayerLocationNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldPlayerLocationNotify_CmdId_IsValid(int value);
const WorldPlayerLocationNotify_CmdId WorldPlayerLocationNotify_CmdId_CmdId_MIN = WorldPlayerLocationNotify_CmdId_NONE;
const WorldPlayerLocationNotify_CmdId WorldPlayerLocationNotify_CmdId_CmdId_MAX = WorldPlayerLocationNotify_CmdId_CMD_ID;
const int WorldPlayerLocationNotify_CmdId_CmdId_ARRAYSIZE = WorldPlayerLocationNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldPlayerLocationNotify_CmdId_descriptor();
inline const ::std::string& WorldPlayerLocationNotify_CmdId_Name(WorldPlayerLocationNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldPlayerLocationNotify_CmdId_descriptor(), value);
}
inline bool WorldPlayerLocationNotify_CmdId_Parse(
    const ::std::string& name, WorldPlayerLocationNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldPlayerLocationNotify_CmdId>(
    WorldPlayerLocationNotify_CmdId_descriptor(), name, value);
}
enum BeginCameraSceneLookNotify_CmdId {
  BeginCameraSceneLookNotify_CmdId_NONE = 0,
  BeginCameraSceneLookNotify_CmdId_CMD_ID = 247,
  BeginCameraSceneLookNotify_CmdId_ENET_CHANNEL_ID = 0,
  BeginCameraSceneLookNotify_CmdId_ENET_IS_RELIABLE = 1,
  BeginCameraSceneLookNotify_CmdId_BeginCameraSceneLookNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BeginCameraSceneLookNotify_CmdId_BeginCameraSceneLookNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BeginCameraSceneLookNotify_CmdId_IsValid(int value);
const BeginCameraSceneLookNotify_CmdId BeginCameraSceneLookNotify_CmdId_CmdId_MIN = BeginCameraSceneLookNotify_CmdId_NONE;
const BeginCameraSceneLookNotify_CmdId BeginCameraSceneLookNotify_CmdId_CmdId_MAX = BeginCameraSceneLookNotify_CmdId_CMD_ID;
const int BeginCameraSceneLookNotify_CmdId_CmdId_ARRAYSIZE = BeginCameraSceneLookNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BeginCameraSceneLookNotify_CmdId_descriptor();
inline const ::std::string& BeginCameraSceneLookNotify_CmdId_Name(BeginCameraSceneLookNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BeginCameraSceneLookNotify_CmdId_descriptor(), value);
}
inline bool BeginCameraSceneLookNotify_CmdId_Parse(
    const ::std::string& name, BeginCameraSceneLookNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BeginCameraSceneLookNotify_CmdId>(
    BeginCameraSceneLookNotify_CmdId_descriptor(), name, value);
}
enum EndCameraSceneLookNotify_CmdId {
  EndCameraSceneLookNotify_CmdId_NONE = 0,
  EndCameraSceneLookNotify_CmdId_CMD_ID = 248,
  EndCameraSceneLookNotify_CmdId_ENET_CHANNEL_ID = 0,
  EndCameraSceneLookNotify_CmdId_ENET_IS_RELIABLE = 1,
  EndCameraSceneLookNotify_CmdId_EndCameraSceneLookNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EndCameraSceneLookNotify_CmdId_EndCameraSceneLookNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EndCameraSceneLookNotify_CmdId_IsValid(int value);
const EndCameraSceneLookNotify_CmdId EndCameraSceneLookNotify_CmdId_CmdId_MIN = EndCameraSceneLookNotify_CmdId_NONE;
const EndCameraSceneLookNotify_CmdId EndCameraSceneLookNotify_CmdId_CmdId_MAX = EndCameraSceneLookNotify_CmdId_CMD_ID;
const int EndCameraSceneLookNotify_CmdId_CmdId_ARRAYSIZE = EndCameraSceneLookNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EndCameraSceneLookNotify_CmdId_descriptor();
inline const ::std::string& EndCameraSceneLookNotify_CmdId_Name(EndCameraSceneLookNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EndCameraSceneLookNotify_CmdId_descriptor(), value);
}
inline bool EndCameraSceneLookNotify_CmdId_Parse(
    const ::std::string& name, EndCameraSceneLookNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EndCameraSceneLookNotify_CmdId>(
    EndCameraSceneLookNotify_CmdId_descriptor(), name, value);
}
enum MarkEntityInMinMapNotify_CmdId {
  MarkEntityInMinMapNotify_CmdId_NONE = 0,
  MarkEntityInMinMapNotify_CmdId_CMD_ID = 249,
  MarkEntityInMinMapNotify_CmdId_ENET_CHANNEL_ID = 0,
  MarkEntityInMinMapNotify_CmdId_ENET_IS_RELIABLE = 1,
  MarkEntityInMinMapNotify_CmdId_MarkEntityInMinMapNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MarkEntityInMinMapNotify_CmdId_MarkEntityInMinMapNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MarkEntityInMinMapNotify_CmdId_IsValid(int value);
const MarkEntityInMinMapNotify_CmdId MarkEntityInMinMapNotify_CmdId_CmdId_MIN = MarkEntityInMinMapNotify_CmdId_NONE;
const MarkEntityInMinMapNotify_CmdId MarkEntityInMinMapNotify_CmdId_CmdId_MAX = MarkEntityInMinMapNotify_CmdId_CMD_ID;
const int MarkEntityInMinMapNotify_CmdId_CmdId_ARRAYSIZE = MarkEntityInMinMapNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarkEntityInMinMapNotify_CmdId_descriptor();
inline const ::std::string& MarkEntityInMinMapNotify_CmdId_Name(MarkEntityInMinMapNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarkEntityInMinMapNotify_CmdId_descriptor(), value);
}
inline bool MarkEntityInMinMapNotify_CmdId_Parse(
    const ::std::string& name, MarkEntityInMinMapNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarkEntityInMinMapNotify_CmdId>(
    MarkEntityInMinMapNotify_CmdId_descriptor(), name, value);
}
enum UnmarkEntityInMinMapNotify_CmdId {
  UnmarkEntityInMinMapNotify_CmdId_NONE = 0,
  UnmarkEntityInMinMapNotify_CmdId_CMD_ID = 250,
  UnmarkEntityInMinMapNotify_CmdId_ENET_CHANNEL_ID = 0,
  UnmarkEntityInMinMapNotify_CmdId_ENET_IS_RELIABLE = 1,
  UnmarkEntityInMinMapNotify_CmdId_UnmarkEntityInMinMapNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnmarkEntityInMinMapNotify_CmdId_UnmarkEntityInMinMapNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnmarkEntityInMinMapNotify_CmdId_IsValid(int value);
const UnmarkEntityInMinMapNotify_CmdId UnmarkEntityInMinMapNotify_CmdId_CmdId_MIN = UnmarkEntityInMinMapNotify_CmdId_NONE;
const UnmarkEntityInMinMapNotify_CmdId UnmarkEntityInMinMapNotify_CmdId_CmdId_MAX = UnmarkEntityInMinMapNotify_CmdId_CMD_ID;
const int UnmarkEntityInMinMapNotify_CmdId_CmdId_ARRAYSIZE = UnmarkEntityInMinMapNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnmarkEntityInMinMapNotify_CmdId_descriptor();
inline const ::std::string& UnmarkEntityInMinMapNotify_CmdId_Name(UnmarkEntityInMinMapNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnmarkEntityInMinMapNotify_CmdId_descriptor(), value);
}
inline bool UnmarkEntityInMinMapNotify_CmdId_Parse(
    const ::std::string& name, UnmarkEntityInMinMapNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnmarkEntityInMinMapNotify_CmdId>(
    UnmarkEntityInMinMapNotify_CmdId_descriptor(), name, value);
}
enum DropSubfieldReq_CmdId {
  DropSubfieldReq_CmdId_NONE = 0,
  DropSubfieldReq_CmdId_CMD_ID = 251,
  DropSubfieldReq_CmdId_ENET_CHANNEL_ID = 0,
  DropSubfieldReq_CmdId_ENET_IS_RELIABLE = 1,
  DropSubfieldReq_CmdId_IS_ALLOW_CLIENT = 1,
  DropSubfieldReq_CmdId_DropSubfieldReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DropSubfieldReq_CmdId_DropSubfieldReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DropSubfieldReq_CmdId_IsValid(int value);
const DropSubfieldReq_CmdId DropSubfieldReq_CmdId_CmdId_MIN = DropSubfieldReq_CmdId_NONE;
const DropSubfieldReq_CmdId DropSubfieldReq_CmdId_CmdId_MAX = DropSubfieldReq_CmdId_CMD_ID;
const int DropSubfieldReq_CmdId_CmdId_ARRAYSIZE = DropSubfieldReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DropSubfieldReq_CmdId_descriptor();
inline const ::std::string& DropSubfieldReq_CmdId_Name(DropSubfieldReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DropSubfieldReq_CmdId_descriptor(), value);
}
inline bool DropSubfieldReq_CmdId_Parse(
    const ::std::string& name, DropSubfieldReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DropSubfieldReq_CmdId>(
    DropSubfieldReq_CmdId_descriptor(), name, value);
}
enum DropSubfieldRsp_CmdId {
  DropSubfieldRsp_CmdId_NONE = 0,
  DropSubfieldRsp_CmdId_CMD_ID = 252,
  DropSubfieldRsp_CmdId_ENET_CHANNEL_ID = 0,
  DropSubfieldRsp_CmdId_ENET_IS_RELIABLE = 1,
  DropSubfieldRsp_CmdId_DropSubfieldRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DropSubfieldRsp_CmdId_DropSubfieldRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DropSubfieldRsp_CmdId_IsValid(int value);
const DropSubfieldRsp_CmdId DropSubfieldRsp_CmdId_CmdId_MIN = DropSubfieldRsp_CmdId_NONE;
const DropSubfieldRsp_CmdId DropSubfieldRsp_CmdId_CmdId_MAX = DropSubfieldRsp_CmdId_CMD_ID;
const int DropSubfieldRsp_CmdId_CmdId_ARRAYSIZE = DropSubfieldRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DropSubfieldRsp_CmdId_descriptor();
inline const ::std::string& DropSubfieldRsp_CmdId_Name(DropSubfieldRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DropSubfieldRsp_CmdId_descriptor(), value);
}
inline bool DropSubfieldRsp_CmdId_Parse(
    const ::std::string& name, DropSubfieldRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DropSubfieldRsp_CmdId>(
    DropSubfieldRsp_CmdId_descriptor(), name, value);
}
enum ExecuteGroupTriggerReq_CmdId {
  ExecuteGroupTriggerReq_CmdId_NONE = 0,
  ExecuteGroupTriggerReq_CmdId_CMD_ID = 253,
  ExecuteGroupTriggerReq_CmdId_ENET_CHANNEL_ID = 0,
  ExecuteGroupTriggerReq_CmdId_ENET_IS_RELIABLE = 1,
  ExecuteGroupTriggerReq_CmdId_IS_ALLOW_CLIENT = 1,
  ExecuteGroupTriggerReq_CmdId_ExecuteGroupTriggerReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExecuteGroupTriggerReq_CmdId_ExecuteGroupTriggerReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExecuteGroupTriggerReq_CmdId_IsValid(int value);
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq_CmdId_CmdId_MIN = ExecuteGroupTriggerReq_CmdId_NONE;
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq_CmdId_CmdId_MAX = ExecuteGroupTriggerReq_CmdId_CMD_ID;
const int ExecuteGroupTriggerReq_CmdId_CmdId_ARRAYSIZE = ExecuteGroupTriggerReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExecuteGroupTriggerReq_CmdId_descriptor();
inline const ::std::string& ExecuteGroupTriggerReq_CmdId_Name(ExecuteGroupTriggerReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExecuteGroupTriggerReq_CmdId_descriptor(), value);
}
inline bool ExecuteGroupTriggerReq_CmdId_Parse(
    const ::std::string& name, ExecuteGroupTriggerReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExecuteGroupTriggerReq_CmdId>(
    ExecuteGroupTriggerReq_CmdId_descriptor(), name, value);
}
enum ExecuteGroupTriggerRsp_CmdId {
  ExecuteGroupTriggerRsp_CmdId_NONE = 0,
  ExecuteGroupTriggerRsp_CmdId_CMD_ID = 254,
  ExecuteGroupTriggerRsp_CmdId_ENET_CHANNEL_ID = 0,
  ExecuteGroupTriggerRsp_CmdId_ENET_IS_RELIABLE = 1,
  ExecuteGroupTriggerRsp_CmdId_ExecuteGroupTriggerRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExecuteGroupTriggerRsp_CmdId_ExecuteGroupTriggerRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExecuteGroupTriggerRsp_CmdId_IsValid(int value);
const ExecuteGroupTriggerRsp_CmdId ExecuteGroupTriggerRsp_CmdId_CmdId_MIN = ExecuteGroupTriggerRsp_CmdId_NONE;
const ExecuteGroupTriggerRsp_CmdId ExecuteGroupTriggerRsp_CmdId_CmdId_MAX = ExecuteGroupTriggerRsp_CmdId_CMD_ID;
const int ExecuteGroupTriggerRsp_CmdId_CmdId_ARRAYSIZE = ExecuteGroupTriggerRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExecuteGroupTriggerRsp_CmdId_descriptor();
inline const ::std::string& ExecuteGroupTriggerRsp_CmdId_Name(ExecuteGroupTriggerRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExecuteGroupTriggerRsp_CmdId_descriptor(), value);
}
inline bool ExecuteGroupTriggerRsp_CmdId_Parse(
    const ::std::string& name, ExecuteGroupTriggerRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExecuteGroupTriggerRsp_CmdId>(
    ExecuteGroupTriggerRsp_CmdId_descriptor(), name, value);
}
enum LevelupCityReq_CmdId {
  LevelupCityReq_CmdId_NONE = 0,
  LevelupCityReq_CmdId_CMD_ID = 255,
  LevelupCityReq_CmdId_ENET_CHANNEL_ID = 0,
  LevelupCityReq_CmdId_ENET_IS_RELIABLE = 1,
  LevelupCityReq_CmdId_IS_ALLOW_CLIENT = 1,
  LevelupCityReq_CmdId_LevelupCityReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LevelupCityReq_CmdId_LevelupCityReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LevelupCityReq_CmdId_IsValid(int value);
const LevelupCityReq_CmdId LevelupCityReq_CmdId_CmdId_MIN = LevelupCityReq_CmdId_NONE;
const LevelupCityReq_CmdId LevelupCityReq_CmdId_CmdId_MAX = LevelupCityReq_CmdId_CMD_ID;
const int LevelupCityReq_CmdId_CmdId_ARRAYSIZE = LevelupCityReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LevelupCityReq_CmdId_descriptor();
inline const ::std::string& LevelupCityReq_CmdId_Name(LevelupCityReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LevelupCityReq_CmdId_descriptor(), value);
}
inline bool LevelupCityReq_CmdId_Parse(
    const ::std::string& name, LevelupCityReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LevelupCityReq_CmdId>(
    LevelupCityReq_CmdId_descriptor(), name, value);
}
enum LevelupCityRsp_CmdId {
  LevelupCityRsp_CmdId_NONE = 0,
  LevelupCityRsp_CmdId_CMD_ID = 256,
  LevelupCityRsp_CmdId_ENET_CHANNEL_ID = 0,
  LevelupCityRsp_CmdId_ENET_IS_RELIABLE = 1,
  LevelupCityRsp_CmdId_LevelupCityRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LevelupCityRsp_CmdId_LevelupCityRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LevelupCityRsp_CmdId_IsValid(int value);
const LevelupCityRsp_CmdId LevelupCityRsp_CmdId_CmdId_MIN = LevelupCityRsp_CmdId_NONE;
const LevelupCityRsp_CmdId LevelupCityRsp_CmdId_CmdId_MAX = LevelupCityRsp_CmdId_CMD_ID;
const int LevelupCityRsp_CmdId_CmdId_ARRAYSIZE = LevelupCityRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LevelupCityRsp_CmdId_descriptor();
inline const ::std::string& LevelupCityRsp_CmdId_Name(LevelupCityRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LevelupCityRsp_CmdId_descriptor(), value);
}
inline bool LevelupCityRsp_CmdId_Parse(
    const ::std::string& name, LevelupCityRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LevelupCityRsp_CmdId>(
    LevelupCityRsp_CmdId_descriptor(), name, value);
}
enum SceneRouteChangeNotify_CmdId {
  SceneRouteChangeNotify_CmdId_NONE = 0,
  SceneRouteChangeNotify_CmdId_CMD_ID = 257,
  SceneRouteChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneRouteChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneRouteChangeNotify_CmdId_SceneRouteChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneRouteChangeNotify_CmdId_SceneRouteChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneRouteChangeNotify_CmdId_IsValid(int value);
const SceneRouteChangeNotify_CmdId SceneRouteChangeNotify_CmdId_CmdId_MIN = SceneRouteChangeNotify_CmdId_NONE;
const SceneRouteChangeNotify_CmdId SceneRouteChangeNotify_CmdId_CmdId_MAX = SceneRouteChangeNotify_CmdId_CMD_ID;
const int SceneRouteChangeNotify_CmdId_CmdId_ARRAYSIZE = SceneRouteChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneRouteChangeNotify_CmdId_descriptor();
inline const ::std::string& SceneRouteChangeNotify_CmdId_Name(SceneRouteChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneRouteChangeNotify_CmdId_descriptor(), value);
}
inline bool SceneRouteChangeNotify_CmdId_Parse(
    const ::std::string& name, SceneRouteChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneRouteChangeNotify_CmdId>(
    SceneRouteChangeNotify_CmdId_descriptor(), name, value);
}
enum PlatformStartRouteNotify_CmdId {
  PlatformStartRouteNotify_CmdId_NONE = 0,
  PlatformStartRouteNotify_CmdId_CMD_ID = 258,
  PlatformStartRouteNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlatformStartRouteNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlatformStartRouteNotify_CmdId_PlatformStartRouteNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatformStartRouteNotify_CmdId_PlatformStartRouteNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatformStartRouteNotify_CmdId_IsValid(int value);
const PlatformStartRouteNotify_CmdId PlatformStartRouteNotify_CmdId_CmdId_MIN = PlatformStartRouteNotify_CmdId_NONE;
const PlatformStartRouteNotify_CmdId PlatformStartRouteNotify_CmdId_CmdId_MAX = PlatformStartRouteNotify_CmdId_CMD_ID;
const int PlatformStartRouteNotify_CmdId_CmdId_ARRAYSIZE = PlatformStartRouteNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformStartRouteNotify_CmdId_descriptor();
inline const ::std::string& PlatformStartRouteNotify_CmdId_Name(PlatformStartRouteNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformStartRouteNotify_CmdId_descriptor(), value);
}
inline bool PlatformStartRouteNotify_CmdId_Parse(
    const ::std::string& name, PlatformStartRouteNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformStartRouteNotify_CmdId>(
    PlatformStartRouteNotify_CmdId_descriptor(), name, value);
}
enum PlatformStopRouteNotify_CmdId {
  PlatformStopRouteNotify_CmdId_NONE = 0,
  PlatformStopRouteNotify_CmdId_CMD_ID = 259,
  PlatformStopRouteNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlatformStopRouteNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlatformStopRouteNotify_CmdId_PlatformStopRouteNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatformStopRouteNotify_CmdId_PlatformStopRouteNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatformStopRouteNotify_CmdId_IsValid(int value);
const PlatformStopRouteNotify_CmdId PlatformStopRouteNotify_CmdId_CmdId_MIN = PlatformStopRouteNotify_CmdId_NONE;
const PlatformStopRouteNotify_CmdId PlatformStopRouteNotify_CmdId_CmdId_MAX = PlatformStopRouteNotify_CmdId_CMD_ID;
const int PlatformStopRouteNotify_CmdId_CmdId_ARRAYSIZE = PlatformStopRouteNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformStopRouteNotify_CmdId_descriptor();
inline const ::std::string& PlatformStopRouteNotify_CmdId_Name(PlatformStopRouteNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformStopRouteNotify_CmdId_descriptor(), value);
}
inline bool PlatformStopRouteNotify_CmdId_Parse(
    const ::std::string& name, PlatformStopRouteNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformStopRouteNotify_CmdId>(
    PlatformStopRouteNotify_CmdId_descriptor(), name, value);
}
enum PlatformChangeRouteNotify_CmdId {
  PlatformChangeRouteNotify_CmdId_NONE = 0,
  PlatformChangeRouteNotify_CmdId_CMD_ID = 260,
  PlatformChangeRouteNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlatformChangeRouteNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlatformChangeRouteNotify_CmdId_PlatformChangeRouteNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatformChangeRouteNotify_CmdId_PlatformChangeRouteNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatformChangeRouteNotify_CmdId_IsValid(int value);
const PlatformChangeRouteNotify_CmdId PlatformChangeRouteNotify_CmdId_CmdId_MIN = PlatformChangeRouteNotify_CmdId_NONE;
const PlatformChangeRouteNotify_CmdId PlatformChangeRouteNotify_CmdId_CmdId_MAX = PlatformChangeRouteNotify_CmdId_CMD_ID;
const int PlatformChangeRouteNotify_CmdId_CmdId_ARRAYSIZE = PlatformChangeRouteNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformChangeRouteNotify_CmdId_descriptor();
inline const ::std::string& PlatformChangeRouteNotify_CmdId_Name(PlatformChangeRouteNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformChangeRouteNotify_CmdId_descriptor(), value);
}
inline bool PlatformChangeRouteNotify_CmdId_Parse(
    const ::std::string& name, PlatformChangeRouteNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformChangeRouteNotify_CmdId>(
    PlatformChangeRouteNotify_CmdId_descriptor(), name, value);
}
enum ScenePlayerSoundNotify_CmdId {
  ScenePlayerSoundNotify_CmdId_NONE = 0,
  ScenePlayerSoundNotify_CmdId_CMD_ID = 261,
  ScenePlayerSoundNotify_CmdId_ENET_CHANNEL_ID = 0,
  ScenePlayerSoundNotify_CmdId_ENET_IS_RELIABLE = 1,
  ScenePlayerSoundNotify_CmdId_ScenePlayerSoundNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScenePlayerSoundNotify_CmdId_ScenePlayerSoundNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScenePlayerSoundNotify_CmdId_IsValid(int value);
const ScenePlayerSoundNotify_CmdId ScenePlayerSoundNotify_CmdId_CmdId_MIN = ScenePlayerSoundNotify_CmdId_NONE;
const ScenePlayerSoundNotify_CmdId ScenePlayerSoundNotify_CmdId_CmdId_MAX = ScenePlayerSoundNotify_CmdId_CMD_ID;
const int ScenePlayerSoundNotify_CmdId_CmdId_ARRAYSIZE = ScenePlayerSoundNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScenePlayerSoundNotify_CmdId_descriptor();
inline const ::std::string& ScenePlayerSoundNotify_CmdId_Name(ScenePlayerSoundNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScenePlayerSoundNotify_CmdId_descriptor(), value);
}
inline bool ScenePlayerSoundNotify_CmdId_Parse(
    const ::std::string& name, ScenePlayerSoundNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScenePlayerSoundNotify_CmdId>(
    ScenePlayerSoundNotify_CmdId_descriptor(), name, value);
}
enum ScenePlayerSoundNotify_PlaySoundType {
  ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_NONE = 0,
  ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_START = 1,
  ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_STOP = 2,
  ScenePlayerSoundNotify_PlaySoundType_ScenePlayerSoundNotify_PlaySoundType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ScenePlayerSoundNotify_PlaySoundType_ScenePlayerSoundNotify_PlaySoundType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ScenePlayerSoundNotify_PlaySoundType_IsValid(int value);
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MIN = ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_NONE;
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MAX = ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_STOP;
const int ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_ARRAYSIZE = ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScenePlayerSoundNotify_PlaySoundType_descriptor();
inline const ::std::string& ScenePlayerSoundNotify_PlaySoundType_Name(ScenePlayerSoundNotify_PlaySoundType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScenePlayerSoundNotify_PlaySoundType_descriptor(), value);
}
inline bool ScenePlayerSoundNotify_PlaySoundType_Parse(
    const ::std::string& name, ScenePlayerSoundNotify_PlaySoundType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScenePlayerSoundNotify_PlaySoundType>(
    ScenePlayerSoundNotify_PlaySoundType_descriptor(), name, value);
}
enum PersonalSceneJumpReq_CmdId {
  PersonalSceneJumpReq_CmdId_NONE = 0,
  PersonalSceneJumpReq_CmdId_CMD_ID = 262,
  PersonalSceneJumpReq_CmdId_ENET_CHANNEL_ID = 0,
  PersonalSceneJumpReq_CmdId_ENET_IS_RELIABLE = 1,
  PersonalSceneJumpReq_CmdId_IS_ALLOW_CLIENT = 1,
  PersonalSceneJumpReq_CmdId_PersonalSceneJumpReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PersonalSceneJumpReq_CmdId_PersonalSceneJumpReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PersonalSceneJumpReq_CmdId_IsValid(int value);
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq_CmdId_CmdId_MIN = PersonalSceneJumpReq_CmdId_NONE;
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq_CmdId_CmdId_MAX = PersonalSceneJumpReq_CmdId_CMD_ID;
const int PersonalSceneJumpReq_CmdId_CmdId_ARRAYSIZE = PersonalSceneJumpReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PersonalSceneJumpReq_CmdId_descriptor();
inline const ::std::string& PersonalSceneJumpReq_CmdId_Name(PersonalSceneJumpReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PersonalSceneJumpReq_CmdId_descriptor(), value);
}
inline bool PersonalSceneJumpReq_CmdId_Parse(
    const ::std::string& name, PersonalSceneJumpReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PersonalSceneJumpReq_CmdId>(
    PersonalSceneJumpReq_CmdId_descriptor(), name, value);
}
enum PersonalSceneJumpRsp_CmdId {
  PersonalSceneJumpRsp_CmdId_NONE = 0,
  PersonalSceneJumpRsp_CmdId_CMD_ID = 263,
  PersonalSceneJumpRsp_CmdId_ENET_CHANNEL_ID = 0,
  PersonalSceneJumpRsp_CmdId_ENET_IS_RELIABLE = 1,
  PersonalSceneJumpRsp_CmdId_PersonalSceneJumpRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PersonalSceneJumpRsp_CmdId_PersonalSceneJumpRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PersonalSceneJumpRsp_CmdId_IsValid(int value);
const PersonalSceneJumpRsp_CmdId PersonalSceneJumpRsp_CmdId_CmdId_MIN = PersonalSceneJumpRsp_CmdId_NONE;
const PersonalSceneJumpRsp_CmdId PersonalSceneJumpRsp_CmdId_CmdId_MAX = PersonalSceneJumpRsp_CmdId_CMD_ID;
const int PersonalSceneJumpRsp_CmdId_CmdId_ARRAYSIZE = PersonalSceneJumpRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PersonalSceneJumpRsp_CmdId_descriptor();
inline const ::std::string& PersonalSceneJumpRsp_CmdId_Name(PersonalSceneJumpRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PersonalSceneJumpRsp_CmdId_descriptor(), value);
}
inline bool PersonalSceneJumpRsp_CmdId_Parse(
    const ::std::string& name, PersonalSceneJumpRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PersonalSceneJumpRsp_CmdId>(
    PersonalSceneJumpRsp_CmdId_descriptor(), name, value);
}
enum SealBattleBeginNotify_CmdId {
  SealBattleBeginNotify_CmdId_NONE = 0,
  SealBattleBeginNotify_CmdId_CMD_ID = 264,
  SealBattleBeginNotify_CmdId_ENET_CHANNEL_ID = 0,
  SealBattleBeginNotify_CmdId_ENET_IS_RELIABLE = 1,
  SealBattleBeginNotify_CmdId_SealBattleBeginNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SealBattleBeginNotify_CmdId_SealBattleBeginNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SealBattleBeginNotify_CmdId_IsValid(int value);
const SealBattleBeginNotify_CmdId SealBattleBeginNotify_CmdId_CmdId_MIN = SealBattleBeginNotify_CmdId_NONE;
const SealBattleBeginNotify_CmdId SealBattleBeginNotify_CmdId_CmdId_MAX = SealBattleBeginNotify_CmdId_CMD_ID;
const int SealBattleBeginNotify_CmdId_CmdId_ARRAYSIZE = SealBattleBeginNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SealBattleBeginNotify_CmdId_descriptor();
inline const ::std::string& SealBattleBeginNotify_CmdId_Name(SealBattleBeginNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SealBattleBeginNotify_CmdId_descriptor(), value);
}
inline bool SealBattleBeginNotify_CmdId_Parse(
    const ::std::string& name, SealBattleBeginNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SealBattleBeginNotify_CmdId>(
    SealBattleBeginNotify_CmdId_descriptor(), name, value);
}
enum SealBattleEndNotify_CmdId {
  SealBattleEndNotify_CmdId_NONE = 0,
  SealBattleEndNotify_CmdId_CMD_ID = 265,
  SealBattleEndNotify_CmdId_ENET_CHANNEL_ID = 0,
  SealBattleEndNotify_CmdId_ENET_IS_RELIABLE = 1,
  SealBattleEndNotify_CmdId_SealBattleEndNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SealBattleEndNotify_CmdId_SealBattleEndNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SealBattleEndNotify_CmdId_IsValid(int value);
const SealBattleEndNotify_CmdId SealBattleEndNotify_CmdId_CmdId_MIN = SealBattleEndNotify_CmdId_NONE;
const SealBattleEndNotify_CmdId SealBattleEndNotify_CmdId_CmdId_MAX = SealBattleEndNotify_CmdId_CMD_ID;
const int SealBattleEndNotify_CmdId_CmdId_ARRAYSIZE = SealBattleEndNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SealBattleEndNotify_CmdId_descriptor();
inline const ::std::string& SealBattleEndNotify_CmdId_Name(SealBattleEndNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SealBattleEndNotify_CmdId_descriptor(), value);
}
inline bool SealBattleEndNotify_CmdId_Parse(
    const ::std::string& name, SealBattleEndNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SealBattleEndNotify_CmdId>(
    SealBattleEndNotify_CmdId_descriptor(), name, value);
}
enum SealBattleProgressNotify_CmdId {
  SealBattleProgressNotify_CmdId_NONE = 0,
  SealBattleProgressNotify_CmdId_CMD_ID = 266,
  SealBattleProgressNotify_CmdId_ENET_CHANNEL_ID = 0,
  SealBattleProgressNotify_CmdId_ENET_IS_RELIABLE = 1,
  SealBattleProgressNotify_CmdId_SealBattleProgressNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SealBattleProgressNotify_CmdId_SealBattleProgressNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SealBattleProgressNotify_CmdId_IsValid(int value);
const SealBattleProgressNotify_CmdId SealBattleProgressNotify_CmdId_CmdId_MIN = SealBattleProgressNotify_CmdId_NONE;
const SealBattleProgressNotify_CmdId SealBattleProgressNotify_CmdId_CmdId_MAX = SealBattleProgressNotify_CmdId_CMD_ID;
const int SealBattleProgressNotify_CmdId_CmdId_ARRAYSIZE = SealBattleProgressNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SealBattleProgressNotify_CmdId_descriptor();
inline const ::std::string& SealBattleProgressNotify_CmdId_Name(SealBattleProgressNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SealBattleProgressNotify_CmdId_descriptor(), value);
}
inline bool SealBattleProgressNotify_CmdId_Parse(
    const ::std::string& name, SealBattleProgressNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SealBattleProgressNotify_CmdId>(
    SealBattleProgressNotify_CmdId_descriptor(), name, value);
}
enum ClientPauseNotify_CmdId {
  ClientPauseNotify_CmdId_NONE = 0,
  ClientPauseNotify_CmdId_CMD_ID = 267,
  ClientPauseNotify_CmdId_ENET_CHANNEL_ID = 0,
  ClientPauseNotify_CmdId_ENET_IS_RELIABLE = 1,
  ClientPauseNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ClientPauseNotify_CmdId_ClientPauseNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientPauseNotify_CmdId_ClientPauseNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientPauseNotify_CmdId_IsValid(int value);
const ClientPauseNotify_CmdId ClientPauseNotify_CmdId_CmdId_MIN = ClientPauseNotify_CmdId_NONE;
const ClientPauseNotify_CmdId ClientPauseNotify_CmdId_CmdId_MAX = ClientPauseNotify_CmdId_CMD_ID;
const int ClientPauseNotify_CmdId_CmdId_ARRAYSIZE = ClientPauseNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientPauseNotify_CmdId_descriptor();
inline const ::std::string& ClientPauseNotify_CmdId_Name(ClientPauseNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientPauseNotify_CmdId_descriptor(), value);
}
inline bool ClientPauseNotify_CmdId_Parse(
    const ::std::string& name, ClientPauseNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientPauseNotify_CmdId>(
    ClientPauseNotify_CmdId_descriptor(), name, value);
}
enum PlayerEnterSceneInfoNotify_CmdId {
  PlayerEnterSceneInfoNotify_CmdId_NONE = 0,
  PlayerEnterSceneInfoNotify_CmdId_CMD_ID = 268,
  PlayerEnterSceneInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerEnterSceneInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerEnterSceneInfoNotify_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerEnterSceneInfoNotify_CmdId_PlayerEnterSceneInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerEnterSceneInfoNotify_CmdId_PlayerEnterSceneInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerEnterSceneInfoNotify_CmdId_IsValid(int value);
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify_CmdId_CmdId_MIN = PlayerEnterSceneInfoNotify_CmdId_NONE;
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify_CmdId_CmdId_MAX = PlayerEnterSceneInfoNotify_CmdId_CMD_ID;
const int PlayerEnterSceneInfoNotify_CmdId_CmdId_ARRAYSIZE = PlayerEnterSceneInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerEnterSceneInfoNotify_CmdId_descriptor();
inline const ::std::string& PlayerEnterSceneInfoNotify_CmdId_Name(PlayerEnterSceneInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerEnterSceneInfoNotify_CmdId_descriptor(), value);
}
inline bool PlayerEnterSceneInfoNotify_CmdId_Parse(
    const ::std::string& name, PlayerEnterSceneInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerEnterSceneInfoNotify_CmdId>(
    PlayerEnterSceneInfoNotify_CmdId_descriptor(), name, value);
}
enum JoinPlayerSceneReq_CmdId {
  JoinPlayerSceneReq_CmdId_NONE = 0,
  JoinPlayerSceneReq_CmdId_CMD_ID = 269,
  JoinPlayerSceneReq_CmdId_ENET_CHANNEL_ID = 0,
  JoinPlayerSceneReq_CmdId_ENET_IS_RELIABLE = 1,
  JoinPlayerSceneReq_CmdId_IS_ALLOW_CLIENT = 1,
  JoinPlayerSceneReq_CmdId_JoinPlayerSceneReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JoinPlayerSceneReq_CmdId_JoinPlayerSceneReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JoinPlayerSceneReq_CmdId_IsValid(int value);
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq_CmdId_CmdId_MIN = JoinPlayerSceneReq_CmdId_NONE;
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq_CmdId_CmdId_MAX = JoinPlayerSceneReq_CmdId_CMD_ID;
const int JoinPlayerSceneReq_CmdId_CmdId_ARRAYSIZE = JoinPlayerSceneReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* JoinPlayerSceneReq_CmdId_descriptor();
inline const ::std::string& JoinPlayerSceneReq_CmdId_Name(JoinPlayerSceneReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    JoinPlayerSceneReq_CmdId_descriptor(), value);
}
inline bool JoinPlayerSceneReq_CmdId_Parse(
    const ::std::string& name, JoinPlayerSceneReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinPlayerSceneReq_CmdId>(
    JoinPlayerSceneReq_CmdId_descriptor(), name, value);
}
enum JoinPlayerSceneRsp_CmdId {
  JoinPlayerSceneRsp_CmdId_NONE = 0,
  JoinPlayerSceneRsp_CmdId_CMD_ID = 270,
  JoinPlayerSceneRsp_CmdId_ENET_CHANNEL_ID = 0,
  JoinPlayerSceneRsp_CmdId_ENET_IS_RELIABLE = 1,
  JoinPlayerSceneRsp_CmdId_JoinPlayerSceneRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JoinPlayerSceneRsp_CmdId_JoinPlayerSceneRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JoinPlayerSceneRsp_CmdId_IsValid(int value);
const JoinPlayerSceneRsp_CmdId JoinPlayerSceneRsp_CmdId_CmdId_MIN = JoinPlayerSceneRsp_CmdId_NONE;
const JoinPlayerSceneRsp_CmdId JoinPlayerSceneRsp_CmdId_CmdId_MAX = JoinPlayerSceneRsp_CmdId_CMD_ID;
const int JoinPlayerSceneRsp_CmdId_CmdId_ARRAYSIZE = JoinPlayerSceneRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* JoinPlayerSceneRsp_CmdId_descriptor();
inline const ::std::string& JoinPlayerSceneRsp_CmdId_Name(JoinPlayerSceneRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    JoinPlayerSceneRsp_CmdId_descriptor(), value);
}
inline bool JoinPlayerSceneRsp_CmdId_Parse(
    const ::std::string& name, JoinPlayerSceneRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinPlayerSceneRsp_CmdId>(
    JoinPlayerSceneRsp_CmdId_descriptor(), name, value);
}
enum SceneKickPlayerReq_CmdId {
  SceneKickPlayerReq_CmdId_NONE = 0,
  SceneKickPlayerReq_CmdId_CMD_ID = 271,
  SceneKickPlayerReq_CmdId_ENET_CHANNEL_ID = 0,
  SceneKickPlayerReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneKickPlayerReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneKickPlayerReq_CmdId_SceneKickPlayerReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneKickPlayerReq_CmdId_SceneKickPlayerReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneKickPlayerReq_CmdId_IsValid(int value);
const SceneKickPlayerReq_CmdId SceneKickPlayerReq_CmdId_CmdId_MIN = SceneKickPlayerReq_CmdId_NONE;
const SceneKickPlayerReq_CmdId SceneKickPlayerReq_CmdId_CmdId_MAX = SceneKickPlayerReq_CmdId_CMD_ID;
const int SceneKickPlayerReq_CmdId_CmdId_ARRAYSIZE = SceneKickPlayerReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneKickPlayerReq_CmdId_descriptor();
inline const ::std::string& SceneKickPlayerReq_CmdId_Name(SceneKickPlayerReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneKickPlayerReq_CmdId_descriptor(), value);
}
inline bool SceneKickPlayerReq_CmdId_Parse(
    const ::std::string& name, SceneKickPlayerReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneKickPlayerReq_CmdId>(
    SceneKickPlayerReq_CmdId_descriptor(), name, value);
}
enum SceneKickPlayerRsp_CmdId {
  SceneKickPlayerRsp_CmdId_NONE = 0,
  SceneKickPlayerRsp_CmdId_CMD_ID = 272,
  SceneKickPlayerRsp_CmdId_ENET_CHANNEL_ID = 0,
  SceneKickPlayerRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneKickPlayerRsp_CmdId_SceneKickPlayerRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneKickPlayerRsp_CmdId_SceneKickPlayerRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneKickPlayerRsp_CmdId_IsValid(int value);
const SceneKickPlayerRsp_CmdId SceneKickPlayerRsp_CmdId_CmdId_MIN = SceneKickPlayerRsp_CmdId_NONE;
const SceneKickPlayerRsp_CmdId SceneKickPlayerRsp_CmdId_CmdId_MAX = SceneKickPlayerRsp_CmdId_CMD_ID;
const int SceneKickPlayerRsp_CmdId_CmdId_ARRAYSIZE = SceneKickPlayerRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneKickPlayerRsp_CmdId_descriptor();
inline const ::std::string& SceneKickPlayerRsp_CmdId_Name(SceneKickPlayerRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneKickPlayerRsp_CmdId_descriptor(), value);
}
inline bool SceneKickPlayerRsp_CmdId_Parse(
    const ::std::string& name, SceneKickPlayerRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneKickPlayerRsp_CmdId>(
    SceneKickPlayerRsp_CmdId_descriptor(), name, value);
}
enum SceneKickPlayerNotify_CmdId {
  SceneKickPlayerNotify_CmdId_NONE = 0,
  SceneKickPlayerNotify_CmdId_CMD_ID = 273,
  SceneKickPlayerNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneKickPlayerNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneKickPlayerNotify_CmdId_IS_ALLOW_CLIENT = 1,
  SceneKickPlayerNotify_CmdId_SceneKickPlayerNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneKickPlayerNotify_CmdId_SceneKickPlayerNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneKickPlayerNotify_CmdId_IsValid(int value);
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify_CmdId_CmdId_MIN = SceneKickPlayerNotify_CmdId_NONE;
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify_CmdId_CmdId_MAX = SceneKickPlayerNotify_CmdId_CMD_ID;
const int SceneKickPlayerNotify_CmdId_CmdId_ARRAYSIZE = SceneKickPlayerNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneKickPlayerNotify_CmdId_descriptor();
inline const ::std::string& SceneKickPlayerNotify_CmdId_Name(SceneKickPlayerNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneKickPlayerNotify_CmdId_descriptor(), value);
}
inline bool SceneKickPlayerNotify_CmdId_Parse(
    const ::std::string& name, SceneKickPlayerNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneKickPlayerNotify_CmdId>(
    SceneKickPlayerNotify_CmdId_descriptor(), name, value);
}
enum HitClientTrivialNotify_CmdId {
  HitClientTrivialNotify_CmdId_NONE = 0,
  HitClientTrivialNotify_CmdId_CMD_ID = 274,
  HitClientTrivialNotify_CmdId_ENET_CHANNEL_ID = 0,
  HitClientTrivialNotify_CmdId_ENET_IS_RELIABLE = 1,
  HitClientTrivialNotify_CmdId_IS_ALLOW_CLIENT = 1,
  HitClientTrivialNotify_CmdId_HitClientTrivialNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HitClientTrivialNotify_CmdId_HitClientTrivialNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HitClientTrivialNotify_CmdId_IsValid(int value);
const HitClientTrivialNotify_CmdId HitClientTrivialNotify_CmdId_CmdId_MIN = HitClientTrivialNotify_CmdId_NONE;
const HitClientTrivialNotify_CmdId HitClientTrivialNotify_CmdId_CmdId_MAX = HitClientTrivialNotify_CmdId_CMD_ID;
const int HitClientTrivialNotify_CmdId_CmdId_ARRAYSIZE = HitClientTrivialNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* HitClientTrivialNotify_CmdId_descriptor();
inline const ::std::string& HitClientTrivialNotify_CmdId_Name(HitClientTrivialNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    HitClientTrivialNotify_CmdId_descriptor(), value);
}
inline bool HitClientTrivialNotify_CmdId_Parse(
    const ::std::string& name, HitClientTrivialNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HitClientTrivialNotify_CmdId>(
    HitClientTrivialNotify_CmdId_descriptor(), name, value);
}
enum BackMyWorldReq_CmdId {
  BackMyWorldReq_CmdId_NONE = 0,
  BackMyWorldReq_CmdId_CMD_ID = 275,
  BackMyWorldReq_CmdId_ENET_CHANNEL_ID = 0,
  BackMyWorldReq_CmdId_ENET_IS_RELIABLE = 1,
  BackMyWorldReq_CmdId_IS_ALLOW_CLIENT = 1,
  BackMyWorldReq_CmdId_BackMyWorldReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BackMyWorldReq_CmdId_BackMyWorldReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BackMyWorldReq_CmdId_IsValid(int value);
const BackMyWorldReq_CmdId BackMyWorldReq_CmdId_CmdId_MIN = BackMyWorldReq_CmdId_NONE;
const BackMyWorldReq_CmdId BackMyWorldReq_CmdId_CmdId_MAX = BackMyWorldReq_CmdId_CMD_ID;
const int BackMyWorldReq_CmdId_CmdId_ARRAYSIZE = BackMyWorldReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BackMyWorldReq_CmdId_descriptor();
inline const ::std::string& BackMyWorldReq_CmdId_Name(BackMyWorldReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BackMyWorldReq_CmdId_descriptor(), value);
}
inline bool BackMyWorldReq_CmdId_Parse(
    const ::std::string& name, BackMyWorldReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BackMyWorldReq_CmdId>(
    BackMyWorldReq_CmdId_descriptor(), name, value);
}
enum BackMyWorldRsp_CmdId {
  BackMyWorldRsp_CmdId_NONE = 0,
  BackMyWorldRsp_CmdId_CMD_ID = 276,
  BackMyWorldRsp_CmdId_ENET_CHANNEL_ID = 0,
  BackMyWorldRsp_CmdId_ENET_IS_RELIABLE = 1,
  BackMyWorldRsp_CmdId_BackMyWorldRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BackMyWorldRsp_CmdId_BackMyWorldRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BackMyWorldRsp_CmdId_IsValid(int value);
const BackMyWorldRsp_CmdId BackMyWorldRsp_CmdId_CmdId_MIN = BackMyWorldRsp_CmdId_NONE;
const BackMyWorldRsp_CmdId BackMyWorldRsp_CmdId_CmdId_MAX = BackMyWorldRsp_CmdId_CMD_ID;
const int BackMyWorldRsp_CmdId_CmdId_ARRAYSIZE = BackMyWorldRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BackMyWorldRsp_CmdId_descriptor();
inline const ::std::string& BackMyWorldRsp_CmdId_Name(BackMyWorldRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BackMyWorldRsp_CmdId_descriptor(), value);
}
inline bool BackMyWorldRsp_CmdId_Parse(
    const ::std::string& name, BackMyWorldRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BackMyWorldRsp_CmdId>(
    BackMyWorldRsp_CmdId_descriptor(), name, value);
}
enum SeeMonsterReq_CmdId {
  SeeMonsterReq_CmdId_NONE = 0,
  SeeMonsterReq_CmdId_CMD_ID = 277,
  SeeMonsterReq_CmdId_ENET_CHANNEL_ID = 0,
  SeeMonsterReq_CmdId_ENET_IS_RELIABLE = 1,
  SeeMonsterReq_CmdId_IS_ALLOW_CLIENT = 1,
  SeeMonsterReq_CmdId_SeeMonsterReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SeeMonsterReq_CmdId_SeeMonsterReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SeeMonsterReq_CmdId_IsValid(int value);
const SeeMonsterReq_CmdId SeeMonsterReq_CmdId_CmdId_MIN = SeeMonsterReq_CmdId_NONE;
const SeeMonsterReq_CmdId SeeMonsterReq_CmdId_CmdId_MAX = SeeMonsterReq_CmdId_CMD_ID;
const int SeeMonsterReq_CmdId_CmdId_ARRAYSIZE = SeeMonsterReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SeeMonsterReq_CmdId_descriptor();
inline const ::std::string& SeeMonsterReq_CmdId_Name(SeeMonsterReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SeeMonsterReq_CmdId_descriptor(), value);
}
inline bool SeeMonsterReq_CmdId_Parse(
    const ::std::string& name, SeeMonsterReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SeeMonsterReq_CmdId>(
    SeeMonsterReq_CmdId_descriptor(), name, value);
}
enum SeeMonsterRsp_CmdId {
  SeeMonsterRsp_CmdId_NONE = 0,
  SeeMonsterRsp_CmdId_CMD_ID = 278,
  SeeMonsterRsp_CmdId_ENET_CHANNEL_ID = 0,
  SeeMonsterRsp_CmdId_ENET_IS_RELIABLE = 1,
  SeeMonsterRsp_CmdId_SeeMonsterRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SeeMonsterRsp_CmdId_SeeMonsterRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SeeMonsterRsp_CmdId_IsValid(int value);
const SeeMonsterRsp_CmdId SeeMonsterRsp_CmdId_CmdId_MIN = SeeMonsterRsp_CmdId_NONE;
const SeeMonsterRsp_CmdId SeeMonsterRsp_CmdId_CmdId_MAX = SeeMonsterRsp_CmdId_CMD_ID;
const int SeeMonsterRsp_CmdId_CmdId_ARRAYSIZE = SeeMonsterRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SeeMonsterRsp_CmdId_descriptor();
inline const ::std::string& SeeMonsterRsp_CmdId_Name(SeeMonsterRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SeeMonsterRsp_CmdId_descriptor(), value);
}
inline bool SeeMonsterRsp_CmdId_Parse(
    const ::std::string& name, SeeMonsterRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SeeMonsterRsp_CmdId>(
    SeeMonsterRsp_CmdId_descriptor(), name, value);
}
enum AddSeenMonsterNotify_CmdId {
  AddSeenMonsterNotify_CmdId_NONE = 0,
  AddSeenMonsterNotify_CmdId_CMD_ID = 279,
  AddSeenMonsterNotify_CmdId_ENET_CHANNEL_ID = 0,
  AddSeenMonsterNotify_CmdId_ENET_IS_RELIABLE = 1,
  AddSeenMonsterNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AddSeenMonsterNotify_CmdId_AddSeenMonsterNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AddSeenMonsterNotify_CmdId_AddSeenMonsterNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AddSeenMonsterNotify_CmdId_IsValid(int value);
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify_CmdId_CmdId_MIN = AddSeenMonsterNotify_CmdId_NONE;
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify_CmdId_CmdId_MAX = AddSeenMonsterNotify_CmdId_CMD_ID;
const int AddSeenMonsterNotify_CmdId_CmdId_ARRAYSIZE = AddSeenMonsterNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AddSeenMonsterNotify_CmdId_descriptor();
inline const ::std::string& AddSeenMonsterNotify_CmdId_Name(AddSeenMonsterNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AddSeenMonsterNotify_CmdId_descriptor(), value);
}
inline bool AddSeenMonsterNotify_CmdId_Parse(
    const ::std::string& name, AddSeenMonsterNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddSeenMonsterNotify_CmdId>(
    AddSeenMonsterNotify_CmdId_descriptor(), name, value);
}
enum AllSeenMonsterNotify_CmdId {
  AllSeenMonsterNotify_CmdId_NONE = 0,
  AllSeenMonsterNotify_CmdId_CMD_ID = 280,
  AllSeenMonsterNotify_CmdId_ENET_CHANNEL_ID = 0,
  AllSeenMonsterNotify_CmdId_ENET_IS_RELIABLE = 1,
  AllSeenMonsterNotify_CmdId_IS_ALLOW_CLIENT = 1,
  AllSeenMonsterNotify_CmdId_AllSeenMonsterNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllSeenMonsterNotify_CmdId_AllSeenMonsterNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllSeenMonsterNotify_CmdId_IsValid(int value);
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify_CmdId_CmdId_MIN = AllSeenMonsterNotify_CmdId_NONE;
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify_CmdId_CmdId_MAX = AllSeenMonsterNotify_CmdId_CMD_ID;
const int AllSeenMonsterNotify_CmdId_CmdId_ARRAYSIZE = AllSeenMonsterNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllSeenMonsterNotify_CmdId_descriptor();
inline const ::std::string& AllSeenMonsterNotify_CmdId_Name(AllSeenMonsterNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllSeenMonsterNotify_CmdId_descriptor(), value);
}
inline bool AllSeenMonsterNotify_CmdId_Parse(
    const ::std::string& name, AllSeenMonsterNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllSeenMonsterNotify_CmdId>(
    AllSeenMonsterNotify_CmdId_descriptor(), name, value);
}
enum SceneTimeNotify_CmdId {
  SceneTimeNotify_CmdId_NONE = 0,
  SceneTimeNotify_CmdId_CMD_ID = 281,
  SceneTimeNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneTimeNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneTimeNotify_CmdId_SceneTimeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneTimeNotify_CmdId_SceneTimeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneTimeNotify_CmdId_IsValid(int value);
const SceneTimeNotify_CmdId SceneTimeNotify_CmdId_CmdId_MIN = SceneTimeNotify_CmdId_NONE;
const SceneTimeNotify_CmdId SceneTimeNotify_CmdId_CmdId_MAX = SceneTimeNotify_CmdId_CMD_ID;
const int SceneTimeNotify_CmdId_CmdId_ARRAYSIZE = SceneTimeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneTimeNotify_CmdId_descriptor();
inline const ::std::string& SceneTimeNotify_CmdId_Name(SceneTimeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneTimeNotify_CmdId_descriptor(), value);
}
inline bool SceneTimeNotify_CmdId_Parse(
    const ::std::string& name, SceneTimeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneTimeNotify_CmdId>(
    SceneTimeNotify_CmdId_descriptor(), name, value);
}
enum EnterSceneReadyReq_CmdId {
  EnterSceneReadyReq_CmdId_NONE = 0,
  EnterSceneReadyReq_CmdId_CMD_ID = 282,
  EnterSceneReadyReq_CmdId_ENET_CHANNEL_ID = 0,
  EnterSceneReadyReq_CmdId_ENET_IS_RELIABLE = 1,
  EnterSceneReadyReq_CmdId_IS_ALLOW_CLIENT = 1,
  EnterSceneReadyReq_CmdId_EnterSceneReadyReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterSceneReadyReq_CmdId_EnterSceneReadyReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterSceneReadyReq_CmdId_IsValid(int value);
const EnterSceneReadyReq_CmdId EnterSceneReadyReq_CmdId_CmdId_MIN = EnterSceneReadyReq_CmdId_NONE;
const EnterSceneReadyReq_CmdId EnterSceneReadyReq_CmdId_CmdId_MAX = EnterSceneReadyReq_CmdId_CMD_ID;
const int EnterSceneReadyReq_CmdId_CmdId_ARRAYSIZE = EnterSceneReadyReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterSceneReadyReq_CmdId_descriptor();
inline const ::std::string& EnterSceneReadyReq_CmdId_Name(EnterSceneReadyReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterSceneReadyReq_CmdId_descriptor(), value);
}
inline bool EnterSceneReadyReq_CmdId_Parse(
    const ::std::string& name, EnterSceneReadyReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterSceneReadyReq_CmdId>(
    EnterSceneReadyReq_CmdId_descriptor(), name, value);
}
enum EnterSceneReadyRsp_CmdId {
  EnterSceneReadyRsp_CmdId_NONE = 0,
  EnterSceneReadyRsp_CmdId_CMD_ID = 283,
  EnterSceneReadyRsp_CmdId_ENET_CHANNEL_ID = 0,
  EnterSceneReadyRsp_CmdId_ENET_IS_RELIABLE = 1,
  EnterSceneReadyRsp_CmdId_EnterSceneReadyRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterSceneReadyRsp_CmdId_EnterSceneReadyRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterSceneReadyRsp_CmdId_IsValid(int value);
const EnterSceneReadyRsp_CmdId EnterSceneReadyRsp_CmdId_CmdId_MIN = EnterSceneReadyRsp_CmdId_NONE;
const EnterSceneReadyRsp_CmdId EnterSceneReadyRsp_CmdId_CmdId_MAX = EnterSceneReadyRsp_CmdId_CMD_ID;
const int EnterSceneReadyRsp_CmdId_CmdId_ARRAYSIZE = EnterSceneReadyRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterSceneReadyRsp_CmdId_descriptor();
inline const ::std::string& EnterSceneReadyRsp_CmdId_Name(EnterSceneReadyRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterSceneReadyRsp_CmdId_descriptor(), value);
}
inline bool EnterSceneReadyRsp_CmdId_Parse(
    const ::std::string& name, EnterSceneReadyRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterSceneReadyRsp_CmdId>(
    EnterSceneReadyRsp_CmdId_descriptor(), name, value);
}
enum EnterScenePeerNotify_CmdId {
  EnterScenePeerNotify_CmdId_NONE = 0,
  EnterScenePeerNotify_CmdId_CMD_ID = 284,
  EnterScenePeerNotify_CmdId_ENET_CHANNEL_ID = 0,
  EnterScenePeerNotify_CmdId_ENET_IS_RELIABLE = 1,
  EnterScenePeerNotify_CmdId_EnterScenePeerNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterScenePeerNotify_CmdId_EnterScenePeerNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterScenePeerNotify_CmdId_IsValid(int value);
const EnterScenePeerNotify_CmdId EnterScenePeerNotify_CmdId_CmdId_MIN = EnterScenePeerNotify_CmdId_NONE;
const EnterScenePeerNotify_CmdId EnterScenePeerNotify_CmdId_CmdId_MAX = EnterScenePeerNotify_CmdId_CMD_ID;
const int EnterScenePeerNotify_CmdId_CmdId_ARRAYSIZE = EnterScenePeerNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterScenePeerNotify_CmdId_descriptor();
inline const ::std::string& EnterScenePeerNotify_CmdId_Name(EnterScenePeerNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterScenePeerNotify_CmdId_descriptor(), value);
}
inline bool EnterScenePeerNotify_CmdId_Parse(
    const ::std::string& name, EnterScenePeerNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterScenePeerNotify_CmdId>(
    EnterScenePeerNotify_CmdId_descriptor(), name, value);
}
enum EnterSceneDoneReq_CmdId {
  EnterSceneDoneReq_CmdId_NONE = 0,
  EnterSceneDoneReq_CmdId_CMD_ID = 285,
  EnterSceneDoneReq_CmdId_ENET_CHANNEL_ID = 0,
  EnterSceneDoneReq_CmdId_ENET_IS_RELIABLE = 1,
  EnterSceneDoneReq_CmdId_IS_ALLOW_CLIENT = 1,
  EnterSceneDoneReq_CmdId_EnterSceneDoneReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterSceneDoneReq_CmdId_EnterSceneDoneReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterSceneDoneReq_CmdId_IsValid(int value);
const EnterSceneDoneReq_CmdId EnterSceneDoneReq_CmdId_CmdId_MIN = EnterSceneDoneReq_CmdId_NONE;
const EnterSceneDoneReq_CmdId EnterSceneDoneReq_CmdId_CmdId_MAX = EnterSceneDoneReq_CmdId_CMD_ID;
const int EnterSceneDoneReq_CmdId_CmdId_ARRAYSIZE = EnterSceneDoneReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterSceneDoneReq_CmdId_descriptor();
inline const ::std::string& EnterSceneDoneReq_CmdId_Name(EnterSceneDoneReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterSceneDoneReq_CmdId_descriptor(), value);
}
inline bool EnterSceneDoneReq_CmdId_Parse(
    const ::std::string& name, EnterSceneDoneReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterSceneDoneReq_CmdId>(
    EnterSceneDoneReq_CmdId_descriptor(), name, value);
}
enum EnterSceneDoneRsp_CmdId {
  EnterSceneDoneRsp_CmdId_NONE = 0,
  EnterSceneDoneRsp_CmdId_CMD_ID = 286,
  EnterSceneDoneRsp_CmdId_ENET_CHANNEL_ID = 0,
  EnterSceneDoneRsp_CmdId_ENET_IS_RELIABLE = 1,
  EnterSceneDoneRsp_CmdId_EnterSceneDoneRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterSceneDoneRsp_CmdId_EnterSceneDoneRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterSceneDoneRsp_CmdId_IsValid(int value);
const EnterSceneDoneRsp_CmdId EnterSceneDoneRsp_CmdId_CmdId_MIN = EnterSceneDoneRsp_CmdId_NONE;
const EnterSceneDoneRsp_CmdId EnterSceneDoneRsp_CmdId_CmdId_MAX = EnterSceneDoneRsp_CmdId_CMD_ID;
const int EnterSceneDoneRsp_CmdId_CmdId_ARRAYSIZE = EnterSceneDoneRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterSceneDoneRsp_CmdId_descriptor();
inline const ::std::string& EnterSceneDoneRsp_CmdId_Name(EnterSceneDoneRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterSceneDoneRsp_CmdId_descriptor(), value);
}
inline bool EnterSceneDoneRsp_CmdId_Parse(
    const ::std::string& name, EnterSceneDoneRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterSceneDoneRsp_CmdId>(
    EnterSceneDoneRsp_CmdId_descriptor(), name, value);
}
enum WorldPlayerDieNotify_CmdId {
  WorldPlayerDieNotify_CmdId_NONE = 0,
  WorldPlayerDieNotify_CmdId_CMD_ID = 287,
  WorldPlayerDieNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldPlayerDieNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldPlayerDieNotify_CmdId_WorldPlayerDieNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldPlayerDieNotify_CmdId_WorldPlayerDieNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldPlayerDieNotify_CmdId_IsValid(int value);
const WorldPlayerDieNotify_CmdId WorldPlayerDieNotify_CmdId_CmdId_MIN = WorldPlayerDieNotify_CmdId_NONE;
const WorldPlayerDieNotify_CmdId WorldPlayerDieNotify_CmdId_CmdId_MAX = WorldPlayerDieNotify_CmdId_CMD_ID;
const int WorldPlayerDieNotify_CmdId_CmdId_ARRAYSIZE = WorldPlayerDieNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldPlayerDieNotify_CmdId_descriptor();
inline const ::std::string& WorldPlayerDieNotify_CmdId_Name(WorldPlayerDieNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldPlayerDieNotify_CmdId_descriptor(), value);
}
inline bool WorldPlayerDieNotify_CmdId_Parse(
    const ::std::string& name, WorldPlayerDieNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldPlayerDieNotify_CmdId>(
    WorldPlayerDieNotify_CmdId_descriptor(), name, value);
}
enum WorldPlayerReviveReq_CmdId {
  WorldPlayerReviveReq_CmdId_NONE = 0,
  WorldPlayerReviveReq_CmdId_CMD_ID = 288,
  WorldPlayerReviveReq_CmdId_ENET_CHANNEL_ID = 0,
  WorldPlayerReviveReq_CmdId_ENET_IS_RELIABLE = 1,
  WorldPlayerReviveReq_CmdId_IS_ALLOW_CLIENT = 1,
  WorldPlayerReviveReq_CmdId_WorldPlayerReviveReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldPlayerReviveReq_CmdId_WorldPlayerReviveReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldPlayerReviveReq_CmdId_IsValid(int value);
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq_CmdId_CmdId_MIN = WorldPlayerReviveReq_CmdId_NONE;
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq_CmdId_CmdId_MAX = WorldPlayerReviveReq_CmdId_CMD_ID;
const int WorldPlayerReviveReq_CmdId_CmdId_ARRAYSIZE = WorldPlayerReviveReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldPlayerReviveReq_CmdId_descriptor();
inline const ::std::string& WorldPlayerReviveReq_CmdId_Name(WorldPlayerReviveReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldPlayerReviveReq_CmdId_descriptor(), value);
}
inline bool WorldPlayerReviveReq_CmdId_Parse(
    const ::std::string& name, WorldPlayerReviveReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldPlayerReviveReq_CmdId>(
    WorldPlayerReviveReq_CmdId_descriptor(), name, value);
}
enum WorldPlayerReviveRsp_CmdId {
  WorldPlayerReviveRsp_CmdId_NONE = 0,
  WorldPlayerReviveRsp_CmdId_CMD_ID = 289,
  WorldPlayerReviveRsp_CmdId_ENET_CHANNEL_ID = 0,
  WorldPlayerReviveRsp_CmdId_ENET_IS_RELIABLE = 1,
  WorldPlayerReviveRsp_CmdId_WorldPlayerReviveRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldPlayerReviveRsp_CmdId_WorldPlayerReviveRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldPlayerReviveRsp_CmdId_IsValid(int value);
const WorldPlayerReviveRsp_CmdId WorldPlayerReviveRsp_CmdId_CmdId_MIN = WorldPlayerReviveRsp_CmdId_NONE;
const WorldPlayerReviveRsp_CmdId WorldPlayerReviveRsp_CmdId_CmdId_MAX = WorldPlayerReviveRsp_CmdId_CMD_ID;
const int WorldPlayerReviveRsp_CmdId_CmdId_ARRAYSIZE = WorldPlayerReviveRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldPlayerReviveRsp_CmdId_descriptor();
inline const ::std::string& WorldPlayerReviveRsp_CmdId_Name(WorldPlayerReviveRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldPlayerReviveRsp_CmdId_descriptor(), value);
}
inline bool WorldPlayerReviveRsp_CmdId_Parse(
    const ::std::string& name, WorldPlayerReviveRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldPlayerReviveRsp_CmdId>(
    WorldPlayerReviveRsp_CmdId_descriptor(), name, value);
}
enum JoinPlayerFailNotify_CmdId {
  JoinPlayerFailNotify_CmdId_NONE = 0,
  JoinPlayerFailNotify_CmdId_CMD_ID = 290,
  JoinPlayerFailNotify_CmdId_ENET_CHANNEL_ID = 0,
  JoinPlayerFailNotify_CmdId_ENET_IS_RELIABLE = 1,
  JoinPlayerFailNotify_CmdId_JoinPlayerFailNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JoinPlayerFailNotify_CmdId_JoinPlayerFailNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JoinPlayerFailNotify_CmdId_IsValid(int value);
const JoinPlayerFailNotify_CmdId JoinPlayerFailNotify_CmdId_CmdId_MIN = JoinPlayerFailNotify_CmdId_NONE;
const JoinPlayerFailNotify_CmdId JoinPlayerFailNotify_CmdId_CmdId_MAX = JoinPlayerFailNotify_CmdId_CMD_ID;
const int JoinPlayerFailNotify_CmdId_CmdId_ARRAYSIZE = JoinPlayerFailNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* JoinPlayerFailNotify_CmdId_descriptor();
inline const ::std::string& JoinPlayerFailNotify_CmdId_Name(JoinPlayerFailNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    JoinPlayerFailNotify_CmdId_descriptor(), value);
}
inline bool JoinPlayerFailNotify_CmdId_Parse(
    const ::std::string& name, JoinPlayerFailNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinPlayerFailNotify_CmdId>(
    JoinPlayerFailNotify_CmdId_descriptor(), name, value);
}
enum SetSceneWeatherAreaReq_CmdId {
  SetSceneWeatherAreaReq_CmdId_NONE = 0,
  SetSceneWeatherAreaReq_CmdId_CMD_ID = 291,
  SetSceneWeatherAreaReq_CmdId_ENET_CHANNEL_ID = 0,
  SetSceneWeatherAreaReq_CmdId_ENET_IS_RELIABLE = 1,
  SetSceneWeatherAreaReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetSceneWeatherAreaReq_CmdId_SetSceneWeatherAreaReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetSceneWeatherAreaReq_CmdId_SetSceneWeatherAreaReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetSceneWeatherAreaReq_CmdId_IsValid(int value);
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq_CmdId_CmdId_MIN = SetSceneWeatherAreaReq_CmdId_NONE;
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq_CmdId_CmdId_MAX = SetSceneWeatherAreaReq_CmdId_CMD_ID;
const int SetSceneWeatherAreaReq_CmdId_CmdId_ARRAYSIZE = SetSceneWeatherAreaReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetSceneWeatherAreaReq_CmdId_descriptor();
inline const ::std::string& SetSceneWeatherAreaReq_CmdId_Name(SetSceneWeatherAreaReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetSceneWeatherAreaReq_CmdId_descriptor(), value);
}
inline bool SetSceneWeatherAreaReq_CmdId_Parse(
    const ::std::string& name, SetSceneWeatherAreaReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetSceneWeatherAreaReq_CmdId>(
    SetSceneWeatherAreaReq_CmdId_descriptor(), name, value);
}
enum SetSceneWeatherAreaRsp_CmdId {
  SetSceneWeatherAreaRsp_CmdId_NONE = 0,
  SetSceneWeatherAreaRsp_CmdId_CMD_ID = 292,
  SetSceneWeatherAreaRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetSceneWeatherAreaRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetSceneWeatherAreaRsp_CmdId_SetSceneWeatherAreaRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetSceneWeatherAreaRsp_CmdId_SetSceneWeatherAreaRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetSceneWeatherAreaRsp_CmdId_IsValid(int value);
const SetSceneWeatherAreaRsp_CmdId SetSceneWeatherAreaRsp_CmdId_CmdId_MIN = SetSceneWeatherAreaRsp_CmdId_NONE;
const SetSceneWeatherAreaRsp_CmdId SetSceneWeatherAreaRsp_CmdId_CmdId_MAX = SetSceneWeatherAreaRsp_CmdId_CMD_ID;
const int SetSceneWeatherAreaRsp_CmdId_CmdId_ARRAYSIZE = SetSceneWeatherAreaRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetSceneWeatherAreaRsp_CmdId_descriptor();
inline const ::std::string& SetSceneWeatherAreaRsp_CmdId_Name(SetSceneWeatherAreaRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetSceneWeatherAreaRsp_CmdId_descriptor(), value);
}
inline bool SetSceneWeatherAreaRsp_CmdId_Parse(
    const ::std::string& name, SetSceneWeatherAreaRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetSceneWeatherAreaRsp_CmdId>(
    SetSceneWeatherAreaRsp_CmdId_descriptor(), name, value);
}
enum ExecuteGadgetLuaReq_CmdId {
  ExecuteGadgetLuaReq_CmdId_NONE = 0,
  ExecuteGadgetLuaReq_CmdId_CMD_ID = 293,
  ExecuteGadgetLuaReq_CmdId_ENET_CHANNEL_ID = 0,
  ExecuteGadgetLuaReq_CmdId_ENET_IS_RELIABLE = 1,
  ExecuteGadgetLuaReq_CmdId_IS_ALLOW_CLIENT = 1,
  ExecuteGadgetLuaReq_CmdId_ExecuteGadgetLuaReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExecuteGadgetLuaReq_CmdId_ExecuteGadgetLuaReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExecuteGadgetLuaReq_CmdId_IsValid(int value);
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq_CmdId_CmdId_MIN = ExecuteGadgetLuaReq_CmdId_NONE;
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq_CmdId_CmdId_MAX = ExecuteGadgetLuaReq_CmdId_CMD_ID;
const int ExecuteGadgetLuaReq_CmdId_CmdId_ARRAYSIZE = ExecuteGadgetLuaReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExecuteGadgetLuaReq_CmdId_descriptor();
inline const ::std::string& ExecuteGadgetLuaReq_CmdId_Name(ExecuteGadgetLuaReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExecuteGadgetLuaReq_CmdId_descriptor(), value);
}
inline bool ExecuteGadgetLuaReq_CmdId_Parse(
    const ::std::string& name, ExecuteGadgetLuaReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExecuteGadgetLuaReq_CmdId>(
    ExecuteGadgetLuaReq_CmdId_descriptor(), name, value);
}
enum ExecuteGadgetLuaRsp_CmdId {
  ExecuteGadgetLuaRsp_CmdId_NONE = 0,
  ExecuteGadgetLuaRsp_CmdId_CMD_ID = 294,
  ExecuteGadgetLuaRsp_CmdId_ENET_CHANNEL_ID = 0,
  ExecuteGadgetLuaRsp_CmdId_ENET_IS_RELIABLE = 1,
  ExecuteGadgetLuaRsp_CmdId_ExecuteGadgetLuaRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExecuteGadgetLuaRsp_CmdId_ExecuteGadgetLuaRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExecuteGadgetLuaRsp_CmdId_IsValid(int value);
const ExecuteGadgetLuaRsp_CmdId ExecuteGadgetLuaRsp_CmdId_CmdId_MIN = ExecuteGadgetLuaRsp_CmdId_NONE;
const ExecuteGadgetLuaRsp_CmdId ExecuteGadgetLuaRsp_CmdId_CmdId_MAX = ExecuteGadgetLuaRsp_CmdId_CMD_ID;
const int ExecuteGadgetLuaRsp_CmdId_CmdId_ARRAYSIZE = ExecuteGadgetLuaRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExecuteGadgetLuaRsp_CmdId_descriptor();
inline const ::std::string& ExecuteGadgetLuaRsp_CmdId_Name(ExecuteGadgetLuaRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExecuteGadgetLuaRsp_CmdId_descriptor(), value);
}
inline bool ExecuteGadgetLuaRsp_CmdId_Parse(
    const ::std::string& name, ExecuteGadgetLuaRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExecuteGadgetLuaRsp_CmdId>(
    ExecuteGadgetLuaRsp_CmdId_descriptor(), name, value);
}
enum CutSceneBeginNotify_CmdId {
  CutSceneBeginNotify_CmdId_NONE = 0,
  CutSceneBeginNotify_CmdId_CMD_ID = 295,
  CutSceneBeginNotify_CmdId_ENET_CHANNEL_ID = 0,
  CutSceneBeginNotify_CmdId_ENET_IS_RELIABLE = 1,
  CutSceneBeginNotify_CmdId_CutSceneBeginNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CutSceneBeginNotify_CmdId_CutSceneBeginNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CutSceneBeginNotify_CmdId_IsValid(int value);
const CutSceneBeginNotify_CmdId CutSceneBeginNotify_CmdId_CmdId_MIN = CutSceneBeginNotify_CmdId_NONE;
const CutSceneBeginNotify_CmdId CutSceneBeginNotify_CmdId_CmdId_MAX = CutSceneBeginNotify_CmdId_CMD_ID;
const int CutSceneBeginNotify_CmdId_CmdId_ARRAYSIZE = CutSceneBeginNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CutSceneBeginNotify_CmdId_descriptor();
inline const ::std::string& CutSceneBeginNotify_CmdId_Name(CutSceneBeginNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CutSceneBeginNotify_CmdId_descriptor(), value);
}
inline bool CutSceneBeginNotify_CmdId_Parse(
    const ::std::string& name, CutSceneBeginNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CutSceneBeginNotify_CmdId>(
    CutSceneBeginNotify_CmdId_descriptor(), name, value);
}
enum CutSceneFinishNotify_CmdId {
  CutSceneFinishNotify_CmdId_NONE = 0,
  CutSceneFinishNotify_CmdId_CMD_ID = 296,
  CutSceneFinishNotify_CmdId_ENET_CHANNEL_ID = 0,
  CutSceneFinishNotify_CmdId_ENET_IS_RELIABLE = 1,
  CutSceneFinishNotify_CmdId_IS_ALLOW_CLIENT = 1,
  CutSceneFinishNotify_CmdId_CutSceneFinishNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CutSceneFinishNotify_CmdId_CutSceneFinishNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CutSceneFinishNotify_CmdId_IsValid(int value);
const CutSceneFinishNotify_CmdId CutSceneFinishNotify_CmdId_CmdId_MIN = CutSceneFinishNotify_CmdId_NONE;
const CutSceneFinishNotify_CmdId CutSceneFinishNotify_CmdId_CmdId_MAX = CutSceneFinishNotify_CmdId_CMD_ID;
const int CutSceneFinishNotify_CmdId_CmdId_ARRAYSIZE = CutSceneFinishNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CutSceneFinishNotify_CmdId_descriptor();
inline const ::std::string& CutSceneFinishNotify_CmdId_Name(CutSceneFinishNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CutSceneFinishNotify_CmdId_descriptor(), value);
}
inline bool CutSceneFinishNotify_CmdId_Parse(
    const ::std::string& name, CutSceneFinishNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CutSceneFinishNotify_CmdId>(
    CutSceneFinishNotify_CmdId_descriptor(), name, value);
}
enum CutSceneEndNotify_CmdId {
  CutSceneEndNotify_CmdId_NONE = 0,
  CutSceneEndNotify_CmdId_CMD_ID = 297,
  CutSceneEndNotify_CmdId_ENET_CHANNEL_ID = 0,
  CutSceneEndNotify_CmdId_ENET_IS_RELIABLE = 1,
  CutSceneEndNotify_CmdId_CutSceneEndNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CutSceneEndNotify_CmdId_CutSceneEndNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CutSceneEndNotify_CmdId_IsValid(int value);
const CutSceneEndNotify_CmdId CutSceneEndNotify_CmdId_CmdId_MIN = CutSceneEndNotify_CmdId_NONE;
const CutSceneEndNotify_CmdId CutSceneEndNotify_CmdId_CmdId_MAX = CutSceneEndNotify_CmdId_CMD_ID;
const int CutSceneEndNotify_CmdId_CmdId_ARRAYSIZE = CutSceneEndNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CutSceneEndNotify_CmdId_descriptor();
inline const ::std::string& CutSceneEndNotify_CmdId_Name(CutSceneEndNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CutSceneEndNotify_CmdId_descriptor(), value);
}
inline bool CutSceneEndNotify_CmdId_Parse(
    const ::std::string& name, CutSceneEndNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CutSceneEndNotify_CmdId>(
    CutSceneEndNotify_CmdId_descriptor(), name, value);
}
enum ClientScriptEventNotify_CmdId {
  ClientScriptEventNotify_CmdId_NONE = 0,
  ClientScriptEventNotify_CmdId_CMD_ID = 298,
  ClientScriptEventNotify_CmdId_ENET_CHANNEL_ID = 0,
  ClientScriptEventNotify_CmdId_ENET_IS_RELIABLE = 1,
  ClientScriptEventNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ClientScriptEventNotify_CmdId_ClientScriptEventNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientScriptEventNotify_CmdId_ClientScriptEventNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientScriptEventNotify_CmdId_IsValid(int value);
const ClientScriptEventNotify_CmdId ClientScriptEventNotify_CmdId_CmdId_MIN = ClientScriptEventNotify_CmdId_NONE;
const ClientScriptEventNotify_CmdId ClientScriptEventNotify_CmdId_CmdId_MAX = ClientScriptEventNotify_CmdId_CMD_ID;
const int ClientScriptEventNotify_CmdId_CmdId_ARRAYSIZE = ClientScriptEventNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientScriptEventNotify_CmdId_descriptor();
inline const ::std::string& ClientScriptEventNotify_CmdId_Name(ClientScriptEventNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientScriptEventNotify_CmdId_descriptor(), value);
}
inline bool ClientScriptEventNotify_CmdId_Parse(
    const ::std::string& name, ClientScriptEventNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientScriptEventNotify_CmdId>(
    ClientScriptEventNotify_CmdId_descriptor(), name, value);
}
enum SceneEntitiesMovesReq_CmdId {
  SceneEntitiesMovesReq_CmdId_NONE = 0,
  SceneEntitiesMovesReq_CmdId_CMD_ID = 299,
  SceneEntitiesMovesReq_CmdId_ENET_CHANNEL_ID = 1,
  SceneEntitiesMovesReq_CmdId_ENET_IS_RELIABLE = 0,
  SceneEntitiesMovesReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneEntitiesMovesReq_CmdId_SceneEntitiesMovesReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntitiesMovesReq_CmdId_SceneEntitiesMovesReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntitiesMovesReq_CmdId_IsValid(int value);
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq_CmdId_CmdId_MIN = SceneEntitiesMovesReq_CmdId_NONE;
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq_CmdId_CmdId_MAX = SceneEntitiesMovesReq_CmdId_CMD_ID;
const int SceneEntitiesMovesReq_CmdId_CmdId_ARRAYSIZE = SceneEntitiesMovesReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntitiesMovesReq_CmdId_descriptor();
inline const ::std::string& SceneEntitiesMovesReq_CmdId_Name(SceneEntitiesMovesReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntitiesMovesReq_CmdId_descriptor(), value);
}
inline bool SceneEntitiesMovesReq_CmdId_Parse(
    const ::std::string& name, SceneEntitiesMovesReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntitiesMovesReq_CmdId>(
    SceneEntitiesMovesReq_CmdId_descriptor(), name, value);
}
enum SceneEntitiesMovesRsp_CmdId {
  SceneEntitiesMovesRsp_CmdId_NONE = 0,
  SceneEntitiesMovesRsp_CmdId_CMD_ID = 300,
  SceneEntitiesMovesRsp_CmdId_ENET_CHANNEL_ID = 1,
  SceneEntitiesMovesRsp_CmdId_ENET_IS_RELIABLE = 0,
  SceneEntitiesMovesRsp_CmdId_SceneEntitiesMovesRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntitiesMovesRsp_CmdId_SceneEntitiesMovesRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntitiesMovesRsp_CmdId_IsValid(int value);
const SceneEntitiesMovesRsp_CmdId SceneEntitiesMovesRsp_CmdId_CmdId_MIN = SceneEntitiesMovesRsp_CmdId_NONE;
const SceneEntitiesMovesRsp_CmdId SceneEntitiesMovesRsp_CmdId_CmdId_MAX = SceneEntitiesMovesRsp_CmdId_CMD_ID;
const int SceneEntitiesMovesRsp_CmdId_CmdId_ARRAYSIZE = SceneEntitiesMovesRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntitiesMovesRsp_CmdId_descriptor();
inline const ::std::string& SceneEntitiesMovesRsp_CmdId_Name(SceneEntitiesMovesRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntitiesMovesRsp_CmdId_descriptor(), value);
}
inline bool SceneEntitiesMovesRsp_CmdId_Parse(
    const ::std::string& name, SceneEntitiesMovesRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntitiesMovesRsp_CmdId>(
    SceneEntitiesMovesRsp_CmdId_descriptor(), name, value);
}
enum SceneEntitiesMoveCombineNotify_CmdId {
  SceneEntitiesMoveCombineNotify_CmdId_NONE = 0,
  SceneEntitiesMoveCombineNotify_CmdId_CMD_ID = 3001,
  SceneEntitiesMoveCombineNotify_CmdId_ENET_CHANNEL_ID = 1,
  SceneEntitiesMoveCombineNotify_CmdId_ENET_IS_RELIABLE = 0,
  SceneEntitiesMoveCombineNotify_CmdId_SceneEntitiesMoveCombineNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneEntitiesMoveCombineNotify_CmdId_SceneEntitiesMoveCombineNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneEntitiesMoveCombineNotify_CmdId_IsValid(int value);
const SceneEntitiesMoveCombineNotify_CmdId SceneEntitiesMoveCombineNotify_CmdId_CmdId_MIN = SceneEntitiesMoveCombineNotify_CmdId_NONE;
const SceneEntitiesMoveCombineNotify_CmdId SceneEntitiesMoveCombineNotify_CmdId_CmdId_MAX = SceneEntitiesMoveCombineNotify_CmdId_CMD_ID;
const int SceneEntitiesMoveCombineNotify_CmdId_CmdId_ARRAYSIZE = SceneEntitiesMoveCombineNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneEntitiesMoveCombineNotify_CmdId_descriptor();
inline const ::std::string& SceneEntitiesMoveCombineNotify_CmdId_Name(SceneEntitiesMoveCombineNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneEntitiesMoveCombineNotify_CmdId_descriptor(), value);
}
inline bool SceneEntitiesMoveCombineNotify_CmdId_Parse(
    const ::std::string& name, SceneEntitiesMoveCombineNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneEntitiesMoveCombineNotify_CmdId>(
    SceneEntitiesMoveCombineNotify_CmdId_descriptor(), name, value);
}
enum UnlockTransPointReq_CmdId {
  UnlockTransPointReq_CmdId_NONE = 0,
  UnlockTransPointReq_CmdId_CMD_ID = 3002,
  UnlockTransPointReq_CmdId_ENET_CHANNEL_ID = 1,
  UnlockTransPointReq_CmdId_ENET_IS_RELIABLE = 1,
  UnlockTransPointReq_CmdId_IS_ALLOW_CLIENT = 1,
  UnlockTransPointReq_CmdId_UnlockTransPointReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnlockTransPointReq_CmdId_UnlockTransPointReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnlockTransPointReq_CmdId_IsValid(int value);
const UnlockTransPointReq_CmdId UnlockTransPointReq_CmdId_CmdId_MIN = UnlockTransPointReq_CmdId_NONE;
const UnlockTransPointReq_CmdId UnlockTransPointReq_CmdId_CmdId_MAX = UnlockTransPointReq_CmdId_CMD_ID;
const int UnlockTransPointReq_CmdId_CmdId_ARRAYSIZE = UnlockTransPointReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnlockTransPointReq_CmdId_descriptor();
inline const ::std::string& UnlockTransPointReq_CmdId_Name(UnlockTransPointReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnlockTransPointReq_CmdId_descriptor(), value);
}
inline bool UnlockTransPointReq_CmdId_Parse(
    const ::std::string& name, UnlockTransPointReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnlockTransPointReq_CmdId>(
    UnlockTransPointReq_CmdId_descriptor(), name, value);
}
enum UnlockTransPointRsp_CmdId {
  UnlockTransPointRsp_CmdId_NONE = 0,
  UnlockTransPointRsp_CmdId_CMD_ID = 3003,
  UnlockTransPointRsp_CmdId_ENET_CHANNEL_ID = 1,
  UnlockTransPointRsp_CmdId_ENET_IS_RELIABLE = 1,
  UnlockTransPointRsp_CmdId_UnlockTransPointRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnlockTransPointRsp_CmdId_UnlockTransPointRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnlockTransPointRsp_CmdId_IsValid(int value);
const UnlockTransPointRsp_CmdId UnlockTransPointRsp_CmdId_CmdId_MIN = UnlockTransPointRsp_CmdId_NONE;
const UnlockTransPointRsp_CmdId UnlockTransPointRsp_CmdId_CmdId_MAX = UnlockTransPointRsp_CmdId_CMD_ID;
const int UnlockTransPointRsp_CmdId_CmdId_ARRAYSIZE = UnlockTransPointRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnlockTransPointRsp_CmdId_descriptor();
inline const ::std::string& UnlockTransPointRsp_CmdId_Name(UnlockTransPointRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnlockTransPointRsp_CmdId_descriptor(), value);
}
inline bool UnlockTransPointRsp_CmdId_Parse(
    const ::std::string& name, UnlockTransPointRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnlockTransPointRsp_CmdId>(
    UnlockTransPointRsp_CmdId_descriptor(), name, value);
}
enum PlatformRouteStateNotify_CmdId {
  PlatformRouteStateNotify_CmdId_NONE = 0,
  PlatformRouteStateNotify_CmdId_CMD_ID = 3004,
  PlatformRouteStateNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlatformRouteStateNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlatformRouteStateNotify_CmdId_IS_ALLOW_CLIENT = 1,
  PlatformRouteStateNotify_CmdId_PlatformRouteStateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlatformRouteStateNotify_CmdId_PlatformRouteStateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlatformRouteStateNotify_CmdId_IsValid(int value);
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify_CmdId_CmdId_MIN = PlatformRouteStateNotify_CmdId_NONE;
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify_CmdId_CmdId_MAX = PlatformRouteStateNotify_CmdId_CMD_ID;
const int PlatformRouteStateNotify_CmdId_CmdId_ARRAYSIZE = PlatformRouteStateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlatformRouteStateNotify_CmdId_descriptor();
inline const ::std::string& PlatformRouteStateNotify_CmdId_Name(PlatformRouteStateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlatformRouteStateNotify_CmdId_descriptor(), value);
}
inline bool PlatformRouteStateNotify_CmdId_Parse(
    const ::std::string& name, PlatformRouteStateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlatformRouteStateNotify_CmdId>(
    PlatformRouteStateNotify_CmdId_descriptor(), name, value);
}
enum SceneWeatherForcastReq_CmdId {
  SceneWeatherForcastReq_CmdId_NONE = 0,
  SceneWeatherForcastReq_CmdId_CMD_ID = 3005,
  SceneWeatherForcastReq_CmdId_ENET_CHANNEL_ID = 0,
  SceneWeatherForcastReq_CmdId_ENET_IS_RELIABLE = 1,
  SceneWeatherForcastReq_CmdId_IS_ALLOW_CLIENT = 1,
  SceneWeatherForcastReq_CmdId_SceneWeatherForcastReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneWeatherForcastReq_CmdId_SceneWeatherForcastReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneWeatherForcastReq_CmdId_IsValid(int value);
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq_CmdId_CmdId_MIN = SceneWeatherForcastReq_CmdId_NONE;
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq_CmdId_CmdId_MAX = SceneWeatherForcastReq_CmdId_CMD_ID;
const int SceneWeatherForcastReq_CmdId_CmdId_ARRAYSIZE = SceneWeatherForcastReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneWeatherForcastReq_CmdId_descriptor();
inline const ::std::string& SceneWeatherForcastReq_CmdId_Name(SceneWeatherForcastReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneWeatherForcastReq_CmdId_descriptor(), value);
}
inline bool SceneWeatherForcastReq_CmdId_Parse(
    const ::std::string& name, SceneWeatherForcastReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneWeatherForcastReq_CmdId>(
    SceneWeatherForcastReq_CmdId_descriptor(), name, value);
}
enum SceneWeatherForcastRsp_CmdId {
  SceneWeatherForcastRsp_CmdId_NONE = 0,
  SceneWeatherForcastRsp_CmdId_CMD_ID = 3006,
  SceneWeatherForcastRsp_CmdId_ENET_CHANNEL_ID = 0,
  SceneWeatherForcastRsp_CmdId_ENET_IS_RELIABLE = 1,
  SceneWeatherForcastRsp_CmdId_SceneWeatherForcastRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneWeatherForcastRsp_CmdId_SceneWeatherForcastRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneWeatherForcastRsp_CmdId_IsValid(int value);
const SceneWeatherForcastRsp_CmdId SceneWeatherForcastRsp_CmdId_CmdId_MIN = SceneWeatherForcastRsp_CmdId_NONE;
const SceneWeatherForcastRsp_CmdId SceneWeatherForcastRsp_CmdId_CmdId_MAX = SceneWeatherForcastRsp_CmdId_CMD_ID;
const int SceneWeatherForcastRsp_CmdId_CmdId_ARRAYSIZE = SceneWeatherForcastRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneWeatherForcastRsp_CmdId_descriptor();
inline const ::std::string& SceneWeatherForcastRsp_CmdId_Name(SceneWeatherForcastRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneWeatherForcastRsp_CmdId_descriptor(), value);
}
inline bool SceneWeatherForcastRsp_CmdId_Parse(
    const ::std::string& name, SceneWeatherForcastRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneWeatherForcastRsp_CmdId>(
    SceneWeatherForcastRsp_CmdId_descriptor(), name, value);
}
enum MarkMapReq_CmdId {
  MarkMapReq_CmdId_NONE = 0,
  MarkMapReq_CmdId_CMD_ID = 3010,
  MarkMapReq_CmdId_ENET_CHANNEL_ID = 0,
  MarkMapReq_CmdId_ENET_IS_RELIABLE = 1,
  MarkMapReq_CmdId_IS_ALLOW_CLIENT = 1,
  MarkMapReq_CmdId_MarkMapReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MarkMapReq_CmdId_MarkMapReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MarkMapReq_CmdId_IsValid(int value);
const MarkMapReq_CmdId MarkMapReq_CmdId_CmdId_MIN = MarkMapReq_CmdId_NONE;
const MarkMapReq_CmdId MarkMapReq_CmdId_CmdId_MAX = MarkMapReq_CmdId_CMD_ID;
const int MarkMapReq_CmdId_CmdId_ARRAYSIZE = MarkMapReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarkMapReq_CmdId_descriptor();
inline const ::std::string& MarkMapReq_CmdId_Name(MarkMapReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarkMapReq_CmdId_descriptor(), value);
}
inline bool MarkMapReq_CmdId_Parse(
    const ::std::string& name, MarkMapReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarkMapReq_CmdId>(
    MarkMapReq_CmdId_descriptor(), name, value);
}
enum MarkMapReq_Operation {
  MarkMapReq_Operation_ADD = 0,
  MarkMapReq_Operation_MOD = 1,
  MarkMapReq_Operation_DEL = 2,
  MarkMapReq_Operation_GET = 3,
  MarkMapReq_Operation_MarkMapReq_Operation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MarkMapReq_Operation_MarkMapReq_Operation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MarkMapReq_Operation_IsValid(int value);
const MarkMapReq_Operation MarkMapReq_Operation_Operation_MIN = MarkMapReq_Operation_ADD;
const MarkMapReq_Operation MarkMapReq_Operation_Operation_MAX = MarkMapReq_Operation_GET;
const int MarkMapReq_Operation_Operation_ARRAYSIZE = MarkMapReq_Operation_Operation_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarkMapReq_Operation_descriptor();
inline const ::std::string& MarkMapReq_Operation_Name(MarkMapReq_Operation value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarkMapReq_Operation_descriptor(), value);
}
inline bool MarkMapReq_Operation_Parse(
    const ::std::string& name, MarkMapReq_Operation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarkMapReq_Operation>(
    MarkMapReq_Operation_descriptor(), name, value);
}
enum MarkMapRsp_CmdId {
  MarkMapRsp_CmdId_NONE = 0,
  MarkMapRsp_CmdId_CMD_ID = 3011,
  MarkMapRsp_CmdId_ENET_CHANNEL_ID = 0,
  MarkMapRsp_CmdId_ENET_IS_RELIABLE = 1,
  MarkMapRsp_CmdId_MarkMapRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MarkMapRsp_CmdId_MarkMapRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MarkMapRsp_CmdId_IsValid(int value);
const MarkMapRsp_CmdId MarkMapRsp_CmdId_CmdId_MIN = MarkMapRsp_CmdId_NONE;
const MarkMapRsp_CmdId MarkMapRsp_CmdId_CmdId_MAX = MarkMapRsp_CmdId_CMD_ID;
const int MarkMapRsp_CmdId_CmdId_ARRAYSIZE = MarkMapRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarkMapRsp_CmdId_descriptor();
inline const ::std::string& MarkMapRsp_CmdId_Name(MarkMapRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarkMapRsp_CmdId_descriptor(), value);
}
inline bool MarkMapRsp_CmdId_Parse(
    const ::std::string& name, MarkMapRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarkMapRsp_CmdId>(
    MarkMapRsp_CmdId_descriptor(), name, value);
}
enum AllMarkPointNotify_CmdId {
  AllMarkPointNotify_CmdId_NONE = 0,
  AllMarkPointNotify_CmdId_CMD_ID = 3012,
  AllMarkPointNotify_CmdId_ENET_CHANNEL_ID = 0,
  AllMarkPointNotify_CmdId_ENET_IS_RELIABLE = 1,
  AllMarkPointNotify_CmdId_AllMarkPointNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AllMarkPointNotify_CmdId_AllMarkPointNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AllMarkPointNotify_CmdId_IsValid(int value);
const AllMarkPointNotify_CmdId AllMarkPointNotify_CmdId_CmdId_MIN = AllMarkPointNotify_CmdId_NONE;
const AllMarkPointNotify_CmdId AllMarkPointNotify_CmdId_CmdId_MAX = AllMarkPointNotify_CmdId_CMD_ID;
const int AllMarkPointNotify_CmdId_CmdId_ARRAYSIZE = AllMarkPointNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AllMarkPointNotify_CmdId_descriptor();
inline const ::std::string& AllMarkPointNotify_CmdId_Name(AllMarkPointNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AllMarkPointNotify_CmdId_descriptor(), value);
}
inline bool AllMarkPointNotify_CmdId_Parse(
    const ::std::string& name, AllMarkPointNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AllMarkPointNotify_CmdId>(
    AllMarkPointNotify_CmdId_descriptor(), name, value);
}
enum WorldDataNotify_CmdId {
  WorldDataNotify_CmdId_NONE = 0,
  WorldDataNotify_CmdId_CMD_ID = 3013,
  WorldDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldDataNotify_CmdId_IS_ALLOW_CLIENT = 1,
  WorldDataNotify_CmdId_WorldDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldDataNotify_CmdId_WorldDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldDataNotify_CmdId_IsValid(int value);
const WorldDataNotify_CmdId WorldDataNotify_CmdId_CmdId_MIN = WorldDataNotify_CmdId_NONE;
const WorldDataNotify_CmdId WorldDataNotify_CmdId_CmdId_MAX = WorldDataNotify_CmdId_CMD_ID;
const int WorldDataNotify_CmdId_CmdId_ARRAYSIZE = WorldDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldDataNotify_CmdId_descriptor();
inline const ::std::string& WorldDataNotify_CmdId_Name(WorldDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldDataNotify_CmdId_descriptor(), value);
}
inline bool WorldDataNotify_CmdId_Parse(
    const ::std::string& name, WorldDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldDataNotify_CmdId>(
    WorldDataNotify_CmdId_descriptor(), name, value);
}
enum WorldDataNotify_DataType {
  WorldDataNotify_DataType_DATA_NONE = 0,
  WorldDataNotify_DataType_WORLD_LEVEL = 1,
  WorldDataNotify_DataType_WorldDataNotify_DataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldDataNotify_DataType_WorldDataNotify_DataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldDataNotify_DataType_IsValid(int value);
const WorldDataNotify_DataType WorldDataNotify_DataType_DataType_MIN = WorldDataNotify_DataType_DATA_NONE;
const WorldDataNotify_DataType WorldDataNotify_DataType_DataType_MAX = WorldDataNotify_DataType_WORLD_LEVEL;
const int WorldDataNotify_DataType_DataType_ARRAYSIZE = WorldDataNotify_DataType_DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldDataNotify_DataType_descriptor();
inline const ::std::string& WorldDataNotify_DataType_Name(WorldDataNotify_DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldDataNotify_DataType_descriptor(), value);
}
inline bool WorldDataNotify_DataType_Parse(
    const ::std::string& name, WorldDataNotify_DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldDataNotify_DataType>(
    WorldDataNotify_DataType_descriptor(), name, value);
}
enum EntityMoveRoomNotify_CmdId {
  EntityMoveRoomNotify_CmdId_NONE = 0,
  EntityMoveRoomNotify_CmdId_CMD_ID = 3014,
  EntityMoveRoomNotify_CmdId_ENET_CHANNEL_ID = 0,
  EntityMoveRoomNotify_CmdId_ENET_IS_RELIABLE = 1,
  EntityMoveRoomNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EntityMoveRoomNotify_CmdId_EntityMoveRoomNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityMoveRoomNotify_CmdId_EntityMoveRoomNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityMoveRoomNotify_CmdId_IsValid(int value);
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify_CmdId_CmdId_MIN = EntityMoveRoomNotify_CmdId_NONE;
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify_CmdId_CmdId_MAX = EntityMoveRoomNotify_CmdId_CMD_ID;
const int EntityMoveRoomNotify_CmdId_CmdId_ARRAYSIZE = EntityMoveRoomNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityMoveRoomNotify_CmdId_descriptor();
inline const ::std::string& EntityMoveRoomNotify_CmdId_Name(EntityMoveRoomNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityMoveRoomNotify_CmdId_descriptor(), value);
}
inline bool EntityMoveRoomNotify_CmdId_Parse(
    const ::std::string& name, EntityMoveRoomNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityMoveRoomNotify_CmdId>(
    EntityMoveRoomNotify_CmdId_descriptor(), name, value);
}
enum WorldPlayerInfoNotify_CmdId {
  WorldPlayerInfoNotify_CmdId_NONE = 0,
  WorldPlayerInfoNotify_CmdId_CMD_ID = 3015,
  WorldPlayerInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldPlayerInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldPlayerInfoNotify_CmdId_IS_ALLOW_CLIENT = 1,
  WorldPlayerInfoNotify_CmdId_WorldPlayerInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldPlayerInfoNotify_CmdId_WorldPlayerInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldPlayerInfoNotify_CmdId_IsValid(int value);
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify_CmdId_CmdId_MIN = WorldPlayerInfoNotify_CmdId_NONE;
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify_CmdId_CmdId_MAX = WorldPlayerInfoNotify_CmdId_CMD_ID;
const int WorldPlayerInfoNotify_CmdId_CmdId_ARRAYSIZE = WorldPlayerInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldPlayerInfoNotify_CmdId_descriptor();
inline const ::std::string& WorldPlayerInfoNotify_CmdId_Name(WorldPlayerInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldPlayerInfoNotify_CmdId_descriptor(), value);
}
inline bool WorldPlayerInfoNotify_CmdId_Parse(
    const ::std::string& name, WorldPlayerInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldPlayerInfoNotify_CmdId>(
    WorldPlayerInfoNotify_CmdId_descriptor(), name, value);
}
enum PostEnterSceneReq_CmdId {
  PostEnterSceneReq_CmdId_NONE = 0,
  PostEnterSceneReq_CmdId_CMD_ID = 3016,
  PostEnterSceneReq_CmdId_ENET_CHANNEL_ID = 0,
  PostEnterSceneReq_CmdId_ENET_IS_RELIABLE = 1,
  PostEnterSceneReq_CmdId_IS_ALLOW_CLIENT = 1,
  PostEnterSceneReq_CmdId_PostEnterSceneReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PostEnterSceneReq_CmdId_PostEnterSceneReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PostEnterSceneReq_CmdId_IsValid(int value);
const PostEnterSceneReq_CmdId PostEnterSceneReq_CmdId_CmdId_MIN = PostEnterSceneReq_CmdId_NONE;
const PostEnterSceneReq_CmdId PostEnterSceneReq_CmdId_CmdId_MAX = PostEnterSceneReq_CmdId_CMD_ID;
const int PostEnterSceneReq_CmdId_CmdId_ARRAYSIZE = PostEnterSceneReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PostEnterSceneReq_CmdId_descriptor();
inline const ::std::string& PostEnterSceneReq_CmdId_Name(PostEnterSceneReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PostEnterSceneReq_CmdId_descriptor(), value);
}
inline bool PostEnterSceneReq_CmdId_Parse(
    const ::std::string& name, PostEnterSceneReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PostEnterSceneReq_CmdId>(
    PostEnterSceneReq_CmdId_descriptor(), name, value);
}
enum PostEnterSceneRsp_CmdId {
  PostEnterSceneRsp_CmdId_NONE = 0,
  PostEnterSceneRsp_CmdId_CMD_ID = 3017,
  PostEnterSceneRsp_CmdId_ENET_CHANNEL_ID = 0,
  PostEnterSceneRsp_CmdId_ENET_IS_RELIABLE = 1,
  PostEnterSceneRsp_CmdId_PostEnterSceneRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PostEnterSceneRsp_CmdId_PostEnterSceneRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PostEnterSceneRsp_CmdId_IsValid(int value);
const PostEnterSceneRsp_CmdId PostEnterSceneRsp_CmdId_CmdId_MIN = PostEnterSceneRsp_CmdId_NONE;
const PostEnterSceneRsp_CmdId PostEnterSceneRsp_CmdId_CmdId_MAX = PostEnterSceneRsp_CmdId_CMD_ID;
const int PostEnterSceneRsp_CmdId_CmdId_ARRAYSIZE = PostEnterSceneRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PostEnterSceneRsp_CmdId_descriptor();
inline const ::std::string& PostEnterSceneRsp_CmdId_Name(PostEnterSceneRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PostEnterSceneRsp_CmdId_descriptor(), value);
}
inline bool PostEnterSceneRsp_CmdId_Parse(
    const ::std::string& name, PostEnterSceneRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PostEnterSceneRsp_CmdId>(
    PostEnterSceneRsp_CmdId_descriptor(), name, value);
}
enum ChatInfo_SystemHintType {
  ChatInfo_SystemHintType_CHAT_NONE = 0,
  ChatInfo_SystemHintType_CHAT_ENTER_WORLD = 1,
  ChatInfo_SystemHintType_CHAT_LEAVE_WORLD = 2,
  ChatInfo_SystemHintType_ChatInfo_SystemHintType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChatInfo_SystemHintType_ChatInfo_SystemHintType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChatInfo_SystemHintType_IsValid(int value);
const ChatInfo_SystemHintType ChatInfo_SystemHintType_SystemHintType_MIN = ChatInfo_SystemHintType_CHAT_NONE;
const ChatInfo_SystemHintType ChatInfo_SystemHintType_SystemHintType_MAX = ChatInfo_SystemHintType_CHAT_LEAVE_WORLD;
const int ChatInfo_SystemHintType_SystemHintType_ARRAYSIZE = ChatInfo_SystemHintType_SystemHintType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatInfo_SystemHintType_descriptor();
inline const ::std::string& ChatInfo_SystemHintType_Name(ChatInfo_SystemHintType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatInfo_SystemHintType_descriptor(), value);
}
inline bool ChatInfo_SystemHintType_Parse(
    const ::std::string& name, ChatInfo_SystemHintType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatInfo_SystemHintType>(
    ChatInfo_SystemHintType_descriptor(), name, value);
}
enum PlayerChatReq_CmdId {
  PlayerChatReq_CmdId_NONE = 0,
  PlayerChatReq_CmdId_CMD_ID = 3018,
  PlayerChatReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerChatReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerChatReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerChatReq_CmdId_PlayerChatReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerChatReq_CmdId_PlayerChatReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerChatReq_CmdId_IsValid(int value);
const PlayerChatReq_CmdId PlayerChatReq_CmdId_CmdId_MIN = PlayerChatReq_CmdId_NONE;
const PlayerChatReq_CmdId PlayerChatReq_CmdId_CmdId_MAX = PlayerChatReq_CmdId_CMD_ID;
const int PlayerChatReq_CmdId_CmdId_ARRAYSIZE = PlayerChatReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerChatReq_CmdId_descriptor();
inline const ::std::string& PlayerChatReq_CmdId_Name(PlayerChatReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerChatReq_CmdId_descriptor(), value);
}
inline bool PlayerChatReq_CmdId_Parse(
    const ::std::string& name, PlayerChatReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerChatReq_CmdId>(
    PlayerChatReq_CmdId_descriptor(), name, value);
}
enum PlayerChatRsp_CmdId {
  PlayerChatRsp_CmdId_NONE = 0,
  PlayerChatRsp_CmdId_CMD_ID = 3019,
  PlayerChatRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerChatRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerChatRsp_CmdId_PlayerChatRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerChatRsp_CmdId_PlayerChatRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerChatRsp_CmdId_IsValid(int value);
const PlayerChatRsp_CmdId PlayerChatRsp_CmdId_CmdId_MIN = PlayerChatRsp_CmdId_NONE;
const PlayerChatRsp_CmdId PlayerChatRsp_CmdId_CmdId_MAX = PlayerChatRsp_CmdId_CMD_ID;
const int PlayerChatRsp_CmdId_CmdId_ARRAYSIZE = PlayerChatRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerChatRsp_CmdId_descriptor();
inline const ::std::string& PlayerChatRsp_CmdId_Name(PlayerChatRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerChatRsp_CmdId_descriptor(), value);
}
inline bool PlayerChatRsp_CmdId_Parse(
    const ::std::string& name, PlayerChatRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerChatRsp_CmdId>(
    PlayerChatRsp_CmdId_descriptor(), name, value);
}
enum PlayerChatNotify_CmdId {
  PlayerChatNotify_CmdId_NONE = 0,
  PlayerChatNotify_CmdId_CMD_ID = 3020,
  PlayerChatNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerChatNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerChatNotify_CmdId_PlayerChatNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerChatNotify_CmdId_PlayerChatNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerChatNotify_CmdId_IsValid(int value);
const PlayerChatNotify_CmdId PlayerChatNotify_CmdId_CmdId_MIN = PlayerChatNotify_CmdId_NONE;
const PlayerChatNotify_CmdId PlayerChatNotify_CmdId_CmdId_MAX = PlayerChatNotify_CmdId_CMD_ID;
const int PlayerChatNotify_CmdId_CmdId_ARRAYSIZE = PlayerChatNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerChatNotify_CmdId_descriptor();
inline const ::std::string& PlayerChatNotify_CmdId_Name(PlayerChatNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerChatNotify_CmdId_descriptor(), value);
}
inline bool PlayerChatNotify_CmdId_Parse(
    const ::std::string& name, PlayerChatNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerChatNotify_CmdId>(
    PlayerChatNotify_CmdId_descriptor(), name, value);
}
enum PlayerChatCDNotify_CmdId {
  PlayerChatCDNotify_CmdId_NONE = 0,
  PlayerChatCDNotify_CmdId_CMD_ID = 3021,
  PlayerChatCDNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerChatCDNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerChatCDNotify_CmdId_PlayerChatCDNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerChatCDNotify_CmdId_PlayerChatCDNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerChatCDNotify_CmdId_IsValid(int value);
const PlayerChatCDNotify_CmdId PlayerChatCDNotify_CmdId_CmdId_MIN = PlayerChatCDNotify_CmdId_NONE;
const PlayerChatCDNotify_CmdId PlayerChatCDNotify_CmdId_CmdId_MAX = PlayerChatCDNotify_CmdId_CMD_ID;
const int PlayerChatCDNotify_CmdId_CmdId_ARRAYSIZE = PlayerChatCDNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerChatCDNotify_CmdId_descriptor();
inline const ::std::string& PlayerChatCDNotify_CmdId_Name(PlayerChatCDNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerChatCDNotify_CmdId_descriptor(), value);
}
inline bool PlayerChatCDNotify_CmdId_Parse(
    const ::std::string& name, PlayerChatCDNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerChatCDNotify_CmdId>(
    PlayerChatCDNotify_CmdId_descriptor(), name, value);
}
enum ChatHistoryNotify_CmdId {
  ChatHistoryNotify_CmdId_NONE = 0,
  ChatHistoryNotify_CmdId_CMD_ID = 3022,
  ChatHistoryNotify_CmdId_ENET_CHANNEL_ID = 0,
  ChatHistoryNotify_CmdId_ENET_IS_RELIABLE = 1,
  ChatHistoryNotify_CmdId_ChatHistoryNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChatHistoryNotify_CmdId_ChatHistoryNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChatHistoryNotify_CmdId_IsValid(int value);
const ChatHistoryNotify_CmdId ChatHistoryNotify_CmdId_CmdId_MIN = ChatHistoryNotify_CmdId_NONE;
const ChatHistoryNotify_CmdId ChatHistoryNotify_CmdId_CmdId_MAX = ChatHistoryNotify_CmdId_CMD_ID;
const int ChatHistoryNotify_CmdId_CmdId_ARRAYSIZE = ChatHistoryNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChatHistoryNotify_CmdId_descriptor();
inline const ::std::string& ChatHistoryNotify_CmdId_Name(ChatHistoryNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChatHistoryNotify_CmdId_descriptor(), value);
}
inline bool ChatHistoryNotify_CmdId_Parse(
    const ::std::string& name, ChatHistoryNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChatHistoryNotify_CmdId>(
    ChatHistoryNotify_CmdId_descriptor(), name, value);
}
enum SceneDataNotify_CmdId {
  SceneDataNotify_CmdId_NONE = 0,
  SceneDataNotify_CmdId_CMD_ID = 3023,
  SceneDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  SceneDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  SceneDataNotify_CmdId_SceneDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneDataNotify_CmdId_SceneDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneDataNotify_CmdId_IsValid(int value);
const SceneDataNotify_CmdId SceneDataNotify_CmdId_CmdId_MIN = SceneDataNotify_CmdId_NONE;
const SceneDataNotify_CmdId SceneDataNotify_CmdId_CmdId_MAX = SceneDataNotify_CmdId_CMD_ID;
const int SceneDataNotify_CmdId_CmdId_ARRAYSIZE = SceneDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneDataNotify_CmdId_descriptor();
inline const ::std::string& SceneDataNotify_CmdId_Name(SceneDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneDataNotify_CmdId_descriptor(), value);
}
inline bool SceneDataNotify_CmdId_Parse(
    const ::std::string& name, SceneDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneDataNotify_CmdId>(
    SceneDataNotify_CmdId_descriptor(), name, value);
}
enum DungeonEntryToBeExploreNotify_CmdId {
  DungeonEntryToBeExploreNotify_CmdId_NONE = 0,
  DungeonEntryToBeExploreNotify_CmdId_CMD_ID = 3024,
  DungeonEntryToBeExploreNotify_CmdId_ENET_CHANNEL_ID = 0,
  DungeonEntryToBeExploreNotify_CmdId_ENET_IS_RELIABLE = 1,
  DungeonEntryToBeExploreNotify_CmdId_DungeonEntryToBeExploreNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DungeonEntryToBeExploreNotify_CmdId_DungeonEntryToBeExploreNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DungeonEntryToBeExploreNotify_CmdId_IsValid(int value);
const DungeonEntryToBeExploreNotify_CmdId DungeonEntryToBeExploreNotify_CmdId_CmdId_MIN = DungeonEntryToBeExploreNotify_CmdId_NONE;
const DungeonEntryToBeExploreNotify_CmdId DungeonEntryToBeExploreNotify_CmdId_CmdId_MAX = DungeonEntryToBeExploreNotify_CmdId_CMD_ID;
const int DungeonEntryToBeExploreNotify_CmdId_CmdId_ARRAYSIZE = DungeonEntryToBeExploreNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DungeonEntryToBeExploreNotify_CmdId_descriptor();
inline const ::std::string& DungeonEntryToBeExploreNotify_CmdId_Name(DungeonEntryToBeExploreNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DungeonEntryToBeExploreNotify_CmdId_descriptor(), value);
}
inline bool DungeonEntryToBeExploreNotify_CmdId_Parse(
    const ::std::string& name, DungeonEntryToBeExploreNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DungeonEntryToBeExploreNotify_CmdId>(
    DungeonEntryToBeExploreNotify_CmdId_descriptor(), name, value);
}
enum GetDungeonEntryExploreConditionReq_CmdId {
  GetDungeonEntryExploreConditionReq_CmdId_NONE = 0,
  GetDungeonEntryExploreConditionReq_CmdId_CMD_ID = 3035,
  GetDungeonEntryExploreConditionReq_CmdId_ENET_CHANNEL_ID = 0,
  GetDungeonEntryExploreConditionReq_CmdId_ENET_IS_RELIABLE = 1,
  GetDungeonEntryExploreConditionReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetDungeonEntryExploreConditionReq_CmdId_GetDungeonEntryExploreConditionReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetDungeonEntryExploreConditionReq_CmdId_GetDungeonEntryExploreConditionReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetDungeonEntryExploreConditionReq_CmdId_IsValid(int value);
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq_CmdId_CmdId_MIN = GetDungeonEntryExploreConditionReq_CmdId_NONE;
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq_CmdId_CmdId_MAX = GetDungeonEntryExploreConditionReq_CmdId_CMD_ID;
const int GetDungeonEntryExploreConditionReq_CmdId_CmdId_ARRAYSIZE = GetDungeonEntryExploreConditionReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetDungeonEntryExploreConditionReq_CmdId_descriptor();
inline const ::std::string& GetDungeonEntryExploreConditionReq_CmdId_Name(GetDungeonEntryExploreConditionReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetDungeonEntryExploreConditionReq_CmdId_descriptor(), value);
}
inline bool GetDungeonEntryExploreConditionReq_CmdId_Parse(
    const ::std::string& name, GetDungeonEntryExploreConditionReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetDungeonEntryExploreConditionReq_CmdId>(
    GetDungeonEntryExploreConditionReq_CmdId_descriptor(), name, value);
}
enum GetDungeonEntryExploreConditionRsp_CmdId {
  GetDungeonEntryExploreConditionRsp_CmdId_NONE = 0,
  GetDungeonEntryExploreConditionRsp_CmdId_CMD_ID = 3036,
  GetDungeonEntryExploreConditionRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetDungeonEntryExploreConditionRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetDungeonEntryExploreConditionRsp_CmdId_GetDungeonEntryExploreConditionRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetDungeonEntryExploreConditionRsp_CmdId_GetDungeonEntryExploreConditionRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetDungeonEntryExploreConditionRsp_CmdId_IsValid(int value);
const GetDungeonEntryExploreConditionRsp_CmdId GetDungeonEntryExploreConditionRsp_CmdId_CmdId_MIN = GetDungeonEntryExploreConditionRsp_CmdId_NONE;
const GetDungeonEntryExploreConditionRsp_CmdId GetDungeonEntryExploreConditionRsp_CmdId_CmdId_MAX = GetDungeonEntryExploreConditionRsp_CmdId_CMD_ID;
const int GetDungeonEntryExploreConditionRsp_CmdId_CmdId_ARRAYSIZE = GetDungeonEntryExploreConditionRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetDungeonEntryExploreConditionRsp_CmdId_descriptor();
inline const ::std::string& GetDungeonEntryExploreConditionRsp_CmdId_Name(GetDungeonEntryExploreConditionRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetDungeonEntryExploreConditionRsp_CmdId_descriptor(), value);
}
inline bool GetDungeonEntryExploreConditionRsp_CmdId_Parse(
    const ::std::string& name, GetDungeonEntryExploreConditionRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetDungeonEntryExploreConditionRsp_CmdId>(
    GetDungeonEntryExploreConditionRsp_CmdId_descriptor(), name, value);
}
enum UnfreezeGroupLimitNotify_CmdId {
  UnfreezeGroupLimitNotify_CmdId_NONE = 0,
  UnfreezeGroupLimitNotify_CmdId_CMD_ID = 3037,
  UnfreezeGroupLimitNotify_CmdId_ENET_CHANNEL_ID = 0,
  UnfreezeGroupLimitNotify_CmdId_ENET_IS_RELIABLE = 1,
  UnfreezeGroupLimitNotify_CmdId_UnfreezeGroupLimitNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnfreezeGroupLimitNotify_CmdId_UnfreezeGroupLimitNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnfreezeGroupLimitNotify_CmdId_IsValid(int value);
const UnfreezeGroupLimitNotify_CmdId UnfreezeGroupLimitNotify_CmdId_CmdId_MIN = UnfreezeGroupLimitNotify_CmdId_NONE;
const UnfreezeGroupLimitNotify_CmdId UnfreezeGroupLimitNotify_CmdId_CmdId_MAX = UnfreezeGroupLimitNotify_CmdId_CMD_ID;
const int UnfreezeGroupLimitNotify_CmdId_CmdId_ARRAYSIZE = UnfreezeGroupLimitNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnfreezeGroupLimitNotify_CmdId_descriptor();
inline const ::std::string& UnfreezeGroupLimitNotify_CmdId_Name(UnfreezeGroupLimitNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnfreezeGroupLimitNotify_CmdId_descriptor(), value);
}
inline bool UnfreezeGroupLimitNotify_CmdId_Parse(
    const ::std::string& name, UnfreezeGroupLimitNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnfreezeGroupLimitNotify_CmdId>(
    UnfreezeGroupLimitNotify_CmdId_descriptor(), name, value);
}
enum EnterWorldFogAreaNotify_CmdId {
  EnterWorldFogAreaNotify_CmdId_NONE = 0,
  EnterWorldFogAreaNotify_CmdId_CMD_ID = 3038,
  EnterWorldFogAreaNotify_CmdId_ENET_CHANNEL_ID = 0,
  EnterWorldFogAreaNotify_CmdId_ENET_IS_RELIABLE = 1,
  EnterWorldFogAreaNotify_CmdId_IS_ALLOW_CLIENT = 1,
  EnterWorldFogAreaNotify_CmdId_EnterWorldFogAreaNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterWorldFogAreaNotify_CmdId_EnterWorldFogAreaNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterWorldFogAreaNotify_CmdId_IsValid(int value);
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify_CmdId_CmdId_MIN = EnterWorldFogAreaNotify_CmdId_NONE;
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify_CmdId_CmdId_MAX = EnterWorldFogAreaNotify_CmdId_CMD_ID;
const int EnterWorldFogAreaNotify_CmdId_CmdId_ARRAYSIZE = EnterWorldFogAreaNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterWorldFogAreaNotify_CmdId_descriptor();
inline const ::std::string& EnterWorldFogAreaNotify_CmdId_Name(EnterWorldFogAreaNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterWorldFogAreaNotify_CmdId_descriptor(), value);
}
inline bool EnterWorldFogAreaNotify_CmdId_Parse(
    const ::std::string& name, EnterWorldFogAreaNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterWorldFogAreaNotify_CmdId>(
    EnterWorldFogAreaNotify_CmdId_descriptor(), name, value);
}
enum UnlockWorldFogAreaNotify_CmdId {
  UnlockWorldFogAreaNotify_CmdId_NONE = 0,
  UnlockWorldFogAreaNotify_CmdId_CMD_ID = 3039,
  UnlockWorldFogAreaNotify_CmdId_ENET_CHANNEL_ID = 0,
  UnlockWorldFogAreaNotify_CmdId_ENET_IS_RELIABLE = 1,
  UnlockWorldFogAreaNotify_CmdId_UnlockWorldFogAreaNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  UnlockWorldFogAreaNotify_CmdId_UnlockWorldFogAreaNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool UnlockWorldFogAreaNotify_CmdId_IsValid(int value);
const UnlockWorldFogAreaNotify_CmdId UnlockWorldFogAreaNotify_CmdId_CmdId_MIN = UnlockWorldFogAreaNotify_CmdId_NONE;
const UnlockWorldFogAreaNotify_CmdId UnlockWorldFogAreaNotify_CmdId_CmdId_MAX = UnlockWorldFogAreaNotify_CmdId_CMD_ID;
const int UnlockWorldFogAreaNotify_CmdId_CmdId_ARRAYSIZE = UnlockWorldFogAreaNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* UnlockWorldFogAreaNotify_CmdId_descriptor();
inline const ::std::string& UnlockWorldFogAreaNotify_CmdId_Name(UnlockWorldFogAreaNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    UnlockWorldFogAreaNotify_CmdId_descriptor(), value);
}
inline bool UnlockWorldFogAreaNotify_CmdId_Parse(
    const ::std::string& name, UnlockWorldFogAreaNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UnlockWorldFogAreaNotify_CmdId>(
    UnlockWorldFogAreaNotify_CmdId_descriptor(), name, value);
}
enum LockWorldFogAreaNotify_CmdId {
  LockWorldFogAreaNotify_CmdId_NONE = 0,
  LockWorldFogAreaNotify_CmdId_CMD_ID = 3040,
  LockWorldFogAreaNotify_CmdId_ENET_CHANNEL_ID = 0,
  LockWorldFogAreaNotify_CmdId_ENET_IS_RELIABLE = 1,
  LockWorldFogAreaNotify_CmdId_LockWorldFogAreaNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LockWorldFogAreaNotify_CmdId_LockWorldFogAreaNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LockWorldFogAreaNotify_CmdId_IsValid(int value);
const LockWorldFogAreaNotify_CmdId LockWorldFogAreaNotify_CmdId_CmdId_MIN = LockWorldFogAreaNotify_CmdId_NONE;
const LockWorldFogAreaNotify_CmdId LockWorldFogAreaNotify_CmdId_CmdId_MAX = LockWorldFogAreaNotify_CmdId_CMD_ID;
const int LockWorldFogAreaNotify_CmdId_CmdId_ARRAYSIZE = LockWorldFogAreaNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* LockWorldFogAreaNotify_CmdId_descriptor();
inline const ::std::string& LockWorldFogAreaNotify_CmdId_Name(LockWorldFogAreaNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    LockWorldFogAreaNotify_CmdId_descriptor(), value);
}
inline bool LockWorldFogAreaNotify_CmdId_Parse(
    const ::std::string& name, LockWorldFogAreaNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LockWorldFogAreaNotify_CmdId>(
    LockWorldFogAreaNotify_CmdId_descriptor(), name, value);
}
enum SetEntityClientDataNotify_CmdId {
  SetEntityClientDataNotify_CmdId_NONE = 0,
  SetEntityClientDataNotify_CmdId_CMD_ID = 3041,
  SetEntityClientDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  SetEntityClientDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  SetEntityClientDataNotify_CmdId_IS_ALLOW_CLIENT = 1,
  SetEntityClientDataNotify_CmdId_SetEntityClientDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetEntityClientDataNotify_CmdId_SetEntityClientDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetEntityClientDataNotify_CmdId_IsValid(int value);
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify_CmdId_CmdId_MIN = SetEntityClientDataNotify_CmdId_NONE;
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify_CmdId_CmdId_MAX = SetEntityClientDataNotify_CmdId_CMD_ID;
const int SetEntityClientDataNotify_CmdId_CmdId_ARRAYSIZE = SetEntityClientDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetEntityClientDataNotify_CmdId_descriptor();
inline const ::std::string& SetEntityClientDataNotify_CmdId_Name(SetEntityClientDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetEntityClientDataNotify_CmdId_descriptor(), value);
}
inline bool SetEntityClientDataNotify_CmdId_Parse(
    const ::std::string& name, SetEntityClientDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetEntityClientDataNotify_CmdId>(
    SetEntityClientDataNotify_CmdId_descriptor(), name, value);
}
enum EnterType {
  ENTER_NONE = 0,
  ENTER_SELF = 1,
  ENTER_GOTO = 2,
  ENTER_JUMP = 3,
  ENTER_OTHER = 4,
  ENTER_BACK = 5,
  ENTER_DUNGEON = 6,
  ENTER_DUNGEON_REPLAY = 7,
  ENTER_GOTO_BY_PORTAL = 8,
  EnterType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnterType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnterType_IsValid(int value);
const EnterType EnterType_MIN = ENTER_NONE;
const EnterType EnterType_MAX = ENTER_GOTO_BY_PORTAL;
const int EnterType_ARRAYSIZE = EnterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnterType_descriptor();
inline const ::std::string& EnterType_Name(EnterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnterType_descriptor(), value);
}
inline bool EnterType_Parse(
    const ::std::string& name, EnterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnterType>(
    EnterType_descriptor(), name, value);
}
enum VisionType {
  VISION_NONE = 0,
  VISION_MEET = 1,
  VISION_REBORN = 2,
  VISION_REPLACE = 3,
  VISION_WAYPOINT_REBORN = 4,
  VISION_MISS = 5,
  VISION_DIE = 6,
  VISION_GATHER_ESCAPE = 7,
  VISION_REFRESH = 8,
  VISION_TRANSPORT = 9,
  VISION_REPLACE_DIE = 10,
  VisionType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  VisionType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool VisionType_IsValid(int value);
const VisionType VisionType_MIN = VISION_NONE;
const VisionType VisionType_MAX = VISION_REPLACE_DIE;
const int VisionType_ARRAYSIZE = VisionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* VisionType_descriptor();
inline const ::std::string& VisionType_Name(VisionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    VisionType_descriptor(), value);
}
inline bool VisionType_Parse(
    const ::std::string& name, VisionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VisionType>(
    VisionType_descriptor(), name, value);
}
enum CreateReason {
  CREATE_NONE = 0,
  CREATE_QUEST = 1,
  CREATE_ENERGY = 2,
  CreateReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CreateReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CreateReason_IsValid(int value);
const CreateReason CreateReason_MIN = CREATE_NONE;
const CreateReason CreateReason_MAX = CREATE_ENERGY;
const int CreateReason_ARRAYSIZE = CreateReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* CreateReason_descriptor();
inline const ::std::string& CreateReason_Name(CreateReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    CreateReason_descriptor(), value);
}
inline bool CreateReason_Parse(
    const ::std::string& name, CreateReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CreateReason>(
    CreateReason_descriptor(), name, value);
}
enum TransmitReason {
  TRANSMIT_NONE = 0,
  TRANSMIT_QUEST = 1,
  TransmitReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TransmitReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TransmitReason_IsValid(int value);
const TransmitReason TransmitReason_MIN = TRANSMIT_NONE;
const TransmitReason TransmitReason_MAX = TRANSMIT_QUEST;
const int TransmitReason_ARRAYSIZE = TransmitReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* TransmitReason_descriptor();
inline const ::std::string& TransmitReason_Name(TransmitReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    TransmitReason_descriptor(), value);
}
inline bool TransmitReason_Parse(
    const ::std::string& name, TransmitReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TransmitReason>(
    TransmitReason_descriptor(), name, value);
}
enum DropSubfieldType {
  DROP_SUBFIELD_NONE = 0,
  DROP_SUBFIELD_ONE = 1,
  DropSubfieldType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DropSubfieldType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DropSubfieldType_IsValid(int value);
const DropSubfieldType DropSubfieldType_MIN = DROP_SUBFIELD_NONE;
const DropSubfieldType DropSubfieldType_MAX = DROP_SUBFIELD_ONE;
const int DropSubfieldType_ARRAYSIZE = DropSubfieldType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DropSubfieldType_descriptor();
inline const ::std::string& DropSubfieldType_Name(DropSubfieldType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DropSubfieldType_descriptor(), value);
}
inline bool DropSubfieldType_Parse(
    const ::std::string& name, DropSubfieldType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DropSubfieldType>(
    DropSubfieldType_descriptor(), name, value);
}
enum SealBattleType {
  SEAL_BATTLE_KEEP_ALIVE = 0,
  SEAL_BATTLE_KILL_MONSTER = 1,
  SealBattleType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SealBattleType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SealBattleType_IsValid(int value);
const SealBattleType SealBattleType_MIN = SEAL_BATTLE_KEEP_ALIVE;
const SealBattleType SealBattleType_MAX = SEAL_BATTLE_KILL_MONSTER;
const int SealBattleType_ARRAYSIZE = SealBattleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SealBattleType_descriptor();
inline const ::std::string& SealBattleType_Name(SealBattleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SealBattleType_descriptor(), value);
}
inline bool SealBattleType_Parse(
    const ::std::string& name, SealBattleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SealBattleType>(
    SealBattleType_descriptor(), name, value);
}
enum DungeonEntryBlockReason {
  DUNGEON_ENTRY_REASON_NONE = 0,
  DUNGEON_ENTRY_REASON_LEVEL = 1,
  DUNGEON_ENTRY_REASON_QUEST = 2,
  DUNGEON_ENTRY_REASON_MULIPLE = 3,
  DungeonEntryBlockReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DungeonEntryBlockReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DungeonEntryBlockReason_IsValid(int value);
const DungeonEntryBlockReason DungeonEntryBlockReason_MIN = DUNGEON_ENTRY_REASON_NONE;
const DungeonEntryBlockReason DungeonEntryBlockReason_MAX = DUNGEON_ENTRY_REASON_MULIPLE;
const int DungeonEntryBlockReason_ARRAYSIZE = DungeonEntryBlockReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* DungeonEntryBlockReason_descriptor();
inline const ::std::string& DungeonEntryBlockReason_Name(DungeonEntryBlockReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    DungeonEntryBlockReason_descriptor(), value);
}
inline bool DungeonEntryBlockReason_Parse(
    const ::std::string& name, DungeonEntryBlockReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DungeonEntryBlockReason>(
    DungeonEntryBlockReason_descriptor(), name, value);
}
// ===================================================================

class PlayerEnterSceneNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerEnterSceneNotify) */ {
 public:
  PlayerEnterSceneNotify();
  virtual ~PlayerEnterSceneNotify();

  PlayerEnterSceneNotify(const PlayerEnterSceneNotify& from);

  inline PlayerEnterSceneNotify& operator=(const PlayerEnterSceneNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerEnterSceneNotify(PlayerEnterSceneNotify&& from) noexcept
    : PlayerEnterSceneNotify() {
    *this = ::std::move(from);
  }

  inline PlayerEnterSceneNotify& operator=(PlayerEnterSceneNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEnterSceneNotify& default_instance();

  static inline const PlayerEnterSceneNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterSceneNotify*>(
               &_PlayerEnterSceneNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PlayerEnterSceneNotify* other);
  friend void swap(PlayerEnterSceneNotify& a, PlayerEnterSceneNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerEnterSceneNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerEnterSceneNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerEnterSceneNotify& from);
  void MergeFrom(const PlayerEnterSceneNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerEnterSceneNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerEnterSceneNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerEnterSceneNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerEnterSceneNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerEnterSceneNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerEnterSceneNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerEnterSceneNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerEnterSceneNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerEnterSceneNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerEnterSceneNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerEnterSceneNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerEnterSceneNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerEnterSceneNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector prev_pos = 10;
  bool has_prev_pos() const;
  void clear_prev_pos();
  static const int kPrevPosFieldNumber = 10;
  const ::proto::Vector& prev_pos() const;
  ::proto::Vector* mutable_prev_pos();
  ::proto::Vector* release_prev_pos();
  void set_allocated_prev_pos(::proto::Vector* prev_pos);

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // .proto.EnterType type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::proto::EnterType type() const;
  void set_type(::proto::EnterType value);

  // uint64 scene_begin_time = 3;
  void clear_scene_begin_time();
  static const int kSceneBeginTimeFieldNumber = 3;
  ::google::protobuf::uint64 scene_begin_time() const;
  void set_scene_begin_time(::google::protobuf::uint64 value);

  // uint32 target_uid = 6;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 6;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 prev_scene_id = 9;
  void clear_prev_scene_id();
  static const int kPrevSceneIdFieldNumber = 9;
  ::google::protobuf::uint32 prev_scene_id() const;
  void set_prev_scene_id(::google::protobuf::uint32 value);

  // uint32 enter_scene_token = 13;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 13;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // uint32 dungeon_id = 11;
  void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 11;
  ::google::protobuf::uint32 dungeon_id() const;
  void set_dungeon_id(::google::protobuf::uint32 value);

  // uint32 world_level = 12;
  void clear_world_level();
  static const int kWorldLevelFieldNumber = 12;
  ::google::protobuf::uint32 world_level() const;
  void set_world_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerEnterSceneNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* prev_pos_;
  ::google::protobuf::uint32 scene_id_;
  int type_;
  ::google::protobuf::uint64 scene_begin_time_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 prev_scene_id_;
  ::google::protobuf::uint32 enter_scene_token_;
  ::google::protobuf::uint32 dungeon_id_;
  ::google::protobuf::uint32 world_level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LeaveSceneReq) */ {
 public:
  LeaveSceneReq();
  virtual ~LeaveSceneReq();

  LeaveSceneReq(const LeaveSceneReq& from);

  inline LeaveSceneReq& operator=(const LeaveSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveSceneReq(LeaveSceneReq&& from) noexcept
    : LeaveSceneReq() {
    *this = ::std::move(from);
  }

  inline LeaveSceneReq& operator=(LeaveSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveSceneReq& default_instance();

  static inline const LeaveSceneReq* internal_default_instance() {
    return reinterpret_cast<const LeaveSceneReq*>(
               &_LeaveSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LeaveSceneReq* other);
  friend void swap(LeaveSceneReq& a, LeaveSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveSceneReq& from);
  void MergeFrom(const LeaveSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LeaveSceneReq_CmdId CmdId;
  static const CmdId NONE =
    LeaveSceneReq_CmdId_NONE;
  static const CmdId CMD_ID =
    LeaveSceneReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LeaveSceneReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LeaveSceneReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    LeaveSceneReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return LeaveSceneReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LeaveSceneReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LeaveSceneReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LeaveSceneReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LeaveSceneReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LeaveSceneReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LeaveSceneReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.LeaveSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LeaveSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LeaveSceneRsp) */ {
 public:
  LeaveSceneRsp();
  virtual ~LeaveSceneRsp();

  LeaveSceneRsp(const LeaveSceneRsp& from);

  inline LeaveSceneRsp& operator=(const LeaveSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LeaveSceneRsp(LeaveSceneRsp&& from) noexcept
    : LeaveSceneRsp() {
    *this = ::std::move(from);
  }

  inline LeaveSceneRsp& operator=(LeaveSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LeaveSceneRsp& default_instance();

  static inline const LeaveSceneRsp* internal_default_instance() {
    return reinterpret_cast<const LeaveSceneRsp*>(
               &_LeaveSceneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LeaveSceneRsp* other);
  friend void swap(LeaveSceneRsp& a, LeaveSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LeaveSceneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LeaveSceneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LeaveSceneRsp& from);
  void MergeFrom(const LeaveSceneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LeaveSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LeaveSceneRsp_CmdId CmdId;
  static const CmdId NONE =
    LeaveSceneRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    LeaveSceneRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LeaveSceneRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LeaveSceneRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return LeaveSceneRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LeaveSceneRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LeaveSceneRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LeaveSceneRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LeaveSceneRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LeaveSceneRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LeaveSceneRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.LeaveSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneInitFinishReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneInitFinishReq) */ {
 public:
  SceneInitFinishReq();
  virtual ~SceneInitFinishReq();

  SceneInitFinishReq(const SceneInitFinishReq& from);

  inline SceneInitFinishReq& operator=(const SceneInitFinishReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneInitFinishReq(SceneInitFinishReq&& from) noexcept
    : SceneInitFinishReq() {
    *this = ::std::move(from);
  }

  inline SceneInitFinishReq& operator=(SceneInitFinishReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneInitFinishReq& default_instance();

  static inline const SceneInitFinishReq* internal_default_instance() {
    return reinterpret_cast<const SceneInitFinishReq*>(
               &_SceneInitFinishReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SceneInitFinishReq* other);
  friend void swap(SceneInitFinishReq& a, SceneInitFinishReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneInitFinishReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneInitFinishReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneInitFinishReq& from);
  void MergeFrom(const SceneInitFinishReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneInitFinishReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneInitFinishReq_CmdId CmdId;
  static const CmdId NONE =
    SceneInitFinishReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneInitFinishReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneInitFinishReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneInitFinishReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneInitFinishReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneInitFinishReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneInitFinishReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneInitFinishReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneInitFinishReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneInitFinishReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneInitFinishReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneInitFinishReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 1;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 1;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneInitFinishReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneInitFinishRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneInitFinishRsp) */ {
 public:
  SceneInitFinishRsp();
  virtual ~SceneInitFinishRsp();

  SceneInitFinishRsp(const SceneInitFinishRsp& from);

  inline SceneInitFinishRsp& operator=(const SceneInitFinishRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneInitFinishRsp(SceneInitFinishRsp&& from) noexcept
    : SceneInitFinishRsp() {
    *this = ::std::move(from);
  }

  inline SceneInitFinishRsp& operator=(SceneInitFinishRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneInitFinishRsp& default_instance();

  static inline const SceneInitFinishRsp* internal_default_instance() {
    return reinterpret_cast<const SceneInitFinishRsp*>(
               &_SceneInitFinishRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SceneInitFinishRsp* other);
  friend void swap(SceneInitFinishRsp& a, SceneInitFinishRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneInitFinishRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneInitFinishRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneInitFinishRsp& from);
  void MergeFrom(const SceneInitFinishRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneInitFinishRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneInitFinishRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneInitFinishRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneInitFinishRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneInitFinishRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneInitFinishRsp_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneInitFinishRsp_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneInitFinishRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneInitFinishRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneInitFinishRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneInitFinishRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneInitFinishRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneInitFinishRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneInitFinishRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneInitFinishRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityAppearNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityAppearNotify) */ {
 public:
  SceneEntityAppearNotify();
  virtual ~SceneEntityAppearNotify();

  SceneEntityAppearNotify(const SceneEntityAppearNotify& from);

  inline SceneEntityAppearNotify& operator=(const SceneEntityAppearNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityAppearNotify(SceneEntityAppearNotify&& from) noexcept
    : SceneEntityAppearNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntityAppearNotify& operator=(SceneEntityAppearNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityAppearNotify& default_instance();

  static inline const SceneEntityAppearNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntityAppearNotify*>(
               &_SceneEntityAppearNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SceneEntityAppearNotify* other);
  friend void swap(SceneEntityAppearNotify& a, SceneEntityAppearNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityAppearNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityAppearNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityAppearNotify& from);
  void MergeFrom(const SceneEntityAppearNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityAppearNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntityAppearNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneEntityAppearNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntityAppearNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntityAppearNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntityAppearNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntityAppearNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntityAppearNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntityAppearNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntityAppearNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntityAppearNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntityAppearNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntityAppearNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.SceneEntityInfo entity_list = 1;
  int entity_list_size() const;
  void clear_entity_list();
  static const int kEntityListFieldNumber = 1;
  const ::proto::SceneEntityInfo& entity_list(int index) const;
  ::proto::SceneEntityInfo* mutable_entity_list(int index);
  ::proto::SceneEntityInfo* add_entity_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
      mutable_entity_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
      entity_list() const;

  // .proto.VisionType appear_type = 2;
  void clear_appear_type();
  static const int kAppearTypeFieldNumber = 2;
  ::proto::VisionType appear_type() const;
  void set_appear_type(::proto::VisionType value);

  // uint32 param = 3;
  void clear_param();
  static const int kParamFieldNumber = 3;
  ::google::protobuf::uint32 param() const;
  void set_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityAppearNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo > entity_list_;
  int appear_type_;
  ::google::protobuf::uint32 param_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityDisappearNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityDisappearNotify) */ {
 public:
  SceneEntityDisappearNotify();
  virtual ~SceneEntityDisappearNotify();

  SceneEntityDisappearNotify(const SceneEntityDisappearNotify& from);

  inline SceneEntityDisappearNotify& operator=(const SceneEntityDisappearNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityDisappearNotify(SceneEntityDisappearNotify&& from) noexcept
    : SceneEntityDisappearNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntityDisappearNotify& operator=(SceneEntityDisappearNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityDisappearNotify& default_instance();

  static inline const SceneEntityDisappearNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntityDisappearNotify*>(
               &_SceneEntityDisappearNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SceneEntityDisappearNotify* other);
  friend void swap(SceneEntityDisappearNotify& a, SceneEntityDisappearNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityDisappearNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityDisappearNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityDisappearNotify& from);
  void MergeFrom(const SceneEntityDisappearNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityDisappearNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntityDisappearNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneEntityDisappearNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntityDisappearNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntityDisappearNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntityDisappearNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntityDisappearNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntityDisappearNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntityDisappearNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntityDisappearNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntityDisappearNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntityDisappearNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntityDisappearNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 entity_list = 1;
  int entity_list_size() const;
  void clear_entity_list();
  static const int kEntityListFieldNumber = 1;
  ::google::protobuf::uint32 entity_list(int index) const;
  void set_entity_list(int index, ::google::protobuf::uint32 value);
  void add_entity_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      entity_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_entity_list();

  // .proto.VisionType disappear_type = 2;
  void clear_disappear_type();
  static const int kDisappearTypeFieldNumber = 2;
  ::proto::VisionType disappear_type() const;
  void set_disappear_type(::proto::VisionType value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityDisappearNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > entity_list_;
  mutable int _entity_list_cached_byte_size_;
  int disappear_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityMoveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityMoveReq) */ {
 public:
  SceneEntityMoveReq();
  virtual ~SceneEntityMoveReq();

  SceneEntityMoveReq(const SceneEntityMoveReq& from);

  inline SceneEntityMoveReq& operator=(const SceneEntityMoveReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityMoveReq(SceneEntityMoveReq&& from) noexcept
    : SceneEntityMoveReq() {
    *this = ::std::move(from);
  }

  inline SceneEntityMoveReq& operator=(SceneEntityMoveReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityMoveReq& default_instance();

  static inline const SceneEntityMoveReq* internal_default_instance() {
    return reinterpret_cast<const SceneEntityMoveReq*>(
               &_SceneEntityMoveReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SceneEntityMoveReq* other);
  friend void swap(SceneEntityMoveReq& a, SceneEntityMoveReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityMoveReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityMoveReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityMoveReq& from);
  void MergeFrom(const SceneEntityMoveReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityMoveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntityMoveReq_CmdId CmdId;
  static const CmdId NONE =
    SceneEntityMoveReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntityMoveReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntityMoveReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntityMoveReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneEntityMoveReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntityMoveReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntityMoveReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntityMoveReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntityMoveReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntityMoveReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntityMoveReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntityMoveReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 2;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 2;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 reliable_seq = 4;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 4;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityMoveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 reliable_seq_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityMoveRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityMoveRsp) */ {
 public:
  SceneEntityMoveRsp();
  virtual ~SceneEntityMoveRsp();

  SceneEntityMoveRsp(const SceneEntityMoveRsp& from);

  inline SceneEntityMoveRsp& operator=(const SceneEntityMoveRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityMoveRsp(SceneEntityMoveRsp&& from) noexcept
    : SceneEntityMoveRsp() {
    *this = ::std::move(from);
  }

  inline SceneEntityMoveRsp& operator=(SceneEntityMoveRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityMoveRsp& default_instance();

  static inline const SceneEntityMoveRsp* internal_default_instance() {
    return reinterpret_cast<const SceneEntityMoveRsp*>(
               &_SceneEntityMoveRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SceneEntityMoveRsp* other);
  friend void swap(SceneEntityMoveRsp& a, SceneEntityMoveRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityMoveRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityMoveRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityMoveRsp& from);
  void MergeFrom(const SceneEntityMoveRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityMoveRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntityMoveRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneEntityMoveRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntityMoveRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntityMoveRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntityMoveRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntityMoveRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntityMoveRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntityMoveRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntityMoveRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntityMoveRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntityMoveRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntityMoveRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MotionInfo fail_motion = 3;
  bool has_fail_motion() const;
  void clear_fail_motion();
  static const int kFailMotionFieldNumber = 3;
  const ::proto::MotionInfo& fail_motion() const;
  ::proto::MotionInfo* mutable_fail_motion();
  ::proto::MotionInfo* release_fail_motion();
  void set_allocated_fail_motion(::proto::MotionInfo* fail_motion);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 4;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 4;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 reliable_seq = 5;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 5;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityMoveRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* fail_motion_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 reliable_seq_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAvatarStaminaStepReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAvatarStaminaStepReq) */ {
 public:
  SceneAvatarStaminaStepReq();
  virtual ~SceneAvatarStaminaStepReq();

  SceneAvatarStaminaStepReq(const SceneAvatarStaminaStepReq& from);

  inline SceneAvatarStaminaStepReq& operator=(const SceneAvatarStaminaStepReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAvatarStaminaStepReq(SceneAvatarStaminaStepReq&& from) noexcept
    : SceneAvatarStaminaStepReq() {
    *this = ::std::move(from);
  }

  inline SceneAvatarStaminaStepReq& operator=(SceneAvatarStaminaStepReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAvatarStaminaStepReq& default_instance();

  static inline const SceneAvatarStaminaStepReq* internal_default_instance() {
    return reinterpret_cast<const SceneAvatarStaminaStepReq*>(
               &_SceneAvatarStaminaStepReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SceneAvatarStaminaStepReq* other);
  friend void swap(SceneAvatarStaminaStepReq& a, SceneAvatarStaminaStepReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAvatarStaminaStepReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAvatarStaminaStepReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAvatarStaminaStepReq& from);
  void MergeFrom(const SceneAvatarStaminaStepReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAvatarStaminaStepReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneAvatarStaminaStepReq_CmdId CmdId;
  static const CmdId NONE =
    SceneAvatarStaminaStepReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneAvatarStaminaStepReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneAvatarStaminaStepReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneAvatarStaminaStepReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneAvatarStaminaStepReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneAvatarStaminaStepReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneAvatarStaminaStepReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneAvatarStaminaStepReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneAvatarStaminaStepReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneAvatarStaminaStepReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneAvatarStaminaStepReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneAvatarStaminaStepReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // bool use_client_rot = 1;
  void clear_use_client_rot();
  static const int kUseClientRotFieldNumber = 1;
  bool use_client_rot() const;
  void set_use_client_rot(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneAvatarStaminaStepReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* rot_;
  bool use_client_rot_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAvatarStaminaStepRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAvatarStaminaStepRsp) */ {
 public:
  SceneAvatarStaminaStepRsp();
  virtual ~SceneAvatarStaminaStepRsp();

  SceneAvatarStaminaStepRsp(const SceneAvatarStaminaStepRsp& from);

  inline SceneAvatarStaminaStepRsp& operator=(const SceneAvatarStaminaStepRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAvatarStaminaStepRsp(SceneAvatarStaminaStepRsp&& from) noexcept
    : SceneAvatarStaminaStepRsp() {
    *this = ::std::move(from);
  }

  inline SceneAvatarStaminaStepRsp& operator=(SceneAvatarStaminaStepRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAvatarStaminaStepRsp& default_instance();

  static inline const SceneAvatarStaminaStepRsp* internal_default_instance() {
    return reinterpret_cast<const SceneAvatarStaminaStepRsp*>(
               &_SceneAvatarStaminaStepRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SceneAvatarStaminaStepRsp* other);
  friend void swap(SceneAvatarStaminaStepRsp& a, SceneAvatarStaminaStepRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAvatarStaminaStepRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAvatarStaminaStepRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAvatarStaminaStepRsp& from);
  void MergeFrom(const SceneAvatarStaminaStepRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAvatarStaminaStepRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneAvatarStaminaStepRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneAvatarStaminaStepRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneAvatarStaminaStepRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneAvatarStaminaStepRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneAvatarStaminaStepRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneAvatarStaminaStepRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneAvatarStaminaStepRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneAvatarStaminaStepRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneAvatarStaminaStepRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneAvatarStaminaStepRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneAvatarStaminaStepRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneAvatarStaminaStepRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector rot = 3;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 3;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool use_client_rot = 2;
  void clear_use_client_rot();
  static const int kUseClientRotFieldNumber = 2;
  bool use_client_rot() const;
  void set_use_client_rot(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneAvatarStaminaStepRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* rot_;
  ::google::protobuf::int32 retcode_;
  bool use_client_rot_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityMoveNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityMoveNotify) */ {
 public:
  SceneEntityMoveNotify();
  virtual ~SceneEntityMoveNotify();

  SceneEntityMoveNotify(const SceneEntityMoveNotify& from);

  inline SceneEntityMoveNotify& operator=(const SceneEntityMoveNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityMoveNotify(SceneEntityMoveNotify&& from) noexcept
    : SceneEntityMoveNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntityMoveNotify& operator=(SceneEntityMoveNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityMoveNotify& default_instance();

  static inline const SceneEntityMoveNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntityMoveNotify*>(
               &_SceneEntityMoveNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SceneEntityMoveNotify* other);
  friend void swap(SceneEntityMoveNotify& a, SceneEntityMoveNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityMoveNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityMoveNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityMoveNotify& from);
  void MergeFrom(const SceneEntityMoveNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityMoveNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntityMoveNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneEntityMoveNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntityMoveNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntityMoveNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntityMoveNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntityMoveNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntityMoveNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntityMoveNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntityMoveNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntityMoveNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntityMoveNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntityMoveNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 2;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 2;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 reliable_seq = 4;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 4;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityMoveNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 reliable_seq_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerLocationNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerLocationNotify) */ {
 public:
  ScenePlayerLocationNotify();
  virtual ~ScenePlayerLocationNotify();

  ScenePlayerLocationNotify(const ScenePlayerLocationNotify& from);

  inline ScenePlayerLocationNotify& operator=(const ScenePlayerLocationNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerLocationNotify(ScenePlayerLocationNotify&& from) noexcept
    : ScenePlayerLocationNotify() {
    *this = ::std::move(from);
  }

  inline ScenePlayerLocationNotify& operator=(ScenePlayerLocationNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerLocationNotify& default_instance();

  static inline const ScenePlayerLocationNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerLocationNotify*>(
               &_ScenePlayerLocationNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ScenePlayerLocationNotify* other);
  friend void swap(ScenePlayerLocationNotify& a, ScenePlayerLocationNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerLocationNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerLocationNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerLocationNotify& from);
  void MergeFrom(const ScenePlayerLocationNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerLocationNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ScenePlayerLocationNotify_CmdId CmdId;
  static const CmdId NONE =
    ScenePlayerLocationNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ScenePlayerLocationNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ScenePlayerLocationNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ScenePlayerLocationNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ScenePlayerLocationNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ScenePlayerLocationNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ScenePlayerLocationNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ScenePlayerLocationNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ScenePlayerLocationNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ScenePlayerLocationNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ScenePlayerLocationNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.PlayerLocationInfo player_loc_list = 2;
  int player_loc_list_size() const;
  void clear_player_loc_list();
  static const int kPlayerLocListFieldNumber = 2;
  const ::proto::PlayerLocationInfo& player_loc_list(int index) const;
  ::proto::PlayerLocationInfo* mutable_player_loc_list(int index);
  ::proto::PlayerLocationInfo* add_player_loc_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
      mutable_player_loc_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
      player_loc_list() const;

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerLocationNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo > player_loc_list_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetScenePointReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetScenePointReq) */ {
 public:
  GetScenePointReq();
  virtual ~GetScenePointReq();

  GetScenePointReq(const GetScenePointReq& from);

  inline GetScenePointReq& operator=(const GetScenePointReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetScenePointReq(GetScenePointReq&& from) noexcept
    : GetScenePointReq() {
    *this = ::std::move(from);
  }

  inline GetScenePointReq& operator=(GetScenePointReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScenePointReq& default_instance();

  static inline const GetScenePointReq* internal_default_instance() {
    return reinterpret_cast<const GetScenePointReq*>(
               &_GetScenePointReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GetScenePointReq* other);
  friend void swap(GetScenePointReq& a, GetScenePointReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetScenePointReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetScenePointReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetScenePointReq& from);
  void MergeFrom(const GetScenePointReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetScenePointReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetScenePointReq_CmdId CmdId;
  static const CmdId NONE =
    GetScenePointReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetScenePointReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetScenePointReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetScenePointReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetScenePointReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetScenePointReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetScenePointReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetScenePointReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetScenePointReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetScenePointReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetScenePointReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetScenePointReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 belong_uid = 2;
  void clear_belong_uid();
  static const int kBelongUidFieldNumber = 2;
  ::google::protobuf::uint32 belong_uid() const;
  void set_belong_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetScenePointReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 belong_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CityInfo) */ {
 public:
  CityInfo();
  virtual ~CityInfo();

  CityInfo(const CityInfo& from);

  inline CityInfo& operator=(const CityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CityInfo(CityInfo&& from) noexcept
    : CityInfo() {
    *this = ::std::move(from);
  }

  inline CityInfo& operator=(CityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CityInfo& default_instance();

  static inline const CityInfo* internal_default_instance() {
    return reinterpret_cast<const CityInfo*>(
               &_CityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CityInfo* other);
  friend void swap(CityInfo& a, CityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CityInfo& from);
  void MergeFrom(const CityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 city_id = 1;
  void clear_city_id();
  static const int kCityIdFieldNumber = 1;
  ::google::protobuf::uint32 city_id() const;
  void set_city_id(::google::protobuf::uint32 value);

  // uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 crystal_num = 3;
  void clear_crystal_num();
  static const int kCrystalNumFieldNumber = 3;
  ::google::protobuf::uint32 crystal_num() const;
  void set_crystal_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 city_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 crystal_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetScenePointRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetScenePointRsp) */ {
 public:
  GetScenePointRsp();
  virtual ~GetScenePointRsp();

  GetScenePointRsp(const GetScenePointRsp& from);

  inline GetScenePointRsp& operator=(const GetScenePointRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetScenePointRsp(GetScenePointRsp&& from) noexcept
    : GetScenePointRsp() {
    *this = ::std::move(from);
  }

  inline GetScenePointRsp& operator=(GetScenePointRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScenePointRsp& default_instance();

  static inline const GetScenePointRsp* internal_default_instance() {
    return reinterpret_cast<const GetScenePointRsp*>(
               &_GetScenePointRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetScenePointRsp* other);
  friend void swap(GetScenePointRsp& a, GetScenePointRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetScenePointRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetScenePointRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetScenePointRsp& from);
  void MergeFrom(const GetScenePointRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetScenePointRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetScenePointRsp_CmdId CmdId;
  static const CmdId NONE =
    GetScenePointRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetScenePointRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetScenePointRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetScenePointRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetScenePointRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetScenePointRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetScenePointRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetScenePointRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetScenePointRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetScenePointRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetScenePointRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 unlocked_point_list = 3;
  int unlocked_point_list_size() const;
  void clear_unlocked_point_list();
  static const int kUnlockedPointListFieldNumber = 3;
  ::google::protobuf::uint32 unlocked_point_list(int index) const;
  void set_unlocked_point_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_point_list();

  // repeated uint32 unlock_area_list = 5;
  int unlock_area_list_size() const;
  void clear_unlock_area_list();
  static const int kUnlockAreaListFieldNumber = 5;
  ::google::protobuf::uint32 unlock_area_list(int index) const;
  void set_unlock_area_list(int index, ::google::protobuf::uint32 value);
  void add_unlock_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_area_list();

  // repeated uint32 locked_point_list = 6;
  int locked_point_list_size() const;
  void clear_locked_point_list();
  static const int kLockedPointListFieldNumber = 6;
  ::google::protobuf::uint32 locked_point_list(int index) const;
  void set_locked_point_list(int index, ::google::protobuf::uint32 value);
  void add_locked_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      locked_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_locked_point_list();

  // repeated uint32 to_be_explore_dungeon_entry_list = 7;
  int to_be_explore_dungeon_entry_list_size() const;
  void clear_to_be_explore_dungeon_entry_list();
  static const int kToBeExploreDungeonEntryListFieldNumber = 7;
  ::google::protobuf::uint32 to_be_explore_dungeon_entry_list(int index) const;
  void set_to_be_explore_dungeon_entry_list(int index, ::google::protobuf::uint32 value);
  void add_to_be_explore_dungeon_entry_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      to_be_explore_dungeon_entry_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_to_be_explore_dungeon_entry_list();

  // repeated uint32 not_explored_dungeon_entry_list = 8;
  int not_explored_dungeon_entry_list_size() const;
  void clear_not_explored_dungeon_entry_list();
  static const int kNotExploredDungeonEntryListFieldNumber = 8;
  ::google::protobuf::uint32 not_explored_dungeon_entry_list(int index) const;
  void set_not_explored_dungeon_entry_list(int index, ::google::protobuf::uint32 value);
  void add_not_explored_dungeon_entry_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      not_explored_dungeon_entry_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_not_explored_dungeon_entry_list();

  // repeated uint32 group_unlimit_point_list = 9;
  int group_unlimit_point_list_size() const;
  void clear_group_unlimit_point_list();
  static const int kGroupUnlimitPointListFieldNumber = 9;
  ::google::protobuf::uint32 group_unlimit_point_list(int index) const;
  void set_group_unlimit_point_list(int index, ::google::protobuf::uint32 value);
  void add_group_unlimit_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      group_unlimit_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_group_unlimit_point_list();

  // repeated uint32 unlocked_fog_level_1_area_list = 10;
  int unlocked_fog_level_1_area_list_size() const;
  void clear_unlocked_fog_level_1_area_list();
  static const int kUnlockedFogLevel1AreaListFieldNumber = 10;
  ::google::protobuf::uint32 unlocked_fog_level_1_area_list(int index) const;
  void set_unlocked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_fog_level_1_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_fog_level_1_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_fog_level_1_area_list();

  // repeated uint32 unlokced_fog_level_2_area_list = 11;
  int unlokced_fog_level_2_area_list_size() const;
  void clear_unlokced_fog_level_2_area_list();
  static const int kUnlokcedFogLevel2AreaListFieldNumber = 11;
  ::google::protobuf::uint32 unlokced_fog_level_2_area_list(int index) const;
  void set_unlokced_fog_level_2_area_list(int index, ::google::protobuf::uint32 value);
  void add_unlokced_fog_level_2_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlokced_fog_level_2_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlokced_fog_level_2_area_list();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 belong_uid = 4;
  void clear_belong_uid();
  static const int kBelongUidFieldNumber = 4;
  ::google::protobuf::uint32 belong_uid() const;
  void set_belong_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetScenePointRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_point_list_;
  mutable int _unlocked_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_area_list_;
  mutable int _unlock_area_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > locked_point_list_;
  mutable int _locked_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > to_be_explore_dungeon_entry_list_;
  mutable int _to_be_explore_dungeon_entry_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > not_explored_dungeon_entry_list_;
  mutable int _not_explored_dungeon_entry_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > group_unlimit_point_list_;
  mutable int _group_unlimit_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_fog_level_1_area_list_;
  mutable int _unlocked_fog_level_1_area_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlokced_fog_level_2_area_list_;
  mutable int _unlokced_fog_level_2_area_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 belong_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterTransPointRegionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterTransPointRegionNotify) */ {
 public:
  EnterTransPointRegionNotify();
  virtual ~EnterTransPointRegionNotify();

  EnterTransPointRegionNotify(const EnterTransPointRegionNotify& from);

  inline EnterTransPointRegionNotify& operator=(const EnterTransPointRegionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterTransPointRegionNotify(EnterTransPointRegionNotify&& from) noexcept
    : EnterTransPointRegionNotify() {
    *this = ::std::move(from);
  }

  inline EnterTransPointRegionNotify& operator=(EnterTransPointRegionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterTransPointRegionNotify& default_instance();

  static inline const EnterTransPointRegionNotify* internal_default_instance() {
    return reinterpret_cast<const EnterTransPointRegionNotify*>(
               &_EnterTransPointRegionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(EnterTransPointRegionNotify* other);
  friend void swap(EnterTransPointRegionNotify& a, EnterTransPointRegionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterTransPointRegionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterTransPointRegionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterTransPointRegionNotify& from);
  void MergeFrom(const EnterTransPointRegionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterTransPointRegionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterTransPointRegionNotify_CmdId CmdId;
  static const CmdId NONE =
    EnterTransPointRegionNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterTransPointRegionNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterTransPointRegionNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterTransPointRegionNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EnterTransPointRegionNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EnterTransPointRegionNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterTransPointRegionNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterTransPointRegionNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterTransPointRegionNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterTransPointRegionNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterTransPointRegionNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterTransPointRegionNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 point_id = 2;
  void clear_point_id();
  static const int kPointIdFieldNumber = 2;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterTransPointRegionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExitTransPointRegionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExitTransPointRegionNotify) */ {
 public:
  ExitTransPointRegionNotify();
  virtual ~ExitTransPointRegionNotify();

  ExitTransPointRegionNotify(const ExitTransPointRegionNotify& from);

  inline ExitTransPointRegionNotify& operator=(const ExitTransPointRegionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitTransPointRegionNotify(ExitTransPointRegionNotify&& from) noexcept
    : ExitTransPointRegionNotify() {
    *this = ::std::move(from);
  }

  inline ExitTransPointRegionNotify& operator=(ExitTransPointRegionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitTransPointRegionNotify& default_instance();

  static inline const ExitTransPointRegionNotify* internal_default_instance() {
    return reinterpret_cast<const ExitTransPointRegionNotify*>(
               &_ExitTransPointRegionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(ExitTransPointRegionNotify* other);
  friend void swap(ExitTransPointRegionNotify& a, ExitTransPointRegionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitTransPointRegionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitTransPointRegionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitTransPointRegionNotify& from);
  void MergeFrom(const ExitTransPointRegionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitTransPointRegionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExitTransPointRegionNotify_CmdId CmdId;
  static const CmdId NONE =
    ExitTransPointRegionNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ExitTransPointRegionNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ExitTransPointRegionNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ExitTransPointRegionNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ExitTransPointRegionNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ExitTransPointRegionNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ExitTransPointRegionNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ExitTransPointRegionNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ExitTransPointRegionNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ExitTransPointRegionNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ExitTransPointRegionNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ExitTransPointRegionNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 point_id = 2;
  void clear_point_id();
  static const int kPointIdFieldNumber = 2;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ExitTransPointRegionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePointUnlockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePointUnlockNotify) */ {
 public:
  ScenePointUnlockNotify();
  virtual ~ScenePointUnlockNotify();

  ScenePointUnlockNotify(const ScenePointUnlockNotify& from);

  inline ScenePointUnlockNotify& operator=(const ScenePointUnlockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePointUnlockNotify(ScenePointUnlockNotify&& from) noexcept
    : ScenePointUnlockNotify() {
    *this = ::std::move(from);
  }

  inline ScenePointUnlockNotify& operator=(ScenePointUnlockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePointUnlockNotify& default_instance();

  static inline const ScenePointUnlockNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePointUnlockNotify*>(
               &_ScenePointUnlockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(ScenePointUnlockNotify* other);
  friend void swap(ScenePointUnlockNotify& a, ScenePointUnlockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePointUnlockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePointUnlockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePointUnlockNotify& from);
  void MergeFrom(const ScenePointUnlockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePointUnlockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ScenePointUnlockNotify_CmdId CmdId;
  static const CmdId NONE =
    ScenePointUnlockNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ScenePointUnlockNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ScenePointUnlockNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ScenePointUnlockNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ScenePointUnlockNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ScenePointUnlockNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ScenePointUnlockNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ScenePointUnlockNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ScenePointUnlockNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ScenePointUnlockNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ScenePointUnlockNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 point_list = 2;
  int point_list_size() const;
  void clear_point_list();
  static const int kPointListFieldNumber = 2;
  ::google::protobuf::uint32 point_list(int index) const;
  void set_point_list(int index, ::google::protobuf::uint32 value);
  void add_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_point_list();

  // repeated uint32 locked_point_list = 3;
  int locked_point_list_size() const;
  void clear_locked_point_list();
  static const int kLockedPointListFieldNumber = 3;
  ::google::protobuf::uint32 locked_point_list(int index) const;
  void set_locked_point_list(int index, ::google::protobuf::uint32 value);
  void add_locked_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      locked_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_locked_point_list();

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ScenePointUnlockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > point_list_;
  mutable int _point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > locked_point_list_;
  mutable int _locked_point_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTransToPointReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTransToPointReq) */ {
 public:
  SceneTransToPointReq();
  virtual ~SceneTransToPointReq();

  SceneTransToPointReq(const SceneTransToPointReq& from);

  inline SceneTransToPointReq& operator=(const SceneTransToPointReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTransToPointReq(SceneTransToPointReq&& from) noexcept
    : SceneTransToPointReq() {
    *this = ::std::move(from);
  }

  inline SceneTransToPointReq& operator=(SceneTransToPointReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTransToPointReq& default_instance();

  static inline const SceneTransToPointReq* internal_default_instance() {
    return reinterpret_cast<const SceneTransToPointReq*>(
               &_SceneTransToPointReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SceneTransToPointReq* other);
  friend void swap(SceneTransToPointReq& a, SceneTransToPointReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTransToPointReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTransToPointReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTransToPointReq& from);
  void MergeFrom(const SceneTransToPointReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTransToPointReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneTransToPointReq_CmdId CmdId;
  static const CmdId NONE =
    SceneTransToPointReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneTransToPointReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneTransToPointReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneTransToPointReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneTransToPointReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneTransToPointReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneTransToPointReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneTransToPointReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneTransToPointReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneTransToPointReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneTransToPointReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneTransToPointReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 point_id = 2;
  void clear_point_id();
  static const int kPointIdFieldNumber = 2;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneTransToPointReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTransToPointRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTransToPointRsp) */ {
 public:
  SceneTransToPointRsp();
  virtual ~SceneTransToPointRsp();

  SceneTransToPointRsp(const SceneTransToPointRsp& from);

  inline SceneTransToPointRsp& operator=(const SceneTransToPointRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTransToPointRsp(SceneTransToPointRsp&& from) noexcept
    : SceneTransToPointRsp() {
    *this = ::std::move(from);
  }

  inline SceneTransToPointRsp& operator=(SceneTransToPointRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTransToPointRsp& default_instance();

  static inline const SceneTransToPointRsp* internal_default_instance() {
    return reinterpret_cast<const SceneTransToPointRsp*>(
               &_SceneTransToPointRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SceneTransToPointRsp* other);
  friend void swap(SceneTransToPointRsp& a, SceneTransToPointRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTransToPointRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTransToPointRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTransToPointRsp& from);
  void MergeFrom(const SceneTransToPointRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTransToPointRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneTransToPointRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneTransToPointRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneTransToPointRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneTransToPointRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneTransToPointRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneTransToPointRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneTransToPointRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneTransToPointRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneTransToPointRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneTransToPointRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneTransToPointRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneTransToPointRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 point_id = 3;
  void clear_point_id();
  static const int kPointIdFieldNumber = 3;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneTransToPointRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityJumpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityJumpNotify) */ {
 public:
  EntityJumpNotify();
  virtual ~EntityJumpNotify();

  EntityJumpNotify(const EntityJumpNotify& from);

  inline EntityJumpNotify& operator=(const EntityJumpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityJumpNotify(EntityJumpNotify&& from) noexcept
    : EntityJumpNotify() {
    *this = ::std::move(from);
  }

  inline EntityJumpNotify& operator=(EntityJumpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityJumpNotify& default_instance();

  static inline const EntityJumpNotify* internal_default_instance() {
    return reinterpret_cast<const EntityJumpNotify*>(
               &_EntityJumpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(EntityJumpNotify* other);
  friend void swap(EntityJumpNotify& a, EntityJumpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityJumpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityJumpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityJumpNotify& from);
  void MergeFrom(const EntityJumpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityJumpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityJumpNotify_CmdId CmdId;
  static const CmdId NONE =
    EntityJumpNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EntityJumpNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EntityJumpNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EntityJumpNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EntityJumpNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EntityJumpNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EntityJumpNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EntityJumpNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EntityJumpNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EntityJumpNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EntityJumpNotify_CmdId_Parse(name, value);
  }

  typedef EntityJumpNotify_Type Type;
  static const Type NULL_ =
    EntityJumpNotify_Type_NULL_;
  static const Type ACTIVE =
    EntityJumpNotify_Type_ACTIVE;
  static const Type PASSIVE =
    EntityJumpNotify_Type_PASSIVE;
  static inline bool Type_IsValid(int value) {
    return EntityJumpNotify_Type_IsValid(value);
  }
  static const Type Type_MIN =
    EntityJumpNotify_Type_Type_MIN;
  static const Type Type_MAX =
    EntityJumpNotify_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    EntityJumpNotify_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return EntityJumpNotify_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return EntityJumpNotify_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return EntityJumpNotify_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 4;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 4;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // .proto.EntityJumpNotify.Type jump_type = 2;
  void clear_jump_type();
  static const int kJumpTypeFieldNumber = 2;
  ::proto::EntityJumpNotify_Type jump_type() const;
  void set_jump_type(::proto::EntityJumpNotify_Type value);

  // @@protoc_insertion_point(class_scope:proto.EntityJumpNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 entity_id_;
  int jump_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSceneAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetSceneAreaReq) */ {
 public:
  GetSceneAreaReq();
  virtual ~GetSceneAreaReq();

  GetSceneAreaReq(const GetSceneAreaReq& from);

  inline GetSceneAreaReq& operator=(const GetSceneAreaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSceneAreaReq(GetSceneAreaReq&& from) noexcept
    : GetSceneAreaReq() {
    *this = ::std::move(from);
  }

  inline GetSceneAreaReq& operator=(GetSceneAreaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSceneAreaReq& default_instance();

  static inline const GetSceneAreaReq* internal_default_instance() {
    return reinterpret_cast<const GetSceneAreaReq*>(
               &_GetSceneAreaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(GetSceneAreaReq* other);
  friend void swap(GetSceneAreaReq& a, GetSceneAreaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSceneAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSceneAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSceneAreaReq& from);
  void MergeFrom(const GetSceneAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSceneAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetSceneAreaReq_CmdId CmdId;
  static const CmdId NONE =
    GetSceneAreaReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetSceneAreaReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetSceneAreaReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetSceneAreaReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetSceneAreaReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetSceneAreaReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetSceneAreaReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetSceneAreaReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetSceneAreaReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetSceneAreaReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetSceneAreaReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetSceneAreaReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 belong_uid = 2;
  void clear_belong_uid();
  static const int kBelongUidFieldNumber = 2;
  ::google::protobuf::uint32 belong_uid() const;
  void set_belong_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetSceneAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 belong_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSceneAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetSceneAreaRsp) */ {
 public:
  GetSceneAreaRsp();
  virtual ~GetSceneAreaRsp();

  GetSceneAreaRsp(const GetSceneAreaRsp& from);

  inline GetSceneAreaRsp& operator=(const GetSceneAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSceneAreaRsp(GetSceneAreaRsp&& from) noexcept
    : GetSceneAreaRsp() {
    *this = ::std::move(from);
  }

  inline GetSceneAreaRsp& operator=(GetSceneAreaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSceneAreaRsp& default_instance();

  static inline const GetSceneAreaRsp* internal_default_instance() {
    return reinterpret_cast<const GetSceneAreaRsp*>(
               &_GetSceneAreaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(GetSceneAreaRsp* other);
  friend void swap(GetSceneAreaRsp& a, GetSceneAreaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSceneAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSceneAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSceneAreaRsp& from);
  void MergeFrom(const GetSceneAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSceneAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetSceneAreaRsp_CmdId CmdId;
  static const CmdId NONE =
    GetSceneAreaRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetSceneAreaRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetSceneAreaRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetSceneAreaRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetSceneAreaRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetSceneAreaRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetSceneAreaRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetSceneAreaRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetSceneAreaRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetSceneAreaRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetSceneAreaRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 area_id_list = 3;
  int area_id_list_size() const;
  void clear_area_id_list();
  static const int kAreaIdListFieldNumber = 3;
  ::google::protobuf::uint32 area_id_list(int index) const;
  void set_area_id_list(int index, ::google::protobuf::uint32 value);
  void add_area_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      area_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_area_id_list();

  // repeated .proto.CityInfo city_info_list = 4;
  int city_info_list_size() const;
  void clear_city_info_list();
  static const int kCityInfoListFieldNumber = 4;
  const ::proto::CityInfo& city_info_list(int index) const;
  ::proto::CityInfo* mutable_city_info_list(int index);
  ::proto::CityInfo* add_city_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >*
      mutable_city_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >&
      city_info_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetSceneAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > area_id_list_;
  mutable int _area_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CityInfo > city_info_list_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAreaUnlockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAreaUnlockNotify) */ {
 public:
  SceneAreaUnlockNotify();
  virtual ~SceneAreaUnlockNotify();

  SceneAreaUnlockNotify(const SceneAreaUnlockNotify& from);

  inline SceneAreaUnlockNotify& operator=(const SceneAreaUnlockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAreaUnlockNotify(SceneAreaUnlockNotify&& from) noexcept
    : SceneAreaUnlockNotify() {
    *this = ::std::move(from);
  }

  inline SceneAreaUnlockNotify& operator=(SceneAreaUnlockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAreaUnlockNotify& default_instance();

  static inline const SceneAreaUnlockNotify* internal_default_instance() {
    return reinterpret_cast<const SceneAreaUnlockNotify*>(
               &_SceneAreaUnlockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SceneAreaUnlockNotify* other);
  friend void swap(SceneAreaUnlockNotify& a, SceneAreaUnlockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAreaUnlockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAreaUnlockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAreaUnlockNotify& from);
  void MergeFrom(const SceneAreaUnlockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAreaUnlockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneAreaUnlockNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneAreaUnlockNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneAreaUnlockNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneAreaUnlockNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneAreaUnlockNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneAreaUnlockNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneAreaUnlockNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneAreaUnlockNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneAreaUnlockNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneAreaUnlockNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneAreaUnlockNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneAreaUnlockNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 area_list = 2;
  int area_list_size() const;
  void clear_area_list();
  static const int kAreaListFieldNumber = 2;
  ::google::protobuf::uint32 area_list(int index) const;
  void set_area_list(int index, ::google::protobuf::uint32 value);
  void add_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_area_list();

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneAreaUnlockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > area_list_;
  mutable int _area_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityDrownReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityDrownReq) */ {
 public:
  SceneEntityDrownReq();
  virtual ~SceneEntityDrownReq();

  SceneEntityDrownReq(const SceneEntityDrownReq& from);

  inline SceneEntityDrownReq& operator=(const SceneEntityDrownReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityDrownReq(SceneEntityDrownReq&& from) noexcept
    : SceneEntityDrownReq() {
    *this = ::std::move(from);
  }

  inline SceneEntityDrownReq& operator=(SceneEntityDrownReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityDrownReq& default_instance();

  static inline const SceneEntityDrownReq* internal_default_instance() {
    return reinterpret_cast<const SceneEntityDrownReq*>(
               &_SceneEntityDrownReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(SceneEntityDrownReq* other);
  friend void swap(SceneEntityDrownReq& a, SceneEntityDrownReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityDrownReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityDrownReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityDrownReq& from);
  void MergeFrom(const SceneEntityDrownReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityDrownReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntityDrownReq_CmdId CmdId;
  static const CmdId NONE =
    SceneEntityDrownReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntityDrownReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntityDrownReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntityDrownReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneEntityDrownReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntityDrownReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntityDrownReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntityDrownReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntityDrownReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntityDrownReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntityDrownReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntityDrownReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityDrownReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntityDrownRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntityDrownRsp) */ {
 public:
  SceneEntityDrownRsp();
  virtual ~SceneEntityDrownRsp();

  SceneEntityDrownRsp(const SceneEntityDrownRsp& from);

  inline SceneEntityDrownRsp& operator=(const SceneEntityDrownRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntityDrownRsp(SceneEntityDrownRsp&& from) noexcept
    : SceneEntityDrownRsp() {
    *this = ::std::move(from);
  }

  inline SceneEntityDrownRsp& operator=(SceneEntityDrownRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntityDrownRsp& default_instance();

  static inline const SceneEntityDrownRsp* internal_default_instance() {
    return reinterpret_cast<const SceneEntityDrownRsp*>(
               &_SceneEntityDrownRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SceneEntityDrownRsp* other);
  friend void swap(SceneEntityDrownRsp& a, SceneEntityDrownRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntityDrownRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntityDrownRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntityDrownRsp& from);
  void MergeFrom(const SceneEntityDrownRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntityDrownRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntityDrownRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneEntityDrownRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntityDrownRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntityDrownRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntityDrownRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntityDrownRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntityDrownRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntityDrownRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntityDrownRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntityDrownRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntityDrownRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntityDrownRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneEntityDrownRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneCreateEntityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneCreateEntityReq) */ {
 public:
  SceneCreateEntityReq();
  virtual ~SceneCreateEntityReq();

  SceneCreateEntityReq(const SceneCreateEntityReq& from);

  inline SceneCreateEntityReq& operator=(const SceneCreateEntityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneCreateEntityReq(SceneCreateEntityReq&& from) noexcept
    : SceneCreateEntityReq() {
    *this = ::std::move(from);
  }

  inline SceneCreateEntityReq& operator=(SceneCreateEntityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneCreateEntityReq& default_instance();

  static inline const SceneCreateEntityReq* internal_default_instance() {
    return reinterpret_cast<const SceneCreateEntityReq*>(
               &_SceneCreateEntityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SceneCreateEntityReq* other);
  friend void swap(SceneCreateEntityReq& a, SceneCreateEntityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneCreateEntityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneCreateEntityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneCreateEntityReq& from);
  void MergeFrom(const SceneCreateEntityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneCreateEntityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneCreateEntityReq_CmdId CmdId;
  static const CmdId NONE =
    SceneCreateEntityReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneCreateEntityReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneCreateEntityReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneCreateEntityReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneCreateEntityReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneCreateEntityReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneCreateEntityReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneCreateEntityReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneCreateEntityReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneCreateEntityReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneCreateEntityReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneCreateEntityReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CreateEntityInfo entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  const ::proto::CreateEntityInfo& entity() const;
  ::proto::CreateEntityInfo* mutable_entity();
  ::proto::CreateEntityInfo* release_entity();
  void set_allocated_entity(::proto::CreateEntityInfo* entity);

  // .proto.CreateReason reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::proto::CreateReason reason() const;
  void set_reason(::proto::CreateReason value);

  // bool is_destroy_when_disconnect = 3;
  void clear_is_destroy_when_disconnect();
  static const int kIsDestroyWhenDisconnectFieldNumber = 3;
  bool is_destroy_when_disconnect() const;
  void set_is_destroy_when_disconnect(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneCreateEntityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CreateEntityInfo* entity_;
  int reason_;
  bool is_destroy_when_disconnect_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneCreateEntityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneCreateEntityRsp) */ {
 public:
  SceneCreateEntityRsp();
  virtual ~SceneCreateEntityRsp();

  SceneCreateEntityRsp(const SceneCreateEntityRsp& from);

  inline SceneCreateEntityRsp& operator=(const SceneCreateEntityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneCreateEntityRsp(SceneCreateEntityRsp&& from) noexcept
    : SceneCreateEntityRsp() {
    *this = ::std::move(from);
  }

  inline SceneCreateEntityRsp& operator=(SceneCreateEntityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneCreateEntityRsp& default_instance();

  static inline const SceneCreateEntityRsp* internal_default_instance() {
    return reinterpret_cast<const SceneCreateEntityRsp*>(
               &_SceneCreateEntityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(SceneCreateEntityRsp* other);
  friend void swap(SceneCreateEntityRsp& a, SceneCreateEntityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneCreateEntityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneCreateEntityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneCreateEntityRsp& from);
  void MergeFrom(const SceneCreateEntityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneCreateEntityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneCreateEntityRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneCreateEntityRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneCreateEntityRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneCreateEntityRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneCreateEntityRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneCreateEntityRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneCreateEntityRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneCreateEntityRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneCreateEntityRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneCreateEntityRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneCreateEntityRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneCreateEntityRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CreateEntityInfo entity = 3;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 3;
  const ::proto::CreateEntityInfo& entity() const;
  ::proto::CreateEntityInfo* mutable_entity();
  ::proto::CreateEntityInfo* release_entity();
  void set_allocated_entity(::proto::CreateEntityInfo* entity);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneCreateEntityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CreateEntityInfo* entity_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneDestroyEntityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneDestroyEntityReq) */ {
 public:
  SceneDestroyEntityReq();
  virtual ~SceneDestroyEntityReq();

  SceneDestroyEntityReq(const SceneDestroyEntityReq& from);

  inline SceneDestroyEntityReq& operator=(const SceneDestroyEntityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneDestroyEntityReq(SceneDestroyEntityReq&& from) noexcept
    : SceneDestroyEntityReq() {
    *this = ::std::move(from);
  }

  inline SceneDestroyEntityReq& operator=(SceneDestroyEntityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneDestroyEntityReq& default_instance();

  static inline const SceneDestroyEntityReq* internal_default_instance() {
    return reinterpret_cast<const SceneDestroyEntityReq*>(
               &_SceneDestroyEntityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(SceneDestroyEntityReq* other);
  friend void swap(SceneDestroyEntityReq& a, SceneDestroyEntityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneDestroyEntityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneDestroyEntityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneDestroyEntityReq& from);
  void MergeFrom(const SceneDestroyEntityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneDestroyEntityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneDestroyEntityReq_CmdId CmdId;
  static const CmdId NONE =
    SceneDestroyEntityReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneDestroyEntityReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneDestroyEntityReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneDestroyEntityReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneDestroyEntityReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneDestroyEntityReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneDestroyEntityReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneDestroyEntityReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneDestroyEntityReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneDestroyEntityReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneDestroyEntityReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneDestroyEntityReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneDestroyEntityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneDestroyEntityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneDestroyEntityRsp) */ {
 public:
  SceneDestroyEntityRsp();
  virtual ~SceneDestroyEntityRsp();

  SceneDestroyEntityRsp(const SceneDestroyEntityRsp& from);

  inline SceneDestroyEntityRsp& operator=(const SceneDestroyEntityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneDestroyEntityRsp(SceneDestroyEntityRsp&& from) noexcept
    : SceneDestroyEntityRsp() {
    *this = ::std::move(from);
  }

  inline SceneDestroyEntityRsp& operator=(SceneDestroyEntityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneDestroyEntityRsp& default_instance();

  static inline const SceneDestroyEntityRsp* internal_default_instance() {
    return reinterpret_cast<const SceneDestroyEntityRsp*>(
               &_SceneDestroyEntityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(SceneDestroyEntityRsp* other);
  friend void swap(SceneDestroyEntityRsp& a, SceneDestroyEntityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneDestroyEntityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneDestroyEntityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneDestroyEntityRsp& from);
  void MergeFrom(const SceneDestroyEntityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneDestroyEntityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneDestroyEntityRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneDestroyEntityRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneDestroyEntityRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneDestroyEntityRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneDestroyEntityRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneDestroyEntityRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneDestroyEntityRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneDestroyEntityRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneDestroyEntityRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneDestroyEntityRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneDestroyEntityRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneDestroyEntityRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneDestroyEntityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneForceUnlockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneForceUnlockNotify) */ {
 public:
  SceneForceUnlockNotify();
  virtual ~SceneForceUnlockNotify();

  SceneForceUnlockNotify(const SceneForceUnlockNotify& from);

  inline SceneForceUnlockNotify& operator=(const SceneForceUnlockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneForceUnlockNotify(SceneForceUnlockNotify&& from) noexcept
    : SceneForceUnlockNotify() {
    *this = ::std::move(from);
  }

  inline SceneForceUnlockNotify& operator=(SceneForceUnlockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneForceUnlockNotify& default_instance();

  static inline const SceneForceUnlockNotify* internal_default_instance() {
    return reinterpret_cast<const SceneForceUnlockNotify*>(
               &_SceneForceUnlockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(SceneForceUnlockNotify* other);
  friend void swap(SceneForceUnlockNotify& a, SceneForceUnlockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneForceUnlockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneForceUnlockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneForceUnlockNotify& from);
  void MergeFrom(const SceneForceUnlockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneForceUnlockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneForceUnlockNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneForceUnlockNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneForceUnlockNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneForceUnlockNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneForceUnlockNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneForceUnlockNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneForceUnlockNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneForceUnlockNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneForceUnlockNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneForceUnlockNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneForceUnlockNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneForceUnlockNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 force_id_list = 1;
  int force_id_list_size() const;
  void clear_force_id_list();
  static const int kForceIdListFieldNumber = 1;
  ::google::protobuf::uint32 force_id_list(int index) const;
  void set_force_id_list(int index, ::google::protobuf::uint32 value);
  void add_force_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      force_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_force_id_list();

  // bool is_add = 2;
  void clear_is_add();
  static const int kIsAddFieldNumber = 2;
  bool is_add() const;
  void set_is_add(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneForceUnlockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > force_id_list_;
  mutable int _force_id_list_cached_byte_size_;
  bool is_add_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneForceLockNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneForceLockNotify) */ {
 public:
  SceneForceLockNotify();
  virtual ~SceneForceLockNotify();

  SceneForceLockNotify(const SceneForceLockNotify& from);

  inline SceneForceLockNotify& operator=(const SceneForceLockNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneForceLockNotify(SceneForceLockNotify&& from) noexcept
    : SceneForceLockNotify() {
    *this = ::std::move(from);
  }

  inline SceneForceLockNotify& operator=(SceneForceLockNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneForceLockNotify& default_instance();

  static inline const SceneForceLockNotify* internal_default_instance() {
    return reinterpret_cast<const SceneForceLockNotify*>(
               &_SceneForceLockNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(SceneForceLockNotify* other);
  friend void swap(SceneForceLockNotify& a, SceneForceLockNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneForceLockNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneForceLockNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneForceLockNotify& from);
  void MergeFrom(const SceneForceLockNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneForceLockNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneForceLockNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneForceLockNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneForceLockNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneForceLockNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneForceLockNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneForceLockNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneForceLockNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneForceLockNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneForceLockNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneForceLockNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneForceLockNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneForceLockNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 force_id_list = 1;
  int force_id_list_size() const;
  void clear_force_id_list();
  static const int kForceIdListFieldNumber = 1;
  ::google::protobuf::uint32 force_id_list(int index) const;
  void set_force_id_list(int index, ::google::protobuf::uint32 value);
  void add_force_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      force_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_force_id_list();

  // @@protoc_insertion_point(class_scope:proto.SceneForceLockNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > force_id_list_;
  mutable int _force_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterWorldAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterWorldAreaReq) */ {
 public:
  EnterWorldAreaReq();
  virtual ~EnterWorldAreaReq();

  EnterWorldAreaReq(const EnterWorldAreaReq& from);

  inline EnterWorldAreaReq& operator=(const EnterWorldAreaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterWorldAreaReq(EnterWorldAreaReq&& from) noexcept
    : EnterWorldAreaReq() {
    *this = ::std::move(from);
  }

  inline EnterWorldAreaReq& operator=(EnterWorldAreaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterWorldAreaReq& default_instance();

  static inline const EnterWorldAreaReq* internal_default_instance() {
    return reinterpret_cast<const EnterWorldAreaReq*>(
               &_EnterWorldAreaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(EnterWorldAreaReq* other);
  friend void swap(EnterWorldAreaReq& a, EnterWorldAreaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterWorldAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterWorldAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterWorldAreaReq& from);
  void MergeFrom(const EnterWorldAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterWorldAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterWorldAreaReq_CmdId CmdId;
  static const CmdId NONE =
    EnterWorldAreaReq_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterWorldAreaReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterWorldAreaReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterWorldAreaReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EnterWorldAreaReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EnterWorldAreaReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterWorldAreaReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterWorldAreaReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterWorldAreaReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterWorldAreaReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterWorldAreaReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterWorldAreaReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 area_type = 1;
  void clear_area_type();
  static const int kAreaTypeFieldNumber = 1;
  ::google::protobuf::uint32 area_type() const;
  void set_area_type(::google::protobuf::uint32 value);

  // uint32 area_id = 2;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 2;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterWorldAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 area_type_;
  ::google::protobuf::uint32 area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterWorldAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterWorldAreaRsp) */ {
 public:
  EnterWorldAreaRsp();
  virtual ~EnterWorldAreaRsp();

  EnterWorldAreaRsp(const EnterWorldAreaRsp& from);

  inline EnterWorldAreaRsp& operator=(const EnterWorldAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterWorldAreaRsp(EnterWorldAreaRsp&& from) noexcept
    : EnterWorldAreaRsp() {
    *this = ::std::move(from);
  }

  inline EnterWorldAreaRsp& operator=(EnterWorldAreaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterWorldAreaRsp& default_instance();

  static inline const EnterWorldAreaRsp* internal_default_instance() {
    return reinterpret_cast<const EnterWorldAreaRsp*>(
               &_EnterWorldAreaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(EnterWorldAreaRsp* other);
  friend void swap(EnterWorldAreaRsp& a, EnterWorldAreaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterWorldAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterWorldAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterWorldAreaRsp& from);
  void MergeFrom(const EnterWorldAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterWorldAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterWorldAreaRsp_CmdId CmdId;
  static const CmdId NONE =
    EnterWorldAreaRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterWorldAreaRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterWorldAreaRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterWorldAreaRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EnterWorldAreaRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterWorldAreaRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterWorldAreaRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterWorldAreaRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterWorldAreaRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterWorldAreaRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterWorldAreaRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 area_type = 2;
  void clear_area_type();
  static const int kAreaTypeFieldNumber = 2;
  ::google::protobuf::uint32 area_type() const;
  void set_area_type(::google::protobuf::uint32 value);

  // uint32 area_id = 3;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 3;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterWorldAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 area_type_;
  ::google::protobuf::uint32 area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityForceSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityForceSyncReq) */ {
 public:
  EntityForceSyncReq();
  virtual ~EntityForceSyncReq();

  EntityForceSyncReq(const EntityForceSyncReq& from);

  inline EntityForceSyncReq& operator=(const EntityForceSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityForceSyncReq(EntityForceSyncReq&& from) noexcept
    : EntityForceSyncReq() {
    *this = ::std::move(from);
  }

  inline EntityForceSyncReq& operator=(EntityForceSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityForceSyncReq& default_instance();

  static inline const EntityForceSyncReq* internal_default_instance() {
    return reinterpret_cast<const EntityForceSyncReq*>(
               &_EntityForceSyncReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(EntityForceSyncReq* other);
  friend void swap(EntityForceSyncReq& a, EntityForceSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityForceSyncReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityForceSyncReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityForceSyncReq& from);
  void MergeFrom(const EntityForceSyncReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityForceSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityForceSyncReq_CmdId CmdId;
  static const CmdId NONE =
    EntityForceSyncReq_CmdId_NONE;
  static const CmdId CMD_ID =
    EntityForceSyncReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EntityForceSyncReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EntityForceSyncReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EntityForceSyncReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EntityForceSyncReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EntityForceSyncReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EntityForceSyncReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EntityForceSyncReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EntityForceSyncReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EntityForceSyncReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EntityForceSyncReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 2;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 2;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 room_id = 4;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 4;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityForceSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 room_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityForceSyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityForceSyncRsp) */ {
 public:
  EntityForceSyncRsp();
  virtual ~EntityForceSyncRsp();

  EntityForceSyncRsp(const EntityForceSyncRsp& from);

  inline EntityForceSyncRsp& operator=(const EntityForceSyncRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityForceSyncRsp(EntityForceSyncRsp&& from) noexcept
    : EntityForceSyncRsp() {
    *this = ::std::move(from);
  }

  inline EntityForceSyncRsp& operator=(EntityForceSyncRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityForceSyncRsp& default_instance();

  static inline const EntityForceSyncRsp* internal_default_instance() {
    return reinterpret_cast<const EntityForceSyncRsp*>(
               &_EntityForceSyncRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(EntityForceSyncRsp* other);
  friend void swap(EntityForceSyncRsp& a, EntityForceSyncRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityForceSyncRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityForceSyncRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityForceSyncRsp& from);
  void MergeFrom(const EntityForceSyncRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityForceSyncRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityForceSyncRsp_CmdId CmdId;
  static const CmdId NONE =
    EntityForceSyncRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    EntityForceSyncRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EntityForceSyncRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EntityForceSyncRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EntityForceSyncRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EntityForceSyncRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EntityForceSyncRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EntityForceSyncRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EntityForceSyncRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EntityForceSyncRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EntityForceSyncRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MotionInfo fail_motion = 3;
  bool has_fail_motion() const;
  void clear_fail_motion();
  static const int kFailMotionFieldNumber = 3;
  const ::proto::MotionInfo& fail_motion() const;
  ::proto::MotionInfo* mutable_fail_motion();
  ::proto::MotionInfo* release_fail_motion();
  void set_allocated_fail_motion(::proto::MotionInfo* fail_motion);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 4;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 4;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityForceSyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* fail_motion_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAreaExploreNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAreaExploreNotify) */ {
 public:
  SceneAreaExploreNotify();
  virtual ~SceneAreaExploreNotify();

  SceneAreaExploreNotify(const SceneAreaExploreNotify& from);

  inline SceneAreaExploreNotify& operator=(const SceneAreaExploreNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAreaExploreNotify(SceneAreaExploreNotify&& from) noexcept
    : SceneAreaExploreNotify() {
    *this = ::std::move(from);
  }

  inline SceneAreaExploreNotify& operator=(SceneAreaExploreNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAreaExploreNotify& default_instance();

  static inline const SceneAreaExploreNotify* internal_default_instance() {
    return reinterpret_cast<const SceneAreaExploreNotify*>(
               &_SceneAreaExploreNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(SceneAreaExploreNotify* other);
  friend void swap(SceneAreaExploreNotify& a, SceneAreaExploreNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAreaExploreNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAreaExploreNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAreaExploreNotify& from);
  void MergeFrom(const SceneAreaExploreNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAreaExploreNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneAreaExploreNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneAreaExploreNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneAreaExploreNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneAreaExploreNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneAreaExploreNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneAreaExploreNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneAreaExploreNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneAreaExploreNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneAreaExploreNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneAreaExploreNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneAreaExploreNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneAreaExploreNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 area_id = 1;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // float explore_percent = 2;
  void clear_explore_percent();
  static const int kExplorePercentFieldNumber = 2;
  float explore_percent() const;
  void set_explore_percent(float value);

  // uint32 event_id = 3;
  void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneAreaExploreNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 area_id_;
  float explore_percent_;
  ::google::protobuf::uint32 event_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGetAreaExplorePercentReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGetAreaExplorePercentReq) */ {
 public:
  SceneGetAreaExplorePercentReq();
  virtual ~SceneGetAreaExplorePercentReq();

  SceneGetAreaExplorePercentReq(const SceneGetAreaExplorePercentReq& from);

  inline SceneGetAreaExplorePercentReq& operator=(const SceneGetAreaExplorePercentReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGetAreaExplorePercentReq(SceneGetAreaExplorePercentReq&& from) noexcept
    : SceneGetAreaExplorePercentReq() {
    *this = ::std::move(from);
  }

  inline SceneGetAreaExplorePercentReq& operator=(SceneGetAreaExplorePercentReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGetAreaExplorePercentReq& default_instance();

  static inline const SceneGetAreaExplorePercentReq* internal_default_instance() {
    return reinterpret_cast<const SceneGetAreaExplorePercentReq*>(
               &_SceneGetAreaExplorePercentReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(SceneGetAreaExplorePercentReq* other);
  friend void swap(SceneGetAreaExplorePercentReq& a, SceneGetAreaExplorePercentReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGetAreaExplorePercentReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGetAreaExplorePercentReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGetAreaExplorePercentReq& from);
  void MergeFrom(const SceneGetAreaExplorePercentReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGetAreaExplorePercentReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneGetAreaExplorePercentReq_CmdId CmdId;
  static const CmdId NONE =
    SceneGetAreaExplorePercentReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneGetAreaExplorePercentReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneGetAreaExplorePercentReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneGetAreaExplorePercentReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneGetAreaExplorePercentReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneGetAreaExplorePercentReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneGetAreaExplorePercentReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneGetAreaExplorePercentReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneGetAreaExplorePercentReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneGetAreaExplorePercentReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneGetAreaExplorePercentReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneGetAreaExplorePercentReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 area_id = 1;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGetAreaExplorePercentReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneGetAreaExplorePercentRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneGetAreaExplorePercentRsp) */ {
 public:
  SceneGetAreaExplorePercentRsp();
  virtual ~SceneGetAreaExplorePercentRsp();

  SceneGetAreaExplorePercentRsp(const SceneGetAreaExplorePercentRsp& from);

  inline SceneGetAreaExplorePercentRsp& operator=(const SceneGetAreaExplorePercentRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneGetAreaExplorePercentRsp(SceneGetAreaExplorePercentRsp&& from) noexcept
    : SceneGetAreaExplorePercentRsp() {
    *this = ::std::move(from);
  }

  inline SceneGetAreaExplorePercentRsp& operator=(SceneGetAreaExplorePercentRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneGetAreaExplorePercentRsp& default_instance();

  static inline const SceneGetAreaExplorePercentRsp* internal_default_instance() {
    return reinterpret_cast<const SceneGetAreaExplorePercentRsp*>(
               &_SceneGetAreaExplorePercentRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(SceneGetAreaExplorePercentRsp* other);
  friend void swap(SceneGetAreaExplorePercentRsp& a, SceneGetAreaExplorePercentRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneGetAreaExplorePercentRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneGetAreaExplorePercentRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneGetAreaExplorePercentRsp& from);
  void MergeFrom(const SceneGetAreaExplorePercentRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneGetAreaExplorePercentRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneGetAreaExplorePercentRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneGetAreaExplorePercentRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneGetAreaExplorePercentRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneGetAreaExplorePercentRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneGetAreaExplorePercentRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneGetAreaExplorePercentRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneGetAreaExplorePercentRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneGetAreaExplorePercentRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneGetAreaExplorePercentRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneGetAreaExplorePercentRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneGetAreaExplorePercentRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneGetAreaExplorePercentRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // float explore_percent = 2;
  void clear_explore_percent();
  static const int kExplorePercentFieldNumber = 2;
  float explore_percent() const;
  void set_explore_percent(float value);

  // uint32 area_id = 3;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 3;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneGetAreaExplorePercentRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  float explore_percent_;
  ::google::protobuf::uint32 area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientTransmitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientTransmitReq) */ {
 public:
  ClientTransmitReq();
  virtual ~ClientTransmitReq();

  ClientTransmitReq(const ClientTransmitReq& from);

  inline ClientTransmitReq& operator=(const ClientTransmitReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientTransmitReq(ClientTransmitReq&& from) noexcept
    : ClientTransmitReq() {
    *this = ::std::move(from);
  }

  inline ClientTransmitReq& operator=(ClientTransmitReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientTransmitReq& default_instance();

  static inline const ClientTransmitReq* internal_default_instance() {
    return reinterpret_cast<const ClientTransmitReq*>(
               &_ClientTransmitReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(ClientTransmitReq* other);
  friend void swap(ClientTransmitReq& a, ClientTransmitReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientTransmitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientTransmitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientTransmitReq& from);
  void MergeFrom(const ClientTransmitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientTransmitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientTransmitReq_CmdId CmdId;
  static const CmdId NONE =
    ClientTransmitReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientTransmitReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientTransmitReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientTransmitReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ClientTransmitReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ClientTransmitReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientTransmitReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientTransmitReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientTransmitReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientTransmitReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientTransmitReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientTransmitReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 2;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 2;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // .proto.TransmitReason reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::proto::TransmitReason reason() const;
  void set_reason(::proto::TransmitReason value);

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientTransmitReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  int reason_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientTransmitRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientTransmitRsp) */ {
 public:
  ClientTransmitRsp();
  virtual ~ClientTransmitRsp();

  ClientTransmitRsp(const ClientTransmitRsp& from);

  inline ClientTransmitRsp& operator=(const ClientTransmitRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientTransmitRsp(ClientTransmitRsp&& from) noexcept
    : ClientTransmitRsp() {
    *this = ::std::move(from);
  }

  inline ClientTransmitRsp& operator=(ClientTransmitRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientTransmitRsp& default_instance();

  static inline const ClientTransmitRsp* internal_default_instance() {
    return reinterpret_cast<const ClientTransmitRsp*>(
               &_ClientTransmitRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ClientTransmitRsp* other);
  friend void swap(ClientTransmitRsp& a, ClientTransmitRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientTransmitRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientTransmitRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientTransmitRsp& from);
  void MergeFrom(const ClientTransmitRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientTransmitRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientTransmitRsp_CmdId CmdId;
  static const CmdId NONE =
    ClientTransmitRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientTransmitRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientTransmitRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientTransmitRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ClientTransmitRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientTransmitRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientTransmitRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientTransmitRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientTransmitRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientTransmitRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientTransmitRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.TransmitReason reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::proto::TransmitReason reason() const;
  void set_reason(::proto::TransmitReason value);

  // @@protoc_insertion_point(class_scope:proto.ClientTransmitRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneWeatherAreaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneWeatherAreaNotify) */ {
 public:
  EnterSceneWeatherAreaNotify();
  virtual ~EnterSceneWeatherAreaNotify();

  EnterSceneWeatherAreaNotify(const EnterSceneWeatherAreaNotify& from);

  inline EnterSceneWeatherAreaNotify& operator=(const EnterSceneWeatherAreaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneWeatherAreaNotify(EnterSceneWeatherAreaNotify&& from) noexcept
    : EnterSceneWeatherAreaNotify() {
    *this = ::std::move(from);
  }

  inline EnterSceneWeatherAreaNotify& operator=(EnterSceneWeatherAreaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneWeatherAreaNotify& default_instance();

  static inline const EnterSceneWeatherAreaNotify* internal_default_instance() {
    return reinterpret_cast<const EnterSceneWeatherAreaNotify*>(
               &_EnterSceneWeatherAreaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(EnterSceneWeatherAreaNotify* other);
  friend void swap(EnterSceneWeatherAreaNotify& a, EnterSceneWeatherAreaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneWeatherAreaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneWeatherAreaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneWeatherAreaNotify& from);
  void MergeFrom(const EnterSceneWeatherAreaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneWeatherAreaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterSceneWeatherAreaNotify_CmdId CmdId;
  static const CmdId NONE =
    EnterSceneWeatherAreaNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterSceneWeatherAreaNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterSceneWeatherAreaNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterSceneWeatherAreaNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EnterSceneWeatherAreaNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EnterSceneWeatherAreaNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterSceneWeatherAreaNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterSceneWeatherAreaNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterSceneWeatherAreaNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterSceneWeatherAreaNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterSceneWeatherAreaNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterSceneWeatherAreaNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 weather_gadget_id = 1;
  void clear_weather_gadget_id();
  static const int kWeatherGadgetIdFieldNumber = 1;
  ::google::protobuf::uint32 weather_gadget_id() const;
  void set_weather_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneWeatherAreaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 weather_gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExitSceneWeatherAreaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExitSceneWeatherAreaNotify) */ {
 public:
  ExitSceneWeatherAreaNotify();
  virtual ~ExitSceneWeatherAreaNotify();

  ExitSceneWeatherAreaNotify(const ExitSceneWeatherAreaNotify& from);

  inline ExitSceneWeatherAreaNotify& operator=(const ExitSceneWeatherAreaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitSceneWeatherAreaNotify(ExitSceneWeatherAreaNotify&& from) noexcept
    : ExitSceneWeatherAreaNotify() {
    *this = ::std::move(from);
  }

  inline ExitSceneWeatherAreaNotify& operator=(ExitSceneWeatherAreaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitSceneWeatherAreaNotify& default_instance();

  static inline const ExitSceneWeatherAreaNotify* internal_default_instance() {
    return reinterpret_cast<const ExitSceneWeatherAreaNotify*>(
               &_ExitSceneWeatherAreaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(ExitSceneWeatherAreaNotify* other);
  friend void swap(ExitSceneWeatherAreaNotify& a, ExitSceneWeatherAreaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitSceneWeatherAreaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitSceneWeatherAreaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitSceneWeatherAreaNotify& from);
  void MergeFrom(const ExitSceneWeatherAreaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitSceneWeatherAreaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExitSceneWeatherAreaNotify_CmdId CmdId;
  static const CmdId NONE =
    ExitSceneWeatherAreaNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ExitSceneWeatherAreaNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ExitSceneWeatherAreaNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ExitSceneWeatherAreaNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ExitSceneWeatherAreaNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ExitSceneWeatherAreaNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ExitSceneWeatherAreaNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ExitSceneWeatherAreaNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ExitSceneWeatherAreaNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ExitSceneWeatherAreaNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ExitSceneWeatherAreaNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ExitSceneWeatherAreaNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 weather_gadget_id = 1;
  void clear_weather_gadget_id();
  static const int kWeatherGadgetIdFieldNumber = 1;
  ::google::protobuf::uint32 weather_gadget_id() const;
  void set_weather_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ExitSceneWeatherAreaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 weather_gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneAreaWeatherNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAreaWeatherNotify) */ {
 public:
  SceneAreaWeatherNotify();
  virtual ~SceneAreaWeatherNotify();

  SceneAreaWeatherNotify(const SceneAreaWeatherNotify& from);

  inline SceneAreaWeatherNotify& operator=(const SceneAreaWeatherNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAreaWeatherNotify(SceneAreaWeatherNotify&& from) noexcept
    : SceneAreaWeatherNotify() {
    *this = ::std::move(from);
  }

  inline SceneAreaWeatherNotify& operator=(SceneAreaWeatherNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAreaWeatherNotify& default_instance();

  static inline const SceneAreaWeatherNotify* internal_default_instance() {
    return reinterpret_cast<const SceneAreaWeatherNotify*>(
               &_SceneAreaWeatherNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(SceneAreaWeatherNotify* other);
  friend void swap(SceneAreaWeatherNotify& a, SceneAreaWeatherNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAreaWeatherNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAreaWeatherNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAreaWeatherNotify& from);
  void MergeFrom(const SceneAreaWeatherNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAreaWeatherNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef SceneAreaWeatherNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneAreaWeatherNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneAreaWeatherNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneAreaWeatherNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneAreaWeatherNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneAreaWeatherNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneAreaWeatherNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneAreaWeatherNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneAreaWeatherNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneAreaWeatherNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneAreaWeatherNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneAreaWeatherNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, string> weather_value_map = 2;
  int weather_value_map_size() const;
  void clear_weather_value_map();
  static const int kWeatherValueMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      weather_value_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_weather_value_map();

  // uint32 weather_gadget_id = 1;
  void clear_weather_gadget_id();
  static const int kWeatherGadgetIdFieldNumber = 1;
  ::google::protobuf::uint32 weather_gadget_id() const;
  void set_weather_gadget_id(::google::protobuf::uint32 value);

  // uint32 weather_area_id = 3;
  void clear_weather_area_id();
  static const int kWeatherAreaIdFieldNumber = 3;
  ::google::protobuf::uint32 weather_area_id() const;
  void set_weather_area_id(::google::protobuf::uint32 value);

  // uint32 climate_type = 4;
  void clear_climate_type();
  static const int kClimateTypeFieldNumber = 4;
  ::google::protobuf::uint32 climate_type() const;
  void set_climate_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneAreaWeatherNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneAreaWeatherNotify_WeatherValueMapEntry : public ::google::protobuf::internal::MapEntry<SceneAreaWeatherNotify_WeatherValueMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneAreaWeatherNotify_WeatherValueMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    SceneAreaWeatherNotify_WeatherValueMapEntry();
    SceneAreaWeatherNotify_WeatherValueMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneAreaWeatherNotify_WeatherValueMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneAreaWeatherNotify_WeatherValueMapEntry,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > weather_value_map_;
  private:
  ::google::protobuf::uint32 weather_gadget_id_;
  ::google::protobuf::uint32 weather_area_id_;
  ::google::protobuf::uint32 climate_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerInfo) */ {
 public:
  ScenePlayerInfo();
  virtual ~ScenePlayerInfo();

  ScenePlayerInfo(const ScenePlayerInfo& from);

  inline ScenePlayerInfo& operator=(const ScenePlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerInfo(ScenePlayerInfo&& from) noexcept
    : ScenePlayerInfo() {
    *this = ::std::move(from);
  }

  inline ScenePlayerInfo& operator=(ScenePlayerInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerInfo& default_instance();

  static inline const ScenePlayerInfo* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerInfo*>(
               &_ScenePlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(ScenePlayerInfo* other);
  friend void swap(ScenePlayerInfo& a, ScenePlayerInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerInfo& from);
  void MergeFrom(const ScenePlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .proto.OnlinePlayerInfo online_player_info = 6;
  bool has_online_player_info() const;
  void clear_online_player_info();
  static const int kOnlinePlayerInfoFieldNumber = 6;
  const ::proto::OnlinePlayerInfo& online_player_info() const;
  ::proto::OnlinePlayerInfo* mutable_online_player_info();
  ::proto::OnlinePlayerInfo* release_online_player_info();
  void set_allocated_online_player_info(::proto::OnlinePlayerInfo* online_player_info);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 peer_id = 2;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 2;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // bool is_connected = 4;
  void clear_is_connected();
  static const int kIsConnectedFieldNumber = 4;
  bool is_connected() const;
  void set_is_connected(bool value);

  // uint32 scene_id = 5;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 5;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::OnlinePlayerInfo* online_player_info_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 peer_id_;
  bool is_connected_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerInfoNotify) */ {
 public:
  ScenePlayerInfoNotify();
  virtual ~ScenePlayerInfoNotify();

  ScenePlayerInfoNotify(const ScenePlayerInfoNotify& from);

  inline ScenePlayerInfoNotify& operator=(const ScenePlayerInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerInfoNotify(ScenePlayerInfoNotify&& from) noexcept
    : ScenePlayerInfoNotify() {
    *this = ::std::move(from);
  }

  inline ScenePlayerInfoNotify& operator=(ScenePlayerInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerInfoNotify& default_instance();

  static inline const ScenePlayerInfoNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerInfoNotify*>(
               &_ScenePlayerInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(ScenePlayerInfoNotify* other);
  friend void swap(ScenePlayerInfoNotify& a, ScenePlayerInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerInfoNotify& from);
  void MergeFrom(const ScenePlayerInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ScenePlayerInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    ScenePlayerInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ScenePlayerInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ScenePlayerInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ScenePlayerInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ScenePlayerInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ScenePlayerInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ScenePlayerInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ScenePlayerInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ScenePlayerInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ScenePlayerInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ScenePlayerInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ScenePlayerInfo player_info_list = 1;
  int player_info_list_size() const;
  void clear_player_info_list();
  static const int kPlayerInfoListFieldNumber = 1;
  const ::proto::ScenePlayerInfo& player_info_list(int index) const;
  ::proto::ScenePlayerInfo* mutable_player_info_list(int index);
  ::proto::ScenePlayerInfo* add_player_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >*
      mutable_player_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >&
      player_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo > player_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLocationInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLocationInfo) */ {
 public:
  PlayerLocationInfo();
  virtual ~PlayerLocationInfo();

  PlayerLocationInfo(const PlayerLocationInfo& from);

  inline PlayerLocationInfo& operator=(const PlayerLocationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLocationInfo(PlayerLocationInfo&& from) noexcept
    : PlayerLocationInfo() {
    *this = ::std::move(from);
  }

  inline PlayerLocationInfo& operator=(PlayerLocationInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLocationInfo& default_instance();

  static inline const PlayerLocationInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerLocationInfo*>(
               &_PlayerLocationInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(PlayerLocationInfo* other);
  friend void swap(PlayerLocationInfo& a, PlayerLocationInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLocationInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLocationInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLocationInfo& from);
  void MergeFrom(const PlayerLocationInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLocationInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 3;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 3;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLocationInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerLocationNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerLocationNotify) */ {
 public:
  WorldPlayerLocationNotify();
  virtual ~WorldPlayerLocationNotify();

  WorldPlayerLocationNotify(const WorldPlayerLocationNotify& from);

  inline WorldPlayerLocationNotify& operator=(const WorldPlayerLocationNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerLocationNotify(WorldPlayerLocationNotify&& from) noexcept
    : WorldPlayerLocationNotify() {
    *this = ::std::move(from);
  }

  inline WorldPlayerLocationNotify& operator=(WorldPlayerLocationNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerLocationNotify& default_instance();

  static inline const WorldPlayerLocationNotify* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerLocationNotify*>(
               &_WorldPlayerLocationNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(WorldPlayerLocationNotify* other);
  friend void swap(WorldPlayerLocationNotify& a, WorldPlayerLocationNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerLocationNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerLocationNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerLocationNotify& from);
  void MergeFrom(const WorldPlayerLocationNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerLocationNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldPlayerLocationNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldPlayerLocationNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldPlayerLocationNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldPlayerLocationNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldPlayerLocationNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorldPlayerLocationNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldPlayerLocationNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldPlayerLocationNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldPlayerLocationNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldPlayerLocationNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldPlayerLocationNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldPlayerLocationNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.PlayerLocationInfo player_loc_list = 1;
  int player_loc_list_size() const;
  void clear_player_loc_list();
  static const int kPlayerLocListFieldNumber = 1;
  const ::proto::PlayerLocationInfo& player_loc_list(int index) const;
  ::proto::PlayerLocationInfo* mutable_player_loc_list(int index);
  ::proto::PlayerLocationInfo* add_player_loc_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
      mutable_player_loc_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
      player_loc_list() const;

  // @@protoc_insertion_point(class_scope:proto.WorldPlayerLocationNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo > player_loc_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BeginCameraSceneLookNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BeginCameraSceneLookNotify) */ {
 public:
  BeginCameraSceneLookNotify();
  virtual ~BeginCameraSceneLookNotify();

  BeginCameraSceneLookNotify(const BeginCameraSceneLookNotify& from);

  inline BeginCameraSceneLookNotify& operator=(const BeginCameraSceneLookNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BeginCameraSceneLookNotify(BeginCameraSceneLookNotify&& from) noexcept
    : BeginCameraSceneLookNotify() {
    *this = ::std::move(from);
  }

  inline BeginCameraSceneLookNotify& operator=(BeginCameraSceneLookNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BeginCameraSceneLookNotify& default_instance();

  static inline const BeginCameraSceneLookNotify* internal_default_instance() {
    return reinterpret_cast<const BeginCameraSceneLookNotify*>(
               &_BeginCameraSceneLookNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(BeginCameraSceneLookNotify* other);
  friend void swap(BeginCameraSceneLookNotify& a, BeginCameraSceneLookNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BeginCameraSceneLookNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BeginCameraSceneLookNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BeginCameraSceneLookNotify& from);
  void MergeFrom(const BeginCameraSceneLookNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BeginCameraSceneLookNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BeginCameraSceneLookNotify_CmdId CmdId;
  static const CmdId NONE =
    BeginCameraSceneLookNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BeginCameraSceneLookNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BeginCameraSceneLookNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BeginCameraSceneLookNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BeginCameraSceneLookNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BeginCameraSceneLookNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BeginCameraSceneLookNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BeginCameraSceneLookNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BeginCameraSceneLookNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BeginCameraSceneLookNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BeginCameraSceneLookNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector look_pos = 1;
  bool has_look_pos() const;
  void clear_look_pos();
  static const int kLookPosFieldNumber = 1;
  const ::proto::Vector& look_pos() const;
  ::proto::Vector* mutable_look_pos();
  ::proto::Vector* release_look_pos();
  void set_allocated_look_pos(::proto::Vector* look_pos);

  // float duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // bool is_force = 3;
  void clear_is_force();
  static const int kIsForceFieldNumber = 3;
  bool is_force() const;
  void set_is_force(bool value);

  // bool is_recover_keep_current = 4;
  void clear_is_recover_keep_current();
  static const int kIsRecoverKeepCurrentFieldNumber = 4;
  bool is_recover_keep_current() const;
  void set_is_recover_keep_current(bool value);

  // bool is_allow_input = 5;
  void clear_is_allow_input();
  static const int kIsAllowInputFieldNumber = 5;
  bool is_allow_input() const;
  void set_is_allow_input(bool value);

  // @@protoc_insertion_point(class_scope:proto.BeginCameraSceneLookNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* look_pos_;
  float duration_;
  bool is_force_;
  bool is_recover_keep_current_;
  bool is_allow_input_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EndCameraSceneLookNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EndCameraSceneLookNotify) */ {
 public:
  EndCameraSceneLookNotify();
  virtual ~EndCameraSceneLookNotify();

  EndCameraSceneLookNotify(const EndCameraSceneLookNotify& from);

  inline EndCameraSceneLookNotify& operator=(const EndCameraSceneLookNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EndCameraSceneLookNotify(EndCameraSceneLookNotify&& from) noexcept
    : EndCameraSceneLookNotify() {
    *this = ::std::move(from);
  }

  inline EndCameraSceneLookNotify& operator=(EndCameraSceneLookNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EndCameraSceneLookNotify& default_instance();

  static inline const EndCameraSceneLookNotify* internal_default_instance() {
    return reinterpret_cast<const EndCameraSceneLookNotify*>(
               &_EndCameraSceneLookNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(EndCameraSceneLookNotify* other);
  friend void swap(EndCameraSceneLookNotify& a, EndCameraSceneLookNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndCameraSceneLookNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EndCameraSceneLookNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EndCameraSceneLookNotify& from);
  void MergeFrom(const EndCameraSceneLookNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EndCameraSceneLookNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EndCameraSceneLookNotify_CmdId CmdId;
  static const CmdId NONE =
    EndCameraSceneLookNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EndCameraSceneLookNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EndCameraSceneLookNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EndCameraSceneLookNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EndCameraSceneLookNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EndCameraSceneLookNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EndCameraSceneLookNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EndCameraSceneLookNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EndCameraSceneLookNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EndCameraSceneLookNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EndCameraSceneLookNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.EndCameraSceneLookNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkEntityInMinMapNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkEntityInMinMapNotify) */ {
 public:
  MarkEntityInMinMapNotify();
  virtual ~MarkEntityInMinMapNotify();

  MarkEntityInMinMapNotify(const MarkEntityInMinMapNotify& from);

  inline MarkEntityInMinMapNotify& operator=(const MarkEntityInMinMapNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkEntityInMinMapNotify(MarkEntityInMinMapNotify&& from) noexcept
    : MarkEntityInMinMapNotify() {
    *this = ::std::move(from);
  }

  inline MarkEntityInMinMapNotify& operator=(MarkEntityInMinMapNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkEntityInMinMapNotify& default_instance();

  static inline const MarkEntityInMinMapNotify* internal_default_instance() {
    return reinterpret_cast<const MarkEntityInMinMapNotify*>(
               &_MarkEntityInMinMapNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(MarkEntityInMinMapNotify* other);
  friend void swap(MarkEntityInMinMapNotify& a, MarkEntityInMinMapNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkEntityInMinMapNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkEntityInMinMapNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkEntityInMinMapNotify& from);
  void MergeFrom(const MarkEntityInMinMapNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkEntityInMinMapNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MarkEntityInMinMapNotify_CmdId CmdId;
  static const CmdId NONE =
    MarkEntityInMinMapNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    MarkEntityInMinMapNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MarkEntityInMinMapNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MarkEntityInMinMapNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MarkEntityInMinMapNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MarkEntityInMinMapNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MarkEntityInMinMapNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MarkEntityInMinMapNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MarkEntityInMinMapNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MarkEntityInMinMapNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MarkEntityInMinMapNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 monster_id = 3;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 3;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MarkEntityInMinMapNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 monster_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnmarkEntityInMinMapNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnmarkEntityInMinMapNotify) */ {
 public:
  UnmarkEntityInMinMapNotify();
  virtual ~UnmarkEntityInMinMapNotify();

  UnmarkEntityInMinMapNotify(const UnmarkEntityInMinMapNotify& from);

  inline UnmarkEntityInMinMapNotify& operator=(const UnmarkEntityInMinMapNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnmarkEntityInMinMapNotify(UnmarkEntityInMinMapNotify&& from) noexcept
    : UnmarkEntityInMinMapNotify() {
    *this = ::std::move(from);
  }

  inline UnmarkEntityInMinMapNotify& operator=(UnmarkEntityInMinMapNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnmarkEntityInMinMapNotify& default_instance();

  static inline const UnmarkEntityInMinMapNotify* internal_default_instance() {
    return reinterpret_cast<const UnmarkEntityInMinMapNotify*>(
               &_UnmarkEntityInMinMapNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(UnmarkEntityInMinMapNotify* other);
  friend void swap(UnmarkEntityInMinMapNotify& a, UnmarkEntityInMinMapNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnmarkEntityInMinMapNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UnmarkEntityInMinMapNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnmarkEntityInMinMapNotify& from);
  void MergeFrom(const UnmarkEntityInMinMapNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnmarkEntityInMinMapNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UnmarkEntityInMinMapNotify_CmdId CmdId;
  static const CmdId NONE =
    UnmarkEntityInMinMapNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    UnmarkEntityInMinMapNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UnmarkEntityInMinMapNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UnmarkEntityInMinMapNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return UnmarkEntityInMinMapNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UnmarkEntityInMinMapNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UnmarkEntityInMinMapNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UnmarkEntityInMinMapNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UnmarkEntityInMinMapNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UnmarkEntityInMinMapNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UnmarkEntityInMinMapNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnmarkEntityInMinMapNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropSubfieldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DropSubfieldReq) */ {
 public:
  DropSubfieldReq();
  virtual ~DropSubfieldReq();

  DropSubfieldReq(const DropSubfieldReq& from);

  inline DropSubfieldReq& operator=(const DropSubfieldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DropSubfieldReq(DropSubfieldReq&& from) noexcept
    : DropSubfieldReq() {
    *this = ::std::move(from);
  }

  inline DropSubfieldReq& operator=(DropSubfieldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DropSubfieldReq& default_instance();

  static inline const DropSubfieldReq* internal_default_instance() {
    return reinterpret_cast<const DropSubfieldReq*>(
               &_DropSubfieldReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(DropSubfieldReq* other);
  friend void swap(DropSubfieldReq& a, DropSubfieldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DropSubfieldReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DropSubfieldReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropSubfieldReq& from);
  void MergeFrom(const DropSubfieldReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropSubfieldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DropSubfieldReq_CmdId CmdId;
  static const CmdId NONE =
    DropSubfieldReq_CmdId_NONE;
  static const CmdId CMD_ID =
    DropSubfieldReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DropSubfieldReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DropSubfieldReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    DropSubfieldReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return DropSubfieldReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DropSubfieldReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DropSubfieldReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DropSubfieldReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DropSubfieldReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DropSubfieldReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DropSubfieldReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string subfield_name = 4;
  void clear_subfield_name();
  static const int kSubfieldNameFieldNumber = 4;
  const ::std::string& subfield_name() const;
  void set_subfield_name(const ::std::string& value);
  #if LANG_CXX11
  void set_subfield_name(::std::string&& value);
  #endif
  void set_subfield_name(const char* value);
  void set_subfield_name(const char* value, size_t size);
  ::std::string* mutable_subfield_name();
  ::std::string* release_subfield_name();
  void set_allocated_subfield_name(::std::string* subfield_name);

  // .proto.DropSubfieldType drop_type = 1;
  void clear_drop_type();
  static const int kDropTypeFieldNumber = 1;
  ::proto::DropSubfieldType drop_type() const;
  void set_drop_type(::proto::DropSubfieldType value);

  // uint32 drop_param = 2;
  void clear_drop_param();
  static const int kDropParamFieldNumber = 2;
  ::google::protobuf::uint32 drop_param() const;
  void set_drop_param(::google::protobuf::uint32 value);

  // uint32 entity_id = 3;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DropSubfieldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr subfield_name_;
  int drop_type_;
  ::google::protobuf::uint32 drop_param_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropSubfieldRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DropSubfieldRsp) */ {
 public:
  DropSubfieldRsp();
  virtual ~DropSubfieldRsp();

  DropSubfieldRsp(const DropSubfieldRsp& from);

  inline DropSubfieldRsp& operator=(const DropSubfieldRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DropSubfieldRsp(DropSubfieldRsp&& from) noexcept
    : DropSubfieldRsp() {
    *this = ::std::move(from);
  }

  inline DropSubfieldRsp& operator=(DropSubfieldRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DropSubfieldRsp& default_instance();

  static inline const DropSubfieldRsp* internal_default_instance() {
    return reinterpret_cast<const DropSubfieldRsp*>(
               &_DropSubfieldRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(DropSubfieldRsp* other);
  friend void swap(DropSubfieldRsp& a, DropSubfieldRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DropSubfieldRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DropSubfieldRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropSubfieldRsp& from);
  void MergeFrom(const DropSubfieldRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropSubfieldRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DropSubfieldRsp_CmdId CmdId;
  static const CmdId NONE =
    DropSubfieldRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    DropSubfieldRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DropSubfieldRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DropSubfieldRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DropSubfieldRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DropSubfieldRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DropSubfieldRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DropSubfieldRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DropSubfieldRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DropSubfieldRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DropSubfieldRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.DropSubfieldRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGroupTriggerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExecuteGroupTriggerReq) */ {
 public:
  ExecuteGroupTriggerReq();
  virtual ~ExecuteGroupTriggerReq();

  ExecuteGroupTriggerReq(const ExecuteGroupTriggerReq& from);

  inline ExecuteGroupTriggerReq& operator=(const ExecuteGroupTriggerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGroupTriggerReq(ExecuteGroupTriggerReq&& from) noexcept
    : ExecuteGroupTriggerReq() {
    *this = ::std::move(from);
  }

  inline ExecuteGroupTriggerReq& operator=(ExecuteGroupTriggerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGroupTriggerReq& default_instance();

  static inline const ExecuteGroupTriggerReq* internal_default_instance() {
    return reinterpret_cast<const ExecuteGroupTriggerReq*>(
               &_ExecuteGroupTriggerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(ExecuteGroupTriggerReq* other);
  friend void swap(ExecuteGroupTriggerReq& a, ExecuteGroupTriggerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGroupTriggerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteGroupTriggerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGroupTriggerReq& from);
  void MergeFrom(const ExecuteGroupTriggerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGroupTriggerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExecuteGroupTriggerReq_CmdId CmdId;
  static const CmdId NONE =
    ExecuteGroupTriggerReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ExecuteGroupTriggerReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ExecuteGroupTriggerReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ExecuteGroupTriggerReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ExecuteGroupTriggerReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ExecuteGroupTriggerReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ExecuteGroupTriggerReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ExecuteGroupTriggerReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ExecuteGroupTriggerReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ExecuteGroupTriggerReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ExecuteGroupTriggerReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ExecuteGroupTriggerReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string source_name = 2;
  void clear_source_name();
  static const int kSourceNameFieldNumber = 2;
  const ::std::string& source_name() const;
  void set_source_name(const ::std::string& value);
  #if LANG_CXX11
  void set_source_name(::std::string&& value);
  #endif
  void set_source_name(const char* value);
  void set_source_name(const char* value, size_t size);
  ::std::string* mutable_source_name();
  ::std::string* release_source_name();
  void set_allocated_source_name(::std::string* source_name);

  // uint32 source_entity_id = 1;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 3;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // int32 param1 = 4;
  void clear_param1();
  static const int kParam1FieldNumber = 4;
  ::google::protobuf::int32 param1() const;
  void set_param1(::google::protobuf::int32 value);

  // int32 param2 = 5;
  void clear_param2();
  static const int kParam2FieldNumber = 5;
  ::google::protobuf::int32 param2() const;
  void set_param2(::google::protobuf::int32 value);

  // int32 param3 = 6;
  void clear_param3();
  static const int kParam3FieldNumber = 6;
  ::google::protobuf::int32 param3() const;
  void set_param3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ExecuteGroupTriggerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_name_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::uint32 target_entity_id_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::int32 param3_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGroupTriggerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExecuteGroupTriggerRsp) */ {
 public:
  ExecuteGroupTriggerRsp();
  virtual ~ExecuteGroupTriggerRsp();

  ExecuteGroupTriggerRsp(const ExecuteGroupTriggerRsp& from);

  inline ExecuteGroupTriggerRsp& operator=(const ExecuteGroupTriggerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGroupTriggerRsp(ExecuteGroupTriggerRsp&& from) noexcept
    : ExecuteGroupTriggerRsp() {
    *this = ::std::move(from);
  }

  inline ExecuteGroupTriggerRsp& operator=(ExecuteGroupTriggerRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGroupTriggerRsp& default_instance();

  static inline const ExecuteGroupTriggerRsp* internal_default_instance() {
    return reinterpret_cast<const ExecuteGroupTriggerRsp*>(
               &_ExecuteGroupTriggerRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(ExecuteGroupTriggerRsp* other);
  friend void swap(ExecuteGroupTriggerRsp& a, ExecuteGroupTriggerRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGroupTriggerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteGroupTriggerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGroupTriggerRsp& from);
  void MergeFrom(const ExecuteGroupTriggerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGroupTriggerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExecuteGroupTriggerRsp_CmdId CmdId;
  static const CmdId NONE =
    ExecuteGroupTriggerRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ExecuteGroupTriggerRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ExecuteGroupTriggerRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ExecuteGroupTriggerRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ExecuteGroupTriggerRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ExecuteGroupTriggerRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ExecuteGroupTriggerRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ExecuteGroupTriggerRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ExecuteGroupTriggerRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ExecuteGroupTriggerRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ExecuteGroupTriggerRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ExecuteGroupTriggerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LevelupCityReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LevelupCityReq) */ {
 public:
  LevelupCityReq();
  virtual ~LevelupCityReq();

  LevelupCityReq(const LevelupCityReq& from);

  inline LevelupCityReq& operator=(const LevelupCityReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelupCityReq(LevelupCityReq&& from) noexcept
    : LevelupCityReq() {
    *this = ::std::move(from);
  }

  inline LevelupCityReq& operator=(LevelupCityReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelupCityReq& default_instance();

  static inline const LevelupCityReq* internal_default_instance() {
    return reinterpret_cast<const LevelupCityReq*>(
               &_LevelupCityReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(LevelupCityReq* other);
  friend void swap(LevelupCityReq& a, LevelupCityReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelupCityReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LevelupCityReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LevelupCityReq& from);
  void MergeFrom(const LevelupCityReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LevelupCityReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LevelupCityReq_CmdId CmdId;
  static const CmdId NONE =
    LevelupCityReq_CmdId_NONE;
  static const CmdId CMD_ID =
    LevelupCityReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LevelupCityReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LevelupCityReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    LevelupCityReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return LevelupCityReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LevelupCityReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LevelupCityReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LevelupCityReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LevelupCityReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LevelupCityReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LevelupCityReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 area_id = 2;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 2;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // uint32 item_num = 3;
  void clear_item_num();
  static const int kItemNumFieldNumber = 3;
  ::google::protobuf::uint32 item_num() const;
  void set_item_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LevelupCityReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 area_id_;
  ::google::protobuf::uint32 item_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LevelupCityRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LevelupCityRsp) */ {
 public:
  LevelupCityRsp();
  virtual ~LevelupCityRsp();

  LevelupCityRsp(const LevelupCityRsp& from);

  inline LevelupCityRsp& operator=(const LevelupCityRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelupCityRsp(LevelupCityRsp&& from) noexcept
    : LevelupCityRsp() {
    *this = ::std::move(from);
  }

  inline LevelupCityRsp& operator=(LevelupCityRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelupCityRsp& default_instance();

  static inline const LevelupCityRsp* internal_default_instance() {
    return reinterpret_cast<const LevelupCityRsp*>(
               &_LevelupCityRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(LevelupCityRsp* other);
  friend void swap(LevelupCityRsp& a, LevelupCityRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelupCityRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  LevelupCityRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LevelupCityRsp& from);
  void MergeFrom(const LevelupCityRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LevelupCityRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LevelupCityRsp_CmdId CmdId;
  static const CmdId NONE =
    LevelupCityRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    LevelupCityRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LevelupCityRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LevelupCityRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return LevelupCityRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LevelupCityRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LevelupCityRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LevelupCityRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LevelupCityRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LevelupCityRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LevelupCityRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CityInfo city_info = 4;
  bool has_city_info() const;
  void clear_city_info();
  static const int kCityInfoFieldNumber = 4;
  const ::proto::CityInfo& city_info() const;
  ::proto::CityInfo* mutable_city_info();
  ::proto::CityInfo* release_city_info();
  void set_allocated_city_info(::proto::CityInfo* city_info);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 area_id = 3;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 3;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LevelupCityRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CityInfo* city_info_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoutePointChangeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RoutePointChangeInfo) */ {
 public:
  RoutePointChangeInfo();
  virtual ~RoutePointChangeInfo();

  RoutePointChangeInfo(const RoutePointChangeInfo& from);

  inline RoutePointChangeInfo& operator=(const RoutePointChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RoutePointChangeInfo(RoutePointChangeInfo&& from) noexcept
    : RoutePointChangeInfo() {
    *this = ::std::move(from);
  }

  inline RoutePointChangeInfo& operator=(RoutePointChangeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoutePointChangeInfo& default_instance();

  static inline const RoutePointChangeInfo* internal_default_instance() {
    return reinterpret_cast<const RoutePointChangeInfo*>(
               &_RoutePointChangeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(RoutePointChangeInfo* other);
  friend void swap(RoutePointChangeInfo& a, RoutePointChangeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RoutePointChangeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RoutePointChangeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoutePointChangeInfo& from);
  void MergeFrom(const RoutePointChangeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoutePointChangeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 point_index = 1;
  void clear_point_index();
  static const int kPointIndexFieldNumber = 1;
  ::google::protobuf::uint32 point_index() const;
  void set_point_index(::google::protobuf::uint32 value);

  // float target_velocity = 2;
  void clear_target_velocity();
  static const int kTargetVelocityFieldNumber = 2;
  float target_velocity() const;
  void set_target_velocity(float value);

  // float wait_time = 3;
  void clear_wait_time();
  static const int kWaitTimeFieldNumber = 3;
  float wait_time() const;
  void set_wait_time(float value);

  // @@protoc_insertion_point(class_scope:proto.RoutePointChangeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_index_;
  float target_velocity_;
  float wait_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneRouteChangeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneRouteChangeInfo) */ {
 public:
  SceneRouteChangeInfo();
  virtual ~SceneRouteChangeInfo();

  SceneRouteChangeInfo(const SceneRouteChangeInfo& from);

  inline SceneRouteChangeInfo& operator=(const SceneRouteChangeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneRouteChangeInfo(SceneRouteChangeInfo&& from) noexcept
    : SceneRouteChangeInfo() {
    *this = ::std::move(from);
  }

  inline SceneRouteChangeInfo& operator=(SceneRouteChangeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRouteChangeInfo& default_instance();

  static inline const SceneRouteChangeInfo* internal_default_instance() {
    return reinterpret_cast<const SceneRouteChangeInfo*>(
               &_SceneRouteChangeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(SceneRouteChangeInfo* other);
  friend void swap(SceneRouteChangeInfo& a, SceneRouteChangeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneRouteChangeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneRouteChangeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneRouteChangeInfo& from);
  void MergeFrom(const SceneRouteChangeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneRouteChangeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RoutePointChangeInfo point_list = 4;
  int point_list_size() const;
  void clear_point_list();
  static const int kPointListFieldNumber = 4;
  const ::proto::RoutePointChangeInfo& point_list(int index) const;
  ::proto::RoutePointChangeInfo* mutable_point_list(int index);
  ::proto::RoutePointChangeInfo* add_point_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >*
      mutable_point_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >&
      point_list() const;

  // uint32 route_id = 1;
  void clear_route_id();
  static const int kRouteIdFieldNumber = 1;
  ::google::protobuf::uint32 route_id() const;
  void set_route_id(::google::protobuf::uint32 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // bool is_forward = 3;
  void clear_is_forward();
  static const int kIsForwardFieldNumber = 3;
  bool is_forward() const;
  void set_is_forward(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneRouteChangeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo > point_list_;
  ::google::protobuf::uint32 route_id_;
  ::google::protobuf::uint32 type_;
  bool is_forward_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneRouteChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneRouteChangeNotify) */ {
 public:
  SceneRouteChangeNotify();
  virtual ~SceneRouteChangeNotify();

  SceneRouteChangeNotify(const SceneRouteChangeNotify& from);

  inline SceneRouteChangeNotify& operator=(const SceneRouteChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneRouteChangeNotify(SceneRouteChangeNotify&& from) noexcept
    : SceneRouteChangeNotify() {
    *this = ::std::move(from);
  }

  inline SceneRouteChangeNotify& operator=(SceneRouteChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRouteChangeNotify& default_instance();

  static inline const SceneRouteChangeNotify* internal_default_instance() {
    return reinterpret_cast<const SceneRouteChangeNotify*>(
               &_SceneRouteChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(SceneRouteChangeNotify* other);
  friend void swap(SceneRouteChangeNotify& a, SceneRouteChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneRouteChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneRouteChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneRouteChangeNotify& from);
  void MergeFrom(const SceneRouteChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneRouteChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneRouteChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneRouteChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneRouteChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneRouteChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneRouteChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneRouteChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneRouteChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneRouteChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneRouteChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneRouteChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneRouteChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneRouteChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.SceneRouteChangeInfo route_list = 2;
  int route_list_size() const;
  void clear_route_list();
  static const int kRouteListFieldNumber = 2;
  const ::proto::SceneRouteChangeInfo& route_list(int index) const;
  ::proto::SceneRouteChangeInfo* mutable_route_list(int index);
  ::proto::SceneRouteChangeInfo* add_route_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >*
      mutable_route_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >&
      route_list() const;

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneRouteChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo > route_list_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformStartRouteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformStartRouteNotify) */ {
 public:
  PlatformStartRouteNotify();
  virtual ~PlatformStartRouteNotify();

  PlatformStartRouteNotify(const PlatformStartRouteNotify& from);

  inline PlatformStartRouteNotify& operator=(const PlatformStartRouteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformStartRouteNotify(PlatformStartRouteNotify&& from) noexcept
    : PlatformStartRouteNotify() {
    *this = ::std::move(from);
  }

  inline PlatformStartRouteNotify& operator=(PlatformStartRouteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformStartRouteNotify& default_instance();

  static inline const PlatformStartRouteNotify* internal_default_instance() {
    return reinterpret_cast<const PlatformStartRouteNotify*>(
               &_PlatformStartRouteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(PlatformStartRouteNotify* other);
  friend void swap(PlatformStartRouteNotify& a, PlatformStartRouteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformStartRouteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformStartRouteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformStartRouteNotify& from);
  void MergeFrom(const PlatformStartRouteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformStartRouteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlatformStartRouteNotify_CmdId CmdId;
  static const CmdId NONE =
    PlatformStartRouteNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlatformStartRouteNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlatformStartRouteNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlatformStartRouteNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlatformStartRouteNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlatformStartRouteNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlatformStartRouteNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlatformStartRouteNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlatformStartRouteNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlatformStartRouteNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlatformStartRouteNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.PlatformInfo platform = 2;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 2;
  const ::proto::PlatformInfo& platform() const;
  ::proto::PlatformInfo* mutable_platform();
  ::proto::PlatformInfo* release_platform();
  void set_allocated_platform(::proto::PlatformInfo* platform);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformStartRouteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PlatformInfo* platform_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformStopRouteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformStopRouteNotify) */ {
 public:
  PlatformStopRouteNotify();
  virtual ~PlatformStopRouteNotify();

  PlatformStopRouteNotify(const PlatformStopRouteNotify& from);

  inline PlatformStopRouteNotify& operator=(const PlatformStopRouteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformStopRouteNotify(PlatformStopRouteNotify&& from) noexcept
    : PlatformStopRouteNotify() {
    *this = ::std::move(from);
  }

  inline PlatformStopRouteNotify& operator=(PlatformStopRouteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformStopRouteNotify& default_instance();

  static inline const PlatformStopRouteNotify* internal_default_instance() {
    return reinterpret_cast<const PlatformStopRouteNotify*>(
               &_PlatformStopRouteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(PlatformStopRouteNotify* other);
  friend void swap(PlatformStopRouteNotify& a, PlatformStopRouteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformStopRouteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformStopRouteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformStopRouteNotify& from);
  void MergeFrom(const PlatformStopRouteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformStopRouteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlatformStopRouteNotify_CmdId CmdId;
  static const CmdId NONE =
    PlatformStopRouteNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlatformStopRouteNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlatformStopRouteNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlatformStopRouteNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlatformStopRouteNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlatformStopRouteNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlatformStopRouteNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlatformStopRouteNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlatformStopRouteNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlatformStopRouteNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlatformStopRouteNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 2;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 2;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformStopRouteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformChangeRouteNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformChangeRouteNotify) */ {
 public:
  PlatformChangeRouteNotify();
  virtual ~PlatformChangeRouteNotify();

  PlatformChangeRouteNotify(const PlatformChangeRouteNotify& from);

  inline PlatformChangeRouteNotify& operator=(const PlatformChangeRouteNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformChangeRouteNotify(PlatformChangeRouteNotify&& from) noexcept
    : PlatformChangeRouteNotify() {
    *this = ::std::move(from);
  }

  inline PlatformChangeRouteNotify& operator=(PlatformChangeRouteNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformChangeRouteNotify& default_instance();

  static inline const PlatformChangeRouteNotify* internal_default_instance() {
    return reinterpret_cast<const PlatformChangeRouteNotify*>(
               &_PlatformChangeRouteNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(PlatformChangeRouteNotify* other);
  friend void swap(PlatformChangeRouteNotify& a, PlatformChangeRouteNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformChangeRouteNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformChangeRouteNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformChangeRouteNotify& from);
  void MergeFrom(const PlatformChangeRouteNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformChangeRouteNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlatformChangeRouteNotify_CmdId CmdId;
  static const CmdId NONE =
    PlatformChangeRouteNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlatformChangeRouteNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlatformChangeRouteNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlatformChangeRouteNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlatformChangeRouteNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlatformChangeRouteNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlatformChangeRouteNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlatformChangeRouteNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlatformChangeRouteNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlatformChangeRouteNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlatformChangeRouteNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.PlatformInfo platform = 2;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 2;
  const ::proto::PlatformInfo& platform() const;
  ::proto::PlatformInfo* mutable_platform();
  ::proto::PlatformInfo* release_platform();
  void set_allocated_platform(::proto::PlatformInfo* platform);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformChangeRouteNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::PlatformInfo* platform_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerSoundNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerSoundNotify) */ {
 public:
  ScenePlayerSoundNotify();
  virtual ~ScenePlayerSoundNotify();

  ScenePlayerSoundNotify(const ScenePlayerSoundNotify& from);

  inline ScenePlayerSoundNotify& operator=(const ScenePlayerSoundNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerSoundNotify(ScenePlayerSoundNotify&& from) noexcept
    : ScenePlayerSoundNotify() {
    *this = ::std::move(from);
  }

  inline ScenePlayerSoundNotify& operator=(ScenePlayerSoundNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerSoundNotify& default_instance();

  static inline const ScenePlayerSoundNotify* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerSoundNotify*>(
               &_ScenePlayerSoundNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(ScenePlayerSoundNotify* other);
  friend void swap(ScenePlayerSoundNotify& a, ScenePlayerSoundNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerSoundNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerSoundNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerSoundNotify& from);
  void MergeFrom(const ScenePlayerSoundNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerSoundNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ScenePlayerSoundNotify_CmdId CmdId;
  static const CmdId NONE =
    ScenePlayerSoundNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ScenePlayerSoundNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ScenePlayerSoundNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ScenePlayerSoundNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ScenePlayerSoundNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ScenePlayerSoundNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ScenePlayerSoundNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ScenePlayerSoundNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ScenePlayerSoundNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ScenePlayerSoundNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ScenePlayerSoundNotify_CmdId_Parse(name, value);
  }

  typedef ScenePlayerSoundNotify_PlaySoundType PlaySoundType;
  static const PlaySoundType PLAY_SOUND_NONE =
    ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_NONE;
  static const PlaySoundType PLAY_SOUND_START =
    ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_START;
  static const PlaySoundType PLAY_SOUND_STOP =
    ScenePlayerSoundNotify_PlaySoundType_PLAY_SOUND_STOP;
  static inline bool PlaySoundType_IsValid(int value) {
    return ScenePlayerSoundNotify_PlaySoundType_IsValid(value);
  }
  static const PlaySoundType PlaySoundType_MIN =
    ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MIN;
  static const PlaySoundType PlaySoundType_MAX =
    ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_MAX;
  static const int PlaySoundType_ARRAYSIZE =
    ScenePlayerSoundNotify_PlaySoundType_PlaySoundType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PlaySoundType_descriptor() {
    return ScenePlayerSoundNotify_PlaySoundType_descriptor();
  }
  static inline const ::std::string& PlaySoundType_Name(PlaySoundType value) {
    return ScenePlayerSoundNotify_PlaySoundType_Name(value);
  }
  static inline bool PlaySoundType_Parse(const ::std::string& name,
      PlaySoundType* value) {
    return ScenePlayerSoundNotify_PlaySoundType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string sound_name = 1;
  void clear_sound_name();
  static const int kSoundNameFieldNumber = 1;
  const ::std::string& sound_name() const;
  void set_sound_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sound_name(::std::string&& value);
  #endif
  void set_sound_name(const char* value);
  void set_sound_name(const char* value, size_t size);
  ::std::string* mutable_sound_name();
  ::std::string* release_sound_name();
  void set_allocated_sound_name(::std::string* sound_name);

  // .proto.Vector play_pos = 2;
  bool has_play_pos() const;
  void clear_play_pos();
  static const int kPlayPosFieldNumber = 2;
  const ::proto::Vector& play_pos() const;
  ::proto::Vector* mutable_play_pos();
  ::proto::Vector* release_play_pos();
  void set_allocated_play_pos(::proto::Vector* play_pos);

  // .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 3;
  void clear_play_type();
  static const int kPlayTypeFieldNumber = 3;
  ::proto::ScenePlayerSoundNotify_PlaySoundType play_type() const;
  void set_play_type(::proto::ScenePlayerSoundNotify_PlaySoundType value);

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerSoundNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sound_name_;
  ::proto::Vector* play_pos_;
  int play_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PersonalSceneJumpReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PersonalSceneJumpReq) */ {
 public:
  PersonalSceneJumpReq();
  virtual ~PersonalSceneJumpReq();

  PersonalSceneJumpReq(const PersonalSceneJumpReq& from);

  inline PersonalSceneJumpReq& operator=(const PersonalSceneJumpReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PersonalSceneJumpReq(PersonalSceneJumpReq&& from) noexcept
    : PersonalSceneJumpReq() {
    *this = ::std::move(from);
  }

  inline PersonalSceneJumpReq& operator=(PersonalSceneJumpReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonalSceneJumpReq& default_instance();

  static inline const PersonalSceneJumpReq* internal_default_instance() {
    return reinterpret_cast<const PersonalSceneJumpReq*>(
               &_PersonalSceneJumpReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(PersonalSceneJumpReq* other);
  friend void swap(PersonalSceneJumpReq& a, PersonalSceneJumpReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PersonalSceneJumpReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PersonalSceneJumpReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PersonalSceneJumpReq& from);
  void MergeFrom(const PersonalSceneJumpReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PersonalSceneJumpReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PersonalSceneJumpReq_CmdId CmdId;
  static const CmdId NONE =
    PersonalSceneJumpReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PersonalSceneJumpReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PersonalSceneJumpReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PersonalSceneJumpReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PersonalSceneJumpReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PersonalSceneJumpReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PersonalSceneJumpReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PersonalSceneJumpReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PersonalSceneJumpReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PersonalSceneJumpReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PersonalSceneJumpReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PersonalSceneJumpReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 point_id = 1;
  void clear_point_id();
  static const int kPointIdFieldNumber = 1;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PersonalSceneJumpReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PersonalSceneJumpRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PersonalSceneJumpRsp) */ {
 public:
  PersonalSceneJumpRsp();
  virtual ~PersonalSceneJumpRsp();

  PersonalSceneJumpRsp(const PersonalSceneJumpRsp& from);

  inline PersonalSceneJumpRsp& operator=(const PersonalSceneJumpRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PersonalSceneJumpRsp(PersonalSceneJumpRsp&& from) noexcept
    : PersonalSceneJumpRsp() {
    *this = ::std::move(from);
  }

  inline PersonalSceneJumpRsp& operator=(PersonalSceneJumpRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PersonalSceneJumpRsp& default_instance();

  static inline const PersonalSceneJumpRsp* internal_default_instance() {
    return reinterpret_cast<const PersonalSceneJumpRsp*>(
               &_PersonalSceneJumpRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(PersonalSceneJumpRsp* other);
  friend void swap(PersonalSceneJumpRsp& a, PersonalSceneJumpRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PersonalSceneJumpRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PersonalSceneJumpRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PersonalSceneJumpRsp& from);
  void MergeFrom(const PersonalSceneJumpRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PersonalSceneJumpRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PersonalSceneJumpRsp_CmdId CmdId;
  static const CmdId NONE =
    PersonalSceneJumpRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PersonalSceneJumpRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PersonalSceneJumpRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PersonalSceneJumpRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PersonalSceneJumpRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PersonalSceneJumpRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PersonalSceneJumpRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PersonalSceneJumpRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PersonalSceneJumpRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PersonalSceneJumpRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PersonalSceneJumpRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector dest_pos = 3;
  bool has_dest_pos() const;
  void clear_dest_pos();
  static const int kDestPosFieldNumber = 3;
  const ::proto::Vector& dest_pos() const;
  ::proto::Vector* mutable_dest_pos();
  ::proto::Vector* release_dest_pos();
  void set_allocated_dest_pos(::proto::Vector* dest_pos);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 dest_scene_id = 2;
  void clear_dest_scene_id();
  static const int kDestSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 dest_scene_id() const;
  void set_dest_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PersonalSceneJumpRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* dest_pos_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 dest_scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SealBattleBeginNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SealBattleBeginNotify) */ {
 public:
  SealBattleBeginNotify();
  virtual ~SealBattleBeginNotify();

  SealBattleBeginNotify(const SealBattleBeginNotify& from);

  inline SealBattleBeginNotify& operator=(const SealBattleBeginNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SealBattleBeginNotify(SealBattleBeginNotify&& from) noexcept
    : SealBattleBeginNotify() {
    *this = ::std::move(from);
  }

  inline SealBattleBeginNotify& operator=(SealBattleBeginNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SealBattleBeginNotify& default_instance();

  static inline const SealBattleBeginNotify* internal_default_instance() {
    return reinterpret_cast<const SealBattleBeginNotify*>(
               &_SealBattleBeginNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(SealBattleBeginNotify* other);
  friend void swap(SealBattleBeginNotify& a, SealBattleBeginNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SealBattleBeginNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SealBattleBeginNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SealBattleBeginNotify& from);
  void MergeFrom(const SealBattleBeginNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SealBattleBeginNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SealBattleBeginNotify_CmdId CmdId;
  static const CmdId NONE =
    SealBattleBeginNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SealBattleBeginNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SealBattleBeginNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SealBattleBeginNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SealBattleBeginNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SealBattleBeginNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SealBattleBeginNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SealBattleBeginNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SealBattleBeginNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SealBattleBeginNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SealBattleBeginNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 seal_entity_id = 1;
  void clear_seal_entity_id();
  static const int kSealEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 seal_entity_id() const;
  void set_seal_entity_id(::google::protobuf::uint32 value);

  // uint32 seal_radius = 2;
  void clear_seal_radius();
  static const int kSealRadiusFieldNumber = 2;
  ::google::protobuf::uint32 seal_radius() const;
  void set_seal_radius(::google::protobuf::uint32 value);

  // uint32 seal_max_progress = 3;
  void clear_seal_max_progress();
  static const int kSealMaxProgressFieldNumber = 3;
  ::google::protobuf::uint32 seal_max_progress() const;
  void set_seal_max_progress(::google::protobuf::uint32 value);

  // .proto.SealBattleType battle_type = 4;
  void clear_battle_type();
  static const int kBattleTypeFieldNumber = 4;
  ::proto::SealBattleType battle_type() const;
  void set_battle_type(::proto::SealBattleType value);

  // @@protoc_insertion_point(class_scope:proto.SealBattleBeginNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 seal_entity_id_;
  ::google::protobuf::uint32 seal_radius_;
  ::google::protobuf::uint32 seal_max_progress_;
  int battle_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SealBattleEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SealBattleEndNotify) */ {
 public:
  SealBattleEndNotify();
  virtual ~SealBattleEndNotify();

  SealBattleEndNotify(const SealBattleEndNotify& from);

  inline SealBattleEndNotify& operator=(const SealBattleEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SealBattleEndNotify(SealBattleEndNotify&& from) noexcept
    : SealBattleEndNotify() {
    *this = ::std::move(from);
  }

  inline SealBattleEndNotify& operator=(SealBattleEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SealBattleEndNotify& default_instance();

  static inline const SealBattleEndNotify* internal_default_instance() {
    return reinterpret_cast<const SealBattleEndNotify*>(
               &_SealBattleEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(SealBattleEndNotify* other);
  friend void swap(SealBattleEndNotify& a, SealBattleEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SealBattleEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SealBattleEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SealBattleEndNotify& from);
  void MergeFrom(const SealBattleEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SealBattleEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SealBattleEndNotify_CmdId CmdId;
  static const CmdId NONE =
    SealBattleEndNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SealBattleEndNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SealBattleEndNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SealBattleEndNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SealBattleEndNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SealBattleEndNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SealBattleEndNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SealBattleEndNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SealBattleEndNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SealBattleEndNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SealBattleEndNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 seal_entity_id = 1;
  void clear_seal_entity_id();
  static const int kSealEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 seal_entity_id() const;
  void set_seal_entity_id(::google::protobuf::uint32 value);

  // bool is_win = 2;
  void clear_is_win();
  static const int kIsWinFieldNumber = 2;
  bool is_win() const;
  void set_is_win(bool value);

  // @@protoc_insertion_point(class_scope:proto.SealBattleEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 seal_entity_id_;
  bool is_win_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SealBattleProgressNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SealBattleProgressNotify) */ {
 public:
  SealBattleProgressNotify();
  virtual ~SealBattleProgressNotify();

  SealBattleProgressNotify(const SealBattleProgressNotify& from);

  inline SealBattleProgressNotify& operator=(const SealBattleProgressNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SealBattleProgressNotify(SealBattleProgressNotify&& from) noexcept
    : SealBattleProgressNotify() {
    *this = ::std::move(from);
  }

  inline SealBattleProgressNotify& operator=(SealBattleProgressNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SealBattleProgressNotify& default_instance();

  static inline const SealBattleProgressNotify* internal_default_instance() {
    return reinterpret_cast<const SealBattleProgressNotify*>(
               &_SealBattleProgressNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(SealBattleProgressNotify* other);
  friend void swap(SealBattleProgressNotify& a, SealBattleProgressNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SealBattleProgressNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SealBattleProgressNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SealBattleProgressNotify& from);
  void MergeFrom(const SealBattleProgressNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SealBattleProgressNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SealBattleProgressNotify_CmdId CmdId;
  static const CmdId NONE =
    SealBattleProgressNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SealBattleProgressNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SealBattleProgressNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SealBattleProgressNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SealBattleProgressNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SealBattleProgressNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SealBattleProgressNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SealBattleProgressNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SealBattleProgressNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SealBattleProgressNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SealBattleProgressNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 seal_entity_id = 1;
  void clear_seal_entity_id();
  static const int kSealEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 seal_entity_id() const;
  void set_seal_entity_id(::google::protobuf::uint32 value);

  // uint32 progress = 2;
  void clear_progress();
  static const int kProgressFieldNumber = 2;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // uint32 max_progress = 3;
  void clear_max_progress();
  static const int kMaxProgressFieldNumber = 3;
  ::google::protobuf::uint32 max_progress() const;
  void set_max_progress(::google::protobuf::uint32 value);

  // uint32 end_time = 4;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 seal_radius = 5;
  void clear_seal_radius();
  static const int kSealRadiusFieldNumber = 5;
  ::google::protobuf::uint32 seal_radius() const;
  void set_seal_radius(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SealBattleProgressNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 seal_entity_id_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 max_progress_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 seal_radius_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientPauseNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientPauseNotify) */ {
 public:
  ClientPauseNotify();
  virtual ~ClientPauseNotify();

  ClientPauseNotify(const ClientPauseNotify& from);

  inline ClientPauseNotify& operator=(const ClientPauseNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientPauseNotify(ClientPauseNotify&& from) noexcept
    : ClientPauseNotify() {
    *this = ::std::move(from);
  }

  inline ClientPauseNotify& operator=(ClientPauseNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientPauseNotify& default_instance();

  static inline const ClientPauseNotify* internal_default_instance() {
    return reinterpret_cast<const ClientPauseNotify*>(
               &_ClientPauseNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(ClientPauseNotify* other);
  friend void swap(ClientPauseNotify& a, ClientPauseNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientPauseNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientPauseNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientPauseNotify& from);
  void MergeFrom(const ClientPauseNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientPauseNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientPauseNotify_CmdId CmdId;
  static const CmdId NONE =
    ClientPauseNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientPauseNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientPauseNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientPauseNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ClientPauseNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ClientPauseNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientPauseNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientPauseNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientPauseNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientPauseNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientPauseNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientPauseNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bool is_open = 1;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 1;
  bool is_open() const;
  void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:proto.ClientPauseNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_open_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarEnterSceneInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarEnterSceneInfo) */ {
 public:
  AvatarEnterSceneInfo();
  virtual ~AvatarEnterSceneInfo();

  AvatarEnterSceneInfo(const AvatarEnterSceneInfo& from);

  inline AvatarEnterSceneInfo& operator=(const AvatarEnterSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarEnterSceneInfo(AvatarEnterSceneInfo&& from) noexcept
    : AvatarEnterSceneInfo() {
    *this = ::std::move(from);
  }

  inline AvatarEnterSceneInfo& operator=(AvatarEnterSceneInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarEnterSceneInfo& default_instance();

  static inline const AvatarEnterSceneInfo* internal_default_instance() {
    return reinterpret_cast<const AvatarEnterSceneInfo*>(
               &_AvatarEnterSceneInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(AvatarEnterSceneInfo* other);
  friend void swap(AvatarEnterSceneInfo& a, AvatarEnterSceneInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarEnterSceneInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarEnterSceneInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarEnterSceneInfo& from);
  void MergeFrom(const AvatarEnterSceneInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarEnterSceneInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 buff_id_list = 4;
  int buff_id_list_size() const;
  void clear_buff_id_list();
  static const int kBuffIdListFieldNumber = 4;
  ::google::protobuf::uint32 buff_id_list(int index) const;
  void set_buff_id_list(int index, ::google::protobuf::uint32 value);
  void add_buff_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      buff_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_buff_id_list();

  // repeated .proto.ServerBuff server_buff_list = 8;
  int server_buff_list_size() const;
  void clear_server_buff_list();
  static const int kServerBuffListFieldNumber = 8;
  const ::proto::ServerBuff& server_buff_list(int index) const;
  ::proto::ServerBuff* mutable_server_buff_list(int index);
  ::proto::ServerBuff* add_server_buff_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
      mutable_server_buff_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
      server_buff_list() const;

  // .proto.AbilitySyncStateInfo avatar_ability_info = 3;
  bool has_avatar_ability_info() const;
  void clear_avatar_ability_info();
  static const int kAvatarAbilityInfoFieldNumber = 3;
  const ::proto::AbilitySyncStateInfo& avatar_ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_avatar_ability_info();
  ::proto::AbilitySyncStateInfo* release_avatar_ability_info();
  void set_allocated_avatar_ability_info(::proto::AbilitySyncStateInfo* avatar_ability_info);

  // .proto.AbilitySyncStateInfo weapon_ability_info = 7;
  bool has_weapon_ability_info() const;
  void clear_weapon_ability_info();
  static const int kWeaponAbilityInfoFieldNumber = 7;
  const ::proto::AbilitySyncStateInfo& weapon_ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_weapon_ability_info();
  ::proto::AbilitySyncStateInfo* release_weapon_ability_info();
  void set_allocated_weapon_ability_info(::proto::AbilitySyncStateInfo* weapon_ability_info);

  // uint64 avatar_guid = 1;
  void clear_avatar_guid();
  static const int kAvatarGuidFieldNumber = 1;
  ::google::protobuf::uint64 avatar_guid() const;
  void set_avatar_guid(::google::protobuf::uint64 value);

  // uint32 avatar_entity_id = 2;
  void clear_avatar_entity_id();
  static const int kAvatarEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 avatar_entity_id() const;
  void set_avatar_entity_id(::google::protobuf::uint32 value);

  // uint32 weapon_entity_id = 6;
  void clear_weapon_entity_id();
  static const int kWeaponEntityIdFieldNumber = 6;
  ::google::protobuf::uint32 weapon_entity_id() const;
  void set_weapon_entity_id(::google::protobuf::uint32 value);

  // uint64 weapon_guid = 5;
  void clear_weapon_guid();
  static const int kWeaponGuidFieldNumber = 5;
  ::google::protobuf::uint64 weapon_guid() const;
  void set_weapon_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarEnterSceneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > buff_id_list_;
  mutable int _buff_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff > server_buff_list_;
  ::proto::AbilitySyncStateInfo* avatar_ability_info_;
  ::proto::AbilitySyncStateInfo* weapon_ability_info_;
  ::google::protobuf::uint64 avatar_guid_;
  ::google::protobuf::uint32 avatar_entity_id_;
  ::google::protobuf::uint32 weapon_entity_id_;
  ::google::protobuf::uint64 weapon_guid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamEnterSceneInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TeamEnterSceneInfo) */ {
 public:
  TeamEnterSceneInfo();
  virtual ~TeamEnterSceneInfo();

  TeamEnterSceneInfo(const TeamEnterSceneInfo& from);

  inline TeamEnterSceneInfo& operator=(const TeamEnterSceneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TeamEnterSceneInfo(TeamEnterSceneInfo&& from) noexcept
    : TeamEnterSceneInfo() {
    *this = ::std::move(from);
  }

  inline TeamEnterSceneInfo& operator=(TeamEnterSceneInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamEnterSceneInfo& default_instance();

  static inline const TeamEnterSceneInfo* internal_default_instance() {
    return reinterpret_cast<const TeamEnterSceneInfo*>(
               &_TeamEnterSceneInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(TeamEnterSceneInfo* other);
  friend void swap(TeamEnterSceneInfo& a, TeamEnterSceneInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TeamEnterSceneInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamEnterSceneInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamEnterSceneInfo& from);
  void MergeFrom(const TeamEnterSceneInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamEnterSceneInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilitySyncStateInfo team_ability_info = 2;
  bool has_team_ability_info() const;
  void clear_team_ability_info();
  static const int kTeamAbilityInfoFieldNumber = 2;
  const ::proto::AbilitySyncStateInfo& team_ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_team_ability_info();
  ::proto::AbilitySyncStateInfo* release_team_ability_info();
  void set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info);

  // uint32 team_entity_id = 1;
  void clear_team_entity_id();
  static const int kTeamEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 team_entity_id() const;
  void set_team_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TeamEnterSceneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilitySyncStateInfo* team_ability_info_;
  ::google::protobuf::uint32 team_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MPLevelEntityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MPLevelEntityInfo) */ {
 public:
  MPLevelEntityInfo();
  virtual ~MPLevelEntityInfo();

  MPLevelEntityInfo(const MPLevelEntityInfo& from);

  inline MPLevelEntityInfo& operator=(const MPLevelEntityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MPLevelEntityInfo(MPLevelEntityInfo&& from) noexcept
    : MPLevelEntityInfo() {
    *this = ::std::move(from);
  }

  inline MPLevelEntityInfo& operator=(MPLevelEntityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MPLevelEntityInfo& default_instance();

  static inline const MPLevelEntityInfo* internal_default_instance() {
    return reinterpret_cast<const MPLevelEntityInfo*>(
               &_MPLevelEntityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(MPLevelEntityInfo* other);
  friend void swap(MPLevelEntityInfo& a, MPLevelEntityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MPLevelEntityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MPLevelEntityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MPLevelEntityInfo& from);
  void MergeFrom(const MPLevelEntityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MPLevelEntityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AbilitySyncStateInfo ability_info = 3;
  bool has_ability_info() const;
  void clear_ability_info();
  static const int kAbilityInfoFieldNumber = 3;
  const ::proto::AbilitySyncStateInfo& ability_info() const;
  ::proto::AbilitySyncStateInfo* mutable_ability_info();
  ::proto::AbilitySyncStateInfo* release_ability_info();
  void set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 authority_peer_id = 2;
  void clear_authority_peer_id();
  static const int kAuthorityPeerIdFieldNumber = 2;
  ::google::protobuf::uint32 authority_peer_id() const;
  void set_authority_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MPLevelEntityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AbilitySyncStateInfo* ability_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 authority_peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerEnterSceneInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerEnterSceneInfoNotify) */ {
 public:
  PlayerEnterSceneInfoNotify();
  virtual ~PlayerEnterSceneInfoNotify();

  PlayerEnterSceneInfoNotify(const PlayerEnterSceneInfoNotify& from);

  inline PlayerEnterSceneInfoNotify& operator=(const PlayerEnterSceneInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerEnterSceneInfoNotify(PlayerEnterSceneInfoNotify&& from) noexcept
    : PlayerEnterSceneInfoNotify() {
    *this = ::std::move(from);
  }

  inline PlayerEnterSceneInfoNotify& operator=(PlayerEnterSceneInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEnterSceneInfoNotify& default_instance();

  static inline const PlayerEnterSceneInfoNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterSceneInfoNotify*>(
               &_PlayerEnterSceneInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(PlayerEnterSceneInfoNotify* other);
  friend void swap(PlayerEnterSceneInfoNotify& a, PlayerEnterSceneInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerEnterSceneInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerEnterSceneInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerEnterSceneInfoNotify& from);
  void MergeFrom(const PlayerEnterSceneInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerEnterSceneInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerEnterSceneInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerEnterSceneInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerEnterSceneInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerEnterSceneInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerEnterSceneInfoNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerEnterSceneInfoNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerEnterSceneInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerEnterSceneInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerEnterSceneInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerEnterSceneInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerEnterSceneInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerEnterSceneInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerEnterSceneInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 2;
  int avatar_enter_info_size() const;
  void clear_avatar_enter_info();
  static const int kAvatarEnterInfoFieldNumber = 2;
  const ::proto::AvatarEnterSceneInfo& avatar_enter_info(int index) const;
  ::proto::AvatarEnterSceneInfo* mutable_avatar_enter_info(int index);
  ::proto::AvatarEnterSceneInfo* add_avatar_enter_info();
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >*
      mutable_avatar_enter_info();
  const ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >&
      avatar_enter_info() const;

  // .proto.TeamEnterSceneInfo team_enter_info = 3;
  bool has_team_enter_info() const;
  void clear_team_enter_info();
  static const int kTeamEnterInfoFieldNumber = 3;
  const ::proto::TeamEnterSceneInfo& team_enter_info() const;
  ::proto::TeamEnterSceneInfo* mutable_team_enter_info();
  ::proto::TeamEnterSceneInfo* release_team_enter_info();
  void set_allocated_team_enter_info(::proto::TeamEnterSceneInfo* team_enter_info);

  // .proto.MPLevelEntityInfo mp_level_entity_info = 4;
  bool has_mp_level_entity_info() const;
  void clear_mp_level_entity_info();
  static const int kMpLevelEntityInfoFieldNumber = 4;
  const ::proto::MPLevelEntityInfo& mp_level_entity_info() const;
  ::proto::MPLevelEntityInfo* mutable_mp_level_entity_info();
  ::proto::MPLevelEntityInfo* release_mp_level_entity_info();
  void set_allocated_mp_level_entity_info(::proto::MPLevelEntityInfo* mp_level_entity_info);

  // uint32 cur_avatar_entity_id = 1;
  void clear_cur_avatar_entity_id();
  static const int kCurAvatarEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 cur_avatar_entity_id() const;
  void set_cur_avatar_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerEnterSceneInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo > avatar_enter_info_;
  ::proto::TeamEnterSceneInfo* team_enter_info_;
  ::proto::MPLevelEntityInfo* mp_level_entity_info_;
  ::google::protobuf::uint32 cur_avatar_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinPlayerSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.JoinPlayerSceneReq) */ {
 public:
  JoinPlayerSceneReq();
  virtual ~JoinPlayerSceneReq();

  JoinPlayerSceneReq(const JoinPlayerSceneReq& from);

  inline JoinPlayerSceneReq& operator=(const JoinPlayerSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinPlayerSceneReq(JoinPlayerSceneReq&& from) noexcept
    : JoinPlayerSceneReq() {
    *this = ::std::move(from);
  }

  inline JoinPlayerSceneReq& operator=(JoinPlayerSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinPlayerSceneReq& default_instance();

  static inline const JoinPlayerSceneReq* internal_default_instance() {
    return reinterpret_cast<const JoinPlayerSceneReq*>(
               &_JoinPlayerSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(JoinPlayerSceneReq* other);
  friend void swap(JoinPlayerSceneReq& a, JoinPlayerSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinPlayerSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinPlayerSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinPlayerSceneReq& from);
  void MergeFrom(const JoinPlayerSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinPlayerSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef JoinPlayerSceneReq_CmdId CmdId;
  static const CmdId NONE =
    JoinPlayerSceneReq_CmdId_NONE;
  static const CmdId CMD_ID =
    JoinPlayerSceneReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    JoinPlayerSceneReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    JoinPlayerSceneReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    JoinPlayerSceneReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return JoinPlayerSceneReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    JoinPlayerSceneReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    JoinPlayerSceneReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    JoinPlayerSceneReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return JoinPlayerSceneReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return JoinPlayerSceneReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return JoinPlayerSceneReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.JoinPlayerSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinPlayerSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.JoinPlayerSceneRsp) */ {
 public:
  JoinPlayerSceneRsp();
  virtual ~JoinPlayerSceneRsp();

  JoinPlayerSceneRsp(const JoinPlayerSceneRsp& from);

  inline JoinPlayerSceneRsp& operator=(const JoinPlayerSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinPlayerSceneRsp(JoinPlayerSceneRsp&& from) noexcept
    : JoinPlayerSceneRsp() {
    *this = ::std::move(from);
  }

  inline JoinPlayerSceneRsp& operator=(JoinPlayerSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinPlayerSceneRsp& default_instance();

  static inline const JoinPlayerSceneRsp* internal_default_instance() {
    return reinterpret_cast<const JoinPlayerSceneRsp*>(
               &_JoinPlayerSceneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(JoinPlayerSceneRsp* other);
  friend void swap(JoinPlayerSceneRsp& a, JoinPlayerSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinPlayerSceneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinPlayerSceneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinPlayerSceneRsp& from);
  void MergeFrom(const JoinPlayerSceneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinPlayerSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef JoinPlayerSceneRsp_CmdId CmdId;
  static const CmdId NONE =
    JoinPlayerSceneRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    JoinPlayerSceneRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    JoinPlayerSceneRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    JoinPlayerSceneRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return JoinPlayerSceneRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    JoinPlayerSceneRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    JoinPlayerSceneRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    JoinPlayerSceneRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return JoinPlayerSceneRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return JoinPlayerSceneRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return JoinPlayerSceneRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.JoinPlayerSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneKickPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneKickPlayerReq) */ {
 public:
  SceneKickPlayerReq();
  virtual ~SceneKickPlayerReq();

  SceneKickPlayerReq(const SceneKickPlayerReq& from);

  inline SceneKickPlayerReq& operator=(const SceneKickPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneKickPlayerReq(SceneKickPlayerReq&& from) noexcept
    : SceneKickPlayerReq() {
    *this = ::std::move(from);
  }

  inline SceneKickPlayerReq& operator=(SceneKickPlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneKickPlayerReq& default_instance();

  static inline const SceneKickPlayerReq* internal_default_instance() {
    return reinterpret_cast<const SceneKickPlayerReq*>(
               &_SceneKickPlayerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(SceneKickPlayerReq* other);
  friend void swap(SceneKickPlayerReq& a, SceneKickPlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneKickPlayerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneKickPlayerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneKickPlayerReq& from);
  void MergeFrom(const SceneKickPlayerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneKickPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneKickPlayerReq_CmdId CmdId;
  static const CmdId NONE =
    SceneKickPlayerReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneKickPlayerReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneKickPlayerReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneKickPlayerReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneKickPlayerReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneKickPlayerReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneKickPlayerReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneKickPlayerReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneKickPlayerReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneKickPlayerReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneKickPlayerReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneKickPlayerReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneKickPlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneKickPlayerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneKickPlayerRsp) */ {
 public:
  SceneKickPlayerRsp();
  virtual ~SceneKickPlayerRsp();

  SceneKickPlayerRsp(const SceneKickPlayerRsp& from);

  inline SceneKickPlayerRsp& operator=(const SceneKickPlayerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneKickPlayerRsp(SceneKickPlayerRsp&& from) noexcept
    : SceneKickPlayerRsp() {
    *this = ::std::move(from);
  }

  inline SceneKickPlayerRsp& operator=(SceneKickPlayerRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneKickPlayerRsp& default_instance();

  static inline const SceneKickPlayerRsp* internal_default_instance() {
    return reinterpret_cast<const SceneKickPlayerRsp*>(
               &_SceneKickPlayerRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(SceneKickPlayerRsp* other);
  friend void swap(SceneKickPlayerRsp& a, SceneKickPlayerRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneKickPlayerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneKickPlayerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneKickPlayerRsp& from);
  void MergeFrom(const SceneKickPlayerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneKickPlayerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneKickPlayerRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneKickPlayerRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneKickPlayerRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneKickPlayerRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneKickPlayerRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneKickPlayerRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneKickPlayerRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneKickPlayerRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneKickPlayerRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneKickPlayerRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneKickPlayerRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneKickPlayerRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 2;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 2;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneKickPlayerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneKickPlayerNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneKickPlayerNotify) */ {
 public:
  SceneKickPlayerNotify();
  virtual ~SceneKickPlayerNotify();

  SceneKickPlayerNotify(const SceneKickPlayerNotify& from);

  inline SceneKickPlayerNotify& operator=(const SceneKickPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneKickPlayerNotify(SceneKickPlayerNotify&& from) noexcept
    : SceneKickPlayerNotify() {
    *this = ::std::move(from);
  }

  inline SceneKickPlayerNotify& operator=(SceneKickPlayerNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneKickPlayerNotify& default_instance();

  static inline const SceneKickPlayerNotify* internal_default_instance() {
    return reinterpret_cast<const SceneKickPlayerNotify*>(
               &_SceneKickPlayerNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(SceneKickPlayerNotify* other);
  friend void swap(SceneKickPlayerNotify& a, SceneKickPlayerNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneKickPlayerNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneKickPlayerNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneKickPlayerNotify& from);
  void MergeFrom(const SceneKickPlayerNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneKickPlayerNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneKickPlayerNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneKickPlayerNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneKickPlayerNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneKickPlayerNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneKickPlayerNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneKickPlayerNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneKickPlayerNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneKickPlayerNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneKickPlayerNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneKickPlayerNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneKickPlayerNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneKickPlayerNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneKickPlayerNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 kicker_uid = 1;
  void clear_kicker_uid();
  static const int kKickerUidFieldNumber = 1;
  ::google::protobuf::uint32 kicker_uid() const;
  void set_kicker_uid(::google::protobuf::uint32 value);

  // uint32 target_uid = 2;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 2;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneKickPlayerNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 kicker_uid_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HitClientTrivialNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HitClientTrivialNotify) */ {
 public:
  HitClientTrivialNotify();
  virtual ~HitClientTrivialNotify();

  HitClientTrivialNotify(const HitClientTrivialNotify& from);

  inline HitClientTrivialNotify& operator=(const HitClientTrivialNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HitClientTrivialNotify(HitClientTrivialNotify&& from) noexcept
    : HitClientTrivialNotify() {
    *this = ::std::move(from);
  }

  inline HitClientTrivialNotify& operator=(HitClientTrivialNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HitClientTrivialNotify& default_instance();

  static inline const HitClientTrivialNotify* internal_default_instance() {
    return reinterpret_cast<const HitClientTrivialNotify*>(
               &_HitClientTrivialNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(HitClientTrivialNotify* other);
  friend void swap(HitClientTrivialNotify& a, HitClientTrivialNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HitClientTrivialNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  HitClientTrivialNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HitClientTrivialNotify& from);
  void MergeFrom(const HitClientTrivialNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HitClientTrivialNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef HitClientTrivialNotify_CmdId CmdId;
  static const CmdId NONE =
    HitClientTrivialNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    HitClientTrivialNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    HitClientTrivialNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    HitClientTrivialNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    HitClientTrivialNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return HitClientTrivialNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    HitClientTrivialNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    HitClientTrivialNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    HitClientTrivialNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return HitClientTrivialNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return HitClientTrivialNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return HitClientTrivialNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector position = 1;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 1;
  const ::proto::Vector& position() const;
  ::proto::Vector* mutable_position();
  ::proto::Vector* release_position();
  void set_allocated_position(::proto::Vector* position);

  // uint32 owner_entity_id = 2;
  void clear_owner_entity_id();
  static const int kOwnerEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 owner_entity_id() const;
  void set_owner_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HitClientTrivialNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* position_;
  ::google::protobuf::uint32 owner_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackMyWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BackMyWorldReq) */ {
 public:
  BackMyWorldReq();
  virtual ~BackMyWorldReq();

  BackMyWorldReq(const BackMyWorldReq& from);

  inline BackMyWorldReq& operator=(const BackMyWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackMyWorldReq(BackMyWorldReq&& from) noexcept
    : BackMyWorldReq() {
    *this = ::std::move(from);
  }

  inline BackMyWorldReq& operator=(BackMyWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BackMyWorldReq& default_instance();

  static inline const BackMyWorldReq* internal_default_instance() {
    return reinterpret_cast<const BackMyWorldReq*>(
               &_BackMyWorldReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(BackMyWorldReq* other);
  friend void swap(BackMyWorldReq& a, BackMyWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackMyWorldReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BackMyWorldReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackMyWorldReq& from);
  void MergeFrom(const BackMyWorldReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackMyWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BackMyWorldReq_CmdId CmdId;
  static const CmdId NONE =
    BackMyWorldReq_CmdId_NONE;
  static const CmdId CMD_ID =
    BackMyWorldReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BackMyWorldReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BackMyWorldReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    BackMyWorldReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return BackMyWorldReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BackMyWorldReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BackMyWorldReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BackMyWorldReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BackMyWorldReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BackMyWorldReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BackMyWorldReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.BackMyWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackMyWorldRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BackMyWorldRsp) */ {
 public:
  BackMyWorldRsp();
  virtual ~BackMyWorldRsp();

  BackMyWorldRsp(const BackMyWorldRsp& from);

  inline BackMyWorldRsp& operator=(const BackMyWorldRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackMyWorldRsp(BackMyWorldRsp&& from) noexcept
    : BackMyWorldRsp() {
    *this = ::std::move(from);
  }

  inline BackMyWorldRsp& operator=(BackMyWorldRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BackMyWorldRsp& default_instance();

  static inline const BackMyWorldRsp* internal_default_instance() {
    return reinterpret_cast<const BackMyWorldRsp*>(
               &_BackMyWorldRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(BackMyWorldRsp* other);
  friend void swap(BackMyWorldRsp& a, BackMyWorldRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackMyWorldRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BackMyWorldRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackMyWorldRsp& from);
  void MergeFrom(const BackMyWorldRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackMyWorldRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BackMyWorldRsp_CmdId CmdId;
  static const CmdId NONE =
    BackMyWorldRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    BackMyWorldRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BackMyWorldRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BackMyWorldRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BackMyWorldRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BackMyWorldRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BackMyWorldRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BackMyWorldRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BackMyWorldRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BackMyWorldRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BackMyWorldRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BackMyWorldRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SeeMonsterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SeeMonsterReq) */ {
 public:
  SeeMonsterReq();
  virtual ~SeeMonsterReq();

  SeeMonsterReq(const SeeMonsterReq& from);

  inline SeeMonsterReq& operator=(const SeeMonsterReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SeeMonsterReq(SeeMonsterReq&& from) noexcept
    : SeeMonsterReq() {
    *this = ::std::move(from);
  }

  inline SeeMonsterReq& operator=(SeeMonsterReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SeeMonsterReq& default_instance();

  static inline const SeeMonsterReq* internal_default_instance() {
    return reinterpret_cast<const SeeMonsterReq*>(
               &_SeeMonsterReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(SeeMonsterReq* other);
  friend void swap(SeeMonsterReq& a, SeeMonsterReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SeeMonsterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SeeMonsterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SeeMonsterReq& from);
  void MergeFrom(const SeeMonsterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SeeMonsterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SeeMonsterReq_CmdId CmdId;
  static const CmdId NONE =
    SeeMonsterReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SeeMonsterReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SeeMonsterReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SeeMonsterReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SeeMonsterReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SeeMonsterReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SeeMonsterReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SeeMonsterReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SeeMonsterReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SeeMonsterReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SeeMonsterReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SeeMonsterReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 monster_id = 1;
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SeeMonsterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 monster_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SeeMonsterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SeeMonsterRsp) */ {
 public:
  SeeMonsterRsp();
  virtual ~SeeMonsterRsp();

  SeeMonsterRsp(const SeeMonsterRsp& from);

  inline SeeMonsterRsp& operator=(const SeeMonsterRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SeeMonsterRsp(SeeMonsterRsp&& from) noexcept
    : SeeMonsterRsp() {
    *this = ::std::move(from);
  }

  inline SeeMonsterRsp& operator=(SeeMonsterRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SeeMonsterRsp& default_instance();

  static inline const SeeMonsterRsp* internal_default_instance() {
    return reinterpret_cast<const SeeMonsterRsp*>(
               &_SeeMonsterRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(SeeMonsterRsp* other);
  friend void swap(SeeMonsterRsp& a, SeeMonsterRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SeeMonsterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SeeMonsterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SeeMonsterRsp& from);
  void MergeFrom(const SeeMonsterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SeeMonsterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SeeMonsterRsp_CmdId CmdId;
  static const CmdId NONE =
    SeeMonsterRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SeeMonsterRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SeeMonsterRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SeeMonsterRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SeeMonsterRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SeeMonsterRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SeeMonsterRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SeeMonsterRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SeeMonsterRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SeeMonsterRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SeeMonsterRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SeeMonsterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddSeenMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddSeenMonsterNotify) */ {
 public:
  AddSeenMonsterNotify();
  virtual ~AddSeenMonsterNotify();

  AddSeenMonsterNotify(const AddSeenMonsterNotify& from);

  inline AddSeenMonsterNotify& operator=(const AddSeenMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddSeenMonsterNotify(AddSeenMonsterNotify&& from) noexcept
    : AddSeenMonsterNotify() {
    *this = ::std::move(from);
  }

  inline AddSeenMonsterNotify& operator=(AddSeenMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddSeenMonsterNotify& default_instance();

  static inline const AddSeenMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const AddSeenMonsterNotify*>(
               &_AddSeenMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(AddSeenMonsterNotify* other);
  friend void swap(AddSeenMonsterNotify& a, AddSeenMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddSeenMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AddSeenMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddSeenMonsterNotify& from);
  void MergeFrom(const AddSeenMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddSeenMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AddSeenMonsterNotify_CmdId CmdId;
  static const CmdId NONE =
    AddSeenMonsterNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AddSeenMonsterNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AddSeenMonsterNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AddSeenMonsterNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AddSeenMonsterNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AddSeenMonsterNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AddSeenMonsterNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AddSeenMonsterNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AddSeenMonsterNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AddSeenMonsterNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AddSeenMonsterNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AddSeenMonsterNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 monster_id_list = 1;
  int monster_id_list_size() const;
  void clear_monster_id_list();
  static const int kMonsterIdListFieldNumber = 1;
  ::google::protobuf::uint32 monster_id_list(int index) const;
  void set_monster_id_list(int index, ::google::protobuf::uint32 value);
  void add_monster_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      monster_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_monster_id_list();

  // @@protoc_insertion_point(class_scope:proto.AddSeenMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > monster_id_list_;
  mutable int _monster_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllSeenMonsterNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AllSeenMonsterNotify) */ {
 public:
  AllSeenMonsterNotify();
  virtual ~AllSeenMonsterNotify();

  AllSeenMonsterNotify(const AllSeenMonsterNotify& from);

  inline AllSeenMonsterNotify& operator=(const AllSeenMonsterNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllSeenMonsterNotify(AllSeenMonsterNotify&& from) noexcept
    : AllSeenMonsterNotify() {
    *this = ::std::move(from);
  }

  inline AllSeenMonsterNotify& operator=(AllSeenMonsterNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllSeenMonsterNotify& default_instance();

  static inline const AllSeenMonsterNotify* internal_default_instance() {
    return reinterpret_cast<const AllSeenMonsterNotify*>(
               &_AllSeenMonsterNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(AllSeenMonsterNotify* other);
  friend void swap(AllSeenMonsterNotify& a, AllSeenMonsterNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllSeenMonsterNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AllSeenMonsterNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllSeenMonsterNotify& from);
  void MergeFrom(const AllSeenMonsterNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllSeenMonsterNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AllSeenMonsterNotify_CmdId CmdId;
  static const CmdId NONE =
    AllSeenMonsterNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AllSeenMonsterNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AllSeenMonsterNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AllSeenMonsterNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    AllSeenMonsterNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return AllSeenMonsterNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AllSeenMonsterNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AllSeenMonsterNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AllSeenMonsterNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AllSeenMonsterNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AllSeenMonsterNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AllSeenMonsterNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 monster_id_list = 1;
  int monster_id_list_size() const;
  void clear_monster_id_list();
  static const int kMonsterIdListFieldNumber = 1;
  ::google::protobuf::uint32 monster_id_list(int index) const;
  void set_monster_id_list(int index, ::google::protobuf::uint32 value);
  void add_monster_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      monster_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_monster_id_list();

  // @@protoc_insertion_point(class_scope:proto.AllSeenMonsterNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > monster_id_list_;
  mutable int _monster_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTimeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTimeNotify) */ {
 public:
  SceneTimeNotify();
  virtual ~SceneTimeNotify();

  SceneTimeNotify(const SceneTimeNotify& from);

  inline SceneTimeNotify& operator=(const SceneTimeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTimeNotify(SceneTimeNotify&& from) noexcept
    : SceneTimeNotify() {
    *this = ::std::move(from);
  }

  inline SceneTimeNotify& operator=(SceneTimeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTimeNotify& default_instance();

  static inline const SceneTimeNotify* internal_default_instance() {
    return reinterpret_cast<const SceneTimeNotify*>(
               &_SceneTimeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(SceneTimeNotify* other);
  friend void swap(SceneTimeNotify& a, SceneTimeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTimeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTimeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTimeNotify& from);
  void MergeFrom(const SceneTimeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTimeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneTimeNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneTimeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneTimeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneTimeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneTimeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneTimeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneTimeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneTimeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneTimeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneTimeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneTimeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneTimeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // bool is_paused = 2;
  void clear_is_paused();
  static const int kIsPausedFieldNumber = 2;
  bool is_paused() const;
  void set_is_paused(bool value);

  // uint64 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint64 scene_time() const;
  void set_scene_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.SceneTimeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  bool is_paused_;
  ::google::protobuf::uint64 scene_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneReadyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneReadyReq) */ {
 public:
  EnterSceneReadyReq();
  virtual ~EnterSceneReadyReq();

  EnterSceneReadyReq(const EnterSceneReadyReq& from);

  inline EnterSceneReadyReq& operator=(const EnterSceneReadyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneReadyReq(EnterSceneReadyReq&& from) noexcept
    : EnterSceneReadyReq() {
    *this = ::std::move(from);
  }

  inline EnterSceneReadyReq& operator=(EnterSceneReadyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneReadyReq& default_instance();

  static inline const EnterSceneReadyReq* internal_default_instance() {
    return reinterpret_cast<const EnterSceneReadyReq*>(
               &_EnterSceneReadyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(EnterSceneReadyReq* other);
  friend void swap(EnterSceneReadyReq& a, EnterSceneReadyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneReadyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneReadyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneReadyReq& from);
  void MergeFrom(const EnterSceneReadyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneReadyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterSceneReadyReq_CmdId CmdId;
  static const CmdId NONE =
    EnterSceneReadyReq_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterSceneReadyReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterSceneReadyReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterSceneReadyReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EnterSceneReadyReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EnterSceneReadyReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterSceneReadyReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterSceneReadyReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterSceneReadyReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterSceneReadyReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterSceneReadyReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterSceneReadyReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 1;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 1;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneReadyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneReadyRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneReadyRsp) */ {
 public:
  EnterSceneReadyRsp();
  virtual ~EnterSceneReadyRsp();

  EnterSceneReadyRsp(const EnterSceneReadyRsp& from);

  inline EnterSceneReadyRsp& operator=(const EnterSceneReadyRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneReadyRsp(EnterSceneReadyRsp&& from) noexcept
    : EnterSceneReadyRsp() {
    *this = ::std::move(from);
  }

  inline EnterSceneReadyRsp& operator=(EnterSceneReadyRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneReadyRsp& default_instance();

  static inline const EnterSceneReadyRsp* internal_default_instance() {
    return reinterpret_cast<const EnterSceneReadyRsp*>(
               &_EnterSceneReadyRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(EnterSceneReadyRsp* other);
  friend void swap(EnterSceneReadyRsp& a, EnterSceneReadyRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneReadyRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneReadyRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneReadyRsp& from);
  void MergeFrom(const EnterSceneReadyRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneReadyRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterSceneReadyRsp_CmdId CmdId;
  static const CmdId NONE =
    EnterSceneReadyRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterSceneReadyRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterSceneReadyRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterSceneReadyRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EnterSceneReadyRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterSceneReadyRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterSceneReadyRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterSceneReadyRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterSceneReadyRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterSceneReadyRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterSceneReadyRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneReadyRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterScenePeerNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterScenePeerNotify) */ {
 public:
  EnterScenePeerNotify();
  virtual ~EnterScenePeerNotify();

  EnterScenePeerNotify(const EnterScenePeerNotify& from);

  inline EnterScenePeerNotify& operator=(const EnterScenePeerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterScenePeerNotify(EnterScenePeerNotify&& from) noexcept
    : EnterScenePeerNotify() {
    *this = ::std::move(from);
  }

  inline EnterScenePeerNotify& operator=(EnterScenePeerNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterScenePeerNotify& default_instance();

  static inline const EnterScenePeerNotify* internal_default_instance() {
    return reinterpret_cast<const EnterScenePeerNotify*>(
               &_EnterScenePeerNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(EnterScenePeerNotify* other);
  friend void swap(EnterScenePeerNotify& a, EnterScenePeerNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterScenePeerNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterScenePeerNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterScenePeerNotify& from);
  void MergeFrom(const EnterScenePeerNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterScenePeerNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterScenePeerNotify_CmdId CmdId;
  static const CmdId NONE =
    EnterScenePeerNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterScenePeerNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterScenePeerNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterScenePeerNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EnterScenePeerNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterScenePeerNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterScenePeerNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterScenePeerNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterScenePeerNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterScenePeerNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterScenePeerNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 dest_scene_id = 1;
  void clear_dest_scene_id();
  static const int kDestSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 dest_scene_id() const;
  void set_dest_scene_id(::google::protobuf::uint32 value);

  // uint32 peer_id = 2;
  void clear_peer_id();
  static const int kPeerIdFieldNumber = 2;
  ::google::protobuf::uint32 peer_id() const;
  void set_peer_id(::google::protobuf::uint32 value);

  // uint32 host_peer_id = 3;
  void clear_host_peer_id();
  static const int kHostPeerIdFieldNumber = 3;
  ::google::protobuf::uint32 host_peer_id() const;
  void set_host_peer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterScenePeerNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dest_scene_id_;
  ::google::protobuf::uint32 peer_id_;
  ::google::protobuf::uint32 host_peer_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneDoneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneDoneReq) */ {
 public:
  EnterSceneDoneReq();
  virtual ~EnterSceneDoneReq();

  EnterSceneDoneReq(const EnterSceneDoneReq& from);

  inline EnterSceneDoneReq& operator=(const EnterSceneDoneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneDoneReq(EnterSceneDoneReq&& from) noexcept
    : EnterSceneDoneReq() {
    *this = ::std::move(from);
  }

  inline EnterSceneDoneReq& operator=(EnterSceneDoneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneDoneReq& default_instance();

  static inline const EnterSceneDoneReq* internal_default_instance() {
    return reinterpret_cast<const EnterSceneDoneReq*>(
               &_EnterSceneDoneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(EnterSceneDoneReq* other);
  friend void swap(EnterSceneDoneReq& a, EnterSceneDoneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneDoneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneDoneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneDoneReq& from);
  void MergeFrom(const EnterSceneDoneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneDoneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterSceneDoneReq_CmdId CmdId;
  static const CmdId NONE =
    EnterSceneDoneReq_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterSceneDoneReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterSceneDoneReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterSceneDoneReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EnterSceneDoneReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EnterSceneDoneReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterSceneDoneReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterSceneDoneReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterSceneDoneReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterSceneDoneReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterSceneDoneReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterSceneDoneReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 1;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 1;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneDoneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterSceneDoneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterSceneDoneRsp) */ {
 public:
  EnterSceneDoneRsp();
  virtual ~EnterSceneDoneRsp();

  EnterSceneDoneRsp(const EnterSceneDoneRsp& from);

  inline EnterSceneDoneRsp& operator=(const EnterSceneDoneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterSceneDoneRsp(EnterSceneDoneRsp&& from) noexcept
    : EnterSceneDoneRsp() {
    *this = ::std::move(from);
  }

  inline EnterSceneDoneRsp& operator=(EnterSceneDoneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterSceneDoneRsp& default_instance();

  static inline const EnterSceneDoneRsp* internal_default_instance() {
    return reinterpret_cast<const EnterSceneDoneRsp*>(
               &_EnterSceneDoneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(EnterSceneDoneRsp* other);
  friend void swap(EnterSceneDoneRsp& a, EnterSceneDoneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterSceneDoneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterSceneDoneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterSceneDoneRsp& from);
  void MergeFrom(const EnterSceneDoneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterSceneDoneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterSceneDoneRsp_CmdId CmdId;
  static const CmdId NONE =
    EnterSceneDoneRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterSceneDoneRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterSceneDoneRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterSceneDoneRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return EnterSceneDoneRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterSceneDoneRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterSceneDoneRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterSceneDoneRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterSceneDoneRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterSceneDoneRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterSceneDoneRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterSceneDoneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerDieNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerDieNotify) */ {
 public:
  WorldPlayerDieNotify();
  virtual ~WorldPlayerDieNotify();

  WorldPlayerDieNotify(const WorldPlayerDieNotify& from);

  inline WorldPlayerDieNotify& operator=(const WorldPlayerDieNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerDieNotify(WorldPlayerDieNotify&& from) noexcept
    : WorldPlayerDieNotify() {
    *this = ::std::move(from);
  }

  inline WorldPlayerDieNotify& operator=(WorldPlayerDieNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerDieNotify& default_instance();

  enum EntityCase {
    kMonsterId = 3,
    kGadgetId = 4,
    ENTITY_NOT_SET = 0,
  };

  static inline const WorldPlayerDieNotify* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerDieNotify*>(
               &_WorldPlayerDieNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(WorldPlayerDieNotify* other);
  friend void swap(WorldPlayerDieNotify& a, WorldPlayerDieNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerDieNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerDieNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerDieNotify& from);
  void MergeFrom(const WorldPlayerDieNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerDieNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldPlayerDieNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldPlayerDieNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldPlayerDieNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldPlayerDieNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldPlayerDieNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorldPlayerDieNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldPlayerDieNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldPlayerDieNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldPlayerDieNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldPlayerDieNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldPlayerDieNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldPlayerDieNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.PlayerDieType die_type = 1;
  void clear_die_type();
  static const int kDieTypeFieldNumber = 1;
  ::proto::PlayerDieType die_type() const;
  void set_die_type(::proto::PlayerDieType value);

  // uint32 murderer_entity_id = 2;
  void clear_murderer_entity_id();
  static const int kMurdererEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 murderer_entity_id() const;
  void set_murderer_entity_id(::google::protobuf::uint32 value);

  // uint32 monster_id = 3;
  private:
  bool has_monster_id() const;
  public:
  void clear_monster_id();
  static const int kMonsterIdFieldNumber = 3;
  ::google::protobuf::uint32 monster_id() const;
  void set_monster_id(::google::protobuf::uint32 value);

  // uint32 gadget_id = 4;
  private:
  bool has_gadget_id() const;
  public:
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 4;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  EntityCase entity_case() const;
  // @@protoc_insertion_point(class_scope:proto.WorldPlayerDieNotify)
 private:
  void set_has_monster_id();
  void set_has_gadget_id();

  inline bool has_entity() const;
  void clear_entity();
  inline void clear_has_entity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int die_type_;
  ::google::protobuf::uint32 murderer_entity_id_;
  union EntityUnion {
    EntityUnion() {}
    ::google::protobuf::uint32 monster_id_;
    ::google::protobuf::uint32 gadget_id_;
  } entity_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerReviveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerReviveReq) */ {
 public:
  WorldPlayerReviveReq();
  virtual ~WorldPlayerReviveReq();

  WorldPlayerReviveReq(const WorldPlayerReviveReq& from);

  inline WorldPlayerReviveReq& operator=(const WorldPlayerReviveReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerReviveReq(WorldPlayerReviveReq&& from) noexcept
    : WorldPlayerReviveReq() {
    *this = ::std::move(from);
  }

  inline WorldPlayerReviveReq& operator=(WorldPlayerReviveReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerReviveReq& default_instance();

  static inline const WorldPlayerReviveReq* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerReviveReq*>(
               &_WorldPlayerReviveReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(WorldPlayerReviveReq* other);
  friend void swap(WorldPlayerReviveReq& a, WorldPlayerReviveReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerReviveReq* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerReviveReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerReviveReq& from);
  void MergeFrom(const WorldPlayerReviveReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerReviveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldPlayerReviveReq_CmdId CmdId;
  static const CmdId NONE =
    WorldPlayerReviveReq_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldPlayerReviveReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldPlayerReviveReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldPlayerReviveReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    WorldPlayerReviveReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return WorldPlayerReviveReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldPlayerReviveReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldPlayerReviveReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldPlayerReviveReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldPlayerReviveReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldPlayerReviveReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldPlayerReviveReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.WorldPlayerReviveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerReviveRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerReviveRsp) */ {
 public:
  WorldPlayerReviveRsp();
  virtual ~WorldPlayerReviveRsp();

  WorldPlayerReviveRsp(const WorldPlayerReviveRsp& from);

  inline WorldPlayerReviveRsp& operator=(const WorldPlayerReviveRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerReviveRsp(WorldPlayerReviveRsp&& from) noexcept
    : WorldPlayerReviveRsp() {
    *this = ::std::move(from);
  }

  inline WorldPlayerReviveRsp& operator=(WorldPlayerReviveRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerReviveRsp& default_instance();

  static inline const WorldPlayerReviveRsp* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerReviveRsp*>(
               &_WorldPlayerReviveRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(WorldPlayerReviveRsp* other);
  friend void swap(WorldPlayerReviveRsp& a, WorldPlayerReviveRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerReviveRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerReviveRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerReviveRsp& from);
  void MergeFrom(const WorldPlayerReviveRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerReviveRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldPlayerReviveRsp_CmdId CmdId;
  static const CmdId NONE =
    WorldPlayerReviveRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldPlayerReviveRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldPlayerReviveRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldPlayerReviveRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorldPlayerReviveRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldPlayerReviveRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldPlayerReviveRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldPlayerReviveRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldPlayerReviveRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldPlayerReviveRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldPlayerReviveRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.WorldPlayerReviveRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinPlayerFailNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.JoinPlayerFailNotify) */ {
 public:
  JoinPlayerFailNotify();
  virtual ~JoinPlayerFailNotify();

  JoinPlayerFailNotify(const JoinPlayerFailNotify& from);

  inline JoinPlayerFailNotify& operator=(const JoinPlayerFailNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  JoinPlayerFailNotify(JoinPlayerFailNotify&& from) noexcept
    : JoinPlayerFailNotify() {
    *this = ::std::move(from);
  }

  inline JoinPlayerFailNotify& operator=(JoinPlayerFailNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinPlayerFailNotify& default_instance();

  static inline const JoinPlayerFailNotify* internal_default_instance() {
    return reinterpret_cast<const JoinPlayerFailNotify*>(
               &_JoinPlayerFailNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(JoinPlayerFailNotify* other);
  friend void swap(JoinPlayerFailNotify& a, JoinPlayerFailNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline JoinPlayerFailNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinPlayerFailNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinPlayerFailNotify& from);
  void MergeFrom(const JoinPlayerFailNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinPlayerFailNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef JoinPlayerFailNotify_CmdId CmdId;
  static const CmdId NONE =
    JoinPlayerFailNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    JoinPlayerFailNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    JoinPlayerFailNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    JoinPlayerFailNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return JoinPlayerFailNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    JoinPlayerFailNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    JoinPlayerFailNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    JoinPlayerFailNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return JoinPlayerFailNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return JoinPlayerFailNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return JoinPlayerFailNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.JoinPlayerFailNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SetSceneWeatherAreaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetSceneWeatherAreaReq) */ {
 public:
  SetSceneWeatherAreaReq();
  virtual ~SetSceneWeatherAreaReq();

  SetSceneWeatherAreaReq(const SetSceneWeatherAreaReq& from);

  inline SetSceneWeatherAreaReq& operator=(const SetSceneWeatherAreaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSceneWeatherAreaReq(SetSceneWeatherAreaReq&& from) noexcept
    : SetSceneWeatherAreaReq() {
    *this = ::std::move(from);
  }

  inline SetSceneWeatherAreaReq& operator=(SetSceneWeatherAreaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSceneWeatherAreaReq& default_instance();

  static inline const SetSceneWeatherAreaReq* internal_default_instance() {
    return reinterpret_cast<const SetSceneWeatherAreaReq*>(
               &_SetSceneWeatherAreaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(SetSceneWeatherAreaReq* other);
  friend void swap(SetSceneWeatherAreaReq& a, SetSceneWeatherAreaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSceneWeatherAreaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSceneWeatherAreaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSceneWeatherAreaReq& from);
  void MergeFrom(const SetSceneWeatherAreaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSceneWeatherAreaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef SetSceneWeatherAreaReq_CmdId CmdId;
  static const CmdId NONE =
    SetSceneWeatherAreaReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetSceneWeatherAreaReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetSceneWeatherAreaReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetSceneWeatherAreaReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetSceneWeatherAreaReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetSceneWeatherAreaReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetSceneWeatherAreaReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetSceneWeatherAreaReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetSceneWeatherAreaReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetSceneWeatherAreaReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetSceneWeatherAreaReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetSceneWeatherAreaReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, string> weather_value_map = 2;
  int weather_value_map_size() const;
  void clear_weather_value_map();
  static const int kWeatherValueMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
      weather_value_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
      mutable_weather_value_map();

  // uint32 weather_gadget_id = 1;
  void clear_weather_gadget_id();
  static const int kWeatherGadgetIdFieldNumber = 1;
  ::google::protobuf::uint32 weather_gadget_id() const;
  void set_weather_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetSceneWeatherAreaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SetSceneWeatherAreaReq_WeatherValueMapEntry : public ::google::protobuf::internal::MapEntry<SetSceneWeatherAreaReq_WeatherValueMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SetSceneWeatherAreaReq_WeatherValueMapEntry, 
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > SuperType;
    SetSceneWeatherAreaReq_WeatherValueMapEntry();
    SetSceneWeatherAreaReq_WeatherValueMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SetSceneWeatherAreaReq_WeatherValueMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SetSceneWeatherAreaReq_WeatherValueMapEntry,
      ::google::protobuf::uint32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > weather_value_map_;
  private:
  ::google::protobuf::uint32 weather_gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetSceneWeatherAreaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetSceneWeatherAreaRsp) */ {
 public:
  SetSceneWeatherAreaRsp();
  virtual ~SetSceneWeatherAreaRsp();

  SetSceneWeatherAreaRsp(const SetSceneWeatherAreaRsp& from);

  inline SetSceneWeatherAreaRsp& operator=(const SetSceneWeatherAreaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSceneWeatherAreaRsp(SetSceneWeatherAreaRsp&& from) noexcept
    : SetSceneWeatherAreaRsp() {
    *this = ::std::move(from);
  }

  inline SetSceneWeatherAreaRsp& operator=(SetSceneWeatherAreaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSceneWeatherAreaRsp& default_instance();

  static inline const SetSceneWeatherAreaRsp* internal_default_instance() {
    return reinterpret_cast<const SetSceneWeatherAreaRsp*>(
               &_SetSceneWeatherAreaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(SetSceneWeatherAreaRsp* other);
  friend void swap(SetSceneWeatherAreaRsp& a, SetSceneWeatherAreaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSceneWeatherAreaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSceneWeatherAreaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSceneWeatherAreaRsp& from);
  void MergeFrom(const SetSceneWeatherAreaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSceneWeatherAreaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetSceneWeatherAreaRsp_CmdId CmdId;
  static const CmdId NONE =
    SetSceneWeatherAreaRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetSceneWeatherAreaRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetSceneWeatherAreaRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetSceneWeatherAreaRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetSceneWeatherAreaRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetSceneWeatherAreaRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetSceneWeatherAreaRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetSceneWeatherAreaRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetSceneWeatherAreaRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetSceneWeatherAreaRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetSceneWeatherAreaRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetSceneWeatherAreaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGadgetLuaReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExecuteGadgetLuaReq) */ {
 public:
  ExecuteGadgetLuaReq();
  virtual ~ExecuteGadgetLuaReq();

  ExecuteGadgetLuaReq(const ExecuteGadgetLuaReq& from);

  inline ExecuteGadgetLuaReq& operator=(const ExecuteGadgetLuaReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGadgetLuaReq(ExecuteGadgetLuaReq&& from) noexcept
    : ExecuteGadgetLuaReq() {
    *this = ::std::move(from);
  }

  inline ExecuteGadgetLuaReq& operator=(ExecuteGadgetLuaReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGadgetLuaReq& default_instance();

  static inline const ExecuteGadgetLuaReq* internal_default_instance() {
    return reinterpret_cast<const ExecuteGadgetLuaReq*>(
               &_ExecuteGadgetLuaReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(ExecuteGadgetLuaReq* other);
  friend void swap(ExecuteGadgetLuaReq& a, ExecuteGadgetLuaReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGadgetLuaReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteGadgetLuaReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGadgetLuaReq& from);
  void MergeFrom(const ExecuteGadgetLuaReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGadgetLuaReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExecuteGadgetLuaReq_CmdId CmdId;
  static const CmdId NONE =
    ExecuteGadgetLuaReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ExecuteGadgetLuaReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ExecuteGadgetLuaReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ExecuteGadgetLuaReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ExecuteGadgetLuaReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ExecuteGadgetLuaReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ExecuteGadgetLuaReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ExecuteGadgetLuaReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ExecuteGadgetLuaReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ExecuteGadgetLuaReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ExecuteGadgetLuaReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ExecuteGadgetLuaReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 source_entity_id = 1;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // int32 param1 = 2;
  void clear_param1();
  static const int kParam1FieldNumber = 2;
  ::google::protobuf::int32 param1() const;
  void set_param1(::google::protobuf::int32 value);

  // int32 param2 = 3;
  void clear_param2();
  static const int kParam2FieldNumber = 3;
  ::google::protobuf::int32 param2() const;
  void set_param2(::google::protobuf::int32 value);

  // int32 param3 = 4;
  void clear_param3();
  static const int kParam3FieldNumber = 4;
  ::google::protobuf::int32 param3() const;
  void set_param3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ExecuteGadgetLuaReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::int32 param1_;
  ::google::protobuf::int32 param2_;
  ::google::protobuf::int32 param3_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecuteGadgetLuaRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExecuteGadgetLuaRsp) */ {
 public:
  ExecuteGadgetLuaRsp();
  virtual ~ExecuteGadgetLuaRsp();

  ExecuteGadgetLuaRsp(const ExecuteGadgetLuaRsp& from);

  inline ExecuteGadgetLuaRsp& operator=(const ExecuteGadgetLuaRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteGadgetLuaRsp(ExecuteGadgetLuaRsp&& from) noexcept
    : ExecuteGadgetLuaRsp() {
    *this = ::std::move(from);
  }

  inline ExecuteGadgetLuaRsp& operator=(ExecuteGadgetLuaRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteGadgetLuaRsp& default_instance();

  static inline const ExecuteGadgetLuaRsp* internal_default_instance() {
    return reinterpret_cast<const ExecuteGadgetLuaRsp*>(
               &_ExecuteGadgetLuaRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(ExecuteGadgetLuaRsp* other);
  friend void swap(ExecuteGadgetLuaRsp& a, ExecuteGadgetLuaRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteGadgetLuaRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteGadgetLuaRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteGadgetLuaRsp& from);
  void MergeFrom(const ExecuteGadgetLuaRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteGadgetLuaRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ExecuteGadgetLuaRsp_CmdId CmdId;
  static const CmdId NONE =
    ExecuteGadgetLuaRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ExecuteGadgetLuaRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ExecuteGadgetLuaRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ExecuteGadgetLuaRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ExecuteGadgetLuaRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ExecuteGadgetLuaRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ExecuteGadgetLuaRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ExecuteGadgetLuaRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ExecuteGadgetLuaRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ExecuteGadgetLuaRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ExecuteGadgetLuaRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ExecuteGadgetLuaRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CutSceneBeginNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CutSceneBeginNotify) */ {
 public:
  CutSceneBeginNotify();
  virtual ~CutSceneBeginNotify();

  CutSceneBeginNotify(const CutSceneBeginNotify& from);

  inline CutSceneBeginNotify& operator=(const CutSceneBeginNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CutSceneBeginNotify(CutSceneBeginNotify&& from) noexcept
    : CutSceneBeginNotify() {
    *this = ::std::move(from);
  }

  inline CutSceneBeginNotify& operator=(CutSceneBeginNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CutSceneBeginNotify& default_instance();

  static inline const CutSceneBeginNotify* internal_default_instance() {
    return reinterpret_cast<const CutSceneBeginNotify*>(
               &_CutSceneBeginNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(CutSceneBeginNotify* other);
  friend void swap(CutSceneBeginNotify& a, CutSceneBeginNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CutSceneBeginNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CutSceneBeginNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CutSceneBeginNotify& from);
  void MergeFrom(const CutSceneBeginNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CutSceneBeginNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CutSceneBeginNotify_CmdId CmdId;
  static const CmdId NONE =
    CutSceneBeginNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CutSceneBeginNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CutSceneBeginNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CutSceneBeginNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CutSceneBeginNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CutSceneBeginNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CutSceneBeginNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CutSceneBeginNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CutSceneBeginNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CutSceneBeginNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CutSceneBeginNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 cutscene_id = 1;
  void clear_cutscene_id();
  static const int kCutsceneIdFieldNumber = 1;
  ::google::protobuf::uint32 cutscene_id() const;
  void set_cutscene_id(::google::protobuf::uint32 value);

  // bool is_wait_others = 2;
  void clear_is_wait_others();
  static const int kIsWaitOthersFieldNumber = 2;
  bool is_wait_others() const;
  void set_is_wait_others(bool value);

  // @@protoc_insertion_point(class_scope:proto.CutSceneBeginNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cutscene_id_;
  bool is_wait_others_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CutSceneFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CutSceneFinishNotify) */ {
 public:
  CutSceneFinishNotify();
  virtual ~CutSceneFinishNotify();

  CutSceneFinishNotify(const CutSceneFinishNotify& from);

  inline CutSceneFinishNotify& operator=(const CutSceneFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CutSceneFinishNotify(CutSceneFinishNotify&& from) noexcept
    : CutSceneFinishNotify() {
    *this = ::std::move(from);
  }

  inline CutSceneFinishNotify& operator=(CutSceneFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CutSceneFinishNotify& default_instance();

  static inline const CutSceneFinishNotify* internal_default_instance() {
    return reinterpret_cast<const CutSceneFinishNotify*>(
               &_CutSceneFinishNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(CutSceneFinishNotify* other);
  friend void swap(CutSceneFinishNotify& a, CutSceneFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CutSceneFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CutSceneFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CutSceneFinishNotify& from);
  void MergeFrom(const CutSceneFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CutSceneFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CutSceneFinishNotify_CmdId CmdId;
  static const CmdId NONE =
    CutSceneFinishNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CutSceneFinishNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CutSceneFinishNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CutSceneFinishNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    CutSceneFinishNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return CutSceneFinishNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CutSceneFinishNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CutSceneFinishNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CutSceneFinishNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CutSceneFinishNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CutSceneFinishNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CutSceneFinishNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 cutscene_id = 1;
  void clear_cutscene_id();
  static const int kCutsceneIdFieldNumber = 1;
  ::google::protobuf::uint32 cutscene_id() const;
  void set_cutscene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CutSceneFinishNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cutscene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CutSceneEndNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CutSceneEndNotify) */ {
 public:
  CutSceneEndNotify();
  virtual ~CutSceneEndNotify();

  CutSceneEndNotify(const CutSceneEndNotify& from);

  inline CutSceneEndNotify& operator=(const CutSceneEndNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CutSceneEndNotify(CutSceneEndNotify&& from) noexcept
    : CutSceneEndNotify() {
    *this = ::std::move(from);
  }

  inline CutSceneEndNotify& operator=(CutSceneEndNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CutSceneEndNotify& default_instance();

  static inline const CutSceneEndNotify* internal_default_instance() {
    return reinterpret_cast<const CutSceneEndNotify*>(
               &_CutSceneEndNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(CutSceneEndNotify* other);
  friend void swap(CutSceneEndNotify& a, CutSceneEndNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CutSceneEndNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CutSceneEndNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CutSceneEndNotify& from);
  void MergeFrom(const CutSceneEndNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CutSceneEndNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CutSceneEndNotify_CmdId CmdId;
  static const CmdId NONE =
    CutSceneEndNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CutSceneEndNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CutSceneEndNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CutSceneEndNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CutSceneEndNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CutSceneEndNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CutSceneEndNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CutSceneEndNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CutSceneEndNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CutSceneEndNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CutSceneEndNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 cutscene_id = 2;
  void clear_cutscene_id();
  static const int kCutsceneIdFieldNumber = 2;
  ::google::protobuf::uint32 cutscene_id() const;
  void set_cutscene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CutSceneEndNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 cutscene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientScriptEventNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientScriptEventNotify) */ {
 public:
  ClientScriptEventNotify();
  virtual ~ClientScriptEventNotify();

  ClientScriptEventNotify(const ClientScriptEventNotify& from);

  inline ClientScriptEventNotify& operator=(const ClientScriptEventNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientScriptEventNotify(ClientScriptEventNotify&& from) noexcept
    : ClientScriptEventNotify() {
    *this = ::std::move(from);
  }

  inline ClientScriptEventNotify& operator=(ClientScriptEventNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientScriptEventNotify& default_instance();

  static inline const ClientScriptEventNotify* internal_default_instance() {
    return reinterpret_cast<const ClientScriptEventNotify*>(
               &_ClientScriptEventNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(ClientScriptEventNotify* other);
  friend void swap(ClientScriptEventNotify& a, ClientScriptEventNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientScriptEventNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientScriptEventNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientScriptEventNotify& from);
  void MergeFrom(const ClientScriptEventNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientScriptEventNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientScriptEventNotify_CmdId CmdId;
  static const CmdId NONE =
    ClientScriptEventNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientScriptEventNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientScriptEventNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientScriptEventNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ClientScriptEventNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ClientScriptEventNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientScriptEventNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientScriptEventNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientScriptEventNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientScriptEventNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientScriptEventNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientScriptEventNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 param_list = 4;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 4;
  ::google::protobuf::int32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::int32 value);
  void add_param_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_param_list();

  // uint32 event_type = 1;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::google::protobuf::uint32 event_type() const;
  void set_event_type(::google::protobuf::uint32 value);

  // uint32 source_entity_id = 2;
  void clear_source_entity_id();
  static const int kSourceEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 source_entity_id() const;
  void set_source_entity_id(::google::protobuf::uint32 value);

  // uint32 target_entity_id = 3;
  void clear_target_entity_id();
  static const int kTargetEntityIdFieldNumber = 3;
  ::google::protobuf::uint32 target_entity_id() const;
  void set_target_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientScriptEventNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  ::google::protobuf::uint32 event_type_;
  ::google::protobuf::uint32 source_entity_id_;
  ::google::protobuf::uint32 target_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityMoveInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityMoveInfo) */ {
 public:
  EntityMoveInfo();
  virtual ~EntityMoveInfo();

  EntityMoveInfo(const EntityMoveInfo& from);

  inline EntityMoveInfo& operator=(const EntityMoveInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityMoveInfo(EntityMoveInfo&& from) noexcept
    : EntityMoveInfo() {
    *this = ::std::move(from);
  }

  inline EntityMoveInfo& operator=(EntityMoveInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityMoveInfo& default_instance();

  static inline const EntityMoveInfo* internal_default_instance() {
    return reinterpret_cast<const EntityMoveInfo*>(
               &_EntityMoveInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(EntityMoveInfo* other);
  friend void swap(EntityMoveInfo& a, EntityMoveInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityMoveInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityMoveInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityMoveInfo& from);
  void MergeFrom(const EntityMoveInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityMoveInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo motion_info = 2;
  bool has_motion_info() const;
  void clear_motion_info();
  static const int kMotionInfoFieldNumber = 2;
  const ::proto::MotionInfo& motion_info() const;
  ::proto::MotionInfo* mutable_motion_info();
  ::proto::MotionInfo* release_motion_info();
  void set_allocated_motion_info(::proto::MotionInfo* motion_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 3;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 3;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 reliable_seq = 4;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 4;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityMoveInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* motion_info_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 reliable_seq_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntitiesMovesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntitiesMovesReq) */ {
 public:
  SceneEntitiesMovesReq();
  virtual ~SceneEntitiesMovesReq();

  SceneEntitiesMovesReq(const SceneEntitiesMovesReq& from);

  inline SceneEntitiesMovesReq& operator=(const SceneEntitiesMovesReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntitiesMovesReq(SceneEntitiesMovesReq&& from) noexcept
    : SceneEntitiesMovesReq() {
    *this = ::std::move(from);
  }

  inline SceneEntitiesMovesReq& operator=(SceneEntitiesMovesReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntitiesMovesReq& default_instance();

  static inline const SceneEntitiesMovesReq* internal_default_instance() {
    return reinterpret_cast<const SceneEntitiesMovesReq*>(
               &_SceneEntitiesMovesReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(SceneEntitiesMovesReq* other);
  friend void swap(SceneEntitiesMovesReq& a, SceneEntitiesMovesReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntitiesMovesReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntitiesMovesReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntitiesMovesReq& from);
  void MergeFrom(const SceneEntitiesMovesReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntitiesMovesReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntitiesMovesReq_CmdId CmdId;
  static const CmdId NONE =
    SceneEntitiesMovesReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntitiesMovesReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntitiesMovesReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntitiesMovesReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneEntitiesMovesReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntitiesMovesReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntitiesMovesReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntitiesMovesReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntitiesMovesReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntitiesMovesReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntitiesMovesReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntitiesMovesReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
  int entity_move_info_list_size() const;
  void clear_entity_move_info_list();
  static const int kEntityMoveInfoListFieldNumber = 1;
  const ::proto::EntityMoveInfo& entity_move_info_list(int index) const;
  ::proto::EntityMoveInfo* mutable_entity_move_info_list(int index);
  ::proto::EntityMoveInfo* add_entity_move_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
      mutable_entity_move_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
      entity_move_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.SceneEntitiesMovesReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo > entity_move_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityMoveFailInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityMoveFailInfo) */ {
 public:
  EntityMoveFailInfo();
  virtual ~EntityMoveFailInfo();

  EntityMoveFailInfo(const EntityMoveFailInfo& from);

  inline EntityMoveFailInfo& operator=(const EntityMoveFailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityMoveFailInfo(EntityMoveFailInfo&& from) noexcept
    : EntityMoveFailInfo() {
    *this = ::std::move(from);
  }

  inline EntityMoveFailInfo& operator=(EntityMoveFailInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityMoveFailInfo& default_instance();

  static inline const EntityMoveFailInfo* internal_default_instance() {
    return reinterpret_cast<const EntityMoveFailInfo*>(
               &_EntityMoveFailInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(EntityMoveFailInfo* other);
  friend void swap(EntityMoveFailInfo& a, EntityMoveFailInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityMoveFailInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityMoveFailInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityMoveFailInfo& from);
  void MergeFrom(const EntityMoveFailInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityMoveFailInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MotionInfo fail_motion = 3;
  bool has_fail_motion() const;
  void clear_fail_motion();
  static const int kFailMotionFieldNumber = 3;
  const ::proto::MotionInfo& fail_motion() const;
  ::proto::MotionInfo* mutable_fail_motion();
  ::proto::MotionInfo* release_fail_motion();
  void set_allocated_fail_motion(::proto::MotionInfo* fail_motion);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 entity_id = 2;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 4;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 4;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 reliable_seq = 5;
  void clear_reliable_seq();
  static const int kReliableSeqFieldNumber = 5;
  ::google::protobuf::uint32 reliable_seq() const;
  void set_reliable_seq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityMoveFailInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MotionInfo* fail_motion_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 reliable_seq_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntitiesMovesRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntitiesMovesRsp) */ {
 public:
  SceneEntitiesMovesRsp();
  virtual ~SceneEntitiesMovesRsp();

  SceneEntitiesMovesRsp(const SceneEntitiesMovesRsp& from);

  inline SceneEntitiesMovesRsp& operator=(const SceneEntitiesMovesRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntitiesMovesRsp(SceneEntitiesMovesRsp&& from) noexcept
    : SceneEntitiesMovesRsp() {
    *this = ::std::move(from);
  }

  inline SceneEntitiesMovesRsp& operator=(SceneEntitiesMovesRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntitiesMovesRsp& default_instance();

  static inline const SceneEntitiesMovesRsp* internal_default_instance() {
    return reinterpret_cast<const SceneEntitiesMovesRsp*>(
               &_SceneEntitiesMovesRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(SceneEntitiesMovesRsp* other);
  friend void swap(SceneEntitiesMovesRsp& a, SceneEntitiesMovesRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntitiesMovesRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntitiesMovesRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntitiesMovesRsp& from);
  void MergeFrom(const SceneEntitiesMovesRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntitiesMovesRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntitiesMovesRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneEntitiesMovesRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntitiesMovesRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntitiesMovesRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntitiesMovesRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntitiesMovesRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntitiesMovesRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntitiesMovesRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntitiesMovesRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntitiesMovesRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntitiesMovesRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntitiesMovesRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 1;
  int entity_move_fail_info_list_size() const;
  void clear_entity_move_fail_info_list();
  static const int kEntityMoveFailInfoListFieldNumber = 1;
  const ::proto::EntityMoveFailInfo& entity_move_fail_info_list(int index) const;
  ::proto::EntityMoveFailInfo* mutable_entity_move_fail_info_list(int index);
  ::proto::EntityMoveFailInfo* add_entity_move_fail_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >*
      mutable_entity_move_fail_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >&
      entity_move_fail_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.SceneEntitiesMovesRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo > entity_move_fail_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEntitiesMoveCombineNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEntitiesMoveCombineNotify) */ {
 public:
  SceneEntitiesMoveCombineNotify();
  virtual ~SceneEntitiesMoveCombineNotify();

  SceneEntitiesMoveCombineNotify(const SceneEntitiesMoveCombineNotify& from);

  inline SceneEntitiesMoveCombineNotify& operator=(const SceneEntitiesMoveCombineNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEntitiesMoveCombineNotify(SceneEntitiesMoveCombineNotify&& from) noexcept
    : SceneEntitiesMoveCombineNotify() {
    *this = ::std::move(from);
  }

  inline SceneEntitiesMoveCombineNotify& operator=(SceneEntitiesMoveCombineNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEntitiesMoveCombineNotify& default_instance();

  static inline const SceneEntitiesMoveCombineNotify* internal_default_instance() {
    return reinterpret_cast<const SceneEntitiesMoveCombineNotify*>(
               &_SceneEntitiesMoveCombineNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(SceneEntitiesMoveCombineNotify* other);
  friend void swap(SceneEntitiesMoveCombineNotify& a, SceneEntitiesMoveCombineNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEntitiesMoveCombineNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEntitiesMoveCombineNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEntitiesMoveCombineNotify& from);
  void MergeFrom(const SceneEntitiesMoveCombineNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEntitiesMoveCombineNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneEntitiesMoveCombineNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneEntitiesMoveCombineNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneEntitiesMoveCombineNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneEntitiesMoveCombineNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneEntitiesMoveCombineNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneEntitiesMoveCombineNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneEntitiesMoveCombineNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneEntitiesMoveCombineNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneEntitiesMoveCombineNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneEntitiesMoveCombineNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneEntitiesMoveCombineNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneEntitiesMoveCombineNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
  int entity_move_info_list_size() const;
  void clear_entity_move_info_list();
  static const int kEntityMoveInfoListFieldNumber = 1;
  const ::proto::EntityMoveInfo& entity_move_info_list(int index) const;
  ::proto::EntityMoveInfo* mutable_entity_move_info_list(int index);
  ::proto::EntityMoveInfo* add_entity_move_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
      mutable_entity_move_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
      entity_move_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.SceneEntitiesMoveCombineNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo > entity_move_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockTransPointReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockTransPointReq) */ {
 public:
  UnlockTransPointReq();
  virtual ~UnlockTransPointReq();

  UnlockTransPointReq(const UnlockTransPointReq& from);

  inline UnlockTransPointReq& operator=(const UnlockTransPointReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockTransPointReq(UnlockTransPointReq&& from) noexcept
    : UnlockTransPointReq() {
    *this = ::std::move(from);
  }

  inline UnlockTransPointReq& operator=(UnlockTransPointReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockTransPointReq& default_instance();

  static inline const UnlockTransPointReq* internal_default_instance() {
    return reinterpret_cast<const UnlockTransPointReq*>(
               &_UnlockTransPointReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(UnlockTransPointReq* other);
  friend void swap(UnlockTransPointReq& a, UnlockTransPointReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockTransPointReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockTransPointReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockTransPointReq& from);
  void MergeFrom(const UnlockTransPointReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockTransPointReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UnlockTransPointReq_CmdId CmdId;
  static const CmdId NONE =
    UnlockTransPointReq_CmdId_NONE;
  static const CmdId CMD_ID =
    UnlockTransPointReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UnlockTransPointReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UnlockTransPointReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    UnlockTransPointReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return UnlockTransPointReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UnlockTransPointReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UnlockTransPointReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UnlockTransPointReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UnlockTransPointReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UnlockTransPointReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UnlockTransPointReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 point_id = 2;
  void clear_point_id();
  static const int kPointIdFieldNumber = 2;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockTransPointReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 point_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockTransPointRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockTransPointRsp) */ {
 public:
  UnlockTransPointRsp();
  virtual ~UnlockTransPointRsp();

  UnlockTransPointRsp(const UnlockTransPointRsp& from);

  inline UnlockTransPointRsp& operator=(const UnlockTransPointRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockTransPointRsp(UnlockTransPointRsp&& from) noexcept
    : UnlockTransPointRsp() {
    *this = ::std::move(from);
  }

  inline UnlockTransPointRsp& operator=(UnlockTransPointRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockTransPointRsp& default_instance();

  static inline const UnlockTransPointRsp* internal_default_instance() {
    return reinterpret_cast<const UnlockTransPointRsp*>(
               &_UnlockTransPointRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(UnlockTransPointRsp* other);
  friend void swap(UnlockTransPointRsp& a, UnlockTransPointRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockTransPointRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockTransPointRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockTransPointRsp& from);
  void MergeFrom(const UnlockTransPointRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockTransPointRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UnlockTransPointRsp_CmdId CmdId;
  static const CmdId NONE =
    UnlockTransPointRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    UnlockTransPointRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UnlockTransPointRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UnlockTransPointRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return UnlockTransPointRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UnlockTransPointRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UnlockTransPointRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UnlockTransPointRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UnlockTransPointRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UnlockTransPointRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UnlockTransPointRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockTransPointRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformRouteStateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformRouteStateNotify) */ {
 public:
  PlatformRouteStateNotify();
  virtual ~PlatformRouteStateNotify();

  PlatformRouteStateNotify(const PlatformRouteStateNotify& from);

  inline PlatformRouteStateNotify& operator=(const PlatformRouteStateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformRouteStateNotify(PlatformRouteStateNotify&& from) noexcept
    : PlatformRouteStateNotify() {
    *this = ::std::move(from);
  }

  inline PlatformRouteStateNotify& operator=(PlatformRouteStateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformRouteStateNotify& default_instance();

  static inline const PlatformRouteStateNotify* internal_default_instance() {
    return reinterpret_cast<const PlatformRouteStateNotify*>(
               &_PlatformRouteStateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(PlatformRouteStateNotify* other);
  friend void swap(PlatformRouteStateNotify& a, PlatformRouteStateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformRouteStateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformRouteStateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformRouteStateNotify& from);
  void MergeFrom(const PlatformRouteStateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformRouteStateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlatformRouteStateNotify_CmdId CmdId;
  static const CmdId NONE =
    PlatformRouteStateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlatformRouteStateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlatformRouteStateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlatformRouteStateNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlatformRouteStateNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlatformRouteStateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlatformRouteStateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlatformRouteStateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlatformRouteStateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlatformRouteStateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlatformRouteStateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlatformRouteStateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // .proto.Vector rot = 4;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 4;
  const ::proto::Vector& rot() const;
  ::proto::Vector* mutable_rot();
  ::proto::Vector* release_rot();
  void set_allocated_rot(::proto::Vector* rot);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 scene_time = 2;
  void clear_scene_time();
  static const int kSceneTimeFieldNumber = 2;
  ::google::protobuf::uint32 scene_time() const;
  void set_scene_time(::google::protobuf::uint32 value);

  // uint32 route_id = 5;
  void clear_route_id();
  static const int kRouteIdFieldNumber = 5;
  ::google::protobuf::uint32 route_id() const;
  void set_route_id(::google::protobuf::uint32 value);

  // bool is_started = 6;
  void clear_is_started();
  static const int kIsStartedFieldNumber = 6;
  bool is_started() const;
  void set_is_started(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlatformRouteStateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::proto::Vector* rot_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 scene_time_;
  ::google::protobuf::uint32 route_id_;
  bool is_started_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneWeatherForcastReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneWeatherForcastReq) */ {
 public:
  SceneWeatherForcastReq();
  virtual ~SceneWeatherForcastReq();

  SceneWeatherForcastReq(const SceneWeatherForcastReq& from);

  inline SceneWeatherForcastReq& operator=(const SceneWeatherForcastReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneWeatherForcastReq(SceneWeatherForcastReq&& from) noexcept
    : SceneWeatherForcastReq() {
    *this = ::std::move(from);
  }

  inline SceneWeatherForcastReq& operator=(SceneWeatherForcastReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneWeatherForcastReq& default_instance();

  static inline const SceneWeatherForcastReq* internal_default_instance() {
    return reinterpret_cast<const SceneWeatherForcastReq*>(
               &_SceneWeatherForcastReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(SceneWeatherForcastReq* other);
  friend void swap(SceneWeatherForcastReq& a, SceneWeatherForcastReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneWeatherForcastReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneWeatherForcastReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneWeatherForcastReq& from);
  void MergeFrom(const SceneWeatherForcastReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneWeatherForcastReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneWeatherForcastReq_CmdId CmdId;
  static const CmdId NONE =
    SceneWeatherForcastReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneWeatherForcastReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneWeatherForcastReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneWeatherForcastReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SceneWeatherForcastReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SceneWeatherForcastReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneWeatherForcastReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneWeatherForcastReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneWeatherForcastReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneWeatherForcastReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneWeatherForcastReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneWeatherForcastReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 weather_area_id = 1;
  void clear_weather_area_id();
  static const int kWeatherAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 weather_area_id() const;
  void set_weather_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneWeatherForcastReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 weather_area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneWeatherForcastRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneWeatherForcastRsp) */ {
 public:
  SceneWeatherForcastRsp();
  virtual ~SceneWeatherForcastRsp();

  SceneWeatherForcastRsp(const SceneWeatherForcastRsp& from);

  inline SceneWeatherForcastRsp& operator=(const SceneWeatherForcastRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneWeatherForcastRsp(SceneWeatherForcastRsp&& from) noexcept
    : SceneWeatherForcastRsp() {
    *this = ::std::move(from);
  }

  inline SceneWeatherForcastRsp& operator=(SceneWeatherForcastRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneWeatherForcastRsp& default_instance();

  static inline const SceneWeatherForcastRsp* internal_default_instance() {
    return reinterpret_cast<const SceneWeatherForcastRsp*>(
               &_SceneWeatherForcastRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(SceneWeatherForcastRsp* other);
  friend void swap(SceneWeatherForcastRsp& a, SceneWeatherForcastRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneWeatherForcastRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneWeatherForcastRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneWeatherForcastRsp& from);
  void MergeFrom(const SceneWeatherForcastRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneWeatherForcastRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneWeatherForcastRsp_CmdId CmdId;
  static const CmdId NONE =
    SceneWeatherForcastRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneWeatherForcastRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneWeatherForcastRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneWeatherForcastRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneWeatherForcastRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneWeatherForcastRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneWeatherForcastRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneWeatherForcastRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneWeatherForcastRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneWeatherForcastRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneWeatherForcastRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 forcast_climate_list = 3;
  int forcast_climate_list_size() const;
  void clear_forcast_climate_list();
  static const int kForcastClimateListFieldNumber = 3;
  ::google::protobuf::uint32 forcast_climate_list(int index) const;
  void set_forcast_climate_list(int index, ::google::protobuf::uint32 value);
  void add_forcast_climate_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      forcast_climate_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_forcast_climate_list();

  // uint64 next_climate_time = 2;
  void clear_next_climate_time();
  static const int kNextClimateTimeFieldNumber = 2;
  ::google::protobuf::uint64 next_climate_time() const;
  void set_next_climate_time(::google::protobuf::uint64 value);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneWeatherForcastRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > forcast_climate_list_;
  mutable int _forcast_climate_list_cached_byte_size_;
  ::google::protobuf::uint64 next_climate_time_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkMapReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkMapReq) */ {
 public:
  MarkMapReq();
  virtual ~MarkMapReq();

  MarkMapReq(const MarkMapReq& from);

  inline MarkMapReq& operator=(const MarkMapReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkMapReq(MarkMapReq&& from) noexcept
    : MarkMapReq() {
    *this = ::std::move(from);
  }

  inline MarkMapReq& operator=(MarkMapReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkMapReq& default_instance();

  static inline const MarkMapReq* internal_default_instance() {
    return reinterpret_cast<const MarkMapReq*>(
               &_MarkMapReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(MarkMapReq* other);
  friend void swap(MarkMapReq& a, MarkMapReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkMapReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkMapReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkMapReq& from);
  void MergeFrom(const MarkMapReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkMapReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MarkMapReq_CmdId CmdId;
  static const CmdId NONE =
    MarkMapReq_CmdId_NONE;
  static const CmdId CMD_ID =
    MarkMapReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MarkMapReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MarkMapReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    MarkMapReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return MarkMapReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MarkMapReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MarkMapReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MarkMapReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MarkMapReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MarkMapReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MarkMapReq_CmdId_Parse(name, value);
  }

  typedef MarkMapReq_Operation Operation;
  static const Operation ADD =
    MarkMapReq_Operation_ADD;
  static const Operation MOD =
    MarkMapReq_Operation_MOD;
  static const Operation DEL =
    MarkMapReq_Operation_DEL;
  static const Operation GET =
    MarkMapReq_Operation_GET;
  static inline bool Operation_IsValid(int value) {
    return MarkMapReq_Operation_IsValid(value);
  }
  static const Operation Operation_MIN =
    MarkMapReq_Operation_Operation_MIN;
  static const Operation Operation_MAX =
    MarkMapReq_Operation_Operation_MAX;
  static const int Operation_ARRAYSIZE =
    MarkMapReq_Operation_Operation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Operation_descriptor() {
    return MarkMapReq_Operation_descriptor();
  }
  static inline const ::std::string& Operation_Name(Operation value) {
    return MarkMapReq_Operation_Name(value);
  }
  static inline bool Operation_Parse(const ::std::string& name,
      Operation* value) {
    return MarkMapReq_Operation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.MapMarkPoint old = 2;
  bool has_old() const;
  void clear_old();
  static const int kOldFieldNumber = 2;
  const ::proto::MapMarkPoint& old() const;
  ::proto::MapMarkPoint* mutable_old();
  ::proto::MapMarkPoint* release_old();
  void set_allocated_old(::proto::MapMarkPoint* old);

  // .proto.MapMarkPoint mark = 3;
  bool has_mark() const;
  void clear_mark();
  static const int kMarkFieldNumber = 3;
  const ::proto::MapMarkPoint& mark() const;
  ::proto::MapMarkPoint* mutable_mark();
  ::proto::MapMarkPoint* release_mark();
  void set_allocated_mark(::proto::MapMarkPoint* mark);

  // .proto.MarkMapReq.Operation op = 1;
  void clear_op();
  static const int kOpFieldNumber = 1;
  ::proto::MarkMapReq_Operation op() const;
  void set_op(::proto::MarkMapReq_Operation value);

  // @@protoc_insertion_point(class_scope:proto.MarkMapReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MapMarkPoint* old_;
  ::proto::MapMarkPoint* mark_;
  int op_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkMapRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkMapRsp) */ {
 public:
  MarkMapRsp();
  virtual ~MarkMapRsp();

  MarkMapRsp(const MarkMapRsp& from);

  inline MarkMapRsp& operator=(const MarkMapRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkMapRsp(MarkMapRsp&& from) noexcept
    : MarkMapRsp() {
    *this = ::std::move(from);
  }

  inline MarkMapRsp& operator=(MarkMapRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkMapRsp& default_instance();

  static inline const MarkMapRsp* internal_default_instance() {
    return reinterpret_cast<const MarkMapRsp*>(
               &_MarkMapRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(MarkMapRsp* other);
  friend void swap(MarkMapRsp& a, MarkMapRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkMapRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkMapRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkMapRsp& from);
  void MergeFrom(const MarkMapRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkMapRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MarkMapRsp_CmdId CmdId;
  static const CmdId NONE =
    MarkMapRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    MarkMapRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    MarkMapRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    MarkMapRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return MarkMapRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    MarkMapRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    MarkMapRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    MarkMapRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return MarkMapRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return MarkMapRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return MarkMapRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.MapMarkPoint mark_list = 2;
  int mark_list_size() const;
  void clear_mark_list();
  static const int kMarkListFieldNumber = 2;
  const ::proto::MapMarkPoint& mark_list(int index) const;
  ::proto::MapMarkPoint* mutable_mark_list(int index);
  ::proto::MapMarkPoint* add_mark_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
      mutable_mark_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
      mark_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.MarkMapRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint > mark_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllMarkPointNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AllMarkPointNotify) */ {
 public:
  AllMarkPointNotify();
  virtual ~AllMarkPointNotify();

  AllMarkPointNotify(const AllMarkPointNotify& from);

  inline AllMarkPointNotify& operator=(const AllMarkPointNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AllMarkPointNotify(AllMarkPointNotify&& from) noexcept
    : AllMarkPointNotify() {
    *this = ::std::move(from);
  }

  inline AllMarkPointNotify& operator=(AllMarkPointNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AllMarkPointNotify& default_instance();

  static inline const AllMarkPointNotify* internal_default_instance() {
    return reinterpret_cast<const AllMarkPointNotify*>(
               &_AllMarkPointNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(AllMarkPointNotify* other);
  friend void swap(AllMarkPointNotify& a, AllMarkPointNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AllMarkPointNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AllMarkPointNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllMarkPointNotify& from);
  void MergeFrom(const AllMarkPointNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllMarkPointNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AllMarkPointNotify_CmdId CmdId;
  static const CmdId NONE =
    AllMarkPointNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AllMarkPointNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AllMarkPointNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AllMarkPointNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AllMarkPointNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AllMarkPointNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AllMarkPointNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AllMarkPointNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AllMarkPointNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AllMarkPointNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AllMarkPointNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.MapMarkPoint mark_list = 1;
  int mark_list_size() const;
  void clear_mark_list();
  static const int kMarkListFieldNumber = 1;
  const ::proto::MapMarkPoint& mark_list(int index) const;
  ::proto::MapMarkPoint* mutable_mark_list(int index);
  ::proto::MapMarkPoint* add_mark_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
      mutable_mark_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
      mark_list() const;

  // @@protoc_insertion_point(class_scope:proto.AllMarkPointNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint > mark_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class WorldDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldDataNotify) */ {
 public:
  WorldDataNotify();
  virtual ~WorldDataNotify();

  WorldDataNotify(const WorldDataNotify& from);

  inline WorldDataNotify& operator=(const WorldDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldDataNotify(WorldDataNotify&& from) noexcept
    : WorldDataNotify() {
    *this = ::std::move(from);
  }

  inline WorldDataNotify& operator=(WorldDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldDataNotify& default_instance();

  static inline const WorldDataNotify* internal_default_instance() {
    return reinterpret_cast<const WorldDataNotify*>(
               &_WorldDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(WorldDataNotify* other);
  friend void swap(WorldDataNotify& a, WorldDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldDataNotify& from);
  void MergeFrom(const WorldDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef WorldDataNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldDataNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    WorldDataNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return WorldDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldDataNotify_CmdId_Parse(name, value);
  }

  typedef WorldDataNotify_DataType DataType;
  static const DataType DATA_NONE =
    WorldDataNotify_DataType_DATA_NONE;
  static const DataType WORLD_LEVEL =
    WorldDataNotify_DataType_WORLD_LEVEL;
  static inline bool DataType_IsValid(int value) {
    return WorldDataNotify_DataType_IsValid(value);
  }
  static const DataType DataType_MIN =
    WorldDataNotify_DataType_DataType_MIN;
  static const DataType DataType_MAX =
    WorldDataNotify_DataType_DataType_MAX;
  static const int DataType_ARRAYSIZE =
    WorldDataNotify_DataType_DataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataType_descriptor() {
    return WorldDataNotify_DataType_descriptor();
  }
  static inline const ::std::string& DataType_Name(DataType value) {
    return WorldDataNotify_DataType_Name(value);
  }
  static inline bool DataType_Parse(const ::std::string& name,
      DataType* value) {
    return WorldDataNotify_DataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> world_prop_map = 1;
  int world_prop_map_size() const;
  void clear_world_prop_map();
  static const int kWorldPropMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      world_prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_world_prop_map();

  // @@protoc_insertion_point(class_scope:proto.WorldDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class WorldDataNotify_WorldPropMapEntry : public ::google::protobuf::internal::MapEntry<WorldDataNotify_WorldPropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<WorldDataNotify_WorldPropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    WorldDataNotify_WorldPropMapEntry();
    WorldDataNotify_WorldPropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const WorldDataNotify_WorldPropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_WorldDataNotify_WorldPropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      WorldDataNotify_WorldPropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > world_prop_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityMoveRoomNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EntityMoveRoomNotify) */ {
 public:
  EntityMoveRoomNotify();
  virtual ~EntityMoveRoomNotify();

  EntityMoveRoomNotify(const EntityMoveRoomNotify& from);

  inline EntityMoveRoomNotify& operator=(const EntityMoveRoomNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EntityMoveRoomNotify(EntityMoveRoomNotify&& from) noexcept
    : EntityMoveRoomNotify() {
    *this = ::std::move(from);
  }

  inline EntityMoveRoomNotify& operator=(EntityMoveRoomNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityMoveRoomNotify& default_instance();

  static inline const EntityMoveRoomNotify* internal_default_instance() {
    return reinterpret_cast<const EntityMoveRoomNotify*>(
               &_EntityMoveRoomNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(EntityMoveRoomNotify* other);
  friend void swap(EntityMoveRoomNotify& a, EntityMoveRoomNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EntityMoveRoomNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityMoveRoomNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityMoveRoomNotify& from);
  void MergeFrom(const EntityMoveRoomNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityMoveRoomNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EntityMoveRoomNotify_CmdId CmdId;
  static const CmdId NONE =
    EntityMoveRoomNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EntityMoveRoomNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EntityMoveRoomNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EntityMoveRoomNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EntityMoveRoomNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EntityMoveRoomNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EntityMoveRoomNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EntityMoveRoomNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EntityMoveRoomNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EntityMoveRoomNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EntityMoveRoomNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EntityMoveRoomNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // uint32 dest_room_id = 2;
  void clear_dest_room_id();
  static const int kDestRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 dest_room_id() const;
  void set_dest_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EntityMoveRoomNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 entity_id_;
  ::google::protobuf::uint32 dest_room_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldPlayerInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldPlayerInfoNotify) */ {
 public:
  WorldPlayerInfoNotify();
  virtual ~WorldPlayerInfoNotify();

  WorldPlayerInfoNotify(const WorldPlayerInfoNotify& from);

  inline WorldPlayerInfoNotify& operator=(const WorldPlayerInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldPlayerInfoNotify(WorldPlayerInfoNotify&& from) noexcept
    : WorldPlayerInfoNotify() {
    *this = ::std::move(from);
  }

  inline WorldPlayerInfoNotify& operator=(WorldPlayerInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldPlayerInfoNotify& default_instance();

  static inline const WorldPlayerInfoNotify* internal_default_instance() {
    return reinterpret_cast<const WorldPlayerInfoNotify*>(
               &_WorldPlayerInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(WorldPlayerInfoNotify* other);
  friend void swap(WorldPlayerInfoNotify& a, WorldPlayerInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldPlayerInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldPlayerInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldPlayerInfoNotify& from);
  void MergeFrom(const WorldPlayerInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldPlayerInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldPlayerInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldPlayerInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldPlayerInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldPlayerInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldPlayerInfoNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    WorldPlayerInfoNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return WorldPlayerInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldPlayerInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldPlayerInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldPlayerInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldPlayerInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldPlayerInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldPlayerInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.OnlinePlayerInfo player_info_list = 1;
  int player_info_list_size() const;
  void clear_player_info_list();
  static const int kPlayerInfoListFieldNumber = 1;
  const ::proto::OnlinePlayerInfo& player_info_list(int index) const;
  ::proto::OnlinePlayerInfo* mutable_player_info_list(int index);
  ::proto::OnlinePlayerInfo* add_player_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >*
      mutable_player_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >&
      player_info_list() const;

  // repeated uint32 player_uid_list = 2;
  int player_uid_list_size() const;
  void clear_player_uid_list();
  static const int kPlayerUidListFieldNumber = 2;
  ::google::protobuf::uint32 player_uid_list(int index) const;
  void set_player_uid_list(int index, ::google::protobuf::uint32 value);
  void add_player_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      player_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_player_uid_list();

  // @@protoc_insertion_point(class_scope:proto.WorldPlayerInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo > player_info_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > player_uid_list_;
  mutable int _player_uid_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PostEnterSceneReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PostEnterSceneReq) */ {
 public:
  PostEnterSceneReq();
  virtual ~PostEnterSceneReq();

  PostEnterSceneReq(const PostEnterSceneReq& from);

  inline PostEnterSceneReq& operator=(const PostEnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PostEnterSceneReq(PostEnterSceneReq&& from) noexcept
    : PostEnterSceneReq() {
    *this = ::std::move(from);
  }

  inline PostEnterSceneReq& operator=(PostEnterSceneReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostEnterSceneReq& default_instance();

  static inline const PostEnterSceneReq* internal_default_instance() {
    return reinterpret_cast<const PostEnterSceneReq*>(
               &_PostEnterSceneReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(PostEnterSceneReq* other);
  friend void swap(PostEnterSceneReq& a, PostEnterSceneReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PostEnterSceneReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PostEnterSceneReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PostEnterSceneReq& from);
  void MergeFrom(const PostEnterSceneReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PostEnterSceneReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PostEnterSceneReq_CmdId CmdId;
  static const CmdId NONE =
    PostEnterSceneReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PostEnterSceneReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PostEnterSceneReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PostEnterSceneReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PostEnterSceneReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PostEnterSceneReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PostEnterSceneReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PostEnterSceneReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PostEnterSceneReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PostEnterSceneReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PostEnterSceneReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PostEnterSceneReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 enter_scene_token = 1;
  void clear_enter_scene_token();
  static const int kEnterSceneTokenFieldNumber = 1;
  ::google::protobuf::uint32 enter_scene_token() const;
  void set_enter_scene_token(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PostEnterSceneReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 enter_scene_token_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PostEnterSceneRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PostEnterSceneRsp) */ {
 public:
  PostEnterSceneRsp();
  virtual ~PostEnterSceneRsp();

  PostEnterSceneRsp(const PostEnterSceneRsp& from);

  inline PostEnterSceneRsp& operator=(const PostEnterSceneRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PostEnterSceneRsp(PostEnterSceneRsp&& from) noexcept
    : PostEnterSceneRsp() {
    *this = ::std::move(from);
  }

  inline PostEnterSceneRsp& operator=(PostEnterSceneRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PostEnterSceneRsp& default_instance();

  static inline const PostEnterSceneRsp* internal_default_instance() {
    return reinterpret_cast<const PostEnterSceneRsp*>(
               &_PostEnterSceneRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(PostEnterSceneRsp* other);
  friend void swap(PostEnterSceneRsp& a, PostEnterSceneRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PostEnterSceneRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PostEnterSceneRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PostEnterSceneRsp& from);
  void MergeFrom(const PostEnterSceneRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PostEnterSceneRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PostEnterSceneRsp_CmdId CmdId;
  static const CmdId NONE =
    PostEnterSceneRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PostEnterSceneRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PostEnterSceneRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PostEnterSceneRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PostEnterSceneRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PostEnterSceneRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PostEnterSceneRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PostEnterSceneRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PostEnterSceneRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PostEnterSceneRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PostEnterSceneRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PostEnterSceneRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatInfo_SystemHint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatInfo.SystemHint) */ {
 public:
  ChatInfo_SystemHint();
  virtual ~ChatInfo_SystemHint();

  ChatInfo_SystemHint(const ChatInfo_SystemHint& from);

  inline ChatInfo_SystemHint& operator=(const ChatInfo_SystemHint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatInfo_SystemHint(ChatInfo_SystemHint&& from) noexcept
    : ChatInfo_SystemHint() {
    *this = ::std::move(from);
  }

  inline ChatInfo_SystemHint& operator=(ChatInfo_SystemHint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatInfo_SystemHint& default_instance();

  static inline const ChatInfo_SystemHint* internal_default_instance() {
    return reinterpret_cast<const ChatInfo_SystemHint*>(
               &_ChatInfo_SystemHint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(ChatInfo_SystemHint* other);
  friend void swap(ChatInfo_SystemHint& a, ChatInfo_SystemHint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatInfo_SystemHint* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatInfo_SystemHint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatInfo_SystemHint& from);
  void MergeFrom(const ChatInfo_SystemHint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatInfo_SystemHint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChatInfo.SystemHint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatInfo) */ {
 public:
  ChatInfo();
  virtual ~ChatInfo();

  ChatInfo(const ChatInfo& from);

  inline ChatInfo& operator=(const ChatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatInfo(ChatInfo&& from) noexcept
    : ChatInfo() {
    *this = ::std::move(from);
  }

  inline ChatInfo& operator=(ChatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatInfo& default_instance();

  enum ContentCase {
    kText = 3,
    kIcon = 4,
    kSystemHint = 5,
    CONTENT_NOT_SET = 0,
  };

  static inline const ChatInfo* internal_default_instance() {
    return reinterpret_cast<const ChatInfo*>(
               &_ChatInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(ChatInfo* other);
  friend void swap(ChatInfo& a, ChatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatInfo& from);
  void MergeFrom(const ChatInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChatInfo_SystemHint SystemHint;

  typedef ChatInfo_SystemHintType SystemHintType;
  static const SystemHintType CHAT_NONE =
    ChatInfo_SystemHintType_CHAT_NONE;
  static const SystemHintType CHAT_ENTER_WORLD =
    ChatInfo_SystemHintType_CHAT_ENTER_WORLD;
  static const SystemHintType CHAT_LEAVE_WORLD =
    ChatInfo_SystemHintType_CHAT_LEAVE_WORLD;
  static inline bool SystemHintType_IsValid(int value) {
    return ChatInfo_SystemHintType_IsValid(value);
  }
  static const SystemHintType SystemHintType_MIN =
    ChatInfo_SystemHintType_SystemHintType_MIN;
  static const SystemHintType SystemHintType_MAX =
    ChatInfo_SystemHintType_SystemHintType_MAX;
  static const int SystemHintType_ARRAYSIZE =
    ChatInfo_SystemHintType_SystemHintType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SystemHintType_descriptor() {
    return ChatInfo_SystemHintType_descriptor();
  }
  static inline const ::std::string& SystemHintType_Name(SystemHintType value) {
    return ChatInfo_SystemHintType_Name(value);
  }
  static inline bool SystemHintType_Parse(const ::std::string& name,
      SystemHintType* value) {
    return ChatInfo_SystemHintType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // string text = 3;
  private:
  bool has_text() const;
  public:
  void clear_text();
  static const int kTextFieldNumber = 3;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // uint32 icon = 4;
  private:
  bool has_icon() const;
  public:
  void clear_icon();
  static const int kIconFieldNumber = 4;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // .proto.ChatInfo.SystemHint system_hint = 5;
  bool has_system_hint() const;
  void clear_system_hint();
  static const int kSystemHintFieldNumber = 5;
  const ::proto::ChatInfo_SystemHint& system_hint() const;
  ::proto::ChatInfo_SystemHint* mutable_system_hint();
  ::proto::ChatInfo_SystemHint* release_system_hint();
  void set_allocated_system_hint(::proto::ChatInfo_SystemHint* system_hint);

  ContentCase content_case() const;
  // @@protoc_insertion_point(class_scope:proto.ChatInfo)
 private:
  void set_has_text();
  void set_has_icon();
  void set_has_system_hint();

  inline bool has_content() const;
  void clear_content();
  inline void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 uid_;
  union ContentUnion {
    ContentUnion() {}
    ::google::protobuf::internal::ArenaStringPtr text_;
    ::google::protobuf::uint32 icon_;
    ::proto::ChatInfo_SystemHint* system_hint_;
  } content_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerChatReq) */ {
 public:
  PlayerChatReq();
  virtual ~PlayerChatReq();

  PlayerChatReq(const PlayerChatReq& from);

  inline PlayerChatReq& operator=(const PlayerChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatReq(PlayerChatReq&& from) noexcept
    : PlayerChatReq() {
    *this = ::std::move(from);
  }

  inline PlayerChatReq& operator=(PlayerChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChatReq& default_instance();

  static inline const PlayerChatReq* internal_default_instance() {
    return reinterpret_cast<const PlayerChatReq*>(
               &_PlayerChatReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(PlayerChatReq* other);
  friend void swap(PlayerChatReq& a, PlayerChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerChatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerChatReq& from);
  void MergeFrom(const PlayerChatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerChatReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerChatReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerChatReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerChatReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerChatReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerChatReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerChatReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerChatReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerChatReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerChatReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerChatReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerChatReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerChatReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ChatInfo chat_info = 2;
  bool has_chat_info() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 2;
  const ::proto::ChatInfo& chat_info() const;
  ::proto::ChatInfo* mutable_chat_info();
  ::proto::ChatInfo* release_chat_info();
  void set_allocated_chat_info(::proto::ChatInfo* chat_info);

  // uint32 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatInfo* chat_info_;
  ::google::protobuf::uint32 channel_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerChatRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerChatRsp) */ {
 public:
  PlayerChatRsp();
  virtual ~PlayerChatRsp();

  PlayerChatRsp(const PlayerChatRsp& from);

  inline PlayerChatRsp& operator=(const PlayerChatRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatRsp(PlayerChatRsp&& from) noexcept
    : PlayerChatRsp() {
    *this = ::std::move(from);
  }

  inline PlayerChatRsp& operator=(PlayerChatRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChatRsp& default_instance();

  static inline const PlayerChatRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerChatRsp*>(
               &_PlayerChatRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(PlayerChatRsp* other);
  friend void swap(PlayerChatRsp& a, PlayerChatRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerChatRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerChatRsp& from);
  void MergeFrom(const PlayerChatRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerChatRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerChatRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerChatRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerChatRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerChatRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerChatRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerChatRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerChatRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerChatRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerChatRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerChatRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerChatRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerChatRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerChatRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerChatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerChatNotify) */ {
 public:
  PlayerChatNotify();
  virtual ~PlayerChatNotify();

  PlayerChatNotify(const PlayerChatNotify& from);

  inline PlayerChatNotify& operator=(const PlayerChatNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatNotify(PlayerChatNotify&& from) noexcept
    : PlayerChatNotify() {
    *this = ::std::move(from);
  }

  inline PlayerChatNotify& operator=(PlayerChatNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChatNotify& default_instance();

  static inline const PlayerChatNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerChatNotify*>(
               &_PlayerChatNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(PlayerChatNotify* other);
  friend void swap(PlayerChatNotify& a, PlayerChatNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerChatNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerChatNotify& from);
  void MergeFrom(const PlayerChatNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerChatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerChatNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerChatNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerChatNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerChatNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerChatNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerChatNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerChatNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerChatNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerChatNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerChatNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerChatNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerChatNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.ChatInfo chat_info = 2;
  bool has_chat_info() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 2;
  const ::proto::ChatInfo& chat_info() const;
  ::proto::ChatInfo* mutable_chat_info();
  ::proto::ChatInfo* release_chat_info();
  void set_allocated_chat_info(::proto::ChatInfo* chat_info);

  // uint32 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerChatNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::ChatInfo* chat_info_;
  ::google::protobuf::uint32 channel_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerChatCDNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerChatCDNotify) */ {
 public:
  PlayerChatCDNotify();
  virtual ~PlayerChatCDNotify();

  PlayerChatCDNotify(const PlayerChatCDNotify& from);

  inline PlayerChatCDNotify& operator=(const PlayerChatCDNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerChatCDNotify(PlayerChatCDNotify&& from) noexcept
    : PlayerChatCDNotify() {
    *this = ::std::move(from);
  }

  inline PlayerChatCDNotify& operator=(PlayerChatCDNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerChatCDNotify& default_instance();

  static inline const PlayerChatCDNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerChatCDNotify*>(
               &_PlayerChatCDNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(PlayerChatCDNotify* other);
  friend void swap(PlayerChatCDNotify& a, PlayerChatCDNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerChatCDNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerChatCDNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerChatCDNotify& from);
  void MergeFrom(const PlayerChatCDNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerChatCDNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerChatCDNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerChatCDNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerChatCDNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerChatCDNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerChatCDNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerChatCDNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerChatCDNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerChatCDNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerChatCDNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerChatCDNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerChatCDNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerChatCDNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 over_time = 1;
  void clear_over_time();
  static const int kOverTimeFieldNumber = 1;
  ::google::protobuf::uint32 over_time() const;
  void set_over_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerChatCDNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 over_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChatHistoryNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChatHistoryNotify) */ {
 public:
  ChatHistoryNotify();
  virtual ~ChatHistoryNotify();

  ChatHistoryNotify(const ChatHistoryNotify& from);

  inline ChatHistoryNotify& operator=(const ChatHistoryNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChatHistoryNotify(ChatHistoryNotify&& from) noexcept
    : ChatHistoryNotify() {
    *this = ::std::move(from);
  }

  inline ChatHistoryNotify& operator=(ChatHistoryNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChatHistoryNotify& default_instance();

  static inline const ChatHistoryNotify* internal_default_instance() {
    return reinterpret_cast<const ChatHistoryNotify*>(
               &_ChatHistoryNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(ChatHistoryNotify* other);
  friend void swap(ChatHistoryNotify& a, ChatHistoryNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChatHistoryNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ChatHistoryNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChatHistoryNotify& from);
  void MergeFrom(const ChatHistoryNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChatHistoryNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChatHistoryNotify_CmdId CmdId;
  static const CmdId NONE =
    ChatHistoryNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ChatHistoryNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChatHistoryNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChatHistoryNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChatHistoryNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChatHistoryNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChatHistoryNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChatHistoryNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChatHistoryNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChatHistoryNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChatHistoryNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ChatInfo chat_info = 2;
  int chat_info_size() const;
  void clear_chat_info();
  static const int kChatInfoFieldNumber = 2;
  const ::proto::ChatInfo& chat_info(int index) const;
  ::proto::ChatInfo* mutable_chat_info(int index);
  ::proto::ChatInfo* add_chat_info();
  ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
      mutable_chat_info();
  const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
      chat_info() const;

  // uint32 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChatHistoryNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo > chat_info_;
  ::google::protobuf::uint32 channel_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneDataNotify) */ {
 public:
  SceneDataNotify();
  virtual ~SceneDataNotify();

  SceneDataNotify(const SceneDataNotify& from);

  inline SceneDataNotify& operator=(const SceneDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneDataNotify(SceneDataNotify&& from) noexcept
    : SceneDataNotify() {
    *this = ::std::move(from);
  }

  inline SceneDataNotify& operator=(SceneDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneDataNotify& default_instance();

  static inline const SceneDataNotify* internal_default_instance() {
    return reinterpret_cast<const SceneDataNotify*>(
               &_SceneDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(SceneDataNotify* other);
  friend void swap(SceneDataNotify& a, SceneDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneDataNotify& from);
  void MergeFrom(const SceneDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SceneDataNotify_CmdId CmdId;
  static const CmdId NONE =
    SceneDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SceneDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SceneDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SceneDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SceneDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SceneDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SceneDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SceneDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SceneDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SceneDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SceneDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string level_config_name_list = 1;
  int level_config_name_list_size() const;
  void clear_level_config_name_list();
  static const int kLevelConfigNameListFieldNumber = 1;
  const ::std::string& level_config_name_list(int index) const;
  ::std::string* mutable_level_config_name_list(int index);
  void set_level_config_name_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_level_config_name_list(int index, ::std::string&& value);
  #endif
  void set_level_config_name_list(int index, const char* value);
  void set_level_config_name_list(int index, const char* value, size_t size);
  ::std::string* add_level_config_name_list();
  void add_level_config_name_list(const ::std::string& value);
  #if LANG_CXX11
  void add_level_config_name_list(::std::string&& value);
  #endif
  void add_level_config_name_list(const char* value);
  void add_level_config_name_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& level_config_name_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_level_config_name_list();

  // @@protoc_insertion_point(class_scope:proto.SceneDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> level_config_name_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonEntryToBeExploreNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DungeonEntryToBeExploreNotify) */ {
 public:
  DungeonEntryToBeExploreNotify();
  virtual ~DungeonEntryToBeExploreNotify();

  DungeonEntryToBeExploreNotify(const DungeonEntryToBeExploreNotify& from);

  inline DungeonEntryToBeExploreNotify& operator=(const DungeonEntryToBeExploreNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonEntryToBeExploreNotify(DungeonEntryToBeExploreNotify&& from) noexcept
    : DungeonEntryToBeExploreNotify() {
    *this = ::std::move(from);
  }

  inline DungeonEntryToBeExploreNotify& operator=(DungeonEntryToBeExploreNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonEntryToBeExploreNotify& default_instance();

  static inline const DungeonEntryToBeExploreNotify* internal_default_instance() {
    return reinterpret_cast<const DungeonEntryToBeExploreNotify*>(
               &_DungeonEntryToBeExploreNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(DungeonEntryToBeExploreNotify* other);
  friend void swap(DungeonEntryToBeExploreNotify& a, DungeonEntryToBeExploreNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonEntryToBeExploreNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonEntryToBeExploreNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonEntryToBeExploreNotify& from);
  void MergeFrom(const DungeonEntryToBeExploreNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonEntryToBeExploreNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DungeonEntryToBeExploreNotify_CmdId CmdId;
  static const CmdId NONE =
    DungeonEntryToBeExploreNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DungeonEntryToBeExploreNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DungeonEntryToBeExploreNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DungeonEntryToBeExploreNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DungeonEntryToBeExploreNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DungeonEntryToBeExploreNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DungeonEntryToBeExploreNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DungeonEntryToBeExploreNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DungeonEntryToBeExploreNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DungeonEntryToBeExploreNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DungeonEntryToBeExploreNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 dungeon_entry_scene_point_id = 1;
  void clear_dungeon_entry_scene_point_id();
  static const int kDungeonEntryScenePointIdFieldNumber = 1;
  ::google::protobuf::uint32 dungeon_entry_scene_point_id() const;
  void set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value);

  // uint32 dungeon_entry_config_id = 2;
  void clear_dungeon_entry_config_id();
  static const int kDungeonEntryConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 dungeon_entry_config_id() const;
  void set_dungeon_entry_config_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 3;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DungeonEntryToBeExploreNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dungeon_entry_scene_point_id_;
  ::google::protobuf::uint32 dungeon_entry_config_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDungeonEntryExploreConditionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetDungeonEntryExploreConditionReq) */ {
 public:
  GetDungeonEntryExploreConditionReq();
  virtual ~GetDungeonEntryExploreConditionReq();

  GetDungeonEntryExploreConditionReq(const GetDungeonEntryExploreConditionReq& from);

  inline GetDungeonEntryExploreConditionReq& operator=(const GetDungeonEntryExploreConditionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDungeonEntryExploreConditionReq(GetDungeonEntryExploreConditionReq&& from) noexcept
    : GetDungeonEntryExploreConditionReq() {
    *this = ::std::move(from);
  }

  inline GetDungeonEntryExploreConditionReq& operator=(GetDungeonEntryExploreConditionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDungeonEntryExploreConditionReq& default_instance();

  static inline const GetDungeonEntryExploreConditionReq* internal_default_instance() {
    return reinterpret_cast<const GetDungeonEntryExploreConditionReq*>(
               &_GetDungeonEntryExploreConditionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(GetDungeonEntryExploreConditionReq* other);
  friend void swap(GetDungeonEntryExploreConditionReq& a, GetDungeonEntryExploreConditionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDungeonEntryExploreConditionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetDungeonEntryExploreConditionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetDungeonEntryExploreConditionReq& from);
  void MergeFrom(const GetDungeonEntryExploreConditionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetDungeonEntryExploreConditionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetDungeonEntryExploreConditionReq_CmdId CmdId;
  static const CmdId NONE =
    GetDungeonEntryExploreConditionReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetDungeonEntryExploreConditionReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetDungeonEntryExploreConditionReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetDungeonEntryExploreConditionReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetDungeonEntryExploreConditionReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetDungeonEntryExploreConditionReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetDungeonEntryExploreConditionReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetDungeonEntryExploreConditionReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetDungeonEntryExploreConditionReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetDungeonEntryExploreConditionReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetDungeonEntryExploreConditionReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetDungeonEntryExploreConditionReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 dungeon_entry_scene_point_id = 1;
  void clear_dungeon_entry_scene_point_id();
  static const int kDungeonEntryScenePointIdFieldNumber = 1;
  ::google::protobuf::uint32 dungeon_entry_scene_point_id() const;
  void set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value);

  // uint32 dungeon_entry_config_id = 2;
  void clear_dungeon_entry_config_id();
  static const int kDungeonEntryConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 dungeon_entry_config_id() const;
  void set_dungeon_entry_config_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 3;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetDungeonEntryExploreConditionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 dungeon_entry_scene_point_id_;
  ::google::protobuf::uint32 dungeon_entry_config_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonEntryCond : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DungeonEntryCond) */ {
 public:
  DungeonEntryCond();
  virtual ~DungeonEntryCond();

  DungeonEntryCond(const DungeonEntryCond& from);

  inline DungeonEntryCond& operator=(const DungeonEntryCond& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonEntryCond(DungeonEntryCond&& from) noexcept
    : DungeonEntryCond() {
    *this = ::std::move(from);
  }

  inline DungeonEntryCond& operator=(DungeonEntryCond&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonEntryCond& default_instance();

  static inline const DungeonEntryCond* internal_default_instance() {
    return reinterpret_cast<const DungeonEntryCond*>(
               &_DungeonEntryCond_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(DungeonEntryCond* other);
  friend void swap(DungeonEntryCond& a, DungeonEntryCond& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonEntryCond* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonEntryCond* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonEntryCond& from);
  void MergeFrom(const DungeonEntryCond& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonEntryCond* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.DungeonEntryBlockReason cond_reason = 1;
  void clear_cond_reason();
  static const int kCondReasonFieldNumber = 1;
  ::proto::DungeonEntryBlockReason cond_reason() const;
  void set_cond_reason(::proto::DungeonEntryBlockReason value);

  // uint32 param1 = 2;
  void clear_param1();
  static const int kParam1FieldNumber = 2;
  ::google::protobuf::uint32 param1() const;
  void set_param1(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DungeonEntryCond)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int cond_reason_;
  ::google::protobuf::uint32 param1_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetDungeonEntryExploreConditionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetDungeonEntryExploreConditionRsp) */ {
 public:
  GetDungeonEntryExploreConditionRsp();
  virtual ~GetDungeonEntryExploreConditionRsp();

  GetDungeonEntryExploreConditionRsp(const GetDungeonEntryExploreConditionRsp& from);

  inline GetDungeonEntryExploreConditionRsp& operator=(const GetDungeonEntryExploreConditionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetDungeonEntryExploreConditionRsp(GetDungeonEntryExploreConditionRsp&& from) noexcept
    : GetDungeonEntryExploreConditionRsp() {
    *this = ::std::move(from);
  }

  inline GetDungeonEntryExploreConditionRsp& operator=(GetDungeonEntryExploreConditionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDungeonEntryExploreConditionRsp& default_instance();

  static inline const GetDungeonEntryExploreConditionRsp* internal_default_instance() {
    return reinterpret_cast<const GetDungeonEntryExploreConditionRsp*>(
               &_GetDungeonEntryExploreConditionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(GetDungeonEntryExploreConditionRsp* other);
  friend void swap(GetDungeonEntryExploreConditionRsp& a, GetDungeonEntryExploreConditionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetDungeonEntryExploreConditionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetDungeonEntryExploreConditionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetDungeonEntryExploreConditionRsp& from);
  void MergeFrom(const GetDungeonEntryExploreConditionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetDungeonEntryExploreConditionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetDungeonEntryExploreConditionRsp_CmdId CmdId;
  static const CmdId NONE =
    GetDungeonEntryExploreConditionRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetDungeonEntryExploreConditionRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetDungeonEntryExploreConditionRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetDungeonEntryExploreConditionRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetDungeonEntryExploreConditionRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetDungeonEntryExploreConditionRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetDungeonEntryExploreConditionRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetDungeonEntryExploreConditionRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetDungeonEntryExploreConditionRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetDungeonEntryExploreConditionRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetDungeonEntryExploreConditionRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.DungeonEntryCond dungeon_entry_cond = 2;
  bool has_dungeon_entry_cond() const;
  void clear_dungeon_entry_cond();
  static const int kDungeonEntryCondFieldNumber = 2;
  const ::proto::DungeonEntryCond& dungeon_entry_cond() const;
  ::proto::DungeonEntryCond* mutable_dungeon_entry_cond();
  ::proto::DungeonEntryCond* release_dungeon_entry_cond();
  void set_allocated_dungeon_entry_cond(::proto::DungeonEntryCond* dungeon_entry_cond);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetDungeonEntryExploreConditionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::DungeonEntryCond* dungeon_entry_cond_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnfreezeGroupLimitNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnfreezeGroupLimitNotify) */ {
 public:
  UnfreezeGroupLimitNotify();
  virtual ~UnfreezeGroupLimitNotify();

  UnfreezeGroupLimitNotify(const UnfreezeGroupLimitNotify& from);

  inline UnfreezeGroupLimitNotify& operator=(const UnfreezeGroupLimitNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnfreezeGroupLimitNotify(UnfreezeGroupLimitNotify&& from) noexcept
    : UnfreezeGroupLimitNotify() {
    *this = ::std::move(from);
  }

  inline UnfreezeGroupLimitNotify& operator=(UnfreezeGroupLimitNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnfreezeGroupLimitNotify& default_instance();

  static inline const UnfreezeGroupLimitNotify* internal_default_instance() {
    return reinterpret_cast<const UnfreezeGroupLimitNotify*>(
               &_UnfreezeGroupLimitNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(UnfreezeGroupLimitNotify* other);
  friend void swap(UnfreezeGroupLimitNotify& a, UnfreezeGroupLimitNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnfreezeGroupLimitNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UnfreezeGroupLimitNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnfreezeGroupLimitNotify& from);
  void MergeFrom(const UnfreezeGroupLimitNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnfreezeGroupLimitNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UnfreezeGroupLimitNotify_CmdId CmdId;
  static const CmdId NONE =
    UnfreezeGroupLimitNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    UnfreezeGroupLimitNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UnfreezeGroupLimitNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UnfreezeGroupLimitNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return UnfreezeGroupLimitNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UnfreezeGroupLimitNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UnfreezeGroupLimitNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UnfreezeGroupLimitNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UnfreezeGroupLimitNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UnfreezeGroupLimitNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UnfreezeGroupLimitNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 point_id = 1;
  void clear_point_id();
  static const int kPointIdFieldNumber = 1;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnfreezeGroupLimitNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterWorldFogAreaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnterWorldFogAreaNotify) */ {
 public:
  EnterWorldFogAreaNotify();
  virtual ~EnterWorldFogAreaNotify();

  EnterWorldFogAreaNotify(const EnterWorldFogAreaNotify& from);

  inline EnterWorldFogAreaNotify& operator=(const EnterWorldFogAreaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnterWorldFogAreaNotify(EnterWorldFogAreaNotify&& from) noexcept
    : EnterWorldFogAreaNotify() {
    *this = ::std::move(from);
  }

  inline EnterWorldFogAreaNotify& operator=(EnterWorldFogAreaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterWorldFogAreaNotify& default_instance();

  static inline const EnterWorldFogAreaNotify* internal_default_instance() {
    return reinterpret_cast<const EnterWorldFogAreaNotify*>(
               &_EnterWorldFogAreaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(EnterWorldFogAreaNotify* other);
  friend void swap(EnterWorldFogAreaNotify& a, EnterWorldFogAreaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnterWorldFogAreaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterWorldFogAreaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterWorldFogAreaNotify& from);
  void MergeFrom(const EnterWorldFogAreaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterWorldFogAreaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EnterWorldFogAreaNotify_CmdId CmdId;
  static const CmdId NONE =
    EnterWorldFogAreaNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    EnterWorldFogAreaNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    EnterWorldFogAreaNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    EnterWorldFogAreaNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    EnterWorldFogAreaNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return EnterWorldFogAreaNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    EnterWorldFogAreaNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    EnterWorldFogAreaNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    EnterWorldFogAreaNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return EnterWorldFogAreaNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return EnterWorldFogAreaNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return EnterWorldFogAreaNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 fog_area_id = 2;
  void clear_fog_area_id();
  static const int kFogAreaIdFieldNumber = 2;
  ::google::protobuf::uint32 fog_area_id() const;
  void set_fog_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnterWorldFogAreaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 fog_area_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockWorldFogAreaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockWorldFogAreaNotify) */ {
 public:
  UnlockWorldFogAreaNotify();
  virtual ~UnlockWorldFogAreaNotify();

  UnlockWorldFogAreaNotify(const UnlockWorldFogAreaNotify& from);

  inline UnlockWorldFogAreaNotify& operator=(const UnlockWorldFogAreaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockWorldFogAreaNotify(UnlockWorldFogAreaNotify&& from) noexcept
    : UnlockWorldFogAreaNotify() {
    *this = ::std::move(from);
  }

  inline UnlockWorldFogAreaNotify& operator=(UnlockWorldFogAreaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockWorldFogAreaNotify& default_instance();

  static inline const UnlockWorldFogAreaNotify* internal_default_instance() {
    return reinterpret_cast<const UnlockWorldFogAreaNotify*>(
               &_UnlockWorldFogAreaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(UnlockWorldFogAreaNotify* other);
  friend void swap(UnlockWorldFogAreaNotify& a, UnlockWorldFogAreaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockWorldFogAreaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockWorldFogAreaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockWorldFogAreaNotify& from);
  void MergeFrom(const UnlockWorldFogAreaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockWorldFogAreaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef UnlockWorldFogAreaNotify_CmdId CmdId;
  static const CmdId NONE =
    UnlockWorldFogAreaNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    UnlockWorldFogAreaNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    UnlockWorldFogAreaNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    UnlockWorldFogAreaNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return UnlockWorldFogAreaNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    UnlockWorldFogAreaNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    UnlockWorldFogAreaNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    UnlockWorldFogAreaNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return UnlockWorldFogAreaNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return UnlockWorldFogAreaNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return UnlockWorldFogAreaNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 unlocked_fog_level_1_area_list = 2;
  int unlocked_fog_level_1_area_list_size() const;
  void clear_unlocked_fog_level_1_area_list();
  static const int kUnlockedFogLevel1AreaListFieldNumber = 2;
  ::google::protobuf::uint32 unlocked_fog_level_1_area_list(int index) const;
  void set_unlocked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_fog_level_1_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_fog_level_1_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_fog_level_1_area_list();

  // repeated uint32 unlocked_fog_level_2_area_list = 3;
  int unlocked_fog_level_2_area_list_size() const;
  void clear_unlocked_fog_level_2_area_list();
  static const int kUnlockedFogLevel2AreaListFieldNumber = 3;
  ::google::protobuf::uint32 unlocked_fog_level_2_area_list(int index) const;
  void set_unlocked_fog_level_2_area_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_fog_level_2_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_fog_level_2_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_fog_level_2_area_list();

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockWorldFogAreaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_fog_level_1_area_list_;
  mutable int _unlocked_fog_level_1_area_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_fog_level_2_area_list_;
  mutable int _unlocked_fog_level_2_area_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LockWorldFogAreaNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LockWorldFogAreaNotify) */ {
 public:
  LockWorldFogAreaNotify();
  virtual ~LockWorldFogAreaNotify();

  LockWorldFogAreaNotify(const LockWorldFogAreaNotify& from);

  inline LockWorldFogAreaNotify& operator=(const LockWorldFogAreaNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LockWorldFogAreaNotify(LockWorldFogAreaNotify&& from) noexcept
    : LockWorldFogAreaNotify() {
    *this = ::std::move(from);
  }

  inline LockWorldFogAreaNotify& operator=(LockWorldFogAreaNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LockWorldFogAreaNotify& default_instance();

  static inline const LockWorldFogAreaNotify* internal_default_instance() {
    return reinterpret_cast<const LockWorldFogAreaNotify*>(
               &_LockWorldFogAreaNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(LockWorldFogAreaNotify* other);
  friend void swap(LockWorldFogAreaNotify& a, LockWorldFogAreaNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LockWorldFogAreaNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  LockWorldFogAreaNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LockWorldFogAreaNotify& from);
  void MergeFrom(const LockWorldFogAreaNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LockWorldFogAreaNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LockWorldFogAreaNotify_CmdId CmdId;
  static const CmdId NONE =
    LockWorldFogAreaNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    LockWorldFogAreaNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    LockWorldFogAreaNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    LockWorldFogAreaNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return LockWorldFogAreaNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    LockWorldFogAreaNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    LockWorldFogAreaNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    LockWorldFogAreaNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return LockWorldFogAreaNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return LockWorldFogAreaNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return LockWorldFogAreaNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 locked_fog_level_1_area_list = 2;
  int locked_fog_level_1_area_list_size() const;
  void clear_locked_fog_level_1_area_list();
  static const int kLockedFogLevel1AreaListFieldNumber = 2;
  ::google::protobuf::uint32 locked_fog_level_1_area_list(int index) const;
  void set_locked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value);
  void add_locked_fog_level_1_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      locked_fog_level_1_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_locked_fog_level_1_area_list();

  // repeated uint32 locked_fog_level_2_area_list = 3;
  int locked_fog_level_2_area_list_size() const;
  void clear_locked_fog_level_2_area_list();
  static const int kLockedFogLevel2AreaListFieldNumber = 3;
  ::google::protobuf::uint32 locked_fog_level_2_area_list(int index) const;
  void set_locked_fog_level_2_area_list(int index, ::google::protobuf::uint32 value);
  void add_locked_fog_level_2_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      locked_fog_level_2_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_locked_fog_level_2_area_list();

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LockWorldFogAreaNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > locked_fog_level_1_area_list_;
  mutable int _locked_fog_level_1_area_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > locked_fog_level_2_area_list_;
  mutable int _locked_fog_level_2_area_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetEntityClientDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetEntityClientDataNotify) */ {
 public:
  SetEntityClientDataNotify();
  virtual ~SetEntityClientDataNotify();

  SetEntityClientDataNotify(const SetEntityClientDataNotify& from);

  inline SetEntityClientDataNotify& operator=(const SetEntityClientDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetEntityClientDataNotify(SetEntityClientDataNotify&& from) noexcept
    : SetEntityClientDataNotify() {
    *this = ::std::move(from);
  }

  inline SetEntityClientDataNotify& operator=(SetEntityClientDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetEntityClientDataNotify& default_instance();

  static inline const SetEntityClientDataNotify* internal_default_instance() {
    return reinterpret_cast<const SetEntityClientDataNotify*>(
               &_SetEntityClientDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(SetEntityClientDataNotify* other);
  friend void swap(SetEntityClientDataNotify& a, SetEntityClientDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetEntityClientDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SetEntityClientDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetEntityClientDataNotify& from);
  void MergeFrom(const SetEntityClientDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetEntityClientDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetEntityClientDataNotify_CmdId CmdId;
  static const CmdId NONE =
    SetEntityClientDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SetEntityClientDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetEntityClientDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetEntityClientDataNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetEntityClientDataNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetEntityClientDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetEntityClientDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetEntityClientDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetEntityClientDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetEntityClientDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetEntityClientDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetEntityClientDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes entity_client_data = 2;
  void clear_entity_client_data();
  static const int kEntityClientDataFieldNumber = 2;
  const ::std::string& entity_client_data() const;
  void set_entity_client_data(const ::std::string& value);
  #if LANG_CXX11
  void set_entity_client_data(::std::string&& value);
  #endif
  void set_entity_client_data(const char* value);
  void set_entity_client_data(const void* value, size_t size);
  ::std::string* mutable_entity_client_data();
  ::std::string* release_entity_client_data();
  void set_allocated_entity_client_data(::std::string* entity_client_data);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetEntityClientDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr entity_client_data_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fscene_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PlayerEnterSceneNotify

// uint32 scene_id = 1;
inline void PlayerEnterSceneNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.scene_id)
  return scene_id_;
}
inline void PlayerEnterSceneNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.scene_id)
}

// .proto.Vector pos = 2;
inline bool PlayerEnterSceneNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PlayerEnterSceneNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& PlayerEnterSceneNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerEnterSceneNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneNotify.pos)
  return pos_;
}
inline ::proto::Vector* PlayerEnterSceneNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlayerEnterSceneNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneNotify.pos)
}

// uint64 scene_begin_time = 3;
inline void PlayerEnterSceneNotify::clear_scene_begin_time() {
  scene_begin_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerEnterSceneNotify::scene_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.scene_begin_time)
  return scene_begin_time_;
}
inline void PlayerEnterSceneNotify::set_scene_begin_time(::google::protobuf::uint64 value) {
  
  scene_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.scene_begin_time)
}

// .proto.EnterType type = 4;
inline void PlayerEnterSceneNotify::clear_type() {
  type_ = 0;
}
inline ::proto::EnterType PlayerEnterSceneNotify::type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.type)
  return static_cast< ::proto::EnterType >(type_);
}
inline void PlayerEnterSceneNotify::set_type(::proto::EnterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.type)
}

// uint32 target_uid = 6;
inline void PlayerEnterSceneNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.target_uid)
  return target_uid_;
}
inline void PlayerEnterSceneNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.target_uid)
}

// uint32 prev_scene_id = 9;
inline void PlayerEnterSceneNotify::clear_prev_scene_id() {
  prev_scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::prev_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.prev_scene_id)
  return prev_scene_id_;
}
inline void PlayerEnterSceneNotify::set_prev_scene_id(::google::protobuf::uint32 value) {
  
  prev_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.prev_scene_id)
}

// .proto.Vector prev_pos = 10;
inline bool PlayerEnterSceneNotify::has_prev_pos() const {
  return this != internal_default_instance() && prev_pos_ != NULL;
}
inline void PlayerEnterSceneNotify::clear_prev_pos() {
  if (GetArenaNoVirtual() == NULL && prev_pos_ != NULL) delete prev_pos_;
  prev_pos_ = NULL;
}
inline const ::proto::Vector& PlayerEnterSceneNotify::prev_pos() const {
  const ::proto::Vector* p = prev_pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.prev_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerEnterSceneNotify::mutable_prev_pos() {
  
  if (prev_pos_ == NULL) {
    prev_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneNotify.prev_pos)
  return prev_pos_;
}
inline ::proto::Vector* PlayerEnterSceneNotify::release_prev_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneNotify.prev_pos)
  
  ::proto::Vector* temp = prev_pos_;
  prev_pos_ = NULL;
  return temp;
}
inline void PlayerEnterSceneNotify::set_allocated_prev_pos(::proto::Vector* prev_pos) {
  delete prev_pos_;
  prev_pos_ = prev_pos;
  if (prev_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneNotify.prev_pos)
}

// uint32 dungeon_id = 11;
inline void PlayerEnterSceneNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.dungeon_id)
  return dungeon_id_;
}
inline void PlayerEnterSceneNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.dungeon_id)
}

// uint32 world_level = 12;
inline void PlayerEnterSceneNotify::clear_world_level() {
  world_level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::world_level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.world_level)
  return world_level_;
}
inline void PlayerEnterSceneNotify::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.world_level)
}

// uint32 enter_scene_token = 13;
inline void PlayerEnterSceneNotify::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneNotify::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.enter_scene_token)
  return enter_scene_token_;
}
inline void PlayerEnterSceneNotify::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.enter_scene_token)
}

// -------------------------------------------------------------------

// LeaveSceneReq

// -------------------------------------------------------------------

// LeaveSceneRsp

// int32 retcode = 1;
inline void LeaveSceneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 LeaveSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.LeaveSceneRsp.retcode)
  return retcode_;
}
inline void LeaveSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.LeaveSceneRsp.retcode)
}

// -------------------------------------------------------------------

// SceneInitFinishReq

// uint32 enter_scene_token = 1;
inline void SceneInitFinishReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 SceneInitFinishReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.SceneInitFinishReq.enter_scene_token)
  return enter_scene_token_;
}
inline void SceneInitFinishReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneInitFinishReq.enter_scene_token)
}

// -------------------------------------------------------------------

// SceneInitFinishRsp

// int32 retcode = 1;
inline void SceneInitFinishRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneInitFinishRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneInitFinishRsp.retcode)
  return retcode_;
}
inline void SceneInitFinishRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneInitFinishRsp.retcode)
}

// -------------------------------------------------------------------

// SceneEntityAppearNotify

// repeated .proto.SceneEntityInfo entity_list = 1;
inline int SceneEntityAppearNotify::entity_list_size() const {
  return entity_list_.size();
}
inline void SceneEntityAppearNotify::clear_entity_list() {
  entity_list_.Clear();
}
inline const ::proto::SceneEntityInfo& SceneEntityAppearNotify::entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Get(index);
}
inline ::proto::SceneEntityInfo* SceneEntityAppearNotify::mutable_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Mutable(index);
}
inline ::proto::SceneEntityInfo* SceneEntityAppearNotify::add_entity_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
SceneEntityAppearNotify::mutable_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityAppearNotify.entity_list)
  return &entity_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
SceneEntityAppearNotify::entity_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_;
}

// .proto.VisionType appear_type = 2;
inline void SceneEntityAppearNotify::clear_appear_type() {
  appear_type_ = 0;
}
inline ::proto::VisionType SceneEntityAppearNotify::appear_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.appear_type)
  return static_cast< ::proto::VisionType >(appear_type_);
}
inline void SceneEntityAppearNotify::set_appear_type(::proto::VisionType value) {
  
  appear_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAppearNotify.appear_type)
}

// uint32 param = 3;
inline void SceneEntityAppearNotify::clear_param() {
  param_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityAppearNotify::param() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.param)
  return param_;
}
inline void SceneEntityAppearNotify::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAppearNotify.param)
}

// -------------------------------------------------------------------

// SceneEntityDisappearNotify

// repeated uint32 entity_list = 1;
inline int SceneEntityDisappearNotify::entity_list_size() const {
  return entity_list_.size();
}
inline void SceneEntityDisappearNotify::clear_entity_list() {
  entity_list_.Clear();
}
inline ::google::protobuf::uint32 SceneEntityDisappearNotify::entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDisappearNotify.entity_list)
  return entity_list_.Get(index);
}
inline void SceneEntityDisappearNotify::set_entity_list(int index, ::google::protobuf::uint32 value) {
  entity_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneEntityDisappearNotify.entity_list)
}
inline void SceneEntityDisappearNotify::add_entity_list(::google::protobuf::uint32 value) {
  entity_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneEntityDisappearNotify.entity_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneEntityDisappearNotify::entity_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityDisappearNotify.entity_list)
  return entity_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneEntityDisappearNotify::mutable_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityDisappearNotify.entity_list)
  return &entity_list_;
}

// .proto.VisionType disappear_type = 2;
inline void SceneEntityDisappearNotify::clear_disappear_type() {
  disappear_type_ = 0;
}
inline ::proto::VisionType SceneEntityDisappearNotify::disappear_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDisappearNotify.disappear_type)
  return static_cast< ::proto::VisionType >(disappear_type_);
}
inline void SceneEntityDisappearNotify::set_disappear_type(::proto::VisionType value) {
  
  disappear_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDisappearNotify.disappear_type)
}

// -------------------------------------------------------------------

// SceneEntityMoveReq

// uint32 entity_id = 1;
inline void SceneEntityMoveReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.entity_id)
  return entity_id_;
}
inline void SceneEntityMoveReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.entity_id)
}

// .proto.MotionInfo motion_info = 2;
inline bool SceneEntityMoveReq::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void SceneEntityMoveReq::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& SceneEntityMoveReq::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* SceneEntityMoveReq::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveReq.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* SceneEntityMoveReq::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveReq.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void SceneEntityMoveReq::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveReq.motion_info)
}

// uint32 scene_time = 3;
inline void SceneEntityMoveReq::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveReq::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.scene_time)
  return scene_time_;
}
inline void SceneEntityMoveReq::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.scene_time)
}

// uint32 reliable_seq = 4;
inline void SceneEntityMoveReq::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveReq::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.reliable_seq)
  return reliable_seq_;
}
inline void SceneEntityMoveReq::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.reliable_seq)
}

// -------------------------------------------------------------------

// SceneEntityMoveRsp

// int32 retcode = 1;
inline void SceneEntityMoveRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneEntityMoveRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.retcode)
  return retcode_;
}
inline void SceneEntityMoveRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.retcode)
}

// uint32 entity_id = 2;
inline void SceneEntityMoveRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.entity_id)
  return entity_id_;
}
inline void SceneEntityMoveRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.entity_id)
}

// .proto.MotionInfo fail_motion = 3;
inline bool SceneEntityMoveRsp::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
inline void SceneEntityMoveRsp::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
inline const ::proto::MotionInfo& SceneEntityMoveRsp::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* SceneEntityMoveRsp::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveRsp.fail_motion)
  return fail_motion_;
}
inline ::proto::MotionInfo* SceneEntityMoveRsp::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveRsp.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
inline void SceneEntityMoveRsp::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveRsp.fail_motion)
}

// uint32 scene_time = 4;
inline void SceneEntityMoveRsp::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveRsp::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.scene_time)
  return scene_time_;
}
inline void SceneEntityMoveRsp::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.scene_time)
}

// uint32 reliable_seq = 5;
inline void SceneEntityMoveRsp::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveRsp::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.reliable_seq)
  return reliable_seq_;
}
inline void SceneEntityMoveRsp::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.reliable_seq)
}

// -------------------------------------------------------------------

// SceneAvatarStaminaStepReq

// bool use_client_rot = 1;
inline void SceneAvatarStaminaStepReq::clear_use_client_rot() {
  use_client_rot_ = false;
}
inline bool SceneAvatarStaminaStepReq::use_client_rot() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepReq.use_client_rot)
  return use_client_rot_;
}
inline void SceneAvatarStaminaStepReq::set_use_client_rot(bool value) {
  
  use_client_rot_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepReq.use_client_rot)
}

// .proto.Vector rot = 2;
inline bool SceneAvatarStaminaStepReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void SceneAvatarStaminaStepReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& SceneAvatarStaminaStepReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* SceneAvatarStaminaStepReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarStaminaStepReq.rot)
  return rot_;
}
inline ::proto::Vector* SceneAvatarStaminaStepReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarStaminaStepReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void SceneAvatarStaminaStepReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarStaminaStepReq.rot)
}

// -------------------------------------------------------------------

// SceneAvatarStaminaStepRsp

// int32 retcode = 1;
inline void SceneAvatarStaminaStepRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneAvatarStaminaStepRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.retcode)
  return retcode_;
}
inline void SceneAvatarStaminaStepRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepRsp.retcode)
}

// bool use_client_rot = 2;
inline void SceneAvatarStaminaStepRsp::clear_use_client_rot() {
  use_client_rot_ = false;
}
inline bool SceneAvatarStaminaStepRsp::use_client_rot() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.use_client_rot)
  return use_client_rot_;
}
inline void SceneAvatarStaminaStepRsp::set_use_client_rot(bool value) {
  
  use_client_rot_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepRsp.use_client_rot)
}

// .proto.Vector rot = 3;
inline bool SceneAvatarStaminaStepRsp::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void SceneAvatarStaminaStepRsp::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& SceneAvatarStaminaStepRsp::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* SceneAvatarStaminaStepRsp::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarStaminaStepRsp.rot)
  return rot_;
}
inline ::proto::Vector* SceneAvatarStaminaStepRsp::release_rot() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarStaminaStepRsp.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void SceneAvatarStaminaStepRsp::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarStaminaStepRsp.rot)
}

// -------------------------------------------------------------------

// SceneEntityMoveNotify

// uint32 entity_id = 1;
inline void SceneEntityMoveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.entity_id)
  return entity_id_;
}
inline void SceneEntityMoveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.entity_id)
}

// .proto.MotionInfo motion_info = 2;
inline bool SceneEntityMoveNotify::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void SceneEntityMoveNotify::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& SceneEntityMoveNotify::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* SceneEntityMoveNotify::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveNotify.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* SceneEntityMoveNotify::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveNotify.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void SceneEntityMoveNotify::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveNotify.motion_info)
}

// uint32 scene_time = 3;
inline void SceneEntityMoveNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.scene_time)
  return scene_time_;
}
inline void SceneEntityMoveNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.scene_time)
}

// uint32 reliable_seq = 4;
inline void SceneEntityMoveNotify::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityMoveNotify::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.reliable_seq)
  return reliable_seq_;
}
inline void SceneEntityMoveNotify::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.reliable_seq)
}

// -------------------------------------------------------------------

// ScenePlayerLocationNotify

// uint32 scene_id = 1;
inline void ScenePlayerLocationNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerLocationNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationNotify.scene_id)
  return scene_id_;
}
inline void ScenePlayerLocationNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerLocationNotify.scene_id)
}

// repeated .proto.PlayerLocationInfo player_loc_list = 2;
inline int ScenePlayerLocationNotify::player_loc_list_size() const {
  return player_loc_list_.size();
}
inline void ScenePlayerLocationNotify::clear_player_loc_list() {
  player_loc_list_.Clear();
}
inline const ::proto::PlayerLocationInfo& ScenePlayerLocationNotify::player_loc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Get(index);
}
inline ::proto::PlayerLocationInfo* ScenePlayerLocationNotify::mutable_player_loc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Mutable(index);
}
inline ::proto::PlayerLocationInfo* ScenePlayerLocationNotify::add_player_loc_list() {
  // @@protoc_insertion_point(field_add:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
ScenePlayerLocationNotify::mutable_player_loc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePlayerLocationNotify.player_loc_list)
  return &player_loc_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
ScenePlayerLocationNotify::player_loc_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_;
}

// -------------------------------------------------------------------

// GetScenePointReq

// uint32 scene_id = 1;
inline void GetScenePointReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointReq.scene_id)
  return scene_id_;
}
inline void GetScenePointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointReq.scene_id)
}

// uint32 belong_uid = 2;
inline void GetScenePointReq::clear_belong_uid() {
  belong_uid_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePointReq::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointReq.belong_uid)
  return belong_uid_;
}
inline void GetScenePointReq::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointReq.belong_uid)
}

// -------------------------------------------------------------------

// CityInfo

// uint32 city_id = 1;
inline void CityInfo::clear_city_id() {
  city_id_ = 0u;
}
inline ::google::protobuf::uint32 CityInfo::city_id() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.city_id)
  return city_id_;
}
inline void CityInfo::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.city_id)
}

// uint32 level = 2;
inline void CityInfo::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 CityInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.level)
  return level_;
}
inline void CityInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.level)
}

// uint32 crystal_num = 3;
inline void CityInfo::clear_crystal_num() {
  crystal_num_ = 0u;
}
inline ::google::protobuf::uint32 CityInfo::crystal_num() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.crystal_num)
  return crystal_num_;
}
inline void CityInfo::set_crystal_num(::google::protobuf::uint32 value) {
  
  crystal_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.crystal_num)
}

// -------------------------------------------------------------------

// GetScenePointRsp

// int32 retcode = 1;
inline void GetScenePointRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetScenePointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.retcode)
  return retcode_;
}
inline void GetScenePointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.retcode)
}

// uint32 scene_id = 2;
inline void GetScenePointRsp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePointRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.scene_id)
  return scene_id_;
}
inline void GetScenePointRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.scene_id)
}

// repeated uint32 unlocked_point_list = 3;
inline int GetScenePointRsp::unlocked_point_list_size() const {
  return unlocked_point_list_.size();
}
inline void GetScenePointRsp::clear_unlocked_point_list() {
  unlocked_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::unlocked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlocked_point_list)
  return unlocked_point_list_.Get(index);
}
inline void GetScenePointRsp::set_unlocked_point_list(int index, ::google::protobuf::uint32 value) {
  unlocked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlocked_point_list)
}
inline void GetScenePointRsp::add_unlocked_point_list(::google::protobuf::uint32 value) {
  unlocked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlocked_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlocked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlocked_point_list)
  return unlocked_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlocked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlocked_point_list)
  return &unlocked_point_list_;
}

// uint32 belong_uid = 4;
inline void GetScenePointRsp::clear_belong_uid() {
  belong_uid_ = 0u;
}
inline ::google::protobuf::uint32 GetScenePointRsp::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.belong_uid)
  return belong_uid_;
}
inline void GetScenePointRsp::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.belong_uid)
}

// repeated uint32 unlock_area_list = 5;
inline int GetScenePointRsp::unlock_area_list_size() const {
  return unlock_area_list_.size();
}
inline void GetScenePointRsp::clear_unlock_area_list() {
  unlock_area_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::unlock_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlock_area_list)
  return unlock_area_list_.Get(index);
}
inline void GetScenePointRsp::set_unlock_area_list(int index, ::google::protobuf::uint32 value) {
  unlock_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlock_area_list)
}
inline void GetScenePointRsp::add_unlock_area_list(::google::protobuf::uint32 value) {
  unlock_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlock_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlock_area_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlock_area_list)
  return unlock_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlock_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlock_area_list)
  return &unlock_area_list_;
}

// repeated uint32 locked_point_list = 6;
inline int GetScenePointRsp::locked_point_list_size() const {
  return locked_point_list_.size();
}
inline void GetScenePointRsp::clear_locked_point_list() {
  locked_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::locked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.locked_point_list)
  return locked_point_list_.Get(index);
}
inline void GetScenePointRsp::set_locked_point_list(int index, ::google::protobuf::uint32 value) {
  locked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.locked_point_list)
}
inline void GetScenePointRsp::add_locked_point_list(::google::protobuf::uint32 value) {
  locked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.locked_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::locked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.locked_point_list)
  return locked_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_locked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.locked_point_list)
  return &locked_point_list_;
}

// repeated uint32 to_be_explore_dungeon_entry_list = 7;
inline int GetScenePointRsp::to_be_explore_dungeon_entry_list_size() const {
  return to_be_explore_dungeon_entry_list_.size();
}
inline void GetScenePointRsp::clear_to_be_explore_dungeon_entry_list() {
  to_be_explore_dungeon_entry_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::to_be_explore_dungeon_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return to_be_explore_dungeon_entry_list_.Get(index);
}
inline void GetScenePointRsp::set_to_be_explore_dungeon_entry_list(int index, ::google::protobuf::uint32 value) {
  to_be_explore_dungeon_entry_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
}
inline void GetScenePointRsp::add_to_be_explore_dungeon_entry_list(::google::protobuf::uint32 value) {
  to_be_explore_dungeon_entry_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::to_be_explore_dungeon_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return to_be_explore_dungeon_entry_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_to_be_explore_dungeon_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return &to_be_explore_dungeon_entry_list_;
}

// repeated uint32 not_explored_dungeon_entry_list = 8;
inline int GetScenePointRsp::not_explored_dungeon_entry_list_size() const {
  return not_explored_dungeon_entry_list_.size();
}
inline void GetScenePointRsp::clear_not_explored_dungeon_entry_list() {
  not_explored_dungeon_entry_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::not_explored_dungeon_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return not_explored_dungeon_entry_list_.Get(index);
}
inline void GetScenePointRsp::set_not_explored_dungeon_entry_list(int index, ::google::protobuf::uint32 value) {
  not_explored_dungeon_entry_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
}
inline void GetScenePointRsp::add_not_explored_dungeon_entry_list(::google::protobuf::uint32 value) {
  not_explored_dungeon_entry_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::not_explored_dungeon_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return not_explored_dungeon_entry_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_not_explored_dungeon_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return &not_explored_dungeon_entry_list_;
}

// repeated uint32 group_unlimit_point_list = 9;
inline int GetScenePointRsp::group_unlimit_point_list_size() const {
  return group_unlimit_point_list_.size();
}
inline void GetScenePointRsp::clear_group_unlimit_point_list() {
  group_unlimit_point_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::group_unlimit_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.group_unlimit_point_list)
  return group_unlimit_point_list_.Get(index);
}
inline void GetScenePointRsp::set_group_unlimit_point_list(int index, ::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.group_unlimit_point_list)
}
inline void GetScenePointRsp::add_group_unlimit_point_list(::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.group_unlimit_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::group_unlimit_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.group_unlimit_point_list)
  return group_unlimit_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_group_unlimit_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.group_unlimit_point_list)
  return &group_unlimit_point_list_;
}

// repeated uint32 unlocked_fog_level_1_area_list = 10;
inline int GetScenePointRsp::unlocked_fog_level_1_area_list_size() const {
  return unlocked_fog_level_1_area_list_.size();
}
inline void GetScenePointRsp::clear_unlocked_fog_level_1_area_list() {
  unlocked_fog_level_1_area_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::unlocked_fog_level_1_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
  return unlocked_fog_level_1_area_list_.Get(index);
}
inline void GetScenePointRsp::set_unlocked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value) {
  unlocked_fog_level_1_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
}
inline void GetScenePointRsp::add_unlocked_fog_level_1_area_list(::google::protobuf::uint32 value) {
  unlocked_fog_level_1_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlocked_fog_level_1_area_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
  return unlocked_fog_level_1_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlocked_fog_level_1_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
  return &unlocked_fog_level_1_area_list_;
}

// repeated uint32 unlokced_fog_level_2_area_list = 11;
inline int GetScenePointRsp::unlokced_fog_level_2_area_list_size() const {
  return unlokced_fog_level_2_area_list_.size();
}
inline void GetScenePointRsp::clear_unlokced_fog_level_2_area_list() {
  unlokced_fog_level_2_area_list_.Clear();
}
inline ::google::protobuf::uint32 GetScenePointRsp::unlokced_fog_level_2_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
  return unlokced_fog_level_2_area_list_.Get(index);
}
inline void GetScenePointRsp::set_unlokced_fog_level_2_area_list(int index, ::google::protobuf::uint32 value) {
  unlokced_fog_level_2_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
}
inline void GetScenePointRsp::add_unlokced_fog_level_2_area_list(::google::protobuf::uint32 value) {
  unlokced_fog_level_2_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlokced_fog_level_2_area_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
  return unlokced_fog_level_2_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlokced_fog_level_2_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
  return &unlokced_fog_level_2_area_list_;
}

// -------------------------------------------------------------------

// EnterTransPointRegionNotify

// uint32 scene_id = 1;
inline void EnterTransPointRegionNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterTransPointRegionNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterTransPointRegionNotify.scene_id)
  return scene_id_;
}
inline void EnterTransPointRegionNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterTransPointRegionNotify.scene_id)
}

// uint32 point_id = 2;
inline void EnterTransPointRegionNotify::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterTransPointRegionNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterTransPointRegionNotify.point_id)
  return point_id_;
}
inline void EnterTransPointRegionNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterTransPointRegionNotify.point_id)
}

// -------------------------------------------------------------------

// ExitTransPointRegionNotify

// uint32 scene_id = 1;
inline void ExitTransPointRegionNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ExitTransPointRegionNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitTransPointRegionNotify.scene_id)
  return scene_id_;
}
inline void ExitTransPointRegionNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitTransPointRegionNotify.scene_id)
}

// uint32 point_id = 2;
inline void ExitTransPointRegionNotify::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 ExitTransPointRegionNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitTransPointRegionNotify.point_id)
  return point_id_;
}
inline void ExitTransPointRegionNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitTransPointRegionNotify.point_id)
}

// -------------------------------------------------------------------

// ScenePointUnlockNotify

// uint32 scene_id = 1;
inline void ScenePointUnlockNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ScenePointUnlockNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.scene_id)
  return scene_id_;
}
inline void ScenePointUnlockNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.scene_id)
}

// repeated uint32 point_list = 2;
inline int ScenePointUnlockNotify::point_list_size() const {
  return point_list_.size();
}
inline void ScenePointUnlockNotify::clear_point_list() {
  point_list_.Clear();
}
inline ::google::protobuf::uint32 ScenePointUnlockNotify::point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.point_list)
  return point_list_.Get(index);
}
inline void ScenePointUnlockNotify::set_point_list(int index, ::google::protobuf::uint32 value) {
  point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.point_list)
}
inline void ScenePointUnlockNotify::add_point_list(::google::protobuf::uint32 value) {
  point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ScenePointUnlockNotify.point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePointUnlockNotify::point_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePointUnlockNotify.point_list)
  return point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePointUnlockNotify::mutable_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePointUnlockNotify.point_list)
  return &point_list_;
}

// repeated uint32 locked_point_list = 3;
inline int ScenePointUnlockNotify::locked_point_list_size() const {
  return locked_point_list_.size();
}
inline void ScenePointUnlockNotify::clear_locked_point_list() {
  locked_point_list_.Clear();
}
inline ::google::protobuf::uint32 ScenePointUnlockNotify::locked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.locked_point_list)
  return locked_point_list_.Get(index);
}
inline void ScenePointUnlockNotify::set_locked_point_list(int index, ::google::protobuf::uint32 value) {
  locked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.locked_point_list)
}
inline void ScenePointUnlockNotify::add_locked_point_list(::google::protobuf::uint32 value) {
  locked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ScenePointUnlockNotify.locked_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePointUnlockNotify::locked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePointUnlockNotify.locked_point_list)
  return locked_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePointUnlockNotify::mutable_locked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePointUnlockNotify.locked_point_list)
  return &locked_point_list_;
}

// -------------------------------------------------------------------

// SceneTransToPointReq

// uint32 scene_id = 1;
inline void SceneTransToPointReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTransToPointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointReq.scene_id)
  return scene_id_;
}
inline void SceneTransToPointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointReq.scene_id)
}

// uint32 point_id = 2;
inline void SceneTransToPointReq::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTransToPointReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointReq.point_id)
  return point_id_;
}
inline void SceneTransToPointReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointReq.point_id)
}

// -------------------------------------------------------------------

// SceneTransToPointRsp

// int32 retcode = 1;
inline void SceneTransToPointRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneTransToPointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.retcode)
  return retcode_;
}
inline void SceneTransToPointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.retcode)
}

// uint32 scene_id = 2;
inline void SceneTransToPointRsp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTransToPointRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.scene_id)
  return scene_id_;
}
inline void SceneTransToPointRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.scene_id)
}

// uint32 point_id = 3;
inline void SceneTransToPointRsp::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTransToPointRsp::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.point_id)
  return point_id_;
}
inline void SceneTransToPointRsp::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.point_id)
}

// -------------------------------------------------------------------

// EntityJumpNotify

// uint32 entity_id = 1;
inline void EntityJumpNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityJumpNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.entity_id)
  return entity_id_;
}
inline void EntityJumpNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityJumpNotify.entity_id)
}

// .proto.EntityJumpNotify.Type jump_type = 2;
inline void EntityJumpNotify::clear_jump_type() {
  jump_type_ = 0;
}
inline ::proto::EntityJumpNotify_Type EntityJumpNotify::jump_type() const {
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.jump_type)
  return static_cast< ::proto::EntityJumpNotify_Type >(jump_type_);
}
inline void EntityJumpNotify::set_jump_type(::proto::EntityJumpNotify_Type value) {
  
  jump_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityJumpNotify.jump_type)
}

// .proto.Vector pos = 3;
inline bool EntityJumpNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void EntityJumpNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& EntityJumpNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EntityJumpNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityJumpNotify.pos)
  return pos_;
}
inline ::proto::Vector* EntityJumpNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.EntityJumpNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void EntityJumpNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityJumpNotify.pos)
}

// .proto.Vector rot = 4;
inline bool EntityJumpNotify::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void EntityJumpNotify::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& EntityJumpNotify::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* EntityJumpNotify::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityJumpNotify.rot)
  return rot_;
}
inline ::proto::Vector* EntityJumpNotify::release_rot() {
  // @@protoc_insertion_point(field_release:proto.EntityJumpNotify.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void EntityJumpNotify::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityJumpNotify.rot)
}

// -------------------------------------------------------------------

// GetSceneAreaReq

// uint32 scene_id = 1;
inline void GetSceneAreaReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetSceneAreaReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaReq.scene_id)
  return scene_id_;
}
inline void GetSceneAreaReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaReq.scene_id)
}

// uint32 belong_uid = 2;
inline void GetSceneAreaReq::clear_belong_uid() {
  belong_uid_ = 0u;
}
inline ::google::protobuf::uint32 GetSceneAreaReq::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaReq.belong_uid)
  return belong_uid_;
}
inline void GetSceneAreaReq::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaReq.belong_uid)
}

// -------------------------------------------------------------------

// GetSceneAreaRsp

// int32 retcode = 1;
inline void GetSceneAreaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetSceneAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.retcode)
  return retcode_;
}
inline void GetSceneAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.retcode)
}

// uint32 scene_id = 2;
inline void GetSceneAreaRsp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetSceneAreaRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.scene_id)
  return scene_id_;
}
inline void GetSceneAreaRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.scene_id)
}

// repeated uint32 area_id_list = 3;
inline int GetSceneAreaRsp::area_id_list_size() const {
  return area_id_list_.size();
}
inline void GetSceneAreaRsp::clear_area_id_list() {
  area_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetSceneAreaRsp::area_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.area_id_list)
  return area_id_list_.Get(index);
}
inline void GetSceneAreaRsp::set_area_id_list(int index, ::google::protobuf::uint32 value) {
  area_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.area_id_list)
}
inline void GetSceneAreaRsp::add_area_id_list(::google::protobuf::uint32 value) {
  area_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetSceneAreaRsp.area_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetSceneAreaRsp::area_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetSceneAreaRsp.area_id_list)
  return area_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetSceneAreaRsp::mutable_area_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetSceneAreaRsp.area_id_list)
  return &area_id_list_;
}

// repeated .proto.CityInfo city_info_list = 4;
inline int GetSceneAreaRsp::city_info_list_size() const {
  return city_info_list_.size();
}
inline void GetSceneAreaRsp::clear_city_info_list() {
  city_info_list_.Clear();
}
inline const ::proto::CityInfo& GetSceneAreaRsp::city_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Get(index);
}
inline ::proto::CityInfo* GetSceneAreaRsp::mutable_city_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Mutable(index);
}
inline ::proto::CityInfo* GetSceneAreaRsp::add_city_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >*
GetSceneAreaRsp::mutable_city_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetSceneAreaRsp.city_info_list)
  return &city_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >&
GetSceneAreaRsp::city_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_;
}

// -------------------------------------------------------------------

// SceneAreaUnlockNotify

// uint32 scene_id = 1;
inline void SceneAreaUnlockNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaUnlockNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaUnlockNotify.scene_id)
  return scene_id_;
}
inline void SceneAreaUnlockNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaUnlockNotify.scene_id)
}

// repeated uint32 area_list = 2;
inline int SceneAreaUnlockNotify::area_list_size() const {
  return area_list_.size();
}
inline void SceneAreaUnlockNotify::clear_area_list() {
  area_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAreaUnlockNotify::area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaUnlockNotify.area_list)
  return area_list_.Get(index);
}
inline void SceneAreaUnlockNotify::set_area_list(int index, ::google::protobuf::uint32 value) {
  area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAreaUnlockNotify.area_list)
}
inline void SceneAreaUnlockNotify::add_area_list(::google::protobuf::uint32 value) {
  area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAreaUnlockNotify.area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAreaUnlockNotify::area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAreaUnlockNotify.area_list)
  return area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAreaUnlockNotify::mutable_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAreaUnlockNotify.area_list)
  return &area_list_;
}

// -------------------------------------------------------------------

// SceneEntityDrownReq

// uint32 entity_id = 1;
inline void SceneEntityDrownReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityDrownReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownReq.entity_id)
  return entity_id_;
}
inline void SceneEntityDrownReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownReq.entity_id)
}

// -------------------------------------------------------------------

// SceneEntityDrownRsp

// int32 retcode = 1;
inline void SceneEntityDrownRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneEntityDrownRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownRsp.retcode)
  return retcode_;
}
inline void SceneEntityDrownRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownRsp.retcode)
}

// uint32 entity_id = 2;
inline void SceneEntityDrownRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneEntityDrownRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownRsp.entity_id)
  return entity_id_;
}
inline void SceneEntityDrownRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownRsp.entity_id)
}

// -------------------------------------------------------------------

// SceneCreateEntityReq

// .proto.CreateEntityInfo entity = 1;
inline bool SceneCreateEntityReq::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline void SceneCreateEntityReq::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
inline const ::proto::CreateEntityInfo& SceneCreateEntityReq::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
inline ::proto::CreateEntityInfo* SceneCreateEntityReq::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneCreateEntityReq.entity)
  return entity_;
}
inline ::proto::CreateEntityInfo* SceneCreateEntityReq::release_entity() {
  // @@protoc_insertion_point(field_release:proto.SceneCreateEntityReq.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline void SceneCreateEntityReq::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneCreateEntityReq.entity)
}

// .proto.CreateReason reason = 2;
inline void SceneCreateEntityReq::clear_reason() {
  reason_ = 0;
}
inline ::proto::CreateReason SceneCreateEntityReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.reason)
  return static_cast< ::proto::CreateReason >(reason_);
}
inline void SceneCreateEntityReq::set_reason(::proto::CreateReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityReq.reason)
}

// bool is_destroy_when_disconnect = 3;
inline void SceneCreateEntityReq::clear_is_destroy_when_disconnect() {
  is_destroy_when_disconnect_ = false;
}
inline bool SceneCreateEntityReq::is_destroy_when_disconnect() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.is_destroy_when_disconnect)
  return is_destroy_when_disconnect_;
}
inline void SceneCreateEntityReq::set_is_destroy_when_disconnect(bool value) {
  
  is_destroy_when_disconnect_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityReq.is_destroy_when_disconnect)
}

// -------------------------------------------------------------------

// SceneCreateEntityRsp

// int32 retcode = 1;
inline void SceneCreateEntityRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneCreateEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.retcode)
  return retcode_;
}
inline void SceneCreateEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityRsp.retcode)
}

// uint32 entity_id = 2;
inline void SceneCreateEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneCreateEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.entity_id)
  return entity_id_;
}
inline void SceneCreateEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityRsp.entity_id)
}

// .proto.CreateEntityInfo entity = 3;
inline bool SceneCreateEntityRsp::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline void SceneCreateEntityRsp::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
inline const ::proto::CreateEntityInfo& SceneCreateEntityRsp::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
inline ::proto::CreateEntityInfo* SceneCreateEntityRsp::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneCreateEntityRsp.entity)
  return entity_;
}
inline ::proto::CreateEntityInfo* SceneCreateEntityRsp::release_entity() {
  // @@protoc_insertion_point(field_release:proto.SceneCreateEntityRsp.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline void SceneCreateEntityRsp::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneCreateEntityRsp.entity)
}

// -------------------------------------------------------------------

// SceneDestroyEntityReq

// uint32 entity_id = 1;
inline void SceneDestroyEntityReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneDestroyEntityReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityReq.entity_id)
  return entity_id_;
}
inline void SceneDestroyEntityReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityReq.entity_id)
}

// -------------------------------------------------------------------

// SceneDestroyEntityRsp

// int32 retcode = 1;
inline void SceneDestroyEntityRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneDestroyEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityRsp.retcode)
  return retcode_;
}
inline void SceneDestroyEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityRsp.retcode)
}

// uint32 entity_id = 2;
inline void SceneDestroyEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneDestroyEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityRsp.entity_id)
  return entity_id_;
}
inline void SceneDestroyEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityRsp.entity_id)
}

// -------------------------------------------------------------------

// SceneForceUnlockNotify

// repeated uint32 force_id_list = 1;
inline int SceneForceUnlockNotify::force_id_list_size() const {
  return force_id_list_.size();
}
inline void SceneForceUnlockNotify::clear_force_id_list() {
  force_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneForceUnlockNotify::force_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneForceUnlockNotify.force_id_list)
  return force_id_list_.Get(index);
}
inline void SceneForceUnlockNotify::set_force_id_list(int index, ::google::protobuf::uint32 value) {
  force_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneForceUnlockNotify.force_id_list)
}
inline void SceneForceUnlockNotify::add_force_id_list(::google::protobuf::uint32 value) {
  force_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneForceUnlockNotify.force_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneForceUnlockNotify::force_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneForceUnlockNotify.force_id_list)
  return force_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneForceUnlockNotify::mutable_force_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneForceUnlockNotify.force_id_list)
  return &force_id_list_;
}

// bool is_add = 2;
inline void SceneForceUnlockNotify::clear_is_add() {
  is_add_ = false;
}
inline bool SceneForceUnlockNotify::is_add() const {
  // @@protoc_insertion_point(field_get:proto.SceneForceUnlockNotify.is_add)
  return is_add_;
}
inline void SceneForceUnlockNotify::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneForceUnlockNotify.is_add)
}

// -------------------------------------------------------------------

// SceneForceLockNotify

// repeated uint32 force_id_list = 1;
inline int SceneForceLockNotify::force_id_list_size() const {
  return force_id_list_.size();
}
inline void SceneForceLockNotify::clear_force_id_list() {
  force_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneForceLockNotify::force_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneForceLockNotify.force_id_list)
  return force_id_list_.Get(index);
}
inline void SceneForceLockNotify::set_force_id_list(int index, ::google::protobuf::uint32 value) {
  force_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneForceLockNotify.force_id_list)
}
inline void SceneForceLockNotify::add_force_id_list(::google::protobuf::uint32 value) {
  force_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneForceLockNotify.force_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneForceLockNotify::force_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneForceLockNotify.force_id_list)
  return force_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneForceLockNotify::mutable_force_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneForceLockNotify.force_id_list)
  return &force_id_list_;
}

// -------------------------------------------------------------------

// EnterWorldAreaReq

// uint32 area_type = 1;
inline void EnterWorldAreaReq::clear_area_type() {
  area_type_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldAreaReq::area_type() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaReq.area_type)
  return area_type_;
}
inline void EnterWorldAreaReq::set_area_type(::google::protobuf::uint32 value) {
  
  area_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaReq.area_type)
}

// uint32 area_id = 2;
inline void EnterWorldAreaReq::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldAreaReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaReq.area_id)
  return area_id_;
}
inline void EnterWorldAreaReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaReq.area_id)
}

// -------------------------------------------------------------------

// EnterWorldAreaRsp

// int32 retcode = 1;
inline void EnterWorldAreaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EnterWorldAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.retcode)
  return retcode_;
}
inline void EnterWorldAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.retcode)
}

// uint32 area_type = 2;
inline void EnterWorldAreaRsp::clear_area_type() {
  area_type_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldAreaRsp::area_type() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.area_type)
  return area_type_;
}
inline void EnterWorldAreaRsp::set_area_type(::google::protobuf::uint32 value) {
  
  area_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.area_type)
}

// uint32 area_id = 3;
inline void EnterWorldAreaRsp::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldAreaRsp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.area_id)
  return area_id_;
}
inline void EnterWorldAreaRsp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.area_id)
}

// -------------------------------------------------------------------

// EntityForceSyncReq

// uint32 entity_id = 1;
inline void EntityForceSyncReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.entity_id)
  return entity_id_;
}
inline void EntityForceSyncReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.entity_id)
}

// .proto.MotionInfo motion_info = 2;
inline bool EntityForceSyncReq::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void EntityForceSyncReq::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& EntityForceSyncReq::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* EntityForceSyncReq::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityForceSyncReq.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* EntityForceSyncReq::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.EntityForceSyncReq.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void EntityForceSyncReq::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityForceSyncReq.motion_info)
}

// uint32 scene_time = 3;
inline void EntityForceSyncReq::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncReq::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.scene_time)
  return scene_time_;
}
inline void EntityForceSyncReq::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.scene_time)
}

// uint32 room_id = 4;
inline void EntityForceSyncReq::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncReq::room_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.room_id)
  return room_id_;
}
inline void EntityForceSyncReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.room_id)
}

// -------------------------------------------------------------------

// EntityForceSyncRsp

// int32 retcode = 1;
inline void EntityForceSyncRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EntityForceSyncRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.retcode)
  return retcode_;
}
inline void EntityForceSyncRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.retcode)
}

// uint32 entity_id = 2;
inline void EntityForceSyncRsp::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.entity_id)
  return entity_id_;
}
inline void EntityForceSyncRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.entity_id)
}

// .proto.MotionInfo fail_motion = 3;
inline bool EntityForceSyncRsp::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
inline void EntityForceSyncRsp::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
inline const ::proto::MotionInfo& EntityForceSyncRsp::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* EntityForceSyncRsp::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityForceSyncRsp.fail_motion)
  return fail_motion_;
}
inline ::proto::MotionInfo* EntityForceSyncRsp::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.EntityForceSyncRsp.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
inline void EntityForceSyncRsp::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityForceSyncRsp.fail_motion)
}

// uint32 scene_time = 4;
inline void EntityForceSyncRsp::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityForceSyncRsp::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.scene_time)
  return scene_time_;
}
inline void EntityForceSyncRsp::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.scene_time)
}

// -------------------------------------------------------------------

// SceneAreaExploreNotify

// uint32 area_id = 1;
inline void SceneAreaExploreNotify::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaExploreNotify::area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaExploreNotify.area_id)
  return area_id_;
}
inline void SceneAreaExploreNotify::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaExploreNotify.area_id)
}

// float explore_percent = 2;
inline void SceneAreaExploreNotify::clear_explore_percent() {
  explore_percent_ = 0;
}
inline float SceneAreaExploreNotify::explore_percent() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaExploreNotify.explore_percent)
  return explore_percent_;
}
inline void SceneAreaExploreNotify::set_explore_percent(float value) {
  
  explore_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaExploreNotify.explore_percent)
}

// uint32 event_id = 3;
inline void SceneAreaExploreNotify::clear_event_id() {
  event_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaExploreNotify::event_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaExploreNotify.event_id)
  return event_id_;
}
inline void SceneAreaExploreNotify::set_event_id(::google::protobuf::uint32 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaExploreNotify.event_id)
}

// -------------------------------------------------------------------

// SceneGetAreaExplorePercentReq

// uint32 area_id = 1;
inline void SceneGetAreaExplorePercentReq::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGetAreaExplorePercentReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGetAreaExplorePercentReq.area_id)
  return area_id_;
}
inline void SceneGetAreaExplorePercentReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGetAreaExplorePercentReq.area_id)
}

// -------------------------------------------------------------------

// SceneGetAreaExplorePercentRsp

// int32 retcode = 1;
inline void SceneGetAreaExplorePercentRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneGetAreaExplorePercentRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneGetAreaExplorePercentRsp.retcode)
  return retcode_;
}
inline void SceneGetAreaExplorePercentRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGetAreaExplorePercentRsp.retcode)
}

// float explore_percent = 2;
inline void SceneGetAreaExplorePercentRsp::clear_explore_percent() {
  explore_percent_ = 0;
}
inline float SceneGetAreaExplorePercentRsp::explore_percent() const {
  // @@protoc_insertion_point(field_get:proto.SceneGetAreaExplorePercentRsp.explore_percent)
  return explore_percent_;
}
inline void SceneGetAreaExplorePercentRsp::set_explore_percent(float value) {
  
  explore_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGetAreaExplorePercentRsp.explore_percent)
}

// uint32 area_id = 3;
inline void SceneGetAreaExplorePercentRsp::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneGetAreaExplorePercentRsp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGetAreaExplorePercentRsp.area_id)
  return area_id_;
}
inline void SceneGetAreaExplorePercentRsp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGetAreaExplorePercentRsp.area_id)
}

// -------------------------------------------------------------------

// ClientTransmitReq

// .proto.Vector pos = 1;
inline bool ClientTransmitReq::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void ClientTransmitReq::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& ClientTransmitReq::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ClientTransmitReq::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientTransmitReq.pos)
  return pos_;
}
inline ::proto::Vector* ClientTransmitReq::release_pos() {
  // @@protoc_insertion_point(field_release:proto.ClientTransmitReq.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ClientTransmitReq::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientTransmitReq.pos)
}

// .proto.Vector rot = 2;
inline bool ClientTransmitReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void ClientTransmitReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& ClientTransmitReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ClientTransmitReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientTransmitReq.rot)
  return rot_;
}
inline ::proto::Vector* ClientTransmitReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.ClientTransmitReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void ClientTransmitReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientTransmitReq.rot)
}

// .proto.TransmitReason reason = 3;
inline void ClientTransmitReq::clear_reason() {
  reason_ = 0;
}
inline ::proto::TransmitReason ClientTransmitReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.reason)
  return static_cast< ::proto::TransmitReason >(reason_);
}
inline void ClientTransmitReq::set_reason(::proto::TransmitReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitReq.reason)
}

// uint32 scene_id = 4;
inline void ClientTransmitReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientTransmitReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.scene_id)
  return scene_id_;
}
inline void ClientTransmitReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitReq.scene_id)
}

// -------------------------------------------------------------------

// ClientTransmitRsp

// int32 retcode = 1;
inline void ClientTransmitRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ClientTransmitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitRsp.retcode)
  return retcode_;
}
inline void ClientTransmitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitRsp.retcode)
}

// .proto.TransmitReason reason = 2;
inline void ClientTransmitRsp::clear_reason() {
  reason_ = 0;
}
inline ::proto::TransmitReason ClientTransmitRsp::reason() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitRsp.reason)
  return static_cast< ::proto::TransmitReason >(reason_);
}
inline void ClientTransmitRsp::set_reason(::proto::TransmitReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitRsp.reason)
}

// -------------------------------------------------------------------

// EnterSceneWeatherAreaNotify

// uint32 weather_gadget_id = 1;
inline void EnterSceneWeatherAreaNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterSceneWeatherAreaNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneWeatherAreaNotify.weather_gadget_id)
  return weather_gadget_id_;
}
inline void EnterSceneWeatherAreaNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneWeatherAreaNotify.weather_gadget_id)
}

// -------------------------------------------------------------------

// ExitSceneWeatherAreaNotify

// uint32 weather_gadget_id = 1;
inline void ExitSceneWeatherAreaNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 ExitSceneWeatherAreaNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitSceneWeatherAreaNotify.weather_gadget_id)
  return weather_gadget_id_;
}
inline void ExitSceneWeatherAreaNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitSceneWeatherAreaNotify.weather_gadget_id)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneAreaWeatherNotify

// uint32 weather_gadget_id = 1;
inline void SceneAreaWeatherNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaWeatherNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.weather_gadget_id)
  return weather_gadget_id_;
}
inline void SceneAreaWeatherNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.weather_gadget_id)
}

// map<uint32, string> weather_value_map = 2;
inline int SceneAreaWeatherNotify::weather_value_map_size() const {
  return weather_value_map_.size();
}
inline void SceneAreaWeatherNotify::clear_weather_value_map() {
  weather_value_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
SceneAreaWeatherNotify::weather_value_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAreaWeatherNotify.weather_value_map)
  return weather_value_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
SceneAreaWeatherNotify::mutable_weather_value_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAreaWeatherNotify.weather_value_map)
  return weather_value_map_.MutableMap();
}

// uint32 weather_area_id = 3;
inline void SceneAreaWeatherNotify::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaWeatherNotify::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.weather_area_id)
  return weather_area_id_;
}
inline void SceneAreaWeatherNotify::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.weather_area_id)
}

// uint32 climate_type = 4;
inline void SceneAreaWeatherNotify::clear_climate_type() {
  climate_type_ = 0u;
}
inline ::google::protobuf::uint32 SceneAreaWeatherNotify::climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.climate_type)
  return climate_type_;
}
inline void SceneAreaWeatherNotify::set_climate_type(::google::protobuf::uint32 value) {
  
  climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.climate_type)
}

// -------------------------------------------------------------------

// ScenePlayerInfo

// uint32 uid = 1;
inline void ScenePlayerInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.uid)
  return uid_;
}
inline void ScenePlayerInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.uid)
}

// uint32 peer_id = 2;
inline void ScenePlayerInfo::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerInfo::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.peer_id)
  return peer_id_;
}
inline void ScenePlayerInfo::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.peer_id)
}

// string name = 3;
inline void ScenePlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScenePlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.name)
  return name_.GetNoArena();
}
inline void ScenePlayerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.name)
}
#if LANG_CXX11
inline void ScenePlayerInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ScenePlayerInfo.name)
}
#endif
inline void ScenePlayerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ScenePlayerInfo.name)
}
inline void ScenePlayerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ScenePlayerInfo.name)
}
inline ::std::string* ScenePlayerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScenePlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScenePlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerInfo.name)
}

// bool is_connected = 4;
inline void ScenePlayerInfo::clear_is_connected() {
  is_connected_ = false;
}
inline bool ScenePlayerInfo::is_connected() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.is_connected)
  return is_connected_;
}
inline void ScenePlayerInfo::set_is_connected(bool value) {
  
  is_connected_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.is_connected)
}

// uint32 scene_id = 5;
inline void ScenePlayerInfo::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ScenePlayerInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.scene_id)
  return scene_id_;
}
inline void ScenePlayerInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.scene_id)
}

// .proto.OnlinePlayerInfo online_player_info = 6;
inline bool ScenePlayerInfo::has_online_player_info() const {
  return this != internal_default_instance() && online_player_info_ != NULL;
}
inline void ScenePlayerInfo::clear_online_player_info() {
  if (GetArenaNoVirtual() == NULL && online_player_info_ != NULL) delete online_player_info_;
  online_player_info_ = NULL;
}
inline const ::proto::OnlinePlayerInfo& ScenePlayerInfo::online_player_info() const {
  const ::proto::OnlinePlayerInfo* p = online_player_info_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.online_player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
inline ::proto::OnlinePlayerInfo* ScenePlayerInfo::mutable_online_player_info() {
  
  if (online_player_info_ == NULL) {
    online_player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfo.online_player_info)
  return online_player_info_;
}
inline ::proto::OnlinePlayerInfo* ScenePlayerInfo::release_online_player_info() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerInfo.online_player_info)
  
  ::proto::OnlinePlayerInfo* temp = online_player_info_;
  online_player_info_ = NULL;
  return temp;
}
inline void ScenePlayerInfo::set_allocated_online_player_info(::proto::OnlinePlayerInfo* online_player_info) {
  delete online_player_info_;
  online_player_info_ = online_player_info;
  if (online_player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerInfo.online_player_info)
}

// -------------------------------------------------------------------

// ScenePlayerInfoNotify

// repeated .proto.ScenePlayerInfo player_info_list = 1;
inline int ScenePlayerInfoNotify::player_info_list_size() const {
  return player_info_list_.size();
}
inline void ScenePlayerInfoNotify::clear_player_info_list() {
  player_info_list_.Clear();
}
inline const ::proto::ScenePlayerInfo& ScenePlayerInfoNotify::player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Get(index);
}
inline ::proto::ScenePlayerInfo* ScenePlayerInfoNotify::mutable_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Mutable(index);
}
inline ::proto::ScenePlayerInfo* ScenePlayerInfoNotify::add_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >*
ScenePlayerInfoNotify::mutable_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePlayerInfoNotify.player_info_list)
  return &player_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >&
ScenePlayerInfoNotify::player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_;
}

// -------------------------------------------------------------------

// PlayerLocationInfo

// uint32 uid = 1;
inline void PlayerLocationInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLocationInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.uid)
  return uid_;
}
inline void PlayerLocationInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLocationInfo.uid)
}

// .proto.Vector pos = 2;
inline bool PlayerLocationInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PlayerLocationInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& PlayerLocationInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerLocationInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLocationInfo.pos)
  return pos_;
}
inline ::proto::Vector* PlayerLocationInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerLocationInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlayerLocationInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLocationInfo.pos)
}

// .proto.Vector rot = 3;
inline bool PlayerLocationInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void PlayerLocationInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& PlayerLocationInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlayerLocationInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLocationInfo.rot)
  return rot_;
}
inline ::proto::Vector* PlayerLocationInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.PlayerLocationInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void PlayerLocationInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLocationInfo.rot)
}

// -------------------------------------------------------------------

// WorldPlayerLocationNotify

// repeated .proto.PlayerLocationInfo player_loc_list = 1;
inline int WorldPlayerLocationNotify::player_loc_list_size() const {
  return player_loc_list_.size();
}
inline void WorldPlayerLocationNotify::clear_player_loc_list() {
  player_loc_list_.Clear();
}
inline const ::proto::PlayerLocationInfo& WorldPlayerLocationNotify::player_loc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Get(index);
}
inline ::proto::PlayerLocationInfo* WorldPlayerLocationNotify::mutable_player_loc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Mutable(index);
}
inline ::proto::PlayerLocationInfo* WorldPlayerLocationNotify::add_player_loc_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
WorldPlayerLocationNotify::mutable_player_loc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerLocationNotify.player_loc_list)
  return &player_loc_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
WorldPlayerLocationNotify::player_loc_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_;
}

// -------------------------------------------------------------------

// BeginCameraSceneLookNotify

// .proto.Vector look_pos = 1;
inline bool BeginCameraSceneLookNotify::has_look_pos() const {
  return this != internal_default_instance() && look_pos_ != NULL;
}
inline void BeginCameraSceneLookNotify::clear_look_pos() {
  if (GetArenaNoVirtual() == NULL && look_pos_ != NULL) delete look_pos_;
  look_pos_ = NULL;
}
inline const ::proto::Vector& BeginCameraSceneLookNotify::look_pos() const {
  const ::proto::Vector* p = look_pos_;
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.look_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* BeginCameraSceneLookNotify::mutable_look_pos() {
  
  if (look_pos_ == NULL) {
    look_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.BeginCameraSceneLookNotify.look_pos)
  return look_pos_;
}
inline ::proto::Vector* BeginCameraSceneLookNotify::release_look_pos() {
  // @@protoc_insertion_point(field_release:proto.BeginCameraSceneLookNotify.look_pos)
  
  ::proto::Vector* temp = look_pos_;
  look_pos_ = NULL;
  return temp;
}
inline void BeginCameraSceneLookNotify::set_allocated_look_pos(::proto::Vector* look_pos) {
  delete look_pos_;
  look_pos_ = look_pos;
  if (look_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BeginCameraSceneLookNotify.look_pos)
}

// float duration = 2;
inline void BeginCameraSceneLookNotify::clear_duration() {
  duration_ = 0;
}
inline float BeginCameraSceneLookNotify::duration() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.duration)
  return duration_;
}
inline void BeginCameraSceneLookNotify::set_duration(float value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.duration)
}

// bool is_force = 3;
inline void BeginCameraSceneLookNotify::clear_is_force() {
  is_force_ = false;
}
inline bool BeginCameraSceneLookNotify::is_force() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_force)
  return is_force_;
}
inline void BeginCameraSceneLookNotify::set_is_force(bool value) {
  
  is_force_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_force)
}

// bool is_recover_keep_current = 4;
inline void BeginCameraSceneLookNotify::clear_is_recover_keep_current() {
  is_recover_keep_current_ = false;
}
inline bool BeginCameraSceneLookNotify::is_recover_keep_current() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_recover_keep_current)
  return is_recover_keep_current_;
}
inline void BeginCameraSceneLookNotify::set_is_recover_keep_current(bool value) {
  
  is_recover_keep_current_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_recover_keep_current)
}

// bool is_allow_input = 5;
inline void BeginCameraSceneLookNotify::clear_is_allow_input() {
  is_allow_input_ = false;
}
inline bool BeginCameraSceneLookNotify::is_allow_input() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_allow_input)
  return is_allow_input_;
}
inline void BeginCameraSceneLookNotify::set_is_allow_input(bool value) {
  
  is_allow_input_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_allow_input)
}

// -------------------------------------------------------------------

// EndCameraSceneLookNotify

// -------------------------------------------------------------------

// MarkEntityInMinMapNotify

// uint32 entity_id = 1;
inline void MarkEntityInMinMapNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkEntityInMinMapNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.entity_id)
  return entity_id_;
}
inline void MarkEntityInMinMapNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkEntityInMinMapNotify.entity_id)
}

// .proto.Vector position = 2;
inline bool MarkEntityInMinMapNotify::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void MarkEntityInMinMapNotify::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::proto::Vector& MarkEntityInMinMapNotify::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* MarkEntityInMinMapNotify::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkEntityInMinMapNotify.position)
  return position_;
}
inline ::proto::Vector* MarkEntityInMinMapNotify::release_position() {
  // @@protoc_insertion_point(field_release:proto.MarkEntityInMinMapNotify.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void MarkEntityInMinMapNotify::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkEntityInMinMapNotify.position)
}

// uint32 monster_id = 3;
inline void MarkEntityInMinMapNotify::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkEntityInMinMapNotify::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.monster_id)
  return monster_id_;
}
inline void MarkEntityInMinMapNotify::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkEntityInMinMapNotify.monster_id)
}

// -------------------------------------------------------------------

// UnmarkEntityInMinMapNotify

// uint32 entity_id = 1;
inline void UnmarkEntityInMinMapNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 UnmarkEntityInMinMapNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.UnmarkEntityInMinMapNotify.entity_id)
  return entity_id_;
}
inline void UnmarkEntityInMinMapNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnmarkEntityInMinMapNotify.entity_id)
}

// -------------------------------------------------------------------

// DropSubfieldReq

// .proto.DropSubfieldType drop_type = 1;
inline void DropSubfieldReq::clear_drop_type() {
  drop_type_ = 0;
}
inline ::proto::DropSubfieldType DropSubfieldReq::drop_type() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldReq.drop_type)
  return static_cast< ::proto::DropSubfieldType >(drop_type_);
}
inline void DropSubfieldReq::set_drop_type(::proto::DropSubfieldType value) {
  
  drop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.DropSubfieldReq.drop_type)
}

// uint32 drop_param = 2;
inline void DropSubfieldReq::clear_drop_param() {
  drop_param_ = 0u;
}
inline ::google::protobuf::uint32 DropSubfieldReq::drop_param() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldReq.drop_param)
  return drop_param_;
}
inline void DropSubfieldReq::set_drop_param(::google::protobuf::uint32 value) {
  
  drop_param_ = value;
  // @@protoc_insertion_point(field_set:proto.DropSubfieldReq.drop_param)
}

// uint32 entity_id = 3;
inline void DropSubfieldReq::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 DropSubfieldReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldReq.entity_id)
  return entity_id_;
}
inline void DropSubfieldReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DropSubfieldReq.entity_id)
}

// string subfield_name = 4;
inline void DropSubfieldReq::clear_subfield_name() {
  subfield_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropSubfieldReq::subfield_name() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldReq.subfield_name)
  return subfield_name_.GetNoArena();
}
inline void DropSubfieldReq::set_subfield_name(const ::std::string& value) {
  
  subfield_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DropSubfieldReq.subfield_name)
}
#if LANG_CXX11
inline void DropSubfieldReq::set_subfield_name(::std::string&& value) {
  
  subfield_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DropSubfieldReq.subfield_name)
}
#endif
inline void DropSubfieldReq::set_subfield_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subfield_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DropSubfieldReq.subfield_name)
}
inline void DropSubfieldReq::set_subfield_name(const char* value, size_t size) {
  
  subfield_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DropSubfieldReq.subfield_name)
}
inline ::std::string* DropSubfieldReq::mutable_subfield_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.DropSubfieldReq.subfield_name)
  return subfield_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropSubfieldReq::release_subfield_name() {
  // @@protoc_insertion_point(field_release:proto.DropSubfieldReq.subfield_name)
  
  return subfield_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropSubfieldReq::set_allocated_subfield_name(::std::string* subfield_name) {
  if (subfield_name != NULL) {
    
  } else {
    
  }
  subfield_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subfield_name);
  // @@protoc_insertion_point(field_set_allocated:proto.DropSubfieldReq.subfield_name)
}

// -------------------------------------------------------------------

// DropSubfieldRsp

// int32 retcode = 1;
inline void DropSubfieldRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 DropSubfieldRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldRsp.retcode)
  return retcode_;
}
inline void DropSubfieldRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DropSubfieldRsp.retcode)
}

// -------------------------------------------------------------------

// ExecuteGroupTriggerReq

// uint32 source_entity_id = 1;
inline void ExecuteGroupTriggerReq::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ExecuteGroupTriggerReq::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.source_entity_id)
  return source_entity_id_;
}
inline void ExecuteGroupTriggerReq::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.source_entity_id)
}

// string source_name = 2;
inline void ExecuteGroupTriggerReq::clear_source_name() {
  source_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecuteGroupTriggerReq::source_name() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.source_name)
  return source_name_.GetNoArena();
}
inline void ExecuteGroupTriggerReq::set_source_name(const ::std::string& value) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.source_name)
}
#if LANG_CXX11
inline void ExecuteGroupTriggerReq::set_source_name(::std::string&& value) {
  
  source_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ExecuteGroupTriggerReq.source_name)
}
#endif
inline void ExecuteGroupTriggerReq::set_source_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ExecuteGroupTriggerReq.source_name)
}
inline void ExecuteGroupTriggerReq::set_source_name(const char* value, size_t size) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ExecuteGroupTriggerReq.source_name)
}
inline ::std::string* ExecuteGroupTriggerReq::mutable_source_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ExecuteGroupTriggerReq.source_name)
  return source_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteGroupTriggerReq::release_source_name() {
  // @@protoc_insertion_point(field_release:proto.ExecuteGroupTriggerReq.source_name)
  
  return source_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteGroupTriggerReq::set_allocated_source_name(::std::string* source_name) {
  if (source_name != NULL) {
    
  } else {
    
  }
  source_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ExecuteGroupTriggerReq.source_name)
}

// uint32 target_entity_id = 3;
inline void ExecuteGroupTriggerReq::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ExecuteGroupTriggerReq::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.target_entity_id)
  return target_entity_id_;
}
inline void ExecuteGroupTriggerReq::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.target_entity_id)
}

// int32 param1 = 4;
inline void ExecuteGroupTriggerReq::clear_param1() {
  param1_ = 0;
}
inline ::google::protobuf::int32 ExecuteGroupTriggerReq::param1() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param1)
  return param1_;
}
inline void ExecuteGroupTriggerReq::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param1)
}

// int32 param2 = 5;
inline void ExecuteGroupTriggerReq::clear_param2() {
  param2_ = 0;
}
inline ::google::protobuf::int32 ExecuteGroupTriggerReq::param2() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param2)
  return param2_;
}
inline void ExecuteGroupTriggerReq::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param2)
}

// int32 param3 = 6;
inline void ExecuteGroupTriggerReq::clear_param3() {
  param3_ = 0;
}
inline ::google::protobuf::int32 ExecuteGroupTriggerReq::param3() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param3)
  return param3_;
}
inline void ExecuteGroupTriggerReq::set_param3(::google::protobuf::int32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param3)
}

// -------------------------------------------------------------------

// ExecuteGroupTriggerRsp

// int32 retcode = 1;
inline void ExecuteGroupTriggerRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ExecuteGroupTriggerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerRsp.retcode)
  return retcode_;
}
inline void ExecuteGroupTriggerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerRsp.retcode)
}

// -------------------------------------------------------------------

// LevelupCityReq

// uint32 scene_id = 1;
inline void LevelupCityReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.scene_id)
  return scene_id_;
}
inline void LevelupCityReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.scene_id)
}

// uint32 area_id = 2;
inline void LevelupCityReq::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.area_id)
  return area_id_;
}
inline void LevelupCityReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.area_id)
}

// uint32 item_num = 3;
inline void LevelupCityReq::clear_item_num() {
  item_num_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityReq::item_num() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.item_num)
  return item_num_;
}
inline void LevelupCityReq::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.item_num)
}

// -------------------------------------------------------------------

// LevelupCityRsp

// int32 retcode = 1;
inline void LevelupCityRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 LevelupCityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.retcode)
  return retcode_;
}
inline void LevelupCityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.retcode)
}

// uint32 scene_id = 2;
inline void LevelupCityRsp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.scene_id)
  return scene_id_;
}
inline void LevelupCityRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.scene_id)
}

// uint32 area_id = 3;
inline void LevelupCityRsp::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelupCityRsp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.area_id)
  return area_id_;
}
inline void LevelupCityRsp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.area_id)
}

// .proto.CityInfo city_info = 4;
inline bool LevelupCityRsp::has_city_info() const {
  return this != internal_default_instance() && city_info_ != NULL;
}
inline void LevelupCityRsp::clear_city_info() {
  if (GetArenaNoVirtual() == NULL && city_info_ != NULL) delete city_info_;
  city_info_ = NULL;
}
inline const ::proto::CityInfo& LevelupCityRsp::city_info() const {
  const ::proto::CityInfo* p = city_info_;
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.city_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CityInfo*>(
      &::proto::_CityInfo_default_instance_);
}
inline ::proto::CityInfo* LevelupCityRsp::mutable_city_info() {
  
  if (city_info_ == NULL) {
    city_info_ = new ::proto::CityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.LevelupCityRsp.city_info)
  return city_info_;
}
inline ::proto::CityInfo* LevelupCityRsp::release_city_info() {
  // @@protoc_insertion_point(field_release:proto.LevelupCityRsp.city_info)
  
  ::proto::CityInfo* temp = city_info_;
  city_info_ = NULL;
  return temp;
}
inline void LevelupCityRsp::set_allocated_city_info(::proto::CityInfo* city_info) {
  delete city_info_;
  city_info_ = city_info;
  if (city_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.LevelupCityRsp.city_info)
}

// -------------------------------------------------------------------

// RoutePointChangeInfo

// uint32 point_index = 1;
inline void RoutePointChangeInfo::clear_point_index() {
  point_index_ = 0u;
}
inline ::google::protobuf::uint32 RoutePointChangeInfo::point_index() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.point_index)
  return point_index_;
}
inline void RoutePointChangeInfo::set_point_index(::google::protobuf::uint32 value) {
  
  point_index_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.point_index)
}

// float target_velocity = 2;
inline void RoutePointChangeInfo::clear_target_velocity() {
  target_velocity_ = 0;
}
inline float RoutePointChangeInfo::target_velocity() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.target_velocity)
  return target_velocity_;
}
inline void RoutePointChangeInfo::set_target_velocity(float value) {
  
  target_velocity_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.target_velocity)
}

// float wait_time = 3;
inline void RoutePointChangeInfo::clear_wait_time() {
  wait_time_ = 0;
}
inline float RoutePointChangeInfo::wait_time() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.wait_time)
  return wait_time_;
}
inline void RoutePointChangeInfo::set_wait_time(float value) {
  
  wait_time_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.wait_time)
}

// -------------------------------------------------------------------

// SceneRouteChangeInfo

// uint32 route_id = 1;
inline void SceneRouteChangeInfo::clear_route_id() {
  route_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneRouteChangeInfo::route_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.route_id)
  return route_id_;
}
inline void SceneRouteChangeInfo::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.route_id)
}

// uint32 type = 2;
inline void SceneRouteChangeInfo::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 SceneRouteChangeInfo::type() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.type)
  return type_;
}
inline void SceneRouteChangeInfo::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.type)
}

// bool is_forward = 3;
inline void SceneRouteChangeInfo::clear_is_forward() {
  is_forward_ = false;
}
inline bool SceneRouteChangeInfo::is_forward() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.is_forward)
  return is_forward_;
}
inline void SceneRouteChangeInfo::set_is_forward(bool value) {
  
  is_forward_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.is_forward)
}

// repeated .proto.RoutePointChangeInfo point_list = 4;
inline int SceneRouteChangeInfo::point_list_size() const {
  return point_list_.size();
}
inline void SceneRouteChangeInfo::clear_point_list() {
  point_list_.Clear();
}
inline const ::proto::RoutePointChangeInfo& SceneRouteChangeInfo::point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Get(index);
}
inline ::proto::RoutePointChangeInfo* SceneRouteChangeInfo::mutable_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Mutable(index);
}
inline ::proto::RoutePointChangeInfo* SceneRouteChangeInfo::add_point_list() {
  // @@protoc_insertion_point(field_add:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >*
SceneRouteChangeInfo::mutable_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneRouteChangeInfo.point_list)
  return &point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >&
SceneRouteChangeInfo::point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneRouteChangeInfo.point_list)
  return point_list_;
}

// -------------------------------------------------------------------

// SceneRouteChangeNotify

// uint32 scene_id = 1;
inline void SceneRouteChangeNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneRouteChangeNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.scene_id)
  return scene_id_;
}
inline void SceneRouteChangeNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeNotify.scene_id)
}

// repeated .proto.SceneRouteChangeInfo route_list = 2;
inline int SceneRouteChangeNotify::route_list_size() const {
  return route_list_.size();
}
inline void SceneRouteChangeNotify::clear_route_list() {
  route_list_.Clear();
}
inline const ::proto::SceneRouteChangeInfo& SceneRouteChangeNotify::route_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Get(index);
}
inline ::proto::SceneRouteChangeInfo* SceneRouteChangeNotify::mutable_route_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Mutable(index);
}
inline ::proto::SceneRouteChangeInfo* SceneRouteChangeNotify::add_route_list() {
  // @@protoc_insertion_point(field_add:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >*
SceneRouteChangeNotify::mutable_route_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneRouteChangeNotify.route_list)
  return &route_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >&
SceneRouteChangeNotify::route_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneRouteChangeNotify.route_list)
  return route_list_;
}

// uint32 scene_time = 3;
inline void SceneRouteChangeNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 SceneRouteChangeNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.scene_time)
  return scene_time_;
}
inline void SceneRouteChangeNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeNotify.scene_time)
}

// -------------------------------------------------------------------

// PlatformStartRouteNotify

// uint32 entity_id = 1;
inline void PlatformStartRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformStartRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.entity_id)
  return entity_id_;
}
inline void PlatformStartRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStartRouteNotify.entity_id)
}

// .proto.PlatformInfo platform = 2;
inline bool PlatformStartRouteNotify::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
inline void PlatformStartRouteNotify::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) delete platform_;
  platform_ = NULL;
}
inline const ::proto::PlatformInfo& PlatformStartRouteNotify::platform() const {
  const ::proto::PlatformInfo* p = platform_;
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlatformInfo*>(
      &::proto::_PlatformInfo_default_instance_);
}
inline ::proto::PlatformInfo* PlatformStartRouteNotify::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformStartRouteNotify.platform)
  return platform_;
}
inline ::proto::PlatformInfo* PlatformStartRouteNotify::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlatformStartRouteNotify.platform)
  
  ::proto::PlatformInfo* temp = platform_;
  platform_ = NULL;
  return temp;
}
inline void PlatformStartRouteNotify::set_allocated_platform(::proto::PlatformInfo* platform) {
  delete platform_;
  platform_ = platform;
  if (platform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformStartRouteNotify.platform)
}

// uint32 scene_time = 3;
inline void PlatformStartRouteNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformStartRouteNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.scene_time)
  return scene_time_;
}
inline void PlatformStartRouteNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStartRouteNotify.scene_time)
}

// -------------------------------------------------------------------

// PlatformStopRouteNotify

// uint32 entity_id = 1;
inline void PlatformStopRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformStopRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStopRouteNotify.entity_id)
  return entity_id_;
}
inline void PlatformStopRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStopRouteNotify.entity_id)
}

// uint32 scene_time = 2;
inline void PlatformStopRouteNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformStopRouteNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStopRouteNotify.scene_time)
  return scene_time_;
}
inline void PlatformStopRouteNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStopRouteNotify.scene_time)
}

// -------------------------------------------------------------------

// PlatformChangeRouteNotify

// uint32 entity_id = 1;
inline void PlatformChangeRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformChangeRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformChangeRouteNotify.entity_id)
  return entity_id_;
}
inline void PlatformChangeRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformChangeRouteNotify.entity_id)
}

// .proto.PlatformInfo platform = 2;
inline bool PlatformChangeRouteNotify::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
inline void PlatformChangeRouteNotify::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) delete platform_;
  platform_ = NULL;
}
inline const ::proto::PlatformInfo& PlatformChangeRouteNotify::platform() const {
  const ::proto::PlatformInfo* p = platform_;
  // @@protoc_insertion_point(field_get:proto.PlatformChangeRouteNotify.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlatformInfo*>(
      &::proto::_PlatformInfo_default_instance_);
}
inline ::proto::PlatformInfo* PlatformChangeRouteNotify::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformChangeRouteNotify.platform)
  return platform_;
}
inline ::proto::PlatformInfo* PlatformChangeRouteNotify::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlatformChangeRouteNotify.platform)
  
  ::proto::PlatformInfo* temp = platform_;
  platform_ = NULL;
  return temp;
}
inline void PlatformChangeRouteNotify::set_allocated_platform(::proto::PlatformInfo* platform) {
  delete platform_;
  platform_ = platform;
  if (platform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformChangeRouteNotify.platform)
}

// -------------------------------------------------------------------

// ScenePlayerSoundNotify

// string sound_name = 1;
inline void ScenePlayerSoundNotify::clear_sound_name() {
  sound_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ScenePlayerSoundNotify::sound_name() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.sound_name)
  return sound_name_.GetNoArena();
}
inline void ScenePlayerSoundNotify::set_sound_name(const ::std::string& value) {
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ScenePlayerSoundNotify.sound_name)
}
#if LANG_CXX11
inline void ScenePlayerSoundNotify::set_sound_name(::std::string&& value) {
  
  sound_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ScenePlayerSoundNotify.sound_name)
}
#endif
inline void ScenePlayerSoundNotify::set_sound_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ScenePlayerSoundNotify.sound_name)
}
inline void ScenePlayerSoundNotify::set_sound_name(const char* value, size_t size) {
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ScenePlayerSoundNotify.sound_name)
}
inline ::std::string* ScenePlayerSoundNotify::mutable_sound_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerSoundNotify.sound_name)
  return sound_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScenePlayerSoundNotify::release_sound_name() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerSoundNotify.sound_name)
  
  return sound_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScenePlayerSoundNotify::set_allocated_sound_name(::std::string* sound_name) {
  if (sound_name != NULL) {
    
  } else {
    
  }
  sound_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sound_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerSoundNotify.sound_name)
}

// .proto.Vector play_pos = 2;
inline bool ScenePlayerSoundNotify::has_play_pos() const {
  return this != internal_default_instance() && play_pos_ != NULL;
}
inline void ScenePlayerSoundNotify::clear_play_pos() {
  if (GetArenaNoVirtual() == NULL && play_pos_ != NULL) delete play_pos_;
  play_pos_ = NULL;
}
inline const ::proto::Vector& ScenePlayerSoundNotify::play_pos() const {
  const ::proto::Vector* p = play_pos_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.play_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* ScenePlayerSoundNotify::mutable_play_pos() {
  
  if (play_pos_ == NULL) {
    play_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerSoundNotify.play_pos)
  return play_pos_;
}
inline ::proto::Vector* ScenePlayerSoundNotify::release_play_pos() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerSoundNotify.play_pos)
  
  ::proto::Vector* temp = play_pos_;
  play_pos_ = NULL;
  return temp;
}
inline void ScenePlayerSoundNotify::set_allocated_play_pos(::proto::Vector* play_pos) {
  delete play_pos_;
  play_pos_ = play_pos;
  if (play_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerSoundNotify.play_pos)
}

// .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 3;
inline void ScenePlayerSoundNotify::clear_play_type() {
  play_type_ = 0;
}
inline ::proto::ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify::play_type() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.play_type)
  return static_cast< ::proto::ScenePlayerSoundNotify_PlaySoundType >(play_type_);
}
inline void ScenePlayerSoundNotify::set_play_type(::proto::ScenePlayerSoundNotify_PlaySoundType value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerSoundNotify.play_type)
}

// -------------------------------------------------------------------

// PersonalSceneJumpReq

// uint32 point_id = 1;
inline void PersonalSceneJumpReq::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 PersonalSceneJumpReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpReq.point_id)
  return point_id_;
}
inline void PersonalSceneJumpReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpReq.point_id)
}

// -------------------------------------------------------------------

// PersonalSceneJumpRsp

// int32 retcode = 1;
inline void PersonalSceneJumpRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PersonalSceneJumpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.retcode)
  return retcode_;
}
inline void PersonalSceneJumpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpRsp.retcode)
}

// uint32 dest_scene_id = 2;
inline void PersonalSceneJumpRsp::clear_dest_scene_id() {
  dest_scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PersonalSceneJumpRsp::dest_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.dest_scene_id)
  return dest_scene_id_;
}
inline void PersonalSceneJumpRsp::set_dest_scene_id(::google::protobuf::uint32 value) {
  
  dest_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpRsp.dest_scene_id)
}

// .proto.Vector dest_pos = 3;
inline bool PersonalSceneJumpRsp::has_dest_pos() const {
  return this != internal_default_instance() && dest_pos_ != NULL;
}
inline void PersonalSceneJumpRsp::clear_dest_pos() {
  if (GetArenaNoVirtual() == NULL && dest_pos_ != NULL) delete dest_pos_;
  dest_pos_ = NULL;
}
inline const ::proto::Vector& PersonalSceneJumpRsp::dest_pos() const {
  const ::proto::Vector* p = dest_pos_;
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.dest_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PersonalSceneJumpRsp::mutable_dest_pos() {
  
  if (dest_pos_ == NULL) {
    dest_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PersonalSceneJumpRsp.dest_pos)
  return dest_pos_;
}
inline ::proto::Vector* PersonalSceneJumpRsp::release_dest_pos() {
  // @@protoc_insertion_point(field_release:proto.PersonalSceneJumpRsp.dest_pos)
  
  ::proto::Vector* temp = dest_pos_;
  dest_pos_ = NULL;
  return temp;
}
inline void PersonalSceneJumpRsp::set_allocated_dest_pos(::proto::Vector* dest_pos) {
  delete dest_pos_;
  dest_pos_ = dest_pos;
  if (dest_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PersonalSceneJumpRsp.dest_pos)
}

// -------------------------------------------------------------------

// SealBattleBeginNotify

// uint32 seal_entity_id = 1;
inline void SealBattleBeginNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleBeginNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_entity_id)
  return seal_entity_id_;
}
inline void SealBattleBeginNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_entity_id)
}

// uint32 seal_radius = 2;
inline void SealBattleBeginNotify::clear_seal_radius() {
  seal_radius_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleBeginNotify::seal_radius() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_radius)
  return seal_radius_;
}
inline void SealBattleBeginNotify::set_seal_radius(::google::protobuf::uint32 value) {
  
  seal_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_radius)
}

// uint32 seal_max_progress = 3;
inline void SealBattleBeginNotify::clear_seal_max_progress() {
  seal_max_progress_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleBeginNotify::seal_max_progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_max_progress)
  return seal_max_progress_;
}
inline void SealBattleBeginNotify::set_seal_max_progress(::google::protobuf::uint32 value) {
  
  seal_max_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_max_progress)
}

// .proto.SealBattleType battle_type = 4;
inline void SealBattleBeginNotify::clear_battle_type() {
  battle_type_ = 0;
}
inline ::proto::SealBattleType SealBattleBeginNotify::battle_type() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.battle_type)
  return static_cast< ::proto::SealBattleType >(battle_type_);
}
inline void SealBattleBeginNotify::set_battle_type(::proto::SealBattleType value) {
  
  battle_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.battle_type)
}

// -------------------------------------------------------------------

// SealBattleEndNotify

// uint32 seal_entity_id = 1;
inline void SealBattleEndNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleEndNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleEndNotify.seal_entity_id)
  return seal_entity_id_;
}
inline void SealBattleEndNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleEndNotify.seal_entity_id)
}

// bool is_win = 2;
inline void SealBattleEndNotify::clear_is_win() {
  is_win_ = false;
}
inline bool SealBattleEndNotify::is_win() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleEndNotify.is_win)
  return is_win_;
}
inline void SealBattleEndNotify::set_is_win(bool value) {
  
  is_win_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleEndNotify.is_win)
}

// -------------------------------------------------------------------

// SealBattleProgressNotify

// uint32 seal_entity_id = 1;
inline void SealBattleProgressNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.seal_entity_id)
  return seal_entity_id_;
}
inline void SealBattleProgressNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.seal_entity_id)
}

// uint32 progress = 2;
inline void SealBattleProgressNotify::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.progress)
  return progress_;
}
inline void SealBattleProgressNotify::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.progress)
}

// uint32 max_progress = 3;
inline void SealBattleProgressNotify::clear_max_progress() {
  max_progress_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::max_progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.max_progress)
  return max_progress_;
}
inline void SealBattleProgressNotify::set_max_progress(::google::protobuf::uint32 value) {
  
  max_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.max_progress)
}

// uint32 end_time = 4;
inline void SealBattleProgressNotify::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.end_time)
  return end_time_;
}
inline void SealBattleProgressNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.end_time)
}

// uint32 seal_radius = 5;
inline void SealBattleProgressNotify::clear_seal_radius() {
  seal_radius_ = 0u;
}
inline ::google::protobuf::uint32 SealBattleProgressNotify::seal_radius() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.seal_radius)
  return seal_radius_;
}
inline void SealBattleProgressNotify::set_seal_radius(::google::protobuf::uint32 value) {
  
  seal_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.seal_radius)
}

// -------------------------------------------------------------------

// ClientPauseNotify

// bool is_open = 1;
inline void ClientPauseNotify::clear_is_open() {
  is_open_ = false;
}
inline bool ClientPauseNotify::is_open() const {
  // @@protoc_insertion_point(field_get:proto.ClientPauseNotify.is_open)
  return is_open_;
}
inline void ClientPauseNotify::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientPauseNotify.is_open)
}

// -------------------------------------------------------------------

// AvatarEnterSceneInfo

// uint64 avatar_guid = 1;
inline void AvatarEnterSceneInfo::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarEnterSceneInfo::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_guid)
  return avatar_guid_;
}
inline void AvatarEnterSceneInfo::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.avatar_guid)
}

// uint32 avatar_entity_id = 2;
inline void AvatarEnterSceneInfo::clear_avatar_entity_id() {
  avatar_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarEnterSceneInfo::avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_entity_id)
  return avatar_entity_id_;
}
inline void AvatarEnterSceneInfo::set_avatar_entity_id(::google::protobuf::uint32 value) {
  
  avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.avatar_entity_id)
}

// .proto.AbilitySyncStateInfo avatar_ability_info = 3;
inline bool AvatarEnterSceneInfo::has_avatar_ability_info() const {
  return this != internal_default_instance() && avatar_ability_info_ != NULL;
}
inline void AvatarEnterSceneInfo::clear_avatar_ability_info() {
  if (GetArenaNoVirtual() == NULL && avatar_ability_info_ != NULL) delete avatar_ability_info_;
  avatar_ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& AvatarEnterSceneInfo::avatar_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = avatar_ability_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::mutable_avatar_ability_info() {
  
  if (avatar_ability_info_ == NULL) {
    avatar_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.avatar_ability_info)
  return avatar_ability_info_;
}
inline ::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::release_avatar_ability_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarEnterSceneInfo.avatar_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = avatar_ability_info_;
  avatar_ability_info_ = NULL;
  return temp;
}
inline void AvatarEnterSceneInfo::set_allocated_avatar_ability_info(::proto::AbilitySyncStateInfo* avatar_ability_info) {
  delete avatar_ability_info_;
  avatar_ability_info_ = avatar_ability_info;
  if (avatar_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarEnterSceneInfo.avatar_ability_info)
}

// repeated uint32 buff_id_list = 4;
inline int AvatarEnterSceneInfo::buff_id_list_size() const {
  return buff_id_list_.size();
}
inline void AvatarEnterSceneInfo::clear_buff_id_list() {
  buff_id_list_.Clear();
}
inline ::google::protobuf::uint32 AvatarEnterSceneInfo::buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.buff_id_list)
  return buff_id_list_.Get(index);
}
inline void AvatarEnterSceneInfo::set_buff_id_list(int index, ::google::protobuf::uint32 value) {
  buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.buff_id_list)
}
inline void AvatarEnterSceneInfo::add_buff_id_list(::google::protobuf::uint32 value) {
  buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarEnterSceneInfo.buff_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarEnterSceneInfo::buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarEnterSceneInfo.buff_id_list)
  return buff_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarEnterSceneInfo::mutable_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarEnterSceneInfo.buff_id_list)
  return &buff_id_list_;
}

// uint64 weapon_guid = 5;
inline void AvatarEnterSceneInfo::clear_weapon_guid() {
  weapon_guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AvatarEnterSceneInfo::weapon_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_guid)
  return weapon_guid_;
}
inline void AvatarEnterSceneInfo::set_weapon_guid(::google::protobuf::uint64 value) {
  
  weapon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.weapon_guid)
}

// uint32 weapon_entity_id = 6;
inline void AvatarEnterSceneInfo::clear_weapon_entity_id() {
  weapon_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarEnterSceneInfo::weapon_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_entity_id)
  return weapon_entity_id_;
}
inline void AvatarEnterSceneInfo::set_weapon_entity_id(::google::protobuf::uint32 value) {
  
  weapon_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.weapon_entity_id)
}

// .proto.AbilitySyncStateInfo weapon_ability_info = 7;
inline bool AvatarEnterSceneInfo::has_weapon_ability_info() const {
  return this != internal_default_instance() && weapon_ability_info_ != NULL;
}
inline void AvatarEnterSceneInfo::clear_weapon_ability_info() {
  if (GetArenaNoVirtual() == NULL && weapon_ability_info_ != NULL) delete weapon_ability_info_;
  weapon_ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& AvatarEnterSceneInfo::weapon_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = weapon_ability_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::mutable_weapon_ability_info() {
  
  if (weapon_ability_info_ == NULL) {
    weapon_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.weapon_ability_info)
  return weapon_ability_info_;
}
inline ::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::release_weapon_ability_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarEnterSceneInfo.weapon_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = weapon_ability_info_;
  weapon_ability_info_ = NULL;
  return temp;
}
inline void AvatarEnterSceneInfo::set_allocated_weapon_ability_info(::proto::AbilitySyncStateInfo* weapon_ability_info) {
  delete weapon_ability_info_;
  weapon_ability_info_ = weapon_ability_info;
  if (weapon_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarEnterSceneInfo.weapon_ability_info)
}

// repeated .proto.ServerBuff server_buff_list = 8;
inline int AvatarEnterSceneInfo::server_buff_list_size() const {
  return server_buff_list_.size();
}
inline void AvatarEnterSceneInfo::clear_server_buff_list() {
  server_buff_list_.Clear();
}
inline const ::proto::ServerBuff& AvatarEnterSceneInfo::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Get(index);
}
inline ::proto::ServerBuff* AvatarEnterSceneInfo::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Mutable(index);
}
inline ::proto::ServerBuff* AvatarEnterSceneInfo::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
AvatarEnterSceneInfo::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarEnterSceneInfo.server_buff_list)
  return &server_buff_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
AvatarEnterSceneInfo::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_;
}

// -------------------------------------------------------------------

// TeamEnterSceneInfo

// uint32 team_entity_id = 1;
inline void TeamEnterSceneInfo::clear_team_entity_id() {
  team_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 TeamEnterSceneInfo::team_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TeamEnterSceneInfo.team_entity_id)
  return team_entity_id_;
}
inline void TeamEnterSceneInfo::set_team_entity_id(::google::protobuf::uint32 value) {
  
  team_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TeamEnterSceneInfo.team_entity_id)
}

// .proto.AbilitySyncStateInfo team_ability_info = 2;
inline bool TeamEnterSceneInfo::has_team_ability_info() const {
  return this != internal_default_instance() && team_ability_info_ != NULL;
}
inline void TeamEnterSceneInfo::clear_team_ability_info() {
  if (GetArenaNoVirtual() == NULL && team_ability_info_ != NULL) delete team_ability_info_;
  team_ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& TeamEnterSceneInfo::team_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = team_ability_info_;
  // @@protoc_insertion_point(field_get:proto.TeamEnterSceneInfo.team_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* TeamEnterSceneInfo::mutable_team_ability_info() {
  
  if (team_ability_info_ == NULL) {
    team_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.TeamEnterSceneInfo.team_ability_info)
  return team_ability_info_;
}
inline ::proto::AbilitySyncStateInfo* TeamEnterSceneInfo::release_team_ability_info() {
  // @@protoc_insertion_point(field_release:proto.TeamEnterSceneInfo.team_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = team_ability_info_;
  team_ability_info_ = NULL;
  return temp;
}
inline void TeamEnterSceneInfo::set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info) {
  delete team_ability_info_;
  team_ability_info_ = team_ability_info;
  if (team_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TeamEnterSceneInfo.team_ability_info)
}

// -------------------------------------------------------------------

// MPLevelEntityInfo

// uint32 entity_id = 1;
inline void MPLevelEntityInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 MPLevelEntityInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.entity_id)
  return entity_id_;
}
inline void MPLevelEntityInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MPLevelEntityInfo.entity_id)
}

// uint32 authority_peer_id = 2;
inline void MPLevelEntityInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 MPLevelEntityInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.authority_peer_id)
  return authority_peer_id_;
}
inline void MPLevelEntityInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MPLevelEntityInfo.authority_peer_id)
}

// .proto.AbilitySyncStateInfo ability_info = 3;
inline bool MPLevelEntityInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
inline void MPLevelEntityInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
inline const ::proto::AbilitySyncStateInfo& MPLevelEntityInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
inline ::proto::AbilitySyncStateInfo* MPLevelEntityInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MPLevelEntityInfo.ability_info)
  return ability_info_;
}
inline ::proto::AbilitySyncStateInfo* MPLevelEntityInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.MPLevelEntityInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
inline void MPLevelEntityInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MPLevelEntityInfo.ability_info)
}

// -------------------------------------------------------------------

// PlayerEnterSceneInfoNotify

// uint32 cur_avatar_entity_id = 1;
inline void PlayerEnterSceneInfoNotify::clear_cur_avatar_entity_id() {
  cur_avatar_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerEnterSceneInfoNotify::cur_avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.cur_avatar_entity_id)
  return cur_avatar_entity_id_;
}
inline void PlayerEnterSceneInfoNotify::set_cur_avatar_entity_id(::google::protobuf::uint32 value) {
  
  cur_avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneInfoNotify.cur_avatar_entity_id)
}

// repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 2;
inline int PlayerEnterSceneInfoNotify::avatar_enter_info_size() const {
  return avatar_enter_info_.size();
}
inline void PlayerEnterSceneInfoNotify::clear_avatar_enter_info() {
  avatar_enter_info_.Clear();
}
inline const ::proto::AvatarEnterSceneInfo& PlayerEnterSceneInfoNotify::avatar_enter_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Get(index);
}
inline ::proto::AvatarEnterSceneInfo* PlayerEnterSceneInfoNotify::mutable_avatar_enter_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Mutable(index);
}
inline ::proto::AvatarEnterSceneInfo* PlayerEnterSceneInfoNotify::add_avatar_enter_info() {
  // @@protoc_insertion_point(field_add:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >*
PlayerEnterSceneInfoNotify::mutable_avatar_enter_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return &avatar_enter_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >&
PlayerEnterSceneInfoNotify::avatar_enter_info() const {
  // @@protoc_insertion_point(field_list:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_;
}

// .proto.TeamEnterSceneInfo team_enter_info = 3;
inline bool PlayerEnterSceneInfoNotify::has_team_enter_info() const {
  return this != internal_default_instance() && team_enter_info_ != NULL;
}
inline void PlayerEnterSceneInfoNotify::clear_team_enter_info() {
  if (GetArenaNoVirtual() == NULL && team_enter_info_ != NULL) delete team_enter_info_;
  team_enter_info_ = NULL;
}
inline const ::proto::TeamEnterSceneInfo& PlayerEnterSceneInfoNotify::team_enter_info() const {
  const ::proto::TeamEnterSceneInfo* p = team_enter_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TeamEnterSceneInfo*>(
      &::proto::_TeamEnterSceneInfo_default_instance_);
}
inline ::proto::TeamEnterSceneInfo* PlayerEnterSceneInfoNotify::mutable_team_enter_info() {
  
  if (team_enter_info_ == NULL) {
    team_enter_info_ = new ::proto::TeamEnterSceneInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  return team_enter_info_;
}
inline ::proto::TeamEnterSceneInfo* PlayerEnterSceneInfoNotify::release_team_enter_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  
  ::proto::TeamEnterSceneInfo* temp = team_enter_info_;
  team_enter_info_ = NULL;
  return temp;
}
inline void PlayerEnterSceneInfoNotify::set_allocated_team_enter_info(::proto::TeamEnterSceneInfo* team_enter_info) {
  delete team_enter_info_;
  team_enter_info_ = team_enter_info;
  if (team_enter_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneInfoNotify.team_enter_info)
}

// .proto.MPLevelEntityInfo mp_level_entity_info = 4;
inline bool PlayerEnterSceneInfoNotify::has_mp_level_entity_info() const {
  return this != internal_default_instance() && mp_level_entity_info_ != NULL;
}
inline void PlayerEnterSceneInfoNotify::clear_mp_level_entity_info() {
  if (GetArenaNoVirtual() == NULL && mp_level_entity_info_ != NULL) delete mp_level_entity_info_;
  mp_level_entity_info_ = NULL;
}
inline const ::proto::MPLevelEntityInfo& PlayerEnterSceneInfoNotify::mp_level_entity_info() const {
  const ::proto::MPLevelEntityInfo* p = mp_level_entity_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MPLevelEntityInfo*>(
      &::proto::_MPLevelEntityInfo_default_instance_);
}
inline ::proto::MPLevelEntityInfo* PlayerEnterSceneInfoNotify::mutable_mp_level_entity_info() {
  
  if (mp_level_entity_info_ == NULL) {
    mp_level_entity_info_ = new ::proto::MPLevelEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  return mp_level_entity_info_;
}
inline ::proto::MPLevelEntityInfo* PlayerEnterSceneInfoNotify::release_mp_level_entity_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  
  ::proto::MPLevelEntityInfo* temp = mp_level_entity_info_;
  mp_level_entity_info_ = NULL;
  return temp;
}
inline void PlayerEnterSceneInfoNotify::set_allocated_mp_level_entity_info(::proto::MPLevelEntityInfo* mp_level_entity_info) {
  delete mp_level_entity_info_;
  mp_level_entity_info_ = mp_level_entity_info;
  if (mp_level_entity_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
}

// -------------------------------------------------------------------

// JoinPlayerSceneReq

// uint32 target_uid = 1;
inline void JoinPlayerSceneReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 JoinPlayerSceneReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerSceneReq.target_uid)
  return target_uid_;
}
inline void JoinPlayerSceneReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerSceneReq.target_uid)
}

// -------------------------------------------------------------------

// JoinPlayerSceneRsp

// int32 retcode = 1;
inline void JoinPlayerSceneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 JoinPlayerSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerSceneRsp.retcode)
  return retcode_;
}
inline void JoinPlayerSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerSceneRsp.retcode)
}

// -------------------------------------------------------------------

// SceneKickPlayerReq

// uint32 target_uid = 1;
inline void SceneKickPlayerReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneKickPlayerReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerReq.target_uid)
  return target_uid_;
}
inline void SceneKickPlayerReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerReq.target_uid)
}

// -------------------------------------------------------------------

// SceneKickPlayerRsp

// int32 retcode = 1;
inline void SceneKickPlayerRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneKickPlayerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerRsp.retcode)
  return retcode_;
}
inline void SceneKickPlayerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerRsp.retcode)
}

// uint32 target_uid = 2;
inline void SceneKickPlayerRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneKickPlayerRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerRsp.target_uid)
  return target_uid_;
}
inline void SceneKickPlayerRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerRsp.target_uid)
}

// -------------------------------------------------------------------

// SceneKickPlayerNotify

// uint32 kicker_uid = 1;
inline void SceneKickPlayerNotify::clear_kicker_uid() {
  kicker_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneKickPlayerNotify::kicker_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerNotify.kicker_uid)
  return kicker_uid_;
}
inline void SceneKickPlayerNotify::set_kicker_uid(::google::protobuf::uint32 value) {
  
  kicker_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerNotify.kicker_uid)
}

// uint32 target_uid = 2;
inline void SceneKickPlayerNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 SceneKickPlayerNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerNotify.target_uid)
  return target_uid_;
}
inline void SceneKickPlayerNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerNotify.target_uid)
}

// -------------------------------------------------------------------

// HitClientTrivialNotify

// .proto.Vector position = 1;
inline bool HitClientTrivialNotify::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void HitClientTrivialNotify::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
inline const ::proto::Vector& HitClientTrivialNotify::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.HitClientTrivialNotify.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* HitClientTrivialNotify::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitClientTrivialNotify.position)
  return position_;
}
inline ::proto::Vector* HitClientTrivialNotify::release_position() {
  // @@protoc_insertion_point(field_release:proto.HitClientTrivialNotify.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void HitClientTrivialNotify::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitClientTrivialNotify.position)
}

// uint32 owner_entity_id = 2;
inline void HitClientTrivialNotify::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 HitClientTrivialNotify::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.HitClientTrivialNotify.owner_entity_id)
  return owner_entity_id_;
}
inline void HitClientTrivialNotify::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HitClientTrivialNotify.owner_entity_id)
}

// -------------------------------------------------------------------

// BackMyWorldReq

// -------------------------------------------------------------------

// BackMyWorldRsp

// int32 retcode = 1;
inline void BackMyWorldRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 BackMyWorldRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.BackMyWorldRsp.retcode)
  return retcode_;
}
inline void BackMyWorldRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.BackMyWorldRsp.retcode)
}

// -------------------------------------------------------------------

// SeeMonsterReq

// uint32 monster_id = 1;
inline void SeeMonsterReq::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::google::protobuf::uint32 SeeMonsterReq::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.SeeMonsterReq.monster_id)
  return monster_id_;
}
inline void SeeMonsterReq::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SeeMonsterReq.monster_id)
}

// -------------------------------------------------------------------

// SeeMonsterRsp

// int32 retcode = 1;
inline void SeeMonsterRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SeeMonsterRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SeeMonsterRsp.retcode)
  return retcode_;
}
inline void SeeMonsterRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SeeMonsterRsp.retcode)
}

// -------------------------------------------------------------------

// AddSeenMonsterNotify

// repeated uint32 monster_id_list = 1;
inline int AddSeenMonsterNotify::monster_id_list_size() const {
  return monster_id_list_.size();
}
inline void AddSeenMonsterNotify::clear_monster_id_list() {
  monster_id_list_.Clear();
}
inline ::google::protobuf::uint32 AddSeenMonsterNotify::monster_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AddSeenMonsterNotify.monster_id_list)
  return monster_id_list_.Get(index);
}
inline void AddSeenMonsterNotify::set_monster_id_list(int index, ::google::protobuf::uint32 value) {
  monster_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AddSeenMonsterNotify.monster_id_list)
}
inline void AddSeenMonsterNotify::add_monster_id_list(::google::protobuf::uint32 value) {
  monster_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AddSeenMonsterNotify.monster_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddSeenMonsterNotify::monster_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AddSeenMonsterNotify.monster_id_list)
  return monster_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddSeenMonsterNotify::mutable_monster_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AddSeenMonsterNotify.monster_id_list)
  return &monster_id_list_;
}

// -------------------------------------------------------------------

// AllSeenMonsterNotify

// repeated uint32 monster_id_list = 1;
inline int AllSeenMonsterNotify::monster_id_list_size() const {
  return monster_id_list_.size();
}
inline void AllSeenMonsterNotify::clear_monster_id_list() {
  monster_id_list_.Clear();
}
inline ::google::protobuf::uint32 AllSeenMonsterNotify::monster_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllSeenMonsterNotify.monster_id_list)
  return monster_id_list_.Get(index);
}
inline void AllSeenMonsterNotify::set_monster_id_list(int index, ::google::protobuf::uint32 value) {
  monster_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AllSeenMonsterNotify.monster_id_list)
}
inline void AllSeenMonsterNotify::add_monster_id_list(::google::protobuf::uint32 value) {
  monster_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AllSeenMonsterNotify.monster_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AllSeenMonsterNotify::monster_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AllSeenMonsterNotify.monster_id_list)
  return monster_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AllSeenMonsterNotify::mutable_monster_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllSeenMonsterNotify.monster_id_list)
  return &monster_id_list_;
}

// -------------------------------------------------------------------

// SceneTimeNotify

// uint32 scene_id = 1;
inline void SceneTimeNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTimeNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.scene_id)
  return scene_id_;
}
inline void SceneTimeNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.scene_id)
}

// bool is_paused = 2;
inline void SceneTimeNotify::clear_is_paused() {
  is_paused_ = false;
}
inline bool SceneTimeNotify::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.is_paused)
  return is_paused_;
}
inline void SceneTimeNotify::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.is_paused)
}

// uint64 scene_time = 3;
inline void SceneTimeNotify::clear_scene_time() {
  scene_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneTimeNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.scene_time)
  return scene_time_;
}
inline void SceneTimeNotify::set_scene_time(::google::protobuf::uint64 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.scene_time)
}

// -------------------------------------------------------------------

// EnterSceneReadyReq

// uint32 enter_scene_token = 1;
inline void EnterSceneReadyReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 EnterSceneReadyReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneReadyReq.enter_scene_token)
  return enter_scene_token_;
}
inline void EnterSceneReadyReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneReadyReq.enter_scene_token)
}

// -------------------------------------------------------------------

// EnterSceneReadyRsp

// int32 retcode = 1;
inline void EnterSceneReadyRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EnterSceneReadyRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneReadyRsp.retcode)
  return retcode_;
}
inline void EnterSceneReadyRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneReadyRsp.retcode)
}

// -------------------------------------------------------------------

// EnterScenePeerNotify

// uint32 dest_scene_id = 1;
inline void EnterScenePeerNotify::clear_dest_scene_id() {
  dest_scene_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterScenePeerNotify::dest_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.dest_scene_id)
  return dest_scene_id_;
}
inline void EnterScenePeerNotify::set_dest_scene_id(::google::protobuf::uint32 value) {
  
  dest_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.dest_scene_id)
}

// uint32 peer_id = 2;
inline void EnterScenePeerNotify::clear_peer_id() {
  peer_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterScenePeerNotify::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.peer_id)
  return peer_id_;
}
inline void EnterScenePeerNotify::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.peer_id)
}

// uint32 host_peer_id = 3;
inline void EnterScenePeerNotify::clear_host_peer_id() {
  host_peer_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterScenePeerNotify::host_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.host_peer_id)
  return host_peer_id_;
}
inline void EnterScenePeerNotify::set_host_peer_id(::google::protobuf::uint32 value) {
  
  host_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.host_peer_id)
}

// -------------------------------------------------------------------

// EnterSceneDoneReq

// uint32 enter_scene_token = 1;
inline void EnterSceneDoneReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 EnterSceneDoneReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneDoneReq.enter_scene_token)
  return enter_scene_token_;
}
inline void EnterSceneDoneReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneDoneReq.enter_scene_token)
}

// -------------------------------------------------------------------

// EnterSceneDoneRsp

// int32 retcode = 1;
inline void EnterSceneDoneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EnterSceneDoneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneDoneRsp.retcode)
  return retcode_;
}
inline void EnterSceneDoneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneDoneRsp.retcode)
}

// -------------------------------------------------------------------

// WorldPlayerDieNotify

// .proto.PlayerDieType die_type = 1;
inline void WorldPlayerDieNotify::clear_die_type() {
  die_type_ = 0;
}
inline ::proto::PlayerDieType WorldPlayerDieNotify::die_type() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.die_type)
  return static_cast< ::proto::PlayerDieType >(die_type_);
}
inline void WorldPlayerDieNotify::set_die_type(::proto::PlayerDieType value) {
  
  die_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.die_type)
}

// uint32 murderer_entity_id = 2;
inline void WorldPlayerDieNotify::clear_murderer_entity_id() {
  murderer_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 WorldPlayerDieNotify::murderer_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.murderer_entity_id)
  return murderer_entity_id_;
}
inline void WorldPlayerDieNotify::set_murderer_entity_id(::google::protobuf::uint32 value) {
  
  murderer_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.murderer_entity_id)
}

// uint32 monster_id = 3;
inline bool WorldPlayerDieNotify::has_monster_id() const {
  return entity_case() == kMonsterId;
}
inline void WorldPlayerDieNotify::set_has_monster_id() {
  _oneof_case_[0] = kMonsterId;
}
inline void WorldPlayerDieNotify::clear_monster_id() {
  if (has_monster_id()) {
    entity_.monster_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 WorldPlayerDieNotify::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.monster_id)
  if (has_monster_id()) {
    return entity_.monster_id_;
  }
  return 0u;
}
inline void WorldPlayerDieNotify::set_monster_id(::google::protobuf::uint32 value) {
  if (!has_monster_id()) {
    clear_entity();
    set_has_monster_id();
  }
  entity_.monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.monster_id)
}

// uint32 gadget_id = 4;
inline bool WorldPlayerDieNotify::has_gadget_id() const {
  return entity_case() == kGadgetId;
}
inline void WorldPlayerDieNotify::set_has_gadget_id() {
  _oneof_case_[0] = kGadgetId;
}
inline void WorldPlayerDieNotify::clear_gadget_id() {
  if (has_gadget_id()) {
    entity_.gadget_id_ = 0u;
    clear_has_entity();
  }
}
inline ::google::protobuf::uint32 WorldPlayerDieNotify::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.gadget_id)
  if (has_gadget_id()) {
    return entity_.gadget_id_;
  }
  return 0u;
}
inline void WorldPlayerDieNotify::set_gadget_id(::google::protobuf::uint32 value) {
  if (!has_gadget_id()) {
    clear_entity();
    set_has_gadget_id();
  }
  entity_.gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.gadget_id)
}

inline bool WorldPlayerDieNotify::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
inline void WorldPlayerDieNotify::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
inline WorldPlayerDieNotify::EntityCase WorldPlayerDieNotify::entity_case() const {
  return WorldPlayerDieNotify::EntityCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// WorldPlayerReviveReq

// -------------------------------------------------------------------

// WorldPlayerReviveRsp

// int32 retcode = 1;
inline void WorldPlayerReviveRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 WorldPlayerReviveRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerReviveRsp.retcode)
  return retcode_;
}
inline void WorldPlayerReviveRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerReviveRsp.retcode)
}

// -------------------------------------------------------------------

// JoinPlayerFailNotify

// int32 retcode = 1;
inline void JoinPlayerFailNotify::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 JoinPlayerFailNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerFailNotify.retcode)
  return retcode_;
}
inline void JoinPlayerFailNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerFailNotify.retcode)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SetSceneWeatherAreaReq

// uint32 weather_gadget_id = 1;
inline void SetSceneWeatherAreaReq::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 SetSceneWeatherAreaReq::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SetSceneWeatherAreaReq.weather_gadget_id)
  return weather_gadget_id_;
}
inline void SetSceneWeatherAreaReq::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetSceneWeatherAreaReq.weather_gadget_id)
}

// map<uint32, string> weather_value_map = 2;
inline int SetSceneWeatherAreaReq::weather_value_map_size() const {
  return weather_value_map_.size();
}
inline void SetSceneWeatherAreaReq::clear_weather_value_map() {
  weather_value_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
SetSceneWeatherAreaReq::weather_value_map() const {
  // @@protoc_insertion_point(field_map:proto.SetSceneWeatherAreaReq.weather_value_map)
  return weather_value_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
SetSceneWeatherAreaReq::mutable_weather_value_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SetSceneWeatherAreaReq.weather_value_map)
  return weather_value_map_.MutableMap();
}

// -------------------------------------------------------------------

// SetSceneWeatherAreaRsp

// int32 retcode = 1;
inline void SetSceneWeatherAreaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetSceneWeatherAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetSceneWeatherAreaRsp.retcode)
  return retcode_;
}
inline void SetSceneWeatherAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetSceneWeatherAreaRsp.retcode)
}

// -------------------------------------------------------------------

// ExecuteGadgetLuaReq

// uint32 source_entity_id = 1;
inline void ExecuteGadgetLuaReq::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ExecuteGadgetLuaReq::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.source_entity_id)
  return source_entity_id_;
}
inline void ExecuteGadgetLuaReq::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.source_entity_id)
}

// int32 param1 = 2;
inline void ExecuteGadgetLuaReq::clear_param1() {
  param1_ = 0;
}
inline ::google::protobuf::int32 ExecuteGadgetLuaReq::param1() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param1)
  return param1_;
}
inline void ExecuteGadgetLuaReq::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param1)
}

// int32 param2 = 3;
inline void ExecuteGadgetLuaReq::clear_param2() {
  param2_ = 0;
}
inline ::google::protobuf::int32 ExecuteGadgetLuaReq::param2() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param2)
  return param2_;
}
inline void ExecuteGadgetLuaReq::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param2)
}

// int32 param3 = 4;
inline void ExecuteGadgetLuaReq::clear_param3() {
  param3_ = 0;
}
inline ::google::protobuf::int32 ExecuteGadgetLuaReq::param3() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param3)
  return param3_;
}
inline void ExecuteGadgetLuaReq::set_param3(::google::protobuf::int32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param3)
}

// -------------------------------------------------------------------

// ExecuteGadgetLuaRsp

// int32 retcode = 1;
inline void ExecuteGadgetLuaRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ExecuteGadgetLuaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaRsp.retcode)
  return retcode_;
}
inline void ExecuteGadgetLuaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaRsp.retcode)
}

// -------------------------------------------------------------------

// CutSceneBeginNotify

// uint32 cutscene_id = 1;
inline void CutSceneBeginNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
inline ::google::protobuf::uint32 CutSceneBeginNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneBeginNotify.cutscene_id)
  return cutscene_id_;
}
inline void CutSceneBeginNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneBeginNotify.cutscene_id)
}

// bool is_wait_others = 2;
inline void CutSceneBeginNotify::clear_is_wait_others() {
  is_wait_others_ = false;
}
inline bool CutSceneBeginNotify::is_wait_others() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneBeginNotify.is_wait_others)
  return is_wait_others_;
}
inline void CutSceneBeginNotify::set_is_wait_others(bool value) {
  
  is_wait_others_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneBeginNotify.is_wait_others)
}

// -------------------------------------------------------------------

// CutSceneFinishNotify

// uint32 cutscene_id = 1;
inline void CutSceneFinishNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
inline ::google::protobuf::uint32 CutSceneFinishNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneFinishNotify.cutscene_id)
  return cutscene_id_;
}
inline void CutSceneFinishNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneFinishNotify.cutscene_id)
}

// -------------------------------------------------------------------

// CutSceneEndNotify

// int32 retcode = 1;
inline void CutSceneEndNotify::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CutSceneEndNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneEndNotify.retcode)
  return retcode_;
}
inline void CutSceneEndNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneEndNotify.retcode)
}

// uint32 cutscene_id = 2;
inline void CutSceneEndNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
inline ::google::protobuf::uint32 CutSceneEndNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneEndNotify.cutscene_id)
  return cutscene_id_;
}
inline void CutSceneEndNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneEndNotify.cutscene_id)
}

// -------------------------------------------------------------------

// ClientScriptEventNotify

// uint32 event_type = 1;
inline void ClientScriptEventNotify::clear_event_type() {
  event_type_ = 0u;
}
inline ::google::protobuf::uint32 ClientScriptEventNotify::event_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.event_type)
  return event_type_;
}
inline void ClientScriptEventNotify::set_event_type(::google::protobuf::uint32 value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.event_type)
}

// uint32 source_entity_id = 2;
inline void ClientScriptEventNotify::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientScriptEventNotify::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.source_entity_id)
  return source_entity_id_;
}
inline void ClientScriptEventNotify::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.source_entity_id)
}

// uint32 target_entity_id = 3;
inline void ClientScriptEventNotify::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientScriptEventNotify::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.target_entity_id)
  return target_entity_id_;
}
inline void ClientScriptEventNotify::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.target_entity_id)
}

// repeated int32 param_list = 4;
inline int ClientScriptEventNotify::param_list_size() const {
  return param_list_.size();
}
inline void ClientScriptEventNotify::clear_param_list() {
  param_list_.Clear();
}
inline ::google::protobuf::int32 ClientScriptEventNotify::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.param_list)
  return param_list_.Get(index);
}
inline void ClientScriptEventNotify::set_param_list(int index, ::google::protobuf::int32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.param_list)
}
inline void ClientScriptEventNotify::add_param_list(::google::protobuf::int32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ClientScriptEventNotify.param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientScriptEventNotify::param_list() const {
  // @@protoc_insertion_point(field_list:proto.ClientScriptEventNotify.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientScriptEventNotify::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientScriptEventNotify.param_list)
  return &param_list_;
}

// -------------------------------------------------------------------

// EntityMoveInfo

// uint32 entity_id = 1;
inline void EntityMoveInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.entity_id)
  return entity_id_;
}
inline void EntityMoveInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.entity_id)
}

// .proto.MotionInfo motion_info = 2;
inline bool EntityMoveInfo::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
inline void EntityMoveInfo::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
inline const ::proto::MotionInfo& EntityMoveInfo::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* EntityMoveInfo::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityMoveInfo.motion_info)
  return motion_info_;
}
inline ::proto::MotionInfo* EntityMoveInfo::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.EntityMoveInfo.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
inline void EntityMoveInfo::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityMoveInfo.motion_info)
}

// uint32 scene_time = 3;
inline void EntityMoveInfo::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveInfo::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.scene_time)
  return scene_time_;
}
inline void EntityMoveInfo::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.scene_time)
}

// uint32 reliable_seq = 4;
inline void EntityMoveInfo::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveInfo::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.reliable_seq)
  return reliable_seq_;
}
inline void EntityMoveInfo::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.reliable_seq)
}

// -------------------------------------------------------------------

// SceneEntitiesMovesReq

// repeated .proto.EntityMoveInfo entity_move_info_list = 1;
inline int SceneEntitiesMovesReq::entity_move_info_list_size() const {
  return entity_move_info_list_.size();
}
inline void SceneEntitiesMovesReq::clear_entity_move_info_list() {
  entity_move_info_list_.Clear();
}
inline const ::proto::EntityMoveInfo& SceneEntitiesMovesReq::entity_move_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Get(index);
}
inline ::proto::EntityMoveInfo* SceneEntitiesMovesReq::mutable_entity_move_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Mutable(index);
}
inline ::proto::EntityMoveInfo* SceneEntitiesMovesReq::add_entity_move_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
SceneEntitiesMovesReq::mutable_entity_move_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return &entity_move_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
SceneEntitiesMovesReq::entity_move_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_;
}

// -------------------------------------------------------------------

// EntityMoveFailInfo

// int32 retcode = 1;
inline void EntityMoveFailInfo::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 EntityMoveFailInfo::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.retcode)
  return retcode_;
}
inline void EntityMoveFailInfo::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.retcode)
}

// uint32 entity_id = 2;
inline void EntityMoveFailInfo::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveFailInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.entity_id)
  return entity_id_;
}
inline void EntityMoveFailInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.entity_id)
}

// .proto.MotionInfo fail_motion = 3;
inline bool EntityMoveFailInfo::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
inline void EntityMoveFailInfo::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
inline const ::proto::MotionInfo& EntityMoveFailInfo::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
inline ::proto::MotionInfo* EntityMoveFailInfo::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityMoveFailInfo.fail_motion)
  return fail_motion_;
}
inline ::proto::MotionInfo* EntityMoveFailInfo::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.EntityMoveFailInfo.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
inline void EntityMoveFailInfo::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityMoveFailInfo.fail_motion)
}

// uint32 scene_time = 4;
inline void EntityMoveFailInfo::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveFailInfo::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.scene_time)
  return scene_time_;
}
inline void EntityMoveFailInfo::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.scene_time)
}

// uint32 reliable_seq = 5;
inline void EntityMoveFailInfo::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveFailInfo::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.reliable_seq)
  return reliable_seq_;
}
inline void EntityMoveFailInfo::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.reliable_seq)
}

// -------------------------------------------------------------------

// SceneEntitiesMovesRsp

// repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 1;
inline int SceneEntitiesMovesRsp::entity_move_fail_info_list_size() const {
  return entity_move_fail_info_list_.size();
}
inline void SceneEntitiesMovesRsp::clear_entity_move_fail_info_list() {
  entity_move_fail_info_list_.Clear();
}
inline const ::proto::EntityMoveFailInfo& SceneEntitiesMovesRsp::entity_move_fail_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Get(index);
}
inline ::proto::EntityMoveFailInfo* SceneEntitiesMovesRsp::mutable_entity_move_fail_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Mutable(index);
}
inline ::proto::EntityMoveFailInfo* SceneEntitiesMovesRsp::add_entity_move_fail_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >*
SceneEntitiesMovesRsp::mutable_entity_move_fail_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return &entity_move_fail_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >&
SceneEntitiesMovesRsp::entity_move_fail_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_;
}

// -------------------------------------------------------------------

// SceneEntitiesMoveCombineNotify

// repeated .proto.EntityMoveInfo entity_move_info_list = 1;
inline int SceneEntitiesMoveCombineNotify::entity_move_info_list_size() const {
  return entity_move_info_list_.size();
}
inline void SceneEntitiesMoveCombineNotify::clear_entity_move_info_list() {
  entity_move_info_list_.Clear();
}
inline const ::proto::EntityMoveInfo& SceneEntitiesMoveCombineNotify::entity_move_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Get(index);
}
inline ::proto::EntityMoveInfo* SceneEntitiesMoveCombineNotify::mutable_entity_move_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Mutable(index);
}
inline ::proto::EntityMoveInfo* SceneEntitiesMoveCombineNotify::add_entity_move_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
SceneEntitiesMoveCombineNotify::mutable_entity_move_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return &entity_move_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
SceneEntitiesMoveCombineNotify::entity_move_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_;
}

// -------------------------------------------------------------------

// UnlockTransPointReq

// uint32 scene_id = 1;
inline void UnlockTransPointReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockTransPointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointReq.scene_id)
  return scene_id_;
}
inline void UnlockTransPointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointReq.scene_id)
}

// uint32 point_id = 2;
inline void UnlockTransPointReq::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockTransPointReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointReq.point_id)
  return point_id_;
}
inline void UnlockTransPointReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointReq.point_id)
}

// -------------------------------------------------------------------

// UnlockTransPointRsp

// int32 retcode = 1;
inline void UnlockTransPointRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 UnlockTransPointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointRsp.retcode)
  return retcode_;
}
inline void UnlockTransPointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointRsp.retcode)
}

// -------------------------------------------------------------------

// PlatformRouteStateNotify

// uint32 entity_id = 1;
inline void PlatformRouteStateNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformRouteStateNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.entity_id)
  return entity_id_;
}
inline void PlatformRouteStateNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformRouteStateNotify.entity_id)
}

// uint32 scene_time = 2;
inline void PlatformRouteStateNotify::clear_scene_time() {
  scene_time_ = 0u;
}
inline ::google::protobuf::uint32 PlatformRouteStateNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.scene_time)
  return scene_time_;
}
inline void PlatformRouteStateNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformRouteStateNotify.scene_time)
}

// .proto.Vector pos = 3;
inline bool PlatformRouteStateNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PlatformRouteStateNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& PlatformRouteStateNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlatformRouteStateNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformRouteStateNotify.pos)
  return pos_;
}
inline ::proto::Vector* PlatformRouteStateNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlatformRouteStateNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlatformRouteStateNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformRouteStateNotify.pos)
}

// .proto.Vector rot = 4;
inline bool PlatformRouteStateNotify::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
inline void PlatformRouteStateNotify::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
inline const ::proto::Vector& PlatformRouteStateNotify::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* PlatformRouteStateNotify::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformRouteStateNotify.rot)
  return rot_;
}
inline ::proto::Vector* PlatformRouteStateNotify::release_rot() {
  // @@protoc_insertion_point(field_release:proto.PlatformRouteStateNotify.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void PlatformRouteStateNotify::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformRouteStateNotify.rot)
}

// uint32 route_id = 5;
inline void PlatformRouteStateNotify::clear_route_id() {
  route_id_ = 0u;
}
inline ::google::protobuf::uint32 PlatformRouteStateNotify::route_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.route_id)
  return route_id_;
}
inline void PlatformRouteStateNotify::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformRouteStateNotify.route_id)
}

// bool is_started = 6;
inline void PlatformRouteStateNotify::clear_is_started() {
  is_started_ = false;
}
inline bool PlatformRouteStateNotify::is_started() const {
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.is_started)
  return is_started_;
}
inline void PlatformRouteStateNotify::set_is_started(bool value) {
  
  is_started_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformRouteStateNotify.is_started)
}

// -------------------------------------------------------------------

// SceneWeatherForcastReq

// uint32 weather_area_id = 1;
inline void SceneWeatherForcastReq::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeatherForcastReq::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastReq.weather_area_id)
  return weather_area_id_;
}
inline void SceneWeatherForcastReq::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastReq.weather_area_id)
}

// -------------------------------------------------------------------

// SceneWeatherForcastRsp

// int32 retcode = 1;
inline void SceneWeatherForcastRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SceneWeatherForcastRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.retcode)
  return retcode_;
}
inline void SceneWeatherForcastRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.retcode)
}

// uint64 next_climate_time = 2;
inline void SceneWeatherForcastRsp::clear_next_climate_time() {
  next_climate_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneWeatherForcastRsp::next_climate_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.next_climate_time)
  return next_climate_time_;
}
inline void SceneWeatherForcastRsp::set_next_climate_time(::google::protobuf::uint64 value) {
  
  next_climate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.next_climate_time)
}

// repeated uint32 forcast_climate_list = 3;
inline int SceneWeatherForcastRsp::forcast_climate_list_size() const {
  return forcast_climate_list_.size();
}
inline void SceneWeatherForcastRsp::clear_forcast_climate_list() {
  forcast_climate_list_.Clear();
}
inline ::google::protobuf::uint32 SceneWeatherForcastRsp::forcast_climate_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return forcast_climate_list_.Get(index);
}
inline void SceneWeatherForcastRsp::set_forcast_climate_list(int index, ::google::protobuf::uint32 value) {
  forcast_climate_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.forcast_climate_list)
}
inline void SceneWeatherForcastRsp::add_forcast_climate_list(::google::protobuf::uint32 value) {
  forcast_climate_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneWeatherForcastRsp.forcast_climate_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneWeatherForcastRsp::forcast_climate_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return forcast_climate_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneWeatherForcastRsp::mutable_forcast_climate_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return &forcast_climate_list_;
}

// -------------------------------------------------------------------

// MarkMapReq

// .proto.MarkMapReq.Operation op = 1;
inline void MarkMapReq::clear_op() {
  op_ = 0;
}
inline ::proto::MarkMapReq_Operation MarkMapReq::op() const {
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.op)
  return static_cast< ::proto::MarkMapReq_Operation >(op_);
}
inline void MarkMapReq::set_op(::proto::MarkMapReq_Operation value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkMapReq.op)
}

// .proto.MapMarkPoint old = 2;
inline bool MarkMapReq::has_old() const {
  return this != internal_default_instance() && old_ != NULL;
}
inline void MarkMapReq::clear_old() {
  if (GetArenaNoVirtual() == NULL && old_ != NULL) delete old_;
  old_ = NULL;
}
inline const ::proto::MapMarkPoint& MarkMapReq::old() const {
  const ::proto::MapMarkPoint* p = old_;
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.old)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MapMarkPoint*>(
      &::proto::_MapMarkPoint_default_instance_);
}
inline ::proto::MapMarkPoint* MarkMapReq::mutable_old() {
  
  if (old_ == NULL) {
    old_ = new ::proto::MapMarkPoint;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkMapReq.old)
  return old_;
}
inline ::proto::MapMarkPoint* MarkMapReq::release_old() {
  // @@protoc_insertion_point(field_release:proto.MarkMapReq.old)
  
  ::proto::MapMarkPoint* temp = old_;
  old_ = NULL;
  return temp;
}
inline void MarkMapReq::set_allocated_old(::proto::MapMarkPoint* old) {
  delete old_;
  old_ = old;
  if (old) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkMapReq.old)
}

// .proto.MapMarkPoint mark = 3;
inline bool MarkMapReq::has_mark() const {
  return this != internal_default_instance() && mark_ != NULL;
}
inline void MarkMapReq::clear_mark() {
  if (GetArenaNoVirtual() == NULL && mark_ != NULL) delete mark_;
  mark_ = NULL;
}
inline const ::proto::MapMarkPoint& MarkMapReq::mark() const {
  const ::proto::MapMarkPoint* p = mark_;
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.mark)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MapMarkPoint*>(
      &::proto::_MapMarkPoint_default_instance_);
}
inline ::proto::MapMarkPoint* MarkMapReq::mutable_mark() {
  
  if (mark_ == NULL) {
    mark_ = new ::proto::MapMarkPoint;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkMapReq.mark)
  return mark_;
}
inline ::proto::MapMarkPoint* MarkMapReq::release_mark() {
  // @@protoc_insertion_point(field_release:proto.MarkMapReq.mark)
  
  ::proto::MapMarkPoint* temp = mark_;
  mark_ = NULL;
  return temp;
}
inline void MarkMapReq::set_allocated_mark(::proto::MapMarkPoint* mark) {
  delete mark_;
  mark_ = mark;
  if (mark) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkMapReq.mark)
}

// -------------------------------------------------------------------

// MarkMapRsp

// int32 retcode = 1;
inline void MarkMapRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 MarkMapRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MarkMapRsp.retcode)
  return retcode_;
}
inline void MarkMapRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkMapRsp.retcode)
}

// repeated .proto.MapMarkPoint mark_list = 2;
inline int MarkMapRsp::mark_list_size() const {
  return mark_list_.size();
}
inline void MarkMapRsp::clear_mark_list() {
  mark_list_.Clear();
}
inline const ::proto::MapMarkPoint& MarkMapRsp::mark_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MarkMapRsp.mark_list)
  return mark_list_.Get(index);
}
inline ::proto::MapMarkPoint* MarkMapRsp::mutable_mark_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MarkMapRsp.mark_list)
  return mark_list_.Mutable(index);
}
inline ::proto::MapMarkPoint* MarkMapRsp::add_mark_list() {
  // @@protoc_insertion_point(field_add:proto.MarkMapRsp.mark_list)
  return mark_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
MarkMapRsp::mutable_mark_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MarkMapRsp.mark_list)
  return &mark_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
MarkMapRsp::mark_list() const {
  // @@protoc_insertion_point(field_list:proto.MarkMapRsp.mark_list)
  return mark_list_;
}

// -------------------------------------------------------------------

// AllMarkPointNotify

// repeated .proto.MapMarkPoint mark_list = 1;
inline int AllMarkPointNotify::mark_list_size() const {
  return mark_list_.size();
}
inline void AllMarkPointNotify::clear_mark_list() {
  mark_list_.Clear();
}
inline const ::proto::MapMarkPoint& AllMarkPointNotify::mark_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Get(index);
}
inline ::proto::MapMarkPoint* AllMarkPointNotify::mutable_mark_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Mutable(index);
}
inline ::proto::MapMarkPoint* AllMarkPointNotify::add_mark_list() {
  // @@protoc_insertion_point(field_add:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
AllMarkPointNotify::mutable_mark_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllMarkPointNotify.mark_list)
  return &mark_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
AllMarkPointNotify::mark_list() const {
  // @@protoc_insertion_point(field_list:proto.AllMarkPointNotify.mark_list)
  return mark_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WorldDataNotify

// map<uint32, .proto.PropValue> world_prop_map = 1;
inline int WorldDataNotify::world_prop_map_size() const {
  return world_prop_map_.size();
}
inline void WorldDataNotify::clear_world_prop_map() {
  world_prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
WorldDataNotify::world_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.WorldDataNotify.world_prop_map)
  return world_prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
WorldDataNotify::mutable_world_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.WorldDataNotify.world_prop_map)
  return world_prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// EntityMoveRoomNotify

// uint32 entity_id = 1;
inline void EntityMoveRoomNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveRoomNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveRoomNotify.entity_id)
  return entity_id_;
}
inline void EntityMoveRoomNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveRoomNotify.entity_id)
}

// uint32 dest_room_id = 2;
inline void EntityMoveRoomNotify::clear_dest_room_id() {
  dest_room_id_ = 0u;
}
inline ::google::protobuf::uint32 EntityMoveRoomNotify::dest_room_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveRoomNotify.dest_room_id)
  return dest_room_id_;
}
inline void EntityMoveRoomNotify::set_dest_room_id(::google::protobuf::uint32 value) {
  
  dest_room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveRoomNotify.dest_room_id)
}

// -------------------------------------------------------------------

// WorldPlayerInfoNotify

// repeated .proto.OnlinePlayerInfo player_info_list = 1;
inline int WorldPlayerInfoNotify::player_info_list_size() const {
  return player_info_list_.size();
}
inline void WorldPlayerInfoNotify::clear_player_info_list() {
  player_info_list_.Clear();
}
inline const ::proto::OnlinePlayerInfo& WorldPlayerInfoNotify::player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Get(index);
}
inline ::proto::OnlinePlayerInfo* WorldPlayerInfoNotify::mutable_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Mutable(index);
}
inline ::proto::OnlinePlayerInfo* WorldPlayerInfoNotify::add_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >*
WorldPlayerInfoNotify::mutable_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerInfoNotify.player_info_list)
  return &player_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >&
WorldPlayerInfoNotify::player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_;
}

// repeated uint32 player_uid_list = 2;
inline int WorldPlayerInfoNotify::player_uid_list_size() const {
  return player_uid_list_.size();
}
inline void WorldPlayerInfoNotify::clear_player_uid_list() {
  player_uid_list_.Clear();
}
inline ::google::protobuf::uint32 WorldPlayerInfoNotify::player_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerInfoNotify.player_uid_list)
  return player_uid_list_.Get(index);
}
inline void WorldPlayerInfoNotify::set_player_uid_list(int index, ::google::protobuf::uint32 value) {
  player_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorldPlayerInfoNotify.player_uid_list)
}
inline void WorldPlayerInfoNotify::add_player_uid_list(::google::protobuf::uint32 value) {
  player_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorldPlayerInfoNotify.player_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorldPlayerInfoNotify::player_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerInfoNotify.player_uid_list)
  return player_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorldPlayerInfoNotify::mutable_player_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerInfoNotify.player_uid_list)
  return &player_uid_list_;
}

// -------------------------------------------------------------------

// PostEnterSceneReq

// uint32 enter_scene_token = 1;
inline void PostEnterSceneReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
inline ::google::protobuf::uint32 PostEnterSceneReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.PostEnterSceneReq.enter_scene_token)
  return enter_scene_token_;
}
inline void PostEnterSceneReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PostEnterSceneReq.enter_scene_token)
}

// -------------------------------------------------------------------

// PostEnterSceneRsp

// int32 retcode = 1;
inline void PostEnterSceneRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PostEnterSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PostEnterSceneRsp.retcode)
  return retcode_;
}
inline void PostEnterSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PostEnterSceneRsp.retcode)
}

// -------------------------------------------------------------------

// ChatInfo_SystemHint

// uint32 type = 1;
inline void ChatInfo_SystemHint::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ChatInfo_SystemHint::type() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.SystemHint.type)
  return type_;
}
inline void ChatInfo_SystemHint::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.SystemHint.type)
}

// -------------------------------------------------------------------

// ChatInfo

// uint32 time = 1;
inline void ChatInfo::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 ChatInfo::time() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.time)
  return time_;
}
inline void ChatInfo::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.time)
}

// uint32 uid = 2;
inline void ChatInfo::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ChatInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.uid)
  return uid_;
}
inline void ChatInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.uid)
}

// string text = 3;
inline bool ChatInfo::has_text() const {
  return content_case() == kText;
}
inline void ChatInfo::set_has_text() {
  _oneof_case_[0] = kText;
}
inline void ChatInfo::clear_text() {
  if (has_text()) {
    content_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
inline const ::std::string& ChatInfo::text() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.text)
  if (has_text()) {
    return content_.text_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void ChatInfo::set_text(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
}
#if LANG_CXX11
inline void ChatInfo::set_text(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ChatInfo.text)
}
#endif
inline void ChatInfo::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ChatInfo.text)
}
inline void ChatInfo::set_text(const char* value, size_t size) {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ChatInfo.text)
}
inline ::std::string* ChatInfo::mutable_text() {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatInfo.text)
  return content_.text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChatInfo::release_text() {
  // @@protoc_insertion_point(field_release:proto.ChatInfo.text)
  if (has_text()) {
    clear_has_content();
    return content_.text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void ChatInfo::set_allocated_text(::std::string* text) {
  if (!has_text()) {
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (text != NULL) {
    set_has_text();
    content_.text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        text);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatInfo.text)
}

// uint32 icon = 4;
inline bool ChatInfo::has_icon() const {
  return content_case() == kIcon;
}
inline void ChatInfo::set_has_icon() {
  _oneof_case_[0] = kIcon;
}
inline void ChatInfo::clear_icon() {
  if (has_icon()) {
    content_.icon_ = 0u;
    clear_has_content();
  }
}
inline ::google::protobuf::uint32 ChatInfo::icon() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.icon)
  if (has_icon()) {
    return content_.icon_;
  }
  return 0u;
}
inline void ChatInfo::set_icon(::google::protobuf::uint32 value) {
  if (!has_icon()) {
    clear_content();
    set_has_icon();
  }
  content_.icon_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.icon)
}

// .proto.ChatInfo.SystemHint system_hint = 5;
inline bool ChatInfo::has_system_hint() const {
  return content_case() == kSystemHint;
}
inline void ChatInfo::set_has_system_hint() {
  _oneof_case_[0] = kSystemHint;
}
inline void ChatInfo::clear_system_hint() {
  if (has_system_hint()) {
    delete content_.system_hint_;
    clear_has_content();
  }
}
inline  const ::proto::ChatInfo_SystemHint& ChatInfo::system_hint() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.system_hint)
  return has_system_hint()
      ? *content_.system_hint_
      : ::proto::ChatInfo_SystemHint::default_instance();
}
inline ::proto::ChatInfo_SystemHint* ChatInfo::mutable_system_hint() {
  if (!has_system_hint()) {
    clear_content();
    set_has_system_hint();
    content_.system_hint_ = new ::proto::ChatInfo_SystemHint;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatInfo.system_hint)
  return content_.system_hint_;
}
inline ::proto::ChatInfo_SystemHint* ChatInfo::release_system_hint() {
  // @@protoc_insertion_point(field_release:proto.ChatInfo.system_hint)
  if (has_system_hint()) {
    clear_has_content();
    ::proto::ChatInfo_SystemHint* temp = content_.system_hint_;
    content_.system_hint_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ChatInfo::set_allocated_system_hint(::proto::ChatInfo_SystemHint* system_hint) {
  clear_content();
  if (system_hint) {
    set_has_system_hint();
    content_.system_hint_ = system_hint;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatInfo.system_hint)
}

inline bool ChatInfo::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
inline void ChatInfo::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
inline ChatInfo::ContentCase ChatInfo::content_case() const {
  return ChatInfo::ContentCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// PlayerChatReq

// uint32 channel_id = 1;
inline void PlayerChatReq::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerChatReq::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatReq.channel_id)
  return channel_id_;
}
inline void PlayerChatReq::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatReq.channel_id)
}

// .proto.ChatInfo chat_info = 2;
inline bool PlayerChatReq::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
inline void PlayerChatReq::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
inline const ::proto::ChatInfo& PlayerChatReq::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerChatReq.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
inline ::proto::ChatInfo* PlayerChatReq::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerChatReq.chat_info)
  return chat_info_;
}
inline ::proto::ChatInfo* PlayerChatReq::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerChatReq.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
inline void PlayerChatReq::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerChatReq.chat_info)
}

// -------------------------------------------------------------------

// PlayerChatRsp

// int32 retcode = 1;
inline void PlayerChatRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatRsp.retcode)
  return retcode_;
}
inline void PlayerChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerChatNotify

// uint32 channel_id = 1;
inline void PlayerChatNotify::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerChatNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatNotify.channel_id)
  return channel_id_;
}
inline void PlayerChatNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatNotify.channel_id)
}

// .proto.ChatInfo chat_info = 2;
inline bool PlayerChatNotify::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
inline void PlayerChatNotify::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
inline const ::proto::ChatInfo& PlayerChatNotify::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerChatNotify.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
inline ::proto::ChatInfo* PlayerChatNotify::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerChatNotify.chat_info)
  return chat_info_;
}
inline ::proto::ChatInfo* PlayerChatNotify::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerChatNotify.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
inline void PlayerChatNotify::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerChatNotify.chat_info)
}

// -------------------------------------------------------------------

// PlayerChatCDNotify

// uint32 over_time = 1;
inline void PlayerChatCDNotify::clear_over_time() {
  over_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerChatCDNotify::over_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatCDNotify.over_time)
  return over_time_;
}
inline void PlayerChatCDNotify::set_over_time(::google::protobuf::uint32 value) {
  
  over_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatCDNotify.over_time)
}

// -------------------------------------------------------------------

// ChatHistoryNotify

// uint32 channel_id = 1;
inline void ChatHistoryNotify::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 ChatHistoryNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatHistoryNotify.channel_id)
  return channel_id_;
}
inline void ChatHistoryNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatHistoryNotify.channel_id)
}

// repeated .proto.ChatInfo chat_info = 2;
inline int ChatHistoryNotify::chat_info_size() const {
  return chat_info_.size();
}
inline void ChatHistoryNotify::clear_chat_info() {
  chat_info_.Clear();
}
inline const ::proto::ChatInfo& ChatHistoryNotify::chat_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Get(index);
}
inline ::proto::ChatInfo* ChatHistoryNotify::mutable_chat_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Mutable(index);
}
inline ::proto::ChatInfo* ChatHistoryNotify::add_chat_info() {
  // @@protoc_insertion_point(field_add:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
ChatHistoryNotify::mutable_chat_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatHistoryNotify.chat_info)
  return &chat_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
ChatHistoryNotify::chat_info() const {
  // @@protoc_insertion_point(field_list:proto.ChatHistoryNotify.chat_info)
  return chat_info_;
}

// -------------------------------------------------------------------

// SceneDataNotify

// repeated string level_config_name_list = 1;
inline int SceneDataNotify::level_config_name_list_size() const {
  return level_config_name_list_.size();
}
inline void SceneDataNotify::clear_level_config_name_list() {
  level_config_name_list_.Clear();
}
inline const ::std::string& SceneDataNotify::level_config_name_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Get(index);
}
inline ::std::string* SceneDataNotify::mutable_level_config_name_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Mutable(index);
}
inline void SceneDataNotify::set_level_config_name_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.SceneDataNotify.level_config_name_list)
  level_config_name_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void SceneDataNotify::set_level_config_name_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.SceneDataNotify.level_config_name_list)
  level_config_name_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void SceneDataNotify::set_level_config_name_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  level_config_name_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.SceneDataNotify.level_config_name_list)
}
inline void SceneDataNotify::set_level_config_name_list(int index, const char* value, size_t size) {
  level_config_name_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.SceneDataNotify.level_config_name_list)
}
inline ::std::string* SceneDataNotify::add_level_config_name_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Add();
}
inline void SceneDataNotify::add_level_config_name_list(const ::std::string& value) {
  level_config_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.SceneDataNotify.level_config_name_list)
}
#if LANG_CXX11
inline void SceneDataNotify::add_level_config_name_list(::std::string&& value) {
  level_config_name_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.SceneDataNotify.level_config_name_list)
}
#endif
inline void SceneDataNotify::add_level_config_name_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  level_config_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.SceneDataNotify.level_config_name_list)
}
inline void SceneDataNotify::add_level_config_name_list(const char* value, size_t size) {
  level_config_name_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.SceneDataNotify.level_config_name_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SceneDataNotify::level_config_name_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SceneDataNotify::mutable_level_config_name_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneDataNotify.level_config_name_list)
  return &level_config_name_list_;
}

// -------------------------------------------------------------------

// DungeonEntryToBeExploreNotify

// uint32 dungeon_entry_scene_point_id = 1;
inline void DungeonEntryToBeExploreNotify::clear_dungeon_entry_scene_point_id() {
  dungeon_entry_scene_point_id_ = 0u;
}
inline ::google::protobuf::uint32 DungeonEntryToBeExploreNotify::dungeon_entry_scene_point_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.dungeon_entry_scene_point_id)
  return dungeon_entry_scene_point_id_;
}
inline void DungeonEntryToBeExploreNotify::set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_scene_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.dungeon_entry_scene_point_id)
}

// uint32 dungeon_entry_config_id = 2;
inline void DungeonEntryToBeExploreNotify::clear_dungeon_entry_config_id() {
  dungeon_entry_config_id_ = 0u;
}
inline ::google::protobuf::uint32 DungeonEntryToBeExploreNotify::dungeon_entry_config_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.dungeon_entry_config_id)
  return dungeon_entry_config_id_;
}
inline void DungeonEntryToBeExploreNotify::set_dungeon_entry_config_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.dungeon_entry_config_id)
}

// uint32 scene_id = 3;
inline void DungeonEntryToBeExploreNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 DungeonEntryToBeExploreNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.scene_id)
  return scene_id_;
}
inline void DungeonEntryToBeExploreNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.scene_id)
}

// -------------------------------------------------------------------

// GetDungeonEntryExploreConditionReq

// uint32 dungeon_entry_scene_point_id = 1;
inline void GetDungeonEntryExploreConditionReq::clear_dungeon_entry_scene_point_id() {
  dungeon_entry_scene_point_id_ = 0u;
}
inline ::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::dungeon_entry_scene_point_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_scene_point_id)
  return dungeon_entry_scene_point_id_;
}
inline void GetDungeonEntryExploreConditionReq::set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_scene_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_scene_point_id)
}

// uint32 dungeon_entry_config_id = 2;
inline void GetDungeonEntryExploreConditionReq::clear_dungeon_entry_config_id() {
  dungeon_entry_config_id_ = 0u;
}
inline ::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::dungeon_entry_config_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_config_id)
  return dungeon_entry_config_id_;
}
inline void GetDungeonEntryExploreConditionReq::set_dungeon_entry_config_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_config_id)
}

// uint32 scene_id = 3;
inline void GetDungeonEntryExploreConditionReq::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.scene_id)
  return scene_id_;
}
inline void GetDungeonEntryExploreConditionReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.scene_id)
}

// -------------------------------------------------------------------

// DungeonEntryCond

// .proto.DungeonEntryBlockReason cond_reason = 1;
inline void DungeonEntryCond::clear_cond_reason() {
  cond_reason_ = 0;
}
inline ::proto::DungeonEntryBlockReason DungeonEntryCond::cond_reason() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryCond.cond_reason)
  return static_cast< ::proto::DungeonEntryBlockReason >(cond_reason_);
}
inline void DungeonEntryCond::set_cond_reason(::proto::DungeonEntryBlockReason value) {
  
  cond_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryCond.cond_reason)
}

// uint32 param1 = 2;
inline void DungeonEntryCond::clear_param1() {
  param1_ = 0u;
}
inline ::google::protobuf::uint32 DungeonEntryCond::param1() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryCond.param1)
  return param1_;
}
inline void DungeonEntryCond::set_param1(::google::protobuf::uint32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryCond.param1)
}

// -------------------------------------------------------------------

// GetDungeonEntryExploreConditionRsp

// int32 retcode = 1;
inline void GetDungeonEntryExploreConditionRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetDungeonEntryExploreConditionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionRsp.retcode)
  return retcode_;
}
inline void GetDungeonEntryExploreConditionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionRsp.retcode)
}

// .proto.DungeonEntryCond dungeon_entry_cond = 2;
inline bool GetDungeonEntryExploreConditionRsp::has_dungeon_entry_cond() const {
  return this != internal_default_instance() && dungeon_entry_cond_ != NULL;
}
inline void GetDungeonEntryExploreConditionRsp::clear_dungeon_entry_cond() {
  if (GetArenaNoVirtual() == NULL && dungeon_entry_cond_ != NULL) delete dungeon_entry_cond_;
  dungeon_entry_cond_ = NULL;
}
inline const ::proto::DungeonEntryCond& GetDungeonEntryExploreConditionRsp::dungeon_entry_cond() const {
  const ::proto::DungeonEntryCond* p = dungeon_entry_cond_;
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DungeonEntryCond*>(
      &::proto::_DungeonEntryCond_default_instance_);
}
inline ::proto::DungeonEntryCond* GetDungeonEntryExploreConditionRsp::mutable_dungeon_entry_cond() {
  
  if (dungeon_entry_cond_ == NULL) {
    dungeon_entry_cond_ = new ::proto::DungeonEntryCond;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  return dungeon_entry_cond_;
}
inline ::proto::DungeonEntryCond* GetDungeonEntryExploreConditionRsp::release_dungeon_entry_cond() {
  // @@protoc_insertion_point(field_release:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  
  ::proto::DungeonEntryCond* temp = dungeon_entry_cond_;
  dungeon_entry_cond_ = NULL;
  return temp;
}
inline void GetDungeonEntryExploreConditionRsp::set_allocated_dungeon_entry_cond(::proto::DungeonEntryCond* dungeon_entry_cond) {
  delete dungeon_entry_cond_;
  dungeon_entry_cond_ = dungeon_entry_cond;
  if (dungeon_entry_cond) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
}

// -------------------------------------------------------------------

// UnfreezeGroupLimitNotify

// uint32 point_id = 1;
inline void UnfreezeGroupLimitNotify::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 UnfreezeGroupLimitNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.UnfreezeGroupLimitNotify.point_id)
  return point_id_;
}
inline void UnfreezeGroupLimitNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnfreezeGroupLimitNotify.point_id)
}

// uint32 scene_id = 2;
inline void UnfreezeGroupLimitNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 UnfreezeGroupLimitNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.UnfreezeGroupLimitNotify.scene_id)
  return scene_id_;
}
inline void UnfreezeGroupLimitNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnfreezeGroupLimitNotify.scene_id)
}

// -------------------------------------------------------------------

// EnterWorldFogAreaNotify

// uint32 scene_id = 1;
inline void EnterWorldFogAreaNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldFogAreaNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldFogAreaNotify.scene_id)
  return scene_id_;
}
inline void EnterWorldFogAreaNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldFogAreaNotify.scene_id)
}

// uint32 fog_area_id = 2;
inline void EnterWorldFogAreaNotify::clear_fog_area_id() {
  fog_area_id_ = 0u;
}
inline ::google::protobuf::uint32 EnterWorldFogAreaNotify::fog_area_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldFogAreaNotify.fog_area_id)
  return fog_area_id_;
}
inline void EnterWorldFogAreaNotify::set_fog_area_id(::google::protobuf::uint32 value) {
  
  fog_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldFogAreaNotify.fog_area_id)
}

// -------------------------------------------------------------------

// UnlockWorldFogAreaNotify

// uint32 scene_id = 1;
inline void UnlockWorldFogAreaNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockWorldFogAreaNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockWorldFogAreaNotify.scene_id)
  return scene_id_;
}
inline void UnlockWorldFogAreaNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockWorldFogAreaNotify.scene_id)
}

// repeated uint32 unlocked_fog_level_1_area_list = 2;
inline int UnlockWorldFogAreaNotify::unlocked_fog_level_1_area_list_size() const {
  return unlocked_fog_level_1_area_list_.size();
}
inline void UnlockWorldFogAreaNotify::clear_unlocked_fog_level_1_area_list() {
  unlocked_fog_level_1_area_list_.Clear();
}
inline ::google::protobuf::uint32 UnlockWorldFogAreaNotify::unlocked_fog_level_1_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
  return unlocked_fog_level_1_area_list_.Get(index);
}
inline void UnlockWorldFogAreaNotify::set_unlocked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value) {
  unlocked_fog_level_1_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
}
inline void UnlockWorldFogAreaNotify::add_unlocked_fog_level_1_area_list(::google::protobuf::uint32 value) {
  unlocked_fog_level_1_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UnlockWorldFogAreaNotify::unlocked_fog_level_1_area_list() const {
  // @@protoc_insertion_point(field_list:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
  return unlocked_fog_level_1_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UnlockWorldFogAreaNotify::mutable_unlocked_fog_level_1_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
  return &unlocked_fog_level_1_area_list_;
}

// repeated uint32 unlocked_fog_level_2_area_list = 3;
inline int UnlockWorldFogAreaNotify::unlocked_fog_level_2_area_list_size() const {
  return unlocked_fog_level_2_area_list_.size();
}
inline void UnlockWorldFogAreaNotify::clear_unlocked_fog_level_2_area_list() {
  unlocked_fog_level_2_area_list_.Clear();
}
inline ::google::protobuf::uint32 UnlockWorldFogAreaNotify::unlocked_fog_level_2_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
  return unlocked_fog_level_2_area_list_.Get(index);
}
inline void UnlockWorldFogAreaNotify::set_unlocked_fog_level_2_area_list(int index, ::google::protobuf::uint32 value) {
  unlocked_fog_level_2_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
}
inline void UnlockWorldFogAreaNotify::add_unlocked_fog_level_2_area_list(::google::protobuf::uint32 value) {
  unlocked_fog_level_2_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UnlockWorldFogAreaNotify::unlocked_fog_level_2_area_list() const {
  // @@protoc_insertion_point(field_list:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
  return unlocked_fog_level_2_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UnlockWorldFogAreaNotify::mutable_unlocked_fog_level_2_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
  return &unlocked_fog_level_2_area_list_;
}

// -------------------------------------------------------------------

// LockWorldFogAreaNotify

// uint32 scene_id = 1;
inline void LockWorldFogAreaNotify::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 LockWorldFogAreaNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.LockWorldFogAreaNotify.scene_id)
  return scene_id_;
}
inline void LockWorldFogAreaNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LockWorldFogAreaNotify.scene_id)
}

// repeated uint32 locked_fog_level_1_area_list = 2;
inline int LockWorldFogAreaNotify::locked_fog_level_1_area_list_size() const {
  return locked_fog_level_1_area_list_.size();
}
inline void LockWorldFogAreaNotify::clear_locked_fog_level_1_area_list() {
  locked_fog_level_1_area_list_.Clear();
}
inline ::google::protobuf::uint32 LockWorldFogAreaNotify::locked_fog_level_1_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
  return locked_fog_level_1_area_list_.Get(index);
}
inline void LockWorldFogAreaNotify::set_locked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value) {
  locked_fog_level_1_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
}
inline void LockWorldFogAreaNotify::add_locked_fog_level_1_area_list(::google::protobuf::uint32 value) {
  locked_fog_level_1_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LockWorldFogAreaNotify::locked_fog_level_1_area_list() const {
  // @@protoc_insertion_point(field_list:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
  return locked_fog_level_1_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LockWorldFogAreaNotify::mutable_locked_fog_level_1_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
  return &locked_fog_level_1_area_list_;
}

// repeated uint32 locked_fog_level_2_area_list = 3;
inline int LockWorldFogAreaNotify::locked_fog_level_2_area_list_size() const {
  return locked_fog_level_2_area_list_.size();
}
inline void LockWorldFogAreaNotify::clear_locked_fog_level_2_area_list() {
  locked_fog_level_2_area_list_.Clear();
}
inline ::google::protobuf::uint32 LockWorldFogAreaNotify::locked_fog_level_2_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
  return locked_fog_level_2_area_list_.Get(index);
}
inline void LockWorldFogAreaNotify::set_locked_fog_level_2_area_list(int index, ::google::protobuf::uint32 value) {
  locked_fog_level_2_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
}
inline void LockWorldFogAreaNotify::add_locked_fog_level_2_area_list(::google::protobuf::uint32 value) {
  locked_fog_level_2_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LockWorldFogAreaNotify::locked_fog_level_2_area_list() const {
  // @@protoc_insertion_point(field_list:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
  return locked_fog_level_2_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LockWorldFogAreaNotify::mutable_locked_fog_level_2_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
  return &locked_fog_level_2_area_list_;
}

// -------------------------------------------------------------------

// SetEntityClientDataNotify

// uint32 entity_id = 1;
inline void SetEntityClientDataNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SetEntityClientDataNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SetEntityClientDataNotify.entity_id)
  return entity_id_;
}
inline void SetEntityClientDataNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetEntityClientDataNotify.entity_id)
}

// bytes entity_client_data = 2;
inline void SetEntityClientDataNotify::clear_entity_client_data() {
  entity_client_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetEntityClientDataNotify::entity_client_data() const {
  // @@protoc_insertion_point(field_get:proto.SetEntityClientDataNotify.entity_client_data)
  return entity_client_data_.GetNoArena();
}
inline void SetEntityClientDataNotify::set_entity_client_data(const ::std::string& value) {
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetEntityClientDataNotify.entity_client_data)
}
#if LANG_CXX11
inline void SetEntityClientDataNotify::set_entity_client_data(::std::string&& value) {
  
  entity_client_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetEntityClientDataNotify.entity_client_data)
}
#endif
inline void SetEntityClientDataNotify::set_entity_client_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetEntityClientDataNotify.entity_client_data)
}
inline void SetEntityClientDataNotify::set_entity_client_data(const void* value, size_t size) {
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetEntityClientDataNotify.entity_client_data)
}
inline ::std::string* SetEntityClientDataNotify::mutable_entity_client_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetEntityClientDataNotify.entity_client_data)
  return entity_client_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetEntityClientDataNotify::release_entity_client_data() {
  // @@protoc_insertion_point(field_release:proto.SetEntityClientDataNotify.entity_client_data)
  
  return entity_client_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetEntityClientDataNotify::set_allocated_entity_client_data(::std::string* entity_client_data) {
  if (entity_client_data != NULL) {
    
  } else {
    
  }
  entity_client_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_client_data);
  // @@protoc_insertion_point(field_set_allocated:proto.SetEntityClientDataNotify.entity_client_data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::PlayerEnterSceneNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerEnterSceneNotify_CmdId>() {
  return ::proto::PlayerEnterSceneNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LeaveSceneReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LeaveSceneReq_CmdId>() {
  return ::proto::LeaveSceneReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LeaveSceneRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LeaveSceneRsp_CmdId>() {
  return ::proto::LeaveSceneRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneInitFinishReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneInitFinishReq_CmdId>() {
  return ::proto::SceneInitFinishReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneInitFinishRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneInitFinishRsp_CmdId>() {
  return ::proto::SceneInitFinishRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntityAppearNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntityAppearNotify_CmdId>() {
  return ::proto::SceneEntityAppearNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntityDisappearNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntityDisappearNotify_CmdId>() {
  return ::proto::SceneEntityDisappearNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntityMoveReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntityMoveReq_CmdId>() {
  return ::proto::SceneEntityMoveReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntityMoveRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntityMoveRsp_CmdId>() {
  return ::proto::SceneEntityMoveRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneAvatarStaminaStepReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneAvatarStaminaStepReq_CmdId>() {
  return ::proto::SceneAvatarStaminaStepReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneAvatarStaminaStepRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneAvatarStaminaStepRsp_CmdId>() {
  return ::proto::SceneAvatarStaminaStepRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntityMoveNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntityMoveNotify_CmdId>() {
  return ::proto::SceneEntityMoveNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ScenePlayerLocationNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ScenePlayerLocationNotify_CmdId>() {
  return ::proto::ScenePlayerLocationNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetScenePointReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetScenePointReq_CmdId>() {
  return ::proto::GetScenePointReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetScenePointRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetScenePointRsp_CmdId>() {
  return ::proto::GetScenePointRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterTransPointRegionNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterTransPointRegionNotify_CmdId>() {
  return ::proto::EnterTransPointRegionNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ExitTransPointRegionNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExitTransPointRegionNotify_CmdId>() {
  return ::proto::ExitTransPointRegionNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ScenePointUnlockNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ScenePointUnlockNotify_CmdId>() {
  return ::proto::ScenePointUnlockNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneTransToPointReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneTransToPointReq_CmdId>() {
  return ::proto::SceneTransToPointReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneTransToPointRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneTransToPointRsp_CmdId>() {
  return ::proto::SceneTransToPointRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityJumpNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityJumpNotify_CmdId>() {
  return ::proto::EntityJumpNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityJumpNotify_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityJumpNotify_Type>() {
  return ::proto::EntityJumpNotify_Type_descriptor();
}
template <> struct is_proto_enum< ::proto::GetSceneAreaReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetSceneAreaReq_CmdId>() {
  return ::proto::GetSceneAreaReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetSceneAreaRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetSceneAreaRsp_CmdId>() {
  return ::proto::GetSceneAreaRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneAreaUnlockNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneAreaUnlockNotify_CmdId>() {
  return ::proto::SceneAreaUnlockNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntityDrownReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntityDrownReq_CmdId>() {
  return ::proto::SceneEntityDrownReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntityDrownRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntityDrownRsp_CmdId>() {
  return ::proto::SceneEntityDrownRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneCreateEntityReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneCreateEntityReq_CmdId>() {
  return ::proto::SceneCreateEntityReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneCreateEntityRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneCreateEntityRsp_CmdId>() {
  return ::proto::SceneCreateEntityRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneDestroyEntityReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneDestroyEntityReq_CmdId>() {
  return ::proto::SceneDestroyEntityReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneDestroyEntityRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneDestroyEntityRsp_CmdId>() {
  return ::proto::SceneDestroyEntityRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneForceUnlockNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneForceUnlockNotify_CmdId>() {
  return ::proto::SceneForceUnlockNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneForceLockNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneForceLockNotify_CmdId>() {
  return ::proto::SceneForceLockNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterWorldAreaReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterWorldAreaReq_CmdId>() {
  return ::proto::EnterWorldAreaReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterWorldAreaRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterWorldAreaRsp_CmdId>() {
  return ::proto::EnterWorldAreaRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityForceSyncReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityForceSyncReq_CmdId>() {
  return ::proto::EntityForceSyncReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityForceSyncRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityForceSyncRsp_CmdId>() {
  return ::proto::EntityForceSyncRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneAreaExploreNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneAreaExploreNotify_CmdId>() {
  return ::proto::SceneAreaExploreNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneGetAreaExplorePercentReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneGetAreaExplorePercentReq_CmdId>() {
  return ::proto::SceneGetAreaExplorePercentReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneGetAreaExplorePercentRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneGetAreaExplorePercentRsp_CmdId>() {
  return ::proto::SceneGetAreaExplorePercentRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientTransmitReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientTransmitReq_CmdId>() {
  return ::proto::ClientTransmitReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientTransmitRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientTransmitRsp_CmdId>() {
  return ::proto::ClientTransmitRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterSceneWeatherAreaNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterSceneWeatherAreaNotify_CmdId>() {
  return ::proto::EnterSceneWeatherAreaNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ExitSceneWeatherAreaNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExitSceneWeatherAreaNotify_CmdId>() {
  return ::proto::ExitSceneWeatherAreaNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneAreaWeatherNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneAreaWeatherNotify_CmdId>() {
  return ::proto::SceneAreaWeatherNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ScenePlayerInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ScenePlayerInfoNotify_CmdId>() {
  return ::proto::ScenePlayerInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldPlayerLocationNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldPlayerLocationNotify_CmdId>() {
  return ::proto::WorldPlayerLocationNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BeginCameraSceneLookNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BeginCameraSceneLookNotify_CmdId>() {
  return ::proto::BeginCameraSceneLookNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EndCameraSceneLookNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EndCameraSceneLookNotify_CmdId>() {
  return ::proto::EndCameraSceneLookNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MarkEntityInMinMapNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MarkEntityInMinMapNotify_CmdId>() {
  return ::proto::MarkEntityInMinMapNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UnmarkEntityInMinMapNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UnmarkEntityInMinMapNotify_CmdId>() {
  return ::proto::UnmarkEntityInMinMapNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DropSubfieldReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DropSubfieldReq_CmdId>() {
  return ::proto::DropSubfieldReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DropSubfieldRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DropSubfieldRsp_CmdId>() {
  return ::proto::DropSubfieldRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ExecuteGroupTriggerReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExecuteGroupTriggerReq_CmdId>() {
  return ::proto::ExecuteGroupTriggerReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ExecuteGroupTriggerRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExecuteGroupTriggerRsp_CmdId>() {
  return ::proto::ExecuteGroupTriggerRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LevelupCityReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LevelupCityReq_CmdId>() {
  return ::proto::LevelupCityReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LevelupCityRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LevelupCityRsp_CmdId>() {
  return ::proto::LevelupCityRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneRouteChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneRouteChangeNotify_CmdId>() {
  return ::proto::SceneRouteChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlatformStartRouteNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlatformStartRouteNotify_CmdId>() {
  return ::proto::PlatformStartRouteNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlatformStopRouteNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlatformStopRouteNotify_CmdId>() {
  return ::proto::PlatformStopRouteNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlatformChangeRouteNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlatformChangeRouteNotify_CmdId>() {
  return ::proto::PlatformChangeRouteNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ScenePlayerSoundNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ScenePlayerSoundNotify_CmdId>() {
  return ::proto::ScenePlayerSoundNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ScenePlayerSoundNotify_PlaySoundType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ScenePlayerSoundNotify_PlaySoundType>() {
  return ::proto::ScenePlayerSoundNotify_PlaySoundType_descriptor();
}
template <> struct is_proto_enum< ::proto::PersonalSceneJumpReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PersonalSceneJumpReq_CmdId>() {
  return ::proto::PersonalSceneJumpReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PersonalSceneJumpRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PersonalSceneJumpRsp_CmdId>() {
  return ::proto::PersonalSceneJumpRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SealBattleBeginNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SealBattleBeginNotify_CmdId>() {
  return ::proto::SealBattleBeginNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SealBattleEndNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SealBattleEndNotify_CmdId>() {
  return ::proto::SealBattleEndNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SealBattleProgressNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SealBattleProgressNotify_CmdId>() {
  return ::proto::SealBattleProgressNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientPauseNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientPauseNotify_CmdId>() {
  return ::proto::ClientPauseNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerEnterSceneInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerEnterSceneInfoNotify_CmdId>() {
  return ::proto::PlayerEnterSceneInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::JoinPlayerSceneReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::JoinPlayerSceneReq_CmdId>() {
  return ::proto::JoinPlayerSceneReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::JoinPlayerSceneRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::JoinPlayerSceneRsp_CmdId>() {
  return ::proto::JoinPlayerSceneRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneKickPlayerReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneKickPlayerReq_CmdId>() {
  return ::proto::SceneKickPlayerReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneKickPlayerRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneKickPlayerRsp_CmdId>() {
  return ::proto::SceneKickPlayerRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneKickPlayerNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneKickPlayerNotify_CmdId>() {
  return ::proto::SceneKickPlayerNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::HitClientTrivialNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HitClientTrivialNotify_CmdId>() {
  return ::proto::HitClientTrivialNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BackMyWorldReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BackMyWorldReq_CmdId>() {
  return ::proto::BackMyWorldReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BackMyWorldRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BackMyWorldRsp_CmdId>() {
  return ::proto::BackMyWorldRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SeeMonsterReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SeeMonsterReq_CmdId>() {
  return ::proto::SeeMonsterReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SeeMonsterRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SeeMonsterRsp_CmdId>() {
  return ::proto::SeeMonsterRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AddSeenMonsterNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AddSeenMonsterNotify_CmdId>() {
  return ::proto::AddSeenMonsterNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AllSeenMonsterNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AllSeenMonsterNotify_CmdId>() {
  return ::proto::AllSeenMonsterNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneTimeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneTimeNotify_CmdId>() {
  return ::proto::SceneTimeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterSceneReadyReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterSceneReadyReq_CmdId>() {
  return ::proto::EnterSceneReadyReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterSceneReadyRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterSceneReadyRsp_CmdId>() {
  return ::proto::EnterSceneReadyRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterScenePeerNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterScenePeerNotify_CmdId>() {
  return ::proto::EnterScenePeerNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterSceneDoneReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterSceneDoneReq_CmdId>() {
  return ::proto::EnterSceneDoneReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterSceneDoneRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterSceneDoneRsp_CmdId>() {
  return ::proto::EnterSceneDoneRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldPlayerDieNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldPlayerDieNotify_CmdId>() {
  return ::proto::WorldPlayerDieNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldPlayerReviveReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldPlayerReviveReq_CmdId>() {
  return ::proto::WorldPlayerReviveReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldPlayerReviveRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldPlayerReviveRsp_CmdId>() {
  return ::proto::WorldPlayerReviveRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::JoinPlayerFailNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::JoinPlayerFailNotify_CmdId>() {
  return ::proto::JoinPlayerFailNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetSceneWeatherAreaReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetSceneWeatherAreaReq_CmdId>() {
  return ::proto::SetSceneWeatherAreaReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetSceneWeatherAreaRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetSceneWeatherAreaRsp_CmdId>() {
  return ::proto::SetSceneWeatherAreaRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ExecuteGadgetLuaReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExecuteGadgetLuaReq_CmdId>() {
  return ::proto::ExecuteGadgetLuaReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ExecuteGadgetLuaRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ExecuteGadgetLuaRsp_CmdId>() {
  return ::proto::ExecuteGadgetLuaRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CutSceneBeginNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CutSceneBeginNotify_CmdId>() {
  return ::proto::CutSceneBeginNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CutSceneFinishNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CutSceneFinishNotify_CmdId>() {
  return ::proto::CutSceneFinishNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CutSceneEndNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CutSceneEndNotify_CmdId>() {
  return ::proto::CutSceneEndNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientScriptEventNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientScriptEventNotify_CmdId>() {
  return ::proto::ClientScriptEventNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntitiesMovesReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntitiesMovesReq_CmdId>() {
  return ::proto::SceneEntitiesMovesReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntitiesMovesRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntitiesMovesRsp_CmdId>() {
  return ::proto::SceneEntitiesMovesRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneEntitiesMoveCombineNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneEntitiesMoveCombineNotify_CmdId>() {
  return ::proto::SceneEntitiesMoveCombineNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UnlockTransPointReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UnlockTransPointReq_CmdId>() {
  return ::proto::UnlockTransPointReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UnlockTransPointRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UnlockTransPointRsp_CmdId>() {
  return ::proto::UnlockTransPointRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlatformRouteStateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlatformRouteStateNotify_CmdId>() {
  return ::proto::PlatformRouteStateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneWeatherForcastReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneWeatherForcastReq_CmdId>() {
  return ::proto::SceneWeatherForcastReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneWeatherForcastRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneWeatherForcastRsp_CmdId>() {
  return ::proto::SceneWeatherForcastRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MarkMapReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MarkMapReq_CmdId>() {
  return ::proto::MarkMapReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::MarkMapReq_Operation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MarkMapReq_Operation>() {
  return ::proto::MarkMapReq_Operation_descriptor();
}
template <> struct is_proto_enum< ::proto::MarkMapRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MarkMapRsp_CmdId>() {
  return ::proto::MarkMapRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AllMarkPointNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AllMarkPointNotify_CmdId>() {
  return ::proto::AllMarkPointNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldDataNotify_CmdId>() {
  return ::proto::WorldDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldDataNotify_DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldDataNotify_DataType>() {
  return ::proto::WorldDataNotify_DataType_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityMoveRoomNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityMoveRoomNotify_CmdId>() {
  return ::proto::EntityMoveRoomNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldPlayerInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldPlayerInfoNotify_CmdId>() {
  return ::proto::WorldPlayerInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PostEnterSceneReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PostEnterSceneReq_CmdId>() {
  return ::proto::PostEnterSceneReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PostEnterSceneRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PostEnterSceneRsp_CmdId>() {
  return ::proto::PostEnterSceneRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChatInfo_SystemHintType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChatInfo_SystemHintType>() {
  return ::proto::ChatInfo_SystemHintType_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerChatReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerChatReq_CmdId>() {
  return ::proto::PlayerChatReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerChatRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerChatRsp_CmdId>() {
  return ::proto::PlayerChatRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerChatNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerChatNotify_CmdId>() {
  return ::proto::PlayerChatNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerChatCDNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerChatCDNotify_CmdId>() {
  return ::proto::PlayerChatCDNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChatHistoryNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChatHistoryNotify_CmdId>() {
  return ::proto::ChatHistoryNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneDataNotify_CmdId>() {
  return ::proto::SceneDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DungeonEntryToBeExploreNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DungeonEntryToBeExploreNotify_CmdId>() {
  return ::proto::DungeonEntryToBeExploreNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetDungeonEntryExploreConditionReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetDungeonEntryExploreConditionReq_CmdId>() {
  return ::proto::GetDungeonEntryExploreConditionReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetDungeonEntryExploreConditionRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetDungeonEntryExploreConditionRsp_CmdId>() {
  return ::proto::GetDungeonEntryExploreConditionRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UnfreezeGroupLimitNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UnfreezeGroupLimitNotify_CmdId>() {
  return ::proto::UnfreezeGroupLimitNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterWorldFogAreaNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterWorldFogAreaNotify_CmdId>() {
  return ::proto::EnterWorldFogAreaNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::UnlockWorldFogAreaNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::UnlockWorldFogAreaNotify_CmdId>() {
  return ::proto::UnlockWorldFogAreaNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::LockWorldFogAreaNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::LockWorldFogAreaNotify_CmdId>() {
  return ::proto::LockWorldFogAreaNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetEntityClientDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetEntityClientDataNotify_CmdId>() {
  return ::proto::SetEntityClientDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::EnterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EnterType>() {
  return ::proto::EnterType_descriptor();
}
template <> struct is_proto_enum< ::proto::VisionType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VisionType>() {
  return ::proto::VisionType_descriptor();
}
template <> struct is_proto_enum< ::proto::CreateReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CreateReason>() {
  return ::proto::CreateReason_descriptor();
}
template <> struct is_proto_enum< ::proto::TransmitReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TransmitReason>() {
  return ::proto::TransmitReason_descriptor();
}
template <> struct is_proto_enum< ::proto::DropSubfieldType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DropSubfieldType>() {
  return ::proto::DropSubfieldType_descriptor();
}
template <> struct is_proto_enum< ::proto::SealBattleType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SealBattleType>() {
  return ::proto::SealBattleType_descriptor();
}
template <> struct is_proto_enum< ::proto::DungeonEntryBlockReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DungeonEntryBlockReason>() {
  return ::proto::DungeonEntryBlockReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fscene_2eproto__INCLUDED
