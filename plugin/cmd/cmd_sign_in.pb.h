// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_sign_in.proto

#ifndef PROTOBUF_cmd_2fcmd_5fsign_5fin_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fsign_5fin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
class BonusActivityAllDataNotify;
class BonusActivityAllDataNotifyDefaultTypeInternal;
extern BonusActivityAllDataNotifyDefaultTypeInternal _BonusActivityAllDataNotify_default_instance_;
class BonusActivityInfo;
class BonusActivityInfoDefaultTypeInternal;
extern BonusActivityInfoDefaultTypeInternal _BonusActivityInfo_default_instance_;
class BonusActivityInfoReq;
class BonusActivityInfoReqDefaultTypeInternal;
extern BonusActivityInfoReqDefaultTypeInternal _BonusActivityInfoReq_default_instance_;
class BonusActivityInfoRsp;
class BonusActivityInfoRspDefaultTypeInternal;
extern BonusActivityInfoRspDefaultTypeInternal _BonusActivityInfoRsp_default_instance_;
class BonusActivityUpdateNotify;
class BonusActivityUpdateNotifyDefaultTypeInternal;
extern BonusActivityUpdateNotifyDefaultTypeInternal _BonusActivityUpdateNotify_default_instance_;
class GetBonusActivityRewardReq;
class GetBonusActivityRewardReqDefaultTypeInternal;
extern GetBonusActivityRewardReqDefaultTypeInternal _GetBonusActivityRewardReq_default_instance_;
class GetBonusActivityRewardRsp;
class GetBonusActivityRewardRspDefaultTypeInternal;
extern GetBonusActivityRewardRspDefaultTypeInternal _GetBonusActivityRewardRsp_default_instance_;
class GetSignInRewardReq;
class GetSignInRewardReqDefaultTypeInternal;
extern GetSignInRewardReqDefaultTypeInternal _GetSignInRewardReq_default_instance_;
class GetSignInRewardRsp;
class GetSignInRewardRspDefaultTypeInternal;
extern GetSignInRewardRspDefaultTypeInternal _GetSignInRewardRsp_default_instance_;
class SignInAllDataNotify;
class SignInAllDataNotifyDefaultTypeInternal;
extern SignInAllDataNotifyDefaultTypeInternal _SignInAllDataNotify_default_instance_;
class SignInInfo;
class SignInInfoDefaultTypeInternal;
extern SignInInfoDefaultTypeInternal _SignInInfo_default_instance_;
class SignInInfoOpenNotify;
class SignInInfoOpenNotifyDefaultTypeInternal;
extern SignInInfoOpenNotifyDefaultTypeInternal _SignInInfoOpenNotify_default_instance_;
class SignInInfoReq;
class SignInInfoReqDefaultTypeInternal;
extern SignInInfoReqDefaultTypeInternal _SignInInfoReq_default_instance_;
class SignInInfoRsp;
class SignInInfoRspDefaultTypeInternal;
extern SignInInfoRspDefaultTypeInternal _SignInInfoRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fsign_5fin_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fsign_5fin_2eproto

enum SignInAllDataNotify_CmdId {
  SignInAllDataNotify_CmdId_NONE = 0,
  SignInAllDataNotify_CmdId_CMD_ID = 2501,
  SignInAllDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  SignInAllDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  SignInAllDataNotify_CmdId_SignInAllDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignInAllDataNotify_CmdId_SignInAllDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignInAllDataNotify_CmdId_IsValid(int value);
const SignInAllDataNotify_CmdId SignInAllDataNotify_CmdId_CmdId_MIN = SignInAllDataNotify_CmdId_NONE;
const SignInAllDataNotify_CmdId SignInAllDataNotify_CmdId_CmdId_MAX = SignInAllDataNotify_CmdId_CMD_ID;
const int SignInAllDataNotify_CmdId_CmdId_ARRAYSIZE = SignInAllDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignInAllDataNotify_CmdId_descriptor();
inline const ::std::string& SignInAllDataNotify_CmdId_Name(SignInAllDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignInAllDataNotify_CmdId_descriptor(), value);
}
inline bool SignInAllDataNotify_CmdId_Parse(
    const ::std::string& name, SignInAllDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignInAllDataNotify_CmdId>(
    SignInAllDataNotify_CmdId_descriptor(), name, value);
}
enum SignInInfoOpenNotify_CmdId {
  SignInInfoOpenNotify_CmdId_NONE = 0,
  SignInInfoOpenNotify_CmdId_CMD_ID = 2502,
  SignInInfoOpenNotify_CmdId_ENET_CHANNEL_ID = 0,
  SignInInfoOpenNotify_CmdId_ENET_IS_RELIABLE = 1,
  SignInInfoOpenNotify_CmdId_SignInInfoOpenNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignInInfoOpenNotify_CmdId_SignInInfoOpenNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignInInfoOpenNotify_CmdId_IsValid(int value);
const SignInInfoOpenNotify_CmdId SignInInfoOpenNotify_CmdId_CmdId_MIN = SignInInfoOpenNotify_CmdId_NONE;
const SignInInfoOpenNotify_CmdId SignInInfoOpenNotify_CmdId_CmdId_MAX = SignInInfoOpenNotify_CmdId_CMD_ID;
const int SignInInfoOpenNotify_CmdId_CmdId_ARRAYSIZE = SignInInfoOpenNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignInInfoOpenNotify_CmdId_descriptor();
inline const ::std::string& SignInInfoOpenNotify_CmdId_Name(SignInInfoOpenNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignInInfoOpenNotify_CmdId_descriptor(), value);
}
inline bool SignInInfoOpenNotify_CmdId_Parse(
    const ::std::string& name, SignInInfoOpenNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignInInfoOpenNotify_CmdId>(
    SignInInfoOpenNotify_CmdId_descriptor(), name, value);
}
enum SignInInfoReq_CmdId {
  SignInInfoReq_CmdId_NONE = 0,
  SignInInfoReq_CmdId_CMD_ID = 2503,
  SignInInfoReq_CmdId_ENET_CHANNEL_ID = 0,
  SignInInfoReq_CmdId_ENET_IS_RELIABLE = 1,
  SignInInfoReq_CmdId_IS_ALLOW_CLIENT = 1,
  SignInInfoReq_CmdId_SignInInfoReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignInInfoReq_CmdId_SignInInfoReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignInInfoReq_CmdId_IsValid(int value);
const SignInInfoReq_CmdId SignInInfoReq_CmdId_CmdId_MIN = SignInInfoReq_CmdId_NONE;
const SignInInfoReq_CmdId SignInInfoReq_CmdId_CmdId_MAX = SignInInfoReq_CmdId_CMD_ID;
const int SignInInfoReq_CmdId_CmdId_ARRAYSIZE = SignInInfoReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignInInfoReq_CmdId_descriptor();
inline const ::std::string& SignInInfoReq_CmdId_Name(SignInInfoReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignInInfoReq_CmdId_descriptor(), value);
}
inline bool SignInInfoReq_CmdId_Parse(
    const ::std::string& name, SignInInfoReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignInInfoReq_CmdId>(
    SignInInfoReq_CmdId_descriptor(), name, value);
}
enum SignInInfoRsp_CmdId {
  SignInInfoRsp_CmdId_NONE = 0,
  SignInInfoRsp_CmdId_CMD_ID = 2504,
  SignInInfoRsp_CmdId_ENET_CHANNEL_ID = 0,
  SignInInfoRsp_CmdId_ENET_IS_RELIABLE = 1,
  SignInInfoRsp_CmdId_SignInInfoRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SignInInfoRsp_CmdId_SignInInfoRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SignInInfoRsp_CmdId_IsValid(int value);
const SignInInfoRsp_CmdId SignInInfoRsp_CmdId_CmdId_MIN = SignInInfoRsp_CmdId_NONE;
const SignInInfoRsp_CmdId SignInInfoRsp_CmdId_CmdId_MAX = SignInInfoRsp_CmdId_CMD_ID;
const int SignInInfoRsp_CmdId_CmdId_ARRAYSIZE = SignInInfoRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SignInInfoRsp_CmdId_descriptor();
inline const ::std::string& SignInInfoRsp_CmdId_Name(SignInInfoRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SignInInfoRsp_CmdId_descriptor(), value);
}
inline bool SignInInfoRsp_CmdId_Parse(
    const ::std::string& name, SignInInfoRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SignInInfoRsp_CmdId>(
    SignInInfoRsp_CmdId_descriptor(), name, value);
}
enum GetSignInRewardReq_CmdId {
  GetSignInRewardReq_CmdId_NONE = 0,
  GetSignInRewardReq_CmdId_CMD_ID = 2505,
  GetSignInRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  GetSignInRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  GetSignInRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetSignInRewardReq_CmdId_GetSignInRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetSignInRewardReq_CmdId_GetSignInRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetSignInRewardReq_CmdId_IsValid(int value);
const GetSignInRewardReq_CmdId GetSignInRewardReq_CmdId_CmdId_MIN = GetSignInRewardReq_CmdId_NONE;
const GetSignInRewardReq_CmdId GetSignInRewardReq_CmdId_CmdId_MAX = GetSignInRewardReq_CmdId_CMD_ID;
const int GetSignInRewardReq_CmdId_CmdId_ARRAYSIZE = GetSignInRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetSignInRewardReq_CmdId_descriptor();
inline const ::std::string& GetSignInRewardReq_CmdId_Name(GetSignInRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetSignInRewardReq_CmdId_descriptor(), value);
}
inline bool GetSignInRewardReq_CmdId_Parse(
    const ::std::string& name, GetSignInRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetSignInRewardReq_CmdId>(
    GetSignInRewardReq_CmdId_descriptor(), name, value);
}
enum GetSignInRewardRsp_CmdId {
  GetSignInRewardRsp_CmdId_NONE = 0,
  GetSignInRewardRsp_CmdId_CMD_ID = 2506,
  GetSignInRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetSignInRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetSignInRewardRsp_CmdId_GetSignInRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetSignInRewardRsp_CmdId_GetSignInRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetSignInRewardRsp_CmdId_IsValid(int value);
const GetSignInRewardRsp_CmdId GetSignInRewardRsp_CmdId_CmdId_MIN = GetSignInRewardRsp_CmdId_NONE;
const GetSignInRewardRsp_CmdId GetSignInRewardRsp_CmdId_CmdId_MAX = GetSignInRewardRsp_CmdId_CMD_ID;
const int GetSignInRewardRsp_CmdId_CmdId_ARRAYSIZE = GetSignInRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetSignInRewardRsp_CmdId_descriptor();
inline const ::std::string& GetSignInRewardRsp_CmdId_Name(GetSignInRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetSignInRewardRsp_CmdId_descriptor(), value);
}
inline bool GetSignInRewardRsp_CmdId_Parse(
    const ::std::string& name, GetSignInRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetSignInRewardRsp_CmdId>(
    GetSignInRewardRsp_CmdId_descriptor(), name, value);
}
enum BonusActivityAllDataNotify_CmdId {
  BonusActivityAllDataNotify_CmdId_NONE = 0,
  BonusActivityAllDataNotify_CmdId_CMD_ID = 2511,
  BonusActivityAllDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  BonusActivityAllDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  BonusActivityAllDataNotify_CmdId_BonusActivityAllDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BonusActivityAllDataNotify_CmdId_BonusActivityAllDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BonusActivityAllDataNotify_CmdId_IsValid(int value);
const BonusActivityAllDataNotify_CmdId BonusActivityAllDataNotify_CmdId_CmdId_MIN = BonusActivityAllDataNotify_CmdId_NONE;
const BonusActivityAllDataNotify_CmdId BonusActivityAllDataNotify_CmdId_CmdId_MAX = BonusActivityAllDataNotify_CmdId_CMD_ID;
const int BonusActivityAllDataNotify_CmdId_CmdId_ARRAYSIZE = BonusActivityAllDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BonusActivityAllDataNotify_CmdId_descriptor();
inline const ::std::string& BonusActivityAllDataNotify_CmdId_Name(BonusActivityAllDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BonusActivityAllDataNotify_CmdId_descriptor(), value);
}
inline bool BonusActivityAllDataNotify_CmdId_Parse(
    const ::std::string& name, BonusActivityAllDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BonusActivityAllDataNotify_CmdId>(
    BonusActivityAllDataNotify_CmdId_descriptor(), name, value);
}
enum BonusActivityUpdateNotify_CmdId {
  BonusActivityUpdateNotify_CmdId_NONE = 0,
  BonusActivityUpdateNotify_CmdId_CMD_ID = 2512,
  BonusActivityUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  BonusActivityUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  BonusActivityUpdateNotify_CmdId_BonusActivityUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BonusActivityUpdateNotify_CmdId_BonusActivityUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BonusActivityUpdateNotify_CmdId_IsValid(int value);
const BonusActivityUpdateNotify_CmdId BonusActivityUpdateNotify_CmdId_CmdId_MIN = BonusActivityUpdateNotify_CmdId_NONE;
const BonusActivityUpdateNotify_CmdId BonusActivityUpdateNotify_CmdId_CmdId_MAX = BonusActivityUpdateNotify_CmdId_CMD_ID;
const int BonusActivityUpdateNotify_CmdId_CmdId_ARRAYSIZE = BonusActivityUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BonusActivityUpdateNotify_CmdId_descriptor();
inline const ::std::string& BonusActivityUpdateNotify_CmdId_Name(BonusActivityUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BonusActivityUpdateNotify_CmdId_descriptor(), value);
}
inline bool BonusActivityUpdateNotify_CmdId_Parse(
    const ::std::string& name, BonusActivityUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BonusActivityUpdateNotify_CmdId>(
    BonusActivityUpdateNotify_CmdId_descriptor(), name, value);
}
enum BonusActivityInfoReq_CmdId {
  BonusActivityInfoReq_CmdId_NONE = 0,
  BonusActivityInfoReq_CmdId_CMD_ID = 2513,
  BonusActivityInfoReq_CmdId_ENET_CHANNEL_ID = 0,
  BonusActivityInfoReq_CmdId_ENET_IS_RELIABLE = 1,
  BonusActivityInfoReq_CmdId_IS_ALLOW_CLIENT = 1,
  BonusActivityInfoReq_CmdId_BonusActivityInfoReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BonusActivityInfoReq_CmdId_BonusActivityInfoReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BonusActivityInfoReq_CmdId_IsValid(int value);
const BonusActivityInfoReq_CmdId BonusActivityInfoReq_CmdId_CmdId_MIN = BonusActivityInfoReq_CmdId_NONE;
const BonusActivityInfoReq_CmdId BonusActivityInfoReq_CmdId_CmdId_MAX = BonusActivityInfoReq_CmdId_CMD_ID;
const int BonusActivityInfoReq_CmdId_CmdId_ARRAYSIZE = BonusActivityInfoReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BonusActivityInfoReq_CmdId_descriptor();
inline const ::std::string& BonusActivityInfoReq_CmdId_Name(BonusActivityInfoReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BonusActivityInfoReq_CmdId_descriptor(), value);
}
inline bool BonusActivityInfoReq_CmdId_Parse(
    const ::std::string& name, BonusActivityInfoReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BonusActivityInfoReq_CmdId>(
    BonusActivityInfoReq_CmdId_descriptor(), name, value);
}
enum BonusActivityInfoRsp_CmdId {
  BonusActivityInfoRsp_CmdId_NONE = 0,
  BonusActivityInfoRsp_CmdId_CMD_ID = 2514,
  BonusActivityInfoRsp_CmdId_ENET_CHANNEL_ID = 0,
  BonusActivityInfoRsp_CmdId_ENET_IS_RELIABLE = 1,
  BonusActivityInfoRsp_CmdId_BonusActivityInfoRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BonusActivityInfoRsp_CmdId_BonusActivityInfoRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BonusActivityInfoRsp_CmdId_IsValid(int value);
const BonusActivityInfoRsp_CmdId BonusActivityInfoRsp_CmdId_CmdId_MIN = BonusActivityInfoRsp_CmdId_NONE;
const BonusActivityInfoRsp_CmdId BonusActivityInfoRsp_CmdId_CmdId_MAX = BonusActivityInfoRsp_CmdId_CMD_ID;
const int BonusActivityInfoRsp_CmdId_CmdId_ARRAYSIZE = BonusActivityInfoRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BonusActivityInfoRsp_CmdId_descriptor();
inline const ::std::string& BonusActivityInfoRsp_CmdId_Name(BonusActivityInfoRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BonusActivityInfoRsp_CmdId_descriptor(), value);
}
inline bool BonusActivityInfoRsp_CmdId_Parse(
    const ::std::string& name, BonusActivityInfoRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BonusActivityInfoRsp_CmdId>(
    BonusActivityInfoRsp_CmdId_descriptor(), name, value);
}
enum GetBonusActivityRewardReq_CmdId {
  GetBonusActivityRewardReq_CmdId_NONE = 0,
  GetBonusActivityRewardReq_CmdId_CMD_ID = 2515,
  GetBonusActivityRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  GetBonusActivityRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  GetBonusActivityRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetBonusActivityRewardReq_CmdId_GetBonusActivityRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetBonusActivityRewardReq_CmdId_GetBonusActivityRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetBonusActivityRewardReq_CmdId_IsValid(int value);
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq_CmdId_CmdId_MIN = GetBonusActivityRewardReq_CmdId_NONE;
const GetBonusActivityRewardReq_CmdId GetBonusActivityRewardReq_CmdId_CmdId_MAX = GetBonusActivityRewardReq_CmdId_CMD_ID;
const int GetBonusActivityRewardReq_CmdId_CmdId_ARRAYSIZE = GetBonusActivityRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetBonusActivityRewardReq_CmdId_descriptor();
inline const ::std::string& GetBonusActivityRewardReq_CmdId_Name(GetBonusActivityRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetBonusActivityRewardReq_CmdId_descriptor(), value);
}
inline bool GetBonusActivityRewardReq_CmdId_Parse(
    const ::std::string& name, GetBonusActivityRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetBonusActivityRewardReq_CmdId>(
    GetBonusActivityRewardReq_CmdId_descriptor(), name, value);
}
enum GetBonusActivityRewardRsp_CmdId {
  GetBonusActivityRewardRsp_CmdId_NONE = 0,
  GetBonusActivityRewardRsp_CmdId_CMD_ID = 2516,
  GetBonusActivityRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetBonusActivityRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetBonusActivityRewardRsp_CmdId_GetBonusActivityRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetBonusActivityRewardRsp_CmdId_GetBonusActivityRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetBonusActivityRewardRsp_CmdId_IsValid(int value);
const GetBonusActivityRewardRsp_CmdId GetBonusActivityRewardRsp_CmdId_CmdId_MIN = GetBonusActivityRewardRsp_CmdId_NONE;
const GetBonusActivityRewardRsp_CmdId GetBonusActivityRewardRsp_CmdId_CmdId_MAX = GetBonusActivityRewardRsp_CmdId_CMD_ID;
const int GetBonusActivityRewardRsp_CmdId_CmdId_ARRAYSIZE = GetBonusActivityRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetBonusActivityRewardRsp_CmdId_descriptor();
inline const ::std::string& GetBonusActivityRewardRsp_CmdId_Name(GetBonusActivityRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetBonusActivityRewardRsp_CmdId_descriptor(), value);
}
inline bool GetBonusActivityRewardRsp_CmdId_Parse(
    const ::std::string& name, GetBonusActivityRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetBonusActivityRewardRsp_CmdId>(
    GetBonusActivityRewardRsp_CmdId_descriptor(), name, value);
}
// ===================================================================

class SignInInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SignInInfo) */ {
 public:
  SignInInfo();
  virtual ~SignInInfo();

  SignInInfo(const SignInInfo& from);

  inline SignInInfo& operator=(const SignInInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignInInfo(SignInInfo&& from) noexcept
    : SignInInfo() {
    *this = ::std::move(from);
  }

  inline SignInInfo& operator=(SignInInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInInfo& default_instance();

  static inline const SignInInfo* internal_default_instance() {
    return reinterpret_cast<const SignInInfo*>(
               &_SignInInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SignInInfo* other);
  friend void swap(SignInInfo& a, SignInInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignInInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SignInInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SignInInfo& from);
  void MergeFrom(const SignInInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SignInInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 reward_day_list = 13;
  int reward_day_list_size() const;
  void clear_reward_day_list();
  static const int kRewardDayListFieldNumber = 13;
  ::google::protobuf::uint32 reward_day_list(int index) const;
  void set_reward_day_list(int index, ::google::protobuf::uint32 value);
  void add_reward_day_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reward_day_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reward_day_list();

  // uint32 schedule_id = 1;
  void clear_schedule_id();
  static const int kScheduleIdFieldNumber = 1;
  ::google::protobuf::uint32 schedule_id() const;
  void set_schedule_id(::google::protobuf::uint32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 begin_time = 3;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 3;
  ::google::protobuf::uint32 begin_time() const;
  void set_begin_time(::google::protobuf::uint32 value);

  // uint32 end_time = 4;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 4;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // uint32 last_sign_in_time = 12;
  void clear_last_sign_in_time();
  static const int kLastSignInTimeFieldNumber = 12;
  ::google::protobuf::uint32 last_sign_in_time() const;
  void set_last_sign_in_time(::google::protobuf::uint32 value);

  // bool is_cond_satisfied = 10;
  void clear_is_cond_satisfied();
  static const int kIsCondSatisfiedFieldNumber = 10;
  bool is_cond_satisfied() const;
  void set_is_cond_satisfied(bool value);

  // uint32 sign_in_count = 11;
  void clear_sign_in_count();
  static const int kSignInCountFieldNumber = 11;
  ::google::protobuf::uint32 sign_in_count() const;
  void set_sign_in_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SignInInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reward_day_list_;
  mutable int _reward_day_list_cached_byte_size_;
  ::google::protobuf::uint32 schedule_id_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 end_time_;
  ::google::protobuf::uint32 last_sign_in_time_;
  bool is_cond_satisfied_;
  ::google::protobuf::uint32 sign_in_count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignInAllDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SignInAllDataNotify) */ {
 public:
  SignInAllDataNotify();
  virtual ~SignInAllDataNotify();

  SignInAllDataNotify(const SignInAllDataNotify& from);

  inline SignInAllDataNotify& operator=(const SignInAllDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignInAllDataNotify(SignInAllDataNotify&& from) noexcept
    : SignInAllDataNotify() {
    *this = ::std::move(from);
  }

  inline SignInAllDataNotify& operator=(SignInAllDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInAllDataNotify& default_instance();

  static inline const SignInAllDataNotify* internal_default_instance() {
    return reinterpret_cast<const SignInAllDataNotify*>(
               &_SignInAllDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SignInAllDataNotify* other);
  friend void swap(SignInAllDataNotify& a, SignInAllDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignInAllDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SignInAllDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SignInAllDataNotify& from);
  void MergeFrom(const SignInAllDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SignInAllDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SignInAllDataNotify_CmdId CmdId;
  static const CmdId NONE =
    SignInAllDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SignInAllDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SignInAllDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SignInAllDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SignInAllDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SignInAllDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SignInAllDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SignInAllDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SignInAllDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SignInAllDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SignInAllDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.SignInInfo sign_in_info_list = 1;
  int sign_in_info_list_size() const;
  void clear_sign_in_info_list();
  static const int kSignInInfoListFieldNumber = 1;
  const ::proto::SignInInfo& sign_in_info_list(int index) const;
  ::proto::SignInInfo* mutable_sign_in_info_list(int index);
  ::proto::SignInInfo* add_sign_in_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >*
      mutable_sign_in_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >&
      sign_in_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.SignInAllDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo > sign_in_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignInInfoOpenNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SignInInfoOpenNotify) */ {
 public:
  SignInInfoOpenNotify();
  virtual ~SignInInfoOpenNotify();

  SignInInfoOpenNotify(const SignInInfoOpenNotify& from);

  inline SignInInfoOpenNotify& operator=(const SignInInfoOpenNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignInInfoOpenNotify(SignInInfoOpenNotify&& from) noexcept
    : SignInInfoOpenNotify() {
    *this = ::std::move(from);
  }

  inline SignInInfoOpenNotify& operator=(SignInInfoOpenNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInInfoOpenNotify& default_instance();

  static inline const SignInInfoOpenNotify* internal_default_instance() {
    return reinterpret_cast<const SignInInfoOpenNotify*>(
               &_SignInInfoOpenNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SignInInfoOpenNotify* other);
  friend void swap(SignInInfoOpenNotify& a, SignInInfoOpenNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignInInfoOpenNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SignInInfoOpenNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SignInInfoOpenNotify& from);
  void MergeFrom(const SignInInfoOpenNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SignInInfoOpenNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SignInInfoOpenNotify_CmdId CmdId;
  static const CmdId NONE =
    SignInInfoOpenNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    SignInInfoOpenNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SignInInfoOpenNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SignInInfoOpenNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SignInInfoOpenNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SignInInfoOpenNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SignInInfoOpenNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SignInInfoOpenNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SignInInfoOpenNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SignInInfoOpenNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SignInInfoOpenNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 schedule_id_list = 1;
  int schedule_id_list_size() const;
  void clear_schedule_id_list();
  static const int kScheduleIdListFieldNumber = 1;
  ::google::protobuf::uint32 schedule_id_list(int index) const;
  void set_schedule_id_list(int index, ::google::protobuf::uint32 value);
  void add_schedule_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      schedule_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_schedule_id_list();

  // @@protoc_insertion_point(class_scope:proto.SignInInfoOpenNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > schedule_id_list_;
  mutable int _schedule_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignInInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SignInInfoReq) */ {
 public:
  SignInInfoReq();
  virtual ~SignInInfoReq();

  SignInInfoReq(const SignInInfoReq& from);

  inline SignInInfoReq& operator=(const SignInInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignInInfoReq(SignInInfoReq&& from) noexcept
    : SignInInfoReq() {
    *this = ::std::move(from);
  }

  inline SignInInfoReq& operator=(SignInInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInInfoReq& default_instance();

  static inline const SignInInfoReq* internal_default_instance() {
    return reinterpret_cast<const SignInInfoReq*>(
               &_SignInInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SignInInfoReq* other);
  friend void swap(SignInInfoReq& a, SignInInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignInInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SignInInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SignInInfoReq& from);
  void MergeFrom(const SignInInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SignInInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SignInInfoReq_CmdId CmdId;
  static const CmdId NONE =
    SignInInfoReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SignInInfoReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SignInInfoReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SignInInfoReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SignInInfoReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SignInInfoReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SignInInfoReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SignInInfoReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SignInInfoReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SignInInfoReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SignInInfoReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SignInInfoReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.SignInInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignInInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SignInInfoRsp) */ {
 public:
  SignInInfoRsp();
  virtual ~SignInInfoRsp();

  SignInInfoRsp(const SignInInfoRsp& from);

  inline SignInInfoRsp& operator=(const SignInInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignInInfoRsp(SignInInfoRsp&& from) noexcept
    : SignInInfoRsp() {
    *this = ::std::move(from);
  }

  inline SignInInfoRsp& operator=(SignInInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignInInfoRsp& default_instance();

  static inline const SignInInfoRsp* internal_default_instance() {
    return reinterpret_cast<const SignInInfoRsp*>(
               &_SignInInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SignInInfoRsp* other);
  friend void swap(SignInInfoRsp& a, SignInInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignInInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SignInInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SignInInfoRsp& from);
  void MergeFrom(const SignInInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SignInInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SignInInfoRsp_CmdId CmdId;
  static const CmdId NONE =
    SignInInfoRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SignInInfoRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SignInInfoRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SignInInfoRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SignInInfoRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SignInInfoRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SignInInfoRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SignInInfoRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SignInInfoRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SignInInfoRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SignInInfoRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.SignInInfo sign_in_info_list = 2;
  int sign_in_info_list_size() const;
  void clear_sign_in_info_list();
  static const int kSignInInfoListFieldNumber = 2;
  const ::proto::SignInInfo& sign_in_info_list(int index) const;
  ::proto::SignInInfo* mutable_sign_in_info_list(int index);
  ::proto::SignInInfo* add_sign_in_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >*
      mutable_sign_in_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >&
      sign_in_info_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SignInInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo > sign_in_info_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSignInRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetSignInRewardReq) */ {
 public:
  GetSignInRewardReq();
  virtual ~GetSignInRewardReq();

  GetSignInRewardReq(const GetSignInRewardReq& from);

  inline GetSignInRewardReq& operator=(const GetSignInRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSignInRewardReq(GetSignInRewardReq&& from) noexcept
    : GetSignInRewardReq() {
    *this = ::std::move(from);
  }

  inline GetSignInRewardReq& operator=(GetSignInRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignInRewardReq& default_instance();

  static inline const GetSignInRewardReq* internal_default_instance() {
    return reinterpret_cast<const GetSignInRewardReq*>(
               &_GetSignInRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetSignInRewardReq* other);
  friend void swap(GetSignInRewardReq& a, GetSignInRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSignInRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSignInRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSignInRewardReq& from);
  void MergeFrom(const GetSignInRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSignInRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetSignInRewardReq_CmdId CmdId;
  static const CmdId NONE =
    GetSignInRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetSignInRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetSignInRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetSignInRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetSignInRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetSignInRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetSignInRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetSignInRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetSignInRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetSignInRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetSignInRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetSignInRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 schedule_id = 1;
  void clear_schedule_id();
  static const int kScheduleIdFieldNumber = 1;
  ::google::protobuf::uint32 schedule_id() const;
  void set_schedule_id(::google::protobuf::uint32 value);

  // uint32 reward_day = 2;
  void clear_reward_day();
  static const int kRewardDayFieldNumber = 2;
  ::google::protobuf::uint32 reward_day() const;
  void set_reward_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetSignInRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 schedule_id_;
  ::google::protobuf::uint32 reward_day_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSignInRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetSignInRewardRsp) */ {
 public:
  GetSignInRewardRsp();
  virtual ~GetSignInRewardRsp();

  GetSignInRewardRsp(const GetSignInRewardRsp& from);

  inline GetSignInRewardRsp& operator=(const GetSignInRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSignInRewardRsp(GetSignInRewardRsp&& from) noexcept
    : GetSignInRewardRsp() {
    *this = ::std::move(from);
  }

  inline GetSignInRewardRsp& operator=(GetSignInRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSignInRewardRsp& default_instance();

  static inline const GetSignInRewardRsp* internal_default_instance() {
    return reinterpret_cast<const GetSignInRewardRsp*>(
               &_GetSignInRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetSignInRewardRsp* other);
  friend void swap(GetSignInRewardRsp& a, GetSignInRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSignInRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSignInRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSignInRewardRsp& from);
  void MergeFrom(const GetSignInRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSignInRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetSignInRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    GetSignInRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetSignInRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetSignInRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetSignInRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetSignInRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetSignInRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetSignInRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetSignInRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetSignInRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetSignInRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetSignInRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.SignInInfo sign_in_info = 2;
  bool has_sign_in_info() const;
  void clear_sign_in_info();
  static const int kSignInInfoFieldNumber = 2;
  const ::proto::SignInInfo& sign_in_info() const;
  ::proto::SignInInfo* mutable_sign_in_info();
  ::proto::SignInInfo* release_sign_in_info();
  void set_allocated_sign_in_info(::proto::SignInInfo* sign_in_info);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetSignInRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::SignInInfo* sign_in_info_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BonusActivityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BonusActivityInfo) */ {
 public:
  BonusActivityInfo();
  virtual ~BonusActivityInfo();

  BonusActivityInfo(const BonusActivityInfo& from);

  inline BonusActivityInfo& operator=(const BonusActivityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BonusActivityInfo(BonusActivityInfo&& from) noexcept
    : BonusActivityInfo() {
    *this = ::std::move(from);
  }

  inline BonusActivityInfo& operator=(BonusActivityInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BonusActivityInfo& default_instance();

  static inline const BonusActivityInfo* internal_default_instance() {
    return reinterpret_cast<const BonusActivityInfo*>(
               &_BonusActivityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(BonusActivityInfo* other);
  friend void swap(BonusActivityInfo& a, BonusActivityInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BonusActivityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BonusActivityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BonusActivityInfo& from);
  void MergeFrom(const BonusActivityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BonusActivityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 bonus_activity_id = 1;
  void clear_bonus_activity_id();
  static const int kBonusActivityIdFieldNumber = 1;
  ::google::protobuf::uint32 bonus_activity_id() const;
  void set_bonus_activity_id(::google::protobuf::uint32 value);

  // uint32 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BonusActivityInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 bonus_activity_id_;
  ::google::protobuf::uint32 state_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BonusActivityAllDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BonusActivityAllDataNotify) */ {
 public:
  BonusActivityAllDataNotify();
  virtual ~BonusActivityAllDataNotify();

  BonusActivityAllDataNotify(const BonusActivityAllDataNotify& from);

  inline BonusActivityAllDataNotify& operator=(const BonusActivityAllDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BonusActivityAllDataNotify(BonusActivityAllDataNotify&& from) noexcept
    : BonusActivityAllDataNotify() {
    *this = ::std::move(from);
  }

  inline BonusActivityAllDataNotify& operator=(BonusActivityAllDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BonusActivityAllDataNotify& default_instance();

  static inline const BonusActivityAllDataNotify* internal_default_instance() {
    return reinterpret_cast<const BonusActivityAllDataNotify*>(
               &_BonusActivityAllDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(BonusActivityAllDataNotify* other);
  friend void swap(BonusActivityAllDataNotify& a, BonusActivityAllDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BonusActivityAllDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BonusActivityAllDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BonusActivityAllDataNotify& from);
  void MergeFrom(const BonusActivityAllDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BonusActivityAllDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BonusActivityAllDataNotify_CmdId CmdId;
  static const CmdId NONE =
    BonusActivityAllDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BonusActivityAllDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BonusActivityAllDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BonusActivityAllDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BonusActivityAllDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BonusActivityAllDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BonusActivityAllDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BonusActivityAllDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BonusActivityAllDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BonusActivityAllDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BonusActivityAllDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
  int bonus_activity_info_list_size() const;
  void clear_bonus_activity_info_list();
  static const int kBonusActivityInfoListFieldNumber = 1;
  const ::proto::BonusActivityInfo& bonus_activity_info_list(int index) const;
  ::proto::BonusActivityInfo* mutable_bonus_activity_info_list(int index);
  ::proto::BonusActivityInfo* add_bonus_activity_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
      mutable_bonus_activity_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
      bonus_activity_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.BonusActivityAllDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo > bonus_activity_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BonusActivityUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BonusActivityUpdateNotify) */ {
 public:
  BonusActivityUpdateNotify();
  virtual ~BonusActivityUpdateNotify();

  BonusActivityUpdateNotify(const BonusActivityUpdateNotify& from);

  inline BonusActivityUpdateNotify& operator=(const BonusActivityUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BonusActivityUpdateNotify(BonusActivityUpdateNotify&& from) noexcept
    : BonusActivityUpdateNotify() {
    *this = ::std::move(from);
  }

  inline BonusActivityUpdateNotify& operator=(BonusActivityUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BonusActivityUpdateNotify& default_instance();

  static inline const BonusActivityUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const BonusActivityUpdateNotify*>(
               &_BonusActivityUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(BonusActivityUpdateNotify* other);
  friend void swap(BonusActivityUpdateNotify& a, BonusActivityUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BonusActivityUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BonusActivityUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BonusActivityUpdateNotify& from);
  void MergeFrom(const BonusActivityUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BonusActivityUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BonusActivityUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    BonusActivityUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BonusActivityUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BonusActivityUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BonusActivityUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BonusActivityUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BonusActivityUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BonusActivityUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BonusActivityUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BonusActivityUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BonusActivityUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BonusActivityUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
  int bonus_activity_info_list_size() const;
  void clear_bonus_activity_info_list();
  static const int kBonusActivityInfoListFieldNumber = 1;
  const ::proto::BonusActivityInfo& bonus_activity_info_list(int index) const;
  ::proto::BonusActivityInfo* mutable_bonus_activity_info_list(int index);
  ::proto::BonusActivityInfo* add_bonus_activity_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
      mutable_bonus_activity_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
      bonus_activity_info_list() const;

  // @@protoc_insertion_point(class_scope:proto.BonusActivityUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo > bonus_activity_info_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BonusActivityInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BonusActivityInfoReq) */ {
 public:
  BonusActivityInfoReq();
  virtual ~BonusActivityInfoReq();

  BonusActivityInfoReq(const BonusActivityInfoReq& from);

  inline BonusActivityInfoReq& operator=(const BonusActivityInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BonusActivityInfoReq(BonusActivityInfoReq&& from) noexcept
    : BonusActivityInfoReq() {
    *this = ::std::move(from);
  }

  inline BonusActivityInfoReq& operator=(BonusActivityInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BonusActivityInfoReq& default_instance();

  static inline const BonusActivityInfoReq* internal_default_instance() {
    return reinterpret_cast<const BonusActivityInfoReq*>(
               &_BonusActivityInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(BonusActivityInfoReq* other);
  friend void swap(BonusActivityInfoReq& a, BonusActivityInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BonusActivityInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BonusActivityInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BonusActivityInfoReq& from);
  void MergeFrom(const BonusActivityInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BonusActivityInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BonusActivityInfoReq_CmdId CmdId;
  static const CmdId NONE =
    BonusActivityInfoReq_CmdId_NONE;
  static const CmdId CMD_ID =
    BonusActivityInfoReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BonusActivityInfoReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BonusActivityInfoReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    BonusActivityInfoReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return BonusActivityInfoReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BonusActivityInfoReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BonusActivityInfoReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BonusActivityInfoReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BonusActivityInfoReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BonusActivityInfoReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BonusActivityInfoReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.BonusActivityInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BonusActivityInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BonusActivityInfoRsp) */ {
 public:
  BonusActivityInfoRsp();
  virtual ~BonusActivityInfoRsp();

  BonusActivityInfoRsp(const BonusActivityInfoRsp& from);

  inline BonusActivityInfoRsp& operator=(const BonusActivityInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BonusActivityInfoRsp(BonusActivityInfoRsp&& from) noexcept
    : BonusActivityInfoRsp() {
    *this = ::std::move(from);
  }

  inline BonusActivityInfoRsp& operator=(BonusActivityInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BonusActivityInfoRsp& default_instance();

  static inline const BonusActivityInfoRsp* internal_default_instance() {
    return reinterpret_cast<const BonusActivityInfoRsp*>(
               &_BonusActivityInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(BonusActivityInfoRsp* other);
  friend void swap(BonusActivityInfoRsp& a, BonusActivityInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BonusActivityInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BonusActivityInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BonusActivityInfoRsp& from);
  void MergeFrom(const BonusActivityInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BonusActivityInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BonusActivityInfoRsp_CmdId CmdId;
  static const CmdId NONE =
    BonusActivityInfoRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    BonusActivityInfoRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BonusActivityInfoRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BonusActivityInfoRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BonusActivityInfoRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BonusActivityInfoRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BonusActivityInfoRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BonusActivityInfoRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BonusActivityInfoRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BonusActivityInfoRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BonusActivityInfoRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.BonusActivityInfo bonus_activity_info_list = 2;
  int bonus_activity_info_list_size() const;
  void clear_bonus_activity_info_list();
  static const int kBonusActivityInfoListFieldNumber = 2;
  const ::proto::BonusActivityInfo& bonus_activity_info_list(int index) const;
  ::proto::BonusActivityInfo* mutable_bonus_activity_info_list(int index);
  ::proto::BonusActivityInfo* add_bonus_activity_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
      mutable_bonus_activity_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
      bonus_activity_info_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.BonusActivityInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo > bonus_activity_info_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBonusActivityRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetBonusActivityRewardReq) */ {
 public:
  GetBonusActivityRewardReq();
  virtual ~GetBonusActivityRewardReq();

  GetBonusActivityRewardReq(const GetBonusActivityRewardReq& from);

  inline GetBonusActivityRewardReq& operator=(const GetBonusActivityRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBonusActivityRewardReq(GetBonusActivityRewardReq&& from) noexcept
    : GetBonusActivityRewardReq() {
    *this = ::std::move(from);
  }

  inline GetBonusActivityRewardReq& operator=(GetBonusActivityRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBonusActivityRewardReq& default_instance();

  static inline const GetBonusActivityRewardReq* internal_default_instance() {
    return reinterpret_cast<const GetBonusActivityRewardReq*>(
               &_GetBonusActivityRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GetBonusActivityRewardReq* other);
  friend void swap(GetBonusActivityRewardReq& a, GetBonusActivityRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBonusActivityRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBonusActivityRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBonusActivityRewardReq& from);
  void MergeFrom(const GetBonusActivityRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBonusActivityRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetBonusActivityRewardReq_CmdId CmdId;
  static const CmdId NONE =
    GetBonusActivityRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetBonusActivityRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetBonusActivityRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetBonusActivityRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetBonusActivityRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetBonusActivityRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetBonusActivityRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetBonusActivityRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetBonusActivityRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetBonusActivityRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetBonusActivityRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetBonusActivityRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 bonus_activity_id = 1;
  void clear_bonus_activity_id();
  static const int kBonusActivityIdFieldNumber = 1;
  ::google::protobuf::uint32 bonus_activity_id() const;
  void set_bonus_activity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetBonusActivityRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 bonus_activity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBonusActivityRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetBonusActivityRewardRsp) */ {
 public:
  GetBonusActivityRewardRsp();
  virtual ~GetBonusActivityRewardRsp();

  GetBonusActivityRewardRsp(const GetBonusActivityRewardRsp& from);

  inline GetBonusActivityRewardRsp& operator=(const GetBonusActivityRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBonusActivityRewardRsp(GetBonusActivityRewardRsp&& from) noexcept
    : GetBonusActivityRewardRsp() {
    *this = ::std::move(from);
  }

  inline GetBonusActivityRewardRsp& operator=(GetBonusActivityRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBonusActivityRewardRsp& default_instance();

  static inline const GetBonusActivityRewardRsp* internal_default_instance() {
    return reinterpret_cast<const GetBonusActivityRewardRsp*>(
               &_GetBonusActivityRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GetBonusActivityRewardRsp* other);
  friend void swap(GetBonusActivityRewardRsp& a, GetBonusActivityRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBonusActivityRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBonusActivityRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBonusActivityRewardRsp& from);
  void MergeFrom(const GetBonusActivityRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBonusActivityRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetBonusActivityRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    GetBonusActivityRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetBonusActivityRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetBonusActivityRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetBonusActivityRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetBonusActivityRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetBonusActivityRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetBonusActivityRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetBonusActivityRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetBonusActivityRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetBonusActivityRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetBonusActivityRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.BonusActivityInfo bonus_activity_info_list = 2;
  bool has_bonus_activity_info_list() const;
  void clear_bonus_activity_info_list();
  static const int kBonusActivityInfoListFieldNumber = 2;
  const ::proto::BonusActivityInfo& bonus_activity_info_list() const;
  ::proto::BonusActivityInfo* mutable_bonus_activity_info_list();
  ::proto::BonusActivityInfo* release_bonus_activity_info_list();
  void set_allocated_bonus_activity_info_list(::proto::BonusActivityInfo* bonus_activity_info_list);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetBonusActivityRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::BonusActivityInfo* bonus_activity_info_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fsign_5fin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SignInInfo

// uint32 schedule_id = 1;
inline void SignInInfo::clear_schedule_id() {
  schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 SignInInfo::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.schedule_id)
  return schedule_id_;
}
inline void SignInInfo::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.schedule_id)
}

// uint32 config_id = 2;
inline void SignInInfo::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 SignInInfo::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.config_id)
  return config_id_;
}
inline void SignInInfo::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.config_id)
}

// uint32 begin_time = 3;
inline void SignInInfo::clear_begin_time() {
  begin_time_ = 0u;
}
inline ::google::protobuf::uint32 SignInInfo::begin_time() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.begin_time)
  return begin_time_;
}
inline void SignInInfo::set_begin_time(::google::protobuf::uint32 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.begin_time)
}

// uint32 end_time = 4;
inline void SignInInfo::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 SignInInfo::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.end_time)
  return end_time_;
}
inline void SignInInfo::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.end_time)
}

// bool is_cond_satisfied = 10;
inline void SignInInfo::clear_is_cond_satisfied() {
  is_cond_satisfied_ = false;
}
inline bool SignInInfo::is_cond_satisfied() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.is_cond_satisfied)
  return is_cond_satisfied_;
}
inline void SignInInfo::set_is_cond_satisfied(bool value) {
  
  is_cond_satisfied_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.is_cond_satisfied)
}

// uint32 sign_in_count = 11;
inline void SignInInfo::clear_sign_in_count() {
  sign_in_count_ = 0u;
}
inline ::google::protobuf::uint32 SignInInfo::sign_in_count() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.sign_in_count)
  return sign_in_count_;
}
inline void SignInInfo::set_sign_in_count(::google::protobuf::uint32 value) {
  
  sign_in_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.sign_in_count)
}

// uint32 last_sign_in_time = 12;
inline void SignInInfo::clear_last_sign_in_time() {
  last_sign_in_time_ = 0u;
}
inline ::google::protobuf::uint32 SignInInfo::last_sign_in_time() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.last_sign_in_time)
  return last_sign_in_time_;
}
inline void SignInInfo::set_last_sign_in_time(::google::protobuf::uint32 value) {
  
  last_sign_in_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfo.last_sign_in_time)
}

// repeated uint32 reward_day_list = 13;
inline int SignInInfo::reward_day_list_size() const {
  return reward_day_list_.size();
}
inline void SignInInfo::clear_reward_day_list() {
  reward_day_list_.Clear();
}
inline ::google::protobuf::uint32 SignInInfo::reward_day_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SignInInfo.reward_day_list)
  return reward_day_list_.Get(index);
}
inline void SignInInfo::set_reward_day_list(int index, ::google::protobuf::uint32 value) {
  reward_day_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SignInInfo.reward_day_list)
}
inline void SignInInfo::add_reward_day_list(::google::protobuf::uint32 value) {
  reward_day_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SignInInfo.reward_day_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SignInInfo::reward_day_list() const {
  // @@protoc_insertion_point(field_list:proto.SignInInfo.reward_day_list)
  return reward_day_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SignInInfo::mutable_reward_day_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SignInInfo.reward_day_list)
  return &reward_day_list_;
}

// -------------------------------------------------------------------

// SignInAllDataNotify

// repeated .proto.SignInInfo sign_in_info_list = 1;
inline int SignInAllDataNotify::sign_in_info_list_size() const {
  return sign_in_info_list_.size();
}
inline void SignInAllDataNotify::clear_sign_in_info_list() {
  sign_in_info_list_.Clear();
}
inline const ::proto::SignInInfo& SignInAllDataNotify::sign_in_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SignInAllDataNotify.sign_in_info_list)
  return sign_in_info_list_.Get(index);
}
inline ::proto::SignInInfo* SignInAllDataNotify::mutable_sign_in_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SignInAllDataNotify.sign_in_info_list)
  return sign_in_info_list_.Mutable(index);
}
inline ::proto::SignInInfo* SignInAllDataNotify::add_sign_in_info_list() {
  // @@protoc_insertion_point(field_add:proto.SignInAllDataNotify.sign_in_info_list)
  return sign_in_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >*
SignInAllDataNotify::mutable_sign_in_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SignInAllDataNotify.sign_in_info_list)
  return &sign_in_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >&
SignInAllDataNotify::sign_in_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SignInAllDataNotify.sign_in_info_list)
  return sign_in_info_list_;
}

// -------------------------------------------------------------------

// SignInInfoOpenNotify

// repeated uint32 schedule_id_list = 1;
inline int SignInInfoOpenNotify::schedule_id_list_size() const {
  return schedule_id_list_.size();
}
inline void SignInInfoOpenNotify::clear_schedule_id_list() {
  schedule_id_list_.Clear();
}
inline ::google::protobuf::uint32 SignInInfoOpenNotify::schedule_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SignInInfoOpenNotify.schedule_id_list)
  return schedule_id_list_.Get(index);
}
inline void SignInInfoOpenNotify::set_schedule_id_list(int index, ::google::protobuf::uint32 value) {
  schedule_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SignInInfoOpenNotify.schedule_id_list)
}
inline void SignInInfoOpenNotify::add_schedule_id_list(::google::protobuf::uint32 value) {
  schedule_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SignInInfoOpenNotify.schedule_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SignInInfoOpenNotify::schedule_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SignInInfoOpenNotify.schedule_id_list)
  return schedule_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SignInInfoOpenNotify::mutable_schedule_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SignInInfoOpenNotify.schedule_id_list)
  return &schedule_id_list_;
}

// -------------------------------------------------------------------

// SignInInfoReq

// -------------------------------------------------------------------

// SignInInfoRsp

// int32 retcode = 1;
inline void SignInInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SignInInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SignInInfoRsp.retcode)
  return retcode_;
}
inline void SignInInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SignInInfoRsp.retcode)
}

// repeated .proto.SignInInfo sign_in_info_list = 2;
inline int SignInInfoRsp::sign_in_info_list_size() const {
  return sign_in_info_list_.size();
}
inline void SignInInfoRsp::clear_sign_in_info_list() {
  sign_in_info_list_.Clear();
}
inline const ::proto::SignInInfo& SignInInfoRsp::sign_in_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SignInInfoRsp.sign_in_info_list)
  return sign_in_info_list_.Get(index);
}
inline ::proto::SignInInfo* SignInInfoRsp::mutable_sign_in_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SignInInfoRsp.sign_in_info_list)
  return sign_in_info_list_.Mutable(index);
}
inline ::proto::SignInInfo* SignInInfoRsp::add_sign_in_info_list() {
  // @@protoc_insertion_point(field_add:proto.SignInInfoRsp.sign_in_info_list)
  return sign_in_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >*
SignInInfoRsp::mutable_sign_in_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SignInInfoRsp.sign_in_info_list)
  return &sign_in_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SignInInfo >&
SignInInfoRsp::sign_in_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SignInInfoRsp.sign_in_info_list)
  return sign_in_info_list_;
}

// -------------------------------------------------------------------

// GetSignInRewardReq

// uint32 schedule_id = 1;
inline void GetSignInRewardReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 GetSignInRewardReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSignInRewardReq.schedule_id)
  return schedule_id_;
}
inline void GetSignInRewardReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSignInRewardReq.schedule_id)
}

// uint32 reward_day = 2;
inline void GetSignInRewardReq::clear_reward_day() {
  reward_day_ = 0u;
}
inline ::google::protobuf::uint32 GetSignInRewardReq::reward_day() const {
  // @@protoc_insertion_point(field_get:proto.GetSignInRewardReq.reward_day)
  return reward_day_;
}
inline void GetSignInRewardReq::set_reward_day(::google::protobuf::uint32 value) {
  
  reward_day_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSignInRewardReq.reward_day)
}

// -------------------------------------------------------------------

// GetSignInRewardRsp

// int32 retcode = 1;
inline void GetSignInRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetSignInRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetSignInRewardRsp.retcode)
  return retcode_;
}
inline void GetSignInRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSignInRewardRsp.retcode)
}

// .proto.SignInInfo sign_in_info = 2;
inline bool GetSignInRewardRsp::has_sign_in_info() const {
  return this != internal_default_instance() && sign_in_info_ != NULL;
}
inline void GetSignInRewardRsp::clear_sign_in_info() {
  if (GetArenaNoVirtual() == NULL && sign_in_info_ != NULL) delete sign_in_info_;
  sign_in_info_ = NULL;
}
inline const ::proto::SignInInfo& GetSignInRewardRsp::sign_in_info() const {
  const ::proto::SignInInfo* p = sign_in_info_;
  // @@protoc_insertion_point(field_get:proto.GetSignInRewardRsp.sign_in_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SignInInfo*>(
      &::proto::_SignInInfo_default_instance_);
}
inline ::proto::SignInInfo* GetSignInRewardRsp::mutable_sign_in_info() {
  
  if (sign_in_info_ == NULL) {
    sign_in_info_ = new ::proto::SignInInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetSignInRewardRsp.sign_in_info)
  return sign_in_info_;
}
inline ::proto::SignInInfo* GetSignInRewardRsp::release_sign_in_info() {
  // @@protoc_insertion_point(field_release:proto.GetSignInRewardRsp.sign_in_info)
  
  ::proto::SignInInfo* temp = sign_in_info_;
  sign_in_info_ = NULL;
  return temp;
}
inline void GetSignInRewardRsp::set_allocated_sign_in_info(::proto::SignInInfo* sign_in_info) {
  delete sign_in_info_;
  sign_in_info_ = sign_in_info;
  if (sign_in_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetSignInRewardRsp.sign_in_info)
}

// -------------------------------------------------------------------

// BonusActivityInfo

// uint32 bonus_activity_id = 1;
inline void BonusActivityInfo::clear_bonus_activity_id() {
  bonus_activity_id_ = 0u;
}
inline ::google::protobuf::uint32 BonusActivityInfo::bonus_activity_id() const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityInfo.bonus_activity_id)
  return bonus_activity_id_;
}
inline void BonusActivityInfo::set_bonus_activity_id(::google::protobuf::uint32 value) {
  
  bonus_activity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BonusActivityInfo.bonus_activity_id)
}

// uint32 state = 2;
inline void BonusActivityInfo::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 BonusActivityInfo::state() const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityInfo.state)
  return state_;
}
inline void BonusActivityInfo::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.BonusActivityInfo.state)
}

// -------------------------------------------------------------------

// BonusActivityAllDataNotify

// repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
inline int BonusActivityAllDataNotify::bonus_activity_info_list_size() const {
  return bonus_activity_info_list_.size();
}
inline void BonusActivityAllDataNotify::clear_bonus_activity_info_list() {
  bonus_activity_info_list_.Clear();
}
inline const ::proto::BonusActivityInfo& BonusActivityAllDataNotify::bonus_activity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Get(index);
}
inline ::proto::BonusActivityInfo* BonusActivityAllDataNotify::mutable_bonus_activity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Mutable(index);
}
inline ::proto::BonusActivityInfo* BonusActivityAllDataNotify::add_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_add:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
BonusActivityAllDataNotify::mutable_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return &bonus_activity_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
BonusActivityAllDataNotify::bonus_activity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.BonusActivityAllDataNotify.bonus_activity_info_list)
  return bonus_activity_info_list_;
}

// -------------------------------------------------------------------

// BonusActivityUpdateNotify

// repeated .proto.BonusActivityInfo bonus_activity_info_list = 1;
inline int BonusActivityUpdateNotify::bonus_activity_info_list_size() const {
  return bonus_activity_info_list_.size();
}
inline void BonusActivityUpdateNotify::clear_bonus_activity_info_list() {
  bonus_activity_info_list_.Clear();
}
inline const ::proto::BonusActivityInfo& BonusActivityUpdateNotify::bonus_activity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Get(index);
}
inline ::proto::BonusActivityInfo* BonusActivityUpdateNotify::mutable_bonus_activity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Mutable(index);
}
inline ::proto::BonusActivityInfo* BonusActivityUpdateNotify::add_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_add:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return bonus_activity_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
BonusActivityUpdateNotify::mutable_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return &bonus_activity_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
BonusActivityUpdateNotify::bonus_activity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.BonusActivityUpdateNotify.bonus_activity_info_list)
  return bonus_activity_info_list_;
}

// -------------------------------------------------------------------

// BonusActivityInfoReq

// -------------------------------------------------------------------

// BonusActivityInfoRsp

// int32 retcode = 1;
inline void BonusActivityInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 BonusActivityInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityInfoRsp.retcode)
  return retcode_;
}
inline void BonusActivityInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.BonusActivityInfoRsp.retcode)
}

// repeated .proto.BonusActivityInfo bonus_activity_info_list = 2;
inline int BonusActivityInfoRsp::bonus_activity_info_list_size() const {
  return bonus_activity_info_list_.size();
}
inline void BonusActivityInfoRsp::clear_bonus_activity_info_list() {
  bonus_activity_info_list_.Clear();
}
inline const ::proto::BonusActivityInfo& BonusActivityInfoRsp::bonus_activity_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return bonus_activity_info_list_.Get(index);
}
inline ::proto::BonusActivityInfo* BonusActivityInfoRsp::mutable_bonus_activity_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return bonus_activity_info_list_.Mutable(index);
}
inline ::proto::BonusActivityInfo* BonusActivityInfoRsp::add_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_add:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return bonus_activity_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >*
BonusActivityInfoRsp::mutable_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return &bonus_activity_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::BonusActivityInfo >&
BonusActivityInfoRsp::bonus_activity_info_list() const {
  // @@protoc_insertion_point(field_list:proto.BonusActivityInfoRsp.bonus_activity_info_list)
  return bonus_activity_info_list_;
}

// -------------------------------------------------------------------

// GetBonusActivityRewardReq

// uint32 bonus_activity_id = 1;
inline void GetBonusActivityRewardReq::clear_bonus_activity_id() {
  bonus_activity_id_ = 0u;
}
inline ::google::protobuf::uint32 GetBonusActivityRewardReq::bonus_activity_id() const {
  // @@protoc_insertion_point(field_get:proto.GetBonusActivityRewardReq.bonus_activity_id)
  return bonus_activity_id_;
}
inline void GetBonusActivityRewardReq::set_bonus_activity_id(::google::protobuf::uint32 value) {
  
  bonus_activity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBonusActivityRewardReq.bonus_activity_id)
}

// -------------------------------------------------------------------

// GetBonusActivityRewardRsp

// int32 retcode = 1;
inline void GetBonusActivityRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetBonusActivityRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetBonusActivityRewardRsp.retcode)
  return retcode_;
}
inline void GetBonusActivityRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBonusActivityRewardRsp.retcode)
}

// .proto.BonusActivityInfo bonus_activity_info_list = 2;
inline bool GetBonusActivityRewardRsp::has_bonus_activity_info_list() const {
  return this != internal_default_instance() && bonus_activity_info_list_ != NULL;
}
inline void GetBonusActivityRewardRsp::clear_bonus_activity_info_list() {
  if (GetArenaNoVirtual() == NULL && bonus_activity_info_list_ != NULL) delete bonus_activity_info_list_;
  bonus_activity_info_list_ = NULL;
}
inline const ::proto::BonusActivityInfo& GetBonusActivityRewardRsp::bonus_activity_info_list() const {
  const ::proto::BonusActivityInfo* p = bonus_activity_info_list_;
  // @@protoc_insertion_point(field_get:proto.GetBonusActivityRewardRsp.bonus_activity_info_list)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BonusActivityInfo*>(
      &::proto::_BonusActivityInfo_default_instance_);
}
inline ::proto::BonusActivityInfo* GetBonusActivityRewardRsp::mutable_bonus_activity_info_list() {
  
  if (bonus_activity_info_list_ == NULL) {
    bonus_activity_info_list_ = new ::proto::BonusActivityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetBonusActivityRewardRsp.bonus_activity_info_list)
  return bonus_activity_info_list_;
}
inline ::proto::BonusActivityInfo* GetBonusActivityRewardRsp::release_bonus_activity_info_list() {
  // @@protoc_insertion_point(field_release:proto.GetBonusActivityRewardRsp.bonus_activity_info_list)
  
  ::proto::BonusActivityInfo* temp = bonus_activity_info_list_;
  bonus_activity_info_list_ = NULL;
  return temp;
}
inline void GetBonusActivityRewardRsp::set_allocated_bonus_activity_info_list(::proto::BonusActivityInfo* bonus_activity_info_list) {
  delete bonus_activity_info_list_;
  bonus_activity_info_list_ = bonus_activity_info_list;
  if (bonus_activity_info_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetBonusActivityRewardRsp.bonus_activity_info_list)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::SignInAllDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SignInAllDataNotify_CmdId>() {
  return ::proto::SignInAllDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SignInInfoOpenNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SignInInfoOpenNotify_CmdId>() {
  return ::proto::SignInInfoOpenNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SignInInfoReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SignInInfoReq_CmdId>() {
  return ::proto::SignInInfoReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SignInInfoRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SignInInfoRsp_CmdId>() {
  return ::proto::SignInInfoRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetSignInRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetSignInRewardReq_CmdId>() {
  return ::proto::GetSignInRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetSignInRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetSignInRewardRsp_CmdId>() {
  return ::proto::GetSignInRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BonusActivityAllDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BonusActivityAllDataNotify_CmdId>() {
  return ::proto::BonusActivityAllDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BonusActivityUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BonusActivityUpdateNotify_CmdId>() {
  return ::proto::BonusActivityUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BonusActivityInfoReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BonusActivityInfoReq_CmdId>() {
  return ::proto::BonusActivityInfoReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BonusActivityInfoRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BonusActivityInfoRsp_CmdId>() {
  return ::proto::BonusActivityInfoRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetBonusActivityRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetBonusActivityRewardReq_CmdId>() {
  return ::proto::GetBonusActivityRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetBonusActivityRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetBonusActivityRewardRsp_CmdId>() {
  return ::proto::GetBonusActivityRewardRsp_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fsign_5fin_2eproto__INCLUDED
