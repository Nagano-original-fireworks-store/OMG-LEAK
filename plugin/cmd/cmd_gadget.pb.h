// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_gadget.proto

#ifndef PROTOBUF_cmd_2fcmd_5fgadget_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fgadget_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class BlossomChestInfoNotify;
class BlossomChestInfoNotifyDefaultTypeInternal;
extern BlossomChestInfoNotifyDefaultTypeInternal _BlossomChestInfoNotify_default_instance_;
class BossChestActivateNotify;
class BossChestActivateNotifyDefaultTypeInternal;
extern BossChestActivateNotifyDefaultTypeInternal _BossChestActivateNotify_default_instance_;
class GadgetInteractReq;
class GadgetInteractReqDefaultTypeInternal;
extern GadgetInteractReqDefaultTypeInternal _GadgetInteractReq_default_instance_;
class GadgetInteractRsp;
class GadgetInteractRspDefaultTypeInternal;
extern GadgetInteractRspDefaultTypeInternal _GadgetInteractRsp_default_instance_;
class GadgetStateNotify;
class GadgetStateNotifyDefaultTypeInternal;
extern GadgetStateNotifyDefaultTypeInternal _GadgetStateNotify_default_instance_;
class SelectWorktopOptionReq;
class SelectWorktopOptionReqDefaultTypeInternal;
extern SelectWorktopOptionReqDefaultTypeInternal _SelectWorktopOptionReq_default_instance_;
class SelectWorktopOptionRsp;
class SelectWorktopOptionRspDefaultTypeInternal;
extern SelectWorktopOptionRspDefaultTypeInternal _SelectWorktopOptionRsp_default_instance_;
class WorktopOptionNotify;
class WorktopOptionNotifyDefaultTypeInternal;
extern WorktopOptionNotifyDefaultTypeInternal _WorktopOptionNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fgadget_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fgadget_2eproto

enum GadgetInteractReq_CmdId {
  GadgetInteractReq_CmdId_NONE = 0,
  GadgetInteractReq_CmdId_CMD_ID = 801,
  GadgetInteractReq_CmdId_ENET_CHANNEL_ID = 0,
  GadgetInteractReq_CmdId_ENET_IS_RELIABLE = 1,
  GadgetInteractReq_CmdId_IS_ALLOW_CLIENT = 1,
  GadgetInteractReq_CmdId_GadgetInteractReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetInteractReq_CmdId_GadgetInteractReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetInteractReq_CmdId_IsValid(int value);
const GadgetInteractReq_CmdId GadgetInteractReq_CmdId_CmdId_MIN = GadgetInteractReq_CmdId_NONE;
const GadgetInteractReq_CmdId GadgetInteractReq_CmdId_CmdId_MAX = GadgetInteractReq_CmdId_CMD_ID;
const int GadgetInteractReq_CmdId_CmdId_ARRAYSIZE = GadgetInteractReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetInteractReq_CmdId_descriptor();
inline const ::std::string& GadgetInteractReq_CmdId_Name(GadgetInteractReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetInteractReq_CmdId_descriptor(), value);
}
inline bool GadgetInteractReq_CmdId_Parse(
    const ::std::string& name, GadgetInteractReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetInteractReq_CmdId>(
    GadgetInteractReq_CmdId_descriptor(), name, value);
}
enum GadgetInteractRsp_CmdId {
  GadgetInteractRsp_CmdId_NONE = 0,
  GadgetInteractRsp_CmdId_CMD_ID = 802,
  GadgetInteractRsp_CmdId_ENET_CHANNEL_ID = 0,
  GadgetInteractRsp_CmdId_ENET_IS_RELIABLE = 1,
  GadgetInteractRsp_CmdId_GadgetInteractRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetInteractRsp_CmdId_GadgetInteractRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetInteractRsp_CmdId_IsValid(int value);
const GadgetInteractRsp_CmdId GadgetInteractRsp_CmdId_CmdId_MIN = GadgetInteractRsp_CmdId_NONE;
const GadgetInteractRsp_CmdId GadgetInteractRsp_CmdId_CmdId_MAX = GadgetInteractRsp_CmdId_CMD_ID;
const int GadgetInteractRsp_CmdId_CmdId_ARRAYSIZE = GadgetInteractRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetInteractRsp_CmdId_descriptor();
inline const ::std::string& GadgetInteractRsp_CmdId_Name(GadgetInteractRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetInteractRsp_CmdId_descriptor(), value);
}
inline bool GadgetInteractRsp_CmdId_Parse(
    const ::std::string& name, GadgetInteractRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetInteractRsp_CmdId>(
    GadgetInteractRsp_CmdId_descriptor(), name, value);
}
enum GadgetStateNotify_CmdId {
  GadgetStateNotify_CmdId_NONE = 0,
  GadgetStateNotify_CmdId_CMD_ID = 803,
  GadgetStateNotify_CmdId_ENET_CHANNEL_ID = 0,
  GadgetStateNotify_CmdId_ENET_IS_RELIABLE = 1,
  GadgetStateNotify_CmdId_GadgetStateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetStateNotify_CmdId_GadgetStateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetStateNotify_CmdId_IsValid(int value);
const GadgetStateNotify_CmdId GadgetStateNotify_CmdId_CmdId_MIN = GadgetStateNotify_CmdId_NONE;
const GadgetStateNotify_CmdId GadgetStateNotify_CmdId_CmdId_MAX = GadgetStateNotify_CmdId_CMD_ID;
const int GadgetStateNotify_CmdId_CmdId_ARRAYSIZE = GadgetStateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetStateNotify_CmdId_descriptor();
inline const ::std::string& GadgetStateNotify_CmdId_Name(GadgetStateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetStateNotify_CmdId_descriptor(), value);
}
inline bool GadgetStateNotify_CmdId_Parse(
    const ::std::string& name, GadgetStateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetStateNotify_CmdId>(
    GadgetStateNotify_CmdId_descriptor(), name, value);
}
enum WorktopOptionNotify_CmdId {
  WorktopOptionNotify_CmdId_NONE = 0,
  WorktopOptionNotify_CmdId_CMD_ID = 804,
  WorktopOptionNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorktopOptionNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorktopOptionNotify_CmdId_WorktopOptionNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorktopOptionNotify_CmdId_WorktopOptionNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorktopOptionNotify_CmdId_IsValid(int value);
const WorktopOptionNotify_CmdId WorktopOptionNotify_CmdId_CmdId_MIN = WorktopOptionNotify_CmdId_NONE;
const WorktopOptionNotify_CmdId WorktopOptionNotify_CmdId_CmdId_MAX = WorktopOptionNotify_CmdId_CMD_ID;
const int WorktopOptionNotify_CmdId_CmdId_ARRAYSIZE = WorktopOptionNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorktopOptionNotify_CmdId_descriptor();
inline const ::std::string& WorktopOptionNotify_CmdId_Name(WorktopOptionNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorktopOptionNotify_CmdId_descriptor(), value);
}
inline bool WorktopOptionNotify_CmdId_Parse(
    const ::std::string& name, WorktopOptionNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorktopOptionNotify_CmdId>(
    WorktopOptionNotify_CmdId_descriptor(), name, value);
}
enum SelectWorktopOptionReq_CmdId {
  SelectWorktopOptionReq_CmdId_NONE = 0,
  SelectWorktopOptionReq_CmdId_CMD_ID = 805,
  SelectWorktopOptionReq_CmdId_ENET_CHANNEL_ID = 0,
  SelectWorktopOptionReq_CmdId_ENET_IS_RELIABLE = 1,
  SelectWorktopOptionReq_CmdId_IS_ALLOW_CLIENT = 1,
  SelectWorktopOptionReq_CmdId_SelectWorktopOptionReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SelectWorktopOptionReq_CmdId_SelectWorktopOptionReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SelectWorktopOptionReq_CmdId_IsValid(int value);
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq_CmdId_CmdId_MIN = SelectWorktopOptionReq_CmdId_NONE;
const SelectWorktopOptionReq_CmdId SelectWorktopOptionReq_CmdId_CmdId_MAX = SelectWorktopOptionReq_CmdId_CMD_ID;
const int SelectWorktopOptionReq_CmdId_CmdId_ARRAYSIZE = SelectWorktopOptionReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SelectWorktopOptionReq_CmdId_descriptor();
inline const ::std::string& SelectWorktopOptionReq_CmdId_Name(SelectWorktopOptionReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SelectWorktopOptionReq_CmdId_descriptor(), value);
}
inline bool SelectWorktopOptionReq_CmdId_Parse(
    const ::std::string& name, SelectWorktopOptionReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SelectWorktopOptionReq_CmdId>(
    SelectWorktopOptionReq_CmdId_descriptor(), name, value);
}
enum SelectWorktopOptionRsp_CmdId {
  SelectWorktopOptionRsp_CmdId_NONE = 0,
  SelectWorktopOptionRsp_CmdId_CMD_ID = 806,
  SelectWorktopOptionRsp_CmdId_ENET_CHANNEL_ID = 0,
  SelectWorktopOptionRsp_CmdId_ENET_IS_RELIABLE = 1,
  SelectWorktopOptionRsp_CmdId_SelectWorktopOptionRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SelectWorktopOptionRsp_CmdId_SelectWorktopOptionRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SelectWorktopOptionRsp_CmdId_IsValid(int value);
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp_CmdId_CmdId_MIN = SelectWorktopOptionRsp_CmdId_NONE;
const SelectWorktopOptionRsp_CmdId SelectWorktopOptionRsp_CmdId_CmdId_MAX = SelectWorktopOptionRsp_CmdId_CMD_ID;
const int SelectWorktopOptionRsp_CmdId_CmdId_ARRAYSIZE = SelectWorktopOptionRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SelectWorktopOptionRsp_CmdId_descriptor();
inline const ::std::string& SelectWorktopOptionRsp_CmdId_Name(SelectWorktopOptionRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SelectWorktopOptionRsp_CmdId_descriptor(), value);
}
inline bool SelectWorktopOptionRsp_CmdId_Parse(
    const ::std::string& name, SelectWorktopOptionRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SelectWorktopOptionRsp_CmdId>(
    SelectWorktopOptionRsp_CmdId_descriptor(), name, value);
}
enum BossChestActivateNotify_CmdId {
  BossChestActivateNotify_CmdId_NONE = 0,
  BossChestActivateNotify_CmdId_CMD_ID = 807,
  BossChestActivateNotify_CmdId_ENET_CHANNEL_ID = 0,
  BossChestActivateNotify_CmdId_ENET_IS_RELIABLE = 1,
  BossChestActivateNotify_CmdId_BossChestActivateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BossChestActivateNotify_CmdId_BossChestActivateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BossChestActivateNotify_CmdId_IsValid(int value);
const BossChestActivateNotify_CmdId BossChestActivateNotify_CmdId_CmdId_MIN = BossChestActivateNotify_CmdId_NONE;
const BossChestActivateNotify_CmdId BossChestActivateNotify_CmdId_CmdId_MAX = BossChestActivateNotify_CmdId_CMD_ID;
const int BossChestActivateNotify_CmdId_CmdId_ARRAYSIZE = BossChestActivateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BossChestActivateNotify_CmdId_descriptor();
inline const ::std::string& BossChestActivateNotify_CmdId_Name(BossChestActivateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BossChestActivateNotify_CmdId_descriptor(), value);
}
inline bool BossChestActivateNotify_CmdId_Parse(
    const ::std::string& name, BossChestActivateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BossChestActivateNotify_CmdId>(
    BossChestActivateNotify_CmdId_descriptor(), name, value);
}
enum BlossomChestInfoNotify_CmdId {
  BlossomChestInfoNotify_CmdId_NONE = 0,
  BlossomChestInfoNotify_CmdId_CMD_ID = 808,
  BlossomChestInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  BlossomChestInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  BlossomChestInfoNotify_CmdId_BlossomChestInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BlossomChestInfoNotify_CmdId_BlossomChestInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BlossomChestInfoNotify_CmdId_IsValid(int value);
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify_CmdId_CmdId_MIN = BlossomChestInfoNotify_CmdId_NONE;
const BlossomChestInfoNotify_CmdId BlossomChestInfoNotify_CmdId_CmdId_MAX = BlossomChestInfoNotify_CmdId_CMD_ID;
const int BlossomChestInfoNotify_CmdId_CmdId_ARRAYSIZE = BlossomChestInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* BlossomChestInfoNotify_CmdId_descriptor();
inline const ::std::string& BlossomChestInfoNotify_CmdId_Name(BlossomChestInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    BlossomChestInfoNotify_CmdId_descriptor(), value);
}
inline bool BlossomChestInfoNotify_CmdId_Parse(
    const ::std::string& name, BlossomChestInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BlossomChestInfoNotify_CmdId>(
    BlossomChestInfoNotify_CmdId_descriptor(), name, value);
}
enum InteractType {
  INTERACT_NONE = 0,
  INTERACT_PICK_ITEM = 1,
  INTERACT_GATHER = 2,
  INTERACT_OPEN_CHEST = 3,
  INTERACT_OPEN_STATUE = 4,
  INTERACT_CONSUM = 5,
  InteractType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InteractType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InteractType_IsValid(int value);
const InteractType InteractType_MIN = INTERACT_NONE;
const InteractType InteractType_MAX = INTERACT_CONSUM;
const int InteractType_ARRAYSIZE = InteractType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InteractType_descriptor();
inline const ::std::string& InteractType_Name(InteractType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InteractType_descriptor(), value);
}
inline bool InteractType_Parse(
    const ::std::string& name, InteractType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InteractType>(
    InteractType_descriptor(), name, value);
}
enum InterOpType {
  INTER_OP_FINISH = 0,
  INTER_OP_START = 1,
  InterOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  InterOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool InterOpType_IsValid(int value);
const InterOpType InterOpType_MIN = INTER_OP_FINISH;
const InterOpType InterOpType_MAX = INTER_OP_START;
const int InterOpType_ARRAYSIZE = InterOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* InterOpType_descriptor();
inline const ::std::string& InterOpType_Name(InterOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    InterOpType_descriptor(), value);
}
inline bool InterOpType_Parse(
    const ::std::string& name, InterOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InterOpType>(
    InterOpType_descriptor(), name, value);
}
// ===================================================================

class GadgetInteractReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetInteractReq) */ {
 public:
  GadgetInteractReq();
  virtual ~GadgetInteractReq();

  GadgetInteractReq(const GadgetInteractReq& from);

  inline GadgetInteractReq& operator=(const GadgetInteractReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetInteractReq(GadgetInteractReq&& from) noexcept
    : GadgetInteractReq() {
    *this = ::std::move(from);
  }

  inline GadgetInteractReq& operator=(GadgetInteractReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetInteractReq& default_instance();

  static inline const GadgetInteractReq* internal_default_instance() {
    return reinterpret_cast<const GadgetInteractReq*>(
               &_GadgetInteractReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GadgetInteractReq* other);
  friend void swap(GadgetInteractReq& a, GadgetInteractReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetInteractReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetInteractReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetInteractReq& from);
  void MergeFrom(const GadgetInteractReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetInteractReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetInteractReq_CmdId CmdId;
  static const CmdId NONE =
    GadgetInteractReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetInteractReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetInteractReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetInteractReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GadgetInteractReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GadgetInteractReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetInteractReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetInteractReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetInteractReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetInteractReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetInteractReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetInteractReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 gadget_entity_id = 1;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // .proto.InterOpType op_type = 2;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::proto::InterOpType op_type() const;
  void set_op_type(::proto::InterOpType value);

  // uint32 gadget_id = 3;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 3;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetInteractReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadget_entity_id_;
  int op_type_;
  ::google::protobuf::uint32 gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetInteractRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetInteractRsp) */ {
 public:
  GadgetInteractRsp();
  virtual ~GadgetInteractRsp();

  GadgetInteractRsp(const GadgetInteractRsp& from);

  inline GadgetInteractRsp& operator=(const GadgetInteractRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetInteractRsp(GadgetInteractRsp&& from) noexcept
    : GadgetInteractRsp() {
    *this = ::std::move(from);
  }

  inline GadgetInteractRsp& operator=(GadgetInteractRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetInteractRsp& default_instance();

  static inline const GadgetInteractRsp* internal_default_instance() {
    return reinterpret_cast<const GadgetInteractRsp*>(
               &_GadgetInteractRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GadgetInteractRsp* other);
  friend void swap(GadgetInteractRsp& a, GadgetInteractRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetInteractRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetInteractRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetInteractRsp& from);
  void MergeFrom(const GadgetInteractRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetInteractRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetInteractRsp_CmdId CmdId;
  static const CmdId NONE =
    GadgetInteractRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetInteractRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetInteractRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetInteractRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetInteractRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetInteractRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetInteractRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetInteractRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetInteractRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetInteractRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetInteractRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 gadget_entity_id = 2;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // .proto.InteractType interact_type = 3;
  void clear_interact_type();
  static const int kInteractTypeFieldNumber = 3;
  ::proto::InteractType interact_type() const;
  void set_interact_type(::proto::InteractType value);

  // .proto.InterOpType op_type = 4;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 4;
  ::proto::InterOpType op_type() const;
  void set_op_type(::proto::InterOpType value);

  // uint32 gadget_id = 5;
  void clear_gadget_id();
  static const int kGadgetIdFieldNumber = 5;
  ::google::protobuf::uint32 gadget_id() const;
  void set_gadget_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GadgetInteractRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 gadget_entity_id_;
  int interact_type_;
  int op_type_;
  ::google::protobuf::uint32 gadget_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GadgetStateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GadgetStateNotify) */ {
 public:
  GadgetStateNotify();
  virtual ~GadgetStateNotify();

  GadgetStateNotify(const GadgetStateNotify& from);

  inline GadgetStateNotify& operator=(const GadgetStateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GadgetStateNotify(GadgetStateNotify&& from) noexcept
    : GadgetStateNotify() {
    *this = ::std::move(from);
  }

  inline GadgetStateNotify& operator=(GadgetStateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GadgetStateNotify& default_instance();

  static inline const GadgetStateNotify* internal_default_instance() {
    return reinterpret_cast<const GadgetStateNotify*>(
               &_GadgetStateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GadgetStateNotify* other);
  friend void swap(GadgetStateNotify& a, GadgetStateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GadgetStateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GadgetStateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GadgetStateNotify& from);
  void MergeFrom(const GadgetStateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GadgetStateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GadgetStateNotify_CmdId CmdId;
  static const CmdId NONE =
    GadgetStateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GadgetStateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GadgetStateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GadgetStateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GadgetStateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GadgetStateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GadgetStateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GadgetStateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GadgetStateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GadgetStateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GadgetStateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 gadget_entity_id = 1;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // uint32 gadget_state = 2;
  void clear_gadget_state();
  static const int kGadgetStateFieldNumber = 2;
  ::google::protobuf::uint32 gadget_state() const;
  void set_gadget_state(::google::protobuf::uint32 value);

  // bool is_enable_interact = 3;
  void clear_is_enable_interact();
  static const int kIsEnableInteractFieldNumber = 3;
  bool is_enable_interact() const;
  void set_is_enable_interact(bool value);

  // @@protoc_insertion_point(class_scope:proto.GadgetStateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadget_entity_id_;
  ::google::protobuf::uint32 gadget_state_;
  bool is_enable_interact_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorktopOptionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorktopOptionNotify) */ {
 public:
  WorktopOptionNotify();
  virtual ~WorktopOptionNotify();

  WorktopOptionNotify(const WorktopOptionNotify& from);

  inline WorktopOptionNotify& operator=(const WorktopOptionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorktopOptionNotify(WorktopOptionNotify&& from) noexcept
    : WorktopOptionNotify() {
    *this = ::std::move(from);
  }

  inline WorktopOptionNotify& operator=(WorktopOptionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorktopOptionNotify& default_instance();

  static inline const WorktopOptionNotify* internal_default_instance() {
    return reinterpret_cast<const WorktopOptionNotify*>(
               &_WorktopOptionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(WorktopOptionNotify* other);
  friend void swap(WorktopOptionNotify& a, WorktopOptionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorktopOptionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorktopOptionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorktopOptionNotify& from);
  void MergeFrom(const WorktopOptionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorktopOptionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorktopOptionNotify_CmdId CmdId;
  static const CmdId NONE =
    WorktopOptionNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorktopOptionNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorktopOptionNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorktopOptionNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return WorktopOptionNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorktopOptionNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorktopOptionNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorktopOptionNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorktopOptionNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorktopOptionNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorktopOptionNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 option_list = 2;
  int option_list_size() const;
  void clear_option_list();
  static const int kOptionListFieldNumber = 2;
  ::google::protobuf::uint32 option_list(int index) const;
  void set_option_list(int index, ::google::protobuf::uint32 value);
  void add_option_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      option_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_option_list();

  // uint32 gadget_entity_id = 1;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WorktopOptionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > option_list_;
  mutable int _option_list_cached_byte_size_;
  ::google::protobuf::uint32 gadget_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectWorktopOptionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SelectWorktopOptionReq) */ {
 public:
  SelectWorktopOptionReq();
  virtual ~SelectWorktopOptionReq();

  SelectWorktopOptionReq(const SelectWorktopOptionReq& from);

  inline SelectWorktopOptionReq& operator=(const SelectWorktopOptionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectWorktopOptionReq(SelectWorktopOptionReq&& from) noexcept
    : SelectWorktopOptionReq() {
    *this = ::std::move(from);
  }

  inline SelectWorktopOptionReq& operator=(SelectWorktopOptionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectWorktopOptionReq& default_instance();

  static inline const SelectWorktopOptionReq* internal_default_instance() {
    return reinterpret_cast<const SelectWorktopOptionReq*>(
               &_SelectWorktopOptionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SelectWorktopOptionReq* other);
  friend void swap(SelectWorktopOptionReq& a, SelectWorktopOptionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectWorktopOptionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectWorktopOptionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectWorktopOptionReq& from);
  void MergeFrom(const SelectWorktopOptionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectWorktopOptionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SelectWorktopOptionReq_CmdId CmdId;
  static const CmdId NONE =
    SelectWorktopOptionReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SelectWorktopOptionReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SelectWorktopOptionReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SelectWorktopOptionReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SelectWorktopOptionReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SelectWorktopOptionReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SelectWorktopOptionReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SelectWorktopOptionReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SelectWorktopOptionReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SelectWorktopOptionReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SelectWorktopOptionReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SelectWorktopOptionReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 gadget_entity_id = 1;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // uint32 option_id = 2;
  void clear_option_id();
  static const int kOptionIdFieldNumber = 2;
  ::google::protobuf::uint32 option_id() const;
  void set_option_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SelectWorktopOptionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadget_entity_id_;
  ::google::protobuf::uint32 option_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SelectWorktopOptionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SelectWorktopOptionRsp) */ {
 public:
  SelectWorktopOptionRsp();
  virtual ~SelectWorktopOptionRsp();

  SelectWorktopOptionRsp(const SelectWorktopOptionRsp& from);

  inline SelectWorktopOptionRsp& operator=(const SelectWorktopOptionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SelectWorktopOptionRsp(SelectWorktopOptionRsp&& from) noexcept
    : SelectWorktopOptionRsp() {
    *this = ::std::move(from);
  }

  inline SelectWorktopOptionRsp& operator=(SelectWorktopOptionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectWorktopOptionRsp& default_instance();

  static inline const SelectWorktopOptionRsp* internal_default_instance() {
    return reinterpret_cast<const SelectWorktopOptionRsp*>(
               &_SelectWorktopOptionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SelectWorktopOptionRsp* other);
  friend void swap(SelectWorktopOptionRsp& a, SelectWorktopOptionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SelectWorktopOptionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SelectWorktopOptionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SelectWorktopOptionRsp& from);
  void MergeFrom(const SelectWorktopOptionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SelectWorktopOptionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SelectWorktopOptionRsp_CmdId CmdId;
  static const CmdId NONE =
    SelectWorktopOptionRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SelectWorktopOptionRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SelectWorktopOptionRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SelectWorktopOptionRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SelectWorktopOptionRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SelectWorktopOptionRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SelectWorktopOptionRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SelectWorktopOptionRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SelectWorktopOptionRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SelectWorktopOptionRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SelectWorktopOptionRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 gadget_entity_id = 2;
  void clear_gadget_entity_id();
  static const int kGadgetEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 gadget_entity_id() const;
  void set_gadget_entity_id(::google::protobuf::uint32 value);

  // uint32 option_id = 3;
  void clear_option_id();
  static const int kOptionIdFieldNumber = 3;
  ::google::protobuf::uint32 option_id() const;
  void set_option_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SelectWorktopOptionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 gadget_entity_id_;
  ::google::protobuf::uint32 option_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BossChestActivateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BossChestActivateNotify) */ {
 public:
  BossChestActivateNotify();
  virtual ~BossChestActivateNotify();

  BossChestActivateNotify(const BossChestActivateNotify& from);

  inline BossChestActivateNotify& operator=(const BossChestActivateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BossChestActivateNotify(BossChestActivateNotify&& from) noexcept
    : BossChestActivateNotify() {
    *this = ::std::move(from);
  }

  inline BossChestActivateNotify& operator=(BossChestActivateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BossChestActivateNotify& default_instance();

  static inline const BossChestActivateNotify* internal_default_instance() {
    return reinterpret_cast<const BossChestActivateNotify*>(
               &_BossChestActivateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(BossChestActivateNotify* other);
  friend void swap(BossChestActivateNotify& a, BossChestActivateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BossChestActivateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BossChestActivateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BossChestActivateNotify& from);
  void MergeFrom(const BossChestActivateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BossChestActivateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BossChestActivateNotify_CmdId CmdId;
  static const CmdId NONE =
    BossChestActivateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BossChestActivateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BossChestActivateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BossChestActivateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BossChestActivateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BossChestActivateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BossChestActivateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BossChestActivateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BossChestActivateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BossChestActivateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BossChestActivateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 qualify_uid_list = 2;
  int qualify_uid_list_size() const;
  void clear_qualify_uid_list();
  static const int kQualifyUidListFieldNumber = 2;
  ::google::protobuf::uint32 qualify_uid_list(int index) const;
  void set_qualify_uid_list(int index, ::google::protobuf::uint32 value);
  void add_qualify_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      qualify_uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_qualify_uid_list();

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BossChestActivateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > qualify_uid_list_;
  mutable int _qualify_uid_list_cached_byte_size_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlossomChestInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlossomChestInfoNotify) */ {
 public:
  BlossomChestInfoNotify();
  virtual ~BlossomChestInfoNotify();

  BlossomChestInfoNotify(const BlossomChestInfoNotify& from);

  inline BlossomChestInfoNotify& operator=(const BlossomChestInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlossomChestInfoNotify(BlossomChestInfoNotify&& from) noexcept
    : BlossomChestInfoNotify() {
    *this = ::std::move(from);
  }

  inline BlossomChestInfoNotify& operator=(BlossomChestInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlossomChestInfoNotify& default_instance();

  static inline const BlossomChestInfoNotify* internal_default_instance() {
    return reinterpret_cast<const BlossomChestInfoNotify*>(
               &_BlossomChestInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(BlossomChestInfoNotify* other);
  friend void swap(BlossomChestInfoNotify& a, BlossomChestInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlossomChestInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BlossomChestInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlossomChestInfoNotify& from);
  void MergeFrom(const BlossomChestInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlossomChestInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BlossomChestInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    BlossomChestInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    BlossomChestInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    BlossomChestInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    BlossomChestInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return BlossomChestInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    BlossomChestInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    BlossomChestInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    BlossomChestInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return BlossomChestInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return BlossomChestInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return BlossomChestInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.BlossomChestInfo blossom_chest_info = 2;
  bool has_blossom_chest_info() const;
  void clear_blossom_chest_info();
  static const int kBlossomChestInfoFieldNumber = 2;
  const ::proto::BlossomChestInfo& blossom_chest_info() const;
  ::proto::BlossomChestInfo* mutable_blossom_chest_info();
  ::proto::BlossomChestInfo* release_blossom_chest_info();
  void set_allocated_blossom_chest_info(::proto::BlossomChestInfo* blossom_chest_info);

  // uint32 entity_id = 1;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 1;
  ::google::protobuf::uint32 entity_id() const;
  void set_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BlossomChestInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::BlossomChestInfo* blossom_chest_info_;
  ::google::protobuf::uint32 entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fgadget_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GadgetInteractReq

// uint32 gadget_entity_id = 1;
inline void GadgetInteractReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 GadgetInteractReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.gadget_entity_id)
  return gadget_entity_id_;
}
inline void GadgetInteractReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.gadget_entity_id)
}

// .proto.InterOpType op_type = 2;
inline void GadgetInteractReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::InterOpType GadgetInteractReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.op_type)
  return static_cast< ::proto::InterOpType >(op_type_);
}
inline void GadgetInteractReq::set_op_type(::proto::InterOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.op_type)
}

// uint32 gadget_id = 3;
inline void GadgetInteractReq::clear_gadget_id() {
  gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 GadgetInteractReq::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractReq.gadget_id)
  return gadget_id_;
}
inline void GadgetInteractReq::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractReq.gadget_id)
}

// -------------------------------------------------------------------

// GadgetInteractRsp

// int32 retcode = 1;
inline void GadgetInteractRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GadgetInteractRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.retcode)
  return retcode_;
}
inline void GadgetInteractRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.retcode)
}

// uint32 gadget_entity_id = 2;
inline void GadgetInteractRsp::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 GadgetInteractRsp::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.gadget_entity_id)
  return gadget_entity_id_;
}
inline void GadgetInteractRsp::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.gadget_entity_id)
}

// .proto.InteractType interact_type = 3;
inline void GadgetInteractRsp::clear_interact_type() {
  interact_type_ = 0;
}
inline ::proto::InteractType GadgetInteractRsp::interact_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.interact_type)
  return static_cast< ::proto::InteractType >(interact_type_);
}
inline void GadgetInteractRsp::set_interact_type(::proto::InteractType value) {
  
  interact_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.interact_type)
}

// .proto.InterOpType op_type = 4;
inline void GadgetInteractRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::InterOpType GadgetInteractRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.op_type)
  return static_cast< ::proto::InterOpType >(op_type_);
}
inline void GadgetInteractRsp::set_op_type(::proto::InterOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.op_type)
}

// uint32 gadget_id = 5;
inline void GadgetInteractRsp::clear_gadget_id() {
  gadget_id_ = 0u;
}
inline ::google::protobuf::uint32 GadgetInteractRsp::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetInteractRsp.gadget_id)
  return gadget_id_;
}
inline void GadgetInteractRsp::set_gadget_id(::google::protobuf::uint32 value) {
  
  gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetInteractRsp.gadget_id)
}

// -------------------------------------------------------------------

// GadgetStateNotify

// uint32 gadget_entity_id = 1;
inline void GadgetStateNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 GadgetStateNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.gadget_entity_id)
  return gadget_entity_id_;
}
inline void GadgetStateNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.gadget_entity_id)
}

// uint32 gadget_state = 2;
inline void GadgetStateNotify::clear_gadget_state() {
  gadget_state_ = 0u;
}
inline ::google::protobuf::uint32 GadgetStateNotify::gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.gadget_state)
  return gadget_state_;
}
inline void GadgetStateNotify::set_gadget_state(::google::protobuf::uint32 value) {
  
  gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.gadget_state)
}

// bool is_enable_interact = 3;
inline void GadgetStateNotify::clear_is_enable_interact() {
  is_enable_interact_ = false;
}
inline bool GadgetStateNotify::is_enable_interact() const {
  // @@protoc_insertion_point(field_get:proto.GadgetStateNotify.is_enable_interact)
  return is_enable_interact_;
}
inline void GadgetStateNotify::set_is_enable_interact(bool value) {
  
  is_enable_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetStateNotify.is_enable_interact)
}

// -------------------------------------------------------------------

// WorktopOptionNotify

// uint32 gadget_entity_id = 1;
inline void WorktopOptionNotify::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 WorktopOptionNotify::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WorktopOptionNotify.gadget_entity_id)
  return gadget_entity_id_;
}
inline void WorktopOptionNotify::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorktopOptionNotify.gadget_entity_id)
}

// repeated uint32 option_list = 2;
inline int WorktopOptionNotify::option_list_size() const {
  return option_list_.size();
}
inline void WorktopOptionNotify::clear_option_list() {
  option_list_.Clear();
}
inline ::google::protobuf::uint32 WorktopOptionNotify::option_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorktopOptionNotify.option_list)
  return option_list_.Get(index);
}
inline void WorktopOptionNotify::set_option_list(int index, ::google::protobuf::uint32 value) {
  option_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorktopOptionNotify.option_list)
}
inline void WorktopOptionNotify::add_option_list(::google::protobuf::uint32 value) {
  option_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorktopOptionNotify.option_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorktopOptionNotify::option_list() const {
  // @@protoc_insertion_point(field_list:proto.WorktopOptionNotify.option_list)
  return option_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorktopOptionNotify::mutable_option_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorktopOptionNotify.option_list)
  return &option_list_;
}

// -------------------------------------------------------------------

// SelectWorktopOptionReq

// uint32 gadget_entity_id = 1;
inline void SelectWorktopOptionReq::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SelectWorktopOptionReq::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionReq.gadget_entity_id)
  return gadget_entity_id_;
}
inline void SelectWorktopOptionReq::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionReq.gadget_entity_id)
}

// uint32 option_id = 2;
inline void SelectWorktopOptionReq::clear_option_id() {
  option_id_ = 0u;
}
inline ::google::protobuf::uint32 SelectWorktopOptionReq::option_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionReq.option_id)
  return option_id_;
}
inline void SelectWorktopOptionReq::set_option_id(::google::protobuf::uint32 value) {
  
  option_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionReq.option_id)
}

// -------------------------------------------------------------------

// SelectWorktopOptionRsp

// int32 retcode = 1;
inline void SelectWorktopOptionRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SelectWorktopOptionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.retcode)
  return retcode_;
}
inline void SelectWorktopOptionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.retcode)
}

// uint32 gadget_entity_id = 2;
inline void SelectWorktopOptionRsp::clear_gadget_entity_id() {
  gadget_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 SelectWorktopOptionRsp::gadget_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.gadget_entity_id)
  return gadget_entity_id_;
}
inline void SelectWorktopOptionRsp::set_gadget_entity_id(::google::protobuf::uint32 value) {
  
  gadget_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.gadget_entity_id)
}

// uint32 option_id = 3;
inline void SelectWorktopOptionRsp::clear_option_id() {
  option_id_ = 0u;
}
inline ::google::protobuf::uint32 SelectWorktopOptionRsp::option_id() const {
  // @@protoc_insertion_point(field_get:proto.SelectWorktopOptionRsp.option_id)
  return option_id_;
}
inline void SelectWorktopOptionRsp::set_option_id(::google::protobuf::uint32 value) {
  
  option_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SelectWorktopOptionRsp.option_id)
}

// -------------------------------------------------------------------

// BossChestActivateNotify

// uint32 entity_id = 1;
inline void BossChestActivateNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 BossChestActivateNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.BossChestActivateNotify.entity_id)
  return entity_id_;
}
inline void BossChestActivateNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestActivateNotify.entity_id)
}

// repeated uint32 qualify_uid_list = 2;
inline int BossChestActivateNotify::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
inline void BossChestActivateNotify::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
inline ::google::protobuf::uint32 BossChestActivateNotify::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestActivateNotify.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
inline void BossChestActivateNotify::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestActivateNotify.qualify_uid_list)
}
inline void BossChestActivateNotify::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestActivateNotify.qualify_uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestActivateNotify::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestActivateNotify.qualify_uid_list)
  return qualify_uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestActivateNotify::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestActivateNotify.qualify_uid_list)
  return &qualify_uid_list_;
}

// -------------------------------------------------------------------

// BlossomChestInfoNotify

// uint32 entity_id = 1;
inline void BlossomChestInfoNotify::clear_entity_id() {
  entity_id_ = 0u;
}
inline ::google::protobuf::uint32 BlossomChestInfoNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfoNotify.entity_id)
  return entity_id_;
}
inline void BlossomChestInfoNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestInfoNotify.entity_id)
}

// .proto.BlossomChestInfo blossom_chest_info = 2;
inline bool BlossomChestInfoNotify::has_blossom_chest_info() const {
  return this != internal_default_instance() && blossom_chest_info_ != NULL;
}
inline void BlossomChestInfoNotify::clear_blossom_chest_info() {
  if (GetArenaNoVirtual() == NULL && blossom_chest_info_ != NULL) delete blossom_chest_info_;
  blossom_chest_info_ = NULL;
}
inline const ::proto::BlossomChestInfo& BlossomChestInfoNotify::blossom_chest_info() const {
  const ::proto::BlossomChestInfo* p = blossom_chest_info_;
  // @@protoc_insertion_point(field_get:proto.BlossomChestInfoNotify.blossom_chest_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::BlossomChestInfo*>(
      &::proto::_BlossomChestInfo_default_instance_);
}
inline ::proto::BlossomChestInfo* BlossomChestInfoNotify::mutable_blossom_chest_info() {
  
  if (blossom_chest_info_ == NULL) {
    blossom_chest_info_ = new ::proto::BlossomChestInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.BlossomChestInfoNotify.blossom_chest_info)
  return blossom_chest_info_;
}
inline ::proto::BlossomChestInfo* BlossomChestInfoNotify::release_blossom_chest_info() {
  // @@protoc_insertion_point(field_release:proto.BlossomChestInfoNotify.blossom_chest_info)
  
  ::proto::BlossomChestInfo* temp = blossom_chest_info_;
  blossom_chest_info_ = NULL;
  return temp;
}
inline void BlossomChestInfoNotify::set_allocated_blossom_chest_info(::proto::BlossomChestInfo* blossom_chest_info) {
  delete blossom_chest_info_;
  blossom_chest_info_ = blossom_chest_info;
  if (blossom_chest_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BlossomChestInfoNotify.blossom_chest_info)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GadgetInteractReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetInteractReq_CmdId>() {
  return ::proto::GadgetInteractReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetInteractRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetInteractRsp_CmdId>() {
  return ::proto::GadgetInteractRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetStateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetStateNotify_CmdId>() {
  return ::proto::GadgetStateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorktopOptionNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorktopOptionNotify_CmdId>() {
  return ::proto::WorktopOptionNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SelectWorktopOptionReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SelectWorktopOptionReq_CmdId>() {
  return ::proto::SelectWorktopOptionReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SelectWorktopOptionRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SelectWorktopOptionRsp_CmdId>() {
  return ::proto::SelectWorktopOptionRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BossChestActivateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BossChestActivateNotify_CmdId>() {
  return ::proto::BossChestActivateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::BlossomChestInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::BlossomChestInfoNotify_CmdId>() {
  return ::proto::BlossomChestInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::InteractType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InteractType>() {
  return ::proto::InteractType_descriptor();
}
template <> struct is_proto_enum< ::proto::InterOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::InterOpType>() {
  return ::proto::InterOpType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fgadget_2eproto__INCLUDED
