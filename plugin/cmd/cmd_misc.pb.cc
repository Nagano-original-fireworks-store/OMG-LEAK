// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_misc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_misc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class KeepAliveNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KeepAliveNotify>
     _instance;
} _KeepAliveNotify_default_instance_;
class GmTalkReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GmTalkReq>
     _instance;
} _GmTalkReq_default_instance_;
class GmTalkRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GmTalkRsp>
     _instance;
} _GmTalkRsp_default_instance_;
class MsgParamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgParam>
     _instance;
  ::google::protobuf::uint32 int_param_;
  float flt_param_;
  ::google::protobuf::internal::ArenaStringPtr str_param_;
} _MsgParam_default_instance_;
class ShowMessageNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ShowMessageNotify>
     _instance;
} _ShowMessageNotify_default_instance_;
class PingReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PingReq>
     _instance;
} _PingReq_default_instance_;
class PingRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PingRsp>
     _instance;
} _PingRsp_default_instance_;
class GetOnlinePlayerListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetOnlinePlayerListReq>
     _instance;
} _GetOnlinePlayerListReq_default_instance_;
class GetOnlinePlayerListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetOnlinePlayerListRsp>
     _instance;
} _GetOnlinePlayerListRsp_default_instance_;
class ServerTimeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerTimeNotify>
     _instance;
} _ServerTimeNotify_default_instance_;
class ServerLogNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerLogNotify>
     _instance;
} _ServerLogNotify_default_instance_;
class ClientReconnectNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientReconnectNotify>
     _instance;
} _ClientReconnectNotify_default_instance_;
class ClientStatDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientStatData>
     _instance;
} _ClientStatData_default_instance_;
class ClientFpsStatusNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientFpsStatusNotify>
     _instance;
} _ClientFpsStatusNotify_default_instance_;
class RobotPushPlayerDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RobotPushPlayerDataNotify>
     _instance;
} _RobotPushPlayerDataNotify_default_instance_;
class ClientReportNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientReportNotify>
     _instance;
} _ClientReportNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fmisc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[18];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkReq, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkRsp, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GmTalkRsp, retmsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgParam, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgParam, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(MsgParamDefaultTypeInternal, int_param_),
  offsetof(MsgParamDefaultTypeInternal, flt_param_),
  offsetof(MsgParamDefaultTypeInternal, str_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgParam, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowMessageNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowMessageNotify, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShowMessageNotify, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReq, client_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRsp, seq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingRsp, client_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOnlinePlayerListRsp, player_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerTimeNotify, server_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLogNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLogNotify, log_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLogNotify, log_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerLogNotify, server_log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReconnectNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReconnectNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientStatData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientStatData, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientStatData, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientStatData, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientStatData, fps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientStatData, memory_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientFpsStatusNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientFpsStatusNotify, is_low_fps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientFpsStatusNotify, fps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientFpsStatusNotify, stat_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPushPlayerDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RobotPushPlayerDataNotify, bin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReportNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReportNotify, report_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientReportNotify, report_value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(KeepAliveNotify)},
  { 5, -1, sizeof(GmTalkReq)},
  { 11, -1, sizeof(GmTalkRsp)},
  { 19, -1, sizeof(MsgParam)},
  { 28, -1, sizeof(ShowMessageNotify)},
  { 35, -1, sizeof(PingReq)},
  { 42, -1, sizeof(PingRsp)},
  { 50, -1, sizeof(GetOnlinePlayerListReq)},
  { 55, -1, sizeof(GetOnlinePlayerListRsp)},
  { 62, -1, sizeof(ServerTimeNotify)},
  { 68, -1, sizeof(ServerLogNotify)},
  { 76, -1, sizeof(ClientReconnectNotify)},
  { 82, -1, sizeof(ClientStatData)},
  { 92, -1, sizeof(ClientFpsStatusNotify)},
  { 100, -1, sizeof(RobotPushPlayerDataNotify)},
  { 106, -1, sizeof(ClientReportNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeepAliveNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GmTalkReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GmTalkRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShowMessageNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PingRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlinePlayerListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOnlinePlayerListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerTimeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerLogNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientReconnectNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientStatData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientFpsStatusNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RobotPushPlayerDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientReportNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_misc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _KeepAliveNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KeepAliveNotify_default_instance_);_GmTalkReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GmTalkReq_default_instance_);_GmTalkRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GmTalkRsp_default_instance_);_MsgParam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgParam_default_instance_);_ShowMessageNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ShowMessageNotify_default_instance_);_PingReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PingReq_default_instance_);_PingRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PingRsp_default_instance_);_GetOnlinePlayerListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetOnlinePlayerListReq_default_instance_);_GetOnlinePlayerListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetOnlinePlayerListRsp_default_instance_);_ServerTimeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerTimeNotify_default_instance_);_ServerLogNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerLogNotify_default_instance_);_ClientReconnectNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientReconnectNotify_default_instance_);_ClientStatData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientStatData_default_instance_);_ClientFpsStatusNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientFpsStatusNotify_default_instance_);_RobotPushPlayerDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RobotPushPlayerDataNotify_default_instance_);_ClientReportNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientReportNotify_default_instance_);_MsgParam_default_instance_.int_param_ = 0u;
  _MsgParam_default_instance_.flt_param_ = 0;
  _MsgParam_default_instance_.str_param_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022cmd/cmd_misc.proto\022\005proto\032\014define.prot"
      "o\"_\n\017KeepAliveNotify\"L\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\n\n\006CMD_ID\020\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\032\002\020\001\"{\n\tGmTalkReq\022\013\n\003msg\030\001"
      " \001(\t\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020\002\022\023\n\017E"
      "NET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023"
      "\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\207\001\n\tGmTalkRsp\022\017\n"
      "\007retcode\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022\016\n\006retmsg\030\003 "
      "\001(\t\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020\003\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020"
      "\001\"R\n\010MsgParam\022\023\n\tint_param\030\001 \001(\rH\000\022\023\n\tfl"
      "t_param\030\002 \001(\002H\000\022\023\n\tstr_param\030\003 \001(\tH\000B\007\n\005"
      "param\"\243\001\n\021ShowMessageNotify\022\037\n\006msg_id\030\001 "
      "\001(\0162\017.proto.SvrMsgId\022\037\n\006params\030\002 \003(\0132\017.p"
      "roto.MsgParam\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_"
      "ID\020\004\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\032\002\020\001\"\216\001\n\007PingReq\022\013\n\003seq\030\001 \001(\r\022\023\n\013"
      "client_time\030\002 \001(\r\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006"
      "CMD_ID\020\005\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\212\001\n"
      "\007PingRsp\022\017\n\007retcode\030\001 \001(\005\022\013\n\003seq\030\002 \001(\r\022\023"
      "\n\013client_time\030\003 \001(\r\"L\n\005CmdId\022\010\n\004NONE\020\000\022\n"
      "\n\006CMD_ID\020\006\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_"
      "IS_RELIABLE\020\001\032\002\020\001\"{\n\026GetOnlinePlayerList"
      "Req\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020\010\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n"
      "\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\252\001\n\026GetOnlinePlay"
      "erListRsp\022\017\n\007retcode\030\001 \001(\005\0221\n\020player_inf"
      "o_list\030\002 \003(\0132\027.proto.OnlinePlayerInfo\"L\n"
      "\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020\t\022\023\n\017ENET_CHA"
      "NNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"u\n\020S"
      "erverTimeNotify\022\023\n\013server_time\030\001 \001(\004\"L\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020\n\022\023\n\017ENET_CHAN"
      "NEL_ID\020\001\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\305\001\n\017S"
      "erverLogNotify\022&\n\010log_type\030\001 \001(\0162\024.proto"
      ".ServerLogType\022(\n\tlog_level\030\002 \001(\0162\025.prot"
      "o.ServerLogLevel\022\022\n\nserver_log\030\003 \001(\t\"L\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020\013\022\023\n\017ENET_CHAN"
      "NEL_ID\020\001\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\223\001\n\025C"
      "lientReconnectNotify\022,\n\006reason\030\001 \001(\0162\034.p"
      "roto.ClientReconnectReason\"L\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\n\n\006CMD_ID\020\014\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"N\n\016ClientStatDa"
      "ta\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\013\n\003f"
      "ps\030\004 \001(\002\022\016\n\006memory\030\005 \001(\002\"\305\001\n\025ClientFpsSt"
      "atusNotify\022\022\n\nis_low_fps\030\001 \001(\010\022\013\n\003fps\030\002 "
      "\001(\002\022(\n\tstat_list\030\003 \003(\0132\025.proto.ClientSta"
      "tData\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020\r\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022"
      "\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"v\n\031RobotPushPla"
      "yerDataNotify\022\013\n\003bin\030\001 \001(\014\"L\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\n\n\006CMD_ID\020\016\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\242\001\n\022ClientRepor"
      "tNotify\022\023\n\013report_type\030\001 \001(\t\022\024\n\014report_v"
      "alue\030\002 \001(\t\"a\n\005CmdId\022\010\n\004NONE\020\000\022\n\n\006CMD_ID\020"
      "\017\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001*\200\001\n\010SvrMsg"
      "Id\022\017\n\013MSG_UNKNOWN\020\000\022\037\n\033MSG_BLOCK_REFRESH"
      "_COUNTDOWN\020\001\022\037\n\033MSG_AVATAR_REVIVE_BY_STA"
      "TUE\020\002\022!\n\035MSG_DAILY_TASK_REWARD_MAX_NUM\020\003"
      "*i\n\rServerLogType\022\023\n\017SERVER_LOG_NONE\020\000\022\026"
      "\n\022SERVER_LOG_ABILITY\020\001\022\024\n\020SERVER_LOG_LEV"
      "EL\020\002\022\025\n\021SERVER_LOG_ENTITY\020\003*y\n\016ServerLog"
      "Level\022\022\n\016LOG_LEVEL_NONE\020\000\022\023\n\017LOG_LEVEL_D"
      "EBUG\020\001\022\022\n\016LOG_LEVEL_INFO\020\002\022\025\n\021LOG_LEVEL_"
      "WARNING\020\003\022\023\n\017LOG_LEVEL_ERROR\020\004*R\n\025Client"
      "ReconnectReason\022\032\n\026CLIENT_RECONNNECT_NON"
      "E\020\000\022\035\n\031CLIENT_RECONNNECT_QUIT_MP\020\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2722);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_misc.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fmisc_2eproto

const ::google::protobuf::EnumDescriptor* KeepAliveNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[0];
}
bool KeepAliveNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const KeepAliveNotify_CmdId KeepAliveNotify::NONE;
const KeepAliveNotify_CmdId KeepAliveNotify::CMD_ID;
const KeepAliveNotify_CmdId KeepAliveNotify::ENET_CHANNEL_ID;
const KeepAliveNotify_CmdId KeepAliveNotify::ENET_IS_RELIABLE;
const KeepAliveNotify_CmdId KeepAliveNotify::CmdId_MIN;
const KeepAliveNotify_CmdId KeepAliveNotify::CmdId_MAX;
const int KeepAliveNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GmTalkReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[1];
}
bool GmTalkReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GmTalkReq_CmdId GmTalkReq::NONE;
const GmTalkReq_CmdId GmTalkReq::CMD_ID;
const GmTalkReq_CmdId GmTalkReq::ENET_CHANNEL_ID;
const GmTalkReq_CmdId GmTalkReq::ENET_IS_RELIABLE;
const GmTalkReq_CmdId GmTalkReq::IS_ALLOW_CLIENT;
const GmTalkReq_CmdId GmTalkReq::CmdId_MIN;
const GmTalkReq_CmdId GmTalkReq::CmdId_MAX;
const int GmTalkReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GmTalkRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[2];
}
bool GmTalkRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GmTalkRsp_CmdId GmTalkRsp::NONE;
const GmTalkRsp_CmdId GmTalkRsp::CMD_ID;
const GmTalkRsp_CmdId GmTalkRsp::ENET_CHANNEL_ID;
const GmTalkRsp_CmdId GmTalkRsp::ENET_IS_RELIABLE;
const GmTalkRsp_CmdId GmTalkRsp::CmdId_MIN;
const GmTalkRsp_CmdId GmTalkRsp::CmdId_MAX;
const int GmTalkRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ShowMessageNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[3];
}
bool ShowMessageNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ShowMessageNotify_CmdId ShowMessageNotify::NONE;
const ShowMessageNotify_CmdId ShowMessageNotify::CMD_ID;
const ShowMessageNotify_CmdId ShowMessageNotify::ENET_CHANNEL_ID;
const ShowMessageNotify_CmdId ShowMessageNotify::ENET_IS_RELIABLE;
const ShowMessageNotify_CmdId ShowMessageNotify::CmdId_MIN;
const ShowMessageNotify_CmdId ShowMessageNotify::CmdId_MAX;
const int ShowMessageNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PingReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[4];
}
bool PingReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PingReq_CmdId PingReq::NONE;
const PingReq_CmdId PingReq::CMD_ID;
const PingReq_CmdId PingReq::ENET_CHANNEL_ID;
const PingReq_CmdId PingReq::ENET_IS_RELIABLE;
const PingReq_CmdId PingReq::IS_ALLOW_CLIENT;
const PingReq_CmdId PingReq::CmdId_MIN;
const PingReq_CmdId PingReq::CmdId_MAX;
const int PingReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PingRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[5];
}
bool PingRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PingRsp_CmdId PingRsp::NONE;
const PingRsp_CmdId PingRsp::CMD_ID;
const PingRsp_CmdId PingRsp::ENET_CHANNEL_ID;
const PingRsp_CmdId PingRsp::ENET_IS_RELIABLE;
const PingRsp_CmdId PingRsp::CmdId_MIN;
const PingRsp_CmdId PingRsp::CmdId_MAX;
const int PingRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetOnlinePlayerListReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[6];
}
bool GetOnlinePlayerListReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetOnlinePlayerListReq_CmdId GetOnlinePlayerListReq::NONE;
const GetOnlinePlayerListReq_CmdId GetOnlinePlayerListReq::CMD_ID;
const GetOnlinePlayerListReq_CmdId GetOnlinePlayerListReq::ENET_CHANNEL_ID;
const GetOnlinePlayerListReq_CmdId GetOnlinePlayerListReq::ENET_IS_RELIABLE;
const GetOnlinePlayerListReq_CmdId GetOnlinePlayerListReq::IS_ALLOW_CLIENT;
const GetOnlinePlayerListReq_CmdId GetOnlinePlayerListReq::CmdId_MIN;
const GetOnlinePlayerListReq_CmdId GetOnlinePlayerListReq::CmdId_MAX;
const int GetOnlinePlayerListReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetOnlinePlayerListRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[7];
}
bool GetOnlinePlayerListRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 9:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetOnlinePlayerListRsp_CmdId GetOnlinePlayerListRsp::NONE;
const GetOnlinePlayerListRsp_CmdId GetOnlinePlayerListRsp::CMD_ID;
const GetOnlinePlayerListRsp_CmdId GetOnlinePlayerListRsp::ENET_CHANNEL_ID;
const GetOnlinePlayerListRsp_CmdId GetOnlinePlayerListRsp::ENET_IS_RELIABLE;
const GetOnlinePlayerListRsp_CmdId GetOnlinePlayerListRsp::CmdId_MIN;
const GetOnlinePlayerListRsp_CmdId GetOnlinePlayerListRsp::CmdId_MAX;
const int GetOnlinePlayerListRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ServerTimeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[8];
}
bool ServerTimeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 10:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerTimeNotify_CmdId ServerTimeNotify::NONE;
const ServerTimeNotify_CmdId ServerTimeNotify::CMD_ID;
const ServerTimeNotify_CmdId ServerTimeNotify::ENET_CHANNEL_ID;
const ServerTimeNotify_CmdId ServerTimeNotify::ENET_IS_RELIABLE;
const ServerTimeNotify_CmdId ServerTimeNotify::CmdId_MIN;
const ServerTimeNotify_CmdId ServerTimeNotify::CmdId_MAX;
const int ServerTimeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ServerLogNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[9];
}
bool ServerLogNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ServerLogNotify_CmdId ServerLogNotify::NONE;
const ServerLogNotify_CmdId ServerLogNotify::CMD_ID;
const ServerLogNotify_CmdId ServerLogNotify::ENET_CHANNEL_ID;
const ServerLogNotify_CmdId ServerLogNotify::ENET_IS_RELIABLE;
const ServerLogNotify_CmdId ServerLogNotify::CmdId_MIN;
const ServerLogNotify_CmdId ServerLogNotify::CmdId_MAX;
const int ServerLogNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientReconnectNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[10];
}
bool ClientReconnectNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientReconnectNotify_CmdId ClientReconnectNotify::NONE;
const ClientReconnectNotify_CmdId ClientReconnectNotify::CMD_ID;
const ClientReconnectNotify_CmdId ClientReconnectNotify::ENET_CHANNEL_ID;
const ClientReconnectNotify_CmdId ClientReconnectNotify::ENET_IS_RELIABLE;
const ClientReconnectNotify_CmdId ClientReconnectNotify::CmdId_MIN;
const ClientReconnectNotify_CmdId ClientReconnectNotify::CmdId_MAX;
const int ClientReconnectNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientFpsStatusNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[11];
}
bool ClientFpsStatusNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 13:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientFpsStatusNotify_CmdId ClientFpsStatusNotify::NONE;
const ClientFpsStatusNotify_CmdId ClientFpsStatusNotify::CMD_ID;
const ClientFpsStatusNotify_CmdId ClientFpsStatusNotify::ENET_CHANNEL_ID;
const ClientFpsStatusNotify_CmdId ClientFpsStatusNotify::ENET_IS_RELIABLE;
const ClientFpsStatusNotify_CmdId ClientFpsStatusNotify::IS_ALLOW_CLIENT;
const ClientFpsStatusNotify_CmdId ClientFpsStatusNotify::CmdId_MIN;
const ClientFpsStatusNotify_CmdId ClientFpsStatusNotify::CmdId_MAX;
const int ClientFpsStatusNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RobotPushPlayerDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[12];
}
bool RobotPushPlayerDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 14:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RobotPushPlayerDataNotify_CmdId RobotPushPlayerDataNotify::NONE;
const RobotPushPlayerDataNotify_CmdId RobotPushPlayerDataNotify::CMD_ID;
const RobotPushPlayerDataNotify_CmdId RobotPushPlayerDataNotify::ENET_CHANNEL_ID;
const RobotPushPlayerDataNotify_CmdId RobotPushPlayerDataNotify::ENET_IS_RELIABLE;
const RobotPushPlayerDataNotify_CmdId RobotPushPlayerDataNotify::CmdId_MIN;
const RobotPushPlayerDataNotify_CmdId RobotPushPlayerDataNotify::CmdId_MAX;
const int RobotPushPlayerDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientReportNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[13];
}
bool ClientReportNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientReportNotify_CmdId ClientReportNotify::NONE;
const ClientReportNotify_CmdId ClientReportNotify::CMD_ID;
const ClientReportNotify_CmdId ClientReportNotify::ENET_CHANNEL_ID;
const ClientReportNotify_CmdId ClientReportNotify::ENET_IS_RELIABLE;
const ClientReportNotify_CmdId ClientReportNotify::IS_ALLOW_CLIENT;
const ClientReportNotify_CmdId ClientReportNotify::CmdId_MIN;
const ClientReportNotify_CmdId ClientReportNotify::CmdId_MAX;
const int ClientReportNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SvrMsgId_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[14];
}
bool SvrMsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerLogType_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[15];
}
bool ServerLogType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServerLogLevel_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[16];
}
bool ServerLogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ClientReconnectReason_descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_enum_descriptors[17];
}
bool ClientReconnectReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeepAliveNotify::KeepAliveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.KeepAliveNotify)
}
KeepAliveNotify::KeepAliveNotify(const KeepAliveNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.KeepAliveNotify)
}

void KeepAliveNotify::SharedCtor() {
  _cached_size_ = 0;
}

KeepAliveNotify::~KeepAliveNotify() {
  // @@protoc_insertion_point(destructor:proto.KeepAliveNotify)
  SharedDtor();
}

void KeepAliveNotify::SharedDtor() {
}

void KeepAliveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeepAliveNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeepAliveNotify& KeepAliveNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

KeepAliveNotify* KeepAliveNotify::New(::google::protobuf::Arena* arena) const {
  KeepAliveNotify* n = new KeepAliveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeepAliveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool KeepAliveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.KeepAliveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.KeepAliveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.KeepAliveNotify)
  return false;
#undef DO_
}

void KeepAliveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.KeepAliveNotify)
}

::google::protobuf::uint8* KeepAliveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.KeepAliveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.KeepAliveNotify)
  return target;
}

size_t KeepAliveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.KeepAliveNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeepAliveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.KeepAliveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAliveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeepAliveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.KeepAliveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.KeepAliveNotify)
    MergeFrom(*source);
  }
}

void KeepAliveNotify::MergeFrom(const KeepAliveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.KeepAliveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void KeepAliveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.KeepAliveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAliveNotify::CopyFrom(const KeepAliveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.KeepAliveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAliveNotify::IsInitialized() const {
  return true;
}

void KeepAliveNotify::Swap(KeepAliveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeepAliveNotify::InternalSwap(KeepAliveNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeepAliveNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeepAliveNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmTalkReq::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmTalkReq::GmTalkReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GmTalkReq)
}
GmTalkReq::GmTalkReq(const GmTalkReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GmTalkReq)
}

void GmTalkReq::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GmTalkReq::~GmTalkReq() {
  // @@protoc_insertion_point(destructor:proto.GmTalkReq)
  SharedDtor();
}

void GmTalkReq::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GmTalkReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmTalkReq::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmTalkReq& GmTalkReq::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GmTalkReq* GmTalkReq::New(::google::protobuf::Arena* arena) const {
  GmTalkReq* n = new GmTalkReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmTalkReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GmTalkReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GmTalkReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GmTalkReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GmTalkReq.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GmTalkReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GmTalkReq)
  return false;
#undef DO_
}

void GmTalkReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GmTalkReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkReq.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GmTalkReq)
}

::google::protobuf::uint8* GmTalkReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GmTalkReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkReq.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GmTalkReq)
  return target;
}

size_t GmTalkReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GmTalkReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmTalkReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GmTalkReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GmTalkReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmTalkReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GmTalkReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GmTalkReq)
    MergeFrom(*source);
  }
}

void GmTalkReq::MergeFrom(const GmTalkReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GmTalkReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void GmTalkReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GmTalkReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmTalkReq::CopyFrom(const GmTalkReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GmTalkReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmTalkReq::IsInitialized() const {
  return true;
}

void GmTalkReq::Swap(GmTalkReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmTalkReq::InternalSwap(GmTalkReq* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmTalkReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmTalkReq

// string msg = 1;
void GmTalkReq::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GmTalkReq::msg() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkReq.msg)
  return msg_.GetNoArena();
}
void GmTalkReq::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GmTalkReq.msg)
}
#if LANG_CXX11
void GmTalkReq::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GmTalkReq.msg)
}
#endif
void GmTalkReq::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GmTalkReq.msg)
}
void GmTalkReq::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GmTalkReq.msg)
}
::std::string* GmTalkReq::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GmTalkReq.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GmTalkReq::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GmTalkReq.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GmTalkReq::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GmTalkReq.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GmTalkRsp::kRetcodeFieldNumber;
const int GmTalkRsp::kMsgFieldNumber;
const int GmTalkRsp::kRetmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GmTalkRsp::GmTalkRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GmTalkRsp)
}
GmTalkRsp::GmTalkRsp(const GmTalkRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.retmsg().size() > 0) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GmTalkRsp)
}

void GmTalkRsp::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _cached_size_ = 0;
}

GmTalkRsp::~GmTalkRsp() {
  // @@protoc_insertion_point(destructor:proto.GmTalkRsp)
  SharedDtor();
}

void GmTalkRsp::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GmTalkRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GmTalkRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GmTalkRsp& GmTalkRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GmTalkRsp* GmTalkRsp::New(::google::protobuf::Arena* arena) const {
  GmTalkRsp* n = new GmTalkRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GmTalkRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GmTalkRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GmTalkRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GmTalkRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GmTalkRsp.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string retmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->retmsg().data(), static_cast<int>(this->retmsg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GmTalkRsp.retmsg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GmTalkRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GmTalkRsp)
  return false;
#undef DO_
}

void GmTalkRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GmTalkRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkRsp.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // string retmsg = 3;
  if (this->retmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkRsp.retmsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->retmsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GmTalkRsp)
}

::google::protobuf::uint8* GmTalkRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GmTalkRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkRsp.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // string retmsg = 3;
  if (this->retmsg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->retmsg().data(), static_cast<int>(this->retmsg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GmTalkRsp.retmsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->retmsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GmTalkRsp)
  return target;
}

size_t GmTalkRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GmTalkRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string retmsg = 3;
  if (this->retmsg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retmsg());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GmTalkRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GmTalkRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GmTalkRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GmTalkRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GmTalkRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GmTalkRsp)
    MergeFrom(*source);
  }
}

void GmTalkRsp::MergeFrom(const GmTalkRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GmTalkRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.retmsg().size() > 0) {

    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GmTalkRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GmTalkRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GmTalkRsp::CopyFrom(const GmTalkRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GmTalkRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GmTalkRsp::IsInitialized() const {
  return true;
}

void GmTalkRsp::Swap(GmTalkRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GmTalkRsp::InternalSwap(GmTalkRsp* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  retmsg_.Swap(&other->retmsg_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GmTalkRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GmTalkRsp

// int32 retcode = 1;
void GmTalkRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GmTalkRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkRsp.retcode)
  return retcode_;
}
void GmTalkRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GmTalkRsp.retcode)
}

// string msg = 2;
void GmTalkRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GmTalkRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkRsp.msg)
  return msg_.GetNoArena();
}
void GmTalkRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GmTalkRsp.msg)
}
#if LANG_CXX11
void GmTalkRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GmTalkRsp.msg)
}
#endif
void GmTalkRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GmTalkRsp.msg)
}
void GmTalkRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GmTalkRsp.msg)
}
::std::string* GmTalkRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GmTalkRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GmTalkRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GmTalkRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GmTalkRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GmTalkRsp.msg)
}

// string retmsg = 3;
void GmTalkRsp::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GmTalkRsp::retmsg() const {
  // @@protoc_insertion_point(field_get:proto.GmTalkRsp.retmsg)
  return retmsg_.GetNoArena();
}
void GmTalkRsp::set_retmsg(const ::std::string& value) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GmTalkRsp.retmsg)
}
#if LANG_CXX11
void GmTalkRsp::set_retmsg(::std::string&& value) {
  
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GmTalkRsp.retmsg)
}
#endif
void GmTalkRsp::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GmTalkRsp.retmsg)
}
void GmTalkRsp::set_retmsg(const char* value, size_t size) {
  
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GmTalkRsp.retmsg)
}
::std::string* GmTalkRsp::mutable_retmsg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GmTalkRsp.retmsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GmTalkRsp::release_retmsg() {
  // @@protoc_insertion_point(field_release:proto.GmTalkRsp.retmsg)
  
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GmTalkRsp::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    
  } else {
    
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:proto.GmTalkRsp.retmsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgParam::kIntParamFieldNumber;
const int MsgParam::kFltParamFieldNumber;
const int MsgParam::kStrParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgParam::MsgParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MsgParam)
}
MsgParam::MsgParam(const MsgParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_param();
  switch (from.param_case()) {
    case kIntParam: {
      set_int_param(from.int_param());
      break;
    }
    case kFltParam: {
      set_flt_param(from.flt_param());
      break;
    }
    case kStrParam: {
      set_str_param(from.str_param());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.MsgParam)
}

void MsgParam::SharedCtor() {
  clear_has_param();
  _cached_size_ = 0;
}

MsgParam::~MsgParam() {
  // @@protoc_insertion_point(destructor:proto.MsgParam)
  SharedDtor();
}

void MsgParam::SharedDtor() {
  if (has_param()) {
    clear_param();
  }
}

void MsgParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgParam::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgParam& MsgParam::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgParam* MsgParam::New(::google::protobuf::Arena* arena) const {
  MsgParam* n = new MsgParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgParam::clear_param() {
// @@protoc_insertion_point(one_of_clear_start:proto.MsgParam)
  switch (param_case()) {
    case kIntParam: {
      // No need to clear
      break;
    }
    case kFltParam: {
      // No need to clear
      break;
    }
    case kStrParam: {
      param_.str_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAM_NOT_SET;
}


void MsgParam::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MsgParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_param();
  _internal_metadata_.Clear();
}

bool MsgParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MsgParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 int_param = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_param();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_.int_param_)));
          set_has_int_param();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float flt_param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          clear_param();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &param_.flt_param_)));
          set_has_flt_param();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string str_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str_param()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str_param().data(), static_cast<int>(this->str_param().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MsgParam.str_param"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MsgParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MsgParam)
  return false;
#undef DO_
}

void MsgParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MsgParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 int_param = 1;
  if (has_int_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->int_param(), output);
  }

  // float flt_param = 2;
  if (has_flt_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->flt_param(), output);
  }

  // string str_param = 3;
  if (has_str_param()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_param().data(), static_cast<int>(this->str_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MsgParam.str_param");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->str_param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MsgParam)
}

::google::protobuf::uint8* MsgParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MsgParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 int_param = 1;
  if (has_int_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->int_param(), target);
  }

  // float flt_param = 2;
  if (has_flt_param()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->flt_param(), target);
  }

  // string str_param = 3;
  if (has_str_param()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str_param().data(), static_cast<int>(this->str_param().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MsgParam.str_param");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->str_param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MsgParam)
  return target;
}

size_t MsgParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MsgParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (param_case()) {
    // uint32 int_param = 1;
    case kIntParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->int_param());
      break;
    }
    // float flt_param = 2;
    case kFltParam: {
      total_size += 1 + 4;
      break;
    }
    // string str_param = 3;
    case kStrParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str_param());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MsgParam)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MsgParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MsgParam)
    MergeFrom(*source);
  }
}

void MsgParam::MergeFrom(const MsgParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MsgParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.param_case()) {
    case kIntParam: {
      set_int_param(from.int_param());
      break;
    }
    case kFltParam: {
      set_flt_param(from.flt_param());
      break;
    }
    case kStrParam: {
      set_str_param(from.str_param());
      break;
    }
    case PARAM_NOT_SET: {
      break;
    }
  }
}

void MsgParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MsgParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgParam::CopyFrom(const MsgParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MsgParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgParam::IsInitialized() const {
  return true;
}

void MsgParam::Swap(MsgParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgParam::InternalSwap(MsgParam* other) {
  using std::swap;
  swap(param_, other->param_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgParam::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgParam

// uint32 int_param = 1;
bool MsgParam::has_int_param() const {
  return param_case() == kIntParam;
}
void MsgParam::set_has_int_param() {
  _oneof_case_[0] = kIntParam;
}
void MsgParam::clear_int_param() {
  if (has_int_param()) {
    param_.int_param_ = 0u;
    clear_has_param();
  }
}
::google::protobuf::uint32 MsgParam::int_param() const {
  // @@protoc_insertion_point(field_get:proto.MsgParam.int_param)
  if (has_int_param()) {
    return param_.int_param_;
  }
  return 0u;
}
void MsgParam::set_int_param(::google::protobuf::uint32 value) {
  if (!has_int_param()) {
    clear_param();
    set_has_int_param();
  }
  param_.int_param_ = value;
  // @@protoc_insertion_point(field_set:proto.MsgParam.int_param)
}

// float flt_param = 2;
bool MsgParam::has_flt_param() const {
  return param_case() == kFltParam;
}
void MsgParam::set_has_flt_param() {
  _oneof_case_[0] = kFltParam;
}
void MsgParam::clear_flt_param() {
  if (has_flt_param()) {
    param_.flt_param_ = 0;
    clear_has_param();
  }
}
float MsgParam::flt_param() const {
  // @@protoc_insertion_point(field_get:proto.MsgParam.flt_param)
  if (has_flt_param()) {
    return param_.flt_param_;
  }
  return 0;
}
void MsgParam::set_flt_param(float value) {
  if (!has_flt_param()) {
    clear_param();
    set_has_flt_param();
  }
  param_.flt_param_ = value;
  // @@protoc_insertion_point(field_set:proto.MsgParam.flt_param)
}

// string str_param = 3;
bool MsgParam::has_str_param() const {
  return param_case() == kStrParam;
}
void MsgParam::set_has_str_param() {
  _oneof_case_[0] = kStrParam;
}
void MsgParam::clear_str_param() {
  if (has_str_param()) {
    param_.str_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_param();
  }
}
const ::std::string& MsgParam::str_param() const {
  // @@protoc_insertion_point(field_get:proto.MsgParam.str_param)
  if (has_str_param()) {
    return param_.str_param_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void MsgParam::set_str_param(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MsgParam.str_param)
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  param_.str_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MsgParam.str_param)
}
#if LANG_CXX11
void MsgParam::set_str_param(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MsgParam.str_param)
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  param_.str_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MsgParam.str_param)
}
#endif
void MsgParam::set_str_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  param_.str_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MsgParam.str_param)
}
void MsgParam::set_str_param(const char* value, size_t size) {
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  param_.str_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MsgParam.str_param)
}
::std::string* MsgParam::mutable_str_param() {
  if (!has_str_param()) {
    clear_param();
    set_has_str_param();
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.MsgParam.str_param)
  return param_.str_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgParam::release_str_param() {
  // @@protoc_insertion_point(field_release:proto.MsgParam.str_param)
  if (has_str_param()) {
    clear_has_param();
    return param_.str_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void MsgParam::set_allocated_str_param(::std::string* str_param) {
  if (!has_str_param()) {
    param_.str_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_param();
  if (str_param != NULL) {
    set_has_str_param();
    param_.str_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        str_param);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MsgParam.str_param)
}

bool MsgParam::has_param() const {
  return param_case() != PARAM_NOT_SET;
}
void MsgParam::clear_has_param() {
  _oneof_case_[0] = PARAM_NOT_SET;
}
MsgParam::ParamCase MsgParam::param_case() const {
  return MsgParam::ParamCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShowMessageNotify::kMsgIdFieldNumber;
const int ShowMessageNotify::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShowMessageNotify::ShowMessageNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ShowMessageNotify)
}
ShowMessageNotify::ShowMessageNotify(const ShowMessageNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ShowMessageNotify)
}

void ShowMessageNotify::SharedCtor() {
  msg_id_ = 0;
  _cached_size_ = 0;
}

ShowMessageNotify::~ShowMessageNotify() {
  // @@protoc_insertion_point(destructor:proto.ShowMessageNotify)
  SharedDtor();
}

void ShowMessageNotify::SharedDtor() {
}

void ShowMessageNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShowMessageNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShowMessageNotify& ShowMessageNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShowMessageNotify* ShowMessageNotify::New(::google::protobuf::Arena* arena) const {
  ShowMessageNotify* n = new ShowMessageNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShowMessageNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ShowMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  params_.Clear();
  msg_id_ = 0;
  _internal_metadata_.Clear();
}

bool ShowMessageNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ShowMessageNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.SvrMsgId msg_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_id(static_cast< ::proto::SvrMsgId >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.MsgParam params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ShowMessageNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ShowMessageNotify)
  return false;
#undef DO_
}

void ShowMessageNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ShowMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.SvrMsgId msg_id = 1;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_id(), output);
  }

  // repeated .proto.MsgParam params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->params(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ShowMessageNotify)
}

::google::protobuf::uint8* ShowMessageNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ShowMessageNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.SvrMsgId msg_id = 1;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_id(), target);
  }

  // repeated .proto.MsgParam params = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->params(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ShowMessageNotify)
  return target;
}

size_t ShowMessageNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ShowMessageNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MsgParam params = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(static_cast<int>(i)));
    }
  }

  // .proto.SvrMsgId msg_id = 1;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShowMessageNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ShowMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ShowMessageNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShowMessageNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ShowMessageNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ShowMessageNotify)
    MergeFrom(*source);
  }
}

void ShowMessageNotify::MergeFrom(const ShowMessageNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ShowMessageNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void ShowMessageNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ShowMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShowMessageNotify::CopyFrom(const ShowMessageNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ShowMessageNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShowMessageNotify::IsInitialized() const {
  return true;
}

void ShowMessageNotify::Swap(ShowMessageNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShowMessageNotify::InternalSwap(ShowMessageNotify* other) {
  using std::swap;
  params_.InternalSwap(&other->params_);
  swap(msg_id_, other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShowMessageNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShowMessageNotify

// .proto.SvrMsgId msg_id = 1;
void ShowMessageNotify::clear_msg_id() {
  msg_id_ = 0;
}
::proto::SvrMsgId ShowMessageNotify::msg_id() const {
  // @@protoc_insertion_point(field_get:proto.ShowMessageNotify.msg_id)
  return static_cast< ::proto::SvrMsgId >(msg_id_);
}
void ShowMessageNotify::set_msg_id(::proto::SvrMsgId value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ShowMessageNotify.msg_id)
}

// repeated .proto.MsgParam params = 2;
int ShowMessageNotify::params_size() const {
  return params_.size();
}
void ShowMessageNotify::clear_params() {
  params_.Clear();
}
const ::proto::MsgParam& ShowMessageNotify::params(int index) const {
  // @@protoc_insertion_point(field_get:proto.ShowMessageNotify.params)
  return params_.Get(index);
}
::proto::MsgParam* ShowMessageNotify::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ShowMessageNotify.params)
  return params_.Mutable(index);
}
::proto::MsgParam* ShowMessageNotify::add_params() {
  // @@protoc_insertion_point(field_add:proto.ShowMessageNotify.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MsgParam >*
ShowMessageNotify::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:proto.ShowMessageNotify.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MsgParam >&
ShowMessageNotify::params() const {
  // @@protoc_insertion_point(field_list:proto.ShowMessageNotify.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingReq::kSeqFieldNumber;
const int PingReq::kClientTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingReq::PingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PingReq)
}
PingReq::PingReq(const PingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seq_, &from.seq_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_time_) -
    reinterpret_cast<char*>(&seq_)) + sizeof(client_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PingReq)
}

void PingReq::SharedCtor() {
  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_time_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(client_time_));
  _cached_size_ = 0;
}

PingReq::~PingReq() {
  // @@protoc_insertion_point(destructor:proto.PingReq)
  SharedDtor();
}

void PingReq::SharedDtor() {
}

void PingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingReq::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingReq& PingReq::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PingReq* PingReq::New(::google::protobuf::Arena* arena) const {
  PingReq* n = new PingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_time_) -
      reinterpret_cast<char*>(&seq_)) + sizeof(client_time_));
  _internal_metadata_.Clear();
}

bool PingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seq = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PingReq)
  return false;
#undef DO_
}

void PingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq = 1;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq(), output);
  }

  // uint32 client_time = 2;
  if (this->client_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PingReq)
}

::google::protobuf::uint8* PingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seq = 1;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seq(), target);
  }

  // uint32 client_time = 2;
  if (this->client_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PingReq)
  return target;
}

size_t PingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PingReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 seq = 1;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq());
  }

  // uint32 client_time = 2;
  if (this->client_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PingReq)
    MergeFrom(*source);
  }
}

void PingReq::MergeFrom(const PingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.client_time() != 0) {
    set_client_time(from.client_time());
  }
}

void PingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingReq::CopyFrom(const PingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingReq::IsInitialized() const {
  return true;
}

void PingReq::Swap(PingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingReq::InternalSwap(PingReq* other) {
  using std::swap;
  swap(seq_, other->seq_);
  swap(client_time_, other->client_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingReq

// uint32 seq = 1;
void PingReq::clear_seq() {
  seq_ = 0u;
}
::google::protobuf::uint32 PingReq::seq() const {
  // @@protoc_insertion_point(field_get:proto.PingReq.seq)
  return seq_;
}
void PingReq::set_seq(::google::protobuf::uint32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:proto.PingReq.seq)
}

// uint32 client_time = 2;
void PingReq::clear_client_time() {
  client_time_ = 0u;
}
::google::protobuf::uint32 PingReq::client_time() const {
  // @@protoc_insertion_point(field_get:proto.PingReq.client_time)
  return client_time_;
}
void PingReq::set_client_time(::google::protobuf::uint32 value) {
  
  client_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PingReq.client_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingRsp::kRetcodeFieldNumber;
const int PingRsp::kSeqFieldNumber;
const int PingRsp::kClientTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingRsp::PingRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PingRsp)
}
PingRsp::PingRsp(const PingRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_time_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(client_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PingRsp)
}

void PingRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_time_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(client_time_));
  _cached_size_ = 0;
}

PingRsp::~PingRsp() {
  // @@protoc_insertion_point(destructor:proto.PingRsp)
  SharedDtor();
}

void PingRsp::SharedDtor() {
}

void PingRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingRsp& PingRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PingRsp* PingRsp::New(::google::protobuf::Arena* arena) const {
  PingRsp* n = new PingRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_time_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(client_time_));
  _internal_metadata_.Clear();
}

bool PingRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PingRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PingRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PingRsp)
  return false;
#undef DO_
}

void PingRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 seq = 2;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seq(), output);
  }

  // uint32 client_time = 3;
  if (this->client_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->client_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PingRsp)
}

::google::protobuf::uint8* PingRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PingRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 seq = 2;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seq(), target);
  }

  // uint32 client_time = 3;
  if (this->client_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->client_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PingRsp)
  return target;
}

size_t PingRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PingRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 seq = 2;
  if (this->seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seq());
  }

  // uint32 client_time = 3;
  if (this->client_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PingRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PingRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PingRsp)
    MergeFrom(*source);
  }
}

void PingRsp::MergeFrom(const PingRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PingRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.client_time() != 0) {
    set_client_time(from.client_time());
  }
}

void PingRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingRsp::CopyFrom(const PingRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PingRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingRsp::IsInitialized() const {
  return true;
}

void PingRsp::Swap(PingRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingRsp::InternalSwap(PingRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(seq_, other->seq_);
  swap(client_time_, other->client_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingRsp

// int32 retcode = 1;
void PingRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PingRsp.retcode)
  return retcode_;
}
void PingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PingRsp.retcode)
}

// uint32 seq = 2;
void PingRsp::clear_seq() {
  seq_ = 0u;
}
::google::protobuf::uint32 PingRsp::seq() const {
  // @@protoc_insertion_point(field_get:proto.PingRsp.seq)
  return seq_;
}
void PingRsp::set_seq(::google::protobuf::uint32 value) {
  
  seq_ = value;
  // @@protoc_insertion_point(field_set:proto.PingRsp.seq)
}

// uint32 client_time = 3;
void PingRsp::clear_client_time() {
  client_time_ = 0u;
}
::google::protobuf::uint32 PingRsp::client_time() const {
  // @@protoc_insertion_point(field_get:proto.PingRsp.client_time)
  return client_time_;
}
void PingRsp::set_client_time(::google::protobuf::uint32 value) {
  
  client_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PingRsp.client_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlinePlayerListReq::GetOnlinePlayerListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetOnlinePlayerListReq)
}
GetOnlinePlayerListReq::GetOnlinePlayerListReq(const GetOnlinePlayerListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetOnlinePlayerListReq)
}

void GetOnlinePlayerListReq::SharedCtor() {
  _cached_size_ = 0;
}

GetOnlinePlayerListReq::~GetOnlinePlayerListReq() {
  // @@protoc_insertion_point(destructor:proto.GetOnlinePlayerListReq)
  SharedDtor();
}

void GetOnlinePlayerListReq::SharedDtor() {
}

void GetOnlinePlayerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlinePlayerListReq::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOnlinePlayerListReq& GetOnlinePlayerListReq::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlinePlayerListReq* GetOnlinePlayerListReq::New(::google::protobuf::Arena* arena) const {
  GetOnlinePlayerListReq* n = new GetOnlinePlayerListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlinePlayerListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetOnlinePlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetOnlinePlayerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetOnlinePlayerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetOnlinePlayerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetOnlinePlayerListReq)
  return false;
#undef DO_
}

void GetOnlinePlayerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetOnlinePlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetOnlinePlayerListReq)
}

::google::protobuf::uint8* GetOnlinePlayerListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetOnlinePlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetOnlinePlayerListReq)
  return target;
}

size_t GetOnlinePlayerListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetOnlinePlayerListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlinePlayerListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetOnlinePlayerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlinePlayerListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlinePlayerListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetOnlinePlayerListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetOnlinePlayerListReq)
    MergeFrom(*source);
  }
}

void GetOnlinePlayerListReq::MergeFrom(const GetOnlinePlayerListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetOnlinePlayerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetOnlinePlayerListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetOnlinePlayerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlinePlayerListReq::CopyFrom(const GetOnlinePlayerListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetOnlinePlayerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlinePlayerListReq::IsInitialized() const {
  return true;
}

void GetOnlinePlayerListReq::Swap(GetOnlinePlayerListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlinePlayerListReq::InternalSwap(GetOnlinePlayerListReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlinePlayerListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlinePlayerListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOnlinePlayerListRsp::kRetcodeFieldNumber;
const int GetOnlinePlayerListRsp::kPlayerInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOnlinePlayerListRsp::GetOnlinePlayerListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetOnlinePlayerListRsp)
}
GetOnlinePlayerListRsp::GetOnlinePlayerListRsp(const GetOnlinePlayerListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_info_list_(from.player_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetOnlinePlayerListRsp)
}

void GetOnlinePlayerListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetOnlinePlayerListRsp::~GetOnlinePlayerListRsp() {
  // @@protoc_insertion_point(destructor:proto.GetOnlinePlayerListRsp)
  SharedDtor();
}

void GetOnlinePlayerListRsp::SharedDtor() {
}

void GetOnlinePlayerListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOnlinePlayerListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOnlinePlayerListRsp& GetOnlinePlayerListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOnlinePlayerListRsp* GetOnlinePlayerListRsp::New(::google::protobuf::Arena* arena) const {
  GetOnlinePlayerListRsp* n = new GetOnlinePlayerListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOnlinePlayerListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetOnlinePlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_info_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetOnlinePlayerListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetOnlinePlayerListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.OnlinePlayerInfo player_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetOnlinePlayerListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetOnlinePlayerListRsp)
  return false;
#undef DO_
}

void GetOnlinePlayerListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetOnlinePlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.OnlinePlayerInfo player_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetOnlinePlayerListRsp)
}

::google::protobuf::uint8* GetOnlinePlayerListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetOnlinePlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.OnlinePlayerInfo player_info_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->player_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetOnlinePlayerListRsp)
  return target;
}

size_t GetOnlinePlayerListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetOnlinePlayerListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.OnlinePlayerInfo player_info_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->player_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_info_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOnlinePlayerListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetOnlinePlayerListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOnlinePlayerListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOnlinePlayerListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetOnlinePlayerListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetOnlinePlayerListRsp)
    MergeFrom(*source);
  }
}

void GetOnlinePlayerListRsp::MergeFrom(const GetOnlinePlayerListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetOnlinePlayerListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_info_list_.MergeFrom(from.player_info_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetOnlinePlayerListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetOnlinePlayerListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOnlinePlayerListRsp::CopyFrom(const GetOnlinePlayerListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetOnlinePlayerListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOnlinePlayerListRsp::IsInitialized() const {
  return true;
}

void GetOnlinePlayerListRsp::Swap(GetOnlinePlayerListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOnlinePlayerListRsp::InternalSwap(GetOnlinePlayerListRsp* other) {
  using std::swap;
  player_info_list_.InternalSwap(&other->player_info_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOnlinePlayerListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOnlinePlayerListRsp

// int32 retcode = 1;
void GetOnlinePlayerListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetOnlinePlayerListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerListRsp.retcode)
  return retcode_;
}
void GetOnlinePlayerListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOnlinePlayerListRsp.retcode)
}

// repeated .proto.OnlinePlayerInfo player_info_list = 2;
int GetOnlinePlayerListRsp::player_info_list_size() const {
  return player_info_list_.size();
}
void GetOnlinePlayerListRsp::clear_player_info_list() {
  player_info_list_.Clear();
}
const ::proto::OnlinePlayerInfo& GetOnlinePlayerListRsp::player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetOnlinePlayerListRsp.player_info_list)
  return player_info_list_.Get(index);
}
::proto::OnlinePlayerInfo* GetOnlinePlayerListRsp::mutable_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetOnlinePlayerListRsp.player_info_list)
  return player_info_list_.Mutable(index);
}
::proto::OnlinePlayerInfo* GetOnlinePlayerListRsp::add_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetOnlinePlayerListRsp.player_info_list)
  return player_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >*
GetOnlinePlayerListRsp::mutable_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetOnlinePlayerListRsp.player_info_list)
  return &player_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >&
GetOnlinePlayerListRsp::player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetOnlinePlayerListRsp.player_info_list)
  return player_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerTimeNotify::kServerTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerTimeNotify::ServerTimeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerTimeNotify)
}
ServerTimeNotify::ServerTimeNotify(const ServerTimeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_time_ = from.server_time_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerTimeNotify)
}

void ServerTimeNotify::SharedCtor() {
  server_time_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ServerTimeNotify::~ServerTimeNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerTimeNotify)
  SharedDtor();
}

void ServerTimeNotify::SharedDtor() {
}

void ServerTimeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerTimeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerTimeNotify& ServerTimeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerTimeNotify* ServerTimeNotify::New(::google::protobuf::Arena* arena) const {
  ServerTimeNotify* n = new ServerTimeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerTimeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ServerTimeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerTimeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 server_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &server_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerTimeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerTimeNotify)
  return false;
#undef DO_
}

void ServerTimeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->server_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerTimeNotify)
}

::google::protobuf::uint8* ServerTimeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->server_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerTimeNotify)
  return target;
}

size_t ServerTimeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerTimeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 server_time = 1;
  if (this->server_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->server_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerTimeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerTimeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerTimeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerTimeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerTimeNotify)
    MergeFrom(*source);
  }
}

void ServerTimeNotify::MergeFrom(const ServerTimeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_time() != 0) {
    set_server_time(from.server_time());
  }
}

void ServerTimeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerTimeNotify::CopyFrom(const ServerTimeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerTimeNotify::IsInitialized() const {
  return true;
}

void ServerTimeNotify::Swap(ServerTimeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerTimeNotify::InternalSwap(ServerTimeNotify* other) {
  using std::swap;
  swap(server_time_, other->server_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerTimeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerTimeNotify

// uint64 server_time = 1;
void ServerTimeNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerTimeNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerTimeNotify.server_time)
  return server_time_;
}
void ServerTimeNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerTimeNotify.server_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerLogNotify::kLogTypeFieldNumber;
const int ServerLogNotify::kLogLevelFieldNumber;
const int ServerLogNotify::kServerLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerLogNotify::ServerLogNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerLogNotify)
}
ServerLogNotify::ServerLogNotify(const ServerLogNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_log().size() > 0) {
    server_log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_log_);
  }
  ::memcpy(&log_type_, &from.log_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&log_level_) -
    reinterpret_cast<char*>(&log_type_)) + sizeof(log_level_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerLogNotify)
}

void ServerLogNotify::SharedCtor() {
  server_log_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&log_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_level_) -
      reinterpret_cast<char*>(&log_type_)) + sizeof(log_level_));
  _cached_size_ = 0;
}

ServerLogNotify::~ServerLogNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerLogNotify)
  SharedDtor();
}

void ServerLogNotify::SharedDtor() {
  server_log_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerLogNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerLogNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerLogNotify& ServerLogNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerLogNotify* ServerLogNotify::New(::google::protobuf::Arena* arena) const {
  ServerLogNotify* n = new ServerLogNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerLogNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerLogNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&log_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_level_) -
      reinterpret_cast<char*>(&log_type_)) + sizeof(log_level_));
  _internal_metadata_.Clear();
}

bool ServerLogNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerLogNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ServerLogType log_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_log_type(static_cast< ::proto::ServerLogType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ServerLogLevel log_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_log_level(static_cast< ::proto::ServerLogLevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string server_log = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_server_log()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->server_log().data(), static_cast<int>(this->server_log().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ServerLogNotify.server_log"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerLogNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerLogNotify)
  return false;
#undef DO_
}

void ServerLogNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerLogNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ServerLogType log_type = 1;
  if (this->log_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->log_type(), output);
  }

  // .proto.ServerLogLevel log_level = 2;
  if (this->log_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->log_level(), output);
  }

  // string server_log = 3;
  if (this->server_log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_log().data(), static_cast<int>(this->server_log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerLogNotify.server_log");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->server_log(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerLogNotify)
}

::google::protobuf::uint8* ServerLogNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerLogNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ServerLogType log_type = 1;
  if (this->log_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->log_type(), target);
  }

  // .proto.ServerLogLevel log_level = 2;
  if (this->log_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->log_level(), target);
  }

  // string server_log = 3;
  if (this->server_log().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->server_log().data(), static_cast<int>(this->server_log().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerLogNotify.server_log");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->server_log(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerLogNotify)
  return target;
}

size_t ServerLogNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerLogNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string server_log = 3;
  if (this->server_log().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->server_log());
  }

  // .proto.ServerLogType log_type = 1;
  if (this->log_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_type());
  }

  // .proto.ServerLogLevel log_level = 2;
  if (this->log_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerLogNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerLogNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerLogNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerLogNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerLogNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerLogNotify)
    MergeFrom(*source);
  }
}

void ServerLogNotify::MergeFrom(const ServerLogNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerLogNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_log().size() > 0) {

    server_log_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_log_);
  }
  if (from.log_type() != 0) {
    set_log_type(from.log_type());
  }
  if (from.log_level() != 0) {
    set_log_level(from.log_level());
  }
}

void ServerLogNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerLogNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerLogNotify::CopyFrom(const ServerLogNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerLogNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerLogNotify::IsInitialized() const {
  return true;
}

void ServerLogNotify::Swap(ServerLogNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerLogNotify::InternalSwap(ServerLogNotify* other) {
  using std::swap;
  server_log_.Swap(&other->server_log_);
  swap(log_type_, other->log_type_);
  swap(log_level_, other->log_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerLogNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerLogNotify

// .proto.ServerLogType log_type = 1;
void ServerLogNotify::clear_log_type() {
  log_type_ = 0;
}
::proto::ServerLogType ServerLogNotify::log_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerLogNotify.log_type)
  return static_cast< ::proto::ServerLogType >(log_type_);
}
void ServerLogNotify::set_log_type(::proto::ServerLogType value) {
  
  log_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerLogNotify.log_type)
}

// .proto.ServerLogLevel log_level = 2;
void ServerLogNotify::clear_log_level() {
  log_level_ = 0;
}
::proto::ServerLogLevel ServerLogNotify::log_level() const {
  // @@protoc_insertion_point(field_get:proto.ServerLogNotify.log_level)
  return static_cast< ::proto::ServerLogLevel >(log_level_);
}
void ServerLogNotify::set_log_level(::proto::ServerLogLevel value) {
  
  log_level_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerLogNotify.log_level)
}

// string server_log = 3;
void ServerLogNotify::clear_server_log() {
  server_log_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerLogNotify::server_log() const {
  // @@protoc_insertion_point(field_get:proto.ServerLogNotify.server_log)
  return server_log_.GetNoArena();
}
void ServerLogNotify::set_server_log(const ::std::string& value) {
  
  server_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ServerLogNotify.server_log)
}
#if LANG_CXX11
void ServerLogNotify::set_server_log(::std::string&& value) {
  
  server_log_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ServerLogNotify.server_log)
}
#endif
void ServerLogNotify::set_server_log(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ServerLogNotify.server_log)
}
void ServerLogNotify::set_server_log(const char* value, size_t size) {
  
  server_log_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ServerLogNotify.server_log)
}
::std::string* ServerLogNotify::mutable_server_log() {
  
  // @@protoc_insertion_point(field_mutable:proto.ServerLogNotify.server_log)
  return server_log_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerLogNotify::release_server_log() {
  // @@protoc_insertion_point(field_release:proto.ServerLogNotify.server_log)
  
  return server_log_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerLogNotify::set_allocated_server_log(::std::string* server_log) {
  if (server_log != NULL) {
    
  } else {
    
  }
  server_log_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_log);
  // @@protoc_insertion_point(field_set_allocated:proto.ServerLogNotify.server_log)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientReconnectNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientReconnectNotify::ClientReconnectNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientReconnectNotify)
}
ClientReconnectNotify::ClientReconnectNotify(const ClientReconnectNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:proto.ClientReconnectNotify)
}

void ClientReconnectNotify::SharedCtor() {
  reason_ = 0;
  _cached_size_ = 0;
}

ClientReconnectNotify::~ClientReconnectNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientReconnectNotify)
  SharedDtor();
}

void ClientReconnectNotify::SharedDtor() {
}

void ClientReconnectNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReconnectNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientReconnectNotify& ClientReconnectNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientReconnectNotify* ClientReconnectNotify::New(::google::protobuf::Arena* arena) const {
  ClientReconnectNotify* n = new ClientReconnectNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientReconnectNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientReconnectNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0;
  _internal_metadata_.Clear();
}

bool ClientReconnectNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientReconnectNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ClientReconnectReason reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::ClientReconnectReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientReconnectNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientReconnectNotify)
  return false;
#undef DO_
}

void ClientReconnectNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientReconnectNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ClientReconnectReason reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientReconnectNotify)
}

::google::protobuf::uint8* ClientReconnectNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientReconnectNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ClientReconnectReason reason = 1;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientReconnectNotify)
  return target;
}

size_t ClientReconnectNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientReconnectNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ClientReconnectReason reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReconnectNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientReconnectNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientReconnectNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientReconnectNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientReconnectNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientReconnectNotify)
    MergeFrom(*source);
  }
}

void ClientReconnectNotify::MergeFrom(const ClientReconnectNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientReconnectNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void ClientReconnectNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientReconnectNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReconnectNotify::CopyFrom(const ClientReconnectNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientReconnectNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReconnectNotify::IsInitialized() const {
  return true;
}

void ClientReconnectNotify::Swap(ClientReconnectNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientReconnectNotify::InternalSwap(ClientReconnectNotify* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientReconnectNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientReconnectNotify

// .proto.ClientReconnectReason reason = 1;
void ClientReconnectNotify::clear_reason() {
  reason_ = 0;
}
::proto::ClientReconnectReason ClientReconnectNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.ClientReconnectNotify.reason)
  return static_cast< ::proto::ClientReconnectReason >(reason_);
}
void ClientReconnectNotify::set_reason(::proto::ClientReconnectReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientReconnectNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientStatData::kXFieldNumber;
const int ClientStatData::kYFieldNumber;
const int ClientStatData::kZFieldNumber;
const int ClientStatData::kFpsFieldNumber;
const int ClientStatData::kMemoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientStatData::ClientStatData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientStatData)
}
ClientStatData::ClientStatData(const ClientStatData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&memory_) -
    reinterpret_cast<char*>(&x_)) + sizeof(memory_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientStatData)
}

void ClientStatData::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_) -
      reinterpret_cast<char*>(&x_)) + sizeof(memory_));
  _cached_size_ = 0;
}

ClientStatData::~ClientStatData() {
  // @@protoc_insertion_point(destructor:proto.ClientStatData)
  SharedDtor();
}

void ClientStatData::SharedDtor() {
}

void ClientStatData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientStatData::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientStatData& ClientStatData::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientStatData* ClientStatData::New(::google::protobuf::Arena* arena) const {
  ClientStatData* n = new ClientStatData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientStatData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientStatData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memory_) -
      reinterpret_cast<char*>(&x_)) + sizeof(memory_));
  _internal_metadata_.Clear();
}

bool ClientStatData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientStatData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fps = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float memory = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &memory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientStatData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientStatData)
  return false;
#undef DO_
}

void ClientStatData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientStatData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float fps = 4;
  if (this->fps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->fps(), output);
  }

  // float memory = 5;
  if (this->memory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->memory(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientStatData)
}

::google::protobuf::uint8* ClientStatData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientStatData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float fps = 4;
  if (this->fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->fps(), target);
  }

  // float memory = 5;
  if (this->memory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->memory(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientStatData)
  return target;
}

size_t ClientStatData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientStatData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float fps = 4;
  if (this->fps() != 0) {
    total_size += 1 + 4;
  }

  // float memory = 5;
  if (this->memory() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientStatData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientStatData)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientStatData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientStatData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientStatData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientStatData)
    MergeFrom(*source);
  }
}

void ClientStatData::MergeFrom(const ClientStatData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientStatData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.fps() != 0) {
    set_fps(from.fps());
  }
  if (from.memory() != 0) {
    set_memory(from.memory());
  }
}

void ClientStatData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientStatData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientStatData::CopyFrom(const ClientStatData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientStatData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientStatData::IsInitialized() const {
  return true;
}

void ClientStatData::Swap(ClientStatData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientStatData::InternalSwap(ClientStatData* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(fps_, other->fps_);
  swap(memory_, other->memory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientStatData::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientStatData

// float x = 1;
void ClientStatData::clear_x() {
  x_ = 0;
}
float ClientStatData::x() const {
  // @@protoc_insertion_point(field_get:proto.ClientStatData.x)
  return x_;
}
void ClientStatData::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientStatData.x)
}

// float y = 2;
void ClientStatData::clear_y() {
  y_ = 0;
}
float ClientStatData::y() const {
  // @@protoc_insertion_point(field_get:proto.ClientStatData.y)
  return y_;
}
void ClientStatData::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientStatData.y)
}

// float z = 3;
void ClientStatData::clear_z() {
  z_ = 0;
}
float ClientStatData::z() const {
  // @@protoc_insertion_point(field_get:proto.ClientStatData.z)
  return z_;
}
void ClientStatData::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientStatData.z)
}

// float fps = 4;
void ClientStatData::clear_fps() {
  fps_ = 0;
}
float ClientStatData::fps() const {
  // @@protoc_insertion_point(field_get:proto.ClientStatData.fps)
  return fps_;
}
void ClientStatData::set_fps(float value) {
  
  fps_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientStatData.fps)
}

// float memory = 5;
void ClientStatData::clear_memory() {
  memory_ = 0;
}
float ClientStatData::memory() const {
  // @@protoc_insertion_point(field_get:proto.ClientStatData.memory)
  return memory_;
}
void ClientStatData::set_memory(float value) {
  
  memory_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientStatData.memory)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientFpsStatusNotify::kIsLowFpsFieldNumber;
const int ClientFpsStatusNotify::kFpsFieldNumber;
const int ClientFpsStatusNotify::kStatListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientFpsStatusNotify::ClientFpsStatusNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientFpsStatusNotify)
}
ClientFpsStatusNotify::ClientFpsStatusNotify(const ClientFpsStatusNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stat_list_(from.stat_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_low_fps_, &from.is_low_fps_,
    static_cast<size_t>(reinterpret_cast<char*>(&fps_) -
    reinterpret_cast<char*>(&is_low_fps_)) + sizeof(fps_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientFpsStatusNotify)
}

void ClientFpsStatusNotify::SharedCtor() {
  ::memset(&is_low_fps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fps_) -
      reinterpret_cast<char*>(&is_low_fps_)) + sizeof(fps_));
  _cached_size_ = 0;
}

ClientFpsStatusNotify::~ClientFpsStatusNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientFpsStatusNotify)
  SharedDtor();
}

void ClientFpsStatusNotify::SharedDtor() {
}

void ClientFpsStatusNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientFpsStatusNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientFpsStatusNotify& ClientFpsStatusNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientFpsStatusNotify* ClientFpsStatusNotify::New(::google::protobuf::Arena* arena) const {
  ClientFpsStatusNotify* n = new ClientFpsStatusNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientFpsStatusNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientFpsStatusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stat_list_.Clear();
  ::memset(&is_low_fps_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fps_) -
      reinterpret_cast<char*>(&is_low_fps_)) + sizeof(fps_));
  _internal_metadata_.Clear();
}

bool ClientFpsStatusNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientFpsStatusNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_low_fps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_low_fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float fps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fps_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ClientStatData stat_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stat_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientFpsStatusNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientFpsStatusNotify)
  return false;
#undef DO_
}

void ClientFpsStatusNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientFpsStatusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_low_fps = 1;
  if (this->is_low_fps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_low_fps(), output);
  }

  // float fps = 2;
  if (this->fps() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->fps(), output);
  }

  // repeated .proto.ClientStatData stat_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stat_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->stat_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientFpsStatusNotify)
}

::google::protobuf::uint8* ClientFpsStatusNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientFpsStatusNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_low_fps = 1;
  if (this->is_low_fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_low_fps(), target);
  }

  // float fps = 2;
  if (this->fps() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->fps(), target);
  }

  // repeated .proto.ClientStatData stat_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->stat_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->stat_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientFpsStatusNotify)
  return target;
}

size_t ClientFpsStatusNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientFpsStatusNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ClientStatData stat_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->stat_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stat_list(static_cast<int>(i)));
    }
  }

  // bool is_low_fps = 1;
  if (this->is_low_fps() != 0) {
    total_size += 1 + 1;
  }

  // float fps = 2;
  if (this->fps() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientFpsStatusNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientFpsStatusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientFpsStatusNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientFpsStatusNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientFpsStatusNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientFpsStatusNotify)
    MergeFrom(*source);
  }
}

void ClientFpsStatusNotify::MergeFrom(const ClientFpsStatusNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientFpsStatusNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stat_list_.MergeFrom(from.stat_list_);
  if (from.is_low_fps() != 0) {
    set_is_low_fps(from.is_low_fps());
  }
  if (from.fps() != 0) {
    set_fps(from.fps());
  }
}

void ClientFpsStatusNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientFpsStatusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientFpsStatusNotify::CopyFrom(const ClientFpsStatusNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientFpsStatusNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientFpsStatusNotify::IsInitialized() const {
  return true;
}

void ClientFpsStatusNotify::Swap(ClientFpsStatusNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientFpsStatusNotify::InternalSwap(ClientFpsStatusNotify* other) {
  using std::swap;
  stat_list_.InternalSwap(&other->stat_list_);
  swap(is_low_fps_, other->is_low_fps_);
  swap(fps_, other->fps_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientFpsStatusNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientFpsStatusNotify

// bool is_low_fps = 1;
void ClientFpsStatusNotify::clear_is_low_fps() {
  is_low_fps_ = false;
}
bool ClientFpsStatusNotify::is_low_fps() const {
  // @@protoc_insertion_point(field_get:proto.ClientFpsStatusNotify.is_low_fps)
  return is_low_fps_;
}
void ClientFpsStatusNotify::set_is_low_fps(bool value) {
  
  is_low_fps_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientFpsStatusNotify.is_low_fps)
}

// float fps = 2;
void ClientFpsStatusNotify::clear_fps() {
  fps_ = 0;
}
float ClientFpsStatusNotify::fps() const {
  // @@protoc_insertion_point(field_get:proto.ClientFpsStatusNotify.fps)
  return fps_;
}
void ClientFpsStatusNotify::set_fps(float value) {
  
  fps_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientFpsStatusNotify.fps)
}

// repeated .proto.ClientStatData stat_list = 3;
int ClientFpsStatusNotify::stat_list_size() const {
  return stat_list_.size();
}
void ClientFpsStatusNotify::clear_stat_list() {
  stat_list_.Clear();
}
const ::proto::ClientStatData& ClientFpsStatusNotify::stat_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientFpsStatusNotify.stat_list)
  return stat_list_.Get(index);
}
::proto::ClientStatData* ClientFpsStatusNotify::mutable_stat_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ClientFpsStatusNotify.stat_list)
  return stat_list_.Mutable(index);
}
::proto::ClientStatData* ClientFpsStatusNotify::add_stat_list() {
  // @@protoc_insertion_point(field_add:proto.ClientFpsStatusNotify.stat_list)
  return stat_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ClientStatData >*
ClientFpsStatusNotify::mutable_stat_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientFpsStatusNotify.stat_list)
  return &stat_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ClientStatData >&
ClientFpsStatusNotify::stat_list() const {
  // @@protoc_insertion_point(field_list:proto.ClientFpsStatusNotify.stat_list)
  return stat_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RobotPushPlayerDataNotify::kBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RobotPushPlayerDataNotify::RobotPushPlayerDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RobotPushPlayerDataNotify)
}
RobotPushPlayerDataNotify::RobotPushPlayerDataNotify(const RobotPushPlayerDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bin().size() > 0) {
    bin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bin_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RobotPushPlayerDataNotify)
}

void RobotPushPlayerDataNotify::SharedCtor() {
  bin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RobotPushPlayerDataNotify::~RobotPushPlayerDataNotify() {
  // @@protoc_insertion_point(destructor:proto.RobotPushPlayerDataNotify)
  SharedDtor();
}

void RobotPushPlayerDataNotify::SharedDtor() {
  bin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RobotPushPlayerDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RobotPushPlayerDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RobotPushPlayerDataNotify& RobotPushPlayerDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

RobotPushPlayerDataNotify* RobotPushPlayerDataNotify::New(::google::protobuf::Arena* arena) const {
  RobotPushPlayerDataNotify* n = new RobotPushPlayerDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RobotPushPlayerDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RobotPushPlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RobotPushPlayerDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RobotPushPlayerDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes bin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RobotPushPlayerDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RobotPushPlayerDataNotify)
  return false;
#undef DO_
}

void RobotPushPlayerDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RobotPushPlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bin = 1;
  if (this->bin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RobotPushPlayerDataNotify)
}

::google::protobuf::uint8* RobotPushPlayerDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RobotPushPlayerDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bin = 1;
  if (this->bin().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bin(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RobotPushPlayerDataNotify)
  return target;
}

size_t RobotPushPlayerDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RobotPushPlayerDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bin = 1;
  if (this->bin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RobotPushPlayerDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RobotPushPlayerDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RobotPushPlayerDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RobotPushPlayerDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RobotPushPlayerDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RobotPushPlayerDataNotify)
    MergeFrom(*source);
  }
}

void RobotPushPlayerDataNotify::MergeFrom(const RobotPushPlayerDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RobotPushPlayerDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bin().size() > 0) {

    bin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bin_);
  }
}

void RobotPushPlayerDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RobotPushPlayerDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RobotPushPlayerDataNotify::CopyFrom(const RobotPushPlayerDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RobotPushPlayerDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RobotPushPlayerDataNotify::IsInitialized() const {
  return true;
}

void RobotPushPlayerDataNotify::Swap(RobotPushPlayerDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RobotPushPlayerDataNotify::InternalSwap(RobotPushPlayerDataNotify* other) {
  using std::swap;
  bin_.Swap(&other->bin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RobotPushPlayerDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RobotPushPlayerDataNotify

// bytes bin = 1;
void RobotPushPlayerDataNotify::clear_bin() {
  bin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RobotPushPlayerDataNotify::bin() const {
  // @@protoc_insertion_point(field_get:proto.RobotPushPlayerDataNotify.bin)
  return bin_.GetNoArena();
}
void RobotPushPlayerDataNotify::set_bin(const ::std::string& value) {
  
  bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RobotPushPlayerDataNotify.bin)
}
#if LANG_CXX11
void RobotPushPlayerDataNotify::set_bin(::std::string&& value) {
  
  bin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RobotPushPlayerDataNotify.bin)
}
#endif
void RobotPushPlayerDataNotify::set_bin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RobotPushPlayerDataNotify.bin)
}
void RobotPushPlayerDataNotify::set_bin(const void* value, size_t size) {
  
  bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RobotPushPlayerDataNotify.bin)
}
::std::string* RobotPushPlayerDataNotify::mutable_bin() {
  
  // @@protoc_insertion_point(field_mutable:proto.RobotPushPlayerDataNotify.bin)
  return bin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RobotPushPlayerDataNotify::release_bin() {
  // @@protoc_insertion_point(field_release:proto.RobotPushPlayerDataNotify.bin)
  
  return bin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RobotPushPlayerDataNotify::set_allocated_bin(::std::string* bin) {
  if (bin != NULL) {
    
  } else {
    
  }
  bin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bin);
  // @@protoc_insertion_point(field_set_allocated:proto.RobotPushPlayerDataNotify.bin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientReportNotify::kReportTypeFieldNumber;
const int ClientReportNotify::kReportValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientReportNotify::ClientReportNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientReportNotify)
}
ClientReportNotify::ClientReportNotify(const ClientReportNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  report_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.report_type().size() > 0) {
    report_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_type_);
  }
  report_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.report_value().size() > 0) {
    report_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ClientReportNotify)
}

void ClientReportNotify::SharedCtor() {
  report_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ClientReportNotify::~ClientReportNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientReportNotify)
  SharedDtor();
}

void ClientReportNotify::SharedDtor() {
  report_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientReportNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientReportNotify::descriptor() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientReportNotify& ClientReportNotify::default_instance() {
  protobuf_cmd_2fcmd_5fmisc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientReportNotify* ClientReportNotify::New(::google::protobuf::Arena* arena) const {
  ClientReportNotify* n = new ClientReportNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientReportNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientReportNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  report_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  report_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ClientReportNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientReportNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string report_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_report_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->report_type().data(), static_cast<int>(this->report_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ClientReportNotify.report_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string report_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_report_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->report_value().data(), static_cast<int>(this->report_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ClientReportNotify.report_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientReportNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientReportNotify)
  return false;
#undef DO_
}

void ClientReportNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientReportNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string report_type = 1;
  if (this->report_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->report_type().data(), static_cast<int>(this->report_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientReportNotify.report_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->report_type(), output);
  }

  // string report_value = 2;
  if (this->report_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->report_value().data(), static_cast<int>(this->report_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientReportNotify.report_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->report_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientReportNotify)
}

::google::protobuf::uint8* ClientReportNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientReportNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string report_type = 1;
  if (this->report_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->report_type().data(), static_cast<int>(this->report_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientReportNotify.report_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->report_type(), target);
  }

  // string report_value = 2;
  if (this->report_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->report_value().data(), static_cast<int>(this->report_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ClientReportNotify.report_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->report_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientReportNotify)
  return target;
}

size_t ClientReportNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientReportNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string report_type = 1;
  if (this->report_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->report_type());
  }

  // string report_value = 2;
  if (this->report_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->report_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientReportNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientReportNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientReportNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientReportNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientReportNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientReportNotify)
    MergeFrom(*source);
  }
}

void ClientReportNotify::MergeFrom(const ClientReportNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientReportNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.report_type().size() > 0) {

    report_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_type_);
  }
  if (from.report_value().size() > 0) {

    report_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.report_value_);
  }
}

void ClientReportNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientReportNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientReportNotify::CopyFrom(const ClientReportNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientReportNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientReportNotify::IsInitialized() const {
  return true;
}

void ClientReportNotify::Swap(ClientReportNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientReportNotify::InternalSwap(ClientReportNotify* other) {
  using std::swap;
  report_type_.Swap(&other->report_type_);
  report_value_.Swap(&other->report_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientReportNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fmisc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fmisc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientReportNotify

// string report_type = 1;
void ClientReportNotify::clear_report_type() {
  report_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientReportNotify::report_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientReportNotify.report_type)
  return report_type_.GetNoArena();
}
void ClientReportNotify::set_report_type(const ::std::string& value) {
  
  report_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClientReportNotify.report_type)
}
#if LANG_CXX11
void ClientReportNotify::set_report_type(::std::string&& value) {
  
  report_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClientReportNotify.report_type)
}
#endif
void ClientReportNotify::set_report_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  report_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClientReportNotify.report_type)
}
void ClientReportNotify::set_report_type(const char* value, size_t size) {
  
  report_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClientReportNotify.report_type)
}
::std::string* ClientReportNotify::mutable_report_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClientReportNotify.report_type)
  return report_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientReportNotify::release_report_type() {
  // @@protoc_insertion_point(field_release:proto.ClientReportNotify.report_type)
  
  return report_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientReportNotify::set_allocated_report_type(::std::string* report_type) {
  if (report_type != NULL) {
    
  } else {
    
  }
  report_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report_type);
  // @@protoc_insertion_point(field_set_allocated:proto.ClientReportNotify.report_type)
}

// string report_value = 2;
void ClientReportNotify::clear_report_value() {
  report_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientReportNotify::report_value() const {
  // @@protoc_insertion_point(field_get:proto.ClientReportNotify.report_value)
  return report_value_.GetNoArena();
}
void ClientReportNotify::set_report_value(const ::std::string& value) {
  
  report_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ClientReportNotify.report_value)
}
#if LANG_CXX11
void ClientReportNotify::set_report_value(::std::string&& value) {
  
  report_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ClientReportNotify.report_value)
}
#endif
void ClientReportNotify::set_report_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  report_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ClientReportNotify.report_value)
}
void ClientReportNotify::set_report_value(const char* value, size_t size) {
  
  report_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ClientReportNotify.report_value)
}
::std::string* ClientReportNotify::mutable_report_value() {
  
  // @@protoc_insertion_point(field_mutable:proto.ClientReportNotify.report_value)
  return report_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientReportNotify::release_report_value() {
  // @@protoc_insertion_point(field_release:proto.ClientReportNotify.report_value)
  
  return report_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientReportNotify::set_allocated_report_value(::std::string* report_value) {
  if (report_value != NULL) {
    
  } else {
    
  }
  report_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), report_value);
  // @@protoc_insertion_point(field_set_allocated:proto.ClientReportNotify.report_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
