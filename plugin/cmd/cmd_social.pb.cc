// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_social.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_social.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class SocialDetailDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SocialDetail>
     _instance;
} _SocialDetail_default_instance_;
class FriendBriefDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FriendBrief>
     _instance;
} _FriendBrief_default_instance_;
class GetPlayerFriendListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerFriendListReq>
     _instance;
} _GetPlayerFriendListReq_default_instance_;
class GetPlayerFriendListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerFriendListRsp>
     _instance;
} _GetPlayerFriendListRsp_default_instance_;
class AskAddFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AskAddFriendReq>
     _instance;
} _AskAddFriendReq_default_instance_;
class AskAddFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AskAddFriendRsp>
     _instance;
} _AskAddFriendRsp_default_instance_;
class DealAddFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DealAddFriendReq>
     _instance;
} _DealAddFriendReq_default_instance_;
class DealAddFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DealAddFriendRsp>
     _instance;
} _DealAddFriendRsp_default_instance_;
class GetPlayerSocialDetailReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerSocialDetailReq>
     _instance;
} _GetPlayerSocialDetailReq_default_instance_;
class GetPlayerSocialDetailRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPlayerSocialDetailRsp>
     _instance;
} _GetPlayerSocialDetailRsp_default_instance_;
class DeleteFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendReq>
     _instance;
} _DeleteFriendReq_default_instance_;
class DeleteFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeleteFriendRsp>
     _instance;
} _DeleteFriendRsp_default_instance_;
class SetPlayerBirthdayReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerBirthdayReq>
     _instance;
} _SetPlayerBirthdayReq_default_instance_;
class SetPlayerBirthdayRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerBirthdayRsp>
     _instance;
} _SetPlayerBirthdayRsp_default_instance_;
class SetPlayerSignatureReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerSignatureReq>
     _instance;
} _SetPlayerSignatureReq_default_instance_;
class SetPlayerSignatureRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerSignatureRsp>
     _instance;
} _SetPlayerSignatureRsp_default_instance_;
class SetPlayerHeadImageReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerHeadImageReq>
     _instance;
} _SetPlayerHeadImageReq_default_instance_;
class SetPlayerHeadImageRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetPlayerHeadImageRsp>
     _instance;
} _SetPlayerHeadImageRsp_default_instance_;

namespace protobuf_cmd_2fcmd_5fsocial_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[18];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, birthday_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, world_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, reserved_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, online_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialDetail, is_friend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, avatar_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, world_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, online_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendBrief, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListRsp, friend_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerFriendListRsp, ask_friend_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskAddFriendRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendReq, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendReq, deal_add_friend_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DealAddFriendRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailReq, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPlayerSocialDetailRsp, detail_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeleteFriendRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayReq, birthday_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerBirthdayRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureReq, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerSignatureRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageReq, avatar_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetPlayerHeadImageRsp, retcode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(SocialDetail)},
  { 15, -1, sizeof(FriendBrief)},
  { 28, -1, sizeof(GetPlayerFriendListReq)},
  { 33, -1, sizeof(GetPlayerFriendListRsp)},
  { 41, -1, sizeof(AskAddFriendReq)},
  { 47, -1, sizeof(AskAddFriendRsp)},
  { 54, -1, sizeof(DealAddFriendReq)},
  { 61, -1, sizeof(DealAddFriendRsp)},
  { 68, -1, sizeof(GetPlayerSocialDetailReq)},
  { 74, -1, sizeof(GetPlayerSocialDetailRsp)},
  { 81, -1, sizeof(DeleteFriendReq)},
  { 87, -1, sizeof(DeleteFriendRsp)},
  { 94, -1, sizeof(SetPlayerBirthdayReq)},
  { 100, -1, sizeof(SetPlayerBirthdayRsp)},
  { 106, -1, sizeof(SetPlayerSignatureReq)},
  { 112, -1, sizeof(SetPlayerSignatureRsp)},
  { 118, -1, sizeof(SetPlayerHeadImageReq)},
  { 124, -1, sizeof(SetPlayerHeadImageRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SocialDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FriendBrief_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerFriendListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerFriendListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AskAddFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AskAddFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DealAddFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DealAddFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerSocialDetailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPlayerSocialDetailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeleteFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerBirthdayReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerBirthdayRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerSignatureReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerSignatureRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerHeadImageReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetPlayerHeadImageRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_social.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _SocialDetail_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SocialDetail_default_instance_);_FriendBrief_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FriendBrief_default_instance_);_GetPlayerFriendListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerFriendListReq_default_instance_);_GetPlayerFriendListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerFriendListRsp_default_instance_);_AskAddFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AskAddFriendReq_default_instance_);_AskAddFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AskAddFriendRsp_default_instance_);_DealAddFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DealAddFriendReq_default_instance_);_DealAddFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DealAddFriendRsp_default_instance_);_GetPlayerSocialDetailReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerSocialDetailReq_default_instance_);_GetPlayerSocialDetailRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPlayerSocialDetailRsp_default_instance_);_DeleteFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteFriendReq_default_instance_);_DeleteFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeleteFriendRsp_default_instance_);_SetPlayerBirthdayReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerBirthdayReq_default_instance_);_SetPlayerBirthdayRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerBirthdayRsp_default_instance_);_SetPlayerSignatureReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerSignatureReq_default_instance_);_SetPlayerSignatureRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerSignatureRsp_default_instance_);_SetPlayerHeadImageReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerHeadImageReq_default_instance_);_SetPlayerHeadImageRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetPlayerHeadImageRsp_default_instance_);_SocialDetail_default_instance_._instance.get_mutable()->birthday_ = const_cast< ::proto::Birthday*>(
      ::proto::Birthday::internal_default_instance());
  _GetPlayerSocialDetailRsp_default_instance_._instance.get_mutable()->detail_data_ = const_cast< ::proto::SocialDetail*>(
      ::proto::SocialDetail::internal_default_instance());
  _SetPlayerBirthdayReq_default_instance_._instance.get_mutable()->birthday_ = const_cast< ::proto::Birthday*>(
      ::proto::Birthday::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024cmd/cmd_social.proto\022\005proto\032\014define.pr"
      "oto\"\364\001\n\014SocialDetail\022\013\n\003uid\030\001 \001(\r\022\020\n\010nic"
      "kname\030\002 \001(\t\022\r\n\005level\030\003 \001(\r\022\021\n\tavatar_id\030"
      "\004 \001(\r\022\021\n\tsignature\030\005 \001(\t\022!\n\010birthday\030\006 \001"
      "(\0132\017.proto.Birthday\022\023\n\013world_level\030\007 \001(\r"
      "\022\025\n\rreserved_list\030\010 \003(\r\022.\n\014online_state\030"
      "\t \001(\0162\030.proto.FriendOnlineState\022\021\n\tis_fr"
      "iend\030\n \001(\010\"\265\001\n\013FriendBrief\022\013\n\003uid\030\001 \001(\r\022"
      "\020\n\010nickname\030\002 \001(\t\022\r\n\005level\030\003 \001(\r\022\021\n\tavat"
      "ar_id\030\004 \001(\r\022\023\n\013world_level\030\005 \001(\r\022\021\n\tsign"
      "ature\030\006 \001(\t\022.\n\014online_state\030\007 \001(\0162\030.prot"
      "o.FriendOnlineState\022\r\n\005param\030\010 \001(\r\"|\n\026Ge"
      "tPlayerFriendListReq\"b\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\013\n\006CMD_ID\020\241\037\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENE"
      "T_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001"
      "\"\343\001\n\026GetPlayerFriendListRsp\022\017\n\007retcode\030\001"
      " \001(\005\022\'\n\013friend_list\030\002 \003(\0132\022.proto.Friend"
      "Brief\022+\n\017ask_friend_list\030\003 \003(\0132\022.proto.F"
      "riendBrief\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\242\037\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\211\001\n\017AskAd"
      "dFriendReq\022\022\n\ntarget_uid\030\001 \001(\r\"b\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\245\037\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CL"
      "IENT\020\001\032\002\020\001\"\232\001\n\017AskAddFriendRsp\022\017\n\007retcod"
      "e\030\001 \001(\005\022\022\n\ntarget_uid\030\002 \001(\r\"b\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\013\n\006CMD_ID\020\246\037\022\023\n\017ENET_CHANNEL_ID\020\000"
      "\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIEN"
      "T\020\001\032\002\020\001\"\312\001\n\020DealAddFriendReq\022\022\n\ntarget_u"
      "id\030\001 \001(\r\022>\n\026deal_add_friend_result\030\002 \001(\016"
      "2\036.proto.DealAddFriendResultType\"b\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\247\037\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_"
      "CLIENT\020\001\032\002\020\001\"\233\001\n\020DealAddFriendRsp\022\017\n\007ret"
      "code\030\001 \001(\005\022\022\n\ntarget_uid\030\002 \001(\r\"b\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\250\037\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CL"
      "IENT\020\001\032\002\020\001\"\213\001\n\030GetPlayerSocialDetailReq\022"
      "\013\n\003uid\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\251\037\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\244\001\n\030Get"
      "PlayerSocialDetailRsp\022\017\n\007retcode\030\001 \001(\005\022("
      "\n\013detail_data\030\002 \001(\0132\023.proto.SocialDetail"
      "\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\252\037\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\""
      "\211\001\n\017DeleteFriendReq\022\022\n\ntarget_uid\030\001 \001(\r\""
      "b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\253\037\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS"
      "_ALLOW_CLIENT\020\001\032\002\020\001\"\205\001\n\017DeleteFriendRsp\022"
      "\017\n\007retcode\030\001 \001(\005\022\022\n\ntarget_uid\030\002 \001(\r\"M\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\254\037\022\023\n\017ENET_CHA"
      "NNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\235\001\n\024"
      "SetPlayerBirthdayReq\022!\n\010birthday\030\001 \001(\0132\017"
      ".proto.Birthday\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\255\037\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"v\n\024S"
      "etPlayerBirthdayRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\256\037\022\023\n\017ENET_CHA"
      "NNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\216\001\n\025"
      "SetPlayerSignatureReq\022\021\n\tsignature\030\001 \001(\t"
      "\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\257\037\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017I"
      "S_ALLOW_CLIENT\020\001\032\002\020\001\"w\n\025SetPlayerSignatu"
      "reRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\260\037\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"\216\001\n\025SetPlayerHeadI"
      "mageReq\022\021\n\tavatar_id\030\001 \001(\r\"b\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\013\n\006CMD_ID\020\261\037\022\023\n\017ENET_CHANNEL_ID\020\000\022"
      "\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT"
      "\020\001\032\002\020\001\"w\n\025SetPlayerHeadImageRsp\022\017\n\007retco"
      "de\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\262\037"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001*>\n\021FriendOnlineState\022\026\n\022FREIEND_"
      "DISCONNECT\020\000\022\021\n\rFRIEND_ONLINE\020\001*Q\n\027DealA"
      "ddFriendResultType\022\032\n\026DEAL_ADD_FRIEND_RE"
      "JECT\020\000\022\032\n\026DEAL_ADD_FRIEND_ACCEPT\020\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3042);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_social.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fsocial_2eproto

const ::google::protobuf::EnumDescriptor* GetPlayerFriendListReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[0];
}
bool GetPlayerFriendListReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4001:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq::NONE;
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq::CMD_ID;
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq::ENET_CHANNEL_ID;
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq::ENET_IS_RELIABLE;
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq::IS_ALLOW_CLIENT;
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq::CmdId_MIN;
const GetPlayerFriendListReq_CmdId GetPlayerFriendListReq::CmdId_MAX;
const int GetPlayerFriendListReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetPlayerFriendListRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[1];
}
bool GetPlayerFriendListRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4002:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp::NONE;
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp::CMD_ID;
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp::ENET_CHANNEL_ID;
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp::ENET_IS_RELIABLE;
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp::IS_ALLOW_CLIENT;
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp::CmdId_MIN;
const GetPlayerFriendListRsp_CmdId GetPlayerFriendListRsp::CmdId_MAX;
const int GetPlayerFriendListRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AskAddFriendReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[2];
}
bool AskAddFriendReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4005:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AskAddFriendReq_CmdId AskAddFriendReq::NONE;
const AskAddFriendReq_CmdId AskAddFriendReq::CMD_ID;
const AskAddFriendReq_CmdId AskAddFriendReq::ENET_CHANNEL_ID;
const AskAddFriendReq_CmdId AskAddFriendReq::ENET_IS_RELIABLE;
const AskAddFriendReq_CmdId AskAddFriendReq::IS_ALLOW_CLIENT;
const AskAddFriendReq_CmdId AskAddFriendReq::CmdId_MIN;
const AskAddFriendReq_CmdId AskAddFriendReq::CmdId_MAX;
const int AskAddFriendReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AskAddFriendRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[3];
}
bool AskAddFriendRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4006:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AskAddFriendRsp_CmdId AskAddFriendRsp::NONE;
const AskAddFriendRsp_CmdId AskAddFriendRsp::CMD_ID;
const AskAddFriendRsp_CmdId AskAddFriendRsp::ENET_CHANNEL_ID;
const AskAddFriendRsp_CmdId AskAddFriendRsp::ENET_IS_RELIABLE;
const AskAddFriendRsp_CmdId AskAddFriendRsp::IS_ALLOW_CLIENT;
const AskAddFriendRsp_CmdId AskAddFriendRsp::CmdId_MIN;
const AskAddFriendRsp_CmdId AskAddFriendRsp::CmdId_MAX;
const int AskAddFriendRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DealAddFriendReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[4];
}
bool DealAddFriendReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4007:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DealAddFriendReq_CmdId DealAddFriendReq::NONE;
const DealAddFriendReq_CmdId DealAddFriendReq::CMD_ID;
const DealAddFriendReq_CmdId DealAddFriendReq::ENET_CHANNEL_ID;
const DealAddFriendReq_CmdId DealAddFriendReq::ENET_IS_RELIABLE;
const DealAddFriendReq_CmdId DealAddFriendReq::IS_ALLOW_CLIENT;
const DealAddFriendReq_CmdId DealAddFriendReq::CmdId_MIN;
const DealAddFriendReq_CmdId DealAddFriendReq::CmdId_MAX;
const int DealAddFriendReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DealAddFriendRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[5];
}
bool DealAddFriendRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4008:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DealAddFriendRsp_CmdId DealAddFriendRsp::NONE;
const DealAddFriendRsp_CmdId DealAddFriendRsp::CMD_ID;
const DealAddFriendRsp_CmdId DealAddFriendRsp::ENET_CHANNEL_ID;
const DealAddFriendRsp_CmdId DealAddFriendRsp::ENET_IS_RELIABLE;
const DealAddFriendRsp_CmdId DealAddFriendRsp::IS_ALLOW_CLIENT;
const DealAddFriendRsp_CmdId DealAddFriendRsp::CmdId_MIN;
const DealAddFriendRsp_CmdId DealAddFriendRsp::CmdId_MAX;
const int DealAddFriendRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetPlayerSocialDetailReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[6];
}
bool GetPlayerSocialDetailReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4009:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq::NONE;
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq::CMD_ID;
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq::ENET_CHANNEL_ID;
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq::ENET_IS_RELIABLE;
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq::IS_ALLOW_CLIENT;
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq::CmdId_MIN;
const GetPlayerSocialDetailReq_CmdId GetPlayerSocialDetailReq::CmdId_MAX;
const int GetPlayerSocialDetailReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetPlayerSocialDetailRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[7];
}
bool GetPlayerSocialDetailRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4010:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetPlayerSocialDetailRsp_CmdId GetPlayerSocialDetailRsp::NONE;
const GetPlayerSocialDetailRsp_CmdId GetPlayerSocialDetailRsp::CMD_ID;
const GetPlayerSocialDetailRsp_CmdId GetPlayerSocialDetailRsp::ENET_CHANNEL_ID;
const GetPlayerSocialDetailRsp_CmdId GetPlayerSocialDetailRsp::ENET_IS_RELIABLE;
const GetPlayerSocialDetailRsp_CmdId GetPlayerSocialDetailRsp::CmdId_MIN;
const GetPlayerSocialDetailRsp_CmdId GetPlayerSocialDetailRsp::CmdId_MAX;
const int GetPlayerSocialDetailRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DeleteFriendReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[8];
}
bool DeleteFriendReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4011:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DeleteFriendReq_CmdId DeleteFriendReq::NONE;
const DeleteFriendReq_CmdId DeleteFriendReq::CMD_ID;
const DeleteFriendReq_CmdId DeleteFriendReq::ENET_CHANNEL_ID;
const DeleteFriendReq_CmdId DeleteFriendReq::ENET_IS_RELIABLE;
const DeleteFriendReq_CmdId DeleteFriendReq::IS_ALLOW_CLIENT;
const DeleteFriendReq_CmdId DeleteFriendReq::CmdId_MIN;
const DeleteFriendReq_CmdId DeleteFriendReq::CmdId_MAX;
const int DeleteFriendReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DeleteFriendRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[9];
}
bool DeleteFriendRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4012:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DeleteFriendRsp_CmdId DeleteFriendRsp::NONE;
const DeleteFriendRsp_CmdId DeleteFriendRsp::CMD_ID;
const DeleteFriendRsp_CmdId DeleteFriendRsp::ENET_CHANNEL_ID;
const DeleteFriendRsp_CmdId DeleteFriendRsp::ENET_IS_RELIABLE;
const DeleteFriendRsp_CmdId DeleteFriendRsp::CmdId_MIN;
const DeleteFriendRsp_CmdId DeleteFriendRsp::CmdId_MAX;
const int DeleteFriendRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerBirthdayReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[10];
}
bool SetPlayerBirthdayReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4013:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq::NONE;
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq::CMD_ID;
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq::ENET_CHANNEL_ID;
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq::ENET_IS_RELIABLE;
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq::IS_ALLOW_CLIENT;
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq::CmdId_MIN;
const SetPlayerBirthdayReq_CmdId SetPlayerBirthdayReq::CmdId_MAX;
const int SetPlayerBirthdayReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerBirthdayRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[11];
}
bool SetPlayerBirthdayRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4014:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerBirthdayRsp_CmdId SetPlayerBirthdayRsp::NONE;
const SetPlayerBirthdayRsp_CmdId SetPlayerBirthdayRsp::CMD_ID;
const SetPlayerBirthdayRsp_CmdId SetPlayerBirthdayRsp::ENET_CHANNEL_ID;
const SetPlayerBirthdayRsp_CmdId SetPlayerBirthdayRsp::ENET_IS_RELIABLE;
const SetPlayerBirthdayRsp_CmdId SetPlayerBirthdayRsp::CmdId_MIN;
const SetPlayerBirthdayRsp_CmdId SetPlayerBirthdayRsp::CmdId_MAX;
const int SetPlayerBirthdayRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerSignatureReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[12];
}
bool SetPlayerSignatureReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4015:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq::NONE;
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq::CMD_ID;
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq::ENET_CHANNEL_ID;
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq::ENET_IS_RELIABLE;
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq::IS_ALLOW_CLIENT;
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq::CmdId_MIN;
const SetPlayerSignatureReq_CmdId SetPlayerSignatureReq::CmdId_MAX;
const int SetPlayerSignatureReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerSignatureRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[13];
}
bool SetPlayerSignatureRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4016:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerSignatureRsp_CmdId SetPlayerSignatureRsp::NONE;
const SetPlayerSignatureRsp_CmdId SetPlayerSignatureRsp::CMD_ID;
const SetPlayerSignatureRsp_CmdId SetPlayerSignatureRsp::ENET_CHANNEL_ID;
const SetPlayerSignatureRsp_CmdId SetPlayerSignatureRsp::ENET_IS_RELIABLE;
const SetPlayerSignatureRsp_CmdId SetPlayerSignatureRsp::CmdId_MIN;
const SetPlayerSignatureRsp_CmdId SetPlayerSignatureRsp::CmdId_MAX;
const int SetPlayerSignatureRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerHeadImageReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[14];
}
bool SetPlayerHeadImageReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4017:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq::NONE;
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq::CMD_ID;
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq::ENET_CHANNEL_ID;
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq::ENET_IS_RELIABLE;
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq::IS_ALLOW_CLIENT;
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq::CmdId_MIN;
const SetPlayerHeadImageReq_CmdId SetPlayerHeadImageReq::CmdId_MAX;
const int SetPlayerHeadImageReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetPlayerHeadImageRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[15];
}
bool SetPlayerHeadImageRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4018:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetPlayerHeadImageRsp_CmdId SetPlayerHeadImageRsp::NONE;
const SetPlayerHeadImageRsp_CmdId SetPlayerHeadImageRsp::CMD_ID;
const SetPlayerHeadImageRsp_CmdId SetPlayerHeadImageRsp::ENET_CHANNEL_ID;
const SetPlayerHeadImageRsp_CmdId SetPlayerHeadImageRsp::ENET_IS_RELIABLE;
const SetPlayerHeadImageRsp_CmdId SetPlayerHeadImageRsp::CmdId_MIN;
const SetPlayerHeadImageRsp_CmdId SetPlayerHeadImageRsp::CmdId_MAX;
const int SetPlayerHeadImageRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FriendOnlineState_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[16];
}
bool FriendOnlineState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DealAddFriendResultType_descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_enum_descriptors[17];
}
bool DealAddFriendResultType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SocialDetail::kUidFieldNumber;
const int SocialDetail::kNicknameFieldNumber;
const int SocialDetail::kLevelFieldNumber;
const int SocialDetail::kAvatarIdFieldNumber;
const int SocialDetail::kSignatureFieldNumber;
const int SocialDetail::kBirthdayFieldNumber;
const int SocialDetail::kWorldLevelFieldNumber;
const int SocialDetail::kReservedListFieldNumber;
const int SocialDetail::kOnlineStateFieldNumber;
const int SocialDetail::kIsFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocialDetail::SocialDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SocialDetail)
}
SocialDetail::SocialDetail(const SocialDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      reserved_list_(from.reserved_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_birthday()) {
    birthday_ = new ::proto::Birthday(*from.birthday_);
  } else {
    birthday_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_friend_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(is_friend_));
  // @@protoc_insertion_point(copy_constructor:proto.SocialDetail)
}

void SocialDetail::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&birthday_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_friend_) -
      reinterpret_cast<char*>(&birthday_)) + sizeof(is_friend_));
  _cached_size_ = 0;
}

SocialDetail::~SocialDetail() {
  // @@protoc_insertion_point(destructor:proto.SocialDetail)
  SharedDtor();
}

void SocialDetail::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete birthday_;
}

void SocialDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SocialDetail::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SocialDetail& SocialDetail::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SocialDetail* SocialDetail::New(::google::protobuf::Arena* arena) const {
  SocialDetail* n = new SocialDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SocialDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SocialDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reserved_list_.Clear();
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) {
    delete birthday_;
  }
  birthday_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_friend_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(is_friend_));
  _internal_metadata_.Clear();
}

bool SocialDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SocialDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SocialDetail.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SocialDetail.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Birthday birthday = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_birthday()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 world_level = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 reserved_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_reserved_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_reserved_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendOnlineState online_state = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_online_state(static_cast< ::proto::FriendOnlineState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_friend = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SocialDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SocialDetail)
  return false;
#undef DO_
}

void SocialDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SocialDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->avatar_id(), output);
  }

  // string signature = 5;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->signature(), output);
  }

  // .proto.Birthday birthday = 6;
  if (this->has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->birthday_, output);
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->world_level(), output);
  }

  // repeated uint32 reserved_list = 8;
  if (this->reserved_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _reserved_list_cached_byte_size_));
  }
  for (int i = 0, n = this->reserved_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->reserved_list(i), output);
  }

  // .proto.FriendOnlineState online_state = 9;
  if (this->online_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->online_state(), output);
  }

  // bool is_friend = 10;
  if (this->is_friend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_friend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SocialDetail)
}

::google::protobuf::uint8* SocialDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SocialDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->avatar_id(), target);
  }

  // string signature = 5;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SocialDetail.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->signature(), target);
  }

  // .proto.Birthday birthday = 6;
  if (this->has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->birthday_, deterministic, target);
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->world_level(), target);
  }

  // repeated uint32 reserved_list = 8;
  if (this->reserved_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _reserved_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->reserved_list_, target);
  }

  // .proto.FriendOnlineState online_state = 9;
  if (this->online_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->online_state(), target);
  }

  // bool is_friend = 10;
  if (this->is_friend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_friend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SocialDetail)
  return target;
}

size_t SocialDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SocialDetail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 reserved_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->reserved_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _reserved_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string signature = 5;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // .proto.Birthday birthday = 6;
  if (this->has_birthday()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->birthday_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 world_level = 7;
  if (this->world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_level());
  }

  // .proto.FriendOnlineState online_state = 9;
  if (this->online_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->online_state());
  }

  // bool is_friend = 10;
  if (this->is_friend() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SocialDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SocialDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const SocialDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SocialDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SocialDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SocialDetail)
    MergeFrom(*source);
  }
}

void SocialDetail::MergeFrom(const SocialDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SocialDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reserved_list_.MergeFrom(from.reserved_list_);
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.has_birthday()) {
    mutable_birthday()->::proto::Birthday::MergeFrom(from.birthday());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.world_level() != 0) {
    set_world_level(from.world_level());
  }
  if (from.online_state() != 0) {
    set_online_state(from.online_state());
  }
  if (from.is_friend() != 0) {
    set_is_friend(from.is_friend());
  }
}

void SocialDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SocialDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocialDetail::CopyFrom(const SocialDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SocialDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocialDetail::IsInitialized() const {
  return true;
}

void SocialDetail::Swap(SocialDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocialDetail::InternalSwap(SocialDetail* other) {
  using std::swap;
  reserved_list_.InternalSwap(&other->reserved_list_);
  nickname_.Swap(&other->nickname_);
  signature_.Swap(&other->signature_);
  swap(birthday_, other->birthday_);
  swap(uid_, other->uid_);
  swap(level_, other->level_);
  swap(avatar_id_, other->avatar_id_);
  swap(world_level_, other->world_level_);
  swap(online_state_, other->online_state_);
  swap(is_friend_, other->is_friend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SocialDetail::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SocialDetail

// uint32 uid = 1;
void SocialDetail::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 SocialDetail::uid() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.uid)
  return uid_;
}
void SocialDetail::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.uid)
}

// string nickname = 2;
void SocialDetail::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SocialDetail::nickname() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.nickname)
  return nickname_.GetNoArena();
}
void SocialDetail::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.nickname)
}
#if LANG_CXX11
void SocialDetail::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.nickname)
}
#endif
void SocialDetail::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.nickname)
}
void SocialDetail::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.nickname)
}
::std::string* SocialDetail::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialDetail::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialDetail::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.nickname)
}

// uint32 level = 3;
void SocialDetail::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 SocialDetail::level() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.level)
  return level_;
}
void SocialDetail::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.level)
}

// uint32 avatar_id = 4;
void SocialDetail::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SocialDetail::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.avatar_id)
  return avatar_id_;
}
void SocialDetail::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.avatar_id)
}

// string signature = 5;
void SocialDetail::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SocialDetail::signature() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.signature)
  return signature_.GetNoArena();
}
void SocialDetail::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.signature)
}
#if LANG_CXX11
void SocialDetail::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SocialDetail.signature)
}
#endif
void SocialDetail::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SocialDetail.signature)
}
void SocialDetail::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SocialDetail.signature)
}
::std::string* SocialDetail::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialDetail::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialDetail::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.signature)
}

// .proto.Birthday birthday = 6;
bool SocialDetail::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
void SocialDetail::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
const ::proto::Birthday& SocialDetail::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SocialDetail.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
::proto::Birthday* SocialDetail::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SocialDetail.birthday)
  return birthday_;
}
::proto::Birthday* SocialDetail::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SocialDetail.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
void SocialDetail::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SocialDetail.birthday)
}

// uint32 world_level = 7;
void SocialDetail::clear_world_level() {
  world_level_ = 0u;
}
::google::protobuf::uint32 SocialDetail::world_level() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.world_level)
  return world_level_;
}
void SocialDetail::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.world_level)
}

// repeated uint32 reserved_list = 8;
int SocialDetail::reserved_list_size() const {
  return reserved_list_.size();
}
void SocialDetail::clear_reserved_list() {
  reserved_list_.Clear();
}
::google::protobuf::uint32 SocialDetail::reserved_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.reserved_list)
  return reserved_list_.Get(index);
}
void SocialDetail::set_reserved_list(int index, ::google::protobuf::uint32 value) {
  reserved_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SocialDetail.reserved_list)
}
void SocialDetail::add_reserved_list(::google::protobuf::uint32 value) {
  reserved_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SocialDetail.reserved_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SocialDetail::reserved_list() const {
  // @@protoc_insertion_point(field_list:proto.SocialDetail.reserved_list)
  return reserved_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SocialDetail::mutable_reserved_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SocialDetail.reserved_list)
  return &reserved_list_;
}

// .proto.FriendOnlineState online_state = 9;
void SocialDetail::clear_online_state() {
  online_state_ = 0;
}
::proto::FriendOnlineState SocialDetail::online_state() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.online_state)
  return static_cast< ::proto::FriendOnlineState >(online_state_);
}
void SocialDetail::set_online_state(::proto::FriendOnlineState value) {
  
  online_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.online_state)
}

// bool is_friend = 10;
void SocialDetail::clear_is_friend() {
  is_friend_ = false;
}
bool SocialDetail::is_friend() const {
  // @@protoc_insertion_point(field_get:proto.SocialDetail.is_friend)
  return is_friend_;
}
void SocialDetail::set_is_friend(bool value) {
  
  is_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.SocialDetail.is_friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendBrief::kUidFieldNumber;
const int FriendBrief::kNicknameFieldNumber;
const int FriendBrief::kLevelFieldNumber;
const int FriendBrief::kAvatarIdFieldNumber;
const int FriendBrief::kWorldLevelFieldNumber;
const int FriendBrief::kSignatureFieldNumber;
const int FriendBrief::kOnlineStateFieldNumber;
const int FriendBrief::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendBrief::FriendBrief()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FriendBrief)
}
FriendBrief::FriendBrief(const FriendBrief& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(param_));
  // @@protoc_insertion_point(copy_constructor:proto.FriendBrief)
}

void FriendBrief::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(param_));
  _cached_size_ = 0;
}

FriendBrief::~FriendBrief() {
  // @@protoc_insertion_point(destructor:proto.FriendBrief)
  SharedDtor();
}

void FriendBrief::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendBrief::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendBrief::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendBrief& FriendBrief::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

FriendBrief* FriendBrief::New(::google::protobuf::Arena* arena) const {
  FriendBrief* n = new FriendBrief;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendBrief::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FriendBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(param_));
  _internal_metadata_.Clear();
}

bool FriendBrief::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FriendBrief)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FriendBrief.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 world_level = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FriendBrief.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendOnlineState online_state = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_online_state(static_cast< ::proto::FriendOnlineState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FriendBrief)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FriendBrief)
  return false;
#undef DO_
}

void FriendBrief::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FriendBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->avatar_id(), output);
  }

  // uint32 world_level = 5;
  if (this->world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->world_level(), output);
  }

  // string signature = 6;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->signature(), output);
  }

  // .proto.FriendOnlineState online_state = 7;
  if (this->online_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->online_state(), output);
  }

  // uint32 param = 8;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FriendBrief)
}

::google::protobuf::uint8* FriendBrief::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FriendBrief)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->avatar_id(), target);
  }

  // uint32 world_level = 5;
  if (this->world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->world_level(), target);
  }

  // string signature = 6;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.FriendBrief.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->signature(), target);
  }

  // .proto.FriendOnlineState online_state = 7;
  if (this->online_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->online_state(), target);
  }

  // uint32 param = 8;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FriendBrief)
  return target;
}

size_t FriendBrief::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FriendBrief)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string signature = 6;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 level = 3;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 avatar_id = 4;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  // uint32 world_level = 5;
  if (this->world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_level());
  }

  // .proto.FriendOnlineState online_state = 7;
  if (this->online_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->online_state());
  }

  // uint32 param = 8;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendBrief::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FriendBrief)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendBrief* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendBrief>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FriendBrief)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FriendBrief)
    MergeFrom(*source);
  }
}

void FriendBrief::MergeFrom(const FriendBrief& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FriendBrief)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
  if (from.world_level() != 0) {
    set_world_level(from.world_level());
  }
  if (from.online_state() != 0) {
    set_online_state(from.online_state());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void FriendBrief::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FriendBrief)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendBrief::CopyFrom(const FriendBrief& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FriendBrief)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendBrief::IsInitialized() const {
  return true;
}

void FriendBrief::Swap(FriendBrief* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendBrief::InternalSwap(FriendBrief* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  signature_.Swap(&other->signature_);
  swap(uid_, other->uid_);
  swap(level_, other->level_);
  swap(avatar_id_, other->avatar_id_);
  swap(world_level_, other->world_level_);
  swap(online_state_, other->online_state_);
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendBrief::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FriendBrief

// uint32 uid = 1;
void FriendBrief::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 FriendBrief::uid() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.uid)
  return uid_;
}
void FriendBrief::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.uid)
}

// string nickname = 2;
void FriendBrief::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FriendBrief::nickname() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.nickname)
  return nickname_.GetNoArena();
}
void FriendBrief::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.nickname)
}
#if LANG_CXX11
void FriendBrief::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.nickname)
}
#endif
void FriendBrief::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.nickname)
}
void FriendBrief::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.nickname)
}
::std::string* FriendBrief::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendBrief::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendBrief::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.nickname)
}

// uint32 level = 3;
void FriendBrief::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 FriendBrief::level() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.level)
  return level_;
}
void FriendBrief::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.level)
}

// uint32 avatar_id = 4;
void FriendBrief::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 FriendBrief::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.avatar_id)
  return avatar_id_;
}
void FriendBrief::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.avatar_id)
}

// uint32 world_level = 5;
void FriendBrief::clear_world_level() {
  world_level_ = 0u;
}
::google::protobuf::uint32 FriendBrief::world_level() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.world_level)
  return world_level_;
}
void FriendBrief::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.world_level)
}

// string signature = 6;
void FriendBrief::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FriendBrief::signature() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.signature)
  return signature_.GetNoArena();
}
void FriendBrief::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.FriendBrief.signature)
}
#if LANG_CXX11
void FriendBrief::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.FriendBrief.signature)
}
#endif
void FriendBrief::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.FriendBrief.signature)
}
void FriendBrief::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.FriendBrief.signature)
}
::std::string* FriendBrief::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.FriendBrief.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendBrief::release_signature() {
  // @@protoc_insertion_point(field_release:proto.FriendBrief.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendBrief::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.FriendBrief.signature)
}

// .proto.FriendOnlineState online_state = 7;
void FriendBrief::clear_online_state() {
  online_state_ = 0;
}
::proto::FriendOnlineState FriendBrief::online_state() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.online_state)
  return static_cast< ::proto::FriendOnlineState >(online_state_);
}
void FriendBrief::set_online_state(::proto::FriendOnlineState value) {
  
  online_state_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.online_state)
}

// uint32 param = 8;
void FriendBrief::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 FriendBrief::param() const {
  // @@protoc_insertion_point(field_get:proto.FriendBrief.param)
  return param_;
}
void FriendBrief::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.FriendBrief.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerFriendListReq::GetPlayerFriendListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerFriendListReq)
}
GetPlayerFriendListReq::GetPlayerFriendListReq(const GetPlayerFriendListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerFriendListReq)
}

void GetPlayerFriendListReq::SharedCtor() {
  _cached_size_ = 0;
}

GetPlayerFriendListReq::~GetPlayerFriendListReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerFriendListReq)
  SharedDtor();
}

void GetPlayerFriendListReq::SharedDtor() {
}

void GetPlayerFriendListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerFriendListReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerFriendListReq& GetPlayerFriendListReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerFriendListReq* GetPlayerFriendListReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerFriendListReq* n = new GetPlayerFriendListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerFriendListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetPlayerFriendListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerFriendListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerFriendListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerFriendListReq)
  return false;
#undef DO_
}

void GetPlayerFriendListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerFriendListReq)
}

::google::protobuf::uint8* GetPlayerFriendListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerFriendListReq)
  return target;
}

size_t GetPlayerFriendListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerFriendListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerFriendListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerFriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerFriendListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerFriendListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerFriendListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerFriendListReq)
    MergeFrom(*source);
  }
}

void GetPlayerFriendListReq::MergeFrom(const GetPlayerFriendListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerFriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetPlayerFriendListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerFriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerFriendListReq::CopyFrom(const GetPlayerFriendListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerFriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerFriendListReq::IsInitialized() const {
  return true;
}

void GetPlayerFriendListReq::Swap(GetPlayerFriendListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerFriendListReq::InternalSwap(GetPlayerFriendListReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerFriendListReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerFriendListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerFriendListRsp::kRetcodeFieldNumber;
const int GetPlayerFriendListRsp::kFriendListFieldNumber;
const int GetPlayerFriendListRsp::kAskFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerFriendListRsp::GetPlayerFriendListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerFriendListRsp)
}
GetPlayerFriendListRsp::GetPlayerFriendListRsp(const GetPlayerFriendListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_list_(from.friend_list_),
      ask_friend_list_(from.ask_friend_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerFriendListRsp)
}

void GetPlayerFriendListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetPlayerFriendListRsp::~GetPlayerFriendListRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerFriendListRsp)
  SharedDtor();
}

void GetPlayerFriendListRsp::SharedDtor() {
}

void GetPlayerFriendListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerFriendListRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerFriendListRsp& GetPlayerFriendListRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerFriendListRsp* GetPlayerFriendListRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerFriendListRsp* n = new GetPlayerFriendListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerFriendListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_list_.Clear();
  ask_friend_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetPlayerFriendListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerFriendListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief friend_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief ask_friend_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ask_friend_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerFriendListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerFriendListRsp)
  return false;
#undef DO_
}

void GetPlayerFriendListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.FriendBrief friend_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_list(static_cast<int>(i)), output);
  }

  // repeated .proto.FriendBrief ask_friend_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ask_friend_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ask_friend_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerFriendListRsp)
}

::google::protobuf::uint8* GetPlayerFriendListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.FriendBrief friend_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->friend_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.FriendBrief ask_friend_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ask_friend_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->ask_friend_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerFriendListRsp)
  return target;
}

size_t GetPlayerFriendListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerFriendListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief friend_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.FriendBrief ask_friend_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ask_friend_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ask_friend_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerFriendListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerFriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerFriendListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerFriendListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerFriendListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerFriendListRsp)
    MergeFrom(*source);
  }
}

void GetPlayerFriendListRsp::MergeFrom(const GetPlayerFriendListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerFriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_list_.MergeFrom(from.friend_list_);
  ask_friend_list_.MergeFrom(from.ask_friend_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetPlayerFriendListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerFriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerFriendListRsp::CopyFrom(const GetPlayerFriendListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerFriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerFriendListRsp::IsInitialized() const {
  return true;
}

void GetPlayerFriendListRsp::Swap(GetPlayerFriendListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerFriendListRsp::InternalSwap(GetPlayerFriendListRsp* other) {
  using std::swap;
  friend_list_.InternalSwap(&other->friend_list_);
  ask_friend_list_.InternalSwap(&other->ask_friend_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerFriendListRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerFriendListRsp

// int32 retcode = 1;
void GetPlayerFriendListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerFriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.retcode)
  return retcode_;
}
void GetPlayerFriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerFriendListRsp.retcode)
}

// repeated .proto.FriendBrief friend_list = 2;
int GetPlayerFriendListRsp::friend_list_size() const {
  return friend_list_.size();
}
void GetPlayerFriendListRsp::clear_friend_list() {
  friend_list_.Clear();
}
const ::proto::FriendBrief& GetPlayerFriendListRsp::friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Get(index);
}
::proto::FriendBrief* GetPlayerFriendListRsp::mutable_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Mutable(index);
}
::proto::FriendBrief* GetPlayerFriendListRsp::add_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerFriendListRsp::mutable_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerFriendListRsp.friend_list)
  return &friend_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerFriendListRsp::friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerFriendListRsp.friend_list)
  return friend_list_;
}

// repeated .proto.FriendBrief ask_friend_list = 3;
int GetPlayerFriendListRsp::ask_friend_list_size() const {
  return ask_friend_list_.size();
}
void GetPlayerFriendListRsp::clear_ask_friend_list() {
  ask_friend_list_.Clear();
}
const ::proto::FriendBrief& GetPlayerFriendListRsp::ask_friend_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Get(index);
}
::proto::FriendBrief* GetPlayerFriendListRsp::mutable_ask_friend_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Mutable(index);
}
::proto::FriendBrief* GetPlayerFriendListRsp::add_ask_friend_list() {
  // @@protoc_insertion_point(field_add:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
GetPlayerFriendListRsp::mutable_ask_friend_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetPlayerFriendListRsp.ask_friend_list)
  return &ask_friend_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
GetPlayerFriendListRsp::ask_friend_list() const {
  // @@protoc_insertion_point(field_list:proto.GetPlayerFriendListRsp.ask_friend_list)
  return ask_friend_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskAddFriendReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskAddFriendReq::AskAddFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AskAddFriendReq)
}
AskAddFriendReq::AskAddFriendReq(const AskAddFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.AskAddFriendReq)
}

void AskAddFriendReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

AskAddFriendReq::~AskAddFriendReq() {
  // @@protoc_insertion_point(destructor:proto.AskAddFriendReq)
  SharedDtor();
}

void AskAddFriendReq::SharedDtor() {
}

void AskAddFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskAddFriendReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AskAddFriendReq& AskAddFriendReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AskAddFriendReq* AskAddFriendReq::New(::google::protobuf::Arena* arena) const {
  AskAddFriendReq* n = new AskAddFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskAddFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool AskAddFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AskAddFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AskAddFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AskAddFriendReq)
  return false;
#undef DO_
}

void AskAddFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AskAddFriendReq)
}

::google::protobuf::uint8* AskAddFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AskAddFriendReq)
  return target;
}

size_t AskAddFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AskAddFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskAddFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AskAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AskAddFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AskAddFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AskAddFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AskAddFriendReq)
    MergeFrom(*source);
  }
}

void AskAddFriendReq::MergeFrom(const AskAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AskAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void AskAddFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AskAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskAddFriendReq::CopyFrom(const AskAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AskAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskAddFriendReq::IsInitialized() const {
  return true;
}

void AskAddFriendReq::Swap(AskAddFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskAddFriendReq::InternalSwap(AskAddFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskAddFriendReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskAddFriendReq

// uint32 target_uid = 1;
void AskAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AskAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendReq.target_uid)
  return target_uid_;
}
void AskAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskAddFriendRsp::kRetcodeFieldNumber;
const int AskAddFriendRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskAddFriendRsp::AskAddFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AskAddFriendRsp)
}
AskAddFriendRsp::AskAddFriendRsp(const AskAddFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.AskAddFriendRsp)
}

void AskAddFriendRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

AskAddFriendRsp::~AskAddFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.AskAddFriendRsp)
  SharedDtor();
}

void AskAddFriendRsp::SharedDtor() {
}

void AskAddFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskAddFriendRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AskAddFriendRsp& AskAddFriendRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AskAddFriendRsp* AskAddFriendRsp::New(::google::protobuf::Arena* arena) const {
  AskAddFriendRsp* n = new AskAddFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskAddFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool AskAddFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AskAddFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AskAddFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AskAddFriendRsp)
  return false;
#undef DO_
}

void AskAddFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AskAddFriendRsp)
}

::google::protobuf::uint8* AskAddFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AskAddFriendRsp)
  return target;
}

size_t AskAddFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AskAddFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskAddFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AskAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AskAddFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AskAddFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AskAddFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AskAddFriendRsp)
    MergeFrom(*source);
  }
}

void AskAddFriendRsp::MergeFrom(const AskAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AskAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void AskAddFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AskAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskAddFriendRsp::CopyFrom(const AskAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AskAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AskAddFriendRsp::IsInitialized() const {
  return true;
}

void AskAddFriendRsp::Swap(AskAddFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskAddFriendRsp::InternalSwap(AskAddFriendRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskAddFriendRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskAddFriendRsp

// int32 retcode = 1;
void AskAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AskAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.retcode)
  return retcode_;
}
void AskAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.retcode)
}

// uint32 target_uid = 2;
void AskAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 AskAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AskAddFriendRsp.target_uid)
  return target_uid_;
}
void AskAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AskAddFriendRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DealAddFriendReq::kTargetUidFieldNumber;
const int DealAddFriendReq::kDealAddFriendResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DealAddFriendReq::DealAddFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DealAddFriendReq)
}
DealAddFriendReq::DealAddFriendReq(const DealAddFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&deal_add_friend_result_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  // @@protoc_insertion_point(copy_constructor:proto.DealAddFriendReq)
}

void DealAddFriendReq::SharedCtor() {
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deal_add_friend_result_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  _cached_size_ = 0;
}

DealAddFriendReq::~DealAddFriendReq() {
  // @@protoc_insertion_point(destructor:proto.DealAddFriendReq)
  SharedDtor();
}

void DealAddFriendReq::SharedDtor() {
}

void DealAddFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DealAddFriendReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DealAddFriendReq& DealAddFriendReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DealAddFriendReq* DealAddFriendReq::New(::google::protobuf::Arena* arena) const {
  DealAddFriendReq* n = new DealAddFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DealAddFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deal_add_friend_result_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  _internal_metadata_.Clear();
}

bool DealAddFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DealAddFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DealAddFriendResultType deal_add_friend_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_deal_add_friend_result(static_cast< ::proto::DealAddFriendResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DealAddFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DealAddFriendReq)
  return false;
#undef DO_
}

void DealAddFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 2;
  if (this->deal_add_friend_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->deal_add_friend_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DealAddFriendReq)
}

::google::protobuf::uint8* DealAddFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 2;
  if (this->deal_add_friend_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->deal_add_friend_result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DealAddFriendReq)
  return target;
}

size_t DealAddFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DealAddFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 2;
  if (this->deal_add_friend_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deal_add_friend_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DealAddFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DealAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DealAddFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DealAddFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DealAddFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DealAddFriendReq)
    MergeFrom(*source);
  }
}

void DealAddFriendReq::MergeFrom(const DealAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DealAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.deal_add_friend_result() != 0) {
    set_deal_add_friend_result(from.deal_add_friend_result());
  }
}

void DealAddFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DealAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DealAddFriendReq::CopyFrom(const DealAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DealAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DealAddFriendReq::IsInitialized() const {
  return true;
}

void DealAddFriendReq::Swap(DealAddFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DealAddFriendReq::InternalSwap(DealAddFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  swap(deal_add_friend_result_, other->deal_add_friend_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DealAddFriendReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DealAddFriendReq

// uint32 target_uid = 1;
void DealAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DealAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendReq.target_uid)
  return target_uid_;
}
void DealAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendReq.target_uid)
}

// .proto.DealAddFriendResultType deal_add_friend_result = 2;
void DealAddFriendReq::clear_deal_add_friend_result() {
  deal_add_friend_result_ = 0;
}
::proto::DealAddFriendResultType DealAddFriendReq::deal_add_friend_result() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendReq.deal_add_friend_result)
  return static_cast< ::proto::DealAddFriendResultType >(deal_add_friend_result_);
}
void DealAddFriendReq::set_deal_add_friend_result(::proto::DealAddFriendResultType value) {
  
  deal_add_friend_result_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendReq.deal_add_friend_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DealAddFriendRsp::kRetcodeFieldNumber;
const int DealAddFriendRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DealAddFriendRsp::DealAddFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DealAddFriendRsp)
}
DealAddFriendRsp::DealAddFriendRsp(const DealAddFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.DealAddFriendRsp)
}

void DealAddFriendRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

DealAddFriendRsp::~DealAddFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.DealAddFriendRsp)
  SharedDtor();
}

void DealAddFriendRsp::SharedDtor() {
}

void DealAddFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DealAddFriendRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DealAddFriendRsp& DealAddFriendRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DealAddFriendRsp* DealAddFriendRsp::New(::google::protobuf::Arena* arena) const {
  DealAddFriendRsp* n = new DealAddFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DealAddFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool DealAddFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DealAddFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DealAddFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DealAddFriendRsp)
  return false;
#undef DO_
}

void DealAddFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DealAddFriendRsp)
}

::google::protobuf::uint8* DealAddFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DealAddFriendRsp)
  return target;
}

size_t DealAddFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DealAddFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DealAddFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DealAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DealAddFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DealAddFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DealAddFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DealAddFriendRsp)
    MergeFrom(*source);
  }
}

void DealAddFriendRsp::MergeFrom(const DealAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DealAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void DealAddFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DealAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DealAddFriendRsp::CopyFrom(const DealAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DealAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DealAddFriendRsp::IsInitialized() const {
  return true;
}

void DealAddFriendRsp::Swap(DealAddFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DealAddFriendRsp::InternalSwap(DealAddFriendRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DealAddFriendRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DealAddFriendRsp

// int32 retcode = 1;
void DealAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 DealAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.retcode)
  return retcode_;
}
void DealAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.retcode)
}

// uint32 target_uid = 2;
void DealAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DealAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DealAddFriendRsp.target_uid)
  return target_uid_;
}
void DealAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DealAddFriendRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerSocialDetailReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerSocialDetailReq::GetPlayerSocialDetailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerSocialDetailReq)
}
GetPlayerSocialDetailReq::GetPlayerSocialDetailReq(const GetPlayerSocialDetailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerSocialDetailReq)
}

void GetPlayerSocialDetailReq::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

GetPlayerSocialDetailReq::~GetPlayerSocialDetailReq() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerSocialDetailReq)
  SharedDtor();
}

void GetPlayerSocialDetailReq::SharedDtor() {
}

void GetPlayerSocialDetailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerSocialDetailReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerSocialDetailReq& GetPlayerSocialDetailReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerSocialDetailReq* GetPlayerSocialDetailReq::New(::google::protobuf::Arena* arena) const {
  GetPlayerSocialDetailReq* n = new GetPlayerSocialDetailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerSocialDetailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool GetPlayerSocialDetailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerSocialDetailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerSocialDetailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerSocialDetailReq)
  return false;
#undef DO_
}

void GetPlayerSocialDetailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerSocialDetailReq)
}

::google::protobuf::uint8* GetPlayerSocialDetailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerSocialDetailReq)
  return target;
}

size_t GetPlayerSocialDetailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerSocialDetailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerSocialDetailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerSocialDetailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerSocialDetailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerSocialDetailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerSocialDetailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerSocialDetailReq)
    MergeFrom(*source);
  }
}

void GetPlayerSocialDetailReq::MergeFrom(const GetPlayerSocialDetailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerSocialDetailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void GetPlayerSocialDetailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerSocialDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerSocialDetailReq::CopyFrom(const GetPlayerSocialDetailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerSocialDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerSocialDetailReq::IsInitialized() const {
  return true;
}

void GetPlayerSocialDetailReq::Swap(GetPlayerSocialDetailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerSocialDetailReq::InternalSwap(GetPlayerSocialDetailReq* other) {
  using std::swap;
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerSocialDetailReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerSocialDetailReq

// uint32 uid = 1;
void GetPlayerSocialDetailReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GetPlayerSocialDetailReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailReq.uid)
  return uid_;
}
void GetPlayerSocialDetailReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerSocialDetailReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPlayerSocialDetailRsp::kRetcodeFieldNumber;
const int GetPlayerSocialDetailRsp::kDetailDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPlayerSocialDetailRsp::GetPlayerSocialDetailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetPlayerSocialDetailRsp)
}
GetPlayerSocialDetailRsp::GetPlayerSocialDetailRsp(const GetPlayerSocialDetailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_detail_data()) {
    detail_data_ = new ::proto::SocialDetail(*from.detail_data_);
  } else {
    detail_data_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetPlayerSocialDetailRsp)
}

void GetPlayerSocialDetailRsp::SharedCtor() {
  ::memset(&detail_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&detail_data_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetPlayerSocialDetailRsp::~GetPlayerSocialDetailRsp() {
  // @@protoc_insertion_point(destructor:proto.GetPlayerSocialDetailRsp)
  SharedDtor();
}

void GetPlayerSocialDetailRsp::SharedDtor() {
  if (this != internal_default_instance()) delete detail_data_;
}

void GetPlayerSocialDetailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPlayerSocialDetailRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPlayerSocialDetailRsp& GetPlayerSocialDetailRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPlayerSocialDetailRsp* GetPlayerSocialDetailRsp::New(::google::protobuf::Arena* arena) const {
  GetPlayerSocialDetailRsp* n = new GetPlayerSocialDetailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPlayerSocialDetailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPlayerSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && detail_data_ != NULL) {
    delete detail_data_;
  }
  detail_data_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetPlayerSocialDetailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetPlayerSocialDetailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SocialDetail detail_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detail_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetPlayerSocialDetailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetPlayerSocialDetailRsp)
  return false;
#undef DO_
}

void GetPlayerSocialDetailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetPlayerSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.SocialDetail detail_data = 2;
  if (this->has_detail_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->detail_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetPlayerSocialDetailRsp)
}

::google::protobuf::uint8* GetPlayerSocialDetailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPlayerSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.SocialDetail detail_data = 2;
  if (this->has_detail_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->detail_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPlayerSocialDetailRsp)
  return target;
}

size_t GetPlayerSocialDetailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPlayerSocialDetailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.SocialDetail detail_data = 2;
  if (this->has_detail_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->detail_data_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPlayerSocialDetailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetPlayerSocialDetailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPlayerSocialDetailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPlayerSocialDetailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetPlayerSocialDetailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetPlayerSocialDetailRsp)
    MergeFrom(*source);
  }
}

void GetPlayerSocialDetailRsp::MergeFrom(const GetPlayerSocialDetailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPlayerSocialDetailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_detail_data()) {
    mutable_detail_data()->::proto::SocialDetail::MergeFrom(from.detail_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetPlayerSocialDetailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetPlayerSocialDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPlayerSocialDetailRsp::CopyFrom(const GetPlayerSocialDetailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPlayerSocialDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPlayerSocialDetailRsp::IsInitialized() const {
  return true;
}

void GetPlayerSocialDetailRsp::Swap(GetPlayerSocialDetailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPlayerSocialDetailRsp::InternalSwap(GetPlayerSocialDetailRsp* other) {
  using std::swap;
  swap(detail_data_, other->detail_data_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPlayerSocialDetailRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPlayerSocialDetailRsp

// int32 retcode = 1;
void GetPlayerSocialDetailRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetPlayerSocialDetailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailRsp.retcode)
  return retcode_;
}
void GetPlayerSocialDetailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerSocialDetailRsp.retcode)
}

// .proto.SocialDetail detail_data = 2;
bool GetPlayerSocialDetailRsp::has_detail_data() const {
  return this != internal_default_instance() && detail_data_ != NULL;
}
void GetPlayerSocialDetailRsp::clear_detail_data() {
  if (GetArenaNoVirtual() == NULL && detail_data_ != NULL) delete detail_data_;
  detail_data_ = NULL;
}
const ::proto::SocialDetail& GetPlayerSocialDetailRsp::detail_data() const {
  const ::proto::SocialDetail* p = detail_data_;
  // @@protoc_insertion_point(field_get:proto.GetPlayerSocialDetailRsp.detail_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SocialDetail*>(
      &::proto::_SocialDetail_default_instance_);
}
::proto::SocialDetail* GetPlayerSocialDetailRsp::mutable_detail_data() {
  
  if (detail_data_ == NULL) {
    detail_data_ = new ::proto::SocialDetail;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerSocialDetailRsp.detail_data)
  return detail_data_;
}
::proto::SocialDetail* GetPlayerSocialDetailRsp::release_detail_data() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerSocialDetailRsp.detail_data)
  
  ::proto::SocialDetail* temp = detail_data_;
  detail_data_ = NULL;
  return temp;
}
void GetPlayerSocialDetailRsp::set_allocated_detail_data(::proto::SocialDetail* detail_data) {
  delete detail_data_;
  detail_data_ = detail_data;
  if (detail_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerSocialDetailRsp.detail_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendReq::DeleteFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeleteFriendReq)
}
DeleteFriendReq::DeleteFriendReq(const DeleteFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.DeleteFriendReq)
}

void DeleteFriendReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

DeleteFriendReq::~DeleteFriendReq() {
  // @@protoc_insertion_point(destructor:proto.DeleteFriendReq)
  SharedDtor();
}

void DeleteFriendReq::SharedDtor() {
}

void DeleteFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFriendReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendReq& DeleteFriendReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFriendReq* DeleteFriendReq::New(::google::protobuf::Arena* arena) const {
  DeleteFriendReq* n = new DeleteFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool DeleteFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeleteFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeleteFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeleteFriendReq)
  return false;
#undef DO_
}

void DeleteFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeleteFriendReq)
}

::google::protobuf::uint8* DeleteFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteFriendReq)
  return target;
}

size_t DeleteFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeleteFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeleteFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeleteFriendReq)
    MergeFrom(*source);
  }
}

void DeleteFriendReq::MergeFrom(const DeleteFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void DeleteFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeleteFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendReq::CopyFrom(const DeleteFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendReq::IsInitialized() const {
  return true;
}

void DeleteFriendReq::Swap(DeleteFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendReq::InternalSwap(DeleteFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFriendReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFriendReq

// uint32 target_uid = 1;
void DeleteFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DeleteFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendReq.target_uid)
  return target_uid_;
}
void DeleteFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteFriendRsp::kRetcodeFieldNumber;
const int DeleteFriendRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteFriendRsp::DeleteFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DeleteFriendRsp)
}
DeleteFriendRsp::DeleteFriendRsp(const DeleteFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.DeleteFriendRsp)
}

void DeleteFriendRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

DeleteFriendRsp::~DeleteFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.DeleteFriendRsp)
  SharedDtor();
}

void DeleteFriendRsp::SharedDtor() {
}

void DeleteFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeleteFriendRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteFriendRsp& DeleteFriendRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeleteFriendRsp* DeleteFriendRsp::New(::google::protobuf::Arena* arena) const {
  DeleteFriendRsp* n = new DeleteFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeleteFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool DeleteFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DeleteFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DeleteFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DeleteFriendRsp)
  return false;
#undef DO_
}

void DeleteFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DeleteFriendRsp)
}

::google::protobuf::uint8* DeleteFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteFriendRsp)
  return target;
}

size_t DeleteFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeleteFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DeleteFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DeleteFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DeleteFriendRsp)
    MergeFrom(*source);
  }
}

void DeleteFriendRsp::MergeFrom(const DeleteFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void DeleteFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DeleteFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteFriendRsp::CopyFrom(const DeleteFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteFriendRsp::IsInitialized() const {
  return true;
}

void DeleteFriendRsp::Swap(DeleteFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteFriendRsp::InternalSwap(DeleteFriendRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeleteFriendRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeleteFriendRsp

// int32 retcode = 1;
void DeleteFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 DeleteFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendRsp.retcode)
  return retcode_;
}
void DeleteFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendRsp.retcode)
}

// uint32 target_uid = 2;
void DeleteFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 DeleteFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DeleteFriendRsp.target_uid)
  return target_uid_;
}
void DeleteFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DeleteFriendRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerBirthdayReq::kBirthdayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerBirthdayReq::SetPlayerBirthdayReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerBirthdayReq)
}
SetPlayerBirthdayReq::SetPlayerBirthdayReq(const SetPlayerBirthdayReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_birthday()) {
    birthday_ = new ::proto::Birthday(*from.birthday_);
  } else {
    birthday_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerBirthdayReq)
}

void SetPlayerBirthdayReq::SharedCtor() {
  birthday_ = NULL;
  _cached_size_ = 0;
}

SetPlayerBirthdayReq::~SetPlayerBirthdayReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerBirthdayReq)
  SharedDtor();
}

void SetPlayerBirthdayReq::SharedDtor() {
  if (this != internal_default_instance()) delete birthday_;
}

void SetPlayerBirthdayReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerBirthdayReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerBirthdayReq& SetPlayerBirthdayReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerBirthdayReq* SetPlayerBirthdayReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerBirthdayReq* n = new SetPlayerBirthdayReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerBirthdayReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerBirthdayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) {
    delete birthday_;
  }
  birthday_ = NULL;
  _internal_metadata_.Clear();
}

bool SetPlayerBirthdayReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerBirthdayReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Birthday birthday = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_birthday()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerBirthdayReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerBirthdayReq)
  return false;
#undef DO_
}

void SetPlayerBirthdayReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerBirthdayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Birthday birthday = 1;
  if (this->has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->birthday_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerBirthdayReq)
}

::google::protobuf::uint8* SetPlayerBirthdayReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerBirthdayReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Birthday birthday = 1;
  if (this->has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->birthday_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerBirthdayReq)
  return target;
}

size_t SetPlayerBirthdayReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerBirthdayReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Birthday birthday = 1;
  if (this->has_birthday()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->birthday_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerBirthdayReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerBirthdayReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerBirthdayReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerBirthdayReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerBirthdayReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerBirthdayReq)
    MergeFrom(*source);
  }
}

void SetPlayerBirthdayReq::MergeFrom(const SetPlayerBirthdayReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerBirthdayReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_birthday()) {
    mutable_birthday()->::proto::Birthday::MergeFrom(from.birthday());
  }
}

void SetPlayerBirthdayReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerBirthdayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerBirthdayReq::CopyFrom(const SetPlayerBirthdayReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerBirthdayReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerBirthdayReq::IsInitialized() const {
  return true;
}

void SetPlayerBirthdayReq::Swap(SetPlayerBirthdayReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerBirthdayReq::InternalSwap(SetPlayerBirthdayReq* other) {
  using std::swap;
  swap(birthday_, other->birthday_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerBirthdayReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerBirthdayReq

// .proto.Birthday birthday = 1;
bool SetPlayerBirthdayReq::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
void SetPlayerBirthdayReq::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
const ::proto::Birthday& SetPlayerBirthdayReq::birthday() const {
  const ::proto::Birthday* p = birthday_;
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayReq.birthday)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Birthday*>(
      &::proto::_Birthday_default_instance_);
}
::proto::Birthday* SetPlayerBirthdayReq::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::proto::Birthday;
  }
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBirthdayReq.birthday)
  return birthday_;
}
::proto::Birthday* SetPlayerBirthdayReq::release_birthday() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBirthdayReq.birthday)
  
  ::proto::Birthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
void SetPlayerBirthdayReq::set_allocated_birthday(::proto::Birthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBirthdayReq.birthday)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerBirthdayRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerBirthdayRsp::SetPlayerBirthdayRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerBirthdayRsp)
}
SetPlayerBirthdayRsp::SetPlayerBirthdayRsp(const SetPlayerBirthdayRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerBirthdayRsp)
}

void SetPlayerBirthdayRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerBirthdayRsp::~SetPlayerBirthdayRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerBirthdayRsp)
  SharedDtor();
}

void SetPlayerBirthdayRsp::SharedDtor() {
}

void SetPlayerBirthdayRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerBirthdayRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerBirthdayRsp& SetPlayerBirthdayRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerBirthdayRsp* SetPlayerBirthdayRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerBirthdayRsp* n = new SetPlayerBirthdayRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerBirthdayRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerBirthdayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerBirthdayRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerBirthdayRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerBirthdayRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerBirthdayRsp)
  return false;
#undef DO_
}

void SetPlayerBirthdayRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerBirthdayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerBirthdayRsp)
}

::google::protobuf::uint8* SetPlayerBirthdayRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerBirthdayRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerBirthdayRsp)
  return target;
}

size_t SetPlayerBirthdayRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerBirthdayRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerBirthdayRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerBirthdayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerBirthdayRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerBirthdayRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerBirthdayRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerBirthdayRsp)
    MergeFrom(*source);
  }
}

void SetPlayerBirthdayRsp::MergeFrom(const SetPlayerBirthdayRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerBirthdayRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerBirthdayRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerBirthdayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerBirthdayRsp::CopyFrom(const SetPlayerBirthdayRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerBirthdayRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerBirthdayRsp::IsInitialized() const {
  return true;
}

void SetPlayerBirthdayRsp::Swap(SetPlayerBirthdayRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerBirthdayRsp::InternalSwap(SetPlayerBirthdayRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerBirthdayRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerBirthdayRsp

// int32 retcode = 1;
void SetPlayerBirthdayRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerBirthdayRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBirthdayRsp.retcode)
  return retcode_;
}
void SetPlayerBirthdayRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBirthdayRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerSignatureReq::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerSignatureReq::SetPlayerSignatureReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerSignatureReq)
}
SetPlayerSignatureReq::SetPlayerSignatureReq(const SetPlayerSignatureReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerSignatureReq)
}

void SetPlayerSignatureReq::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SetPlayerSignatureReq::~SetPlayerSignatureReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerSignatureReq)
  SharedDtor();
}

void SetPlayerSignatureReq::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetPlayerSignatureReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerSignatureReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerSignatureReq& SetPlayerSignatureReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerSignatureReq* SetPlayerSignatureReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerSignatureReq* n = new SetPlayerSignatureReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerSignatureReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SetPlayerSignatureReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerSignatureReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetPlayerSignatureReq.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerSignatureReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerSignatureReq)
  return false;
#undef DO_
}

void SetPlayerSignatureReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerSignatureReq.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerSignatureReq)
}

::google::protobuf::uint8* SetPlayerSignatureReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SetPlayerSignatureReq.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerSignatureReq)
  return target;
}

size_t SetPlayerSignatureReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerSignatureReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerSignatureReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerSignatureReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerSignatureReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerSignatureReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerSignatureReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerSignatureReq)
    MergeFrom(*source);
  }
}

void SetPlayerSignatureReq::MergeFrom(const SetPlayerSignatureReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerSignatureReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void SetPlayerSignatureReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerSignatureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerSignatureReq::CopyFrom(const SetPlayerSignatureReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerSignatureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerSignatureReq::IsInitialized() const {
  return true;
}

void SetPlayerSignatureReq::Swap(SetPlayerSignatureReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerSignatureReq::InternalSwap(SetPlayerSignatureReq* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerSignatureReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerSignatureReq

// string signature = 1;
void SetPlayerSignatureReq::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetPlayerSignatureReq::signature() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureReq.signature)
  return signature_.GetNoArena();
}
void SetPlayerSignatureReq::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureReq.signature)
}
#if LANG_CXX11
void SetPlayerSignatureReq::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerSignatureReq.signature)
}
#endif
void SetPlayerSignatureReq::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerSignatureReq.signature)
}
void SetPlayerSignatureReq::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerSignatureReq.signature)
}
::std::string* SetPlayerSignatureReq::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerSignatureReq.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetPlayerSignatureReq::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerSignatureReq.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetPlayerSignatureReq::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerSignatureReq.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerSignatureRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerSignatureRsp::SetPlayerSignatureRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerSignatureRsp)
}
SetPlayerSignatureRsp::SetPlayerSignatureRsp(const SetPlayerSignatureRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerSignatureRsp)
}

void SetPlayerSignatureRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerSignatureRsp::~SetPlayerSignatureRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerSignatureRsp)
  SharedDtor();
}

void SetPlayerSignatureRsp::SharedDtor() {
}

void SetPlayerSignatureRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerSignatureRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerSignatureRsp& SetPlayerSignatureRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerSignatureRsp* SetPlayerSignatureRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerSignatureRsp* n = new SetPlayerSignatureRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerSignatureRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerSignatureRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerSignatureRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerSignatureRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerSignatureRsp)
  return false;
#undef DO_
}

void SetPlayerSignatureRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerSignatureRsp)
}

::google::protobuf::uint8* SetPlayerSignatureRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerSignatureRsp)
  return target;
}

size_t SetPlayerSignatureRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerSignatureRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerSignatureRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerSignatureRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerSignatureRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerSignatureRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerSignatureRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerSignatureRsp)
    MergeFrom(*source);
  }
}

void SetPlayerSignatureRsp::MergeFrom(const SetPlayerSignatureRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerSignatureRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerSignatureRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerSignatureRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerSignatureRsp::CopyFrom(const SetPlayerSignatureRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerSignatureRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerSignatureRsp::IsInitialized() const {
  return true;
}

void SetPlayerSignatureRsp::Swap(SetPlayerSignatureRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerSignatureRsp::InternalSwap(SetPlayerSignatureRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerSignatureRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerSignatureRsp

// int32 retcode = 1;
void SetPlayerSignatureRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerSignatureRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerSignatureRsp.retcode)
  return retcode_;
}
void SetPlayerSignatureRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerSignatureRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerHeadImageReq::kAvatarIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerHeadImageReq::SetPlayerHeadImageReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerHeadImageReq)
}
SetPlayerHeadImageReq::SetPlayerHeadImageReq(const SetPlayerHeadImageReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_id_ = from.avatar_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerHeadImageReq)
}

void SetPlayerHeadImageReq::SharedCtor() {
  avatar_id_ = 0u;
  _cached_size_ = 0;
}

SetPlayerHeadImageReq::~SetPlayerHeadImageReq() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerHeadImageReq)
  SharedDtor();
}

void SetPlayerHeadImageReq::SharedDtor() {
}

void SetPlayerHeadImageReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerHeadImageReq::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerHeadImageReq& SetPlayerHeadImageReq::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerHeadImageReq* SetPlayerHeadImageReq::New(::google::protobuf::Arena* arena) const {
  SetPlayerHeadImageReq* n = new SetPlayerHeadImageReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerHeadImageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerHeadImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SetPlayerHeadImageReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerHeadImageReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 avatar_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerHeadImageReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerHeadImageReq)
  return false;
#undef DO_
}

void SetPlayerHeadImageReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerHeadImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->avatar_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerHeadImageReq)
}

::google::protobuf::uint8* SetPlayerHeadImageReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerHeadImageReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->avatar_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerHeadImageReq)
  return target;
}

size_t SetPlayerHeadImageReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerHeadImageReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 avatar_id = 1;
  if (this->avatar_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerHeadImageReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerHeadImageReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerHeadImageReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerHeadImageReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerHeadImageReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerHeadImageReq)
    MergeFrom(*source);
  }
}

void SetPlayerHeadImageReq::MergeFrom(const SetPlayerHeadImageReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerHeadImageReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avatar_id() != 0) {
    set_avatar_id(from.avatar_id());
  }
}

void SetPlayerHeadImageReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerHeadImageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerHeadImageReq::CopyFrom(const SetPlayerHeadImageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerHeadImageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerHeadImageReq::IsInitialized() const {
  return true;
}

void SetPlayerHeadImageReq::Swap(SetPlayerHeadImageReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerHeadImageReq::InternalSwap(SetPlayerHeadImageReq* other) {
  using std::swap;
  swap(avatar_id_, other->avatar_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerHeadImageReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerHeadImageReq

// uint32 avatar_id = 1;
void SetPlayerHeadImageReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
::google::protobuf::uint32 SetPlayerHeadImageReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageReq.avatar_id)
  return avatar_id_;
}
void SetPlayerHeadImageReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageReq.avatar_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetPlayerHeadImageRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetPlayerHeadImageRsp::SetPlayerHeadImageRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetPlayerHeadImageRsp)
}
SetPlayerHeadImageRsp::SetPlayerHeadImageRsp(const SetPlayerHeadImageRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetPlayerHeadImageRsp)
}

void SetPlayerHeadImageRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetPlayerHeadImageRsp::~SetPlayerHeadImageRsp() {
  // @@protoc_insertion_point(destructor:proto.SetPlayerHeadImageRsp)
  SharedDtor();
}

void SetPlayerHeadImageRsp::SharedDtor() {
}

void SetPlayerHeadImageRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetPlayerHeadImageRsp::descriptor() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetPlayerHeadImageRsp& SetPlayerHeadImageRsp::default_instance() {
  protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetPlayerHeadImageRsp* SetPlayerHeadImageRsp::New(::google::protobuf::Arena* arena) const {
  SetPlayerHeadImageRsp* n = new SetPlayerHeadImageRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetPlayerHeadImageRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetPlayerHeadImageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetPlayerHeadImageRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetPlayerHeadImageRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetPlayerHeadImageRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetPlayerHeadImageRsp)
  return false;
#undef DO_
}

void SetPlayerHeadImageRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetPlayerHeadImageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetPlayerHeadImageRsp)
}

::google::protobuf::uint8* SetPlayerHeadImageRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetPlayerHeadImageRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetPlayerHeadImageRsp)
  return target;
}

size_t SetPlayerHeadImageRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetPlayerHeadImageRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetPlayerHeadImageRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetPlayerHeadImageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetPlayerHeadImageRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetPlayerHeadImageRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetPlayerHeadImageRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetPlayerHeadImageRsp)
    MergeFrom(*source);
  }
}

void SetPlayerHeadImageRsp::MergeFrom(const SetPlayerHeadImageRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetPlayerHeadImageRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetPlayerHeadImageRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetPlayerHeadImageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetPlayerHeadImageRsp::CopyFrom(const SetPlayerHeadImageRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetPlayerHeadImageRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetPlayerHeadImageRsp::IsInitialized() const {
  return true;
}

void SetPlayerHeadImageRsp::Swap(SetPlayerHeadImageRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetPlayerHeadImageRsp::InternalSwap(SetPlayerHeadImageRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetPlayerHeadImageRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fsocial_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetPlayerHeadImageRsp

// int32 retcode = 1;
void SetPlayerHeadImageRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetPlayerHeadImageRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerHeadImageRsp.retcode)
  return retcode_;
}
void SetPlayerHeadImageRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerHeadImageRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
