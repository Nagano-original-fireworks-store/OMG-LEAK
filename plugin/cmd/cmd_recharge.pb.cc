// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_recharge.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_recharge.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class RechargeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RechargeReq>
     _instance;
} _RechargeReq_default_instance_;
class RechargeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RechargeRsp>
     _instance;
} _RechargeRsp_default_instance_;
class OrderFinishNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OrderFinishNotify>
     _instance;
} _OrderFinishNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5frecharge_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeReq, product_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderFinishNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderFinishNotify, product_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(RechargeReq)},
  { 6, -1, sizeof(RechargeRsp)},
  { 12, -1, sizeof(OrderFinishNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RechargeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RechargeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrderFinishNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_recharge.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _RechargeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RechargeReq_default_instance_);_RechargeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RechargeRsp_default_instance_);_OrderFinishNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OrderFinishNotify_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026cmd/cmd_recharge.proto\022\005proto\032\014define."
      "proto\"\205\001\n\013RechargeReq\022\022\n\nproduct_id\030\001 \001("
      "\t\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\205 \022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017"
      "IS_ALLOW_CLIENT\020\001\032\002\020\001\"m\n\013RechargeRsp\022\017\n\007"
      "retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\206 \022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\032\002\020\001\"v\n\021OrderFinishNotify\022\022\n\npro"
      "duct_id\030\001 \001(\t\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\207 \022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\032\002\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 420);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_recharge.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5frecharge_2eproto

const ::google::protobuf::EnumDescriptor* RechargeReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_enum_descriptors[0];
}
bool RechargeReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4101:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RechargeReq_CmdId RechargeReq::NONE;
const RechargeReq_CmdId RechargeReq::CMD_ID;
const RechargeReq_CmdId RechargeReq::ENET_CHANNEL_ID;
const RechargeReq_CmdId RechargeReq::ENET_IS_RELIABLE;
const RechargeReq_CmdId RechargeReq::IS_ALLOW_CLIENT;
const RechargeReq_CmdId RechargeReq::CmdId_MIN;
const RechargeReq_CmdId RechargeReq::CmdId_MAX;
const int RechargeReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* RechargeRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_enum_descriptors[1];
}
bool RechargeRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4102:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RechargeRsp_CmdId RechargeRsp::NONE;
const RechargeRsp_CmdId RechargeRsp::CMD_ID;
const RechargeRsp_CmdId RechargeRsp::ENET_CHANNEL_ID;
const RechargeRsp_CmdId RechargeRsp::ENET_IS_RELIABLE;
const RechargeRsp_CmdId RechargeRsp::CmdId_MIN;
const RechargeRsp_CmdId RechargeRsp::CmdId_MAX;
const int RechargeRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OrderFinishNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_enum_descriptors[2];
}
bool OrderFinishNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 4103:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OrderFinishNotify_CmdId OrderFinishNotify::NONE;
const OrderFinishNotify_CmdId OrderFinishNotify::CMD_ID;
const OrderFinishNotify_CmdId OrderFinishNotify::ENET_CHANNEL_ID;
const OrderFinishNotify_CmdId OrderFinishNotify::ENET_IS_RELIABLE;
const OrderFinishNotify_CmdId OrderFinishNotify::CmdId_MIN;
const OrderFinishNotify_CmdId OrderFinishNotify::CmdId_MAX;
const int OrderFinishNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RechargeReq::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RechargeReq::RechargeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RechargeReq)
}
RechargeReq::RechargeReq(const RechargeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RechargeReq)
}

void RechargeReq::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RechargeReq::~RechargeReq() {
  // @@protoc_insertion_point(destructor:proto.RechargeReq)
  SharedDtor();
}

void RechargeReq::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RechargeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeReq::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RechargeReq& RechargeReq::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

RechargeReq* RechargeReq::New(::google::protobuf::Arena* arena) const {
  RechargeReq* n = new RechargeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RechargeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RechargeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RechargeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RechargeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.RechargeReq.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RechargeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RechargeReq)
  return false;
#undef DO_
}

void RechargeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RechargeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RechargeReq.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RechargeReq)
}

::google::protobuf::uint8* RechargeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RechargeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.RechargeReq.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RechargeReq)
  return target;
}

size_t RechargeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RechargeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 1;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RechargeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RechargeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RechargeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RechargeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RechargeReq)
    MergeFrom(*source);
  }
}

void RechargeReq::MergeFrom(const RechargeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RechargeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
}

void RechargeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RechargeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeReq::CopyFrom(const RechargeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RechargeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeReq::IsInitialized() const {
  return true;
}

void RechargeReq::Swap(RechargeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RechargeReq::InternalSwap(RechargeReq* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RechargeReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RechargeReq

// string product_id = 1;
void RechargeReq::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RechargeReq::product_id() const {
  // @@protoc_insertion_point(field_get:proto.RechargeReq.product_id)
  return product_id_.GetNoArena();
}
void RechargeReq::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RechargeReq.product_id)
}
#if LANG_CXX11
void RechargeReq::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RechargeReq.product_id)
}
#endif
void RechargeReq::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RechargeReq.product_id)
}
void RechargeReq::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RechargeReq.product_id)
}
::std::string* RechargeReq::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.RechargeReq.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RechargeReq::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.RechargeReq.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RechargeReq::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeReq.product_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RechargeRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RechargeRsp::RechargeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RechargeRsp)
}
RechargeRsp::RechargeRsp(const RechargeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.RechargeRsp)
}

void RechargeRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

RechargeRsp::~RechargeRsp() {
  // @@protoc_insertion_point(destructor:proto.RechargeRsp)
  SharedDtor();
}

void RechargeRsp::SharedDtor() {
}

void RechargeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeRsp::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RechargeRsp& RechargeRsp::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

RechargeRsp* RechargeRsp::New(::google::protobuf::Arena* arena) const {
  RechargeRsp* n = new RechargeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RechargeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RechargeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool RechargeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RechargeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RechargeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RechargeRsp)
  return false;
#undef DO_
}

void RechargeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RechargeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RechargeRsp)
}

::google::protobuf::uint8* RechargeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RechargeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RechargeRsp)
  return target;
}

size_t RechargeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RechargeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RechargeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RechargeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RechargeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RechargeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RechargeRsp)
    MergeFrom(*source);
  }
}

void RechargeRsp::MergeFrom(const RechargeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RechargeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void RechargeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RechargeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeRsp::CopyFrom(const RechargeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RechargeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeRsp::IsInitialized() const {
  return true;
}

void RechargeRsp::Swap(RechargeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RechargeRsp::InternalSwap(RechargeRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RechargeRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RechargeRsp

// int32 retcode = 1;
void RechargeRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RechargeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RechargeRsp.retcode)
  return retcode_;
}
void RechargeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RechargeRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderFinishNotify::kProductIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderFinishNotify::OrderFinishNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OrderFinishNotify)
}
OrderFinishNotify::OrderFinishNotify(const OrderFinishNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.OrderFinishNotify)
}

void OrderFinishNotify::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OrderFinishNotify::~OrderFinishNotify() {
  // @@protoc_insertion_point(destructor:proto.OrderFinishNotify)
  SharedDtor();
}

void OrderFinishNotify::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderFinishNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderFinishNotify::descriptor() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderFinishNotify& OrderFinishNotify::default_instance() {
  protobuf_cmd_2fcmd_5frecharge_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrderFinishNotify* OrderFinishNotify::New(::google::protobuf::Arena* arena) const {
  OrderFinishNotify* n = new OrderFinishNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderFinishNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OrderFinishNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OrderFinishNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string product_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.OrderFinishNotify.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OrderFinishNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OrderFinishNotify)
  return false;
#undef DO_
}

void OrderFinishNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OrderFinishNotify.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->product_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OrderFinishNotify)
}

::google::protobuf::uint8* OrderFinishNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OrderFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string product_id = 1;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.OrderFinishNotify.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->product_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OrderFinishNotify)
  return target;
}

size_t OrderFinishNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OrderFinishNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 1;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderFinishNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OrderFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderFinishNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderFinishNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OrderFinishNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OrderFinishNotify)
    MergeFrom(*source);
  }
}

void OrderFinishNotify::MergeFrom(const OrderFinishNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OrderFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
}

void OrderFinishNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OrderFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderFinishNotify::CopyFrom(const OrderFinishNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OrderFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderFinishNotify::IsInitialized() const {
  return true;
}

void OrderFinishNotify::Swap(OrderFinishNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderFinishNotify::InternalSwap(OrderFinishNotify* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderFinishNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5frecharge_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5frecharge_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderFinishNotify

// string product_id = 1;
void OrderFinishNotify::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OrderFinishNotify::product_id() const {
  // @@protoc_insertion_point(field_get:proto.OrderFinishNotify.product_id)
  return product_id_.GetNoArena();
}
void OrderFinishNotify::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OrderFinishNotify.product_id)
}
#if LANG_CXX11
void OrderFinishNotify::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OrderFinishNotify.product_id)
}
#endif
void OrderFinishNotify::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OrderFinishNotify.product_id)
}
void OrderFinishNotify::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OrderFinishNotify.product_id)
}
::std::string* OrderFinishNotify::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.OrderFinishNotify.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderFinishNotify::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.OrderFinishNotify.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderFinishNotify::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.OrderFinishNotify.product_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
