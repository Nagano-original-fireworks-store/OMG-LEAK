// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_recharge.proto

#ifndef PROTOBUF_cmd_2fcmd_5frecharge_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5frecharge_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class OrderFinishNotify;
class OrderFinishNotifyDefaultTypeInternal;
extern OrderFinishNotifyDefaultTypeInternal _OrderFinishNotify_default_instance_;
class RechargeReq;
class RechargeReqDefaultTypeInternal;
extern RechargeReqDefaultTypeInternal _RechargeReq_default_instance_;
class RechargeRsp;
class RechargeRspDefaultTypeInternal;
extern RechargeRspDefaultTypeInternal _RechargeRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5frecharge_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5frecharge_2eproto

enum RechargeReq_CmdId {
  RechargeReq_CmdId_NONE = 0,
  RechargeReq_CmdId_CMD_ID = 4101,
  RechargeReq_CmdId_ENET_CHANNEL_ID = 0,
  RechargeReq_CmdId_ENET_IS_RELIABLE = 1,
  RechargeReq_CmdId_IS_ALLOW_CLIENT = 1,
  RechargeReq_CmdId_RechargeReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RechargeReq_CmdId_RechargeReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RechargeReq_CmdId_IsValid(int value);
const RechargeReq_CmdId RechargeReq_CmdId_CmdId_MIN = RechargeReq_CmdId_NONE;
const RechargeReq_CmdId RechargeReq_CmdId_CmdId_MAX = RechargeReq_CmdId_CMD_ID;
const int RechargeReq_CmdId_CmdId_ARRAYSIZE = RechargeReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RechargeReq_CmdId_descriptor();
inline const ::std::string& RechargeReq_CmdId_Name(RechargeReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RechargeReq_CmdId_descriptor(), value);
}
inline bool RechargeReq_CmdId_Parse(
    const ::std::string& name, RechargeReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RechargeReq_CmdId>(
    RechargeReq_CmdId_descriptor(), name, value);
}
enum RechargeRsp_CmdId {
  RechargeRsp_CmdId_NONE = 0,
  RechargeRsp_CmdId_CMD_ID = 4102,
  RechargeRsp_CmdId_ENET_CHANNEL_ID = 0,
  RechargeRsp_CmdId_ENET_IS_RELIABLE = 1,
  RechargeRsp_CmdId_RechargeRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RechargeRsp_CmdId_RechargeRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RechargeRsp_CmdId_IsValid(int value);
const RechargeRsp_CmdId RechargeRsp_CmdId_CmdId_MIN = RechargeRsp_CmdId_NONE;
const RechargeRsp_CmdId RechargeRsp_CmdId_CmdId_MAX = RechargeRsp_CmdId_CMD_ID;
const int RechargeRsp_CmdId_CmdId_ARRAYSIZE = RechargeRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RechargeRsp_CmdId_descriptor();
inline const ::std::string& RechargeRsp_CmdId_Name(RechargeRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RechargeRsp_CmdId_descriptor(), value);
}
inline bool RechargeRsp_CmdId_Parse(
    const ::std::string& name, RechargeRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RechargeRsp_CmdId>(
    RechargeRsp_CmdId_descriptor(), name, value);
}
enum OrderFinishNotify_CmdId {
  OrderFinishNotify_CmdId_NONE = 0,
  OrderFinishNotify_CmdId_CMD_ID = 4103,
  OrderFinishNotify_CmdId_ENET_CHANNEL_ID = 0,
  OrderFinishNotify_CmdId_ENET_IS_RELIABLE = 1,
  OrderFinishNotify_CmdId_OrderFinishNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrderFinishNotify_CmdId_OrderFinishNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrderFinishNotify_CmdId_IsValid(int value);
const OrderFinishNotify_CmdId OrderFinishNotify_CmdId_CmdId_MIN = OrderFinishNotify_CmdId_NONE;
const OrderFinishNotify_CmdId OrderFinishNotify_CmdId_CmdId_MAX = OrderFinishNotify_CmdId_CMD_ID;
const int OrderFinishNotify_CmdId_CmdId_ARRAYSIZE = OrderFinishNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderFinishNotify_CmdId_descriptor();
inline const ::std::string& OrderFinishNotify_CmdId_Name(OrderFinishNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderFinishNotify_CmdId_descriptor(), value);
}
inline bool OrderFinishNotify_CmdId_Parse(
    const ::std::string& name, OrderFinishNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderFinishNotify_CmdId>(
    OrderFinishNotify_CmdId_descriptor(), name, value);
}
// ===================================================================

class RechargeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RechargeReq) */ {
 public:
  RechargeReq();
  virtual ~RechargeReq();

  RechargeReq(const RechargeReq& from);

  inline RechargeReq& operator=(const RechargeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RechargeReq(RechargeReq&& from) noexcept
    : RechargeReq() {
    *this = ::std::move(from);
  }

  inline RechargeReq& operator=(RechargeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeReq& default_instance();

  static inline const RechargeReq* internal_default_instance() {
    return reinterpret_cast<const RechargeReq*>(
               &_RechargeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RechargeReq* other);
  friend void swap(RechargeReq& a, RechargeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RechargeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RechargeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RechargeReq& from);
  void MergeFrom(const RechargeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RechargeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RechargeReq_CmdId CmdId;
  static const CmdId NONE =
    RechargeReq_CmdId_NONE;
  static const CmdId CMD_ID =
    RechargeReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RechargeReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RechargeReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    RechargeReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return RechargeReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RechargeReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RechargeReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RechargeReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RechargeReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RechargeReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RechargeReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string product_id = 1;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // @@protoc_insertion_point(class_scope:proto.RechargeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RechargeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RechargeRsp) */ {
 public:
  RechargeRsp();
  virtual ~RechargeRsp();

  RechargeRsp(const RechargeRsp& from);

  inline RechargeRsp& operator=(const RechargeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RechargeRsp(RechargeRsp&& from) noexcept
    : RechargeRsp() {
    *this = ::std::move(from);
  }

  inline RechargeRsp& operator=(RechargeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeRsp& default_instance();

  static inline const RechargeRsp* internal_default_instance() {
    return reinterpret_cast<const RechargeRsp*>(
               &_RechargeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RechargeRsp* other);
  friend void swap(RechargeRsp& a, RechargeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RechargeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RechargeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RechargeRsp& from);
  void MergeFrom(const RechargeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RechargeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RechargeRsp_CmdId CmdId;
  static const CmdId NONE =
    RechargeRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    RechargeRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RechargeRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RechargeRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return RechargeRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RechargeRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RechargeRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RechargeRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RechargeRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RechargeRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RechargeRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.RechargeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OrderFinishNotify) */ {
 public:
  OrderFinishNotify();
  virtual ~OrderFinishNotify();

  OrderFinishNotify(const OrderFinishNotify& from);

  inline OrderFinishNotify& operator=(const OrderFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderFinishNotify(OrderFinishNotify&& from) noexcept
    : OrderFinishNotify() {
    *this = ::std::move(from);
  }

  inline OrderFinishNotify& operator=(OrderFinishNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderFinishNotify& default_instance();

  static inline const OrderFinishNotify* internal_default_instance() {
    return reinterpret_cast<const OrderFinishNotify*>(
               &_OrderFinishNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(OrderFinishNotify* other);
  friend void swap(OrderFinishNotify& a, OrderFinishNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderFinishNotify& from);
  void MergeFrom(const OrderFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OrderFinishNotify_CmdId CmdId;
  static const CmdId NONE =
    OrderFinishNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    OrderFinishNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    OrderFinishNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    OrderFinishNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return OrderFinishNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    OrderFinishNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    OrderFinishNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    OrderFinishNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return OrderFinishNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return OrderFinishNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return OrderFinishNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string product_id = 1;
  void clear_product_id();
  static const int kProductIdFieldNumber = 1;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // @@protoc_insertion_point(class_scope:proto.OrderFinishNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5frecharge_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RechargeReq

// string product_id = 1;
inline void RechargeReq::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RechargeReq::product_id() const {
  // @@protoc_insertion_point(field_get:proto.RechargeReq.product_id)
  return product_id_.GetNoArena();
}
inline void RechargeReq::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.RechargeReq.product_id)
}
#if LANG_CXX11
inline void RechargeReq::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.RechargeReq.product_id)
}
#endif
inline void RechargeReq::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.RechargeReq.product_id)
}
inline void RechargeReq::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.RechargeReq.product_id)
}
inline ::std::string* RechargeReq::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.RechargeReq.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RechargeReq::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.RechargeReq.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RechargeReq::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeReq.product_id)
}

// -------------------------------------------------------------------

// RechargeRsp

// int32 retcode = 1;
inline void RechargeRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 RechargeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RechargeRsp.retcode)
  return retcode_;
}
inline void RechargeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RechargeRsp.retcode)
}

// -------------------------------------------------------------------

// OrderFinishNotify

// string product_id = 1;
inline void OrderFinishNotify::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OrderFinishNotify::product_id() const {
  // @@protoc_insertion_point(field_get:proto.OrderFinishNotify.product_id)
  return product_id_.GetNoArena();
}
inline void OrderFinishNotify::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OrderFinishNotify.product_id)
}
#if LANG_CXX11
inline void OrderFinishNotify::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OrderFinishNotify.product_id)
}
#endif
inline void OrderFinishNotify::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OrderFinishNotify.product_id)
}
inline void OrderFinishNotify::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OrderFinishNotify.product_id)
}
inline ::std::string* OrderFinishNotify::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.OrderFinishNotify.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderFinishNotify::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.OrderFinishNotify.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderFinishNotify::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.OrderFinishNotify.product_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::RechargeReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RechargeReq_CmdId>() {
  return ::proto::RechargeReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::RechargeRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RechargeRsp_CmdId>() {
  return ::proto::RechargeRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::OrderFinishNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OrderFinishNotify_CmdId>() {
  return ::proto::OrderFinishNotify_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5frecharge_2eproto__INCLUDED
