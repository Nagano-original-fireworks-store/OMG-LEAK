// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_scene.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "cmd/cmd_scene.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class PlayerEnterSceneNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerEnterSceneNotify>
     _instance;
} _PlayerEnterSceneNotify_default_instance_;
class LeaveSceneReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LeaveSceneReq>
     _instance;
} _LeaveSceneReq_default_instance_;
class LeaveSceneRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LeaveSceneRsp>
     _instance;
} _LeaveSceneRsp_default_instance_;
class SceneInitFinishReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneInitFinishReq>
     _instance;
} _SceneInitFinishReq_default_instance_;
class SceneInitFinishRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneInitFinishRsp>
     _instance;
} _SceneInitFinishRsp_default_instance_;
class SceneEntityAppearNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityAppearNotify>
     _instance;
} _SceneEntityAppearNotify_default_instance_;
class SceneEntityDisappearNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityDisappearNotify>
     _instance;
} _SceneEntityDisappearNotify_default_instance_;
class SceneEntityMoveReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityMoveReq>
     _instance;
} _SceneEntityMoveReq_default_instance_;
class SceneEntityMoveRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityMoveRsp>
     _instance;
} _SceneEntityMoveRsp_default_instance_;
class SceneAvatarStaminaStepReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAvatarStaminaStepReq>
     _instance;
} _SceneAvatarStaminaStepReq_default_instance_;
class SceneAvatarStaminaStepRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAvatarStaminaStepRsp>
     _instance;
} _SceneAvatarStaminaStepRsp_default_instance_;
class SceneEntityMoveNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityMoveNotify>
     _instance;
} _SceneEntityMoveNotify_default_instance_;
class ScenePlayerLocationNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ScenePlayerLocationNotify>
     _instance;
} _ScenePlayerLocationNotify_default_instance_;
class GetScenePointReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetScenePointReq>
     _instance;
} _GetScenePointReq_default_instance_;
class CityInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CityInfo>
     _instance;
} _CityInfo_default_instance_;
class GetScenePointRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetScenePointRsp>
     _instance;
} _GetScenePointRsp_default_instance_;
class EnterTransPointRegionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterTransPointRegionNotify>
     _instance;
} _EnterTransPointRegionNotify_default_instance_;
class ExitTransPointRegionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExitTransPointRegionNotify>
     _instance;
} _ExitTransPointRegionNotify_default_instance_;
class ScenePointUnlockNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ScenePointUnlockNotify>
     _instance;
} _ScenePointUnlockNotify_default_instance_;
class SceneTransToPointReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneTransToPointReq>
     _instance;
} _SceneTransToPointReq_default_instance_;
class SceneTransToPointRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneTransToPointRsp>
     _instance;
} _SceneTransToPointRsp_default_instance_;
class EntityJumpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityJumpNotify>
     _instance;
} _EntityJumpNotify_default_instance_;
class GetSceneAreaReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetSceneAreaReq>
     _instance;
} _GetSceneAreaReq_default_instance_;
class GetSceneAreaRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetSceneAreaRsp>
     _instance;
} _GetSceneAreaRsp_default_instance_;
class SceneAreaUnlockNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAreaUnlockNotify>
     _instance;
} _SceneAreaUnlockNotify_default_instance_;
class SceneEntityDrownReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityDrownReq>
     _instance;
} _SceneEntityDrownReq_default_instance_;
class SceneEntityDrownRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntityDrownRsp>
     _instance;
} _SceneEntityDrownRsp_default_instance_;
class SceneCreateEntityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneCreateEntityReq>
     _instance;
} _SceneCreateEntityReq_default_instance_;
class SceneCreateEntityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneCreateEntityRsp>
     _instance;
} _SceneCreateEntityRsp_default_instance_;
class SceneDestroyEntityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneDestroyEntityReq>
     _instance;
} _SceneDestroyEntityReq_default_instance_;
class SceneDestroyEntityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneDestroyEntityRsp>
     _instance;
} _SceneDestroyEntityRsp_default_instance_;
class SceneForceUnlockNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneForceUnlockNotify>
     _instance;
} _SceneForceUnlockNotify_default_instance_;
class SceneForceLockNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneForceLockNotify>
     _instance;
} _SceneForceLockNotify_default_instance_;
class EnterWorldAreaReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterWorldAreaReq>
     _instance;
} _EnterWorldAreaReq_default_instance_;
class EnterWorldAreaRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterWorldAreaRsp>
     _instance;
} _EnterWorldAreaRsp_default_instance_;
class EntityForceSyncReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityForceSyncReq>
     _instance;
} _EntityForceSyncReq_default_instance_;
class EntityForceSyncRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityForceSyncRsp>
     _instance;
} _EntityForceSyncRsp_default_instance_;
class SceneAreaExploreNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAreaExploreNotify>
     _instance;
} _SceneAreaExploreNotify_default_instance_;
class SceneGetAreaExplorePercentReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneGetAreaExplorePercentReq>
     _instance;
} _SceneGetAreaExplorePercentReq_default_instance_;
class SceneGetAreaExplorePercentRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneGetAreaExplorePercentRsp>
     _instance;
} _SceneGetAreaExplorePercentRsp_default_instance_;
class ClientTransmitReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientTransmitReq>
     _instance;
} _ClientTransmitReq_default_instance_;
class ClientTransmitRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientTransmitRsp>
     _instance;
} _ClientTransmitRsp_default_instance_;
class EnterSceneWeatherAreaNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneWeatherAreaNotify>
     _instance;
} _EnterSceneWeatherAreaNotify_default_instance_;
class ExitSceneWeatherAreaNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExitSceneWeatherAreaNotify>
     _instance;
} _ExitSceneWeatherAreaNotify_default_instance_;
class SceneAreaWeatherNotify_WeatherValueMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAreaWeatherNotify::SceneAreaWeatherNotify_WeatherValueMapEntry>
     _instance;
} _SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_;
class SceneAreaWeatherNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAreaWeatherNotify>
     _instance;
} _SceneAreaWeatherNotify_default_instance_;
class ScenePlayerInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ScenePlayerInfo>
     _instance;
} _ScenePlayerInfo_default_instance_;
class ScenePlayerInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ScenePlayerInfoNotify>
     _instance;
} _ScenePlayerInfoNotify_default_instance_;
class PlayerLocationInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLocationInfo>
     _instance;
} _PlayerLocationInfo_default_instance_;
class WorldPlayerLocationNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldPlayerLocationNotify>
     _instance;
} _WorldPlayerLocationNotify_default_instance_;
class BeginCameraSceneLookNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BeginCameraSceneLookNotify>
     _instance;
} _BeginCameraSceneLookNotify_default_instance_;
class EndCameraSceneLookNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EndCameraSceneLookNotify>
     _instance;
} _EndCameraSceneLookNotify_default_instance_;
class MarkEntityInMinMapNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarkEntityInMinMapNotify>
     _instance;
} _MarkEntityInMinMapNotify_default_instance_;
class UnmarkEntityInMinMapNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnmarkEntityInMinMapNotify>
     _instance;
} _UnmarkEntityInMinMapNotify_default_instance_;
class DropSubfieldReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DropSubfieldReq>
     _instance;
} _DropSubfieldReq_default_instance_;
class DropSubfieldRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DropSubfieldRsp>
     _instance;
} _DropSubfieldRsp_default_instance_;
class ExecuteGroupTriggerReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExecuteGroupTriggerReq>
     _instance;
} _ExecuteGroupTriggerReq_default_instance_;
class ExecuteGroupTriggerRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExecuteGroupTriggerRsp>
     _instance;
} _ExecuteGroupTriggerRsp_default_instance_;
class LevelupCityReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LevelupCityReq>
     _instance;
} _LevelupCityReq_default_instance_;
class LevelupCityRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LevelupCityRsp>
     _instance;
} _LevelupCityRsp_default_instance_;
class RoutePointChangeInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RoutePointChangeInfo>
     _instance;
} _RoutePointChangeInfo_default_instance_;
class SceneRouteChangeInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneRouteChangeInfo>
     _instance;
} _SceneRouteChangeInfo_default_instance_;
class SceneRouteChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneRouteChangeNotify>
     _instance;
} _SceneRouteChangeNotify_default_instance_;
class PlatformStartRouteNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformStartRouteNotify>
     _instance;
} _PlatformStartRouteNotify_default_instance_;
class PlatformStopRouteNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformStopRouteNotify>
     _instance;
} _PlatformStopRouteNotify_default_instance_;
class PlatformChangeRouteNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformChangeRouteNotify>
     _instance;
} _PlatformChangeRouteNotify_default_instance_;
class ScenePlayerSoundNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ScenePlayerSoundNotify>
     _instance;
} _ScenePlayerSoundNotify_default_instance_;
class PersonalSceneJumpReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersonalSceneJumpReq>
     _instance;
} _PersonalSceneJumpReq_default_instance_;
class PersonalSceneJumpRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PersonalSceneJumpRsp>
     _instance;
} _PersonalSceneJumpRsp_default_instance_;
class SealBattleBeginNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SealBattleBeginNotify>
     _instance;
} _SealBattleBeginNotify_default_instance_;
class SealBattleEndNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SealBattleEndNotify>
     _instance;
} _SealBattleEndNotify_default_instance_;
class SealBattleProgressNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SealBattleProgressNotify>
     _instance;
} _SealBattleProgressNotify_default_instance_;
class ClientPauseNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientPauseNotify>
     _instance;
} _ClientPauseNotify_default_instance_;
class AvatarEnterSceneInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AvatarEnterSceneInfo>
     _instance;
} _AvatarEnterSceneInfo_default_instance_;
class TeamEnterSceneInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TeamEnterSceneInfo>
     _instance;
} _TeamEnterSceneInfo_default_instance_;
class MPLevelEntityInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MPLevelEntityInfo>
     _instance;
} _MPLevelEntityInfo_default_instance_;
class PlayerEnterSceneInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerEnterSceneInfoNotify>
     _instance;
} _PlayerEnterSceneInfoNotify_default_instance_;
class JoinPlayerSceneReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<JoinPlayerSceneReq>
     _instance;
} _JoinPlayerSceneReq_default_instance_;
class JoinPlayerSceneRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<JoinPlayerSceneRsp>
     _instance;
} _JoinPlayerSceneRsp_default_instance_;
class SceneKickPlayerReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneKickPlayerReq>
     _instance;
} _SceneKickPlayerReq_default_instance_;
class SceneKickPlayerRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneKickPlayerRsp>
     _instance;
} _SceneKickPlayerRsp_default_instance_;
class SceneKickPlayerNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneKickPlayerNotify>
     _instance;
} _SceneKickPlayerNotify_default_instance_;
class HitClientTrivialNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HitClientTrivialNotify>
     _instance;
} _HitClientTrivialNotify_default_instance_;
class BackMyWorldReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BackMyWorldReq>
     _instance;
} _BackMyWorldReq_default_instance_;
class BackMyWorldRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BackMyWorldRsp>
     _instance;
} _BackMyWorldRsp_default_instance_;
class SeeMonsterReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SeeMonsterReq>
     _instance;
} _SeeMonsterReq_default_instance_;
class SeeMonsterRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SeeMonsterRsp>
     _instance;
} _SeeMonsterRsp_default_instance_;
class AddSeenMonsterNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddSeenMonsterNotify>
     _instance;
} _AddSeenMonsterNotify_default_instance_;
class AllSeenMonsterNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AllSeenMonsterNotify>
     _instance;
} _AllSeenMonsterNotify_default_instance_;
class SceneTimeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneTimeNotify>
     _instance;
} _SceneTimeNotify_default_instance_;
class EnterSceneReadyReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneReadyReq>
     _instance;
} _EnterSceneReadyReq_default_instance_;
class EnterSceneReadyRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneReadyRsp>
     _instance;
} _EnterSceneReadyRsp_default_instance_;
class EnterScenePeerNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterScenePeerNotify>
     _instance;
} _EnterScenePeerNotify_default_instance_;
class EnterSceneDoneReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneDoneReq>
     _instance;
} _EnterSceneDoneReq_default_instance_;
class EnterSceneDoneRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterSceneDoneRsp>
     _instance;
} _EnterSceneDoneRsp_default_instance_;
class WorldPlayerDieNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldPlayerDieNotify>
     _instance;
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 gadget_id_;
} _WorldPlayerDieNotify_default_instance_;
class WorldPlayerReviveReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldPlayerReviveReq>
     _instance;
} _WorldPlayerReviveReq_default_instance_;
class WorldPlayerReviveRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldPlayerReviveRsp>
     _instance;
} _WorldPlayerReviveRsp_default_instance_;
class JoinPlayerFailNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<JoinPlayerFailNotify>
     _instance;
} _JoinPlayerFailNotify_default_instance_;
class SetSceneWeatherAreaReq_WeatherValueMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetSceneWeatherAreaReq::SetSceneWeatherAreaReq_WeatherValueMapEntry>
     _instance;
} _SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_;
class SetSceneWeatherAreaReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetSceneWeatherAreaReq>
     _instance;
} _SetSceneWeatherAreaReq_default_instance_;
class SetSceneWeatherAreaRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetSceneWeatherAreaRsp>
     _instance;
} _SetSceneWeatherAreaRsp_default_instance_;
class ExecuteGadgetLuaReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExecuteGadgetLuaReq>
     _instance;
} _ExecuteGadgetLuaReq_default_instance_;
class ExecuteGadgetLuaRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ExecuteGadgetLuaRsp>
     _instance;
} _ExecuteGadgetLuaRsp_default_instance_;
class CutSceneBeginNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CutSceneBeginNotify>
     _instance;
} _CutSceneBeginNotify_default_instance_;
class CutSceneFinishNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CutSceneFinishNotify>
     _instance;
} _CutSceneFinishNotify_default_instance_;
class CutSceneEndNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CutSceneEndNotify>
     _instance;
} _CutSceneEndNotify_default_instance_;
class ClientScriptEventNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientScriptEventNotify>
     _instance;
} _ClientScriptEventNotify_default_instance_;
class EntityMoveInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityMoveInfo>
     _instance;
} _EntityMoveInfo_default_instance_;
class SceneEntitiesMovesReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntitiesMovesReq>
     _instance;
} _SceneEntitiesMovesReq_default_instance_;
class EntityMoveFailInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityMoveFailInfo>
     _instance;
} _EntityMoveFailInfo_default_instance_;
class SceneEntitiesMovesRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntitiesMovesRsp>
     _instance;
} _SceneEntitiesMovesRsp_default_instance_;
class SceneEntitiesMoveCombineNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneEntitiesMoveCombineNotify>
     _instance;
} _SceneEntitiesMoveCombineNotify_default_instance_;
class UnlockTransPointReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnlockTransPointReq>
     _instance;
} _UnlockTransPointReq_default_instance_;
class UnlockTransPointRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnlockTransPointRsp>
     _instance;
} _UnlockTransPointRsp_default_instance_;
class PlatformRouteStateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformRouteStateNotify>
     _instance;
} _PlatformRouteStateNotify_default_instance_;
class SceneWeatherForcastReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneWeatherForcastReq>
     _instance;
} _SceneWeatherForcastReq_default_instance_;
class SceneWeatherForcastRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneWeatherForcastRsp>
     _instance;
} _SceneWeatherForcastRsp_default_instance_;
class MarkMapReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarkMapReq>
     _instance;
} _MarkMapReq_default_instance_;
class MarkMapRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarkMapRsp>
     _instance;
} _MarkMapRsp_default_instance_;
class AllMarkPointNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AllMarkPointNotify>
     _instance;
} _AllMarkPointNotify_default_instance_;
class WorldDataNotify_WorldPropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldDataNotify::WorldDataNotify_WorldPropMapEntry>
     _instance;
} _WorldDataNotify_WorldPropMapEntry_default_instance_;
class WorldDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldDataNotify>
     _instance;
} _WorldDataNotify_default_instance_;
class EntityMoveRoomNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EntityMoveRoomNotify>
     _instance;
} _EntityMoveRoomNotify_default_instance_;
class WorldPlayerInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<WorldPlayerInfoNotify>
     _instance;
} _WorldPlayerInfoNotify_default_instance_;
class PostEnterSceneReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PostEnterSceneReq>
     _instance;
} _PostEnterSceneReq_default_instance_;
class PostEnterSceneRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PostEnterSceneRsp>
     _instance;
} _PostEnterSceneRsp_default_instance_;
class ChatInfo_SystemHintDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatInfo_SystemHint>
     _instance;
} _ChatInfo_SystemHint_default_instance_;
class ChatInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatInfo>
     _instance;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 icon_;
  const ::proto::ChatInfo_SystemHint* system_hint_;
} _ChatInfo_default_instance_;
class PlayerChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerChatReq>
     _instance;
} _PlayerChatReq_default_instance_;
class PlayerChatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerChatRsp>
     _instance;
} _PlayerChatRsp_default_instance_;
class PlayerChatNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerChatNotify>
     _instance;
} _PlayerChatNotify_default_instance_;
class PlayerChatCDNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerChatCDNotify>
     _instance;
} _PlayerChatCDNotify_default_instance_;
class ChatHistoryNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChatHistoryNotify>
     _instance;
} _ChatHistoryNotify_default_instance_;
class SceneDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneDataNotify>
     _instance;
} _SceneDataNotify_default_instance_;
class DungeonEntryToBeExploreNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DungeonEntryToBeExploreNotify>
     _instance;
} _DungeonEntryToBeExploreNotify_default_instance_;
class GetDungeonEntryExploreConditionReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetDungeonEntryExploreConditionReq>
     _instance;
} _GetDungeonEntryExploreConditionReq_default_instance_;
class DungeonEntryCondDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DungeonEntryCond>
     _instance;
} _DungeonEntryCond_default_instance_;
class GetDungeonEntryExploreConditionRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetDungeonEntryExploreConditionRsp>
     _instance;
} _GetDungeonEntryExploreConditionRsp_default_instance_;
class UnfreezeGroupLimitNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnfreezeGroupLimitNotify>
     _instance;
} _UnfreezeGroupLimitNotify_default_instance_;
class EnterWorldFogAreaNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnterWorldFogAreaNotify>
     _instance;
} _EnterWorldFogAreaNotify_default_instance_;
class UnlockWorldFogAreaNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnlockWorldFogAreaNotify>
     _instance;
} _UnlockWorldFogAreaNotify_default_instance_;
class LockWorldFogAreaNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LockWorldFogAreaNotify>
     _instance;
} _LockWorldFogAreaNotify_default_instance_;
class SetEntityClientDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SetEntityClientDataNotify>
     _instance;
} _SetEntityClientDataNotify_default_instance_;

namespace protobuf_cmd_2fcmd_5fscene_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[144];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[140];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, scene_begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, prev_scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, prev_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, dungeon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, world_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneNotify, enter_scene_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LeaveSceneRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneInitFinishReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneInitFinishReq, enter_scene_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneInitFinishRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneInitFinishRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAppearNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAppearNotify, entity_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAppearNotify, appear_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityAppearNotify, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityDisappearNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityDisappearNotify, entity_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityDisappearNotify, disappear_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveReq, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveReq, motion_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveReq, scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveReq, reliable_seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveRsp, fail_motion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveRsp, scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveRsp, reliable_seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarStaminaStepReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarStaminaStepReq, use_client_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarStaminaStepReq, rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarStaminaStepRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarStaminaStepRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarStaminaStepRsp, use_client_rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAvatarStaminaStepRsp, rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveNotify, motion_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveNotify, scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityMoveNotify, reliable_seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerLocationNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerLocationNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerLocationNotify, player_loc_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointReq, belong_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityInfo, city_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CityInfo, crystal_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, unlocked_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, belong_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, unlock_area_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, locked_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, to_be_explore_dungeon_entry_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, not_explored_dungeon_entry_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, group_unlimit_point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, unlocked_fog_level_1_area_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScenePointRsp, unlokced_fog_level_2_area_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTransPointRegionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTransPointRegionNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTransPointRegionNotify, point_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTransPointRegionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTransPointRegionNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitTransPointRegionNotify, point_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePointUnlockNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePointUnlockNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePointUnlockNotify, point_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePointUnlockNotify, locked_point_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTransToPointReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTransToPointReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTransToPointReq, point_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTransToPointRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTransToPointRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTransToPointRsp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTransToPointRsp, point_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityJumpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityJumpNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityJumpNotify, jump_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityJumpNotify, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityJumpNotify, rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSceneAreaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSceneAreaReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSceneAreaReq, belong_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSceneAreaRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSceneAreaRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSceneAreaRsp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSceneAreaRsp, area_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSceneAreaRsp, city_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaUnlockNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaUnlockNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaUnlockNotify, area_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityDrownReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityDrownReq, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityDrownRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityDrownRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntityDrownRsp, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreateEntityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreateEntityReq, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreateEntityReq, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreateEntityReq, is_destroy_when_disconnect_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreateEntityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreateEntityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreateEntityRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneCreateEntityRsp, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDestroyEntityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDestroyEntityReq, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDestroyEntityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDestroyEntityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDestroyEntityRsp, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneForceUnlockNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneForceUnlockNotify, force_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneForceUnlockNotify, is_add_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneForceLockNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneForceLockNotify, force_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldAreaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldAreaReq, area_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldAreaReq, area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldAreaRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldAreaRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldAreaRsp, area_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldAreaRsp, area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncReq, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncReq, motion_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncReq, scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncReq, room_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncRsp, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncRsp, fail_motion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityForceSyncRsp, scene_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaExploreNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaExploreNotify, area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaExploreNotify, explore_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaExploreNotify, event_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGetAreaExplorePercentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGetAreaExplorePercentReq, area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGetAreaExplorePercentRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGetAreaExplorePercentRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGetAreaExplorePercentRsp, explore_percent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneGetAreaExplorePercentRsp, area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTransmitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTransmitReq, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTransmitReq, rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTransmitReq, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTransmitReq, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTransmitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTransmitRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientTransmitRsp, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneWeatherAreaNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneWeatherAreaNotify, weather_gadget_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitSceneWeatherAreaNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitSceneWeatherAreaNotify, weather_gadget_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaWeatherNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaWeatherNotify, weather_gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaWeatherNotify, weather_value_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaWeatherNotify, weather_area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAreaWeatherNotify, climate_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfo, peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfo, is_connected_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfo, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfo, online_player_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerInfoNotify, player_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLocationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLocationInfo, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLocationInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLocationInfo, rot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerLocationNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerLocationNotify, player_loc_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginCameraSceneLookNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginCameraSceneLookNotify, look_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginCameraSceneLookNotify, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginCameraSceneLookNotify, is_force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginCameraSceneLookNotify, is_recover_keep_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BeginCameraSceneLookNotify, is_allow_input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EndCameraSceneLookNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkEntityInMinMapNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkEntityInMinMapNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkEntityInMinMapNotify, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkEntityInMinMapNotify, monster_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnmarkEntityInMinMapNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnmarkEntityInMinMapNotify, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropSubfieldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropSubfieldReq, drop_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropSubfieldReq, drop_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropSubfieldReq, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropSubfieldReq, subfield_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropSubfieldRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DropSubfieldRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerReq, source_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerReq, source_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerReq, target_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerReq, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerReq, param2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerReq, param3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGroupTriggerRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityReq, area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityReq, item_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityRsp, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityRsp, area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelupCityRsp, city_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutePointChangeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutePointChangeInfo, point_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutePointChangeInfo, target_velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoutePointChangeInfo, wait_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeInfo, route_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeInfo, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeInfo, is_forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeInfo, point_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeNotify, route_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneRouteChangeNotify, scene_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformStartRouteNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformStartRouteNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformStartRouteNotify, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformStartRouteNotify, scene_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformStopRouteNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformStopRouteNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformStopRouteNotify, scene_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformChangeRouteNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformChangeRouteNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformChangeRouteNotify, platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerSoundNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerSoundNotify, sound_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerSoundNotify, play_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScenePlayerSoundNotify, play_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalSceneJumpReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalSceneJumpReq, point_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalSceneJumpRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalSceneJumpRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalSceneJumpRsp, dest_scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalSceneJumpRsp, dest_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleBeginNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleBeginNotify, seal_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleBeginNotify, seal_radius_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleBeginNotify, seal_max_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleBeginNotify, battle_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleEndNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleEndNotify, seal_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleEndNotify, is_win_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleProgressNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleProgressNotify, seal_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleProgressNotify, progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleProgressNotify, max_progress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleProgressNotify, end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SealBattleProgressNotify, seal_radius_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientPauseNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientPauseNotify, is_open_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, avatar_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, avatar_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, avatar_ability_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, buff_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, weapon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, weapon_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, weapon_ability_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AvatarEnterSceneInfo, server_buff_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEnterSceneInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEnterSceneInfo, team_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEnterSceneInfo, team_ability_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MPLevelEntityInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MPLevelEntityInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MPLevelEntityInfo, authority_peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MPLevelEntityInfo, ability_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneInfoNotify, cur_avatar_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneInfoNotify, avatar_enter_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneInfoNotify, team_enter_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerEnterSceneInfoNotify, mp_level_entity_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinPlayerSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinPlayerSceneReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinPlayerSceneRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinPlayerSceneRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneKickPlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneKickPlayerReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneKickPlayerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneKickPlayerRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneKickPlayerRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneKickPlayerNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneKickPlayerNotify, kicker_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneKickPlayerNotify, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitClientTrivialNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitClientTrivialNotify, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HitClientTrivialNotify, owner_entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackMyWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackMyWorldRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BackMyWorldRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeeMonsterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeeMonsterReq, monster_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeeMonsterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeeMonsterRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSeenMonsterNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSeenMonsterNotify, monster_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllSeenMonsterNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllSeenMonsterNotify, monster_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTimeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTimeNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTimeNotify, is_paused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneTimeNotify, scene_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReadyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReadyReq, enter_scene_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReadyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneReadyRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterScenePeerNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterScenePeerNotify, dest_scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterScenePeerNotify, peer_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterScenePeerNotify, host_peer_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneDoneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneDoneReq, enter_scene_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneDoneRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterSceneDoneRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerDieNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerDieNotify, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerDieNotify, die_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerDieNotify, murderer_entity_id_),
  offsetof(WorldPlayerDieNotifyDefaultTypeInternal, monster_id_),
  offsetof(WorldPlayerDieNotifyDefaultTypeInternal, gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerDieNotify, entity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerReviveReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerReviveRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerReviveRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinPlayerFailNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JoinPlayerFailNotify, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSceneWeatherAreaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSceneWeatherAreaReq, weather_gadget_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSceneWeatherAreaReq, weather_value_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSceneWeatherAreaRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSceneWeatherAreaRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGadgetLuaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGadgetLuaReq, source_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGadgetLuaReq, param1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGadgetLuaReq, param2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGadgetLuaReq, param3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGadgetLuaRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecuteGadgetLuaRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CutSceneBeginNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CutSceneBeginNotify, cutscene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CutSceneBeginNotify, is_wait_others_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CutSceneFinishNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CutSceneFinishNotify, cutscene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CutSceneEndNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CutSceneEndNotify, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CutSceneEndNotify, cutscene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientScriptEventNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientScriptEventNotify, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientScriptEventNotify, source_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientScriptEventNotify, target_entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientScriptEventNotify, param_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveInfo, motion_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveInfo, scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveInfo, reliable_seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntitiesMovesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntitiesMovesReq, entity_move_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveFailInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveFailInfo, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveFailInfo, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveFailInfo, fail_motion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveFailInfo, scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveFailInfo, reliable_seq_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntitiesMovesRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntitiesMovesRsp, entity_move_fail_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntitiesMoveCombineNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneEntitiesMoveCombineNotify, entity_move_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTransPointReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTransPointReq, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTransPointReq, point_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTransPointRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockTransPointRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformRouteStateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformRouteStateNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformRouteStateNotify, scene_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformRouteStateNotify, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformRouteStateNotify, rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformRouteStateNotify, route_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformRouteStateNotify, is_started_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherForcastReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherForcastReq, weather_area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherForcastRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherForcastRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherForcastRsp, next_climate_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneWeatherForcastRsp, forcast_climate_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkMapReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkMapReq, op_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkMapReq, old_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkMapReq, mark_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkMapRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkMapRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkMapRsp, mark_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllMarkPointNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllMarkPointNotify, mark_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldDataNotify, world_prop_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveRoomNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveRoomNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityMoveRoomNotify, dest_room_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerInfoNotify, player_info_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldPlayerInfoNotify, player_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostEnterSceneReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostEnterSceneReq, enter_scene_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostEnterSceneRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PostEnterSceneRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatInfo_SystemHint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatInfo_SystemHint, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatInfo, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatInfo, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatInfo, uid_),
  offsetof(ChatInfoDefaultTypeInternal, text_),
  offsetof(ChatInfoDefaultTypeInternal, icon_),
  offsetof(ChatInfoDefaultTypeInternal, system_hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatInfo, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatReq, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatReq, chat_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatNotify, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatNotify, chat_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatCDNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerChatCDNotify, over_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHistoryNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHistoryNotify, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatHistoryNotify, chat_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneDataNotify, level_config_name_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonEntryToBeExploreNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonEntryToBeExploreNotify, dungeon_entry_scene_point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonEntryToBeExploreNotify, dungeon_entry_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonEntryToBeExploreNotify, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDungeonEntryExploreConditionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDungeonEntryExploreConditionReq, dungeon_entry_scene_point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDungeonEntryExploreConditionReq, dungeon_entry_config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDungeonEntryExploreConditionReq, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonEntryCond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonEntryCond, cond_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DungeonEntryCond, param1_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDungeonEntryExploreConditionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDungeonEntryExploreConditionRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDungeonEntryExploreConditionRsp, dungeon_entry_cond_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfreezeGroupLimitNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfreezeGroupLimitNotify, point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnfreezeGroupLimitNotify, scene_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldFogAreaNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldFogAreaNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterWorldFogAreaNotify, fog_area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockWorldFogAreaNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockWorldFogAreaNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockWorldFogAreaNotify, unlocked_fog_level_1_area_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockWorldFogAreaNotify, unlocked_fog_level_2_area_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockWorldFogAreaNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockWorldFogAreaNotify, scene_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockWorldFogAreaNotify, locked_fog_level_1_area_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockWorldFogAreaNotify, locked_fog_level_2_area_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetEntityClientDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetEntityClientDataNotify, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetEntityClientDataNotify, entity_client_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PlayerEnterSceneNotify)},
  { 15, -1, sizeof(LeaveSceneReq)},
  { 20, -1, sizeof(LeaveSceneRsp)},
  { 26, -1, sizeof(SceneInitFinishReq)},
  { 32, -1, sizeof(SceneInitFinishRsp)},
  { 38, -1, sizeof(SceneEntityAppearNotify)},
  { 46, -1, sizeof(SceneEntityDisappearNotify)},
  { 53, -1, sizeof(SceneEntityMoveReq)},
  { 62, -1, sizeof(SceneEntityMoveRsp)},
  { 72, -1, sizeof(SceneAvatarStaminaStepReq)},
  { 79, -1, sizeof(SceneAvatarStaminaStepRsp)},
  { 87, -1, sizeof(SceneEntityMoveNotify)},
  { 96, -1, sizeof(ScenePlayerLocationNotify)},
  { 103, -1, sizeof(GetScenePointReq)},
  { 110, -1, sizeof(CityInfo)},
  { 118, -1, sizeof(GetScenePointRsp)},
  { 134, -1, sizeof(EnterTransPointRegionNotify)},
  { 141, -1, sizeof(ExitTransPointRegionNotify)},
  { 148, -1, sizeof(ScenePointUnlockNotify)},
  { 156, -1, sizeof(SceneTransToPointReq)},
  { 163, -1, sizeof(SceneTransToPointRsp)},
  { 171, -1, sizeof(EntityJumpNotify)},
  { 180, -1, sizeof(GetSceneAreaReq)},
  { 187, -1, sizeof(GetSceneAreaRsp)},
  { 196, -1, sizeof(SceneAreaUnlockNotify)},
  { 203, -1, sizeof(SceneEntityDrownReq)},
  { 209, -1, sizeof(SceneEntityDrownRsp)},
  { 216, -1, sizeof(SceneCreateEntityReq)},
  { 224, -1, sizeof(SceneCreateEntityRsp)},
  { 232, -1, sizeof(SceneDestroyEntityReq)},
  { 238, -1, sizeof(SceneDestroyEntityRsp)},
  { 245, -1, sizeof(SceneForceUnlockNotify)},
  { 252, -1, sizeof(SceneForceLockNotify)},
  { 258, -1, sizeof(EnterWorldAreaReq)},
  { 265, -1, sizeof(EnterWorldAreaRsp)},
  { 273, -1, sizeof(EntityForceSyncReq)},
  { 282, -1, sizeof(EntityForceSyncRsp)},
  { 291, -1, sizeof(SceneAreaExploreNotify)},
  { 299, -1, sizeof(SceneGetAreaExplorePercentReq)},
  { 305, -1, sizeof(SceneGetAreaExplorePercentRsp)},
  { 313, -1, sizeof(ClientTransmitReq)},
  { 322, -1, sizeof(ClientTransmitRsp)},
  { 329, -1, sizeof(EnterSceneWeatherAreaNotify)},
  { 335, -1, sizeof(ExitSceneWeatherAreaNotify)},
  { 341, -1, sizeof(SceneAreaWeatherNotify)},
  { 350, -1, sizeof(ScenePlayerInfo)},
  { 361, -1, sizeof(ScenePlayerInfoNotify)},
  { 367, -1, sizeof(PlayerLocationInfo)},
  { 375, -1, sizeof(WorldPlayerLocationNotify)},
  { 381, -1, sizeof(BeginCameraSceneLookNotify)},
  { 391, -1, sizeof(EndCameraSceneLookNotify)},
  { 396, -1, sizeof(MarkEntityInMinMapNotify)},
  { 404, -1, sizeof(UnmarkEntityInMinMapNotify)},
  { 410, -1, sizeof(DropSubfieldReq)},
  { 419, -1, sizeof(DropSubfieldRsp)},
  { 425, -1, sizeof(ExecuteGroupTriggerReq)},
  { 436, -1, sizeof(ExecuteGroupTriggerRsp)},
  { 442, -1, sizeof(LevelupCityReq)},
  { 450, -1, sizeof(LevelupCityRsp)},
  { 459, -1, sizeof(RoutePointChangeInfo)},
  { 467, -1, sizeof(SceneRouteChangeInfo)},
  { 476, -1, sizeof(SceneRouteChangeNotify)},
  { 484, -1, sizeof(PlatformStartRouteNotify)},
  { 492, -1, sizeof(PlatformStopRouteNotify)},
  { 499, -1, sizeof(PlatformChangeRouteNotify)},
  { 506, -1, sizeof(ScenePlayerSoundNotify)},
  { 514, -1, sizeof(PersonalSceneJumpReq)},
  { 520, -1, sizeof(PersonalSceneJumpRsp)},
  { 528, -1, sizeof(SealBattleBeginNotify)},
  { 537, -1, sizeof(SealBattleEndNotify)},
  { 544, -1, sizeof(SealBattleProgressNotify)},
  { 554, -1, sizeof(ClientPauseNotify)},
  { 560, -1, sizeof(AvatarEnterSceneInfo)},
  { 573, -1, sizeof(TeamEnterSceneInfo)},
  { 580, -1, sizeof(MPLevelEntityInfo)},
  { 588, -1, sizeof(PlayerEnterSceneInfoNotify)},
  { 597, -1, sizeof(JoinPlayerSceneReq)},
  { 603, -1, sizeof(JoinPlayerSceneRsp)},
  { 609, -1, sizeof(SceneKickPlayerReq)},
  { 615, -1, sizeof(SceneKickPlayerRsp)},
  { 622, -1, sizeof(SceneKickPlayerNotify)},
  { 629, -1, sizeof(HitClientTrivialNotify)},
  { 636, -1, sizeof(BackMyWorldReq)},
  { 641, -1, sizeof(BackMyWorldRsp)},
  { 647, -1, sizeof(SeeMonsterReq)},
  { 653, -1, sizeof(SeeMonsterRsp)},
  { 659, -1, sizeof(AddSeenMonsterNotify)},
  { 665, -1, sizeof(AllSeenMonsterNotify)},
  { 671, -1, sizeof(SceneTimeNotify)},
  { 679, -1, sizeof(EnterSceneReadyReq)},
  { 685, -1, sizeof(EnterSceneReadyRsp)},
  { 691, -1, sizeof(EnterScenePeerNotify)},
  { 699, -1, sizeof(EnterSceneDoneReq)},
  { 705, -1, sizeof(EnterSceneDoneRsp)},
  { 711, -1, sizeof(WorldPlayerDieNotify)},
  { 721, -1, sizeof(WorldPlayerReviveReq)},
  { 726, -1, sizeof(WorldPlayerReviveRsp)},
  { 732, -1, sizeof(JoinPlayerFailNotify)},
  { 738, -1, sizeof(SetSceneWeatherAreaReq)},
  { 745, -1, sizeof(SetSceneWeatherAreaRsp)},
  { 751, -1, sizeof(ExecuteGadgetLuaReq)},
  { 760, -1, sizeof(ExecuteGadgetLuaRsp)},
  { 766, -1, sizeof(CutSceneBeginNotify)},
  { 773, -1, sizeof(CutSceneFinishNotify)},
  { 779, -1, sizeof(CutSceneEndNotify)},
  { 786, -1, sizeof(ClientScriptEventNotify)},
  { 795, -1, sizeof(EntityMoveInfo)},
  { 804, -1, sizeof(SceneEntitiesMovesReq)},
  { 810, -1, sizeof(EntityMoveFailInfo)},
  { 820, -1, sizeof(SceneEntitiesMovesRsp)},
  { 826, -1, sizeof(SceneEntitiesMoveCombineNotify)},
  { 832, -1, sizeof(UnlockTransPointReq)},
  { 839, -1, sizeof(UnlockTransPointRsp)},
  { 845, -1, sizeof(PlatformRouteStateNotify)},
  { 856, -1, sizeof(SceneWeatherForcastReq)},
  { 862, -1, sizeof(SceneWeatherForcastRsp)},
  { 870, -1, sizeof(MarkMapReq)},
  { 878, -1, sizeof(MarkMapRsp)},
  { 885, -1, sizeof(AllMarkPointNotify)},
  { 891, -1, sizeof(WorldDataNotify)},
  { 897, -1, sizeof(EntityMoveRoomNotify)},
  { 904, -1, sizeof(WorldPlayerInfoNotify)},
  { 911, -1, sizeof(PostEnterSceneReq)},
  { 917, -1, sizeof(PostEnterSceneRsp)},
  { 923, -1, sizeof(ChatInfo_SystemHint)},
  { 929, -1, sizeof(ChatInfo)},
  { 940, -1, sizeof(PlayerChatReq)},
  { 947, -1, sizeof(PlayerChatRsp)},
  { 953, -1, sizeof(PlayerChatNotify)},
  { 960, -1, sizeof(PlayerChatCDNotify)},
  { 966, -1, sizeof(ChatHistoryNotify)},
  { 973, -1, sizeof(SceneDataNotify)},
  { 979, -1, sizeof(DungeonEntryToBeExploreNotify)},
  { 987, -1, sizeof(GetDungeonEntryExploreConditionReq)},
  { 995, -1, sizeof(DungeonEntryCond)},
  { 1002, -1, sizeof(GetDungeonEntryExploreConditionRsp)},
  { 1009, -1, sizeof(UnfreezeGroupLimitNotify)},
  { 1016, -1, sizeof(EnterWorldFogAreaNotify)},
  { 1023, -1, sizeof(UnlockWorldFogAreaNotify)},
  { 1031, -1, sizeof(LockWorldFogAreaNotify)},
  { 1039, -1, sizeof(SetEntityClientDataNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerEnterSceneNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LeaveSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LeaveSceneRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneInitFinishReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneInitFinishRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityAppearNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityDisappearNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityMoveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityMoveRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAvatarStaminaStepReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAvatarStaminaStepRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityMoveNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScenePlayerLocationNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetScenePointReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetScenePointRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterTransPointRegionNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExitTransPointRegionNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScenePointUnlockNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneTransToPointReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneTransToPointRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityJumpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSceneAreaReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSceneAreaRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAreaUnlockNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityDrownReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntityDrownRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneCreateEntityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneCreateEntityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneDestroyEntityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneDestroyEntityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneForceUnlockNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneForceLockNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterWorldAreaReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterWorldAreaRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityForceSyncReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityForceSyncRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAreaExploreNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneGetAreaExplorePercentReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneGetAreaExplorePercentRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientTransmitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientTransmitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterSceneWeatherAreaNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExitSceneWeatherAreaNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAreaWeatherNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScenePlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScenePlayerInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLocationInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldPlayerLocationNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BeginCameraSceneLookNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EndCameraSceneLookNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarkEntityInMinMapNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnmarkEntityInMinMapNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DropSubfieldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DropSubfieldRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExecuteGroupTriggerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExecuteGroupTriggerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LevelupCityReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LevelupCityRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoutePointChangeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneRouteChangeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneRouteChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformStartRouteNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformStopRouteNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformChangeRouteNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScenePlayerSoundNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersonalSceneJumpReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersonalSceneJumpRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SealBattleBeginNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SealBattleEndNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SealBattleProgressNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientPauseNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AvatarEnterSceneInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamEnterSceneInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MPLevelEntityInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerEnterSceneInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinPlayerSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinPlayerSceneRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneKickPlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneKickPlayerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneKickPlayerNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HitClientTrivialNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BackMyWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BackMyWorldRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SeeMonsterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SeeMonsterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddSeenMonsterNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllSeenMonsterNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneTimeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterSceneReadyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterSceneReadyRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterScenePeerNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterSceneDoneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterSceneDoneRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldPlayerDieNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldPlayerReviveReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldPlayerReviveRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JoinPlayerFailNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetSceneWeatherAreaReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetSceneWeatherAreaRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExecuteGadgetLuaReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExecuteGadgetLuaRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CutSceneBeginNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CutSceneFinishNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CutSceneEndNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientScriptEventNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityMoveInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntitiesMovesReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityMoveFailInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntitiesMovesRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneEntitiesMoveCombineNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockTransPointReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockTransPointRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformRouteStateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneWeatherForcastReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneWeatherForcastRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarkMapReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarkMapRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllMarkPointNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldDataNotify_WorldPropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EntityMoveRoomNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_WorldPlayerInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PostEnterSceneReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PostEnterSceneRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatInfo_SystemHint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerChatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerChatNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerChatCDNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatHistoryNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DungeonEntryToBeExploreNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetDungeonEntryExploreConditionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DungeonEntryCond_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetDungeonEntryExploreConditionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnfreezeGroupLimitNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterWorldFogAreaNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockWorldFogAreaNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LockWorldFogAreaNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetEntityClientDataNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "cmd/cmd_scene.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[44].reflection = SceneAreaWeatherNotify::SceneAreaWeatherNotify_WeatherValueMapEntry::CreateReflection(file_level_metadata[44].descriptor, _SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[99].reflection = SetSceneWeatherAreaReq::SetSceneWeatherAreaReq_WeatherValueMapEntry::CreateReflection(file_level_metadata[99].descriptor, _SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[121].reflection = WorldDataNotify::WorldDataNotify_WorldPropMapEntry::CreateReflection(file_level_metadata[121].descriptor, _WorldDataNotify_WorldPropMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 144);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _PlayerEnterSceneNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerEnterSceneNotify_default_instance_);_LeaveSceneReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LeaveSceneReq_default_instance_);_LeaveSceneRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LeaveSceneRsp_default_instance_);_SceneInitFinishReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneInitFinishReq_default_instance_);_SceneInitFinishRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneInitFinishRsp_default_instance_);_SceneEntityAppearNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityAppearNotify_default_instance_);_SceneEntityDisappearNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityDisappearNotify_default_instance_);_SceneEntityMoveReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityMoveReq_default_instance_);_SceneEntityMoveRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityMoveRsp_default_instance_);_SceneAvatarStaminaStepReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAvatarStaminaStepReq_default_instance_);_SceneAvatarStaminaStepRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAvatarStaminaStepRsp_default_instance_);_SceneEntityMoveNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityMoveNotify_default_instance_);_ScenePlayerLocationNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ScenePlayerLocationNotify_default_instance_);_GetScenePointReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetScenePointReq_default_instance_);_CityInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CityInfo_default_instance_);_GetScenePointRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetScenePointRsp_default_instance_);_EnterTransPointRegionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterTransPointRegionNotify_default_instance_);_ExitTransPointRegionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExitTransPointRegionNotify_default_instance_);_ScenePointUnlockNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ScenePointUnlockNotify_default_instance_);_SceneTransToPointReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneTransToPointReq_default_instance_);_SceneTransToPointRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneTransToPointRsp_default_instance_);_EntityJumpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityJumpNotify_default_instance_);_GetSceneAreaReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetSceneAreaReq_default_instance_);_GetSceneAreaRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetSceneAreaRsp_default_instance_);_SceneAreaUnlockNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAreaUnlockNotify_default_instance_);_SceneEntityDrownReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityDrownReq_default_instance_);_SceneEntityDrownRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntityDrownRsp_default_instance_);_SceneCreateEntityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneCreateEntityReq_default_instance_);_SceneCreateEntityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneCreateEntityRsp_default_instance_);_SceneDestroyEntityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneDestroyEntityReq_default_instance_);_SceneDestroyEntityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneDestroyEntityRsp_default_instance_);_SceneForceUnlockNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneForceUnlockNotify_default_instance_);_SceneForceLockNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneForceLockNotify_default_instance_);_EnterWorldAreaReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterWorldAreaReq_default_instance_);_EnterWorldAreaRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterWorldAreaRsp_default_instance_);_EntityForceSyncReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityForceSyncReq_default_instance_);_EntityForceSyncRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityForceSyncRsp_default_instance_);_SceneAreaExploreNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAreaExploreNotify_default_instance_);_SceneGetAreaExplorePercentReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneGetAreaExplorePercentReq_default_instance_);_SceneGetAreaExplorePercentRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneGetAreaExplorePercentRsp_default_instance_);_ClientTransmitReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientTransmitReq_default_instance_);_ClientTransmitRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientTransmitRsp_default_instance_);_EnterSceneWeatherAreaNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterSceneWeatherAreaNotify_default_instance_);_ExitSceneWeatherAreaNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExitSceneWeatherAreaNotify_default_instance_);_SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_);_SceneAreaWeatherNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAreaWeatherNotify_default_instance_);_ScenePlayerInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ScenePlayerInfo_default_instance_);_ScenePlayerInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ScenePlayerInfoNotify_default_instance_);_PlayerLocationInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLocationInfo_default_instance_);_WorldPlayerLocationNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldPlayerLocationNotify_default_instance_);_BeginCameraSceneLookNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BeginCameraSceneLookNotify_default_instance_);_EndCameraSceneLookNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EndCameraSceneLookNotify_default_instance_);_MarkEntityInMinMapNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarkEntityInMinMapNotify_default_instance_);_UnmarkEntityInMinMapNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnmarkEntityInMinMapNotify_default_instance_);_DropSubfieldReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DropSubfieldReq_default_instance_);_DropSubfieldRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DropSubfieldRsp_default_instance_);_ExecuteGroupTriggerReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExecuteGroupTriggerReq_default_instance_);_ExecuteGroupTriggerRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExecuteGroupTriggerRsp_default_instance_);_LevelupCityReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LevelupCityReq_default_instance_);_LevelupCityRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LevelupCityRsp_default_instance_);_RoutePointChangeInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RoutePointChangeInfo_default_instance_);_SceneRouteChangeInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneRouteChangeInfo_default_instance_);_SceneRouteChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneRouteChangeNotify_default_instance_);_PlatformStartRouteNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformStartRouteNotify_default_instance_);_PlatformStopRouteNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformStopRouteNotify_default_instance_);_PlatformChangeRouteNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformChangeRouteNotify_default_instance_);_ScenePlayerSoundNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ScenePlayerSoundNotify_default_instance_);_PersonalSceneJumpReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersonalSceneJumpReq_default_instance_);_PersonalSceneJumpRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PersonalSceneJumpRsp_default_instance_);_SealBattleBeginNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SealBattleBeginNotify_default_instance_);_SealBattleEndNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SealBattleEndNotify_default_instance_);_SealBattleProgressNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SealBattleProgressNotify_default_instance_);_ClientPauseNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientPauseNotify_default_instance_);_AvatarEnterSceneInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AvatarEnterSceneInfo_default_instance_);_TeamEnterSceneInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TeamEnterSceneInfo_default_instance_);_MPLevelEntityInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MPLevelEntityInfo_default_instance_);_PlayerEnterSceneInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerEnterSceneInfoNotify_default_instance_);_JoinPlayerSceneReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_JoinPlayerSceneReq_default_instance_);_JoinPlayerSceneRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_JoinPlayerSceneRsp_default_instance_);_SceneKickPlayerReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneKickPlayerReq_default_instance_);_SceneKickPlayerRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneKickPlayerRsp_default_instance_);_SceneKickPlayerNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneKickPlayerNotify_default_instance_);_HitClientTrivialNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HitClientTrivialNotify_default_instance_);_BackMyWorldReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BackMyWorldReq_default_instance_);_BackMyWorldRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BackMyWorldRsp_default_instance_);_SeeMonsterReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SeeMonsterReq_default_instance_);_SeeMonsterRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SeeMonsterRsp_default_instance_);_AddSeenMonsterNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddSeenMonsterNotify_default_instance_);_AllSeenMonsterNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AllSeenMonsterNotify_default_instance_);_SceneTimeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneTimeNotify_default_instance_);_EnterSceneReadyReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterSceneReadyReq_default_instance_);_EnterSceneReadyRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterSceneReadyRsp_default_instance_);_EnterScenePeerNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterScenePeerNotify_default_instance_);_EnterSceneDoneReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterSceneDoneReq_default_instance_);_EnterSceneDoneRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterSceneDoneRsp_default_instance_);_WorldPlayerDieNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldPlayerDieNotify_default_instance_);_WorldPlayerReviveReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldPlayerReviveReq_default_instance_);_WorldPlayerReviveRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldPlayerReviveRsp_default_instance_);_JoinPlayerFailNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_JoinPlayerFailNotify_default_instance_);_SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_);_SetSceneWeatherAreaReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetSceneWeatherAreaReq_default_instance_);_SetSceneWeatherAreaRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetSceneWeatherAreaRsp_default_instance_);_ExecuteGadgetLuaReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExecuteGadgetLuaReq_default_instance_);_ExecuteGadgetLuaRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ExecuteGadgetLuaRsp_default_instance_);_CutSceneBeginNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CutSceneBeginNotify_default_instance_);_CutSceneFinishNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CutSceneFinishNotify_default_instance_);_CutSceneEndNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CutSceneEndNotify_default_instance_);_ClientScriptEventNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientScriptEventNotify_default_instance_);_EntityMoveInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityMoveInfo_default_instance_);_SceneEntitiesMovesReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntitiesMovesReq_default_instance_);_EntityMoveFailInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityMoveFailInfo_default_instance_);_SceneEntitiesMovesRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntitiesMovesRsp_default_instance_);_SceneEntitiesMoveCombineNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneEntitiesMoveCombineNotify_default_instance_);_UnlockTransPointReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnlockTransPointReq_default_instance_);_UnlockTransPointRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnlockTransPointRsp_default_instance_);_PlatformRouteStateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformRouteStateNotify_default_instance_);_SceneWeatherForcastReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneWeatherForcastReq_default_instance_);_SceneWeatherForcastRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneWeatherForcastRsp_default_instance_);_MarkMapReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarkMapReq_default_instance_);_MarkMapRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarkMapRsp_default_instance_);_AllMarkPointNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AllMarkPointNotify_default_instance_);_WorldDataNotify_WorldPropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldDataNotify_WorldPropMapEntry_default_instance_);_WorldDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldDataNotify_default_instance_);_EntityMoveRoomNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EntityMoveRoomNotify_default_instance_);_WorldPlayerInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_WorldPlayerInfoNotify_default_instance_);_PostEnterSceneReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PostEnterSceneReq_default_instance_);_PostEnterSceneRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PostEnterSceneRsp_default_instance_);_ChatInfo_SystemHint_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatInfo_SystemHint_default_instance_);_ChatInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatInfo_default_instance_);_PlayerChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerChatReq_default_instance_);_PlayerChatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerChatRsp_default_instance_);_PlayerChatNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerChatNotify_default_instance_);_PlayerChatCDNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerChatCDNotify_default_instance_);_ChatHistoryNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChatHistoryNotify_default_instance_);_SceneDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneDataNotify_default_instance_);_DungeonEntryToBeExploreNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DungeonEntryToBeExploreNotify_default_instance_);_GetDungeonEntryExploreConditionReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetDungeonEntryExploreConditionReq_default_instance_);_DungeonEntryCond_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DungeonEntryCond_default_instance_);_GetDungeonEntryExploreConditionRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetDungeonEntryExploreConditionRsp_default_instance_);_UnfreezeGroupLimitNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnfreezeGroupLimitNotify_default_instance_);_EnterWorldFogAreaNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnterWorldFogAreaNotify_default_instance_);_UnlockWorldFogAreaNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnlockWorldFogAreaNotify_default_instance_);_LockWorldFogAreaNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LockWorldFogAreaNotify_default_instance_);_SetEntityClientDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SetEntityClientDataNotify_default_instance_);_PlayerEnterSceneNotify_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _PlayerEnterSceneNotify_default_instance_._instance.get_mutable()->prev_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SceneEntityMoveReq_default_instance_._instance.get_mutable()->motion_info_ = const_cast< ::proto::MotionInfo*>(
      ::proto::MotionInfo::internal_default_instance());
  _SceneEntityMoveRsp_default_instance_._instance.get_mutable()->fail_motion_ = const_cast< ::proto::MotionInfo*>(
      ::proto::MotionInfo::internal_default_instance());
  _SceneAvatarStaminaStepReq_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SceneAvatarStaminaStepRsp_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SceneEntityMoveNotify_default_instance_._instance.get_mutable()->motion_info_ = const_cast< ::proto::MotionInfo*>(
      ::proto::MotionInfo::internal_default_instance());
  _EntityJumpNotify_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _EntityJumpNotify_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SceneCreateEntityReq_default_instance_._instance.get_mutable()->entity_ = const_cast< ::proto::CreateEntityInfo*>(
      ::proto::CreateEntityInfo::internal_default_instance());
  _SceneCreateEntityRsp_default_instance_._instance.get_mutable()->entity_ = const_cast< ::proto::CreateEntityInfo*>(
      ::proto::CreateEntityInfo::internal_default_instance());
  _EntityForceSyncReq_default_instance_._instance.get_mutable()->motion_info_ = const_cast< ::proto::MotionInfo*>(
      ::proto::MotionInfo::internal_default_instance());
  _EntityForceSyncRsp_default_instance_._instance.get_mutable()->fail_motion_ = const_cast< ::proto::MotionInfo*>(
      ::proto::MotionInfo::internal_default_instance());
  _ClientTransmitReq_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _ClientTransmitReq_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_._instance.get_mutable());
  _SceneAreaWeatherNotify_WeatherValueMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ScenePlayerInfo_default_instance_._instance.get_mutable()->online_player_info_ = const_cast< ::proto::OnlinePlayerInfo*>(
      ::proto::OnlinePlayerInfo::internal_default_instance());
  _PlayerLocationInfo_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _PlayerLocationInfo_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _BeginCameraSceneLookNotify_default_instance_._instance.get_mutable()->look_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MarkEntityInMinMapNotify_default_instance_._instance.get_mutable()->position_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _LevelupCityRsp_default_instance_._instance.get_mutable()->city_info_ = const_cast< ::proto::CityInfo*>(
      ::proto::CityInfo::internal_default_instance());
  _PlatformStartRouteNotify_default_instance_._instance.get_mutable()->platform_ = const_cast< ::proto::PlatformInfo*>(
      ::proto::PlatformInfo::internal_default_instance());
  _PlatformChangeRouteNotify_default_instance_._instance.get_mutable()->platform_ = const_cast< ::proto::PlatformInfo*>(
      ::proto::PlatformInfo::internal_default_instance());
  _ScenePlayerSoundNotify_default_instance_._instance.get_mutable()->play_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _PersonalSceneJumpRsp_default_instance_._instance.get_mutable()->dest_pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _AvatarEnterSceneInfo_default_instance_._instance.get_mutable()->avatar_ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _AvatarEnterSceneInfo_default_instance_._instance.get_mutable()->weapon_ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _TeamEnterSceneInfo_default_instance_._instance.get_mutable()->team_ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _MPLevelEntityInfo_default_instance_._instance.get_mutable()->ability_info_ = const_cast< ::proto::AbilitySyncStateInfo*>(
      ::proto::AbilitySyncStateInfo::internal_default_instance());
  _PlayerEnterSceneInfoNotify_default_instance_._instance.get_mutable()->team_enter_info_ = const_cast< ::proto::TeamEnterSceneInfo*>(
      ::proto::TeamEnterSceneInfo::internal_default_instance());
  _PlayerEnterSceneInfoNotify_default_instance_._instance.get_mutable()->mp_level_entity_info_ = const_cast< ::proto::MPLevelEntityInfo*>(
      ::proto::MPLevelEntityInfo::internal_default_instance());
  _HitClientTrivialNotify_default_instance_._instance.get_mutable()->position_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _WorldPlayerDieNotify_default_instance_.monster_id_ = 0u;
  _WorldPlayerDieNotify_default_instance_.gadget_id_ = 0u;
  _SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_._instance.get_mutable());
  _SetSceneWeatherAreaReq_WeatherValueMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _EntityMoveInfo_default_instance_._instance.get_mutable()->motion_info_ = const_cast< ::proto::MotionInfo*>(
      ::proto::MotionInfo::internal_default_instance());
  _EntityMoveFailInfo_default_instance_._instance.get_mutable()->fail_motion_ = const_cast< ::proto::MotionInfo*>(
      ::proto::MotionInfo::internal_default_instance());
  _PlatformRouteStateNotify_default_instance_._instance.get_mutable()->pos_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _PlatformRouteStateNotify_default_instance_._instance.get_mutable()->rot_ = const_cast< ::proto::Vector*>(
      ::proto::Vector::internal_default_instance());
  _MarkMapReq_default_instance_._instance.get_mutable()->old_ = const_cast< ::proto::MapMarkPoint*>(
      ::proto::MapMarkPoint::internal_default_instance());
  _MarkMapReq_default_instance_._instance.get_mutable()->mark_ = const_cast< ::proto::MapMarkPoint*>(
      ::proto::MapMarkPoint::internal_default_instance());
  _WorldDataNotify_WorldPropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_WorldDataNotify_WorldPropMapEntry_default_instance_._instance.get_mutable());
  _WorldDataNotify_WorldPropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ChatInfo_default_instance_.text_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _ChatInfo_default_instance_.icon_ = 0u;
  _ChatInfo_default_instance_.system_hint_ = const_cast< ::proto::ChatInfo_SystemHint*>(
      ::proto::ChatInfo_SystemHint::internal_default_instance());
  _PlayerChatReq_default_instance_._instance.get_mutable()->chat_info_ = const_cast< ::proto::ChatInfo*>(
      ::proto::ChatInfo::internal_default_instance());
  _PlayerChatNotify_default_instance_._instance.get_mutable()->chat_info_ = const_cast< ::proto::ChatInfo*>(
      ::proto::ChatInfo::internal_default_instance());
  _GetDungeonEntryExploreConditionRsp_default_instance_._instance.get_mutable()->dungeon_entry_cond_ = const_cast< ::proto::DungeonEntryCond*>(
      ::proto::DungeonEntryCond::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023cmd/cmd_scene.proto\022\005proto\032\014define.pro"
      "to\"\337\002\n\026PlayerEnterSceneNotify\022\020\n\010scene_i"
      "d\030\001 \001(\r\022\032\n\003pos\030\002 \001(\0132\r.proto.Vector\022\030\n\020s"
      "cene_begin_time\030\003 \001(\004\022\036\n\004type\030\004 \001(\0162\020.pr"
      "oto.EnterType\022\022\n\ntarget_uid\030\006 \001(\r\022\025\n\rpre"
      "v_scene_id\030\t \001(\r\022\037\n\010prev_pos\030\n \001(\0132\r.pro"
      "to.Vector\022\022\n\ndungeon_id\030\013 \001(\r\022\023\n\013world_l"
      "evel\030\014 \001(\r\022\031\n\021enter_scene_token\030\r \001(\r\"M\n"
      "\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\311\001\022\023\n\017ENET_CH"
      "ANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"s\n\r"
      "LeaveSceneReq\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\312\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"o\n\rLea"
      "veSceneRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\013\n\006CMD_ID\020\313\001\022\023\n\017ENET_CHANNEL_ID\020\000"
      "\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\223\001\n\022SceneInit"
      "FinishReq\022\031\n\021enter_scene_token\030\001 \001(\r\"b\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\314\001\022\023\n\017ENET_CHA"
      "NNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_AL"
      "LOW_CLIENT\020\001\032\002\020\001\"\211\001\n\022SceneInitFinishRsp\022"
      "\017\n\007retcode\030\001 \001(\005\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\315\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\314\001\n"
      "\027SceneEntityAppearNotify\022+\n\013entity_list\030"
      "\001 \003(\0132\026.proto.SceneEntityInfo\022&\n\013appear_"
      "type\030\002 \001(\0162\021.proto.VisionType\022\r\n\005param\030\003"
      " \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\316\001\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032"
      "\002\020\001\"\253\001\n\032SceneEntityDisappearNotify\022\023\n\013en"
      "tity_list\030\001 \003(\r\022)\n\016disappear_type\030\002 \001(\0162"
      "\021.proto.VisionType\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n"
      "\006CMD_ID\020\317\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_"
      "IS_RELIABLE\020\001\032\002\020\001\"\335\001\n\022SceneEntityMoveReq"
      "\022\021\n\tentity_id\030\001 \001(\r\022&\n\013motion_info\030\002 \001(\013"
      "2\021.proto.MotionInfo\022\022\n\nscene_time\030\003 \001(\r\022"
      "\024\n\014reliable_seq\030\004 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\013\n\006CMD_ID\020\320\001\022\023\n\017ENET_CHANNEL_ID\020\001\022\024\n\020EN"
      "ET_IS_RELIABLE\020\000\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020"
      "\001\"\331\001\n\022SceneEntityMoveRsp\022\017\n\007retcode\030\001 \001("
      "\005\022\021\n\tentity_id\030\002 \001(\r\022&\n\013fail_motion\030\003 \001("
      "\0132\021.proto.MotionInfo\022\022\n\nscene_time\030\004 \001(\r"
      "\022\024\n\014reliable_seq\030\005 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\321\001\022\023\n\017ENET_CHANNEL_ID\020\001\022\024\n\020E"
      "NET_IS_RELIABLE\020\000\032\002\020\001\"\263\001\n\031SceneAvatarSta"
      "minaStepReq\022\026\n\016use_client_rot\030\001 \001(\010\022\032\n\003r"
      "ot\030\002 \001(\0132\r.proto.Vector\"b\n\005CmdId\022\010\n\004NONE"
      "\020\000\022\013\n\006CMD_ID\020\322\001\022\023\n\017ENET_CHANNEL_ID\020\001\022\024\n\020"
      "ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032"
      "\002\020\001\"\257\001\n\031SceneAvatarStaminaStepRsp\022\017\n\007ret"
      "code\030\001 \001(\005\022\026\n\016use_client_rot\030\002 \001(\010\022\032\n\003ro"
      "t\030\003 \001(\0132\r.proto.Vector\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\323\001\022\023\n\017ENET_CHANNEL_ID\020\001\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"\313\001\n\025SceneEntityMov"
      "eNotify\022\021\n\tentity_id\030\001 \001(\r\022&\n\013motion_inf"
      "o\030\002 \001(\0132\021.proto.MotionInfo\022\022\n\nscene_time"
      "\030\003 \001(\r\022\024\n\014reliable_seq\030\004 \001(\r\"M\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\324\001\022\023\n\017ENET_CHANNEL_ID\020"
      "\001\022\024\n\020ENET_IS_RELIABLE\020\000\032\002\020\001\"\260\001\n\031ScenePla"
      "yerLocationNotify\022\020\n\010scene_id\030\001 \001(\r\0222\n\017p"
      "layer_loc_list\030\002 \003(\0132\031.proto.PlayerLocat"
      "ionInfo\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\325\001\022"
      "\023\n\017ENET_CHANNEL_ID\020\001\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\032\002\020\001\"\234\001\n\020GetScenePointReq\022\020\n\010scene_id\030"
      "\001 \001(\r\022\022\n\nbelong_uid\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\326\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020"
      "\001\032\002\020\001\"\?\n\010CityInfo\022\017\n\007city_id\030\001 \001(\r\022\r\n\005le"
      "vel\030\002 \001(\r\022\023\n\013crystal_num\030\003 \001(\r\"\257\003\n\020GetSc"
      "enePointRsp\022\017\n\007retcode\030\001 \001(\005\022\020\n\010scene_id"
      "\030\002 \001(\r\022\033\n\023unlocked_point_list\030\003 \003(\r\022\022\n\nb"
      "elong_uid\030\004 \001(\r\022\030\n\020unlock_area_list\030\005 \003("
      "\r\022\031\n\021locked_point_list\030\006 \003(\r\022(\n to_be_ex"
      "plore_dungeon_entry_list\030\007 \003(\r\022\'\n\037not_ex"
      "plored_dungeon_entry_list\030\010 \003(\r\022 \n\030group"
      "_unlimit_point_list\030\t \003(\r\022&\n\036unlocked_fo"
      "g_level_1_area_list\030\n \003(\r\022&\n\036unlokced_fo"
      "g_level_2_area_list\030\013 \003(\r\"M\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\327\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\245\001\n\033EnterTransP"
      "ointRegionNotify\022\020\n\010scene_id\030\001 \001(\r\022\020\n\010po"
      "int_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\330\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\244\001\n\032Exi"
      "tTransPointRegionNotify\022\020\n\010scene_id\030\001 \001("
      "\r\022\020\n\010point_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013"
      "\n\006CMD_ID\020\331\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\""
      "\250\001\n\026ScenePointUnlockNotify\022\020\n\010scene_id\030\001"
      " \001(\r\022\022\n\npoint_list\030\002 \003(\r\022\031\n\021locked_point"
      "_list\030\003 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\332\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\032\002\020\001\"\236\001\n\024SceneTransToPointReq\022\020\n\010s"
      "cene_id\030\001 \001(\r\022\020\n\010point_id\030\002 \001(\r\"b\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\333\001\022\023\n\017ENET_CHANNEL_"
      "ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_C"
      "LIENT\020\001\032\002\020\001\"\232\001\n\024SceneTransToPointRsp\022\017\n\007"
      "retcode\030\001 \001(\005\022\020\n\010scene_id\030\002 \001(\r\022\020\n\010point"
      "_id\030\003 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\334"
      "\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\032\002\020\001\"\210\002\n\020EntityJumpNotify\022\021\n\tentity_"
      "id\030\001 \001(\r\022/\n\tjump_type\030\002 \001(\0162\034.proto.Enti"
      "tyJumpNotify.Type\022\032\n\003pos\030\003 \001(\0132\r.proto.V"
      "ector\022\032\n\003rot\030\004 \001(\0132\r.proto.Vector\"M\n\005Cmd"
      "Id\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\335\001\022\023\n\017ENET_CHANNE"
      "L_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\")\n\004Type"
      "\022\010\n\004NULL\020\000\022\n\n\006ACTIVE\020\001\022\013\n\007PASSIVE\020\002\"\233\001\n\017"
      "GetSceneAreaReq\022\020\n\010scene_id\030\001 \001(\r\022\022\n\nbel"
      "ong_uid\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\336\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\302\001\n\017Ge"
      "tSceneAreaRsp\022\017\n\007retcode\030\001 \001(\005\022\020\n\010scene_"
      "id\030\002 \001(\r\022\024\n\014area_id_list\030\003 \003(\r\022\'\n\016city_i"
      "nfo_list\030\004 \003(\0132\017.proto.CityInfo\"M\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\337\001\022\023\n\017ENET_CHANNEL_"
      "ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\213\001\n\025Scene"
      "AreaUnlockNotify\022\020\n\010scene_id\030\001 \001(\r\022\021\n\tar"
      "ea_list\030\002 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\340\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\032\002\020\001\"\214\001\n\023SceneEntityDrownReq\022\021\n\t"
      "entity_id\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\341\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\210\001\n\023"
      "SceneEntityDrownRsp\022\017\n\007retcode\030\001 \001(\005\022\021\n\t"
      "entity_id\030\002 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\342\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\032\002\020\001\"\354\001\n\024SceneCreateEntityReq\022"
      "\'\n\006entity\030\001 \001(\0132\027.proto.CreateEntityInfo"
      "\022#\n\006reason\030\002 \001(\0162\023.proto.CreateReason\022\"\n"
      "\032is_destroy_when_disconnect\030\003 \001(\010\"b\n\005Cmd"
      "Id\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\343\001\022\023\n\017ENET_CHANNE"
      "L_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW"
      "_CLIENT\020\001\032\002\020\001\"\262\001\n\024SceneCreateEntityRsp\022\017"
      "\n\007retcode\030\001 \001(\005\022\021\n\tentity_id\030\002 \001(\r\022\'\n\006en"
      "tity\030\003 \001(\0132\027.proto.CreateEntityInfo\"M\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\344\001\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\216\001\n\025S"
      "ceneDestroyEntityReq\022\021\n\tentity_id\030\001 \001(\r\""
      "b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\345\001\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS"
      "_ALLOW_CLIENT\020\001\032\002\020\001\"\212\001\n\025SceneDestroyEnti"
      "tyRsp\022\017\n\007retcode\030\001 \001(\005\022\021\n\tentity_id\030\002 \001("
      "\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\346\001\022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001"
      "\"\216\001\n\026SceneForceUnlockNotify\022\025\n\rforce_id_"
      "list\030\001 \003(\r\022\016\n\006is_add\030\002 \001(\010\"M\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\013\n\006CMD_ID\020\347\001\022\023\n\017ENET_CHANNEL_ID\020\000\022"
      "\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"|\n\024SceneForceL"
      "ockNotify\022\025\n\rforce_id_list\030\001 \003(\r\"M\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\350\001\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\233\001\n\021Ente"
      "rWorldAreaReq\022\021\n\tarea_type\030\001 \001(\r\022\017\n\007area"
      "_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\351"
      "\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\227\001\n\021EnterW"
      "orldAreaRsp\022\017\n\007retcode\030\001 \001(\005\022\021\n\tarea_typ"
      "e\030\002 \001(\r\022\017\n\007area_id\030\003 \001(\r\"M\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\352\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\330\001\n\022EntityForceS"
      "yncReq\022\021\n\tentity_id\030\001 \001(\r\022&\n\013motion_info"
      "\030\002 \001(\0132\021.proto.MotionInfo\022\022\n\nscene_time\030"
      "\003 \001(\r\022\017\n\007room_id\030\004 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\353\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002"
      "\020\001\"\303\001\n\022EntityForceSyncRsp\022\017\n\007retcode\030\001 \001"
      "(\005\022\021\n\tentity_id\030\002 \001(\r\022&\n\013fail_motion\030\003 \001"
      "(\0132\021.proto.MotionInfo\022\022\n\nscene_time\030\004 \001("
      "\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\354\001\022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001"
      "\"\243\001\n\026SceneAreaExploreNotify\022\017\n\007area_id\030\001"
      " \001(\r\022\027\n\017explore_percent\030\002 \001(\002\022\020\n\010event_i"
      "d\030\003 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\355\001\022"
      "\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\032\002\020\001\"\224\001\n\035SceneGetAreaExplorePercentReq"
      "\022\017\n\007area_id\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\356\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\251\001"
      "\n\035SceneGetAreaExplorePercentRsp\022\017\n\007retco"
      "de\030\001 \001(\005\022\027\n\017explore_percent\030\002 \001(\002\022\017\n\007are"
      "a_id\030\003 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\357\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\032\002\020\001\"\350\001\n\021ClientTransmitReq\022\032\n\003pos\030\001"
      " \001(\0132\r.proto.Vector\022\032\n\003rot\030\002 \001(\0132\r.proto"
      ".Vector\022%\n\006reason\030\003 \001(\0162\025.proto.Transmit"
      "Reason\022\020\n\010scene_id\030\004 \001(\r\"b\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\360\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001"
      "\032\002\020\001\"\232\001\n\021ClientTransmitRsp\022\017\n\007retcode\030\001 "
      "\001(\005\022%\n\006reason\030\002 \001(\0162\025.proto.TransmitReas"
      "on\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\361\001\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020"
      "\001\"\234\001\n\033EnterSceneWeatherAreaNotify\022\031\n\021wea"
      "ther_gadget_id\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\013\n\006CMD_ID\020\362\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENE"
      "T_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001"
      "\"\233\001\n\032ExitSceneWeatherAreaNotify\022\031\n\021weath"
      "er_gadget_id\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n"
      "\006CMD_ID\020\363\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_"
      "IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\270"
      "\002\n\026SceneAreaWeatherNotify\022\031\n\021weather_gad"
      "get_id\030\001 \001(\r\022M\n\021weather_value_map\030\002 \003(\0132"
      "2.proto.SceneAreaWeatherNotify.WeatherVa"
      "lueMapEntry\022\027\n\017weather_area_id\030\003 \001(\r\022\024\n\014"
      "climate_type\030\004 \001(\r\0326\n\024WeatherValueMapEnt"
      "ry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\t:\0028\001\"M\n\005Cm"
      "dId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\364\001\022\023\n\017ENET_CHANN"
      "EL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\232\001\n\017Sc"
      "enePlayerInfo\022\013\n\003uid\030\001 \001(\r\022\017\n\007peer_id\030\002 "
      "\001(\r\022\014\n\004name\030\003 \001(\t\022\024\n\014is_connected\030\004 \001(\010\022"
      "\020\n\010scene_id\030\005 \001(\r\0223\n\022online_player_info\030"
      "\006 \001(\0132\027.proto.OnlinePlayerInfo\"\230\001\n\025Scene"
      "PlayerInfoNotify\0220\n\020player_info_list\030\001 \003"
      "(\0132\026.proto.ScenePlayerInfo\"M\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\013\n\006CMD_ID\020\365\001\022\023\n\017ENET_CHANNEL_ID\020\000\022"
      "\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"Y\n\022PlayerLocat"
      "ionInfo\022\013\n\003uid\030\001 \001(\r\022\032\n\003pos\030\002 \001(\0132\r.prot"
      "o.Vector\022\032\n\003rot\030\003 \001(\0132\r.proto.Vector\"\236\001\n"
      "\031WorldPlayerLocationNotify\0222\n\017player_loc"
      "_list\030\001 \003(\0132\031.proto.PlayerLocationInfo\"M"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\366\001\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\351\001"
      "\n\032BeginCameraSceneLookNotify\022\037\n\010look_pos"
      "\030\001 \001(\0132\r.proto.Vector\022\020\n\010duration\030\002 \001(\002\022"
      "\020\n\010is_force\030\003 \001(\010\022\037\n\027is_recover_keep_cur"
      "rent\030\004 \001(\010\022\026\n\016is_allow_input\030\005 \001(\010\"M\n\005Cm"
      "dId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\367\001\022\023\n\017ENET_CHANN"
      "EL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"i\n\030End"
      "CameraSceneLookNotify\"M\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\013\n\006CMD_ID\020\370\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020EN"
      "ET_IS_RELIABLE\020\001\032\002\020\001\"\261\001\n\030MarkEntityInMin"
      "MapNotify\022\021\n\tentity_id\030\001 \001(\r\022\037\n\010position"
      "\030\002 \001(\0132\r.proto.Vector\022\022\n\nmonster_id\030\003 \001("
      "\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\371\001\022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001"
      "\"~\n\032UnmarkEntityInMinMapNotify\022\021\n\tentity"
      "_id\030\001 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\372"
      "\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIAB"
      "LE\020\001\032\002\020\001\"\337\001\n\017DropSubfieldReq\022*\n\tdrop_typ"
      "e\030\001 \001(\0162\027.proto.DropSubfieldType\022\022\n\ndrop"
      "_param\030\002 \001(\r\022\021\n\tentity_id\030\003 \001(\r\022\025\n\rsubfi"
      "eld_name\030\004 \001(\t\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD"
      "_ID\020\373\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"q\n\017Dr"
      "opSubfieldRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\374\001\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\365\001\n\026Execut"
      "eGroupTriggerReq\022\030\n\020source_entity_id\030\001 \001"
      "(\r\022\023\n\013source_name\030\002 \001(\t\022\030\n\020target_entity"
      "_id\030\003 \001(\r\022\016\n\006param1\030\004 \001(\005\022\016\n\006param2\030\005 \001("
      "\005\022\016\n\006param3\030\006 \001(\005\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\375\001\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"x\n"
      "\026ExecuteGroupTriggerRsp\022\017\n\007retcode\030\001 \001(\005"
      "\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\376\001\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\""
      "\251\001\n\016LevelupCityReq\022\020\n\010scene_id\030\001 \001(\r\022\017\n\007"
      "area_id\030\002 \001(\r\022\020\n\010item_num\030\003 \001(\r\"b\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\377\001\022\023\n\017ENET_CHANNEL_"
      "ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_C"
      "LIENT\020\001\032\002\020\001\"\267\001\n\016LevelupCityRsp\022\017\n\007retcod"
      "e\030\001 \001(\005\022\020\n\010scene_id\030\002 \001(\r\022\017\n\007area_id\030\003 \001"
      "(\r\022\"\n\tcity_info\030\004 \001(\0132\017.proto.CityInfo\"M"
      "\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\200\002\022\023\n\017ENET_C"
      "HANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"W\n"
      "\024RoutePointChangeInfo\022\023\n\013point_index\030\001 \001"
      "(\r\022\027\n\017target_velocity\030\002 \001(\002\022\021\n\twait_time"
      "\030\003 \001(\002\"{\n\024SceneRouteChangeInfo\022\020\n\010route_"
      "id\030\001 \001(\r\022\014\n\004type\030\002 \001(\r\022\022\n\nis_forward\030\003 \001"
      "(\010\022/\n\npoint_list\030\004 \003(\0132\033.proto.RoutePoin"
      "tChangeInfo\"\276\001\n\026SceneRouteChangeNotify\022\020"
      "\n\010scene_id\030\001 \001(\r\022/\n\nroute_list\030\002 \003(\0132\033.p"
      "roto.SceneRouteChangeInfo\022\022\n\nscene_time\030"
      "\003 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\201\002\022\023\n"
      "\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001"
      "\032\002\020\001\"\267\001\n\030PlatformStartRouteNotify\022\021\n\tent"
      "ity_id\030\001 \001(\r\022%\n\010platform\030\002 \001(\0132\023.proto.P"
      "latformInfo\022\022\n\nscene_time\030\003 \001(\r\"M\n\005CmdId"
      "\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\202\002\022\023\n\017ENET_CHANNEL_"
      "ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\217\001\n\027Platf"
      "ormStopRouteNotify\022\021\n\tentity_id\030\001 \001(\r\022\022\n"
      "\nscene_time\030\002 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\203\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\032\002\020\001\"\244\001\n\031PlatformChangeRoute"
      "Notify\022\021\n\tentity_id\030\001 \001(\r\022%\n\010platform\030\002 "
      "\001(\0132\023.proto.PlatformInfo\"M\n\005CmdId\022\010\n\004NON"
      "E\020\000\022\013\n\006CMD_ID\020\204\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n"
      "\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\255\002\n\026ScenePlayerS"
      "oundNotify\022\022\n\nsound_name\030\001 \001(\t\022\037\n\010play_p"
      "os\030\002 \001(\0132\r.proto.Vector\022>\n\tplay_type\030\003 \001"
      "(\0162+.proto.ScenePlayerSoundNotify.PlaySo"
      "undType\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\205\002\022"
      "\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\032\002\020\001\"O\n\rPlaySoundType\022\023\n\017PLAY_SOUND_NO"
      "NE\020\000\022\024\n\020PLAY_SOUND_START\020\001\022\023\n\017PLAY_SOUND"
      "_STOP\020\002\"\214\001\n\024PersonalSceneJumpReq\022\020\n\010poin"
      "t_id\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020"
      "\206\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIA"
      "BLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\256\001\n\024Perso"
      "nalSceneJumpRsp\022\017\n\007retcode\030\001 \001(\005\022\025\n\rdest"
      "_scene_id\030\002 \001(\r\022\037\n\010dest_pos\030\003 \001(\0132\r.prot"
      "o.Vector\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\207\002"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\332\001\n\025SealBattleBeginNotify\022\026\n\016sea"
      "l_entity_id\030\001 \001(\r\022\023\n\013seal_radius\030\002 \001(\r\022\031"
      "\n\021seal_max_progress\030\003 \001(\r\022*\n\013battle_type"
      "\030\004 \001(\0162\025.proto.SealBattleType\"M\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\210\002\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\214\001\n\023SealBat"
      "tleEndNotify\022\026\n\016seal_entity_id\030\001 \001(\r\022\016\n\006"
      "is_win\030\002 \001(\010\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\211\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\032\002\020\001\"\320\001\n\030SealBattleProgressNotify"
      "\022\026\n\016seal_entity_id\030\001 \001(\r\022\020\n\010progress\030\002 \001"
      "(\r\022\024\n\014max_progress\030\003 \001(\r\022\020\n\010end_time\030\004 \001"
      "(\r\022\023\n\013seal_radius\030\005 \001(\r\"M\n\005CmdId\022\010\n\004NONE"
      "\020\000\022\013\n\006CMD_ID\020\212\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020"
      "ENET_IS_RELIABLE\020\001\032\002\020\001\"\210\001\n\021ClientPauseNo"
      "tify\022\017\n\007is_open\030\001 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000"
      "\022\013\n\006CMD_ID\020\213\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020EN"
      "ET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020"
      "\001\"\253\002\n\024AvatarEnterSceneInfo\022\023\n\013avatar_gui"
      "d\030\001 \001(\004\022\030\n\020avatar_entity_id\030\002 \001(\r\0228\n\023ava"
      "tar_ability_info\030\003 \001(\0132\033.proto.AbilitySy"
      "ncStateInfo\022\024\n\014buff_id_list\030\004 \003(\r\022\023\n\013wea"
      "pon_guid\030\005 \001(\004\022\030\n\020weapon_entity_id\030\006 \001(\r"
      "\0228\n\023weapon_ability_info\030\007 \001(\0132\033.proto.Ab"
      "ilitySyncStateInfo\022+\n\020server_buff_list\030\010"
      " \003(\0132\021.proto.ServerBuff\"d\n\022TeamEnterScen"
      "eInfo\022\026\n\016team_entity_id\030\001 \001(\r\0226\n\021team_ab"
      "ility_info\030\002 \001(\0132\033.proto.AbilitySyncStat"
      "eInfo\"t\n\021MPLevelEntityInfo\022\021\n\tentity_id\030"
      "\001 \001(\r\022\031\n\021authority_peer_id\030\002 \001(\r\0221\n\014abil"
      "ity_info\030\003 \001(\0132\033.proto.AbilitySyncStateI"
      "nfo\"\302\002\n\032PlayerEnterSceneInfoNotify\022\034\n\024cu"
      "r_avatar_entity_id\030\001 \001(\r\0226\n\021avatar_enter"
      "_info\030\002 \003(\0132\033.proto.AvatarEnterSceneInfo"
      "\0222\n\017team_enter_info\030\003 \001(\0132\031.proto.TeamEn"
      "terSceneInfo\0226\n\024mp_level_entity_info\030\004 \001"
      "(\0132\030.proto.MPLevelEntityInfo\"b\n\005CmdId\022\010\n"
      "\004NONE\020\000\022\013\n\006CMD_ID\020\214\002\022\023\n\017ENET_CHANNEL_ID\020"
      "\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIE"
      "NT\020\001\032\002\020\001\"\214\001\n\022JoinPlayerSceneReq\022\022\n\ntarge"
      "t_uid\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\215\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"t\n\022JoinP"
      "layerSceneRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\216\002\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\214\001\n\022SceneK"
      "ickPlayerReq\022\022\n\ntarget_uid\030\001 \001(\r\"b\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\217\002\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_"
      "CLIENT\020\001\032\002\020\001\"\210\001\n\022SceneKickPlayerRsp\022\017\n\007r"
      "etcode\030\001 \001(\005\022\022\n\ntarget_uid\030\002 \001(\r\"M\n\005CmdI"
      "d\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\220\002\022\023\n\017ENET_CHANNEL"
      "_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\243\001\n\025Scen"
      "eKickPlayerNotify\022\022\n\nkicker_uid\030\001 \001(\r\022\022\n"
      "\ntarget_uid\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\221\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\266\001"
      "\n\026HitClientTrivialNotify\022\037\n\010position\030\001 \001"
      "(\0132\r.proto.Vector\022\027\n\017owner_entity_id\030\002 \001"
      "(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\222\002\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n"
      "\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"t\n\016BackMyWorldReq"
      "\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\223\002\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017I"
      "S_ALLOW_CLIENT\020\001\032\002\020\001\"p\n\016BackMyWorldRsp\022\017"
      "\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\224\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\032\002\020\001\"\207\001\n\rSeeMonsterReq\022\022\n\nmons"
      "ter_id\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\225\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"o\n\rSeeM"
      "onsterRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\013\n\006CMD_ID\020\226\002\022\023\n\017ENET_CHANNEL_ID\020\000\022"
      "\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\223\001\n\024AddSeenMon"
      "sterNotify\022\027\n\017monster_id_list\030\001 \003(\r\"b\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\227\002\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALL"
      "OW_CLIENT\020\001\032\002\020\001\"\223\001\n\024AllSeenMonsterNotify"
      "\022\027\n\017monster_id_list\030\001 \003(\r\"b\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\230\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020"
      "\001\032\002\020\001\"\231\001\n\017SceneTimeNotify\022\020\n\010scene_id\030\001 "
      "\001(\r\022\021\n\tis_paused\030\002 \001(\010\022\022\n\nscene_time\030\003 \001"
      "(\004\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\231\002\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020"
      "\001\"\223\001\n\022EnterSceneReadyReq\022\031\n\021enter_scene_"
      "token\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\232\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"t\n\022Enter"
      "SceneReadyRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\233\002\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\243\001\n\024EnterS"
      "cenePeerNotify\022\025\n\rdest_scene_id\030\001 \001(\r\022\017\n"
      "\007peer_id\030\002 \001(\r\022\024\n\014host_peer_id\030\003 \001(\r\"M\n\005"
      "CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\234\002\022\023\n\017ENET_CHA"
      "NNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\222\001\n\021"
      "EnterSceneDoneReq\022\031\n\021enter_scene_token\030\001"
      " \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\235\002\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022"
      "\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"s\n\021EnterSceneDo"
      "neRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\236\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"\336\001\n\024WorldPlayerDie"
      "Notify\022&\n\010die_type\030\001 \001(\0162\024.proto.PlayerD"
      "ieType\022\032\n\022murderer_entity_id\030\002 \001(\r\022\024\n\nmo"
      "nster_id\030\003 \001(\rH\000\022\023\n\tgadget_id\030\004 \001(\rH\000\"M\n"
      "\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\237\002\022\023\n\017ENET_CH"
      "ANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001B\010\n\006"
      "entity\"z\n\024WorldPlayerReviveReq\"b\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\240\002\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CL"
      "IENT\020\001\032\002\020\001\"v\n\024WorldPlayerReviveRsp\022\017\n\007re"
      "tcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\241\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\032\002\020\001\"v\n\024JoinPlayerFailNotify\022\017\n\007re"
      "tcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\242\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\032\002\020\001\"\236\002\n\026SetSceneWeatherAreaReq\022\031\n"
      "\021weather_gadget_id\030\001 \001(\r\022M\n\021weather_valu"
      "e_map\030\002 \003(\01322.proto.SetSceneWeatherAreaR"
      "eq.WeatherValueMapEntry\0326\n\024WeatherValueM"
      "apEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\t:\0028\001\""
      "b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\243\002\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS"
      "_ALLOW_CLIENT\020\001\032\002\020\001\"x\n\026SetSceneWeatherAr"
      "eaRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\244\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"\303\001\n\023ExecuteGadgetL"
      "uaReq\022\030\n\020source_entity_id\030\001 \001(\r\022\016\n\006param"
      "1\030\002 \001(\005\022\016\n\006param2\030\003 \001(\005\022\016\n\006param3\030\004 \001(\005\""
      "b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\245\002\022\023\n\017ENET_"
      "CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS"
      "_ALLOW_CLIENT\020\001\032\002\020\001\"u\n\023ExecuteGadgetLuaR"
      "sp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013"
      "\n\006CMD_ID\020\246\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET"
      "_IS_RELIABLE\020\001\032\002\020\001\"\221\001\n\023CutSceneBeginNoti"
      "fy\022\023\n\013cutscene_id\030\001 \001(\r\022\026\n\016is_wait_other"
      "s\030\002 \001(\010\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\247\002\022"
      "\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\032\002\020\001\"\217\001\n\024CutSceneFinishNotify\022\023\n\013cutsc"
      "ene_id\030\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\250\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\210\001\n\021Cut"
      "SceneEndNotify\022\017\n\007retcode\030\001 \001(\005\022\023\n\013cutsc"
      "ene_id\030\002 \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_I"
      "D\020\251\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_REL"
      "IABLE\020\001\032\002\020\001\"\331\001\n\027ClientScriptEventNotify\022"
      "\022\n\nevent_type\030\001 \001(\r\022\030\n\020source_entity_id\030"
      "\002 \001(\r\022\030\n\020target_entity_id\030\003 \001(\r\022\022\n\nparam"
      "_list\030\004 \003(\005\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID"
      "\020\252\002\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELI"
      "ABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"u\n\016Entit"
      "yMoveInfo\022\021\n\tentity_id\030\001 \001(\r\022&\n\013motion_i"
      "nfo\030\002 \001(\0132\021.proto.MotionInfo\022\022\n\nscene_ti"
      "me\030\003 \001(\r\022\024\n\014reliable_seq\030\004 \001(\r\"\261\001\n\025Scene"
      "EntitiesMovesReq\0224\n\025entity_move_info_lis"
      "t\030\001 \003(\0132\025.proto.EntityMoveInfo\"b\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\253\002\022\023\n\017ENET_CHANNEL_I"
      "D\020\001\022\024\n\020ENET_IS_RELIABLE\020\000\022\023\n\017IS_ALLOW_CL"
      "IENT\020\001\032\002\020\001\"\212\001\n\022EntityMoveFailInfo\022\017\n\007ret"
      "code\030\001 \001(\005\022\021\n\tentity_id\030\002 \001(\r\022&\n\013fail_mo"
      "tion\030\003 \001(\0132\021.proto.MotionInfo\022\022\n\nscene_t"
      "ime\030\004 \001(\r\022\024\n\014reliable_seq\030\005 \001(\r\"\245\001\n\025Scen"
      "eEntitiesMovesRsp\022=\n\032entity_move_fail_in"
      "fo_list\030\001 \003(\0132\031.proto.EntityMoveFailInfo"
      "\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\254\002\022\023\n\017ENET"
      "_CHANNEL_ID\020\001\022\024\n\020ENET_IS_RELIABLE\020\000\032\002\020\001\""
      "\245\001\n\036SceneEntitiesMoveCombineNotify\0224\n\025en"
      "tity_move_info_list\030\001 \003(\0132\025.proto.Entity"
      "MoveInfo\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\271\027"
      "\022\023\n\017ENET_CHANNEL_ID\020\001\022\024\n\020ENET_IS_RELIABL"
      "E\020\000\032\002\020\001\"\235\001\n\023UnlockTransPointReq\022\020\n\010scene"
      "_id\030\001 \001(\r\022\020\n\010point_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004"
      "NONE\020\000\022\013\n\006CMD_ID\020\272\027\022\023\n\017ENET_CHANNEL_ID\020\001"
      "\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIEN"
      "T\020\001\032\002\020\001\"u\n\023UnlockTransPointRsp\022\017\n\007retcod"
      "e\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\273\027\022"
      "\023\n\017ENET_CHANNEL_ID\020\001\022\024\n\020ENET_IS_RELIABLE"
      "\020\001\032\002\020\001\"\203\002\n\030PlatformRouteStateNotify\022\021\n\te"
      "ntity_id\030\001 \001(\r\022\022\n\nscene_time\030\002 \001(\r\022\032\n\003po"
      "s\030\003 \001(\0132\r.proto.Vector\022\032\n\003rot\030\004 \001(\0132\r.pr"
      "oto.Vector\022\020\n\010route_id\030\005 \001(\r\022\022\n\nis_start"
      "ed\030\006 \001(\010\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\274\027"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\225\001\n\026SceneWe"
      "atherForcastReq\022\027\n\017weather_area_id\030\001 \001(\r"
      "\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\275\027\022\023\n\017ENET"
      "_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017I"
      "S_ALLOW_CLIENT\020\001\032\002\020\001\"\261\001\n\026SceneWeatherFor"
      "castRsp\022\017\n\007retcode\030\001 \001(\005\022\031\n\021next_climate"
      "_time\030\002 \001(\004\022\034\n\024forcast_climate_list\030\003 \003("
      "\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\276\027\022\023\n\017ENE"
      "T_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001"
      "\"\217\002\n\nMarkMapReq\022\'\n\002op\030\001 \001(\0162\033.proto.Mark"
      "MapReq.Operation\022 \n\003old\030\002 \001(\0132\023.proto.Ma"
      "pMarkPoint\022!\n\004mark\030\003 \001(\0132\023.proto.MapMark"
      "Point\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\302\027\022\023\n"
      "\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001"
      "\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"/\n\tOperation\022\007"
      "\n\003ADD\020\000\022\007\n\003MOD\020\001\022\007\n\003DEL\020\002\022\007\n\003GET\020\003\"\224\001\n\nM"
      "arkMapRsp\022\017\n\007retcode\030\001 \001(\005\022&\n\tmark_list\030"
      "\002 \003(\0132\023.proto.MapMarkPoint\"M\n\005CmdId\022\010\n\004N"
      "ONE\020\000\022\013\n\006CMD_ID\020\303\027\022\023\n\017ENET_CHANNEL_ID\020\000\022"
      "\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\213\001\n\022AllMarkPoi"
      "ntNotify\022&\n\tmark_list\030\001 \003(\0132\023.proto.MapM"
      "arkPoint\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\304\027"
      "\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABL"
      "E\020\001\032\002\020\001\"\252\002\n\017WorldDataNotify\022@\n\016world_pro"
      "p_map\030\001 \003(\0132(.proto.WorldDataNotify.Worl"
      "dPropMapEntry\032E\n\021WorldPropMapEntry\022\013\n\003ke"
      "y\030\001 \001(\r\022\037\n\005value\030\002 \001(\0132\020.proto.PropValue"
      ":\0028\001\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\305\027\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022"
      "\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"*\n\010DataType\022\r\n\t"
      "DATA_NONE\020\000\022\017\n\013WORLD_LEVEL\020\001\"\243\001\n\024EntityM"
      "oveRoomNotify\022\021\n\tentity_id\030\001 \001(\r\022\024\n\014dest"
      "_room_id\030\002 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD"
      "_ID\020\306\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_R"
      "ELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\307\001\n\025W"
      "orldPlayerInfoNotify\0221\n\020player_info_list"
      "\030\001 \003(\0132\027.proto.OnlinePlayerInfo\022\027\n\017playe"
      "r_uid_list\030\002 \003(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006C"
      "MD_ID\020\307\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS"
      "_RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"\222\001\n"
      "\021PostEnterSceneReq\022\031\n\021enter_scene_token\030"
      "\001 \001(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\310\027\022\023\n"
      "\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001"
      "\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"s\n\021PostEnterSc"
      "eneRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010\n\004NONE"
      "\020\000\022\013\n\006CMD_ID\020\311\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020"
      "ENET_IS_RELIABLE\020\001\032\002\020\001\"\354\001\n\010ChatInfo\022\014\n\004t"
      "ime\030\001 \001(\r\022\013\n\003uid\030\002 \001(\r\022\016\n\004text\030\003 \001(\tH\000\022\016"
      "\n\004icon\030\004 \001(\rH\000\0221\n\013system_hint\030\005 \001(\0132\032.pr"
      "oto.ChatInfo.SystemHintH\000\032\032\n\nSystemHint\022"
      "\014\n\004type\030\001 \001(\r\"K\n\016SystemHintType\022\r\n\tCHAT_"
      "NONE\020\000\022\024\n\020CHAT_ENTER_WORLD\020\001\022\024\n\020CHAT_LEA"
      "VE_WORLD\020\002B\t\n\007content\"\253\001\n\rPlayerChatReq\022"
      "\022\n\nchannel_id\030\001 \001(\r\022\"\n\tchat_info\030\002 \001(\0132\017"
      ".proto.ChatInfo\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CM"
      "D_ID\020\312\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_"
      "RELIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"o\n\rP"
      "layerChatRsp\022\017\n\007retcode\030\001 \001(\005\"M\n\005CmdId\022\010"
      "\n\004NONE\020\000\022\013\n\006CMD_ID\020\313\027\022\023\n\017ENET_CHANNEL_ID"
      "\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\231\001\n\020PlayerC"
      "hatNotify\022\022\n\nchannel_id\030\001 \001(\r\022\"\n\tchat_in"
      "fo\030\002 \001(\0132\017.proto.ChatInfo\"M\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\314\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"v\n\022PlayerChatCD"
      "Notify\022\021\n\tover_time\030\001 \001(\r\"M\n\005CmdId\022\010\n\004NO"
      "NE\020\000\022\013\n\006CMD_ID\020\315\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024"
      "\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\232\001\n\021ChatHistory"
      "Notify\022\022\n\nchannel_id\030\001 \001(\r\022\"\n\tchat_info\030"
      "\002 \003(\0132\017.proto.ChatInfo\"M\n\005CmdId\022\010\n\004NONE\020"
      "\000\022\013\n\006CMD_ID\020\316\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020E"
      "NET_IS_RELIABLE\020\001\032\002\020\001\"\200\001\n\017SceneDataNotif"
      "y\022\036\n\026level_config_name_list\030\001 \003(\t\"M\n\005Cmd"
      "Id\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\317\027\022\023\n\017ENET_CHANNE"
      "L_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\307\001\n\035Dun"
      "geonEntryToBeExploreNotify\022$\n\034dungeon_en"
      "try_scene_point_id\030\001 \001(\r\022\037\n\027dungeon_entr"
      "y_config_id\030\002 \001(\r\022\020\n\010scene_id\030\003 \001(\r\"M\n\005C"
      "mdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\320\027\022\023\n\017ENET_CHAN"
      "NEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032\002\020\001\"\341\001\n\"G"
      "etDungeonEntryExploreConditionReq\022$\n\034dun"
      "geon_entry_scene_point_id\030\001 \001(\r\022\037\n\027dunge"
      "on_entry_config_id\030\002 \001(\r\022\020\n\010scene_id\030\003 \001"
      "(\r\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\333\027\022\023\n\017EN"
      "ET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n"
      "\017IS_ALLOW_CLIENT\020\001\032\002\020\001\"W\n\020DungeonEntryCo"
      "nd\0223\n\013cond_reason\030\001 \001(\0162\036.proto.DungeonE"
      "ntryBlockReason\022\016\n\006param1\030\002 \001(\r\"\271\001\n\"GetD"
      "ungeonEntryExploreConditionRsp\022\017\n\007retcod"
      "e\030\001 \001(\005\0223\n\022dungeon_entry_cond\030\002 \001(\0132\027.pr"
      "oto.DungeonEntryCond\"M\n\005CmdId\022\010\n\004NONE\020\000\022"
      "\013\n\006CMD_ID\020\334\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENE"
      "T_IS_RELIABLE\020\001\032\002\020\001\"\215\001\n\030UnfreezeGroupLim"
      "itNotify\022\020\n\010point_id\030\001 \001(\r\022\020\n\010scene_id\030\002"
      " \001(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\335\027\022\023\n\017"
      "ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\032"
      "\002\020\001\"\244\001\n\027EnterWorldFogAreaNotify\022\020\n\010scene"
      "_id\030\001 \001(\r\022\023\n\013fog_area_id\030\002 \001(\r\"b\n\005CmdId\022"
      "\010\n\004NONE\020\000\022\013\n\006CMD_ID\020\336\027\022\023\n\017ENET_CHANNEL_I"
      "D\020\000\022\024\n\020ENET_IS_RELIABLE\020\001\022\023\n\017IS_ALLOW_CL"
      "IENT\020\001\032\002\020\001\"\313\001\n\030UnlockWorldFogAreaNotify\022"
      "\020\n\010scene_id\030\001 \001(\r\022&\n\036unlocked_fog_level_"
      "1_area_list\030\002 \003(\r\022&\n\036unlocked_fog_level_"
      "2_area_list\030\003 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\337\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\032\002\020\001\"\305\001\n\026LockWorldFogAreaNot"
      "ify\022\020\n\010scene_id\030\001 \001(\r\022$\n\034locked_fog_leve"
      "l_1_area_list\030\002 \003(\r\022$\n\034locked_fog_level_"
      "2_area_list\030\003 \003(\r\"M\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006"
      "CMD_ID\020\340\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_I"
      "S_RELIABLE\020\001\032\002\020\001\"\256\001\n\031SetEntityClientData"
      "Notify\022\021\n\tentity_id\030\001 \001(\r\022\032\n\022entity_clie"
      "nt_data\030\002 \001(\014\"b\n\005CmdId\022\010\n\004NONE\020\000\022\013\n\006CMD_"
      "ID\020\341\027\022\023\n\017ENET_CHANNEL_ID\020\000\022\024\n\020ENET_IS_RE"
      "LIABLE\020\001\022\023\n\017IS_ALLOW_CLIENT\020\001\032\002\020\001*\263\001\n\tEn"
      "terType\022\016\n\nENTER_NONE\020\000\022\016\n\nENTER_SELF\020\001\022"
      "\016\n\nENTER_GOTO\020\002\022\016\n\nENTER_JUMP\020\003\022\017\n\013ENTER"
      "_OTHER\020\004\022\016\n\nENTER_BACK\020\005\022\021\n\rENTER_DUNGEO"
      "N\020\006\022\030\n\024ENTER_DUNGEON_REPLAY\020\007\022\030\n\024ENTER_G"
      "OTO_BY_PORTAL\020\010*\356\001\n\nVisionType\022\017\n\013VISION"
      "_NONE\020\000\022\017\n\013VISION_MEET\020\001\022\021\n\rVISION_REBOR"
      "N\020\002\022\022\n\016VISION_REPLACE\020\003\022\032\n\026VISION_WAYPOI"
      "NT_REBORN\020\004\022\017\n\013VISION_MISS\020\005\022\016\n\nVISION_D"
      "IE\020\006\022\030\n\024VISION_GATHER_ESCAPE\020\007\022\022\n\016VISION"
      "_REFRESH\020\010\022\024\n\020VISION_TRANSPORT\020\t\022\026\n\022VISI"
      "ON_REPLACE_DIE\020\n*D\n\014CreateReason\022\017\n\013CREA"
      "TE_NONE\020\000\022\020\n\014CREATE_QUEST\020\001\022\021\n\rCREATE_EN"
      "ERGY\020\002*7\n\016TransmitReason\022\021\n\rTRANSMIT_NON"
      "E\020\000\022\022\n\016TRANSMIT_QUEST\020\001*A\n\020DropSubfieldT"
      "ype\022\026\n\022DROP_SUBFIELD_NONE\020\000\022\025\n\021DROP_SUBF"
      "IELD_ONE\020\001*J\n\016SealBattleType\022\032\n\026SEAL_BAT"
      "TLE_KEEP_ALIVE\020\000\022\034\n\030SEAL_BATTLE_KILL_MON"
      "STER\020\001*\232\001\n\027DungeonEntryBlockReason\022\035\n\031DU"
      "NGEON_ENTRY_REASON_NONE\020\000\022\036\n\032DUNGEON_ENT"
      "RY_REASON_LEVEL\020\001\022\036\n\032DUNGEON_ENTRY_REASO"
      "N_QUEST\020\002\022 \n\034DUNGEON_ENTRY_REASON_MULIPL"
      "E\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 24811);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "cmd/cmd_scene.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_cmd_2fcmd_5fscene_2eproto

const ::google::protobuf::EnumDescriptor* PlayerEnterSceneNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[0];
}
bool PlayerEnterSceneNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 201:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerEnterSceneNotify_CmdId PlayerEnterSceneNotify::NONE;
const PlayerEnterSceneNotify_CmdId PlayerEnterSceneNotify::CMD_ID;
const PlayerEnterSceneNotify_CmdId PlayerEnterSceneNotify::ENET_CHANNEL_ID;
const PlayerEnterSceneNotify_CmdId PlayerEnterSceneNotify::ENET_IS_RELIABLE;
const PlayerEnterSceneNotify_CmdId PlayerEnterSceneNotify::CmdId_MIN;
const PlayerEnterSceneNotify_CmdId PlayerEnterSceneNotify::CmdId_MAX;
const int PlayerEnterSceneNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LeaveSceneReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[1];
}
bool LeaveSceneReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 202:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LeaveSceneReq_CmdId LeaveSceneReq::NONE;
const LeaveSceneReq_CmdId LeaveSceneReq::CMD_ID;
const LeaveSceneReq_CmdId LeaveSceneReq::ENET_CHANNEL_ID;
const LeaveSceneReq_CmdId LeaveSceneReq::ENET_IS_RELIABLE;
const LeaveSceneReq_CmdId LeaveSceneReq::IS_ALLOW_CLIENT;
const LeaveSceneReq_CmdId LeaveSceneReq::CmdId_MIN;
const LeaveSceneReq_CmdId LeaveSceneReq::CmdId_MAX;
const int LeaveSceneReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LeaveSceneRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[2];
}
bool LeaveSceneRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 203:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LeaveSceneRsp_CmdId LeaveSceneRsp::NONE;
const LeaveSceneRsp_CmdId LeaveSceneRsp::CMD_ID;
const LeaveSceneRsp_CmdId LeaveSceneRsp::ENET_CHANNEL_ID;
const LeaveSceneRsp_CmdId LeaveSceneRsp::ENET_IS_RELIABLE;
const LeaveSceneRsp_CmdId LeaveSceneRsp::CmdId_MIN;
const LeaveSceneRsp_CmdId LeaveSceneRsp::CmdId_MAX;
const int LeaveSceneRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneInitFinishReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[3];
}
bool SceneInitFinishReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 204:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneInitFinishReq_CmdId SceneInitFinishReq::NONE;
const SceneInitFinishReq_CmdId SceneInitFinishReq::CMD_ID;
const SceneInitFinishReq_CmdId SceneInitFinishReq::ENET_CHANNEL_ID;
const SceneInitFinishReq_CmdId SceneInitFinishReq::ENET_IS_RELIABLE;
const SceneInitFinishReq_CmdId SceneInitFinishReq::IS_ALLOW_CLIENT;
const SceneInitFinishReq_CmdId SceneInitFinishReq::CmdId_MIN;
const SceneInitFinishReq_CmdId SceneInitFinishReq::CmdId_MAX;
const int SceneInitFinishReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneInitFinishRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[4];
}
bool SceneInitFinishRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 205:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneInitFinishRsp_CmdId SceneInitFinishRsp::NONE;
const SceneInitFinishRsp_CmdId SceneInitFinishRsp::CMD_ID;
const SceneInitFinishRsp_CmdId SceneInitFinishRsp::ENET_CHANNEL_ID;
const SceneInitFinishRsp_CmdId SceneInitFinishRsp::ENET_IS_RELIABLE;
const SceneInitFinishRsp_CmdId SceneInitFinishRsp::IS_ALLOW_CLIENT;
const SceneInitFinishRsp_CmdId SceneInitFinishRsp::CmdId_MIN;
const SceneInitFinishRsp_CmdId SceneInitFinishRsp::CmdId_MAX;
const int SceneInitFinishRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntityAppearNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[5];
}
bool SceneEntityAppearNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 206:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntityAppearNotify_CmdId SceneEntityAppearNotify::NONE;
const SceneEntityAppearNotify_CmdId SceneEntityAppearNotify::CMD_ID;
const SceneEntityAppearNotify_CmdId SceneEntityAppearNotify::ENET_CHANNEL_ID;
const SceneEntityAppearNotify_CmdId SceneEntityAppearNotify::ENET_IS_RELIABLE;
const SceneEntityAppearNotify_CmdId SceneEntityAppearNotify::CmdId_MIN;
const SceneEntityAppearNotify_CmdId SceneEntityAppearNotify::CmdId_MAX;
const int SceneEntityAppearNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntityDisappearNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[6];
}
bool SceneEntityDisappearNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 207:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntityDisappearNotify_CmdId SceneEntityDisappearNotify::NONE;
const SceneEntityDisappearNotify_CmdId SceneEntityDisappearNotify::CMD_ID;
const SceneEntityDisappearNotify_CmdId SceneEntityDisappearNotify::ENET_CHANNEL_ID;
const SceneEntityDisappearNotify_CmdId SceneEntityDisappearNotify::ENET_IS_RELIABLE;
const SceneEntityDisappearNotify_CmdId SceneEntityDisappearNotify::CmdId_MIN;
const SceneEntityDisappearNotify_CmdId SceneEntityDisappearNotify::CmdId_MAX;
const int SceneEntityDisappearNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntityMoveReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[7];
}
bool SceneEntityMoveReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 208:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntityMoveReq_CmdId SceneEntityMoveReq::NONE;
const SceneEntityMoveReq_CmdId SceneEntityMoveReq::CMD_ID;
const SceneEntityMoveReq_CmdId SceneEntityMoveReq::ENET_CHANNEL_ID;
const SceneEntityMoveReq_CmdId SceneEntityMoveReq::ENET_IS_RELIABLE;
const SceneEntityMoveReq_CmdId SceneEntityMoveReq::IS_ALLOW_CLIENT;
const SceneEntityMoveReq_CmdId SceneEntityMoveReq::CmdId_MIN;
const SceneEntityMoveReq_CmdId SceneEntityMoveReq::CmdId_MAX;
const int SceneEntityMoveReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntityMoveRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[8];
}
bool SceneEntityMoveRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 209:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntityMoveRsp_CmdId SceneEntityMoveRsp::NONE;
const SceneEntityMoveRsp_CmdId SceneEntityMoveRsp::CMD_ID;
const SceneEntityMoveRsp_CmdId SceneEntityMoveRsp::ENET_CHANNEL_ID;
const SceneEntityMoveRsp_CmdId SceneEntityMoveRsp::ENET_IS_RELIABLE;
const SceneEntityMoveRsp_CmdId SceneEntityMoveRsp::CmdId_MIN;
const SceneEntityMoveRsp_CmdId SceneEntityMoveRsp::CmdId_MAX;
const int SceneEntityMoveRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneAvatarStaminaStepReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[9];
}
bool SceneAvatarStaminaStepReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 210:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq::NONE;
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq::CMD_ID;
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq::ENET_CHANNEL_ID;
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq::ENET_IS_RELIABLE;
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq::IS_ALLOW_CLIENT;
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq::CmdId_MIN;
const SceneAvatarStaminaStepReq_CmdId SceneAvatarStaminaStepReq::CmdId_MAX;
const int SceneAvatarStaminaStepReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneAvatarStaminaStepRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[10];
}
bool SceneAvatarStaminaStepRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 211:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneAvatarStaminaStepRsp_CmdId SceneAvatarStaminaStepRsp::NONE;
const SceneAvatarStaminaStepRsp_CmdId SceneAvatarStaminaStepRsp::CMD_ID;
const SceneAvatarStaminaStepRsp_CmdId SceneAvatarStaminaStepRsp::ENET_CHANNEL_ID;
const SceneAvatarStaminaStepRsp_CmdId SceneAvatarStaminaStepRsp::ENET_IS_RELIABLE;
const SceneAvatarStaminaStepRsp_CmdId SceneAvatarStaminaStepRsp::CmdId_MIN;
const SceneAvatarStaminaStepRsp_CmdId SceneAvatarStaminaStepRsp::CmdId_MAX;
const int SceneAvatarStaminaStepRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntityMoveNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[11];
}
bool SceneEntityMoveNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 212:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntityMoveNotify_CmdId SceneEntityMoveNotify::NONE;
const SceneEntityMoveNotify_CmdId SceneEntityMoveNotify::CMD_ID;
const SceneEntityMoveNotify_CmdId SceneEntityMoveNotify::ENET_CHANNEL_ID;
const SceneEntityMoveNotify_CmdId SceneEntityMoveNotify::ENET_IS_RELIABLE;
const SceneEntityMoveNotify_CmdId SceneEntityMoveNotify::CmdId_MIN;
const SceneEntityMoveNotify_CmdId SceneEntityMoveNotify::CmdId_MAX;
const int SceneEntityMoveNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ScenePlayerLocationNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[12];
}
bool ScenePlayerLocationNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 213:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScenePlayerLocationNotify_CmdId ScenePlayerLocationNotify::NONE;
const ScenePlayerLocationNotify_CmdId ScenePlayerLocationNotify::CMD_ID;
const ScenePlayerLocationNotify_CmdId ScenePlayerLocationNotify::ENET_CHANNEL_ID;
const ScenePlayerLocationNotify_CmdId ScenePlayerLocationNotify::ENET_IS_RELIABLE;
const ScenePlayerLocationNotify_CmdId ScenePlayerLocationNotify::CmdId_MIN;
const ScenePlayerLocationNotify_CmdId ScenePlayerLocationNotify::CmdId_MAX;
const int ScenePlayerLocationNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetScenePointReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[13];
}
bool GetScenePointReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 214:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetScenePointReq_CmdId GetScenePointReq::NONE;
const GetScenePointReq_CmdId GetScenePointReq::CMD_ID;
const GetScenePointReq_CmdId GetScenePointReq::ENET_CHANNEL_ID;
const GetScenePointReq_CmdId GetScenePointReq::ENET_IS_RELIABLE;
const GetScenePointReq_CmdId GetScenePointReq::IS_ALLOW_CLIENT;
const GetScenePointReq_CmdId GetScenePointReq::CmdId_MIN;
const GetScenePointReq_CmdId GetScenePointReq::CmdId_MAX;
const int GetScenePointReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetScenePointRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[14];
}
bool GetScenePointRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 215:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetScenePointRsp_CmdId GetScenePointRsp::NONE;
const GetScenePointRsp_CmdId GetScenePointRsp::CMD_ID;
const GetScenePointRsp_CmdId GetScenePointRsp::ENET_CHANNEL_ID;
const GetScenePointRsp_CmdId GetScenePointRsp::ENET_IS_RELIABLE;
const GetScenePointRsp_CmdId GetScenePointRsp::CmdId_MIN;
const GetScenePointRsp_CmdId GetScenePointRsp::CmdId_MAX;
const int GetScenePointRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterTransPointRegionNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[15];
}
bool EnterTransPointRegionNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 216:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify::NONE;
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify::CMD_ID;
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify::ENET_CHANNEL_ID;
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify::ENET_IS_RELIABLE;
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify::IS_ALLOW_CLIENT;
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify::CmdId_MIN;
const EnterTransPointRegionNotify_CmdId EnterTransPointRegionNotify::CmdId_MAX;
const int EnterTransPointRegionNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExitTransPointRegionNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[16];
}
bool ExitTransPointRegionNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 217:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify::NONE;
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify::CMD_ID;
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify::ENET_CHANNEL_ID;
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify::ENET_IS_RELIABLE;
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify::IS_ALLOW_CLIENT;
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify::CmdId_MIN;
const ExitTransPointRegionNotify_CmdId ExitTransPointRegionNotify::CmdId_MAX;
const int ExitTransPointRegionNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ScenePointUnlockNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[17];
}
bool ScenePointUnlockNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 218:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScenePointUnlockNotify_CmdId ScenePointUnlockNotify::NONE;
const ScenePointUnlockNotify_CmdId ScenePointUnlockNotify::CMD_ID;
const ScenePointUnlockNotify_CmdId ScenePointUnlockNotify::ENET_CHANNEL_ID;
const ScenePointUnlockNotify_CmdId ScenePointUnlockNotify::ENET_IS_RELIABLE;
const ScenePointUnlockNotify_CmdId ScenePointUnlockNotify::CmdId_MIN;
const ScenePointUnlockNotify_CmdId ScenePointUnlockNotify::CmdId_MAX;
const int ScenePointUnlockNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneTransToPointReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[18];
}
bool SceneTransToPointReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 219:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneTransToPointReq_CmdId SceneTransToPointReq::NONE;
const SceneTransToPointReq_CmdId SceneTransToPointReq::CMD_ID;
const SceneTransToPointReq_CmdId SceneTransToPointReq::ENET_CHANNEL_ID;
const SceneTransToPointReq_CmdId SceneTransToPointReq::ENET_IS_RELIABLE;
const SceneTransToPointReq_CmdId SceneTransToPointReq::IS_ALLOW_CLIENT;
const SceneTransToPointReq_CmdId SceneTransToPointReq::CmdId_MIN;
const SceneTransToPointReq_CmdId SceneTransToPointReq::CmdId_MAX;
const int SceneTransToPointReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneTransToPointRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[19];
}
bool SceneTransToPointRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 220:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneTransToPointRsp_CmdId SceneTransToPointRsp::NONE;
const SceneTransToPointRsp_CmdId SceneTransToPointRsp::CMD_ID;
const SceneTransToPointRsp_CmdId SceneTransToPointRsp::ENET_CHANNEL_ID;
const SceneTransToPointRsp_CmdId SceneTransToPointRsp::ENET_IS_RELIABLE;
const SceneTransToPointRsp_CmdId SceneTransToPointRsp::CmdId_MIN;
const SceneTransToPointRsp_CmdId SceneTransToPointRsp::CmdId_MAX;
const int SceneTransToPointRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EntityJumpNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[20];
}
bool EntityJumpNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 221:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EntityJumpNotify_CmdId EntityJumpNotify::NONE;
const EntityJumpNotify_CmdId EntityJumpNotify::CMD_ID;
const EntityJumpNotify_CmdId EntityJumpNotify::ENET_CHANNEL_ID;
const EntityJumpNotify_CmdId EntityJumpNotify::ENET_IS_RELIABLE;
const EntityJumpNotify_CmdId EntityJumpNotify::CmdId_MIN;
const EntityJumpNotify_CmdId EntityJumpNotify::CmdId_MAX;
const int EntityJumpNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EntityJumpNotify_Type_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[21];
}
bool EntityJumpNotify_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EntityJumpNotify_Type EntityJumpNotify::NULL_;
const EntityJumpNotify_Type EntityJumpNotify::ACTIVE;
const EntityJumpNotify_Type EntityJumpNotify::PASSIVE;
const EntityJumpNotify_Type EntityJumpNotify::Type_MIN;
const EntityJumpNotify_Type EntityJumpNotify::Type_MAX;
const int EntityJumpNotify::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetSceneAreaReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[22];
}
bool GetSceneAreaReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 222:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetSceneAreaReq_CmdId GetSceneAreaReq::NONE;
const GetSceneAreaReq_CmdId GetSceneAreaReq::CMD_ID;
const GetSceneAreaReq_CmdId GetSceneAreaReq::ENET_CHANNEL_ID;
const GetSceneAreaReq_CmdId GetSceneAreaReq::ENET_IS_RELIABLE;
const GetSceneAreaReq_CmdId GetSceneAreaReq::IS_ALLOW_CLIENT;
const GetSceneAreaReq_CmdId GetSceneAreaReq::CmdId_MIN;
const GetSceneAreaReq_CmdId GetSceneAreaReq::CmdId_MAX;
const int GetSceneAreaReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetSceneAreaRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[23];
}
bool GetSceneAreaRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 223:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetSceneAreaRsp_CmdId GetSceneAreaRsp::NONE;
const GetSceneAreaRsp_CmdId GetSceneAreaRsp::CMD_ID;
const GetSceneAreaRsp_CmdId GetSceneAreaRsp::ENET_CHANNEL_ID;
const GetSceneAreaRsp_CmdId GetSceneAreaRsp::ENET_IS_RELIABLE;
const GetSceneAreaRsp_CmdId GetSceneAreaRsp::CmdId_MIN;
const GetSceneAreaRsp_CmdId GetSceneAreaRsp::CmdId_MAX;
const int GetSceneAreaRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneAreaUnlockNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[24];
}
bool SceneAreaUnlockNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 224:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneAreaUnlockNotify_CmdId SceneAreaUnlockNotify::NONE;
const SceneAreaUnlockNotify_CmdId SceneAreaUnlockNotify::CMD_ID;
const SceneAreaUnlockNotify_CmdId SceneAreaUnlockNotify::ENET_CHANNEL_ID;
const SceneAreaUnlockNotify_CmdId SceneAreaUnlockNotify::ENET_IS_RELIABLE;
const SceneAreaUnlockNotify_CmdId SceneAreaUnlockNotify::CmdId_MIN;
const SceneAreaUnlockNotify_CmdId SceneAreaUnlockNotify::CmdId_MAX;
const int SceneAreaUnlockNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntityDrownReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[25];
}
bool SceneEntityDrownReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 225:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntityDrownReq_CmdId SceneEntityDrownReq::NONE;
const SceneEntityDrownReq_CmdId SceneEntityDrownReq::CMD_ID;
const SceneEntityDrownReq_CmdId SceneEntityDrownReq::ENET_CHANNEL_ID;
const SceneEntityDrownReq_CmdId SceneEntityDrownReq::ENET_IS_RELIABLE;
const SceneEntityDrownReq_CmdId SceneEntityDrownReq::IS_ALLOW_CLIENT;
const SceneEntityDrownReq_CmdId SceneEntityDrownReq::CmdId_MIN;
const SceneEntityDrownReq_CmdId SceneEntityDrownReq::CmdId_MAX;
const int SceneEntityDrownReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntityDrownRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[26];
}
bool SceneEntityDrownRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 226:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntityDrownRsp_CmdId SceneEntityDrownRsp::NONE;
const SceneEntityDrownRsp_CmdId SceneEntityDrownRsp::CMD_ID;
const SceneEntityDrownRsp_CmdId SceneEntityDrownRsp::ENET_CHANNEL_ID;
const SceneEntityDrownRsp_CmdId SceneEntityDrownRsp::ENET_IS_RELIABLE;
const SceneEntityDrownRsp_CmdId SceneEntityDrownRsp::CmdId_MIN;
const SceneEntityDrownRsp_CmdId SceneEntityDrownRsp::CmdId_MAX;
const int SceneEntityDrownRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneCreateEntityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[27];
}
bool SceneCreateEntityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 227:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneCreateEntityReq_CmdId SceneCreateEntityReq::NONE;
const SceneCreateEntityReq_CmdId SceneCreateEntityReq::CMD_ID;
const SceneCreateEntityReq_CmdId SceneCreateEntityReq::ENET_CHANNEL_ID;
const SceneCreateEntityReq_CmdId SceneCreateEntityReq::ENET_IS_RELIABLE;
const SceneCreateEntityReq_CmdId SceneCreateEntityReq::IS_ALLOW_CLIENT;
const SceneCreateEntityReq_CmdId SceneCreateEntityReq::CmdId_MIN;
const SceneCreateEntityReq_CmdId SceneCreateEntityReq::CmdId_MAX;
const int SceneCreateEntityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneCreateEntityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[28];
}
bool SceneCreateEntityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 228:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneCreateEntityRsp_CmdId SceneCreateEntityRsp::NONE;
const SceneCreateEntityRsp_CmdId SceneCreateEntityRsp::CMD_ID;
const SceneCreateEntityRsp_CmdId SceneCreateEntityRsp::ENET_CHANNEL_ID;
const SceneCreateEntityRsp_CmdId SceneCreateEntityRsp::ENET_IS_RELIABLE;
const SceneCreateEntityRsp_CmdId SceneCreateEntityRsp::CmdId_MIN;
const SceneCreateEntityRsp_CmdId SceneCreateEntityRsp::CmdId_MAX;
const int SceneCreateEntityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneDestroyEntityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[29];
}
bool SceneDestroyEntityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 229:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq::NONE;
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq::CMD_ID;
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq::ENET_CHANNEL_ID;
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq::ENET_IS_RELIABLE;
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq::IS_ALLOW_CLIENT;
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq::CmdId_MIN;
const SceneDestroyEntityReq_CmdId SceneDestroyEntityReq::CmdId_MAX;
const int SceneDestroyEntityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneDestroyEntityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[30];
}
bool SceneDestroyEntityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 230:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneDestroyEntityRsp_CmdId SceneDestroyEntityRsp::NONE;
const SceneDestroyEntityRsp_CmdId SceneDestroyEntityRsp::CMD_ID;
const SceneDestroyEntityRsp_CmdId SceneDestroyEntityRsp::ENET_CHANNEL_ID;
const SceneDestroyEntityRsp_CmdId SceneDestroyEntityRsp::ENET_IS_RELIABLE;
const SceneDestroyEntityRsp_CmdId SceneDestroyEntityRsp::CmdId_MIN;
const SceneDestroyEntityRsp_CmdId SceneDestroyEntityRsp::CmdId_MAX;
const int SceneDestroyEntityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneForceUnlockNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[31];
}
bool SceneForceUnlockNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 231:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneForceUnlockNotify_CmdId SceneForceUnlockNotify::NONE;
const SceneForceUnlockNotify_CmdId SceneForceUnlockNotify::CMD_ID;
const SceneForceUnlockNotify_CmdId SceneForceUnlockNotify::ENET_CHANNEL_ID;
const SceneForceUnlockNotify_CmdId SceneForceUnlockNotify::ENET_IS_RELIABLE;
const SceneForceUnlockNotify_CmdId SceneForceUnlockNotify::CmdId_MIN;
const SceneForceUnlockNotify_CmdId SceneForceUnlockNotify::CmdId_MAX;
const int SceneForceUnlockNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneForceLockNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[32];
}
bool SceneForceLockNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 232:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneForceLockNotify_CmdId SceneForceLockNotify::NONE;
const SceneForceLockNotify_CmdId SceneForceLockNotify::CMD_ID;
const SceneForceLockNotify_CmdId SceneForceLockNotify::ENET_CHANNEL_ID;
const SceneForceLockNotify_CmdId SceneForceLockNotify::ENET_IS_RELIABLE;
const SceneForceLockNotify_CmdId SceneForceLockNotify::CmdId_MIN;
const SceneForceLockNotify_CmdId SceneForceLockNotify::CmdId_MAX;
const int SceneForceLockNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterWorldAreaReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[33];
}
bool EnterWorldAreaReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 233:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterWorldAreaReq_CmdId EnterWorldAreaReq::NONE;
const EnterWorldAreaReq_CmdId EnterWorldAreaReq::CMD_ID;
const EnterWorldAreaReq_CmdId EnterWorldAreaReq::ENET_CHANNEL_ID;
const EnterWorldAreaReq_CmdId EnterWorldAreaReq::ENET_IS_RELIABLE;
const EnterWorldAreaReq_CmdId EnterWorldAreaReq::IS_ALLOW_CLIENT;
const EnterWorldAreaReq_CmdId EnterWorldAreaReq::CmdId_MIN;
const EnterWorldAreaReq_CmdId EnterWorldAreaReq::CmdId_MAX;
const int EnterWorldAreaReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterWorldAreaRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[34];
}
bool EnterWorldAreaRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 234:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterWorldAreaRsp_CmdId EnterWorldAreaRsp::NONE;
const EnterWorldAreaRsp_CmdId EnterWorldAreaRsp::CMD_ID;
const EnterWorldAreaRsp_CmdId EnterWorldAreaRsp::ENET_CHANNEL_ID;
const EnterWorldAreaRsp_CmdId EnterWorldAreaRsp::ENET_IS_RELIABLE;
const EnterWorldAreaRsp_CmdId EnterWorldAreaRsp::CmdId_MIN;
const EnterWorldAreaRsp_CmdId EnterWorldAreaRsp::CmdId_MAX;
const int EnterWorldAreaRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EntityForceSyncReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[35];
}
bool EntityForceSyncReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 235:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EntityForceSyncReq_CmdId EntityForceSyncReq::NONE;
const EntityForceSyncReq_CmdId EntityForceSyncReq::CMD_ID;
const EntityForceSyncReq_CmdId EntityForceSyncReq::ENET_CHANNEL_ID;
const EntityForceSyncReq_CmdId EntityForceSyncReq::ENET_IS_RELIABLE;
const EntityForceSyncReq_CmdId EntityForceSyncReq::IS_ALLOW_CLIENT;
const EntityForceSyncReq_CmdId EntityForceSyncReq::CmdId_MIN;
const EntityForceSyncReq_CmdId EntityForceSyncReq::CmdId_MAX;
const int EntityForceSyncReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EntityForceSyncRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[36];
}
bool EntityForceSyncRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 236:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EntityForceSyncRsp_CmdId EntityForceSyncRsp::NONE;
const EntityForceSyncRsp_CmdId EntityForceSyncRsp::CMD_ID;
const EntityForceSyncRsp_CmdId EntityForceSyncRsp::ENET_CHANNEL_ID;
const EntityForceSyncRsp_CmdId EntityForceSyncRsp::ENET_IS_RELIABLE;
const EntityForceSyncRsp_CmdId EntityForceSyncRsp::CmdId_MIN;
const EntityForceSyncRsp_CmdId EntityForceSyncRsp::CmdId_MAX;
const int EntityForceSyncRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneAreaExploreNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[37];
}
bool SceneAreaExploreNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 237:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneAreaExploreNotify_CmdId SceneAreaExploreNotify::NONE;
const SceneAreaExploreNotify_CmdId SceneAreaExploreNotify::CMD_ID;
const SceneAreaExploreNotify_CmdId SceneAreaExploreNotify::ENET_CHANNEL_ID;
const SceneAreaExploreNotify_CmdId SceneAreaExploreNotify::ENET_IS_RELIABLE;
const SceneAreaExploreNotify_CmdId SceneAreaExploreNotify::CmdId_MIN;
const SceneAreaExploreNotify_CmdId SceneAreaExploreNotify::CmdId_MAX;
const int SceneAreaExploreNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneGetAreaExplorePercentReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[38];
}
bool SceneGetAreaExplorePercentReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 238:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq::NONE;
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq::CMD_ID;
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq::ENET_CHANNEL_ID;
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq::ENET_IS_RELIABLE;
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq::IS_ALLOW_CLIENT;
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq::CmdId_MIN;
const SceneGetAreaExplorePercentReq_CmdId SceneGetAreaExplorePercentReq::CmdId_MAX;
const int SceneGetAreaExplorePercentReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneGetAreaExplorePercentRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[39];
}
bool SceneGetAreaExplorePercentRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 239:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneGetAreaExplorePercentRsp_CmdId SceneGetAreaExplorePercentRsp::NONE;
const SceneGetAreaExplorePercentRsp_CmdId SceneGetAreaExplorePercentRsp::CMD_ID;
const SceneGetAreaExplorePercentRsp_CmdId SceneGetAreaExplorePercentRsp::ENET_CHANNEL_ID;
const SceneGetAreaExplorePercentRsp_CmdId SceneGetAreaExplorePercentRsp::ENET_IS_RELIABLE;
const SceneGetAreaExplorePercentRsp_CmdId SceneGetAreaExplorePercentRsp::CmdId_MIN;
const SceneGetAreaExplorePercentRsp_CmdId SceneGetAreaExplorePercentRsp::CmdId_MAX;
const int SceneGetAreaExplorePercentRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientTransmitReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[40];
}
bool ClientTransmitReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 240:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientTransmitReq_CmdId ClientTransmitReq::NONE;
const ClientTransmitReq_CmdId ClientTransmitReq::CMD_ID;
const ClientTransmitReq_CmdId ClientTransmitReq::ENET_CHANNEL_ID;
const ClientTransmitReq_CmdId ClientTransmitReq::ENET_IS_RELIABLE;
const ClientTransmitReq_CmdId ClientTransmitReq::IS_ALLOW_CLIENT;
const ClientTransmitReq_CmdId ClientTransmitReq::CmdId_MIN;
const ClientTransmitReq_CmdId ClientTransmitReq::CmdId_MAX;
const int ClientTransmitReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientTransmitRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[41];
}
bool ClientTransmitRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 241:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientTransmitRsp_CmdId ClientTransmitRsp::NONE;
const ClientTransmitRsp_CmdId ClientTransmitRsp::CMD_ID;
const ClientTransmitRsp_CmdId ClientTransmitRsp::ENET_CHANNEL_ID;
const ClientTransmitRsp_CmdId ClientTransmitRsp::ENET_IS_RELIABLE;
const ClientTransmitRsp_CmdId ClientTransmitRsp::CmdId_MIN;
const ClientTransmitRsp_CmdId ClientTransmitRsp::CmdId_MAX;
const int ClientTransmitRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterSceneWeatherAreaNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[42];
}
bool EnterSceneWeatherAreaNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 242:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify::NONE;
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify::CMD_ID;
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify::ENET_CHANNEL_ID;
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify::ENET_IS_RELIABLE;
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify::IS_ALLOW_CLIENT;
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify::CmdId_MIN;
const EnterSceneWeatherAreaNotify_CmdId EnterSceneWeatherAreaNotify::CmdId_MAX;
const int EnterSceneWeatherAreaNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExitSceneWeatherAreaNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[43];
}
bool ExitSceneWeatherAreaNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 243:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify::NONE;
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify::CMD_ID;
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify::ENET_CHANNEL_ID;
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify::ENET_IS_RELIABLE;
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify::IS_ALLOW_CLIENT;
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify::CmdId_MIN;
const ExitSceneWeatherAreaNotify_CmdId ExitSceneWeatherAreaNotify::CmdId_MAX;
const int ExitSceneWeatherAreaNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneAreaWeatherNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[44];
}
bool SceneAreaWeatherNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 244:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneAreaWeatherNotify_CmdId SceneAreaWeatherNotify::NONE;
const SceneAreaWeatherNotify_CmdId SceneAreaWeatherNotify::CMD_ID;
const SceneAreaWeatherNotify_CmdId SceneAreaWeatherNotify::ENET_CHANNEL_ID;
const SceneAreaWeatherNotify_CmdId SceneAreaWeatherNotify::ENET_IS_RELIABLE;
const SceneAreaWeatherNotify_CmdId SceneAreaWeatherNotify::CmdId_MIN;
const SceneAreaWeatherNotify_CmdId SceneAreaWeatherNotify::CmdId_MAX;
const int SceneAreaWeatherNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ScenePlayerInfoNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[45];
}
bool ScenePlayerInfoNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 245:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScenePlayerInfoNotify_CmdId ScenePlayerInfoNotify::NONE;
const ScenePlayerInfoNotify_CmdId ScenePlayerInfoNotify::CMD_ID;
const ScenePlayerInfoNotify_CmdId ScenePlayerInfoNotify::ENET_CHANNEL_ID;
const ScenePlayerInfoNotify_CmdId ScenePlayerInfoNotify::ENET_IS_RELIABLE;
const ScenePlayerInfoNotify_CmdId ScenePlayerInfoNotify::CmdId_MIN;
const ScenePlayerInfoNotify_CmdId ScenePlayerInfoNotify::CmdId_MAX;
const int ScenePlayerInfoNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldPlayerLocationNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[46];
}
bool WorldPlayerLocationNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 246:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorldPlayerLocationNotify_CmdId WorldPlayerLocationNotify::NONE;
const WorldPlayerLocationNotify_CmdId WorldPlayerLocationNotify::CMD_ID;
const WorldPlayerLocationNotify_CmdId WorldPlayerLocationNotify::ENET_CHANNEL_ID;
const WorldPlayerLocationNotify_CmdId WorldPlayerLocationNotify::ENET_IS_RELIABLE;
const WorldPlayerLocationNotify_CmdId WorldPlayerLocationNotify::CmdId_MIN;
const WorldPlayerLocationNotify_CmdId WorldPlayerLocationNotify::CmdId_MAX;
const int WorldPlayerLocationNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BeginCameraSceneLookNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[47];
}
bool BeginCameraSceneLookNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 247:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BeginCameraSceneLookNotify_CmdId BeginCameraSceneLookNotify::NONE;
const BeginCameraSceneLookNotify_CmdId BeginCameraSceneLookNotify::CMD_ID;
const BeginCameraSceneLookNotify_CmdId BeginCameraSceneLookNotify::ENET_CHANNEL_ID;
const BeginCameraSceneLookNotify_CmdId BeginCameraSceneLookNotify::ENET_IS_RELIABLE;
const BeginCameraSceneLookNotify_CmdId BeginCameraSceneLookNotify::CmdId_MIN;
const BeginCameraSceneLookNotify_CmdId BeginCameraSceneLookNotify::CmdId_MAX;
const int BeginCameraSceneLookNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EndCameraSceneLookNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[48];
}
bool EndCameraSceneLookNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 248:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EndCameraSceneLookNotify_CmdId EndCameraSceneLookNotify::NONE;
const EndCameraSceneLookNotify_CmdId EndCameraSceneLookNotify::CMD_ID;
const EndCameraSceneLookNotify_CmdId EndCameraSceneLookNotify::ENET_CHANNEL_ID;
const EndCameraSceneLookNotify_CmdId EndCameraSceneLookNotify::ENET_IS_RELIABLE;
const EndCameraSceneLookNotify_CmdId EndCameraSceneLookNotify::CmdId_MIN;
const EndCameraSceneLookNotify_CmdId EndCameraSceneLookNotify::CmdId_MAX;
const int EndCameraSceneLookNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MarkEntityInMinMapNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[49];
}
bool MarkEntityInMinMapNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 249:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MarkEntityInMinMapNotify_CmdId MarkEntityInMinMapNotify::NONE;
const MarkEntityInMinMapNotify_CmdId MarkEntityInMinMapNotify::CMD_ID;
const MarkEntityInMinMapNotify_CmdId MarkEntityInMinMapNotify::ENET_CHANNEL_ID;
const MarkEntityInMinMapNotify_CmdId MarkEntityInMinMapNotify::ENET_IS_RELIABLE;
const MarkEntityInMinMapNotify_CmdId MarkEntityInMinMapNotify::CmdId_MIN;
const MarkEntityInMinMapNotify_CmdId MarkEntityInMinMapNotify::CmdId_MAX;
const int MarkEntityInMinMapNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnmarkEntityInMinMapNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[50];
}
bool UnmarkEntityInMinMapNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 250:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnmarkEntityInMinMapNotify_CmdId UnmarkEntityInMinMapNotify::NONE;
const UnmarkEntityInMinMapNotify_CmdId UnmarkEntityInMinMapNotify::CMD_ID;
const UnmarkEntityInMinMapNotify_CmdId UnmarkEntityInMinMapNotify::ENET_CHANNEL_ID;
const UnmarkEntityInMinMapNotify_CmdId UnmarkEntityInMinMapNotify::ENET_IS_RELIABLE;
const UnmarkEntityInMinMapNotify_CmdId UnmarkEntityInMinMapNotify::CmdId_MIN;
const UnmarkEntityInMinMapNotify_CmdId UnmarkEntityInMinMapNotify::CmdId_MAX;
const int UnmarkEntityInMinMapNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DropSubfieldReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[51];
}
bool DropSubfieldReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 251:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DropSubfieldReq_CmdId DropSubfieldReq::NONE;
const DropSubfieldReq_CmdId DropSubfieldReq::CMD_ID;
const DropSubfieldReq_CmdId DropSubfieldReq::ENET_CHANNEL_ID;
const DropSubfieldReq_CmdId DropSubfieldReq::ENET_IS_RELIABLE;
const DropSubfieldReq_CmdId DropSubfieldReq::IS_ALLOW_CLIENT;
const DropSubfieldReq_CmdId DropSubfieldReq::CmdId_MIN;
const DropSubfieldReq_CmdId DropSubfieldReq::CmdId_MAX;
const int DropSubfieldReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DropSubfieldRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[52];
}
bool DropSubfieldRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 252:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DropSubfieldRsp_CmdId DropSubfieldRsp::NONE;
const DropSubfieldRsp_CmdId DropSubfieldRsp::CMD_ID;
const DropSubfieldRsp_CmdId DropSubfieldRsp::ENET_CHANNEL_ID;
const DropSubfieldRsp_CmdId DropSubfieldRsp::ENET_IS_RELIABLE;
const DropSubfieldRsp_CmdId DropSubfieldRsp::CmdId_MIN;
const DropSubfieldRsp_CmdId DropSubfieldRsp::CmdId_MAX;
const int DropSubfieldRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExecuteGroupTriggerReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[53];
}
bool ExecuteGroupTriggerReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 253:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq::NONE;
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq::CMD_ID;
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq::ENET_CHANNEL_ID;
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq::ENET_IS_RELIABLE;
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq::IS_ALLOW_CLIENT;
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq::CmdId_MIN;
const ExecuteGroupTriggerReq_CmdId ExecuteGroupTriggerReq::CmdId_MAX;
const int ExecuteGroupTriggerReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExecuteGroupTriggerRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[54];
}
bool ExecuteGroupTriggerRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 254:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExecuteGroupTriggerRsp_CmdId ExecuteGroupTriggerRsp::NONE;
const ExecuteGroupTriggerRsp_CmdId ExecuteGroupTriggerRsp::CMD_ID;
const ExecuteGroupTriggerRsp_CmdId ExecuteGroupTriggerRsp::ENET_CHANNEL_ID;
const ExecuteGroupTriggerRsp_CmdId ExecuteGroupTriggerRsp::ENET_IS_RELIABLE;
const ExecuteGroupTriggerRsp_CmdId ExecuteGroupTriggerRsp::CmdId_MIN;
const ExecuteGroupTriggerRsp_CmdId ExecuteGroupTriggerRsp::CmdId_MAX;
const int ExecuteGroupTriggerRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LevelupCityReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[55];
}
bool LevelupCityReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 255:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LevelupCityReq_CmdId LevelupCityReq::NONE;
const LevelupCityReq_CmdId LevelupCityReq::CMD_ID;
const LevelupCityReq_CmdId LevelupCityReq::ENET_CHANNEL_ID;
const LevelupCityReq_CmdId LevelupCityReq::ENET_IS_RELIABLE;
const LevelupCityReq_CmdId LevelupCityReq::IS_ALLOW_CLIENT;
const LevelupCityReq_CmdId LevelupCityReq::CmdId_MIN;
const LevelupCityReq_CmdId LevelupCityReq::CmdId_MAX;
const int LevelupCityReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LevelupCityRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[56];
}
bool LevelupCityRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 256:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LevelupCityRsp_CmdId LevelupCityRsp::NONE;
const LevelupCityRsp_CmdId LevelupCityRsp::CMD_ID;
const LevelupCityRsp_CmdId LevelupCityRsp::ENET_CHANNEL_ID;
const LevelupCityRsp_CmdId LevelupCityRsp::ENET_IS_RELIABLE;
const LevelupCityRsp_CmdId LevelupCityRsp::CmdId_MIN;
const LevelupCityRsp_CmdId LevelupCityRsp::CmdId_MAX;
const int LevelupCityRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneRouteChangeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[57];
}
bool SceneRouteChangeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 257:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneRouteChangeNotify_CmdId SceneRouteChangeNotify::NONE;
const SceneRouteChangeNotify_CmdId SceneRouteChangeNotify::CMD_ID;
const SceneRouteChangeNotify_CmdId SceneRouteChangeNotify::ENET_CHANNEL_ID;
const SceneRouteChangeNotify_CmdId SceneRouteChangeNotify::ENET_IS_RELIABLE;
const SceneRouteChangeNotify_CmdId SceneRouteChangeNotify::CmdId_MIN;
const SceneRouteChangeNotify_CmdId SceneRouteChangeNotify::CmdId_MAX;
const int SceneRouteChangeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlatformStartRouteNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[58];
}
bool PlatformStartRouteNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 258:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlatformStartRouteNotify_CmdId PlatformStartRouteNotify::NONE;
const PlatformStartRouteNotify_CmdId PlatformStartRouteNotify::CMD_ID;
const PlatformStartRouteNotify_CmdId PlatformStartRouteNotify::ENET_CHANNEL_ID;
const PlatformStartRouteNotify_CmdId PlatformStartRouteNotify::ENET_IS_RELIABLE;
const PlatformStartRouteNotify_CmdId PlatformStartRouteNotify::CmdId_MIN;
const PlatformStartRouteNotify_CmdId PlatformStartRouteNotify::CmdId_MAX;
const int PlatformStartRouteNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlatformStopRouteNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[59];
}
bool PlatformStopRouteNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 259:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlatformStopRouteNotify_CmdId PlatformStopRouteNotify::NONE;
const PlatformStopRouteNotify_CmdId PlatformStopRouteNotify::CMD_ID;
const PlatformStopRouteNotify_CmdId PlatformStopRouteNotify::ENET_CHANNEL_ID;
const PlatformStopRouteNotify_CmdId PlatformStopRouteNotify::ENET_IS_RELIABLE;
const PlatformStopRouteNotify_CmdId PlatformStopRouteNotify::CmdId_MIN;
const PlatformStopRouteNotify_CmdId PlatformStopRouteNotify::CmdId_MAX;
const int PlatformStopRouteNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlatformChangeRouteNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[60];
}
bool PlatformChangeRouteNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 260:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlatformChangeRouteNotify_CmdId PlatformChangeRouteNotify::NONE;
const PlatformChangeRouteNotify_CmdId PlatformChangeRouteNotify::CMD_ID;
const PlatformChangeRouteNotify_CmdId PlatformChangeRouteNotify::ENET_CHANNEL_ID;
const PlatformChangeRouteNotify_CmdId PlatformChangeRouteNotify::ENET_IS_RELIABLE;
const PlatformChangeRouteNotify_CmdId PlatformChangeRouteNotify::CmdId_MIN;
const PlatformChangeRouteNotify_CmdId PlatformChangeRouteNotify::CmdId_MAX;
const int PlatformChangeRouteNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ScenePlayerSoundNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[61];
}
bool ScenePlayerSoundNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 261:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScenePlayerSoundNotify_CmdId ScenePlayerSoundNotify::NONE;
const ScenePlayerSoundNotify_CmdId ScenePlayerSoundNotify::CMD_ID;
const ScenePlayerSoundNotify_CmdId ScenePlayerSoundNotify::ENET_CHANNEL_ID;
const ScenePlayerSoundNotify_CmdId ScenePlayerSoundNotify::ENET_IS_RELIABLE;
const ScenePlayerSoundNotify_CmdId ScenePlayerSoundNotify::CmdId_MIN;
const ScenePlayerSoundNotify_CmdId ScenePlayerSoundNotify::CmdId_MAX;
const int ScenePlayerSoundNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ScenePlayerSoundNotify_PlaySoundType_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[62];
}
bool ScenePlayerSoundNotify_PlaySoundType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify::PLAY_SOUND_NONE;
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify::PLAY_SOUND_START;
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify::PLAY_SOUND_STOP;
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify::PlaySoundType_MIN;
const ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify::PlaySoundType_MAX;
const int ScenePlayerSoundNotify::PlaySoundType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PersonalSceneJumpReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[63];
}
bool PersonalSceneJumpReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 262:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq::NONE;
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq::CMD_ID;
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq::ENET_CHANNEL_ID;
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq::ENET_IS_RELIABLE;
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq::IS_ALLOW_CLIENT;
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq::CmdId_MIN;
const PersonalSceneJumpReq_CmdId PersonalSceneJumpReq::CmdId_MAX;
const int PersonalSceneJumpReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PersonalSceneJumpRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[64];
}
bool PersonalSceneJumpRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 263:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PersonalSceneJumpRsp_CmdId PersonalSceneJumpRsp::NONE;
const PersonalSceneJumpRsp_CmdId PersonalSceneJumpRsp::CMD_ID;
const PersonalSceneJumpRsp_CmdId PersonalSceneJumpRsp::ENET_CHANNEL_ID;
const PersonalSceneJumpRsp_CmdId PersonalSceneJumpRsp::ENET_IS_RELIABLE;
const PersonalSceneJumpRsp_CmdId PersonalSceneJumpRsp::CmdId_MIN;
const PersonalSceneJumpRsp_CmdId PersonalSceneJumpRsp::CmdId_MAX;
const int PersonalSceneJumpRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SealBattleBeginNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[65];
}
bool SealBattleBeginNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 264:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SealBattleBeginNotify_CmdId SealBattleBeginNotify::NONE;
const SealBattleBeginNotify_CmdId SealBattleBeginNotify::CMD_ID;
const SealBattleBeginNotify_CmdId SealBattleBeginNotify::ENET_CHANNEL_ID;
const SealBattleBeginNotify_CmdId SealBattleBeginNotify::ENET_IS_RELIABLE;
const SealBattleBeginNotify_CmdId SealBattleBeginNotify::CmdId_MIN;
const SealBattleBeginNotify_CmdId SealBattleBeginNotify::CmdId_MAX;
const int SealBattleBeginNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SealBattleEndNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[66];
}
bool SealBattleEndNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 265:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SealBattleEndNotify_CmdId SealBattleEndNotify::NONE;
const SealBattleEndNotify_CmdId SealBattleEndNotify::CMD_ID;
const SealBattleEndNotify_CmdId SealBattleEndNotify::ENET_CHANNEL_ID;
const SealBattleEndNotify_CmdId SealBattleEndNotify::ENET_IS_RELIABLE;
const SealBattleEndNotify_CmdId SealBattleEndNotify::CmdId_MIN;
const SealBattleEndNotify_CmdId SealBattleEndNotify::CmdId_MAX;
const int SealBattleEndNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SealBattleProgressNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[67];
}
bool SealBattleProgressNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 266:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SealBattleProgressNotify_CmdId SealBattleProgressNotify::NONE;
const SealBattleProgressNotify_CmdId SealBattleProgressNotify::CMD_ID;
const SealBattleProgressNotify_CmdId SealBattleProgressNotify::ENET_CHANNEL_ID;
const SealBattleProgressNotify_CmdId SealBattleProgressNotify::ENET_IS_RELIABLE;
const SealBattleProgressNotify_CmdId SealBattleProgressNotify::CmdId_MIN;
const SealBattleProgressNotify_CmdId SealBattleProgressNotify::CmdId_MAX;
const int SealBattleProgressNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientPauseNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[68];
}
bool ClientPauseNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 267:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientPauseNotify_CmdId ClientPauseNotify::NONE;
const ClientPauseNotify_CmdId ClientPauseNotify::CMD_ID;
const ClientPauseNotify_CmdId ClientPauseNotify::ENET_CHANNEL_ID;
const ClientPauseNotify_CmdId ClientPauseNotify::ENET_IS_RELIABLE;
const ClientPauseNotify_CmdId ClientPauseNotify::IS_ALLOW_CLIENT;
const ClientPauseNotify_CmdId ClientPauseNotify::CmdId_MIN;
const ClientPauseNotify_CmdId ClientPauseNotify::CmdId_MAX;
const int ClientPauseNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerEnterSceneInfoNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[69];
}
bool PlayerEnterSceneInfoNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 268:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify::NONE;
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify::CMD_ID;
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify::ENET_CHANNEL_ID;
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify::ENET_IS_RELIABLE;
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify::IS_ALLOW_CLIENT;
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify::CmdId_MIN;
const PlayerEnterSceneInfoNotify_CmdId PlayerEnterSceneInfoNotify::CmdId_MAX;
const int PlayerEnterSceneInfoNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* JoinPlayerSceneReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[70];
}
bool JoinPlayerSceneReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 269:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq::NONE;
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq::CMD_ID;
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq::ENET_CHANNEL_ID;
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq::ENET_IS_RELIABLE;
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq::IS_ALLOW_CLIENT;
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq::CmdId_MIN;
const JoinPlayerSceneReq_CmdId JoinPlayerSceneReq::CmdId_MAX;
const int JoinPlayerSceneReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* JoinPlayerSceneRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[71];
}
bool JoinPlayerSceneRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 270:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const JoinPlayerSceneRsp_CmdId JoinPlayerSceneRsp::NONE;
const JoinPlayerSceneRsp_CmdId JoinPlayerSceneRsp::CMD_ID;
const JoinPlayerSceneRsp_CmdId JoinPlayerSceneRsp::ENET_CHANNEL_ID;
const JoinPlayerSceneRsp_CmdId JoinPlayerSceneRsp::ENET_IS_RELIABLE;
const JoinPlayerSceneRsp_CmdId JoinPlayerSceneRsp::CmdId_MIN;
const JoinPlayerSceneRsp_CmdId JoinPlayerSceneRsp::CmdId_MAX;
const int JoinPlayerSceneRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneKickPlayerReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[72];
}
bool SceneKickPlayerReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 271:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneKickPlayerReq_CmdId SceneKickPlayerReq::NONE;
const SceneKickPlayerReq_CmdId SceneKickPlayerReq::CMD_ID;
const SceneKickPlayerReq_CmdId SceneKickPlayerReq::ENET_CHANNEL_ID;
const SceneKickPlayerReq_CmdId SceneKickPlayerReq::ENET_IS_RELIABLE;
const SceneKickPlayerReq_CmdId SceneKickPlayerReq::IS_ALLOW_CLIENT;
const SceneKickPlayerReq_CmdId SceneKickPlayerReq::CmdId_MIN;
const SceneKickPlayerReq_CmdId SceneKickPlayerReq::CmdId_MAX;
const int SceneKickPlayerReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneKickPlayerRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[73];
}
bool SceneKickPlayerRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 272:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneKickPlayerRsp_CmdId SceneKickPlayerRsp::NONE;
const SceneKickPlayerRsp_CmdId SceneKickPlayerRsp::CMD_ID;
const SceneKickPlayerRsp_CmdId SceneKickPlayerRsp::ENET_CHANNEL_ID;
const SceneKickPlayerRsp_CmdId SceneKickPlayerRsp::ENET_IS_RELIABLE;
const SceneKickPlayerRsp_CmdId SceneKickPlayerRsp::CmdId_MIN;
const SceneKickPlayerRsp_CmdId SceneKickPlayerRsp::CmdId_MAX;
const int SceneKickPlayerRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneKickPlayerNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[74];
}
bool SceneKickPlayerNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 273:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify::NONE;
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify::CMD_ID;
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify::ENET_CHANNEL_ID;
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify::ENET_IS_RELIABLE;
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify::IS_ALLOW_CLIENT;
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify::CmdId_MIN;
const SceneKickPlayerNotify_CmdId SceneKickPlayerNotify::CmdId_MAX;
const int SceneKickPlayerNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* HitClientTrivialNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[75];
}
bool HitClientTrivialNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 274:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HitClientTrivialNotify_CmdId HitClientTrivialNotify::NONE;
const HitClientTrivialNotify_CmdId HitClientTrivialNotify::CMD_ID;
const HitClientTrivialNotify_CmdId HitClientTrivialNotify::ENET_CHANNEL_ID;
const HitClientTrivialNotify_CmdId HitClientTrivialNotify::ENET_IS_RELIABLE;
const HitClientTrivialNotify_CmdId HitClientTrivialNotify::IS_ALLOW_CLIENT;
const HitClientTrivialNotify_CmdId HitClientTrivialNotify::CmdId_MIN;
const HitClientTrivialNotify_CmdId HitClientTrivialNotify::CmdId_MAX;
const int HitClientTrivialNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BackMyWorldReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[76];
}
bool BackMyWorldReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 275:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BackMyWorldReq_CmdId BackMyWorldReq::NONE;
const BackMyWorldReq_CmdId BackMyWorldReq::CMD_ID;
const BackMyWorldReq_CmdId BackMyWorldReq::ENET_CHANNEL_ID;
const BackMyWorldReq_CmdId BackMyWorldReq::ENET_IS_RELIABLE;
const BackMyWorldReq_CmdId BackMyWorldReq::IS_ALLOW_CLIENT;
const BackMyWorldReq_CmdId BackMyWorldReq::CmdId_MIN;
const BackMyWorldReq_CmdId BackMyWorldReq::CmdId_MAX;
const int BackMyWorldReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* BackMyWorldRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[77];
}
bool BackMyWorldRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 276:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BackMyWorldRsp_CmdId BackMyWorldRsp::NONE;
const BackMyWorldRsp_CmdId BackMyWorldRsp::CMD_ID;
const BackMyWorldRsp_CmdId BackMyWorldRsp::ENET_CHANNEL_ID;
const BackMyWorldRsp_CmdId BackMyWorldRsp::ENET_IS_RELIABLE;
const BackMyWorldRsp_CmdId BackMyWorldRsp::CmdId_MIN;
const BackMyWorldRsp_CmdId BackMyWorldRsp::CmdId_MAX;
const int BackMyWorldRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SeeMonsterReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[78];
}
bool SeeMonsterReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 277:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SeeMonsterReq_CmdId SeeMonsterReq::NONE;
const SeeMonsterReq_CmdId SeeMonsterReq::CMD_ID;
const SeeMonsterReq_CmdId SeeMonsterReq::ENET_CHANNEL_ID;
const SeeMonsterReq_CmdId SeeMonsterReq::ENET_IS_RELIABLE;
const SeeMonsterReq_CmdId SeeMonsterReq::IS_ALLOW_CLIENT;
const SeeMonsterReq_CmdId SeeMonsterReq::CmdId_MIN;
const SeeMonsterReq_CmdId SeeMonsterReq::CmdId_MAX;
const int SeeMonsterReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SeeMonsterRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[79];
}
bool SeeMonsterRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 278:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SeeMonsterRsp_CmdId SeeMonsterRsp::NONE;
const SeeMonsterRsp_CmdId SeeMonsterRsp::CMD_ID;
const SeeMonsterRsp_CmdId SeeMonsterRsp::ENET_CHANNEL_ID;
const SeeMonsterRsp_CmdId SeeMonsterRsp::ENET_IS_RELIABLE;
const SeeMonsterRsp_CmdId SeeMonsterRsp::CmdId_MIN;
const SeeMonsterRsp_CmdId SeeMonsterRsp::CmdId_MAX;
const int SeeMonsterRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AddSeenMonsterNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[80];
}
bool AddSeenMonsterNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 279:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify::NONE;
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify::CMD_ID;
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify::ENET_CHANNEL_ID;
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify::ENET_IS_RELIABLE;
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify::IS_ALLOW_CLIENT;
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify::CmdId_MIN;
const AddSeenMonsterNotify_CmdId AddSeenMonsterNotify::CmdId_MAX;
const int AddSeenMonsterNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AllSeenMonsterNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[81];
}
bool AllSeenMonsterNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 280:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify::NONE;
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify::CMD_ID;
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify::ENET_CHANNEL_ID;
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify::ENET_IS_RELIABLE;
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify::IS_ALLOW_CLIENT;
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify::CmdId_MIN;
const AllSeenMonsterNotify_CmdId AllSeenMonsterNotify::CmdId_MAX;
const int AllSeenMonsterNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneTimeNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[82];
}
bool SceneTimeNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 281:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneTimeNotify_CmdId SceneTimeNotify::NONE;
const SceneTimeNotify_CmdId SceneTimeNotify::CMD_ID;
const SceneTimeNotify_CmdId SceneTimeNotify::ENET_CHANNEL_ID;
const SceneTimeNotify_CmdId SceneTimeNotify::ENET_IS_RELIABLE;
const SceneTimeNotify_CmdId SceneTimeNotify::CmdId_MIN;
const SceneTimeNotify_CmdId SceneTimeNotify::CmdId_MAX;
const int SceneTimeNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterSceneReadyReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[83];
}
bool EnterSceneReadyReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 282:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterSceneReadyReq_CmdId EnterSceneReadyReq::NONE;
const EnterSceneReadyReq_CmdId EnterSceneReadyReq::CMD_ID;
const EnterSceneReadyReq_CmdId EnterSceneReadyReq::ENET_CHANNEL_ID;
const EnterSceneReadyReq_CmdId EnterSceneReadyReq::ENET_IS_RELIABLE;
const EnterSceneReadyReq_CmdId EnterSceneReadyReq::IS_ALLOW_CLIENT;
const EnterSceneReadyReq_CmdId EnterSceneReadyReq::CmdId_MIN;
const EnterSceneReadyReq_CmdId EnterSceneReadyReq::CmdId_MAX;
const int EnterSceneReadyReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterSceneReadyRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[84];
}
bool EnterSceneReadyRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 283:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterSceneReadyRsp_CmdId EnterSceneReadyRsp::NONE;
const EnterSceneReadyRsp_CmdId EnterSceneReadyRsp::CMD_ID;
const EnterSceneReadyRsp_CmdId EnterSceneReadyRsp::ENET_CHANNEL_ID;
const EnterSceneReadyRsp_CmdId EnterSceneReadyRsp::ENET_IS_RELIABLE;
const EnterSceneReadyRsp_CmdId EnterSceneReadyRsp::CmdId_MIN;
const EnterSceneReadyRsp_CmdId EnterSceneReadyRsp::CmdId_MAX;
const int EnterSceneReadyRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterScenePeerNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[85];
}
bool EnterScenePeerNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 284:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterScenePeerNotify_CmdId EnterScenePeerNotify::NONE;
const EnterScenePeerNotify_CmdId EnterScenePeerNotify::CMD_ID;
const EnterScenePeerNotify_CmdId EnterScenePeerNotify::ENET_CHANNEL_ID;
const EnterScenePeerNotify_CmdId EnterScenePeerNotify::ENET_IS_RELIABLE;
const EnterScenePeerNotify_CmdId EnterScenePeerNotify::CmdId_MIN;
const EnterScenePeerNotify_CmdId EnterScenePeerNotify::CmdId_MAX;
const int EnterScenePeerNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterSceneDoneReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[86];
}
bool EnterSceneDoneReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 285:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterSceneDoneReq_CmdId EnterSceneDoneReq::NONE;
const EnterSceneDoneReq_CmdId EnterSceneDoneReq::CMD_ID;
const EnterSceneDoneReq_CmdId EnterSceneDoneReq::ENET_CHANNEL_ID;
const EnterSceneDoneReq_CmdId EnterSceneDoneReq::ENET_IS_RELIABLE;
const EnterSceneDoneReq_CmdId EnterSceneDoneReq::IS_ALLOW_CLIENT;
const EnterSceneDoneReq_CmdId EnterSceneDoneReq::CmdId_MIN;
const EnterSceneDoneReq_CmdId EnterSceneDoneReq::CmdId_MAX;
const int EnterSceneDoneReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterSceneDoneRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[87];
}
bool EnterSceneDoneRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 286:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterSceneDoneRsp_CmdId EnterSceneDoneRsp::NONE;
const EnterSceneDoneRsp_CmdId EnterSceneDoneRsp::CMD_ID;
const EnterSceneDoneRsp_CmdId EnterSceneDoneRsp::ENET_CHANNEL_ID;
const EnterSceneDoneRsp_CmdId EnterSceneDoneRsp::ENET_IS_RELIABLE;
const EnterSceneDoneRsp_CmdId EnterSceneDoneRsp::CmdId_MIN;
const EnterSceneDoneRsp_CmdId EnterSceneDoneRsp::CmdId_MAX;
const int EnterSceneDoneRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldPlayerDieNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[88];
}
bool WorldPlayerDieNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 287:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorldPlayerDieNotify_CmdId WorldPlayerDieNotify::NONE;
const WorldPlayerDieNotify_CmdId WorldPlayerDieNotify::CMD_ID;
const WorldPlayerDieNotify_CmdId WorldPlayerDieNotify::ENET_CHANNEL_ID;
const WorldPlayerDieNotify_CmdId WorldPlayerDieNotify::ENET_IS_RELIABLE;
const WorldPlayerDieNotify_CmdId WorldPlayerDieNotify::CmdId_MIN;
const WorldPlayerDieNotify_CmdId WorldPlayerDieNotify::CmdId_MAX;
const int WorldPlayerDieNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldPlayerReviveReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[89];
}
bool WorldPlayerReviveReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 288:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq::NONE;
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq::CMD_ID;
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq::ENET_CHANNEL_ID;
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq::ENET_IS_RELIABLE;
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq::IS_ALLOW_CLIENT;
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq::CmdId_MIN;
const WorldPlayerReviveReq_CmdId WorldPlayerReviveReq::CmdId_MAX;
const int WorldPlayerReviveReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldPlayerReviveRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[90];
}
bool WorldPlayerReviveRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 289:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorldPlayerReviveRsp_CmdId WorldPlayerReviveRsp::NONE;
const WorldPlayerReviveRsp_CmdId WorldPlayerReviveRsp::CMD_ID;
const WorldPlayerReviveRsp_CmdId WorldPlayerReviveRsp::ENET_CHANNEL_ID;
const WorldPlayerReviveRsp_CmdId WorldPlayerReviveRsp::ENET_IS_RELIABLE;
const WorldPlayerReviveRsp_CmdId WorldPlayerReviveRsp::CmdId_MIN;
const WorldPlayerReviveRsp_CmdId WorldPlayerReviveRsp::CmdId_MAX;
const int WorldPlayerReviveRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* JoinPlayerFailNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[91];
}
bool JoinPlayerFailNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 290:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const JoinPlayerFailNotify_CmdId JoinPlayerFailNotify::NONE;
const JoinPlayerFailNotify_CmdId JoinPlayerFailNotify::CMD_ID;
const JoinPlayerFailNotify_CmdId JoinPlayerFailNotify::ENET_CHANNEL_ID;
const JoinPlayerFailNotify_CmdId JoinPlayerFailNotify::ENET_IS_RELIABLE;
const JoinPlayerFailNotify_CmdId JoinPlayerFailNotify::CmdId_MIN;
const JoinPlayerFailNotify_CmdId JoinPlayerFailNotify::CmdId_MAX;
const int JoinPlayerFailNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetSceneWeatherAreaReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[92];
}
bool SetSceneWeatherAreaReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 291:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq::NONE;
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq::CMD_ID;
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq::ENET_CHANNEL_ID;
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq::ENET_IS_RELIABLE;
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq::IS_ALLOW_CLIENT;
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq::CmdId_MIN;
const SetSceneWeatherAreaReq_CmdId SetSceneWeatherAreaReq::CmdId_MAX;
const int SetSceneWeatherAreaReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetSceneWeatherAreaRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[93];
}
bool SetSceneWeatherAreaRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 292:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetSceneWeatherAreaRsp_CmdId SetSceneWeatherAreaRsp::NONE;
const SetSceneWeatherAreaRsp_CmdId SetSceneWeatherAreaRsp::CMD_ID;
const SetSceneWeatherAreaRsp_CmdId SetSceneWeatherAreaRsp::ENET_CHANNEL_ID;
const SetSceneWeatherAreaRsp_CmdId SetSceneWeatherAreaRsp::ENET_IS_RELIABLE;
const SetSceneWeatherAreaRsp_CmdId SetSceneWeatherAreaRsp::CmdId_MIN;
const SetSceneWeatherAreaRsp_CmdId SetSceneWeatherAreaRsp::CmdId_MAX;
const int SetSceneWeatherAreaRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExecuteGadgetLuaReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[94];
}
bool ExecuteGadgetLuaReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 293:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq::NONE;
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq::CMD_ID;
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq::ENET_CHANNEL_ID;
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq::ENET_IS_RELIABLE;
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq::IS_ALLOW_CLIENT;
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq::CmdId_MIN;
const ExecuteGadgetLuaReq_CmdId ExecuteGadgetLuaReq::CmdId_MAX;
const int ExecuteGadgetLuaReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ExecuteGadgetLuaRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[95];
}
bool ExecuteGadgetLuaRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 294:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ExecuteGadgetLuaRsp_CmdId ExecuteGadgetLuaRsp::NONE;
const ExecuteGadgetLuaRsp_CmdId ExecuteGadgetLuaRsp::CMD_ID;
const ExecuteGadgetLuaRsp_CmdId ExecuteGadgetLuaRsp::ENET_CHANNEL_ID;
const ExecuteGadgetLuaRsp_CmdId ExecuteGadgetLuaRsp::ENET_IS_RELIABLE;
const ExecuteGadgetLuaRsp_CmdId ExecuteGadgetLuaRsp::CmdId_MIN;
const ExecuteGadgetLuaRsp_CmdId ExecuteGadgetLuaRsp::CmdId_MAX;
const int ExecuteGadgetLuaRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CutSceneBeginNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[96];
}
bool CutSceneBeginNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 295:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CutSceneBeginNotify_CmdId CutSceneBeginNotify::NONE;
const CutSceneBeginNotify_CmdId CutSceneBeginNotify::CMD_ID;
const CutSceneBeginNotify_CmdId CutSceneBeginNotify::ENET_CHANNEL_ID;
const CutSceneBeginNotify_CmdId CutSceneBeginNotify::ENET_IS_RELIABLE;
const CutSceneBeginNotify_CmdId CutSceneBeginNotify::CmdId_MIN;
const CutSceneBeginNotify_CmdId CutSceneBeginNotify::CmdId_MAX;
const int CutSceneBeginNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CutSceneFinishNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[97];
}
bool CutSceneFinishNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 296:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CutSceneFinishNotify_CmdId CutSceneFinishNotify::NONE;
const CutSceneFinishNotify_CmdId CutSceneFinishNotify::CMD_ID;
const CutSceneFinishNotify_CmdId CutSceneFinishNotify::ENET_CHANNEL_ID;
const CutSceneFinishNotify_CmdId CutSceneFinishNotify::ENET_IS_RELIABLE;
const CutSceneFinishNotify_CmdId CutSceneFinishNotify::IS_ALLOW_CLIENT;
const CutSceneFinishNotify_CmdId CutSceneFinishNotify::CmdId_MIN;
const CutSceneFinishNotify_CmdId CutSceneFinishNotify::CmdId_MAX;
const int CutSceneFinishNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CutSceneEndNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[98];
}
bool CutSceneEndNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 297:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CutSceneEndNotify_CmdId CutSceneEndNotify::NONE;
const CutSceneEndNotify_CmdId CutSceneEndNotify::CMD_ID;
const CutSceneEndNotify_CmdId CutSceneEndNotify::ENET_CHANNEL_ID;
const CutSceneEndNotify_CmdId CutSceneEndNotify::ENET_IS_RELIABLE;
const CutSceneEndNotify_CmdId CutSceneEndNotify::CmdId_MIN;
const CutSceneEndNotify_CmdId CutSceneEndNotify::CmdId_MAX;
const int CutSceneEndNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ClientScriptEventNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[99];
}
bool ClientScriptEventNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 298:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ClientScriptEventNotify_CmdId ClientScriptEventNotify::NONE;
const ClientScriptEventNotify_CmdId ClientScriptEventNotify::CMD_ID;
const ClientScriptEventNotify_CmdId ClientScriptEventNotify::ENET_CHANNEL_ID;
const ClientScriptEventNotify_CmdId ClientScriptEventNotify::ENET_IS_RELIABLE;
const ClientScriptEventNotify_CmdId ClientScriptEventNotify::IS_ALLOW_CLIENT;
const ClientScriptEventNotify_CmdId ClientScriptEventNotify::CmdId_MIN;
const ClientScriptEventNotify_CmdId ClientScriptEventNotify::CmdId_MAX;
const int ClientScriptEventNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntitiesMovesReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[100];
}
bool SceneEntitiesMovesReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 299:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq::NONE;
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq::CMD_ID;
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq::ENET_CHANNEL_ID;
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq::ENET_IS_RELIABLE;
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq::IS_ALLOW_CLIENT;
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq::CmdId_MIN;
const SceneEntitiesMovesReq_CmdId SceneEntitiesMovesReq::CmdId_MAX;
const int SceneEntitiesMovesReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntitiesMovesRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[101];
}
bool SceneEntitiesMovesRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 300:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntitiesMovesRsp_CmdId SceneEntitiesMovesRsp::NONE;
const SceneEntitiesMovesRsp_CmdId SceneEntitiesMovesRsp::CMD_ID;
const SceneEntitiesMovesRsp_CmdId SceneEntitiesMovesRsp::ENET_CHANNEL_ID;
const SceneEntitiesMovesRsp_CmdId SceneEntitiesMovesRsp::ENET_IS_RELIABLE;
const SceneEntitiesMovesRsp_CmdId SceneEntitiesMovesRsp::CmdId_MIN;
const SceneEntitiesMovesRsp_CmdId SceneEntitiesMovesRsp::CmdId_MAX;
const int SceneEntitiesMovesRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneEntitiesMoveCombineNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[102];
}
bool SceneEntitiesMoveCombineNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3001:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneEntitiesMoveCombineNotify_CmdId SceneEntitiesMoveCombineNotify::NONE;
const SceneEntitiesMoveCombineNotify_CmdId SceneEntitiesMoveCombineNotify::CMD_ID;
const SceneEntitiesMoveCombineNotify_CmdId SceneEntitiesMoveCombineNotify::ENET_CHANNEL_ID;
const SceneEntitiesMoveCombineNotify_CmdId SceneEntitiesMoveCombineNotify::ENET_IS_RELIABLE;
const SceneEntitiesMoveCombineNotify_CmdId SceneEntitiesMoveCombineNotify::CmdId_MIN;
const SceneEntitiesMoveCombineNotify_CmdId SceneEntitiesMoveCombineNotify::CmdId_MAX;
const int SceneEntitiesMoveCombineNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnlockTransPointReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[103];
}
bool UnlockTransPointReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3002:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnlockTransPointReq_CmdId UnlockTransPointReq::NONE;
const UnlockTransPointReq_CmdId UnlockTransPointReq::CMD_ID;
const UnlockTransPointReq_CmdId UnlockTransPointReq::ENET_CHANNEL_ID;
const UnlockTransPointReq_CmdId UnlockTransPointReq::ENET_IS_RELIABLE;
const UnlockTransPointReq_CmdId UnlockTransPointReq::IS_ALLOW_CLIENT;
const UnlockTransPointReq_CmdId UnlockTransPointReq::CmdId_MIN;
const UnlockTransPointReq_CmdId UnlockTransPointReq::CmdId_MAX;
const int UnlockTransPointReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnlockTransPointRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[104];
}
bool UnlockTransPointRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3003:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnlockTransPointRsp_CmdId UnlockTransPointRsp::NONE;
const UnlockTransPointRsp_CmdId UnlockTransPointRsp::CMD_ID;
const UnlockTransPointRsp_CmdId UnlockTransPointRsp::ENET_CHANNEL_ID;
const UnlockTransPointRsp_CmdId UnlockTransPointRsp::ENET_IS_RELIABLE;
const UnlockTransPointRsp_CmdId UnlockTransPointRsp::CmdId_MIN;
const UnlockTransPointRsp_CmdId UnlockTransPointRsp::CmdId_MAX;
const int UnlockTransPointRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlatformRouteStateNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[105];
}
bool PlatformRouteStateNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3004:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify::NONE;
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify::CMD_ID;
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify::ENET_CHANNEL_ID;
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify::ENET_IS_RELIABLE;
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify::IS_ALLOW_CLIENT;
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify::CmdId_MIN;
const PlatformRouteStateNotify_CmdId PlatformRouteStateNotify::CmdId_MAX;
const int PlatformRouteStateNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneWeatherForcastReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[106];
}
bool SceneWeatherForcastReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3005:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq::NONE;
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq::CMD_ID;
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq::ENET_CHANNEL_ID;
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq::ENET_IS_RELIABLE;
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq::IS_ALLOW_CLIENT;
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq::CmdId_MIN;
const SceneWeatherForcastReq_CmdId SceneWeatherForcastReq::CmdId_MAX;
const int SceneWeatherForcastReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneWeatherForcastRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[107];
}
bool SceneWeatherForcastRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3006:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneWeatherForcastRsp_CmdId SceneWeatherForcastRsp::NONE;
const SceneWeatherForcastRsp_CmdId SceneWeatherForcastRsp::CMD_ID;
const SceneWeatherForcastRsp_CmdId SceneWeatherForcastRsp::ENET_CHANNEL_ID;
const SceneWeatherForcastRsp_CmdId SceneWeatherForcastRsp::ENET_IS_RELIABLE;
const SceneWeatherForcastRsp_CmdId SceneWeatherForcastRsp::CmdId_MIN;
const SceneWeatherForcastRsp_CmdId SceneWeatherForcastRsp::CmdId_MAX;
const int SceneWeatherForcastRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MarkMapReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[108];
}
bool MarkMapReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3010:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MarkMapReq_CmdId MarkMapReq::NONE;
const MarkMapReq_CmdId MarkMapReq::CMD_ID;
const MarkMapReq_CmdId MarkMapReq::ENET_CHANNEL_ID;
const MarkMapReq_CmdId MarkMapReq::ENET_IS_RELIABLE;
const MarkMapReq_CmdId MarkMapReq::IS_ALLOW_CLIENT;
const MarkMapReq_CmdId MarkMapReq::CmdId_MIN;
const MarkMapReq_CmdId MarkMapReq::CmdId_MAX;
const int MarkMapReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MarkMapReq_Operation_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[109];
}
bool MarkMapReq_Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MarkMapReq_Operation MarkMapReq::ADD;
const MarkMapReq_Operation MarkMapReq::MOD;
const MarkMapReq_Operation MarkMapReq::DEL;
const MarkMapReq_Operation MarkMapReq::GET;
const MarkMapReq_Operation MarkMapReq::Operation_MIN;
const MarkMapReq_Operation MarkMapReq::Operation_MAX;
const int MarkMapReq::Operation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MarkMapRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[110];
}
bool MarkMapRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3011:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MarkMapRsp_CmdId MarkMapRsp::NONE;
const MarkMapRsp_CmdId MarkMapRsp::CMD_ID;
const MarkMapRsp_CmdId MarkMapRsp::ENET_CHANNEL_ID;
const MarkMapRsp_CmdId MarkMapRsp::ENET_IS_RELIABLE;
const MarkMapRsp_CmdId MarkMapRsp::CmdId_MIN;
const MarkMapRsp_CmdId MarkMapRsp::CmdId_MAX;
const int MarkMapRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AllMarkPointNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[111];
}
bool AllMarkPointNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3012:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AllMarkPointNotify_CmdId AllMarkPointNotify::NONE;
const AllMarkPointNotify_CmdId AllMarkPointNotify::CMD_ID;
const AllMarkPointNotify_CmdId AllMarkPointNotify::ENET_CHANNEL_ID;
const AllMarkPointNotify_CmdId AllMarkPointNotify::ENET_IS_RELIABLE;
const AllMarkPointNotify_CmdId AllMarkPointNotify::CmdId_MIN;
const AllMarkPointNotify_CmdId AllMarkPointNotify::CmdId_MAX;
const int AllMarkPointNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[112];
}
bool WorldDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3013:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorldDataNotify_CmdId WorldDataNotify::NONE;
const WorldDataNotify_CmdId WorldDataNotify::CMD_ID;
const WorldDataNotify_CmdId WorldDataNotify::ENET_CHANNEL_ID;
const WorldDataNotify_CmdId WorldDataNotify::ENET_IS_RELIABLE;
const WorldDataNotify_CmdId WorldDataNotify::IS_ALLOW_CLIENT;
const WorldDataNotify_CmdId WorldDataNotify::CmdId_MIN;
const WorldDataNotify_CmdId WorldDataNotify::CmdId_MAX;
const int WorldDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldDataNotify_DataType_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[113];
}
bool WorldDataNotify_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorldDataNotify_DataType WorldDataNotify::DATA_NONE;
const WorldDataNotify_DataType WorldDataNotify::WORLD_LEVEL;
const WorldDataNotify_DataType WorldDataNotify::DataType_MIN;
const WorldDataNotify_DataType WorldDataNotify::DataType_MAX;
const int WorldDataNotify::DataType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EntityMoveRoomNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[114];
}
bool EntityMoveRoomNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3014:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify::NONE;
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify::CMD_ID;
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify::ENET_CHANNEL_ID;
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify::ENET_IS_RELIABLE;
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify::IS_ALLOW_CLIENT;
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify::CmdId_MIN;
const EntityMoveRoomNotify_CmdId EntityMoveRoomNotify::CmdId_MAX;
const int EntityMoveRoomNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* WorldPlayerInfoNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[115];
}
bool WorldPlayerInfoNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3015:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify::NONE;
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify::CMD_ID;
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify::ENET_CHANNEL_ID;
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify::ENET_IS_RELIABLE;
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify::IS_ALLOW_CLIENT;
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify::CmdId_MIN;
const WorldPlayerInfoNotify_CmdId WorldPlayerInfoNotify::CmdId_MAX;
const int WorldPlayerInfoNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PostEnterSceneReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[116];
}
bool PostEnterSceneReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3016:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PostEnterSceneReq_CmdId PostEnterSceneReq::NONE;
const PostEnterSceneReq_CmdId PostEnterSceneReq::CMD_ID;
const PostEnterSceneReq_CmdId PostEnterSceneReq::ENET_CHANNEL_ID;
const PostEnterSceneReq_CmdId PostEnterSceneReq::ENET_IS_RELIABLE;
const PostEnterSceneReq_CmdId PostEnterSceneReq::IS_ALLOW_CLIENT;
const PostEnterSceneReq_CmdId PostEnterSceneReq::CmdId_MIN;
const PostEnterSceneReq_CmdId PostEnterSceneReq::CmdId_MAX;
const int PostEnterSceneReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PostEnterSceneRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[117];
}
bool PostEnterSceneRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3017:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PostEnterSceneRsp_CmdId PostEnterSceneRsp::NONE;
const PostEnterSceneRsp_CmdId PostEnterSceneRsp::CMD_ID;
const PostEnterSceneRsp_CmdId PostEnterSceneRsp::ENET_CHANNEL_ID;
const PostEnterSceneRsp_CmdId PostEnterSceneRsp::ENET_IS_RELIABLE;
const PostEnterSceneRsp_CmdId PostEnterSceneRsp::CmdId_MIN;
const PostEnterSceneRsp_CmdId PostEnterSceneRsp::CmdId_MAX;
const int PostEnterSceneRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChatInfo_SystemHintType_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[118];
}
bool ChatInfo_SystemHintType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChatInfo_SystemHintType ChatInfo::CHAT_NONE;
const ChatInfo_SystemHintType ChatInfo::CHAT_ENTER_WORLD;
const ChatInfo_SystemHintType ChatInfo::CHAT_LEAVE_WORLD;
const ChatInfo_SystemHintType ChatInfo::SystemHintType_MIN;
const ChatInfo_SystemHintType ChatInfo::SystemHintType_MAX;
const int ChatInfo::SystemHintType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerChatReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[119];
}
bool PlayerChatReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3018:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerChatReq_CmdId PlayerChatReq::NONE;
const PlayerChatReq_CmdId PlayerChatReq::CMD_ID;
const PlayerChatReq_CmdId PlayerChatReq::ENET_CHANNEL_ID;
const PlayerChatReq_CmdId PlayerChatReq::ENET_IS_RELIABLE;
const PlayerChatReq_CmdId PlayerChatReq::IS_ALLOW_CLIENT;
const PlayerChatReq_CmdId PlayerChatReq::CmdId_MIN;
const PlayerChatReq_CmdId PlayerChatReq::CmdId_MAX;
const int PlayerChatReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerChatRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[120];
}
bool PlayerChatRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3019:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerChatRsp_CmdId PlayerChatRsp::NONE;
const PlayerChatRsp_CmdId PlayerChatRsp::CMD_ID;
const PlayerChatRsp_CmdId PlayerChatRsp::ENET_CHANNEL_ID;
const PlayerChatRsp_CmdId PlayerChatRsp::ENET_IS_RELIABLE;
const PlayerChatRsp_CmdId PlayerChatRsp::CmdId_MIN;
const PlayerChatRsp_CmdId PlayerChatRsp::CmdId_MAX;
const int PlayerChatRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerChatNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[121];
}
bool PlayerChatNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3020:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerChatNotify_CmdId PlayerChatNotify::NONE;
const PlayerChatNotify_CmdId PlayerChatNotify::CMD_ID;
const PlayerChatNotify_CmdId PlayerChatNotify::ENET_CHANNEL_ID;
const PlayerChatNotify_CmdId PlayerChatNotify::ENET_IS_RELIABLE;
const PlayerChatNotify_CmdId PlayerChatNotify::CmdId_MIN;
const PlayerChatNotify_CmdId PlayerChatNotify::CmdId_MAX;
const int PlayerChatNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerChatCDNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[122];
}
bool PlayerChatCDNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3021:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerChatCDNotify_CmdId PlayerChatCDNotify::NONE;
const PlayerChatCDNotify_CmdId PlayerChatCDNotify::CMD_ID;
const PlayerChatCDNotify_CmdId PlayerChatCDNotify::ENET_CHANNEL_ID;
const PlayerChatCDNotify_CmdId PlayerChatCDNotify::ENET_IS_RELIABLE;
const PlayerChatCDNotify_CmdId PlayerChatCDNotify::CmdId_MIN;
const PlayerChatCDNotify_CmdId PlayerChatCDNotify::CmdId_MAX;
const int PlayerChatCDNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ChatHistoryNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[123];
}
bool ChatHistoryNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3022:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ChatHistoryNotify_CmdId ChatHistoryNotify::NONE;
const ChatHistoryNotify_CmdId ChatHistoryNotify::CMD_ID;
const ChatHistoryNotify_CmdId ChatHistoryNotify::ENET_CHANNEL_ID;
const ChatHistoryNotify_CmdId ChatHistoryNotify::ENET_IS_RELIABLE;
const ChatHistoryNotify_CmdId ChatHistoryNotify::CmdId_MIN;
const ChatHistoryNotify_CmdId ChatHistoryNotify::CmdId_MAX;
const int ChatHistoryNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SceneDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[124];
}
bool SceneDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3023:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SceneDataNotify_CmdId SceneDataNotify::NONE;
const SceneDataNotify_CmdId SceneDataNotify::CMD_ID;
const SceneDataNotify_CmdId SceneDataNotify::ENET_CHANNEL_ID;
const SceneDataNotify_CmdId SceneDataNotify::ENET_IS_RELIABLE;
const SceneDataNotify_CmdId SceneDataNotify::CmdId_MIN;
const SceneDataNotify_CmdId SceneDataNotify::CmdId_MAX;
const int SceneDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* DungeonEntryToBeExploreNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[125];
}
bool DungeonEntryToBeExploreNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3024:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DungeonEntryToBeExploreNotify_CmdId DungeonEntryToBeExploreNotify::NONE;
const DungeonEntryToBeExploreNotify_CmdId DungeonEntryToBeExploreNotify::CMD_ID;
const DungeonEntryToBeExploreNotify_CmdId DungeonEntryToBeExploreNotify::ENET_CHANNEL_ID;
const DungeonEntryToBeExploreNotify_CmdId DungeonEntryToBeExploreNotify::ENET_IS_RELIABLE;
const DungeonEntryToBeExploreNotify_CmdId DungeonEntryToBeExploreNotify::CmdId_MIN;
const DungeonEntryToBeExploreNotify_CmdId DungeonEntryToBeExploreNotify::CmdId_MAX;
const int DungeonEntryToBeExploreNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetDungeonEntryExploreConditionReq_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[126];
}
bool GetDungeonEntryExploreConditionReq_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3035:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq::NONE;
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq::CMD_ID;
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq::ENET_CHANNEL_ID;
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq::ENET_IS_RELIABLE;
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq::IS_ALLOW_CLIENT;
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq::CmdId_MIN;
const GetDungeonEntryExploreConditionReq_CmdId GetDungeonEntryExploreConditionReq::CmdId_MAX;
const int GetDungeonEntryExploreConditionReq::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetDungeonEntryExploreConditionRsp_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[127];
}
bool GetDungeonEntryExploreConditionRsp_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3036:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetDungeonEntryExploreConditionRsp_CmdId GetDungeonEntryExploreConditionRsp::NONE;
const GetDungeonEntryExploreConditionRsp_CmdId GetDungeonEntryExploreConditionRsp::CMD_ID;
const GetDungeonEntryExploreConditionRsp_CmdId GetDungeonEntryExploreConditionRsp::ENET_CHANNEL_ID;
const GetDungeonEntryExploreConditionRsp_CmdId GetDungeonEntryExploreConditionRsp::ENET_IS_RELIABLE;
const GetDungeonEntryExploreConditionRsp_CmdId GetDungeonEntryExploreConditionRsp::CmdId_MIN;
const GetDungeonEntryExploreConditionRsp_CmdId GetDungeonEntryExploreConditionRsp::CmdId_MAX;
const int GetDungeonEntryExploreConditionRsp::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnfreezeGroupLimitNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[128];
}
bool UnfreezeGroupLimitNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3037:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnfreezeGroupLimitNotify_CmdId UnfreezeGroupLimitNotify::NONE;
const UnfreezeGroupLimitNotify_CmdId UnfreezeGroupLimitNotify::CMD_ID;
const UnfreezeGroupLimitNotify_CmdId UnfreezeGroupLimitNotify::ENET_CHANNEL_ID;
const UnfreezeGroupLimitNotify_CmdId UnfreezeGroupLimitNotify::ENET_IS_RELIABLE;
const UnfreezeGroupLimitNotify_CmdId UnfreezeGroupLimitNotify::CmdId_MIN;
const UnfreezeGroupLimitNotify_CmdId UnfreezeGroupLimitNotify::CmdId_MAX;
const int UnfreezeGroupLimitNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterWorldFogAreaNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[129];
}
bool EnterWorldFogAreaNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3038:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify::NONE;
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify::CMD_ID;
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify::ENET_CHANNEL_ID;
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify::ENET_IS_RELIABLE;
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify::IS_ALLOW_CLIENT;
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify::CmdId_MIN;
const EnterWorldFogAreaNotify_CmdId EnterWorldFogAreaNotify::CmdId_MAX;
const int EnterWorldFogAreaNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UnlockWorldFogAreaNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[130];
}
bool UnlockWorldFogAreaNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3039:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UnlockWorldFogAreaNotify_CmdId UnlockWorldFogAreaNotify::NONE;
const UnlockWorldFogAreaNotify_CmdId UnlockWorldFogAreaNotify::CMD_ID;
const UnlockWorldFogAreaNotify_CmdId UnlockWorldFogAreaNotify::ENET_CHANNEL_ID;
const UnlockWorldFogAreaNotify_CmdId UnlockWorldFogAreaNotify::ENET_IS_RELIABLE;
const UnlockWorldFogAreaNotify_CmdId UnlockWorldFogAreaNotify::CmdId_MIN;
const UnlockWorldFogAreaNotify_CmdId UnlockWorldFogAreaNotify::CmdId_MAX;
const int UnlockWorldFogAreaNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LockWorldFogAreaNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[131];
}
bool LockWorldFogAreaNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3040:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const LockWorldFogAreaNotify_CmdId LockWorldFogAreaNotify::NONE;
const LockWorldFogAreaNotify_CmdId LockWorldFogAreaNotify::CMD_ID;
const LockWorldFogAreaNotify_CmdId LockWorldFogAreaNotify::ENET_CHANNEL_ID;
const LockWorldFogAreaNotify_CmdId LockWorldFogAreaNotify::ENET_IS_RELIABLE;
const LockWorldFogAreaNotify_CmdId LockWorldFogAreaNotify::CmdId_MIN;
const LockWorldFogAreaNotify_CmdId LockWorldFogAreaNotify::CmdId_MAX;
const int LockWorldFogAreaNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SetEntityClientDataNotify_CmdId_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[132];
}
bool SetEntityClientDataNotify_CmdId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3041:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify::NONE;
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify::CMD_ID;
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify::ENET_CHANNEL_ID;
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify::ENET_IS_RELIABLE;
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify::IS_ALLOW_CLIENT;
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify::CmdId_MIN;
const SetEntityClientDataNotify_CmdId SetEntityClientDataNotify::CmdId_MAX;
const int SetEntityClientDataNotify::CmdId_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnterType_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[133];
}
bool EnterType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VisionType_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[134];
}
bool VisionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CreateReason_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[135];
}
bool CreateReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TransmitReason_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[136];
}
bool TransmitReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DropSubfieldType_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[137];
}
bool DropSubfieldType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SealBattleType_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[138];
}
bool SealBattleType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* DungeonEntryBlockReason_descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_enum_descriptors[139];
}
bool DungeonEntryBlockReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerEnterSceneNotify::kSceneIdFieldNumber;
const int PlayerEnterSceneNotify::kPosFieldNumber;
const int PlayerEnterSceneNotify::kSceneBeginTimeFieldNumber;
const int PlayerEnterSceneNotify::kTypeFieldNumber;
const int PlayerEnterSceneNotify::kTargetUidFieldNumber;
const int PlayerEnterSceneNotify::kPrevSceneIdFieldNumber;
const int PlayerEnterSceneNotify::kPrevPosFieldNumber;
const int PlayerEnterSceneNotify::kDungeonIdFieldNumber;
const int PlayerEnterSceneNotify::kWorldLevelFieldNumber;
const int PlayerEnterSceneNotify::kEnterSceneTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerEnterSceneNotify::PlayerEnterSceneNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerEnterSceneNotify)
}
PlayerEnterSceneNotify::PlayerEnterSceneNotify(const PlayerEnterSceneNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_prev_pos()) {
    prev_pos_ = new ::proto::Vector(*from.prev_pos_);
  } else {
    prev_pos_ = NULL;
  }
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&world_level_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(world_level_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerEnterSceneNotify)
}

void PlayerEnterSceneNotify::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&world_level_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(world_level_));
  _cached_size_ = 0;
}

PlayerEnterSceneNotify::~PlayerEnterSceneNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerEnterSceneNotify)
  SharedDtor();
}

void PlayerEnterSceneNotify::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete prev_pos_;
}

void PlayerEnterSceneNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerEnterSceneNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerEnterSceneNotify& PlayerEnterSceneNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerEnterSceneNotify* PlayerEnterSceneNotify::New(::google::protobuf::Arena* arena) const {
  PlayerEnterSceneNotify* n = new PlayerEnterSceneNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerEnterSceneNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerEnterSceneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && prev_pos_ != NULL) {
    delete prev_pos_;
  }
  prev_pos_ = NULL;
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&world_level_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(world_level_));
  _internal_metadata_.Clear();
}

bool PlayerEnterSceneNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerEnterSceneNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 scene_begin_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scene_begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EnterType type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::proto::EnterType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 prev_scene_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prev_scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector prev_pos = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prev_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 world_level = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 enter_scene_token = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enter_scene_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerEnterSceneNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerEnterSceneNotify)
  return false;
#undef DO_
}

void PlayerEnterSceneNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerEnterSceneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // uint64 scene_begin_time = 3;
  if (this->scene_begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->scene_begin_time(), output);
  }

  // .proto.EnterType type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->target_uid(), output);
  }

  // uint32 prev_scene_id = 9;
  if (this->prev_scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->prev_scene_id(), output);
  }

  // .proto.Vector prev_pos = 10;
  if (this->has_prev_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->prev_pos_, output);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dungeon_id(), output);
  }

  // uint32 world_level = 12;
  if (this->world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->world_level(), output);
  }

  // uint32 enter_scene_token = 13;
  if (this->enter_scene_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->enter_scene_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerEnterSceneNotify)
}

::google::protobuf::uint8* PlayerEnterSceneNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerEnterSceneNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  // uint64 scene_begin_time = 3;
  if (this->scene_begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->scene_begin_time(), target);
  }

  // .proto.EnterType type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->target_uid(), target);
  }

  // uint32 prev_scene_id = 9;
  if (this->prev_scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->prev_scene_id(), target);
  }

  // .proto.Vector prev_pos = 10;
  if (this->has_prev_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->prev_pos_, deterministic, target);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dungeon_id(), target);
  }

  // uint32 world_level = 12;
  if (this->world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->world_level(), target);
  }

  // uint32 enter_scene_token = 13;
  if (this->enter_scene_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->enter_scene_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerEnterSceneNotify)
  return target;
}

size_t PlayerEnterSceneNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerEnterSceneNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector prev_pos = 10;
  if (this->has_prev_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prev_pos_);
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // .proto.EnterType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint64 scene_begin_time = 3;
  if (this->scene_begin_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->scene_begin_time());
  }

  // uint32 target_uid = 6;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 prev_scene_id = 9;
  if (this->prev_scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prev_scene_id());
  }

  // uint32 enter_scene_token = 13;
  if (this->enter_scene_token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enter_scene_token());
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // uint32 world_level = 12;
  if (this->world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerEnterSceneNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerEnterSceneNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerEnterSceneNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerEnterSceneNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerEnterSceneNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerEnterSceneNotify)
    MergeFrom(*source);
  }
}

void PlayerEnterSceneNotify::MergeFrom(const PlayerEnterSceneNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerEnterSceneNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_prev_pos()) {
    mutable_prev_pos()->::proto::Vector::MergeFrom(from.prev_pos());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.scene_begin_time() != 0) {
    set_scene_begin_time(from.scene_begin_time());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.prev_scene_id() != 0) {
    set_prev_scene_id(from.prev_scene_id());
  }
  if (from.enter_scene_token() != 0) {
    set_enter_scene_token(from.enter_scene_token());
  }
  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.world_level() != 0) {
    set_world_level(from.world_level());
  }
}

void PlayerEnterSceneNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerEnterSceneNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerEnterSceneNotify::CopyFrom(const PlayerEnterSceneNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerEnterSceneNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerEnterSceneNotify::IsInitialized() const {
  return true;
}

void PlayerEnterSceneNotify::Swap(PlayerEnterSceneNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerEnterSceneNotify::InternalSwap(PlayerEnterSceneNotify* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(prev_pos_, other->prev_pos_);
  swap(scene_id_, other->scene_id_);
  swap(type_, other->type_);
  swap(scene_begin_time_, other->scene_begin_time_);
  swap(target_uid_, other->target_uid_);
  swap(prev_scene_id_, other->prev_scene_id_);
  swap(enter_scene_token_, other->enter_scene_token_);
  swap(dungeon_id_, other->dungeon_id_);
  swap(world_level_, other->world_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerEnterSceneNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerEnterSceneNotify

// uint32 scene_id = 1;
void PlayerEnterSceneNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 PlayerEnterSceneNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.scene_id)
  return scene_id_;
}
void PlayerEnterSceneNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.scene_id)
}

// .proto.Vector pos = 2;
bool PlayerEnterSceneNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void PlayerEnterSceneNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& PlayerEnterSceneNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlayerEnterSceneNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneNotify.pos)
  return pos_;
}
::proto::Vector* PlayerEnterSceneNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PlayerEnterSceneNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneNotify.pos)
}

// uint64 scene_begin_time = 3;
void PlayerEnterSceneNotify::clear_scene_begin_time() {
  scene_begin_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PlayerEnterSceneNotify::scene_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.scene_begin_time)
  return scene_begin_time_;
}
void PlayerEnterSceneNotify::set_scene_begin_time(::google::protobuf::uint64 value) {
  
  scene_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.scene_begin_time)
}

// .proto.EnterType type = 4;
void PlayerEnterSceneNotify::clear_type() {
  type_ = 0;
}
::proto::EnterType PlayerEnterSceneNotify::type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.type)
  return static_cast< ::proto::EnterType >(type_);
}
void PlayerEnterSceneNotify::set_type(::proto::EnterType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.type)
}

// uint32 target_uid = 6;
void PlayerEnterSceneNotify::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerEnterSceneNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.target_uid)
  return target_uid_;
}
void PlayerEnterSceneNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.target_uid)
}

// uint32 prev_scene_id = 9;
void PlayerEnterSceneNotify::clear_prev_scene_id() {
  prev_scene_id_ = 0u;
}
::google::protobuf::uint32 PlayerEnterSceneNotify::prev_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.prev_scene_id)
  return prev_scene_id_;
}
void PlayerEnterSceneNotify::set_prev_scene_id(::google::protobuf::uint32 value) {
  
  prev_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.prev_scene_id)
}

// .proto.Vector prev_pos = 10;
bool PlayerEnterSceneNotify::has_prev_pos() const {
  return this != internal_default_instance() && prev_pos_ != NULL;
}
void PlayerEnterSceneNotify::clear_prev_pos() {
  if (GetArenaNoVirtual() == NULL && prev_pos_ != NULL) delete prev_pos_;
  prev_pos_ = NULL;
}
const ::proto::Vector& PlayerEnterSceneNotify::prev_pos() const {
  const ::proto::Vector* p = prev_pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.prev_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlayerEnterSceneNotify::mutable_prev_pos() {
  
  if (prev_pos_ == NULL) {
    prev_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneNotify.prev_pos)
  return prev_pos_;
}
::proto::Vector* PlayerEnterSceneNotify::release_prev_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneNotify.prev_pos)
  
  ::proto::Vector* temp = prev_pos_;
  prev_pos_ = NULL;
  return temp;
}
void PlayerEnterSceneNotify::set_allocated_prev_pos(::proto::Vector* prev_pos) {
  delete prev_pos_;
  prev_pos_ = prev_pos;
  if (prev_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneNotify.prev_pos)
}

// uint32 dungeon_id = 11;
void PlayerEnterSceneNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 PlayerEnterSceneNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.dungeon_id)
  return dungeon_id_;
}
void PlayerEnterSceneNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.dungeon_id)
}

// uint32 world_level = 12;
void PlayerEnterSceneNotify::clear_world_level() {
  world_level_ = 0u;
}
::google::protobuf::uint32 PlayerEnterSceneNotify::world_level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.world_level)
  return world_level_;
}
void PlayerEnterSceneNotify::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.world_level)
}

// uint32 enter_scene_token = 13;
void PlayerEnterSceneNotify::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
::google::protobuf::uint32 PlayerEnterSceneNotify::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneNotify.enter_scene_token)
  return enter_scene_token_;
}
void PlayerEnterSceneNotify::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneNotify.enter_scene_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSceneReq::LeaveSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LeaveSceneReq)
}
LeaveSceneReq::LeaveSceneReq(const LeaveSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.LeaveSceneReq)
}

void LeaveSceneReq::SharedCtor() {
  _cached_size_ = 0;
}

LeaveSceneReq::~LeaveSceneReq() {
  // @@protoc_insertion_point(destructor:proto.LeaveSceneReq)
  SharedDtor();
}

void LeaveSceneReq::SharedDtor() {
}

void LeaveSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveSceneReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveSceneReq& LeaveSceneReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

LeaveSceneReq* LeaveSceneReq::New(::google::protobuf::Arena* arena) const {
  LeaveSceneReq* n = new LeaveSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LeaveSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LeaveSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LeaveSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LeaveSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LeaveSceneReq)
  return false;
#undef DO_
}

void LeaveSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LeaveSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LeaveSceneReq)
}

::google::protobuf::uint8* LeaveSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LeaveSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LeaveSceneReq)
  return target;
}

size_t LeaveSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LeaveSceneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LeaveSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LeaveSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LeaveSceneReq)
    MergeFrom(*source);
  }
}

void LeaveSceneReq::MergeFrom(const LeaveSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LeaveSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LeaveSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LeaveSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSceneReq::CopyFrom(const LeaveSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LeaveSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSceneReq::IsInitialized() const {
  return true;
}

void LeaveSceneReq::Swap(LeaveSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSceneReq::InternalSwap(LeaveSceneReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveSceneReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveSceneReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaveSceneRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaveSceneRsp::LeaveSceneRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LeaveSceneRsp)
}
LeaveSceneRsp::LeaveSceneRsp(const LeaveSceneRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.LeaveSceneRsp)
}

void LeaveSceneRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

LeaveSceneRsp::~LeaveSceneRsp() {
  // @@protoc_insertion_point(destructor:proto.LeaveSceneRsp)
  SharedDtor();
}

void LeaveSceneRsp::SharedDtor() {
}

void LeaveSceneRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaveSceneRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaveSceneRsp& LeaveSceneRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

LeaveSceneRsp* LeaveSceneRsp::New(::google::protobuf::Arena* arena) const {
  LeaveSceneRsp* n = new LeaveSceneRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaveSceneRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LeaveSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool LeaveSceneRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LeaveSceneRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LeaveSceneRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LeaveSceneRsp)
  return false;
#undef DO_
}

void LeaveSceneRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LeaveSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LeaveSceneRsp)
}

::google::protobuf::uint8* LeaveSceneRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LeaveSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LeaveSceneRsp)
  return target;
}

size_t LeaveSceneRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LeaveSceneRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaveSceneRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LeaveSceneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaveSceneRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaveSceneRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LeaveSceneRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LeaveSceneRsp)
    MergeFrom(*source);
  }
}

void LeaveSceneRsp::MergeFrom(const LeaveSceneRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LeaveSceneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void LeaveSceneRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LeaveSceneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaveSceneRsp::CopyFrom(const LeaveSceneRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LeaveSceneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaveSceneRsp::IsInitialized() const {
  return true;
}

void LeaveSceneRsp::Swap(LeaveSceneRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaveSceneRsp::InternalSwap(LeaveSceneRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaveSceneRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LeaveSceneRsp

// int32 retcode = 1;
void LeaveSceneRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 LeaveSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.LeaveSceneRsp.retcode)
  return retcode_;
}
void LeaveSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.LeaveSceneRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneInitFinishReq::kEnterSceneTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneInitFinishReq::SceneInitFinishReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneInitFinishReq)
}
SceneInitFinishReq::SceneInitFinishReq(const SceneInitFinishReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enter_scene_token_ = from.enter_scene_token_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneInitFinishReq)
}

void SceneInitFinishReq::SharedCtor() {
  enter_scene_token_ = 0u;
  _cached_size_ = 0;
}

SceneInitFinishReq::~SceneInitFinishReq() {
  // @@protoc_insertion_point(destructor:proto.SceneInitFinishReq)
  SharedDtor();
}

void SceneInitFinishReq::SharedDtor() {
}

void SceneInitFinishReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneInitFinishReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneInitFinishReq& SceneInitFinishReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneInitFinishReq* SceneInitFinishReq::New(::google::protobuf::Arena* arena) const {
  SceneInitFinishReq* n = new SceneInitFinishReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneInitFinishReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneInitFinishReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enter_scene_token_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneInitFinishReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneInitFinishReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 enter_scene_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enter_scene_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneInitFinishReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneInitFinishReq)
  return false;
#undef DO_
}

void SceneInitFinishReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneInitFinishReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->enter_scene_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneInitFinishReq)
}

::google::protobuf::uint8* SceneInitFinishReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneInitFinishReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->enter_scene_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneInitFinishReq)
  return target;
}

size_t SceneInitFinishReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneInitFinishReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enter_scene_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneInitFinishReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneInitFinishReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneInitFinishReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneInitFinishReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneInitFinishReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneInitFinishReq)
    MergeFrom(*source);
  }
}

void SceneInitFinishReq::MergeFrom(const SceneInitFinishReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneInitFinishReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enter_scene_token() != 0) {
    set_enter_scene_token(from.enter_scene_token());
  }
}

void SceneInitFinishReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneInitFinishReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneInitFinishReq::CopyFrom(const SceneInitFinishReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneInitFinishReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneInitFinishReq::IsInitialized() const {
  return true;
}

void SceneInitFinishReq::Swap(SceneInitFinishReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneInitFinishReq::InternalSwap(SceneInitFinishReq* other) {
  using std::swap;
  swap(enter_scene_token_, other->enter_scene_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneInitFinishReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneInitFinishReq

// uint32 enter_scene_token = 1;
void SceneInitFinishReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
::google::protobuf::uint32 SceneInitFinishReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.SceneInitFinishReq.enter_scene_token)
  return enter_scene_token_;
}
void SceneInitFinishReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneInitFinishReq.enter_scene_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneInitFinishRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneInitFinishRsp::SceneInitFinishRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneInitFinishRsp)
}
SceneInitFinishRsp::SceneInitFinishRsp(const SceneInitFinishRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneInitFinishRsp)
}

void SceneInitFinishRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SceneInitFinishRsp::~SceneInitFinishRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneInitFinishRsp)
  SharedDtor();
}

void SceneInitFinishRsp::SharedDtor() {
}

void SceneInitFinishRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneInitFinishRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneInitFinishRsp& SceneInitFinishRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneInitFinishRsp* SceneInitFinishRsp::New(::google::protobuf::Arena* arena) const {
  SceneInitFinishRsp* n = new SceneInitFinishRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneInitFinishRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneInitFinishRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SceneInitFinishRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneInitFinishRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneInitFinishRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneInitFinishRsp)
  return false;
#undef DO_
}

void SceneInitFinishRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneInitFinishRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneInitFinishRsp)
}

::google::protobuf::uint8* SceneInitFinishRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneInitFinishRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneInitFinishRsp)
  return target;
}

size_t SceneInitFinishRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneInitFinishRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneInitFinishRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneInitFinishRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneInitFinishRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneInitFinishRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneInitFinishRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneInitFinishRsp)
    MergeFrom(*source);
  }
}

void SceneInitFinishRsp::MergeFrom(const SceneInitFinishRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneInitFinishRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SceneInitFinishRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneInitFinishRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneInitFinishRsp::CopyFrom(const SceneInitFinishRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneInitFinishRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneInitFinishRsp::IsInitialized() const {
  return true;
}

void SceneInitFinishRsp::Swap(SceneInitFinishRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneInitFinishRsp::InternalSwap(SceneInitFinishRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneInitFinishRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneInitFinishRsp

// int32 retcode = 1;
void SceneInitFinishRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneInitFinishRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneInitFinishRsp.retcode)
  return retcode_;
}
void SceneInitFinishRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneInitFinishRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityAppearNotify::kEntityListFieldNumber;
const int SceneEntityAppearNotify::kAppearTypeFieldNumber;
const int SceneEntityAppearNotify::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityAppearNotify::SceneEntityAppearNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityAppearNotify)
}
SceneEntityAppearNotify::SceneEntityAppearNotify(const SceneEntityAppearNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_list_(from.entity_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appear_type_, &from.appear_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_) -
    reinterpret_cast<char*>(&appear_type_)) + sizeof(param_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityAppearNotify)
}

void SceneEntityAppearNotify::SharedCtor() {
  ::memset(&appear_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&appear_type_)) + sizeof(param_));
  _cached_size_ = 0;
}

SceneEntityAppearNotify::~SceneEntityAppearNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityAppearNotify)
  SharedDtor();
}

void SceneEntityAppearNotify::SharedDtor() {
}

void SceneEntityAppearNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityAppearNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityAppearNotify& SceneEntityAppearNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityAppearNotify* SceneEntityAppearNotify::New(::google::protobuf::Arena* arena) const {
  SceneEntityAppearNotify* n = new SceneEntityAppearNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityAppearNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityAppearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_list_.Clear();
  ::memset(&appear_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param_) -
      reinterpret_cast<char*>(&appear_type_)) + sizeof(param_));
  _internal_metadata_.Clear();
}

bool SceneEntityAppearNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityAppearNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.SceneEntityInfo entity_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entity_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VisionType appear_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_appear_type(static_cast< ::proto::VisionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityAppearNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityAppearNotify)
  return false;
#undef DO_
}

void SceneEntityAppearNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityAppearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SceneEntityInfo entity_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity_list(static_cast<int>(i)), output);
  }

  // .proto.VisionType appear_type = 2;
  if (this->appear_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->appear_type(), output);
  }

  // uint32 param = 3;
  if (this->param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityAppearNotify)
}

::google::protobuf::uint8* SceneEntityAppearNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityAppearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SceneEntityInfo entity_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entity_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.VisionType appear_type = 2;
  if (this->appear_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->appear_type(), target);
  }

  // uint32 param = 3;
  if (this->param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityAppearNotify)
  return target;
}

size_t SceneEntityAppearNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityAppearNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SceneEntityInfo entity_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entity_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity_list(static_cast<int>(i)));
    }
  }

  // .proto.VisionType appear_type = 2;
  if (this->appear_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->appear_type());
  }

  // uint32 param = 3;
  if (this->param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityAppearNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityAppearNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityAppearNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityAppearNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityAppearNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityAppearNotify)
    MergeFrom(*source);
  }
}

void SceneEntityAppearNotify::MergeFrom(const SceneEntityAppearNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityAppearNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_list_.MergeFrom(from.entity_list_);
  if (from.appear_type() != 0) {
    set_appear_type(from.appear_type());
  }
  if (from.param() != 0) {
    set_param(from.param());
  }
}

void SceneEntityAppearNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityAppearNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityAppearNotify::CopyFrom(const SceneEntityAppearNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityAppearNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityAppearNotify::IsInitialized() const {
  return true;
}

void SceneEntityAppearNotify::Swap(SceneEntityAppearNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityAppearNotify::InternalSwap(SceneEntityAppearNotify* other) {
  using std::swap;
  entity_list_.InternalSwap(&other->entity_list_);
  swap(appear_type_, other->appear_type_);
  swap(param_, other->param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityAppearNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityAppearNotify

// repeated .proto.SceneEntityInfo entity_list = 1;
int SceneEntityAppearNotify::entity_list_size() const {
  return entity_list_.size();
}
void SceneEntityAppearNotify::clear_entity_list() {
  entity_list_.Clear();
}
const ::proto::SceneEntityInfo& SceneEntityAppearNotify::entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Get(index);
}
::proto::SceneEntityInfo* SceneEntityAppearNotify::mutable_entity_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Mutable(index);
}
::proto::SceneEntityInfo* SceneEntityAppearNotify::add_entity_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >*
SceneEntityAppearNotify::mutable_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityAppearNotify.entity_list)
  return &entity_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneEntityInfo >&
SceneEntityAppearNotify::entity_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityAppearNotify.entity_list)
  return entity_list_;
}

// .proto.VisionType appear_type = 2;
void SceneEntityAppearNotify::clear_appear_type() {
  appear_type_ = 0;
}
::proto::VisionType SceneEntityAppearNotify::appear_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.appear_type)
  return static_cast< ::proto::VisionType >(appear_type_);
}
void SceneEntityAppearNotify::set_appear_type(::proto::VisionType value) {
  
  appear_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAppearNotify.appear_type)
}

// uint32 param = 3;
void SceneEntityAppearNotify::clear_param() {
  param_ = 0u;
}
::google::protobuf::uint32 SceneEntityAppearNotify::param() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityAppearNotify.param)
  return param_;
}
void SceneEntityAppearNotify::set_param(::google::protobuf::uint32 value) {
  
  param_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityAppearNotify.param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityDisappearNotify::kEntityListFieldNumber;
const int SceneEntityDisappearNotify::kDisappearTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityDisappearNotify::SceneEntityDisappearNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityDisappearNotify)
}
SceneEntityDisappearNotify::SceneEntityDisappearNotify(const SceneEntityDisappearNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_list_(from.entity_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  disappear_type_ = from.disappear_type_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityDisappearNotify)
}

void SceneEntityDisappearNotify::SharedCtor() {
  disappear_type_ = 0;
  _cached_size_ = 0;
}

SceneEntityDisappearNotify::~SceneEntityDisappearNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityDisappearNotify)
  SharedDtor();
}

void SceneEntityDisappearNotify::SharedDtor() {
}

void SceneEntityDisappearNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityDisappearNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityDisappearNotify& SceneEntityDisappearNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityDisappearNotify* SceneEntityDisappearNotify::New(::google::protobuf::Arena* arena) const {
  SceneEntityDisappearNotify* n = new SceneEntityDisappearNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityDisappearNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityDisappearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_list_.Clear();
  disappear_type_ = 0;
  _internal_metadata_.Clear();
}

bool SceneEntityDisappearNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityDisappearNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 entity_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_entity_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_entity_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.VisionType disappear_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_disappear_type(static_cast< ::proto::VisionType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityDisappearNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityDisappearNotify)
  return false;
#undef DO_
}

void SceneEntityDisappearNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityDisappearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 entity_list = 1;
  if (this->entity_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _entity_list_cached_byte_size_));
  }
  for (int i = 0, n = this->entity_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->entity_list(i), output);
  }

  // .proto.VisionType disappear_type = 2;
  if (this->disappear_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->disappear_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityDisappearNotify)
}

::google::protobuf::uint8* SceneEntityDisappearNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityDisappearNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 entity_list = 1;
  if (this->entity_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _entity_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->entity_list_, target);
  }

  // .proto.VisionType disappear_type = 2;
  if (this->disappear_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->disappear_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityDisappearNotify)
  return target;
}

size_t SceneEntityDisappearNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityDisappearNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 entity_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->entity_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _entity_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.VisionType disappear_type = 2;
  if (this->disappear_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->disappear_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityDisappearNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityDisappearNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityDisappearNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityDisappearNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityDisappearNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityDisappearNotify)
    MergeFrom(*source);
  }
}

void SceneEntityDisappearNotify::MergeFrom(const SceneEntityDisappearNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityDisappearNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_list_.MergeFrom(from.entity_list_);
  if (from.disappear_type() != 0) {
    set_disappear_type(from.disappear_type());
  }
}

void SceneEntityDisappearNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityDisappearNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityDisappearNotify::CopyFrom(const SceneEntityDisappearNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityDisappearNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityDisappearNotify::IsInitialized() const {
  return true;
}

void SceneEntityDisappearNotify::Swap(SceneEntityDisappearNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityDisappearNotify::InternalSwap(SceneEntityDisappearNotify* other) {
  using std::swap;
  entity_list_.InternalSwap(&other->entity_list_);
  swap(disappear_type_, other->disappear_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityDisappearNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityDisappearNotify

// repeated uint32 entity_list = 1;
int SceneEntityDisappearNotify::entity_list_size() const {
  return entity_list_.size();
}
void SceneEntityDisappearNotify::clear_entity_list() {
  entity_list_.Clear();
}
::google::protobuf::uint32 SceneEntityDisappearNotify::entity_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDisappearNotify.entity_list)
  return entity_list_.Get(index);
}
void SceneEntityDisappearNotify::set_entity_list(int index, ::google::protobuf::uint32 value) {
  entity_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneEntityDisappearNotify.entity_list)
}
void SceneEntityDisappearNotify::add_entity_list(::google::protobuf::uint32 value) {
  entity_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneEntityDisappearNotify.entity_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneEntityDisappearNotify::entity_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntityDisappearNotify.entity_list)
  return entity_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneEntityDisappearNotify::mutable_entity_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntityDisappearNotify.entity_list)
  return &entity_list_;
}

// .proto.VisionType disappear_type = 2;
void SceneEntityDisappearNotify::clear_disappear_type() {
  disappear_type_ = 0;
}
::proto::VisionType SceneEntityDisappearNotify::disappear_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDisappearNotify.disappear_type)
  return static_cast< ::proto::VisionType >(disappear_type_);
}
void SceneEntityDisappearNotify::set_disappear_type(::proto::VisionType value) {
  
  disappear_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDisappearNotify.disappear_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityMoveReq::kEntityIdFieldNumber;
const int SceneEntityMoveReq::kMotionInfoFieldNumber;
const int SceneEntityMoveReq::kSceneTimeFieldNumber;
const int SceneEntityMoveReq::kReliableSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityMoveReq::SceneEntityMoveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityMoveReq)
}
SceneEntityMoveReq::SceneEntityMoveReq(const SceneEntityMoveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_motion_info()) {
    motion_info_ = new ::proto::MotionInfo(*from.motion_info_);
  } else {
    motion_info_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reliable_seq_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(reliable_seq_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityMoveReq)
}

void SceneEntityMoveReq::SharedCtor() {
  ::memset(&motion_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&motion_info_)) + sizeof(reliable_seq_));
  _cached_size_ = 0;
}

SceneEntityMoveReq::~SceneEntityMoveReq() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityMoveReq)
  SharedDtor();
}

void SceneEntityMoveReq::SharedDtor() {
  if (this != internal_default_instance()) delete motion_info_;
}

void SceneEntityMoveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityMoveReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityMoveReq& SceneEntityMoveReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityMoveReq* SceneEntityMoveReq::New(::google::protobuf::Arena* arena) const {
  SceneEntityMoveReq* n = new SceneEntityMoveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityMoveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityMoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) {
    delete motion_info_;
  }
  motion_info_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(reliable_seq_));
  _internal_metadata_.Clear();
}

bool SceneEntityMoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityMoveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionInfo motion_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_motion_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reliable_seq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reliable_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityMoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityMoveReq)
  return false;
#undef DO_
}

void SceneEntityMoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityMoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->motion_info_, output);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_time(), output);
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->reliable_seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityMoveReq)
}

::google::protobuf::uint8* SceneEntityMoveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityMoveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->motion_info_, deterministic, target);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_time(), target);
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->reliable_seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityMoveReq)
  return target;
}

size_t SceneEntityMoveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityMoveReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->motion_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reliable_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityMoveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityMoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityMoveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityMoveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityMoveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityMoveReq)
    MergeFrom(*source);
  }
}

void SceneEntityMoveReq::MergeFrom(const SceneEntityMoveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityMoveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_motion_info()) {
    mutable_motion_info()->::proto::MotionInfo::MergeFrom(from.motion_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
  if (from.reliable_seq() != 0) {
    set_reliable_seq(from.reliable_seq());
  }
}

void SceneEntityMoveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityMoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityMoveReq::CopyFrom(const SceneEntityMoveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityMoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityMoveReq::IsInitialized() const {
  return true;
}

void SceneEntityMoveReq::Swap(SceneEntityMoveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityMoveReq::InternalSwap(SceneEntityMoveReq* other) {
  using std::swap;
  swap(motion_info_, other->motion_info_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  swap(reliable_seq_, other->reliable_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityMoveReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityMoveReq

// uint32 entity_id = 1;
void SceneEntityMoveReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.entity_id)
  return entity_id_;
}
void SceneEntityMoveReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.entity_id)
}

// .proto.MotionInfo motion_info = 2;
bool SceneEntityMoveReq::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
void SceneEntityMoveReq::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
const ::proto::MotionInfo& SceneEntityMoveReq::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
::proto::MotionInfo* SceneEntityMoveReq::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveReq.motion_info)
  return motion_info_;
}
::proto::MotionInfo* SceneEntityMoveReq::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveReq.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
void SceneEntityMoveReq::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveReq.motion_info)
}

// uint32 scene_time = 3;
void SceneEntityMoveReq::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveReq::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.scene_time)
  return scene_time_;
}
void SceneEntityMoveReq::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.scene_time)
}

// uint32 reliable_seq = 4;
void SceneEntityMoveReq::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveReq::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveReq.reliable_seq)
  return reliable_seq_;
}
void SceneEntityMoveReq::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveReq.reliable_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityMoveRsp::kRetcodeFieldNumber;
const int SceneEntityMoveRsp::kEntityIdFieldNumber;
const int SceneEntityMoveRsp::kFailMotionFieldNumber;
const int SceneEntityMoveRsp::kSceneTimeFieldNumber;
const int SceneEntityMoveRsp::kReliableSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityMoveRsp::SceneEntityMoveRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityMoveRsp)
}
SceneEntityMoveRsp::SceneEntityMoveRsp(const SceneEntityMoveRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fail_motion()) {
    fail_motion_ = new ::proto::MotionInfo(*from.fail_motion_);
  } else {
    fail_motion_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&reliable_seq_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(reliable_seq_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityMoveRsp)
}

void SceneEntityMoveRsp::SharedCtor() {
  ::memset(&fail_motion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&fail_motion_)) + sizeof(reliable_seq_));
  _cached_size_ = 0;
}

SceneEntityMoveRsp::~SceneEntityMoveRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityMoveRsp)
  SharedDtor();
}

void SceneEntityMoveRsp::SharedDtor() {
  if (this != internal_default_instance()) delete fail_motion_;
}

void SceneEntityMoveRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityMoveRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityMoveRsp& SceneEntityMoveRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityMoveRsp* SceneEntityMoveRsp::New(::google::protobuf::Arena* arena) const {
  SceneEntityMoveRsp* n = new SceneEntityMoveRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityMoveRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityMoveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) {
    delete fail_motion_;
  }
  fail_motion_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reliable_seq_));
  _internal_metadata_.Clear();
}

bool SceneEntityMoveRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityMoveRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionInfo fail_motion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fail_motion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reliable_seq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reliable_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityMoveRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityMoveRsp)
  return false;
#undef DO_
}

void SceneEntityMoveRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityMoveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fail_motion_, output);
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scene_time(), output);
  }

  // uint32 reliable_seq = 5;
  if (this->reliable_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->reliable_seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityMoveRsp)
}

::google::protobuf::uint8* SceneEntityMoveRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityMoveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->fail_motion_, deterministic, target);
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scene_time(), target);
  }

  // uint32 reliable_seq = 5;
  if (this->reliable_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->reliable_seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityMoveRsp)
  return target;
}

size_t SceneEntityMoveRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityMoveRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fail_motion_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  // uint32 reliable_seq = 5;
  if (this->reliable_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reliable_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityMoveRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityMoveRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityMoveRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityMoveRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityMoveRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityMoveRsp)
    MergeFrom(*source);
  }
}

void SceneEntityMoveRsp::MergeFrom(const SceneEntityMoveRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityMoveRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fail_motion()) {
    mutable_fail_motion()->::proto::MotionInfo::MergeFrom(from.fail_motion());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
  if (from.reliable_seq() != 0) {
    set_reliable_seq(from.reliable_seq());
  }
}

void SceneEntityMoveRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityMoveRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityMoveRsp::CopyFrom(const SceneEntityMoveRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityMoveRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityMoveRsp::IsInitialized() const {
  return true;
}

void SceneEntityMoveRsp::Swap(SceneEntityMoveRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityMoveRsp::InternalSwap(SceneEntityMoveRsp* other) {
  using std::swap;
  swap(fail_motion_, other->fail_motion_);
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  swap(reliable_seq_, other->reliable_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityMoveRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityMoveRsp

// int32 retcode = 1;
void SceneEntityMoveRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneEntityMoveRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.retcode)
  return retcode_;
}
void SceneEntityMoveRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.retcode)
}

// uint32 entity_id = 2;
void SceneEntityMoveRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.entity_id)
  return entity_id_;
}
void SceneEntityMoveRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.entity_id)
}

// .proto.MotionInfo fail_motion = 3;
bool SceneEntityMoveRsp::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
void SceneEntityMoveRsp::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
const ::proto::MotionInfo& SceneEntityMoveRsp::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
::proto::MotionInfo* SceneEntityMoveRsp::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveRsp.fail_motion)
  return fail_motion_;
}
::proto::MotionInfo* SceneEntityMoveRsp::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveRsp.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
void SceneEntityMoveRsp::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveRsp.fail_motion)
}

// uint32 scene_time = 4;
void SceneEntityMoveRsp::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveRsp::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.scene_time)
  return scene_time_;
}
void SceneEntityMoveRsp::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.scene_time)
}

// uint32 reliable_seq = 5;
void SceneEntityMoveRsp::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveRsp::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveRsp.reliable_seq)
  return reliable_seq_;
}
void SceneEntityMoveRsp::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveRsp.reliable_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneAvatarStaminaStepReq::kUseClientRotFieldNumber;
const int SceneAvatarStaminaStepReq::kRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAvatarStaminaStepReq::SceneAvatarStaminaStepReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAvatarStaminaStepReq)
}
SceneAvatarStaminaStepReq::SceneAvatarStaminaStepReq(const SceneAvatarStaminaStepReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  use_client_rot_ = from.use_client_rot_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneAvatarStaminaStepReq)
}

void SceneAvatarStaminaStepReq::SharedCtor() {
  ::memset(&rot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_client_rot_) -
      reinterpret_cast<char*>(&rot_)) + sizeof(use_client_rot_));
  _cached_size_ = 0;
}

SceneAvatarStaminaStepReq::~SceneAvatarStaminaStepReq() {
  // @@protoc_insertion_point(destructor:proto.SceneAvatarStaminaStepReq)
  SharedDtor();
}

void SceneAvatarStaminaStepReq::SharedDtor() {
  if (this != internal_default_instance()) delete rot_;
}

void SceneAvatarStaminaStepReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAvatarStaminaStepReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAvatarStaminaStepReq& SceneAvatarStaminaStepReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAvatarStaminaStepReq* SceneAvatarStaminaStepReq::New(::google::protobuf::Arena* arena) const {
  SceneAvatarStaminaStepReq* n = new SceneAvatarStaminaStepReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAvatarStaminaStepReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAvatarStaminaStepReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  use_client_rot_ = false;
  _internal_metadata_.Clear();
}

bool SceneAvatarStaminaStepReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAvatarStaminaStepReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool use_client_rot = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_client_rot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAvatarStaminaStepReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAvatarStaminaStepReq)
  return false;
#undef DO_
}

void SceneAvatarStaminaStepReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAvatarStaminaStepReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_client_rot = 1;
  if (this->use_client_rot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->use_client_rot(), output);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAvatarStaminaStepReq)
}

::google::protobuf::uint8* SceneAvatarStaminaStepReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAvatarStaminaStepReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool use_client_rot = 1;
  if (this->use_client_rot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->use_client_rot(), target);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAvatarStaminaStepReq)
  return target;
}

size_t SceneAvatarStaminaStepReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAvatarStaminaStepReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // bool use_client_rot = 1;
  if (this->use_client_rot() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAvatarStaminaStepReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAvatarStaminaStepReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAvatarStaminaStepReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAvatarStaminaStepReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAvatarStaminaStepReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAvatarStaminaStepReq)
    MergeFrom(*source);
  }
}

void SceneAvatarStaminaStepReq::MergeFrom(const SceneAvatarStaminaStepReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAvatarStaminaStepReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.use_client_rot() != 0) {
    set_use_client_rot(from.use_client_rot());
  }
}

void SceneAvatarStaminaStepReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAvatarStaminaStepReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAvatarStaminaStepReq::CopyFrom(const SceneAvatarStaminaStepReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAvatarStaminaStepReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAvatarStaminaStepReq::IsInitialized() const {
  return true;
}

void SceneAvatarStaminaStepReq::Swap(SceneAvatarStaminaStepReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAvatarStaminaStepReq::InternalSwap(SceneAvatarStaminaStepReq* other) {
  using std::swap;
  swap(rot_, other->rot_);
  swap(use_client_rot_, other->use_client_rot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAvatarStaminaStepReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAvatarStaminaStepReq

// bool use_client_rot = 1;
void SceneAvatarStaminaStepReq::clear_use_client_rot() {
  use_client_rot_ = false;
}
bool SceneAvatarStaminaStepReq::use_client_rot() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepReq.use_client_rot)
  return use_client_rot_;
}
void SceneAvatarStaminaStepReq::set_use_client_rot(bool value) {
  
  use_client_rot_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepReq.use_client_rot)
}

// .proto.Vector rot = 2;
bool SceneAvatarStaminaStepReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void SceneAvatarStaminaStepReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& SceneAvatarStaminaStepReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* SceneAvatarStaminaStepReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarStaminaStepReq.rot)
  return rot_;
}
::proto::Vector* SceneAvatarStaminaStepReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarStaminaStepReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void SceneAvatarStaminaStepReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarStaminaStepReq.rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneAvatarStaminaStepRsp::kRetcodeFieldNumber;
const int SceneAvatarStaminaStepRsp::kUseClientRotFieldNumber;
const int SceneAvatarStaminaStepRsp::kRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAvatarStaminaStepRsp::SceneAvatarStaminaStepRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAvatarStaminaStepRsp)
}
SceneAvatarStaminaStepRsp::SceneAvatarStaminaStepRsp(const SceneAvatarStaminaStepRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_client_rot_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(use_client_rot_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneAvatarStaminaStepRsp)
}

void SceneAvatarStaminaStepRsp::SharedCtor() {
  ::memset(&rot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_client_rot_) -
      reinterpret_cast<char*>(&rot_)) + sizeof(use_client_rot_));
  _cached_size_ = 0;
}

SceneAvatarStaminaStepRsp::~SceneAvatarStaminaStepRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneAvatarStaminaStepRsp)
  SharedDtor();
}

void SceneAvatarStaminaStepRsp::SharedDtor() {
  if (this != internal_default_instance()) delete rot_;
}

void SceneAvatarStaminaStepRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAvatarStaminaStepRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAvatarStaminaStepRsp& SceneAvatarStaminaStepRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAvatarStaminaStepRsp* SceneAvatarStaminaStepRsp::New(::google::protobuf::Arena* arena) const {
  SceneAvatarStaminaStepRsp* n = new SceneAvatarStaminaStepRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAvatarStaminaStepRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAvatarStaminaStepRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_client_rot_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(use_client_rot_));
  _internal_metadata_.Clear();
}

bool SceneAvatarStaminaStepRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAvatarStaminaStepRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_client_rot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_client_rot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAvatarStaminaStepRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAvatarStaminaStepRsp)
  return false;
#undef DO_
}

void SceneAvatarStaminaStepRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAvatarStaminaStepRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // bool use_client_rot = 2;
  if (this->use_client_rot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_client_rot(), output);
  }

  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAvatarStaminaStepRsp)
}

::google::protobuf::uint8* SceneAvatarStaminaStepRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAvatarStaminaStepRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // bool use_client_rot = 2;
  if (this->use_client_rot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->use_client_rot(), target);
  }

  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAvatarStaminaStepRsp)
  return target;
}

size_t SceneAvatarStaminaStepRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAvatarStaminaStepRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool use_client_rot = 2;
  if (this->use_client_rot() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAvatarStaminaStepRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAvatarStaminaStepRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAvatarStaminaStepRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAvatarStaminaStepRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAvatarStaminaStepRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAvatarStaminaStepRsp)
    MergeFrom(*source);
  }
}

void SceneAvatarStaminaStepRsp::MergeFrom(const SceneAvatarStaminaStepRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAvatarStaminaStepRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.use_client_rot() != 0) {
    set_use_client_rot(from.use_client_rot());
  }
}

void SceneAvatarStaminaStepRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAvatarStaminaStepRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAvatarStaminaStepRsp::CopyFrom(const SceneAvatarStaminaStepRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAvatarStaminaStepRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAvatarStaminaStepRsp::IsInitialized() const {
  return true;
}

void SceneAvatarStaminaStepRsp::Swap(SceneAvatarStaminaStepRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAvatarStaminaStepRsp::InternalSwap(SceneAvatarStaminaStepRsp* other) {
  using std::swap;
  swap(rot_, other->rot_);
  swap(retcode_, other->retcode_);
  swap(use_client_rot_, other->use_client_rot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAvatarStaminaStepRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAvatarStaminaStepRsp

// int32 retcode = 1;
void SceneAvatarStaminaStepRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneAvatarStaminaStepRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.retcode)
  return retcode_;
}
void SceneAvatarStaminaStepRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepRsp.retcode)
}

// bool use_client_rot = 2;
void SceneAvatarStaminaStepRsp::clear_use_client_rot() {
  use_client_rot_ = false;
}
bool SceneAvatarStaminaStepRsp::use_client_rot() const {
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.use_client_rot)
  return use_client_rot_;
}
void SceneAvatarStaminaStepRsp::set_use_client_rot(bool value) {
  
  use_client_rot_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAvatarStaminaStepRsp.use_client_rot)
}

// .proto.Vector rot = 3;
bool SceneAvatarStaminaStepRsp::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void SceneAvatarStaminaStepRsp::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& SceneAvatarStaminaStepRsp::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.SceneAvatarStaminaStepRsp.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* SceneAvatarStaminaStepRsp::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneAvatarStaminaStepRsp.rot)
  return rot_;
}
::proto::Vector* SceneAvatarStaminaStepRsp::release_rot() {
  // @@protoc_insertion_point(field_release:proto.SceneAvatarStaminaStepRsp.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void SceneAvatarStaminaStepRsp::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneAvatarStaminaStepRsp.rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityMoveNotify::kEntityIdFieldNumber;
const int SceneEntityMoveNotify::kMotionInfoFieldNumber;
const int SceneEntityMoveNotify::kSceneTimeFieldNumber;
const int SceneEntityMoveNotify::kReliableSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityMoveNotify::SceneEntityMoveNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityMoveNotify)
}
SceneEntityMoveNotify::SceneEntityMoveNotify(const SceneEntityMoveNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_motion_info()) {
    motion_info_ = new ::proto::MotionInfo(*from.motion_info_);
  } else {
    motion_info_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reliable_seq_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(reliable_seq_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityMoveNotify)
}

void SceneEntityMoveNotify::SharedCtor() {
  ::memset(&motion_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&motion_info_)) + sizeof(reliable_seq_));
  _cached_size_ = 0;
}

SceneEntityMoveNotify::~SceneEntityMoveNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityMoveNotify)
  SharedDtor();
}

void SceneEntityMoveNotify::SharedDtor() {
  if (this != internal_default_instance()) delete motion_info_;
}

void SceneEntityMoveNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityMoveNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityMoveNotify& SceneEntityMoveNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityMoveNotify* SceneEntityMoveNotify::New(::google::protobuf::Arena* arena) const {
  SceneEntityMoveNotify* n = new SceneEntityMoveNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityMoveNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) {
    delete motion_info_;
  }
  motion_info_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(reliable_seq_));
  _internal_metadata_.Clear();
}

bool SceneEntityMoveNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityMoveNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionInfo motion_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_motion_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reliable_seq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reliable_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityMoveNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityMoveNotify)
  return false;
#undef DO_
}

void SceneEntityMoveNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->motion_info_, output);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_time(), output);
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->reliable_seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityMoveNotify)
}

::google::protobuf::uint8* SceneEntityMoveNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityMoveNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->motion_info_, deterministic, target);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_time(), target);
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->reliable_seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityMoveNotify)
  return target;
}

size_t SceneEntityMoveNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityMoveNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->motion_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reliable_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityMoveNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityMoveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityMoveNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityMoveNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityMoveNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityMoveNotify)
    MergeFrom(*source);
  }
}

void SceneEntityMoveNotify::MergeFrom(const SceneEntityMoveNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityMoveNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_motion_info()) {
    mutable_motion_info()->::proto::MotionInfo::MergeFrom(from.motion_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
  if (from.reliable_seq() != 0) {
    set_reliable_seq(from.reliable_seq());
  }
}

void SceneEntityMoveNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityMoveNotify::CopyFrom(const SceneEntityMoveNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityMoveNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityMoveNotify::IsInitialized() const {
  return true;
}

void SceneEntityMoveNotify::Swap(SceneEntityMoveNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityMoveNotify::InternalSwap(SceneEntityMoveNotify* other) {
  using std::swap;
  swap(motion_info_, other->motion_info_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  swap(reliable_seq_, other->reliable_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityMoveNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityMoveNotify

// uint32 entity_id = 1;
void SceneEntityMoveNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.entity_id)
  return entity_id_;
}
void SceneEntityMoveNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.entity_id)
}

// .proto.MotionInfo motion_info = 2;
bool SceneEntityMoveNotify::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
void SceneEntityMoveNotify::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
const ::proto::MotionInfo& SceneEntityMoveNotify::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
::proto::MotionInfo* SceneEntityMoveNotify::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneEntityMoveNotify.motion_info)
  return motion_info_;
}
::proto::MotionInfo* SceneEntityMoveNotify::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.SceneEntityMoveNotify.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
void SceneEntityMoveNotify::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneEntityMoveNotify.motion_info)
}

// uint32 scene_time = 3;
void SceneEntityMoveNotify::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.scene_time)
  return scene_time_;
}
void SceneEntityMoveNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.scene_time)
}

// uint32 reliable_seq = 4;
void SceneEntityMoveNotify::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
::google::protobuf::uint32 SceneEntityMoveNotify::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityMoveNotify.reliable_seq)
  return reliable_seq_;
}
void SceneEntityMoveNotify::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityMoveNotify.reliable_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenePlayerLocationNotify::kSceneIdFieldNumber;
const int ScenePlayerLocationNotify::kPlayerLocListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenePlayerLocationNotify::ScenePlayerLocationNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ScenePlayerLocationNotify)
}
ScenePlayerLocationNotify::ScenePlayerLocationNotify(const ScenePlayerLocationNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_loc_list_(from.player_loc_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ScenePlayerLocationNotify)
}

void ScenePlayerLocationNotify::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

ScenePlayerLocationNotify::~ScenePlayerLocationNotify() {
  // @@protoc_insertion_point(destructor:proto.ScenePlayerLocationNotify)
  SharedDtor();
}

void ScenePlayerLocationNotify::SharedDtor() {
}

void ScenePlayerLocationNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScenePlayerLocationNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScenePlayerLocationNotify& ScenePlayerLocationNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScenePlayerLocationNotify* ScenePlayerLocationNotify::New(::google::protobuf::Arena* arena) const {
  ScenePlayerLocationNotify* n = new ScenePlayerLocationNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScenePlayerLocationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ScenePlayerLocationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_loc_list_.Clear();
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ScenePlayerLocationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ScenePlayerLocationNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.PlayerLocationInfo player_loc_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_loc_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ScenePlayerLocationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ScenePlayerLocationNotify)
  return false;
#undef DO_
}

void ScenePlayerLocationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ScenePlayerLocationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // repeated .proto.PlayerLocationInfo player_loc_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_loc_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->player_loc_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ScenePlayerLocationNotify)
}

::google::protobuf::uint8* ScenePlayerLocationNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ScenePlayerLocationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // repeated .proto.PlayerLocationInfo player_loc_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_loc_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->player_loc_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ScenePlayerLocationNotify)
  return target;
}

size_t ScenePlayerLocationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ScenePlayerLocationNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PlayerLocationInfo player_loc_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->player_loc_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_loc_list(static_cast<int>(i)));
    }
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScenePlayerLocationNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ScenePlayerLocationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenePlayerLocationNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScenePlayerLocationNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ScenePlayerLocationNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ScenePlayerLocationNotify)
    MergeFrom(*source);
  }
}

void ScenePlayerLocationNotify::MergeFrom(const ScenePlayerLocationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ScenePlayerLocationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_loc_list_.MergeFrom(from.player_loc_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ScenePlayerLocationNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ScenePlayerLocationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenePlayerLocationNotify::CopyFrom(const ScenePlayerLocationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ScenePlayerLocationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenePlayerLocationNotify::IsInitialized() const {
  return true;
}

void ScenePlayerLocationNotify::Swap(ScenePlayerLocationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenePlayerLocationNotify::InternalSwap(ScenePlayerLocationNotify* other) {
  using std::swap;
  player_loc_list_.InternalSwap(&other->player_loc_list_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScenePlayerLocationNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScenePlayerLocationNotify

// uint32 scene_id = 1;
void ScenePlayerLocationNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ScenePlayerLocationNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationNotify.scene_id)
  return scene_id_;
}
void ScenePlayerLocationNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerLocationNotify.scene_id)
}

// repeated .proto.PlayerLocationInfo player_loc_list = 2;
int ScenePlayerLocationNotify::player_loc_list_size() const {
  return player_loc_list_.size();
}
void ScenePlayerLocationNotify::clear_player_loc_list() {
  player_loc_list_.Clear();
}
const ::proto::PlayerLocationInfo& ScenePlayerLocationNotify::player_loc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Get(index);
}
::proto::PlayerLocationInfo* ScenePlayerLocationNotify::mutable_player_loc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Mutable(index);
}
::proto::PlayerLocationInfo* ScenePlayerLocationNotify::add_player_loc_list() {
  // @@protoc_insertion_point(field_add:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
ScenePlayerLocationNotify::mutable_player_loc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePlayerLocationNotify.player_loc_list)
  return &player_loc_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
ScenePlayerLocationNotify::player_loc_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePlayerLocationNotify.player_loc_list)
  return player_loc_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetScenePointReq::kSceneIdFieldNumber;
const int GetScenePointReq::kBelongUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetScenePointReq::GetScenePointReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetScenePointReq)
}
GetScenePointReq::GetScenePointReq(const GetScenePointReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&belong_uid_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(belong_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.GetScenePointReq)
}

void GetScenePointReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&belong_uid_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(belong_uid_));
  _cached_size_ = 0;
}

GetScenePointReq::~GetScenePointReq() {
  // @@protoc_insertion_point(destructor:proto.GetScenePointReq)
  SharedDtor();
}

void GetScenePointReq::SharedDtor() {
}

void GetScenePointReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetScenePointReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetScenePointReq& GetScenePointReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetScenePointReq* GetScenePointReq::New(::google::protobuf::Arena* arena) const {
  GetScenePointReq* n = new GetScenePointReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetScenePointReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetScenePointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&belong_uid_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(belong_uid_));
  _internal_metadata_.Clear();
}

bool GetScenePointReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetScenePointReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 belong_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &belong_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetScenePointReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetScenePointReq)
  return false;
#undef DO_
}

void GetScenePointReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetScenePointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 belong_uid = 2;
  if (this->belong_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->belong_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetScenePointReq)
}

::google::protobuf::uint8* GetScenePointReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetScenePointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 belong_uid = 2;
  if (this->belong_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->belong_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetScenePointReq)
  return target;
}

size_t GetScenePointReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetScenePointReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 belong_uid = 2;
  if (this->belong_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->belong_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetScenePointReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetScenePointReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetScenePointReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetScenePointReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetScenePointReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetScenePointReq)
    MergeFrom(*source);
  }
}

void GetScenePointReq::MergeFrom(const GetScenePointReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetScenePointReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.belong_uid() != 0) {
    set_belong_uid(from.belong_uid());
  }
}

void GetScenePointReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetScenePointReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScenePointReq::CopyFrom(const GetScenePointReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetScenePointReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScenePointReq::IsInitialized() const {
  return true;
}

void GetScenePointReq::Swap(GetScenePointReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetScenePointReq::InternalSwap(GetScenePointReq* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(belong_uid_, other->belong_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetScenePointReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetScenePointReq

// uint32 scene_id = 1;
void GetScenePointReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 GetScenePointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointReq.scene_id)
  return scene_id_;
}
void GetScenePointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointReq.scene_id)
}

// uint32 belong_uid = 2;
void GetScenePointReq::clear_belong_uid() {
  belong_uid_ = 0u;
}
::google::protobuf::uint32 GetScenePointReq::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointReq.belong_uid)
  return belong_uid_;
}
void GetScenePointReq::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointReq.belong_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CityInfo::kCityIdFieldNumber;
const int CityInfo::kLevelFieldNumber;
const int CityInfo::kCrystalNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CityInfo::CityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CityInfo)
}
CityInfo::CityInfo(const CityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&city_id_, &from.city_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&crystal_num_) -
    reinterpret_cast<char*>(&city_id_)) + sizeof(crystal_num_));
  // @@protoc_insertion_point(copy_constructor:proto.CityInfo)
}

void CityInfo::SharedCtor() {
  ::memset(&city_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crystal_num_) -
      reinterpret_cast<char*>(&city_id_)) + sizeof(crystal_num_));
  _cached_size_ = 0;
}

CityInfo::~CityInfo() {
  // @@protoc_insertion_point(destructor:proto.CityInfo)
  SharedDtor();
}

void CityInfo::SharedDtor() {
}

void CityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CityInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CityInfo& CityInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

CityInfo* CityInfo::New(::google::protobuf::Arena* arena) const {
  CityInfo* n = new CityInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&city_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&crystal_num_) -
      reinterpret_cast<char*>(&city_id_)) + sizeof(crystal_num_));
  _internal_metadata_.Clear();
}

bool CityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 city_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &city_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 crystal_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crystal_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CityInfo)
  return false;
#undef DO_
}

void CityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 city_id = 1;
  if (this->city_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->city_id(), output);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // uint32 crystal_num = 3;
  if (this->crystal_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->crystal_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CityInfo)
}

::google::protobuf::uint8* CityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 city_id = 1;
  if (this->city_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->city_id(), target);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // uint32 crystal_num = 3;
  if (this->crystal_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->crystal_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CityInfo)
  return target;
}

size_t CityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CityInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 city_id = 1;
  if (this->city_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->city_id());
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 crystal_num = 3;
  if (this->crystal_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crystal_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CityInfo)
    MergeFrom(*source);
  }
}

void CityInfo::MergeFrom(const CityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.city_id() != 0) {
    set_city_id(from.city_id());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.crystal_num() != 0) {
    set_crystal_num(from.crystal_num());
  }
}

void CityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CityInfo::CopyFrom(const CityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CityInfo::IsInitialized() const {
  return true;
}

void CityInfo::Swap(CityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CityInfo::InternalSwap(CityInfo* other) {
  using std::swap;
  swap(city_id_, other->city_id_);
  swap(level_, other->level_);
  swap(crystal_num_, other->crystal_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CityInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CityInfo

// uint32 city_id = 1;
void CityInfo::clear_city_id() {
  city_id_ = 0u;
}
::google::protobuf::uint32 CityInfo::city_id() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.city_id)
  return city_id_;
}
void CityInfo::set_city_id(::google::protobuf::uint32 value) {
  
  city_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.city_id)
}

// uint32 level = 2;
void CityInfo::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 CityInfo::level() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.level)
  return level_;
}
void CityInfo::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.level)
}

// uint32 crystal_num = 3;
void CityInfo::clear_crystal_num() {
  crystal_num_ = 0u;
}
::google::protobuf::uint32 CityInfo::crystal_num() const {
  // @@protoc_insertion_point(field_get:proto.CityInfo.crystal_num)
  return crystal_num_;
}
void CityInfo::set_crystal_num(::google::protobuf::uint32 value) {
  
  crystal_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CityInfo.crystal_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetScenePointRsp::kRetcodeFieldNumber;
const int GetScenePointRsp::kSceneIdFieldNumber;
const int GetScenePointRsp::kUnlockedPointListFieldNumber;
const int GetScenePointRsp::kBelongUidFieldNumber;
const int GetScenePointRsp::kUnlockAreaListFieldNumber;
const int GetScenePointRsp::kLockedPointListFieldNumber;
const int GetScenePointRsp::kToBeExploreDungeonEntryListFieldNumber;
const int GetScenePointRsp::kNotExploredDungeonEntryListFieldNumber;
const int GetScenePointRsp::kGroupUnlimitPointListFieldNumber;
const int GetScenePointRsp::kUnlockedFogLevel1AreaListFieldNumber;
const int GetScenePointRsp::kUnlokcedFogLevel2AreaListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetScenePointRsp::GetScenePointRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetScenePointRsp)
}
GetScenePointRsp::GetScenePointRsp(const GetScenePointRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlocked_point_list_(from.unlocked_point_list_),
      unlock_area_list_(from.unlock_area_list_),
      locked_point_list_(from.locked_point_list_),
      to_be_explore_dungeon_entry_list_(from.to_be_explore_dungeon_entry_list_),
      not_explored_dungeon_entry_list_(from.not_explored_dungeon_entry_list_),
      group_unlimit_point_list_(from.group_unlimit_point_list_),
      unlocked_fog_level_1_area_list_(from.unlocked_fog_level_1_area_list_),
      unlokced_fog_level_2_area_list_(from.unlokced_fog_level_2_area_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&belong_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(belong_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.GetScenePointRsp)
}

void GetScenePointRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&belong_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(belong_uid_));
  _cached_size_ = 0;
}

GetScenePointRsp::~GetScenePointRsp() {
  // @@protoc_insertion_point(destructor:proto.GetScenePointRsp)
  SharedDtor();
}

void GetScenePointRsp::SharedDtor() {
}

void GetScenePointRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetScenePointRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetScenePointRsp& GetScenePointRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetScenePointRsp* GetScenePointRsp::New(::google::protobuf::Arena* arena) const {
  GetScenePointRsp* n = new GetScenePointRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetScenePointRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetScenePointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlocked_point_list_.Clear();
  unlock_area_list_.Clear();
  locked_point_list_.Clear();
  to_be_explore_dungeon_entry_list_.Clear();
  not_explored_dungeon_entry_list_.Clear();
  group_unlimit_point_list_.Clear();
  unlocked_fog_level_1_area_list_.Clear();
  unlokced_fog_level_2_area_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&belong_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(belong_uid_));
  _internal_metadata_.Clear();
}

bool GetScenePointRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetScenePointRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlocked_point_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlocked_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_unlocked_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 belong_uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &belong_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlock_area_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlock_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_unlock_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 locked_point_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_locked_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_locked_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 to_be_explore_dungeon_entry_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_to_be_explore_dungeon_entry_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_to_be_explore_dungeon_entry_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 not_explored_dungeon_entry_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_not_explored_dungeon_entry_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_not_explored_dungeon_entry_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 group_unlimit_point_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_group_unlimit_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 74u, input, this->mutable_group_unlimit_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlocked_fog_level_1_area_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlocked_fog_level_1_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_unlocked_fog_level_1_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlokced_fog_level_2_area_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlokced_fog_level_2_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_unlokced_fog_level_2_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetScenePointRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetScenePointRsp)
  return false;
#undef DO_
}

void GetScenePointRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetScenePointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  // repeated uint32 unlocked_point_list = 3;
  if (this->unlocked_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlocked_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlocked_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlocked_point_list(i), output);
  }

  // uint32 belong_uid = 4;
  if (this->belong_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->belong_uid(), output);
  }

  // repeated uint32 unlock_area_list = 5;
  if (this->unlock_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlock_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlock_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlock_area_list(i), output);
  }

  // repeated uint32 locked_point_list = 6;
  if (this->locked_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _locked_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->locked_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->locked_point_list(i), output);
  }

  // repeated uint32 to_be_explore_dungeon_entry_list = 7;
  if (this->to_be_explore_dungeon_entry_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _to_be_explore_dungeon_entry_list_cached_byte_size_));
  }
  for (int i = 0, n = this->to_be_explore_dungeon_entry_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->to_be_explore_dungeon_entry_list(i), output);
  }

  // repeated uint32 not_explored_dungeon_entry_list = 8;
  if (this->not_explored_dungeon_entry_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _not_explored_dungeon_entry_list_cached_byte_size_));
  }
  for (int i = 0, n = this->not_explored_dungeon_entry_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->not_explored_dungeon_entry_list(i), output);
  }

  // repeated uint32 group_unlimit_point_list = 9;
  if (this->group_unlimit_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _group_unlimit_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->group_unlimit_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->group_unlimit_point_list(i), output);
  }

  // repeated uint32 unlocked_fog_level_1_area_list = 10;
  if (this->unlocked_fog_level_1_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlocked_fog_level_1_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlocked_fog_level_1_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlocked_fog_level_1_area_list(i), output);
  }

  // repeated uint32 unlokced_fog_level_2_area_list = 11;
  if (this->unlokced_fog_level_2_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlokced_fog_level_2_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlokced_fog_level_2_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlokced_fog_level_2_area_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetScenePointRsp)
}

::google::protobuf::uint8* GetScenePointRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetScenePointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  // repeated uint32 unlocked_point_list = 3;
  if (this->unlocked_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlocked_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlocked_point_list_, target);
  }

  // uint32 belong_uid = 4;
  if (this->belong_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->belong_uid(), target);
  }

  // repeated uint32 unlock_area_list = 5;
  if (this->unlock_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlock_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlock_area_list_, target);
  }

  // repeated uint32 locked_point_list = 6;
  if (this->locked_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _locked_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->locked_point_list_, target);
  }

  // repeated uint32 to_be_explore_dungeon_entry_list = 7;
  if (this->to_be_explore_dungeon_entry_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _to_be_explore_dungeon_entry_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->to_be_explore_dungeon_entry_list_, target);
  }

  // repeated uint32 not_explored_dungeon_entry_list = 8;
  if (this->not_explored_dungeon_entry_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _not_explored_dungeon_entry_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->not_explored_dungeon_entry_list_, target);
  }

  // repeated uint32 group_unlimit_point_list = 9;
  if (this->group_unlimit_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _group_unlimit_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->group_unlimit_point_list_, target);
  }

  // repeated uint32 unlocked_fog_level_1_area_list = 10;
  if (this->unlocked_fog_level_1_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlocked_fog_level_1_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlocked_fog_level_1_area_list_, target);
  }

  // repeated uint32 unlokced_fog_level_2_area_list = 11;
  if (this->unlokced_fog_level_2_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlokced_fog_level_2_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlokced_fog_level_2_area_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetScenePointRsp)
  return target;
}

size_t GetScenePointRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetScenePointRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlocked_point_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlocked_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlocked_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 unlock_area_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlock_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlock_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 locked_point_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->locked_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _locked_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 to_be_explore_dungeon_entry_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->to_be_explore_dungeon_entry_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _to_be_explore_dungeon_entry_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 not_explored_dungeon_entry_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->not_explored_dungeon_entry_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _not_explored_dungeon_entry_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 group_unlimit_point_list = 9;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->group_unlimit_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _group_unlimit_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 unlocked_fog_level_1_area_list = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlocked_fog_level_1_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlocked_fog_level_1_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 unlokced_fog_level_2_area_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlokced_fog_level_2_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlokced_fog_level_2_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 belong_uid = 4;
  if (this->belong_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->belong_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetScenePointRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetScenePointRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetScenePointRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetScenePointRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetScenePointRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetScenePointRsp)
    MergeFrom(*source);
  }
}

void GetScenePointRsp::MergeFrom(const GetScenePointRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetScenePointRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlocked_point_list_.MergeFrom(from.unlocked_point_list_);
  unlock_area_list_.MergeFrom(from.unlock_area_list_);
  locked_point_list_.MergeFrom(from.locked_point_list_);
  to_be_explore_dungeon_entry_list_.MergeFrom(from.to_be_explore_dungeon_entry_list_);
  not_explored_dungeon_entry_list_.MergeFrom(from.not_explored_dungeon_entry_list_);
  group_unlimit_point_list_.MergeFrom(from.group_unlimit_point_list_);
  unlocked_fog_level_1_area_list_.MergeFrom(from.unlocked_fog_level_1_area_list_);
  unlokced_fog_level_2_area_list_.MergeFrom(from.unlokced_fog_level_2_area_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.belong_uid() != 0) {
    set_belong_uid(from.belong_uid());
  }
}

void GetScenePointRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetScenePointRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScenePointRsp::CopyFrom(const GetScenePointRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetScenePointRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScenePointRsp::IsInitialized() const {
  return true;
}

void GetScenePointRsp::Swap(GetScenePointRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetScenePointRsp::InternalSwap(GetScenePointRsp* other) {
  using std::swap;
  unlocked_point_list_.InternalSwap(&other->unlocked_point_list_);
  unlock_area_list_.InternalSwap(&other->unlock_area_list_);
  locked_point_list_.InternalSwap(&other->locked_point_list_);
  to_be_explore_dungeon_entry_list_.InternalSwap(&other->to_be_explore_dungeon_entry_list_);
  not_explored_dungeon_entry_list_.InternalSwap(&other->not_explored_dungeon_entry_list_);
  group_unlimit_point_list_.InternalSwap(&other->group_unlimit_point_list_);
  unlocked_fog_level_1_area_list_.InternalSwap(&other->unlocked_fog_level_1_area_list_);
  unlokced_fog_level_2_area_list_.InternalSwap(&other->unlokced_fog_level_2_area_list_);
  swap(retcode_, other->retcode_);
  swap(scene_id_, other->scene_id_);
  swap(belong_uid_, other->belong_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetScenePointRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetScenePointRsp

// int32 retcode = 1;
void GetScenePointRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetScenePointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.retcode)
  return retcode_;
}
void GetScenePointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.retcode)
}

// uint32 scene_id = 2;
void GetScenePointRsp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 GetScenePointRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.scene_id)
  return scene_id_;
}
void GetScenePointRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.scene_id)
}

// repeated uint32 unlocked_point_list = 3;
int GetScenePointRsp::unlocked_point_list_size() const {
  return unlocked_point_list_.size();
}
void GetScenePointRsp::clear_unlocked_point_list() {
  unlocked_point_list_.Clear();
}
::google::protobuf::uint32 GetScenePointRsp::unlocked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlocked_point_list)
  return unlocked_point_list_.Get(index);
}
void GetScenePointRsp::set_unlocked_point_list(int index, ::google::protobuf::uint32 value) {
  unlocked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlocked_point_list)
}
void GetScenePointRsp::add_unlocked_point_list(::google::protobuf::uint32 value) {
  unlocked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlocked_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlocked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlocked_point_list)
  return unlocked_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlocked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlocked_point_list)
  return &unlocked_point_list_;
}

// uint32 belong_uid = 4;
void GetScenePointRsp::clear_belong_uid() {
  belong_uid_ = 0u;
}
::google::protobuf::uint32 GetScenePointRsp::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.belong_uid)
  return belong_uid_;
}
void GetScenePointRsp::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.belong_uid)
}

// repeated uint32 unlock_area_list = 5;
int GetScenePointRsp::unlock_area_list_size() const {
  return unlock_area_list_.size();
}
void GetScenePointRsp::clear_unlock_area_list() {
  unlock_area_list_.Clear();
}
::google::protobuf::uint32 GetScenePointRsp::unlock_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlock_area_list)
  return unlock_area_list_.Get(index);
}
void GetScenePointRsp::set_unlock_area_list(int index, ::google::protobuf::uint32 value) {
  unlock_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlock_area_list)
}
void GetScenePointRsp::add_unlock_area_list(::google::protobuf::uint32 value) {
  unlock_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlock_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlock_area_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlock_area_list)
  return unlock_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlock_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlock_area_list)
  return &unlock_area_list_;
}

// repeated uint32 locked_point_list = 6;
int GetScenePointRsp::locked_point_list_size() const {
  return locked_point_list_.size();
}
void GetScenePointRsp::clear_locked_point_list() {
  locked_point_list_.Clear();
}
::google::protobuf::uint32 GetScenePointRsp::locked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.locked_point_list)
  return locked_point_list_.Get(index);
}
void GetScenePointRsp::set_locked_point_list(int index, ::google::protobuf::uint32 value) {
  locked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.locked_point_list)
}
void GetScenePointRsp::add_locked_point_list(::google::protobuf::uint32 value) {
  locked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.locked_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::locked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.locked_point_list)
  return locked_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_locked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.locked_point_list)
  return &locked_point_list_;
}

// repeated uint32 to_be_explore_dungeon_entry_list = 7;
int GetScenePointRsp::to_be_explore_dungeon_entry_list_size() const {
  return to_be_explore_dungeon_entry_list_.size();
}
void GetScenePointRsp::clear_to_be_explore_dungeon_entry_list() {
  to_be_explore_dungeon_entry_list_.Clear();
}
::google::protobuf::uint32 GetScenePointRsp::to_be_explore_dungeon_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return to_be_explore_dungeon_entry_list_.Get(index);
}
void GetScenePointRsp::set_to_be_explore_dungeon_entry_list(int index, ::google::protobuf::uint32 value) {
  to_be_explore_dungeon_entry_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
}
void GetScenePointRsp::add_to_be_explore_dungeon_entry_list(::google::protobuf::uint32 value) {
  to_be_explore_dungeon_entry_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::to_be_explore_dungeon_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return to_be_explore_dungeon_entry_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_to_be_explore_dungeon_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.to_be_explore_dungeon_entry_list)
  return &to_be_explore_dungeon_entry_list_;
}

// repeated uint32 not_explored_dungeon_entry_list = 8;
int GetScenePointRsp::not_explored_dungeon_entry_list_size() const {
  return not_explored_dungeon_entry_list_.size();
}
void GetScenePointRsp::clear_not_explored_dungeon_entry_list() {
  not_explored_dungeon_entry_list_.Clear();
}
::google::protobuf::uint32 GetScenePointRsp::not_explored_dungeon_entry_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return not_explored_dungeon_entry_list_.Get(index);
}
void GetScenePointRsp::set_not_explored_dungeon_entry_list(int index, ::google::protobuf::uint32 value) {
  not_explored_dungeon_entry_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
}
void GetScenePointRsp::add_not_explored_dungeon_entry_list(::google::protobuf::uint32 value) {
  not_explored_dungeon_entry_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::not_explored_dungeon_entry_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return not_explored_dungeon_entry_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_not_explored_dungeon_entry_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.not_explored_dungeon_entry_list)
  return &not_explored_dungeon_entry_list_;
}

// repeated uint32 group_unlimit_point_list = 9;
int GetScenePointRsp::group_unlimit_point_list_size() const {
  return group_unlimit_point_list_.size();
}
void GetScenePointRsp::clear_group_unlimit_point_list() {
  group_unlimit_point_list_.Clear();
}
::google::protobuf::uint32 GetScenePointRsp::group_unlimit_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.group_unlimit_point_list)
  return group_unlimit_point_list_.Get(index);
}
void GetScenePointRsp::set_group_unlimit_point_list(int index, ::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.group_unlimit_point_list)
}
void GetScenePointRsp::add_group_unlimit_point_list(::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.group_unlimit_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::group_unlimit_point_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.group_unlimit_point_list)
  return group_unlimit_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_group_unlimit_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.group_unlimit_point_list)
  return &group_unlimit_point_list_;
}

// repeated uint32 unlocked_fog_level_1_area_list = 10;
int GetScenePointRsp::unlocked_fog_level_1_area_list_size() const {
  return unlocked_fog_level_1_area_list_.size();
}
void GetScenePointRsp::clear_unlocked_fog_level_1_area_list() {
  unlocked_fog_level_1_area_list_.Clear();
}
::google::protobuf::uint32 GetScenePointRsp::unlocked_fog_level_1_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
  return unlocked_fog_level_1_area_list_.Get(index);
}
void GetScenePointRsp::set_unlocked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value) {
  unlocked_fog_level_1_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
}
void GetScenePointRsp::add_unlocked_fog_level_1_area_list(::google::protobuf::uint32 value) {
  unlocked_fog_level_1_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlocked_fog_level_1_area_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
  return unlocked_fog_level_1_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlocked_fog_level_1_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlocked_fog_level_1_area_list)
  return &unlocked_fog_level_1_area_list_;
}

// repeated uint32 unlokced_fog_level_2_area_list = 11;
int GetScenePointRsp::unlokced_fog_level_2_area_list_size() const {
  return unlokced_fog_level_2_area_list_.size();
}
void GetScenePointRsp::clear_unlokced_fog_level_2_area_list() {
  unlokced_fog_level_2_area_list_.Clear();
}
::google::protobuf::uint32 GetScenePointRsp::unlokced_fog_level_2_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
  return unlokced_fog_level_2_area_list_.Get(index);
}
void GetScenePointRsp::set_unlokced_fog_level_2_area_list(int index, ::google::protobuf::uint32 value) {
  unlokced_fog_level_2_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
}
void GetScenePointRsp::add_unlokced_fog_level_2_area_list(::google::protobuf::uint32 value) {
  unlokced_fog_level_2_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetScenePointRsp::unlokced_fog_level_2_area_list() const {
  // @@protoc_insertion_point(field_list:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
  return unlokced_fog_level_2_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetScenePointRsp::mutable_unlokced_fog_level_2_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetScenePointRsp.unlokced_fog_level_2_area_list)
  return &unlokced_fog_level_2_area_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterTransPointRegionNotify::kSceneIdFieldNumber;
const int EnterTransPointRegionNotify::kPointIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterTransPointRegionNotify::EnterTransPointRegionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterTransPointRegionNotify)
}
EnterTransPointRegionNotify::EnterTransPointRegionNotify(const EnterTransPointRegionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EnterTransPointRegionNotify)
}

void EnterTransPointRegionNotify::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  _cached_size_ = 0;
}

EnterTransPointRegionNotify::~EnterTransPointRegionNotify() {
  // @@protoc_insertion_point(destructor:proto.EnterTransPointRegionNotify)
  SharedDtor();
}

void EnterTransPointRegionNotify::SharedDtor() {
}

void EnterTransPointRegionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterTransPointRegionNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterTransPointRegionNotify& EnterTransPointRegionNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterTransPointRegionNotify* EnterTransPointRegionNotify::New(::google::protobuf::Arena* arena) const {
  EnterTransPointRegionNotify* n = new EnterTransPointRegionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterTransPointRegionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterTransPointRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  _internal_metadata_.Clear();
}

bool EnterTransPointRegionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterTransPointRegionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterTransPointRegionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterTransPointRegionNotify)
  return false;
#undef DO_
}

void EnterTransPointRegionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterTransPointRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterTransPointRegionNotify)
}

::google::protobuf::uint8* EnterTransPointRegionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterTransPointRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterTransPointRegionNotify)
  return target;
}

size_t EnterTransPointRegionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterTransPointRegionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterTransPointRegionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterTransPointRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterTransPointRegionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterTransPointRegionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterTransPointRegionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterTransPointRegionNotify)
    MergeFrom(*source);
  }
}

void EnterTransPointRegionNotify::MergeFrom(const EnterTransPointRegionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterTransPointRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
}

void EnterTransPointRegionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterTransPointRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterTransPointRegionNotify::CopyFrom(const EnterTransPointRegionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterTransPointRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterTransPointRegionNotify::IsInitialized() const {
  return true;
}

void EnterTransPointRegionNotify::Swap(EnterTransPointRegionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterTransPointRegionNotify::InternalSwap(EnterTransPointRegionNotify* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(point_id_, other->point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterTransPointRegionNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterTransPointRegionNotify

// uint32 scene_id = 1;
void EnterTransPointRegionNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 EnterTransPointRegionNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterTransPointRegionNotify.scene_id)
  return scene_id_;
}
void EnterTransPointRegionNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterTransPointRegionNotify.scene_id)
}

// uint32 point_id = 2;
void EnterTransPointRegionNotify::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 EnterTransPointRegionNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterTransPointRegionNotify.point_id)
  return point_id_;
}
void EnterTransPointRegionNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterTransPointRegionNotify.point_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitTransPointRegionNotify::kSceneIdFieldNumber;
const int ExitTransPointRegionNotify::kPointIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitTransPointRegionNotify::ExitTransPointRegionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExitTransPointRegionNotify)
}
ExitTransPointRegionNotify::ExitTransPointRegionNotify(const ExitTransPointRegionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ExitTransPointRegionNotify)
}

void ExitTransPointRegionNotify::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  _cached_size_ = 0;
}

ExitTransPointRegionNotify::~ExitTransPointRegionNotify() {
  // @@protoc_insertion_point(destructor:proto.ExitTransPointRegionNotify)
  SharedDtor();
}

void ExitTransPointRegionNotify::SharedDtor() {
}

void ExitTransPointRegionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitTransPointRegionNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitTransPointRegionNotify& ExitTransPointRegionNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitTransPointRegionNotify* ExitTransPointRegionNotify::New(::google::protobuf::Arena* arena) const {
  ExitTransPointRegionNotify* n = new ExitTransPointRegionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitTransPointRegionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExitTransPointRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  _internal_metadata_.Clear();
}

bool ExitTransPointRegionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExitTransPointRegionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExitTransPointRegionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExitTransPointRegionNotify)
  return false;
#undef DO_
}

void ExitTransPointRegionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExitTransPointRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExitTransPointRegionNotify)
}

::google::protobuf::uint8* ExitTransPointRegionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExitTransPointRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExitTransPointRegionNotify)
  return target;
}

size_t ExitTransPointRegionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExitTransPointRegionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitTransPointRegionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExitTransPointRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitTransPointRegionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitTransPointRegionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExitTransPointRegionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExitTransPointRegionNotify)
    MergeFrom(*source);
  }
}

void ExitTransPointRegionNotify::MergeFrom(const ExitTransPointRegionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExitTransPointRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
}

void ExitTransPointRegionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExitTransPointRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitTransPointRegionNotify::CopyFrom(const ExitTransPointRegionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExitTransPointRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitTransPointRegionNotify::IsInitialized() const {
  return true;
}

void ExitTransPointRegionNotify::Swap(ExitTransPointRegionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitTransPointRegionNotify::InternalSwap(ExitTransPointRegionNotify* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(point_id_, other->point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitTransPointRegionNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitTransPointRegionNotify

// uint32 scene_id = 1;
void ExitTransPointRegionNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ExitTransPointRegionNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitTransPointRegionNotify.scene_id)
  return scene_id_;
}
void ExitTransPointRegionNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitTransPointRegionNotify.scene_id)
}

// uint32 point_id = 2;
void ExitTransPointRegionNotify::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 ExitTransPointRegionNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitTransPointRegionNotify.point_id)
  return point_id_;
}
void ExitTransPointRegionNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitTransPointRegionNotify.point_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenePointUnlockNotify::kSceneIdFieldNumber;
const int ScenePointUnlockNotify::kPointListFieldNumber;
const int ScenePointUnlockNotify::kLockedPointListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenePointUnlockNotify::ScenePointUnlockNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ScenePointUnlockNotify)
}
ScenePointUnlockNotify::ScenePointUnlockNotify(const ScenePointUnlockNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_list_(from.point_list_),
      locked_point_list_(from.locked_point_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ScenePointUnlockNotify)
}

void ScenePointUnlockNotify::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

ScenePointUnlockNotify::~ScenePointUnlockNotify() {
  // @@protoc_insertion_point(destructor:proto.ScenePointUnlockNotify)
  SharedDtor();
}

void ScenePointUnlockNotify::SharedDtor() {
}

void ScenePointUnlockNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScenePointUnlockNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScenePointUnlockNotify& ScenePointUnlockNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScenePointUnlockNotify* ScenePointUnlockNotify::New(::google::protobuf::Arena* arena) const {
  ScenePointUnlockNotify* n = new ScenePointUnlockNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScenePointUnlockNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ScenePointUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_list_.Clear();
  locked_point_list_.Clear();
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ScenePointUnlockNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ScenePointUnlockNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 point_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 locked_point_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_locked_point_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_locked_point_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ScenePointUnlockNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ScenePointUnlockNotify)
  return false;
#undef DO_
}

void ScenePointUnlockNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ScenePointUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // repeated uint32 point_list = 2;
  if (this->point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->point_list(i), output);
  }

  // repeated uint32 locked_point_list = 3;
  if (this->locked_point_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _locked_point_list_cached_byte_size_));
  }
  for (int i = 0, n = this->locked_point_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->locked_point_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ScenePointUnlockNotify)
}

::google::protobuf::uint8* ScenePointUnlockNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ScenePointUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // repeated uint32 point_list = 2;
  if (this->point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->point_list_, target);
  }

  // repeated uint32 locked_point_list = 3;
  if (this->locked_point_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _locked_point_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->locked_point_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ScenePointUnlockNotify)
  return target;
}

size_t ScenePointUnlockNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ScenePointUnlockNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 point_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 locked_point_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->locked_point_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _locked_point_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScenePointUnlockNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ScenePointUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenePointUnlockNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScenePointUnlockNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ScenePointUnlockNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ScenePointUnlockNotify)
    MergeFrom(*source);
  }
}

void ScenePointUnlockNotify::MergeFrom(const ScenePointUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ScenePointUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_list_.MergeFrom(from.point_list_);
  locked_point_list_.MergeFrom(from.locked_point_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ScenePointUnlockNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ScenePointUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenePointUnlockNotify::CopyFrom(const ScenePointUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ScenePointUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenePointUnlockNotify::IsInitialized() const {
  return true;
}

void ScenePointUnlockNotify::Swap(ScenePointUnlockNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenePointUnlockNotify::InternalSwap(ScenePointUnlockNotify* other) {
  using std::swap;
  point_list_.InternalSwap(&other->point_list_);
  locked_point_list_.InternalSwap(&other->locked_point_list_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScenePointUnlockNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScenePointUnlockNotify

// uint32 scene_id = 1;
void ScenePointUnlockNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ScenePointUnlockNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.scene_id)
  return scene_id_;
}
void ScenePointUnlockNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.scene_id)
}

// repeated uint32 point_list = 2;
int ScenePointUnlockNotify::point_list_size() const {
  return point_list_.size();
}
void ScenePointUnlockNotify::clear_point_list() {
  point_list_.Clear();
}
::google::protobuf::uint32 ScenePointUnlockNotify::point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.point_list)
  return point_list_.Get(index);
}
void ScenePointUnlockNotify::set_point_list(int index, ::google::protobuf::uint32 value) {
  point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.point_list)
}
void ScenePointUnlockNotify::add_point_list(::google::protobuf::uint32 value) {
  point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ScenePointUnlockNotify.point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePointUnlockNotify::point_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePointUnlockNotify.point_list)
  return point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePointUnlockNotify::mutable_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePointUnlockNotify.point_list)
  return &point_list_;
}

// repeated uint32 locked_point_list = 3;
int ScenePointUnlockNotify::locked_point_list_size() const {
  return locked_point_list_.size();
}
void ScenePointUnlockNotify::clear_locked_point_list() {
  locked_point_list_.Clear();
}
::google::protobuf::uint32 ScenePointUnlockNotify::locked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePointUnlockNotify.locked_point_list)
  return locked_point_list_.Get(index);
}
void ScenePointUnlockNotify::set_locked_point_list(int index, ::google::protobuf::uint32 value) {
  locked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ScenePointUnlockNotify.locked_point_list)
}
void ScenePointUnlockNotify::add_locked_point_list(::google::protobuf::uint32 value) {
  locked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ScenePointUnlockNotify.locked_point_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ScenePointUnlockNotify::locked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePointUnlockNotify.locked_point_list)
  return locked_point_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ScenePointUnlockNotify::mutable_locked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePointUnlockNotify.locked_point_list)
  return &locked_point_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneTransToPointReq::kSceneIdFieldNumber;
const int SceneTransToPointReq::kPointIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneTransToPointReq::SceneTransToPointReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneTransToPointReq)
}
SceneTransToPointReq::SceneTransToPointReq(const SceneTransToPointReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneTransToPointReq)
}

void SceneTransToPointReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  _cached_size_ = 0;
}

SceneTransToPointReq::~SceneTransToPointReq() {
  // @@protoc_insertion_point(destructor:proto.SceneTransToPointReq)
  SharedDtor();
}

void SceneTransToPointReq::SharedDtor() {
}

void SceneTransToPointReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneTransToPointReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneTransToPointReq& SceneTransToPointReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneTransToPointReq* SceneTransToPointReq::New(::google::protobuf::Arena* arena) const {
  SceneTransToPointReq* n = new SceneTransToPointReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneTransToPointReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneTransToPointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  _internal_metadata_.Clear();
}

bool SceneTransToPointReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneTransToPointReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneTransToPointReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneTransToPointReq)
  return false;
#undef DO_
}

void SceneTransToPointReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneTransToPointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneTransToPointReq)
}

::google::protobuf::uint8* SceneTransToPointReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneTransToPointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneTransToPointReq)
  return target;
}

size_t SceneTransToPointReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneTransToPointReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneTransToPointReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneTransToPointReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneTransToPointReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneTransToPointReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneTransToPointReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneTransToPointReq)
    MergeFrom(*source);
  }
}

void SceneTransToPointReq::MergeFrom(const SceneTransToPointReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneTransToPointReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
}

void SceneTransToPointReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneTransToPointReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneTransToPointReq::CopyFrom(const SceneTransToPointReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneTransToPointReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneTransToPointReq::IsInitialized() const {
  return true;
}

void SceneTransToPointReq::Swap(SceneTransToPointReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneTransToPointReq::InternalSwap(SceneTransToPointReq* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(point_id_, other->point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneTransToPointReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneTransToPointReq

// uint32 scene_id = 1;
void SceneTransToPointReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SceneTransToPointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointReq.scene_id)
  return scene_id_;
}
void SceneTransToPointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointReq.scene_id)
}

// uint32 point_id = 2;
void SceneTransToPointReq::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 SceneTransToPointReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointReq.point_id)
  return point_id_;
}
void SceneTransToPointReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointReq.point_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneTransToPointRsp::kRetcodeFieldNumber;
const int SceneTransToPointRsp::kSceneIdFieldNumber;
const int SceneTransToPointRsp::kPointIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneTransToPointRsp::SceneTransToPointRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneTransToPointRsp)
}
SceneTransToPointRsp::SceneTransToPointRsp(const SceneTransToPointRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(point_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneTransToPointRsp)
}

void SceneTransToPointRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(point_id_));
  _cached_size_ = 0;
}

SceneTransToPointRsp::~SceneTransToPointRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneTransToPointRsp)
  SharedDtor();
}

void SceneTransToPointRsp::SharedDtor() {
}

void SceneTransToPointRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneTransToPointRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneTransToPointRsp& SceneTransToPointRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneTransToPointRsp* SceneTransToPointRsp::New(::google::protobuf::Arena* arena) const {
  SceneTransToPointRsp* n = new SceneTransToPointRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneTransToPointRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneTransToPointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(point_id_));
  _internal_metadata_.Clear();
}

bool SceneTransToPointRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneTransToPointRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneTransToPointRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneTransToPointRsp)
  return false;
#undef DO_
}

void SceneTransToPointRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneTransToPointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  // uint32 point_id = 3;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneTransToPointRsp)
}

::google::protobuf::uint8* SceneTransToPointRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneTransToPointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  // uint32 point_id = 3;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneTransToPointRsp)
  return target;
}

size_t SceneTransToPointRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneTransToPointRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 point_id = 3;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneTransToPointRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneTransToPointRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneTransToPointRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneTransToPointRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneTransToPointRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneTransToPointRsp)
    MergeFrom(*source);
  }
}

void SceneTransToPointRsp::MergeFrom(const SceneTransToPointRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneTransToPointRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
}

void SceneTransToPointRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneTransToPointRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneTransToPointRsp::CopyFrom(const SceneTransToPointRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneTransToPointRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneTransToPointRsp::IsInitialized() const {
  return true;
}

void SceneTransToPointRsp::Swap(SceneTransToPointRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneTransToPointRsp::InternalSwap(SceneTransToPointRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(scene_id_, other->scene_id_);
  swap(point_id_, other->point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneTransToPointRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneTransToPointRsp

// int32 retcode = 1;
void SceneTransToPointRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneTransToPointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.retcode)
  return retcode_;
}
void SceneTransToPointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.retcode)
}

// uint32 scene_id = 2;
void SceneTransToPointRsp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SceneTransToPointRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.scene_id)
  return scene_id_;
}
void SceneTransToPointRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.scene_id)
}

// uint32 point_id = 3;
void SceneTransToPointRsp::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 SceneTransToPointRsp::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTransToPointRsp.point_id)
  return point_id_;
}
void SceneTransToPointRsp::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTransToPointRsp.point_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityJumpNotify::kEntityIdFieldNumber;
const int EntityJumpNotify::kJumpTypeFieldNumber;
const int EntityJumpNotify::kPosFieldNumber;
const int EntityJumpNotify::kRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityJumpNotify::EntityJumpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityJumpNotify)
}
EntityJumpNotify::EntityJumpNotify(const EntityJumpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&jump_type_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(jump_type_));
  // @@protoc_insertion_point(copy_constructor:proto.EntityJumpNotify)
}

void EntityJumpNotify::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jump_type_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(jump_type_));
  _cached_size_ = 0;
}

EntityJumpNotify::~EntityJumpNotify() {
  // @@protoc_insertion_point(destructor:proto.EntityJumpNotify)
  SharedDtor();
}

void EntityJumpNotify::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rot_;
}

void EntityJumpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityJumpNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityJumpNotify& EntityJumpNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityJumpNotify* EntityJumpNotify::New(::google::protobuf::Arena* arena) const {
  EntityJumpNotify* n = new EntityJumpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityJumpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityJumpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jump_type_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(jump_type_));
  _internal_metadata_.Clear();
}

bool EntityJumpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityJumpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.EntityJumpNotify.Type jump_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_jump_type(static_cast< ::proto::EntityJumpNotify_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityJumpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityJumpNotify)
  return false;
#undef DO_
}

void EntityJumpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityJumpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.EntityJumpNotify.Type jump_type = 2;
  if (this->jump_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->jump_type(), output);
  }

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // .proto.Vector rot = 4;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityJumpNotify)
}

::google::protobuf::uint8* EntityJumpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityJumpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.EntityJumpNotify.Type jump_type = 2;
  if (this->jump_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->jump_type(), target);
  }

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, deterministic, target);
  }

  // .proto.Vector rot = 4;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityJumpNotify)
  return target;
}

size_t EntityJumpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityJumpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector rot = 4;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // .proto.EntityJumpNotify.Type jump_type = 2;
  if (this->jump_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->jump_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityJumpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityJumpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityJumpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityJumpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityJumpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityJumpNotify)
    MergeFrom(*source);
  }
}

void EntityJumpNotify::MergeFrom(const EntityJumpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityJumpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.jump_type() != 0) {
    set_jump_type(from.jump_type());
  }
}

void EntityJumpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityJumpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityJumpNotify::CopyFrom(const EntityJumpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityJumpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityJumpNotify::IsInitialized() const {
  return true;
}

void EntityJumpNotify::Swap(EntityJumpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityJumpNotify::InternalSwap(EntityJumpNotify* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rot_, other->rot_);
  swap(entity_id_, other->entity_id_);
  swap(jump_type_, other->jump_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityJumpNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityJumpNotify

// uint32 entity_id = 1;
void EntityJumpNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EntityJumpNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.entity_id)
  return entity_id_;
}
void EntityJumpNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityJumpNotify.entity_id)
}

// .proto.EntityJumpNotify.Type jump_type = 2;
void EntityJumpNotify::clear_jump_type() {
  jump_type_ = 0;
}
::proto::EntityJumpNotify_Type EntityJumpNotify::jump_type() const {
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.jump_type)
  return static_cast< ::proto::EntityJumpNotify_Type >(jump_type_);
}
void EntityJumpNotify::set_jump_type(::proto::EntityJumpNotify_Type value) {
  
  jump_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityJumpNotify.jump_type)
}

// .proto.Vector pos = 3;
bool EntityJumpNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void EntityJumpNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& EntityJumpNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EntityJumpNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityJumpNotify.pos)
  return pos_;
}
::proto::Vector* EntityJumpNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.EntityJumpNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void EntityJumpNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityJumpNotify.pos)
}

// .proto.Vector rot = 4;
bool EntityJumpNotify::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void EntityJumpNotify::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& EntityJumpNotify::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.EntityJumpNotify.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* EntityJumpNotify::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityJumpNotify.rot)
  return rot_;
}
::proto::Vector* EntityJumpNotify::release_rot() {
  // @@protoc_insertion_point(field_release:proto.EntityJumpNotify.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void EntityJumpNotify::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityJumpNotify.rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSceneAreaReq::kSceneIdFieldNumber;
const int GetSceneAreaReq::kBelongUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSceneAreaReq::GetSceneAreaReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetSceneAreaReq)
}
GetSceneAreaReq::GetSceneAreaReq(const GetSceneAreaReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&belong_uid_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(belong_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.GetSceneAreaReq)
}

void GetSceneAreaReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&belong_uid_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(belong_uid_));
  _cached_size_ = 0;
}

GetSceneAreaReq::~GetSceneAreaReq() {
  // @@protoc_insertion_point(destructor:proto.GetSceneAreaReq)
  SharedDtor();
}

void GetSceneAreaReq::SharedDtor() {
}

void GetSceneAreaReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSceneAreaReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSceneAreaReq& GetSceneAreaReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSceneAreaReq* GetSceneAreaReq::New(::google::protobuf::Arena* arena) const {
  GetSceneAreaReq* n = new GetSceneAreaReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSceneAreaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSceneAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&belong_uid_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(belong_uid_));
  _internal_metadata_.Clear();
}

bool GetSceneAreaReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetSceneAreaReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 belong_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &belong_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetSceneAreaReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetSceneAreaReq)
  return false;
#undef DO_
}

void GetSceneAreaReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetSceneAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 belong_uid = 2;
  if (this->belong_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->belong_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetSceneAreaReq)
}

::google::protobuf::uint8* GetSceneAreaReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSceneAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 belong_uid = 2;
  if (this->belong_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->belong_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSceneAreaReq)
  return target;
}

size_t GetSceneAreaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSceneAreaReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 belong_uid = 2;
  if (this->belong_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->belong_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSceneAreaReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetSceneAreaReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSceneAreaReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSceneAreaReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetSceneAreaReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetSceneAreaReq)
    MergeFrom(*source);
  }
}

void GetSceneAreaReq::MergeFrom(const GetSceneAreaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSceneAreaReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.belong_uid() != 0) {
    set_belong_uid(from.belong_uid());
  }
}

void GetSceneAreaReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetSceneAreaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSceneAreaReq::CopyFrom(const GetSceneAreaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSceneAreaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSceneAreaReq::IsInitialized() const {
  return true;
}

void GetSceneAreaReq::Swap(GetSceneAreaReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSceneAreaReq::InternalSwap(GetSceneAreaReq* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(belong_uid_, other->belong_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSceneAreaReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSceneAreaReq

// uint32 scene_id = 1;
void GetSceneAreaReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 GetSceneAreaReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaReq.scene_id)
  return scene_id_;
}
void GetSceneAreaReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaReq.scene_id)
}

// uint32 belong_uid = 2;
void GetSceneAreaReq::clear_belong_uid() {
  belong_uid_ = 0u;
}
::google::protobuf::uint32 GetSceneAreaReq::belong_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaReq.belong_uid)
  return belong_uid_;
}
void GetSceneAreaReq::set_belong_uid(::google::protobuf::uint32 value) {
  
  belong_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaReq.belong_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSceneAreaRsp::kRetcodeFieldNumber;
const int GetSceneAreaRsp::kSceneIdFieldNumber;
const int GetSceneAreaRsp::kAreaIdListFieldNumber;
const int GetSceneAreaRsp::kCityInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSceneAreaRsp::GetSceneAreaRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetSceneAreaRsp)
}
GetSceneAreaRsp::GetSceneAreaRsp(const GetSceneAreaRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      area_id_list_(from.area_id_list_),
      city_info_list_(from.city_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GetSceneAreaRsp)
}

void GetSceneAreaRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

GetSceneAreaRsp::~GetSceneAreaRsp() {
  // @@protoc_insertion_point(destructor:proto.GetSceneAreaRsp)
  SharedDtor();
}

void GetSceneAreaRsp::SharedDtor() {
}

void GetSceneAreaRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSceneAreaRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSceneAreaRsp& GetSceneAreaRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSceneAreaRsp* GetSceneAreaRsp::New(::google::protobuf::Arena* arena) const {
  GetSceneAreaRsp* n = new GetSceneAreaRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSceneAreaRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSceneAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  area_id_list_.Clear();
  city_info_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool GetSceneAreaRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetSceneAreaRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 area_id_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_area_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_area_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CityInfo city_info_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_city_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetSceneAreaRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetSceneAreaRsp)
  return false;
#undef DO_
}

void GetSceneAreaRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetSceneAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  // repeated uint32 area_id_list = 3;
  if (this->area_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _area_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->area_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->area_id_list(i), output);
  }

  // repeated .proto.CityInfo city_info_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->city_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->city_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetSceneAreaRsp)
}

::google::protobuf::uint8* GetSceneAreaRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSceneAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  // repeated uint32 area_id_list = 3;
  if (this->area_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _area_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->area_id_list_, target);
  }

  // repeated .proto.CityInfo city_info_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->city_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->city_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSceneAreaRsp)
  return target;
}

size_t GetSceneAreaRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSceneAreaRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 area_id_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->area_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _area_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.CityInfo city_info_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->city_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->city_info_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSceneAreaRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetSceneAreaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSceneAreaRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSceneAreaRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetSceneAreaRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetSceneAreaRsp)
    MergeFrom(*source);
  }
}

void GetSceneAreaRsp::MergeFrom(const GetSceneAreaRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSceneAreaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  area_id_list_.MergeFrom(from.area_id_list_);
  city_info_list_.MergeFrom(from.city_info_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void GetSceneAreaRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetSceneAreaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSceneAreaRsp::CopyFrom(const GetSceneAreaRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSceneAreaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSceneAreaRsp::IsInitialized() const {
  return true;
}

void GetSceneAreaRsp::Swap(GetSceneAreaRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSceneAreaRsp::InternalSwap(GetSceneAreaRsp* other) {
  using std::swap;
  area_id_list_.InternalSwap(&other->area_id_list_);
  city_info_list_.InternalSwap(&other->city_info_list_);
  swap(retcode_, other->retcode_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSceneAreaRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSceneAreaRsp

// int32 retcode = 1;
void GetSceneAreaRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetSceneAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.retcode)
  return retcode_;
}
void GetSceneAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.retcode)
}

// uint32 scene_id = 2;
void GetSceneAreaRsp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 GetSceneAreaRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.scene_id)
  return scene_id_;
}
void GetSceneAreaRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.scene_id)
}

// repeated uint32 area_id_list = 3;
int GetSceneAreaRsp::area_id_list_size() const {
  return area_id_list_.size();
}
void GetSceneAreaRsp::clear_area_id_list() {
  area_id_list_.Clear();
}
::google::protobuf::uint32 GetSceneAreaRsp::area_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.area_id_list)
  return area_id_list_.Get(index);
}
void GetSceneAreaRsp::set_area_id_list(int index, ::google::protobuf::uint32 value) {
  area_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetSceneAreaRsp.area_id_list)
}
void GetSceneAreaRsp::add_area_id_list(::google::protobuf::uint32 value) {
  area_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetSceneAreaRsp.area_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetSceneAreaRsp::area_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetSceneAreaRsp.area_id_list)
  return area_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetSceneAreaRsp::mutable_area_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetSceneAreaRsp.area_id_list)
  return &area_id_list_;
}

// repeated .proto.CityInfo city_info_list = 4;
int GetSceneAreaRsp::city_info_list_size() const {
  return city_info_list_.size();
}
void GetSceneAreaRsp::clear_city_info_list() {
  city_info_list_.Clear();
}
const ::proto::CityInfo& GetSceneAreaRsp::city_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Get(index);
}
::proto::CityInfo* GetSceneAreaRsp::mutable_city_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Mutable(index);
}
::proto::CityInfo* GetSceneAreaRsp::add_city_info_list() {
  // @@protoc_insertion_point(field_add:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CityInfo >*
GetSceneAreaRsp::mutable_city_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetSceneAreaRsp.city_info_list)
  return &city_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CityInfo >&
GetSceneAreaRsp::city_info_list() const {
  // @@protoc_insertion_point(field_list:proto.GetSceneAreaRsp.city_info_list)
  return city_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneAreaUnlockNotify::kSceneIdFieldNumber;
const int SceneAreaUnlockNotify::kAreaListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAreaUnlockNotify::SceneAreaUnlockNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAreaUnlockNotify)
}
SceneAreaUnlockNotify::SceneAreaUnlockNotify(const SceneAreaUnlockNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      area_list_(from.area_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneAreaUnlockNotify)
}

void SceneAreaUnlockNotify::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

SceneAreaUnlockNotify::~SceneAreaUnlockNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneAreaUnlockNotify)
  SharedDtor();
}

void SceneAreaUnlockNotify::SharedDtor() {
}

void SceneAreaUnlockNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAreaUnlockNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAreaUnlockNotify& SceneAreaUnlockNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAreaUnlockNotify* SceneAreaUnlockNotify::New(::google::protobuf::Arena* arena) const {
  SceneAreaUnlockNotify* n = new SceneAreaUnlockNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAreaUnlockNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAreaUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  area_list_.Clear();
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneAreaUnlockNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAreaUnlockNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 area_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAreaUnlockNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAreaUnlockNotify)
  return false;
#undef DO_
}

void SceneAreaUnlockNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAreaUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // repeated uint32 area_list = 2;
  if (this->area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->area_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAreaUnlockNotify)
}

::google::protobuf::uint8* SceneAreaUnlockNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAreaUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // repeated uint32 area_list = 2;
  if (this->area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->area_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAreaUnlockNotify)
  return target;
}

size_t SceneAreaUnlockNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAreaUnlockNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 area_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAreaUnlockNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAreaUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAreaUnlockNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAreaUnlockNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAreaUnlockNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAreaUnlockNotify)
    MergeFrom(*source);
  }
}

void SceneAreaUnlockNotify::MergeFrom(const SceneAreaUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAreaUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  area_list_.MergeFrom(from.area_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void SceneAreaUnlockNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAreaUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAreaUnlockNotify::CopyFrom(const SceneAreaUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAreaUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAreaUnlockNotify::IsInitialized() const {
  return true;
}

void SceneAreaUnlockNotify::Swap(SceneAreaUnlockNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAreaUnlockNotify::InternalSwap(SceneAreaUnlockNotify* other) {
  using std::swap;
  area_list_.InternalSwap(&other->area_list_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAreaUnlockNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAreaUnlockNotify

// uint32 scene_id = 1;
void SceneAreaUnlockNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SceneAreaUnlockNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaUnlockNotify.scene_id)
  return scene_id_;
}
void SceneAreaUnlockNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaUnlockNotify.scene_id)
}

// repeated uint32 area_list = 2;
int SceneAreaUnlockNotify::area_list_size() const {
  return area_list_.size();
}
void SceneAreaUnlockNotify::clear_area_list() {
  area_list_.Clear();
}
::google::protobuf::uint32 SceneAreaUnlockNotify::area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaUnlockNotify.area_list)
  return area_list_.Get(index);
}
void SceneAreaUnlockNotify::set_area_list(int index, ::google::protobuf::uint32 value) {
  area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAreaUnlockNotify.area_list)
}
void SceneAreaUnlockNotify::add_area_list(::google::protobuf::uint32 value) {
  area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAreaUnlockNotify.area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAreaUnlockNotify::area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAreaUnlockNotify.area_list)
  return area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAreaUnlockNotify::mutable_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAreaUnlockNotify.area_list)
  return &area_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityDrownReq::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityDrownReq::SceneEntityDrownReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityDrownReq)
}
SceneEntityDrownReq::SceneEntityDrownReq(const SceneEntityDrownReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityDrownReq)
}

void SceneEntityDrownReq::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

SceneEntityDrownReq::~SceneEntityDrownReq() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityDrownReq)
  SharedDtor();
}

void SceneEntityDrownReq::SharedDtor() {
}

void SceneEntityDrownReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityDrownReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityDrownReq& SceneEntityDrownReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityDrownReq* SceneEntityDrownReq::New(::google::protobuf::Arena* arena) const {
  SceneEntityDrownReq* n = new SceneEntityDrownReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityDrownReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityDrownReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneEntityDrownReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityDrownReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityDrownReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityDrownReq)
  return false;
#undef DO_
}

void SceneEntityDrownReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityDrownReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityDrownReq)
}

::google::protobuf::uint8* SceneEntityDrownReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityDrownReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityDrownReq)
  return target;
}

size_t SceneEntityDrownReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityDrownReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityDrownReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityDrownReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityDrownReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityDrownReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityDrownReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityDrownReq)
    MergeFrom(*source);
  }
}

void SceneEntityDrownReq::MergeFrom(const SceneEntityDrownReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityDrownReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void SceneEntityDrownReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityDrownReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityDrownReq::CopyFrom(const SceneEntityDrownReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityDrownReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityDrownReq::IsInitialized() const {
  return true;
}

void SceneEntityDrownReq::Swap(SceneEntityDrownReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityDrownReq::InternalSwap(SceneEntityDrownReq* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityDrownReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityDrownReq

// uint32 entity_id = 1;
void SceneEntityDrownReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneEntityDrownReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownReq.entity_id)
  return entity_id_;
}
void SceneEntityDrownReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownReq.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntityDrownRsp::kRetcodeFieldNumber;
const int SceneEntityDrownRsp::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntityDrownRsp::SceneEntityDrownRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntityDrownRsp)
}
SceneEntityDrownRsp::SceneEntityDrownRsp(const SceneEntityDrownRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntityDrownRsp)
}

void SceneEntityDrownRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

SceneEntityDrownRsp::~SceneEntityDrownRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneEntityDrownRsp)
  SharedDtor();
}

void SceneEntityDrownRsp::SharedDtor() {
}

void SceneEntityDrownRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntityDrownRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntityDrownRsp& SceneEntityDrownRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntityDrownRsp* SceneEntityDrownRsp::New(::google::protobuf::Arena* arena) const {
  SceneEntityDrownRsp* n = new SceneEntityDrownRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntityDrownRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntityDrownRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool SceneEntityDrownRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntityDrownRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntityDrownRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntityDrownRsp)
  return false;
#undef DO_
}

void SceneEntityDrownRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntityDrownRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntityDrownRsp)
}

::google::protobuf::uint8* SceneEntityDrownRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntityDrownRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntityDrownRsp)
  return target;
}

size_t SceneEntityDrownRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntityDrownRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntityDrownRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntityDrownRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntityDrownRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntityDrownRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntityDrownRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntityDrownRsp)
    MergeFrom(*source);
  }
}

void SceneEntityDrownRsp::MergeFrom(const SceneEntityDrownRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntityDrownRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void SceneEntityDrownRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntityDrownRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntityDrownRsp::CopyFrom(const SceneEntityDrownRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntityDrownRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntityDrownRsp::IsInitialized() const {
  return true;
}

void SceneEntityDrownRsp::Swap(SceneEntityDrownRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntityDrownRsp::InternalSwap(SceneEntityDrownRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntityDrownRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntityDrownRsp

// int32 retcode = 1;
void SceneEntityDrownRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneEntityDrownRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownRsp.retcode)
  return retcode_;
}
void SceneEntityDrownRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownRsp.retcode)
}

// uint32 entity_id = 2;
void SceneEntityDrownRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneEntityDrownRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneEntityDrownRsp.entity_id)
  return entity_id_;
}
void SceneEntityDrownRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneEntityDrownRsp.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneCreateEntityReq::kEntityFieldNumber;
const int SceneCreateEntityReq::kReasonFieldNumber;
const int SceneCreateEntityReq::kIsDestroyWhenDisconnectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneCreateEntityReq::SceneCreateEntityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneCreateEntityReq)
}
SceneCreateEntityReq::SceneCreateEntityReq(const SceneCreateEntityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::proto::CreateEntityInfo(*from.entity_);
  } else {
    entity_ = NULL;
  }
  ::memcpy(&reason_, &from.reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_destroy_when_disconnect_) -
    reinterpret_cast<char*>(&reason_)) + sizeof(is_destroy_when_disconnect_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneCreateEntityReq)
}

void SceneCreateEntityReq::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_destroy_when_disconnect_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(is_destroy_when_disconnect_));
  _cached_size_ = 0;
}

SceneCreateEntityReq::~SceneCreateEntityReq() {
  // @@protoc_insertion_point(destructor:proto.SceneCreateEntityReq)
  SharedDtor();
}

void SceneCreateEntityReq::SharedDtor() {
  if (this != internal_default_instance()) delete entity_;
}

void SceneCreateEntityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneCreateEntityReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneCreateEntityReq& SceneCreateEntityReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneCreateEntityReq* SceneCreateEntityReq::New(::google::protobuf::Arena* arena) const {
  SceneCreateEntityReq* n = new SceneCreateEntityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneCreateEntityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_destroy_when_disconnect_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(is_destroy_when_disconnect_));
  _internal_metadata_.Clear();
}

bool SceneCreateEntityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneCreateEntityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.CreateEntityInfo entity = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CreateReason reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::CreateReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_destroy_when_disconnect = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_destroy_when_disconnect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneCreateEntityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneCreateEntityReq)
  return false;
#undef DO_
}

void SceneCreateEntityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CreateEntityInfo entity = 1;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->entity_, output);
  }

  // .proto.CreateReason reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  // bool is_destroy_when_disconnect = 3;
  if (this->is_destroy_when_disconnect() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_destroy_when_disconnect(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneCreateEntityReq)
}

::google::protobuf::uint8* SceneCreateEntityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneCreateEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.CreateEntityInfo entity = 1;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->entity_, deterministic, target);
  }

  // .proto.CreateReason reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  // bool is_destroy_when_disconnect = 3;
  if (this->is_destroy_when_disconnect() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_destroy_when_disconnect(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneCreateEntityReq)
  return target;
}

size_t SceneCreateEntityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneCreateEntityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CreateEntityInfo entity = 1;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // .proto.CreateReason reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  // bool is_destroy_when_disconnect = 3;
  if (this->is_destroy_when_disconnect() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneCreateEntityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneCreateEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneCreateEntityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneCreateEntityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneCreateEntityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneCreateEntityReq)
    MergeFrom(*source);
  }
}

void SceneCreateEntityReq::MergeFrom(const SceneCreateEntityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneCreateEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity()) {
    mutable_entity()->::proto::CreateEntityInfo::MergeFrom(from.entity());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
  if (from.is_destroy_when_disconnect() != 0) {
    set_is_destroy_when_disconnect(from.is_destroy_when_disconnect());
  }
}

void SceneCreateEntityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneCreateEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneCreateEntityReq::CopyFrom(const SceneCreateEntityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneCreateEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneCreateEntityReq::IsInitialized() const {
  return true;
}

void SceneCreateEntityReq::Swap(SceneCreateEntityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneCreateEntityReq::InternalSwap(SceneCreateEntityReq* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(reason_, other->reason_);
  swap(is_destroy_when_disconnect_, other->is_destroy_when_disconnect_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneCreateEntityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneCreateEntityReq

// .proto.CreateEntityInfo entity = 1;
bool SceneCreateEntityReq::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void SceneCreateEntityReq::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::proto::CreateEntityInfo& SceneCreateEntityReq::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
::proto::CreateEntityInfo* SceneCreateEntityReq::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneCreateEntityReq.entity)
  return entity_;
}
::proto::CreateEntityInfo* SceneCreateEntityReq::release_entity() {
  // @@protoc_insertion_point(field_release:proto.SceneCreateEntityReq.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
void SceneCreateEntityReq::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneCreateEntityReq.entity)
}

// .proto.CreateReason reason = 2;
void SceneCreateEntityReq::clear_reason() {
  reason_ = 0;
}
::proto::CreateReason SceneCreateEntityReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.reason)
  return static_cast< ::proto::CreateReason >(reason_);
}
void SceneCreateEntityReq::set_reason(::proto::CreateReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityReq.reason)
}

// bool is_destroy_when_disconnect = 3;
void SceneCreateEntityReq::clear_is_destroy_when_disconnect() {
  is_destroy_when_disconnect_ = false;
}
bool SceneCreateEntityReq::is_destroy_when_disconnect() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityReq.is_destroy_when_disconnect)
  return is_destroy_when_disconnect_;
}
void SceneCreateEntityReq::set_is_destroy_when_disconnect(bool value) {
  
  is_destroy_when_disconnect_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityReq.is_destroy_when_disconnect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneCreateEntityRsp::kRetcodeFieldNumber;
const int SceneCreateEntityRsp::kEntityIdFieldNumber;
const int SceneCreateEntityRsp::kEntityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneCreateEntityRsp::SceneCreateEntityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneCreateEntityRsp)
}
SceneCreateEntityRsp::SceneCreateEntityRsp(const SceneCreateEntityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity()) {
    entity_ = new ::proto::CreateEntityInfo(*from.entity_);
  } else {
    entity_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneCreateEntityRsp)
}

void SceneCreateEntityRsp::SharedCtor() {
  ::memset(&entity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&entity_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

SceneCreateEntityRsp::~SceneCreateEntityRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneCreateEntityRsp)
  SharedDtor();
}

void SceneCreateEntityRsp::SharedDtor() {
  if (this != internal_default_instance()) delete entity_;
}

void SceneCreateEntityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneCreateEntityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneCreateEntityRsp& SceneCreateEntityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneCreateEntityRsp* SceneCreateEntityRsp::New(::google::protobuf::Arena* arena) const {
  SceneCreateEntityRsp* n = new SceneCreateEntityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneCreateEntityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool SceneCreateEntityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneCreateEntityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CreateEntityInfo entity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneCreateEntityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneCreateEntityRsp)
  return false;
#undef DO_
}

void SceneCreateEntityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.CreateEntityInfo entity = 3;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->entity_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneCreateEntityRsp)
}

::google::protobuf::uint8* SceneCreateEntityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneCreateEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.CreateEntityInfo entity = 3;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->entity_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneCreateEntityRsp)
  return target;
}

size_t SceneCreateEntityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneCreateEntityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CreateEntityInfo entity = 3;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->entity_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneCreateEntityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneCreateEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneCreateEntityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneCreateEntityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneCreateEntityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneCreateEntityRsp)
    MergeFrom(*source);
  }
}

void SceneCreateEntityRsp::MergeFrom(const SceneCreateEntityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneCreateEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity()) {
    mutable_entity()->::proto::CreateEntityInfo::MergeFrom(from.entity());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void SceneCreateEntityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneCreateEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneCreateEntityRsp::CopyFrom(const SceneCreateEntityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneCreateEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneCreateEntityRsp::IsInitialized() const {
  return true;
}

void SceneCreateEntityRsp::Swap(SceneCreateEntityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneCreateEntityRsp::InternalSwap(SceneCreateEntityRsp* other) {
  using std::swap;
  swap(entity_, other->entity_);
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneCreateEntityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneCreateEntityRsp

// int32 retcode = 1;
void SceneCreateEntityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneCreateEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.retcode)
  return retcode_;
}
void SceneCreateEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityRsp.retcode)
}

// uint32 entity_id = 2;
void SceneCreateEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneCreateEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.entity_id)
  return entity_id_;
}
void SceneCreateEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneCreateEntityRsp.entity_id)
}

// .proto.CreateEntityInfo entity = 3;
bool SceneCreateEntityRsp::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
void SceneCreateEntityRsp::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) delete entity_;
  entity_ = NULL;
}
const ::proto::CreateEntityInfo& SceneCreateEntityRsp::entity() const {
  const ::proto::CreateEntityInfo* p = entity_;
  // @@protoc_insertion_point(field_get:proto.SceneCreateEntityRsp.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CreateEntityInfo*>(
      &::proto::_CreateEntityInfo_default_instance_);
}
::proto::CreateEntityInfo* SceneCreateEntityRsp::mutable_entity() {
  
  if (entity_ == NULL) {
    entity_ = new ::proto::CreateEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneCreateEntityRsp.entity)
  return entity_;
}
::proto::CreateEntityInfo* SceneCreateEntityRsp::release_entity() {
  // @@protoc_insertion_point(field_release:proto.SceneCreateEntityRsp.entity)
  
  ::proto::CreateEntityInfo* temp = entity_;
  entity_ = NULL;
  return temp;
}
void SceneCreateEntityRsp::set_allocated_entity(::proto::CreateEntityInfo* entity) {
  delete entity_;
  entity_ = entity;
  if (entity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneCreateEntityRsp.entity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneDestroyEntityReq::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneDestroyEntityReq::SceneDestroyEntityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneDestroyEntityReq)
}
SceneDestroyEntityReq::SceneDestroyEntityReq(const SceneDestroyEntityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneDestroyEntityReq)
}

void SceneDestroyEntityReq::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

SceneDestroyEntityReq::~SceneDestroyEntityReq() {
  // @@protoc_insertion_point(destructor:proto.SceneDestroyEntityReq)
  SharedDtor();
}

void SceneDestroyEntityReq::SharedDtor() {
}

void SceneDestroyEntityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneDestroyEntityReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneDestroyEntityReq& SceneDestroyEntityReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneDestroyEntityReq* SceneDestroyEntityReq::New(::google::protobuf::Arena* arena) const {
  SceneDestroyEntityReq* n = new SceneDestroyEntityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneDestroyEntityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneDestroyEntityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneDestroyEntityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneDestroyEntityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneDestroyEntityReq)
  return false;
#undef DO_
}

void SceneDestroyEntityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneDestroyEntityReq)
}

::google::protobuf::uint8* SceneDestroyEntityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneDestroyEntityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneDestroyEntityReq)
  return target;
}

size_t SceneDestroyEntityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneDestroyEntityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneDestroyEntityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneDestroyEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneDestroyEntityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneDestroyEntityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneDestroyEntityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneDestroyEntityReq)
    MergeFrom(*source);
  }
}

void SceneDestroyEntityReq::MergeFrom(const SceneDestroyEntityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneDestroyEntityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void SceneDestroyEntityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneDestroyEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneDestroyEntityReq::CopyFrom(const SceneDestroyEntityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneDestroyEntityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneDestroyEntityReq::IsInitialized() const {
  return true;
}

void SceneDestroyEntityReq::Swap(SceneDestroyEntityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneDestroyEntityReq::InternalSwap(SceneDestroyEntityReq* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneDestroyEntityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneDestroyEntityReq

// uint32 entity_id = 1;
void SceneDestroyEntityReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneDestroyEntityReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityReq.entity_id)
  return entity_id_;
}
void SceneDestroyEntityReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityReq.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneDestroyEntityRsp::kRetcodeFieldNumber;
const int SceneDestroyEntityRsp::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneDestroyEntityRsp::SceneDestroyEntityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneDestroyEntityRsp)
}
SceneDestroyEntityRsp::SceneDestroyEntityRsp(const SceneDestroyEntityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneDestroyEntityRsp)
}

void SceneDestroyEntityRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

SceneDestroyEntityRsp::~SceneDestroyEntityRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneDestroyEntityRsp)
  SharedDtor();
}

void SceneDestroyEntityRsp::SharedDtor() {
}

void SceneDestroyEntityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneDestroyEntityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneDestroyEntityRsp& SceneDestroyEntityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneDestroyEntityRsp* SceneDestroyEntityRsp::New(::google::protobuf::Arena* arena) const {
  SceneDestroyEntityRsp* n = new SceneDestroyEntityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneDestroyEntityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool SceneDestroyEntityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneDestroyEntityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneDestroyEntityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneDestroyEntityRsp)
  return false;
#undef DO_
}

void SceneDestroyEntityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneDestroyEntityRsp)
}

::google::protobuf::uint8* SceneDestroyEntityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneDestroyEntityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneDestroyEntityRsp)
  return target;
}

size_t SceneDestroyEntityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneDestroyEntityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneDestroyEntityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneDestroyEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneDestroyEntityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneDestroyEntityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneDestroyEntityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneDestroyEntityRsp)
    MergeFrom(*source);
  }
}

void SceneDestroyEntityRsp::MergeFrom(const SceneDestroyEntityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneDestroyEntityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void SceneDestroyEntityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneDestroyEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneDestroyEntityRsp::CopyFrom(const SceneDestroyEntityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneDestroyEntityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneDestroyEntityRsp::IsInitialized() const {
  return true;
}

void SceneDestroyEntityRsp::Swap(SceneDestroyEntityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneDestroyEntityRsp::InternalSwap(SceneDestroyEntityRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneDestroyEntityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneDestroyEntityRsp

// int32 retcode = 1;
void SceneDestroyEntityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneDestroyEntityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityRsp.retcode)
  return retcode_;
}
void SceneDestroyEntityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityRsp.retcode)
}

// uint32 entity_id = 2;
void SceneDestroyEntityRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SceneDestroyEntityRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneDestroyEntityRsp.entity_id)
  return entity_id_;
}
void SceneDestroyEntityRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneDestroyEntityRsp.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneForceUnlockNotify::kForceIdListFieldNumber;
const int SceneForceUnlockNotify::kIsAddFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneForceUnlockNotify::SceneForceUnlockNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneForceUnlockNotify)
}
SceneForceUnlockNotify::SceneForceUnlockNotify(const SceneForceUnlockNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      force_id_list_(from.force_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_add_ = from.is_add_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneForceUnlockNotify)
}

void SceneForceUnlockNotify::SharedCtor() {
  is_add_ = false;
  _cached_size_ = 0;
}

SceneForceUnlockNotify::~SceneForceUnlockNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneForceUnlockNotify)
  SharedDtor();
}

void SceneForceUnlockNotify::SharedDtor() {
}

void SceneForceUnlockNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneForceUnlockNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneForceUnlockNotify& SceneForceUnlockNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneForceUnlockNotify* SceneForceUnlockNotify::New(::google::protobuf::Arena* arena) const {
  SceneForceUnlockNotify* n = new SceneForceUnlockNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneForceUnlockNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneForceUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  force_id_list_.Clear();
  is_add_ = false;
  _internal_metadata_.Clear();
}

bool SceneForceUnlockNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneForceUnlockNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 force_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_force_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_force_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_add = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneForceUnlockNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneForceUnlockNotify)
  return false;
#undef DO_
}

void SceneForceUnlockNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneForceUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 force_id_list = 1;
  if (this->force_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _force_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->force_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->force_id_list(i), output);
  }

  // bool is_add = 2;
  if (this->is_add() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_add(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneForceUnlockNotify)
}

::google::protobuf::uint8* SceneForceUnlockNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneForceUnlockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 force_id_list = 1;
  if (this->force_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _force_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->force_id_list_, target);
  }

  // bool is_add = 2;
  if (this->is_add() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_add(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneForceUnlockNotify)
  return target;
}

size_t SceneForceUnlockNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneForceUnlockNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 force_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->force_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _force_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bool is_add = 2;
  if (this->is_add() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneForceUnlockNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneForceUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneForceUnlockNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneForceUnlockNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneForceUnlockNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneForceUnlockNotify)
    MergeFrom(*source);
  }
}

void SceneForceUnlockNotify::MergeFrom(const SceneForceUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneForceUnlockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  force_id_list_.MergeFrom(from.force_id_list_);
  if (from.is_add() != 0) {
    set_is_add(from.is_add());
  }
}

void SceneForceUnlockNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneForceUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneForceUnlockNotify::CopyFrom(const SceneForceUnlockNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneForceUnlockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneForceUnlockNotify::IsInitialized() const {
  return true;
}

void SceneForceUnlockNotify::Swap(SceneForceUnlockNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneForceUnlockNotify::InternalSwap(SceneForceUnlockNotify* other) {
  using std::swap;
  force_id_list_.InternalSwap(&other->force_id_list_);
  swap(is_add_, other->is_add_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneForceUnlockNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneForceUnlockNotify

// repeated uint32 force_id_list = 1;
int SceneForceUnlockNotify::force_id_list_size() const {
  return force_id_list_.size();
}
void SceneForceUnlockNotify::clear_force_id_list() {
  force_id_list_.Clear();
}
::google::protobuf::uint32 SceneForceUnlockNotify::force_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneForceUnlockNotify.force_id_list)
  return force_id_list_.Get(index);
}
void SceneForceUnlockNotify::set_force_id_list(int index, ::google::protobuf::uint32 value) {
  force_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneForceUnlockNotify.force_id_list)
}
void SceneForceUnlockNotify::add_force_id_list(::google::protobuf::uint32 value) {
  force_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneForceUnlockNotify.force_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneForceUnlockNotify::force_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneForceUnlockNotify.force_id_list)
  return force_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneForceUnlockNotify::mutable_force_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneForceUnlockNotify.force_id_list)
  return &force_id_list_;
}

// bool is_add = 2;
void SceneForceUnlockNotify::clear_is_add() {
  is_add_ = false;
}
bool SceneForceUnlockNotify::is_add() const {
  // @@protoc_insertion_point(field_get:proto.SceneForceUnlockNotify.is_add)
  return is_add_;
}
void SceneForceUnlockNotify::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneForceUnlockNotify.is_add)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneForceLockNotify::kForceIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneForceLockNotify::SceneForceLockNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneForceLockNotify)
}
SceneForceLockNotify::SceneForceLockNotify(const SceneForceLockNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      force_id_list_(from.force_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneForceLockNotify)
}

void SceneForceLockNotify::SharedCtor() {
  _cached_size_ = 0;
}

SceneForceLockNotify::~SceneForceLockNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneForceLockNotify)
  SharedDtor();
}

void SceneForceLockNotify::SharedDtor() {
}

void SceneForceLockNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneForceLockNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneForceLockNotify& SceneForceLockNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneForceLockNotify* SceneForceLockNotify::New(::google::protobuf::Arena* arena) const {
  SceneForceLockNotify* n = new SceneForceLockNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneForceLockNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneForceLockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  force_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool SceneForceLockNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneForceLockNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 force_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_force_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_force_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneForceLockNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneForceLockNotify)
  return false;
#undef DO_
}

void SceneForceLockNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneForceLockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 force_id_list = 1;
  if (this->force_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _force_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->force_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->force_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneForceLockNotify)
}

::google::protobuf::uint8* SceneForceLockNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneForceLockNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 force_id_list = 1;
  if (this->force_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _force_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->force_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneForceLockNotify)
  return target;
}

size_t SceneForceLockNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneForceLockNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 force_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->force_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _force_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneForceLockNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneForceLockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneForceLockNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneForceLockNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneForceLockNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneForceLockNotify)
    MergeFrom(*source);
  }
}

void SceneForceLockNotify::MergeFrom(const SceneForceLockNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneForceLockNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  force_id_list_.MergeFrom(from.force_id_list_);
}

void SceneForceLockNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneForceLockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneForceLockNotify::CopyFrom(const SceneForceLockNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneForceLockNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneForceLockNotify::IsInitialized() const {
  return true;
}

void SceneForceLockNotify::Swap(SceneForceLockNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneForceLockNotify::InternalSwap(SceneForceLockNotify* other) {
  using std::swap;
  force_id_list_.InternalSwap(&other->force_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneForceLockNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneForceLockNotify

// repeated uint32 force_id_list = 1;
int SceneForceLockNotify::force_id_list_size() const {
  return force_id_list_.size();
}
void SceneForceLockNotify::clear_force_id_list() {
  force_id_list_.Clear();
}
::google::protobuf::uint32 SceneForceLockNotify::force_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneForceLockNotify.force_id_list)
  return force_id_list_.Get(index);
}
void SceneForceLockNotify::set_force_id_list(int index, ::google::protobuf::uint32 value) {
  force_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneForceLockNotify.force_id_list)
}
void SceneForceLockNotify::add_force_id_list(::google::protobuf::uint32 value) {
  force_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneForceLockNotify.force_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneForceLockNotify::force_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneForceLockNotify.force_id_list)
  return force_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneForceLockNotify::mutable_force_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneForceLockNotify.force_id_list)
  return &force_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterWorldAreaReq::kAreaTypeFieldNumber;
const int EnterWorldAreaReq::kAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterWorldAreaReq::EnterWorldAreaReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterWorldAreaReq)
}
EnterWorldAreaReq::EnterWorldAreaReq(const EnterWorldAreaReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&area_type_, &from.area_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&area_id_) -
    reinterpret_cast<char*>(&area_type_)) + sizeof(area_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EnterWorldAreaReq)
}

void EnterWorldAreaReq::SharedCtor() {
  ::memset(&area_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&area_type_)) + sizeof(area_id_));
  _cached_size_ = 0;
}

EnterWorldAreaReq::~EnterWorldAreaReq() {
  // @@protoc_insertion_point(destructor:proto.EnterWorldAreaReq)
  SharedDtor();
}

void EnterWorldAreaReq::SharedDtor() {
}

void EnterWorldAreaReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterWorldAreaReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterWorldAreaReq& EnterWorldAreaReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterWorldAreaReq* EnterWorldAreaReq::New(::google::protobuf::Arena* arena) const {
  EnterWorldAreaReq* n = new EnterWorldAreaReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterWorldAreaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterWorldAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&area_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&area_type_)) + sizeof(area_id_));
  _internal_metadata_.Clear();
}

bool EnterWorldAreaReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterWorldAreaReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 area_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 area_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterWorldAreaReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterWorldAreaReq)
  return false;
#undef DO_
}

void EnterWorldAreaReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterWorldAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_type = 1;
  if (this->area_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->area_type(), output);
  }

  // uint32 area_id = 2;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterWorldAreaReq)
}

::google::protobuf::uint8* EnterWorldAreaReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterWorldAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_type = 1;
  if (this->area_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->area_type(), target);
  }

  // uint32 area_id = 2;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterWorldAreaReq)
  return target;
}

size_t EnterWorldAreaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterWorldAreaReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 area_type = 1;
  if (this->area_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_type());
  }

  // uint32 area_id = 2;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterWorldAreaReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterWorldAreaReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterWorldAreaReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterWorldAreaReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterWorldAreaReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterWorldAreaReq)
    MergeFrom(*source);
  }
}

void EnterWorldAreaReq::MergeFrom(const EnterWorldAreaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterWorldAreaReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.area_type() != 0) {
    set_area_type(from.area_type());
  }
  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
}

void EnterWorldAreaReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterWorldAreaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterWorldAreaReq::CopyFrom(const EnterWorldAreaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterWorldAreaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterWorldAreaReq::IsInitialized() const {
  return true;
}

void EnterWorldAreaReq::Swap(EnterWorldAreaReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterWorldAreaReq::InternalSwap(EnterWorldAreaReq* other) {
  using std::swap;
  swap(area_type_, other->area_type_);
  swap(area_id_, other->area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterWorldAreaReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterWorldAreaReq

// uint32 area_type = 1;
void EnterWorldAreaReq::clear_area_type() {
  area_type_ = 0u;
}
::google::protobuf::uint32 EnterWorldAreaReq::area_type() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaReq.area_type)
  return area_type_;
}
void EnterWorldAreaReq::set_area_type(::google::protobuf::uint32 value) {
  
  area_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaReq.area_type)
}

// uint32 area_id = 2;
void EnterWorldAreaReq::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 EnterWorldAreaReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaReq.area_id)
  return area_id_;
}
void EnterWorldAreaReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaReq.area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterWorldAreaRsp::kRetcodeFieldNumber;
const int EnterWorldAreaRsp::kAreaTypeFieldNumber;
const int EnterWorldAreaRsp::kAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterWorldAreaRsp::EnterWorldAreaRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterWorldAreaRsp)
}
EnterWorldAreaRsp::EnterWorldAreaRsp(const EnterWorldAreaRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&area_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(area_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EnterWorldAreaRsp)
}

void EnterWorldAreaRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(area_id_));
  _cached_size_ = 0;
}

EnterWorldAreaRsp::~EnterWorldAreaRsp() {
  // @@protoc_insertion_point(destructor:proto.EnterWorldAreaRsp)
  SharedDtor();
}

void EnterWorldAreaRsp::SharedDtor() {
}

void EnterWorldAreaRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterWorldAreaRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterWorldAreaRsp& EnterWorldAreaRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterWorldAreaRsp* EnterWorldAreaRsp::New(::google::protobuf::Arena* arena) const {
  EnterWorldAreaRsp* n = new EnterWorldAreaRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterWorldAreaRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterWorldAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(area_id_));
  _internal_metadata_.Clear();
}

bool EnterWorldAreaRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterWorldAreaRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 area_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 area_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterWorldAreaRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterWorldAreaRsp)
  return false;
#undef DO_
}

void EnterWorldAreaRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterWorldAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 area_type = 2;
  if (this->area_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->area_type(), output);
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterWorldAreaRsp)
}

::google::protobuf::uint8* EnterWorldAreaRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterWorldAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 area_type = 2;
  if (this->area_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->area_type(), target);
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterWorldAreaRsp)
  return target;
}

size_t EnterWorldAreaRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterWorldAreaRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 area_type = 2;
  if (this->area_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_type());
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterWorldAreaRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterWorldAreaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterWorldAreaRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterWorldAreaRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterWorldAreaRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterWorldAreaRsp)
    MergeFrom(*source);
  }
}

void EnterWorldAreaRsp::MergeFrom(const EnterWorldAreaRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterWorldAreaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.area_type() != 0) {
    set_area_type(from.area_type());
  }
  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
}

void EnterWorldAreaRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterWorldAreaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterWorldAreaRsp::CopyFrom(const EnterWorldAreaRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterWorldAreaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterWorldAreaRsp::IsInitialized() const {
  return true;
}

void EnterWorldAreaRsp::Swap(EnterWorldAreaRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterWorldAreaRsp::InternalSwap(EnterWorldAreaRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(area_type_, other->area_type_);
  swap(area_id_, other->area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterWorldAreaRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterWorldAreaRsp

// int32 retcode = 1;
void EnterWorldAreaRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 EnterWorldAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.retcode)
  return retcode_;
}
void EnterWorldAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.retcode)
}

// uint32 area_type = 2;
void EnterWorldAreaRsp::clear_area_type() {
  area_type_ = 0u;
}
::google::protobuf::uint32 EnterWorldAreaRsp::area_type() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.area_type)
  return area_type_;
}
void EnterWorldAreaRsp::set_area_type(::google::protobuf::uint32 value) {
  
  area_type_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.area_type)
}

// uint32 area_id = 3;
void EnterWorldAreaRsp::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 EnterWorldAreaRsp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldAreaRsp.area_id)
  return area_id_;
}
void EnterWorldAreaRsp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldAreaRsp.area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityForceSyncReq::kEntityIdFieldNumber;
const int EntityForceSyncReq::kMotionInfoFieldNumber;
const int EntityForceSyncReq::kSceneTimeFieldNumber;
const int EntityForceSyncReq::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityForceSyncReq::EntityForceSyncReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityForceSyncReq)
}
EntityForceSyncReq::EntityForceSyncReq(const EntityForceSyncReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_motion_info()) {
    motion_info_ = new ::proto::MotionInfo(*from.motion_info_);
  } else {
    motion_info_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&room_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(room_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EntityForceSyncReq)
}

void EntityForceSyncReq::SharedCtor() {
  ::memset(&motion_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&motion_info_)) + sizeof(room_id_));
  _cached_size_ = 0;
}

EntityForceSyncReq::~EntityForceSyncReq() {
  // @@protoc_insertion_point(destructor:proto.EntityForceSyncReq)
  SharedDtor();
}

void EntityForceSyncReq::SharedDtor() {
  if (this != internal_default_instance()) delete motion_info_;
}

void EntityForceSyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityForceSyncReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityForceSyncReq& EntityForceSyncReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityForceSyncReq* EntityForceSyncReq::New(::google::protobuf::Arena* arena) const {
  EntityForceSyncReq* n = new EntityForceSyncReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityForceSyncReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityForceSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) {
    delete motion_info_;
  }
  motion_info_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&room_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(room_id_));
  _internal_metadata_.Clear();
}

bool EntityForceSyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityForceSyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionInfo motion_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_motion_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 room_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityForceSyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityForceSyncReq)
  return false;
#undef DO_
}

void EntityForceSyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityForceSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->motion_info_, output);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_time(), output);
  }

  // uint32 room_id = 4;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->room_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityForceSyncReq)
}

::google::protobuf::uint8* EntityForceSyncReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityForceSyncReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->motion_info_, deterministic, target);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_time(), target);
  }

  // uint32 room_id = 4;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->room_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityForceSyncReq)
  return target;
}

size_t EntityForceSyncReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityForceSyncReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->motion_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  // uint32 room_id = 4;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityForceSyncReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityForceSyncReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityForceSyncReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityForceSyncReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityForceSyncReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityForceSyncReq)
    MergeFrom(*source);
  }
}

void EntityForceSyncReq::MergeFrom(const EntityForceSyncReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityForceSyncReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_motion_info()) {
    mutable_motion_info()->::proto::MotionInfo::MergeFrom(from.motion_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
}

void EntityForceSyncReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityForceSyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityForceSyncReq::CopyFrom(const EntityForceSyncReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityForceSyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityForceSyncReq::IsInitialized() const {
  return true;
}

void EntityForceSyncReq::Swap(EntityForceSyncReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityForceSyncReq::InternalSwap(EntityForceSyncReq* other) {
  using std::swap;
  swap(motion_info_, other->motion_info_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  swap(room_id_, other->room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityForceSyncReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityForceSyncReq

// uint32 entity_id = 1;
void EntityForceSyncReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EntityForceSyncReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.entity_id)
  return entity_id_;
}
void EntityForceSyncReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.entity_id)
}

// .proto.MotionInfo motion_info = 2;
bool EntityForceSyncReq::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
void EntityForceSyncReq::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
const ::proto::MotionInfo& EntityForceSyncReq::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
::proto::MotionInfo* EntityForceSyncReq::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityForceSyncReq.motion_info)
  return motion_info_;
}
::proto::MotionInfo* EntityForceSyncReq::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.EntityForceSyncReq.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
void EntityForceSyncReq::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityForceSyncReq.motion_info)
}

// uint32 scene_time = 3;
void EntityForceSyncReq::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 EntityForceSyncReq::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.scene_time)
  return scene_time_;
}
void EntityForceSyncReq::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.scene_time)
}

// uint32 room_id = 4;
void EntityForceSyncReq::clear_room_id() {
  room_id_ = 0u;
}
::google::protobuf::uint32 EntityForceSyncReq::room_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncReq.room_id)
  return room_id_;
}
void EntityForceSyncReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncReq.room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityForceSyncRsp::kRetcodeFieldNumber;
const int EntityForceSyncRsp::kEntityIdFieldNumber;
const int EntityForceSyncRsp::kFailMotionFieldNumber;
const int EntityForceSyncRsp::kSceneTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityForceSyncRsp::EntityForceSyncRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityForceSyncRsp)
}
EntityForceSyncRsp::EntityForceSyncRsp(const EntityForceSyncRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fail_motion()) {
    fail_motion_ = new ::proto::MotionInfo(*from.fail_motion_);
  } else {
    fail_motion_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_time_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(scene_time_));
  // @@protoc_insertion_point(copy_constructor:proto.EntityForceSyncRsp)
}

void EntityForceSyncRsp::SharedCtor() {
  ::memset(&fail_motion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&fail_motion_)) + sizeof(scene_time_));
  _cached_size_ = 0;
}

EntityForceSyncRsp::~EntityForceSyncRsp() {
  // @@protoc_insertion_point(destructor:proto.EntityForceSyncRsp)
  SharedDtor();
}

void EntityForceSyncRsp::SharedDtor() {
  if (this != internal_default_instance()) delete fail_motion_;
}

void EntityForceSyncRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityForceSyncRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityForceSyncRsp& EntityForceSyncRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityForceSyncRsp* EntityForceSyncRsp::New(::google::protobuf::Arena* arena) const {
  EntityForceSyncRsp* n = new EntityForceSyncRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityForceSyncRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityForceSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) {
    delete fail_motion_;
  }
  fail_motion_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(scene_time_));
  _internal_metadata_.Clear();
}

bool EntityForceSyncRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityForceSyncRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionInfo fail_motion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fail_motion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityForceSyncRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityForceSyncRsp)
  return false;
#undef DO_
}

void EntityForceSyncRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityForceSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fail_motion_, output);
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scene_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityForceSyncRsp)
}

::google::protobuf::uint8* EntityForceSyncRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityForceSyncRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->fail_motion_, deterministic, target);
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scene_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityForceSyncRsp)
  return target;
}

size_t EntityForceSyncRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityForceSyncRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fail_motion_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityForceSyncRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityForceSyncRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityForceSyncRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityForceSyncRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityForceSyncRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityForceSyncRsp)
    MergeFrom(*source);
  }
}

void EntityForceSyncRsp::MergeFrom(const EntityForceSyncRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityForceSyncRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fail_motion()) {
    mutable_fail_motion()->::proto::MotionInfo::MergeFrom(from.fail_motion());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
}

void EntityForceSyncRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityForceSyncRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityForceSyncRsp::CopyFrom(const EntityForceSyncRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityForceSyncRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityForceSyncRsp::IsInitialized() const {
  return true;
}

void EntityForceSyncRsp::Swap(EntityForceSyncRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityForceSyncRsp::InternalSwap(EntityForceSyncRsp* other) {
  using std::swap;
  swap(fail_motion_, other->fail_motion_);
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityForceSyncRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityForceSyncRsp

// int32 retcode = 1;
void EntityForceSyncRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 EntityForceSyncRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.retcode)
  return retcode_;
}
void EntityForceSyncRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.retcode)
}

// uint32 entity_id = 2;
void EntityForceSyncRsp::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EntityForceSyncRsp::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.entity_id)
  return entity_id_;
}
void EntityForceSyncRsp::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.entity_id)
}

// .proto.MotionInfo fail_motion = 3;
bool EntityForceSyncRsp::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
void EntityForceSyncRsp::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
const ::proto::MotionInfo& EntityForceSyncRsp::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
::proto::MotionInfo* EntityForceSyncRsp::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityForceSyncRsp.fail_motion)
  return fail_motion_;
}
::proto::MotionInfo* EntityForceSyncRsp::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.EntityForceSyncRsp.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
void EntityForceSyncRsp::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityForceSyncRsp.fail_motion)
}

// uint32 scene_time = 4;
void EntityForceSyncRsp::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 EntityForceSyncRsp::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityForceSyncRsp.scene_time)
  return scene_time_;
}
void EntityForceSyncRsp::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityForceSyncRsp.scene_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneAreaExploreNotify::kAreaIdFieldNumber;
const int SceneAreaExploreNotify::kExplorePercentFieldNumber;
const int SceneAreaExploreNotify::kEventIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAreaExploreNotify::SceneAreaExploreNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAreaExploreNotify)
}
SceneAreaExploreNotify::SceneAreaExploreNotify(const SceneAreaExploreNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&area_id_, &from.area_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&event_id_) -
    reinterpret_cast<char*>(&area_id_)) + sizeof(event_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneAreaExploreNotify)
}

void SceneAreaExploreNotify::SharedCtor() {
  ::memset(&area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_id_) -
      reinterpret_cast<char*>(&area_id_)) + sizeof(event_id_));
  _cached_size_ = 0;
}

SceneAreaExploreNotify::~SceneAreaExploreNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneAreaExploreNotify)
  SharedDtor();
}

void SceneAreaExploreNotify::SharedDtor() {
}

void SceneAreaExploreNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAreaExploreNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAreaExploreNotify& SceneAreaExploreNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAreaExploreNotify* SceneAreaExploreNotify::New(::google::protobuf::Arena* arena) const {
  SceneAreaExploreNotify* n = new SceneAreaExploreNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAreaExploreNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAreaExploreNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&area_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&event_id_) -
      reinterpret_cast<char*>(&area_id_)) + sizeof(event_id_));
  _internal_metadata_.Clear();
}

bool SceneAreaExploreNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAreaExploreNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float explore_percent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &explore_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 event_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAreaExploreNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAreaExploreNotify)
  return false;
#undef DO_
}

void SceneAreaExploreNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAreaExploreNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->area_id(), output);
  }

  // float explore_percent = 2;
  if (this->explore_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->explore_percent(), output);
  }

  // uint32 event_id = 3;
  if (this->event_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->event_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAreaExploreNotify)
}

::google::protobuf::uint8* SceneAreaExploreNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAreaExploreNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->area_id(), target);
  }

  // float explore_percent = 2;
  if (this->explore_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->explore_percent(), target);
  }

  // uint32 event_id = 3;
  if (this->event_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->event_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAreaExploreNotify)
  return target;
}

size_t SceneAreaExploreNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAreaExploreNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  // float explore_percent = 2;
  if (this->explore_percent() != 0) {
    total_size += 1 + 4;
  }

  // uint32 event_id = 3;
  if (this->event_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->event_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAreaExploreNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAreaExploreNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAreaExploreNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAreaExploreNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAreaExploreNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAreaExploreNotify)
    MergeFrom(*source);
  }
}

void SceneAreaExploreNotify::MergeFrom(const SceneAreaExploreNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAreaExploreNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
  if (from.explore_percent() != 0) {
    set_explore_percent(from.explore_percent());
  }
  if (from.event_id() != 0) {
    set_event_id(from.event_id());
  }
}

void SceneAreaExploreNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAreaExploreNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAreaExploreNotify::CopyFrom(const SceneAreaExploreNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAreaExploreNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAreaExploreNotify::IsInitialized() const {
  return true;
}

void SceneAreaExploreNotify::Swap(SceneAreaExploreNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAreaExploreNotify::InternalSwap(SceneAreaExploreNotify* other) {
  using std::swap;
  swap(area_id_, other->area_id_);
  swap(explore_percent_, other->explore_percent_);
  swap(event_id_, other->event_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAreaExploreNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAreaExploreNotify

// uint32 area_id = 1;
void SceneAreaExploreNotify::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 SceneAreaExploreNotify::area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaExploreNotify.area_id)
  return area_id_;
}
void SceneAreaExploreNotify::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaExploreNotify.area_id)
}

// float explore_percent = 2;
void SceneAreaExploreNotify::clear_explore_percent() {
  explore_percent_ = 0;
}
float SceneAreaExploreNotify::explore_percent() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaExploreNotify.explore_percent)
  return explore_percent_;
}
void SceneAreaExploreNotify::set_explore_percent(float value) {
  
  explore_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaExploreNotify.explore_percent)
}

// uint32 event_id = 3;
void SceneAreaExploreNotify::clear_event_id() {
  event_id_ = 0u;
}
::google::protobuf::uint32 SceneAreaExploreNotify::event_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaExploreNotify.event_id)
  return event_id_;
}
void SceneAreaExploreNotify::set_event_id(::google::protobuf::uint32 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaExploreNotify.event_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneGetAreaExplorePercentReq::kAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneGetAreaExplorePercentReq::SceneGetAreaExplorePercentReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneGetAreaExplorePercentReq)
}
SceneGetAreaExplorePercentReq::SceneGetAreaExplorePercentReq(const SceneGetAreaExplorePercentReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  area_id_ = from.area_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneGetAreaExplorePercentReq)
}

void SceneGetAreaExplorePercentReq::SharedCtor() {
  area_id_ = 0u;
  _cached_size_ = 0;
}

SceneGetAreaExplorePercentReq::~SceneGetAreaExplorePercentReq() {
  // @@protoc_insertion_point(destructor:proto.SceneGetAreaExplorePercentReq)
  SharedDtor();
}

void SceneGetAreaExplorePercentReq::SharedDtor() {
}

void SceneGetAreaExplorePercentReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneGetAreaExplorePercentReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneGetAreaExplorePercentReq& SceneGetAreaExplorePercentReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneGetAreaExplorePercentReq* SceneGetAreaExplorePercentReq::New(::google::protobuf::Arena* arena) const {
  SceneGetAreaExplorePercentReq* n = new SceneGetAreaExplorePercentReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneGetAreaExplorePercentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneGetAreaExplorePercentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  area_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneGetAreaExplorePercentReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneGetAreaExplorePercentReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneGetAreaExplorePercentReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneGetAreaExplorePercentReq)
  return false;
#undef DO_
}

void SceneGetAreaExplorePercentReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneGetAreaExplorePercentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneGetAreaExplorePercentReq)
}

::google::protobuf::uint8* SceneGetAreaExplorePercentReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneGetAreaExplorePercentReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneGetAreaExplorePercentReq)
  return target;
}

size_t SceneGetAreaExplorePercentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneGetAreaExplorePercentReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 area_id = 1;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneGetAreaExplorePercentReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneGetAreaExplorePercentReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneGetAreaExplorePercentReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneGetAreaExplorePercentReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneGetAreaExplorePercentReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneGetAreaExplorePercentReq)
    MergeFrom(*source);
  }
}

void SceneGetAreaExplorePercentReq::MergeFrom(const SceneGetAreaExplorePercentReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneGetAreaExplorePercentReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
}

void SceneGetAreaExplorePercentReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneGetAreaExplorePercentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneGetAreaExplorePercentReq::CopyFrom(const SceneGetAreaExplorePercentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneGetAreaExplorePercentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneGetAreaExplorePercentReq::IsInitialized() const {
  return true;
}

void SceneGetAreaExplorePercentReq::Swap(SceneGetAreaExplorePercentReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneGetAreaExplorePercentReq::InternalSwap(SceneGetAreaExplorePercentReq* other) {
  using std::swap;
  swap(area_id_, other->area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneGetAreaExplorePercentReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneGetAreaExplorePercentReq

// uint32 area_id = 1;
void SceneGetAreaExplorePercentReq::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 SceneGetAreaExplorePercentReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGetAreaExplorePercentReq.area_id)
  return area_id_;
}
void SceneGetAreaExplorePercentReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGetAreaExplorePercentReq.area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneGetAreaExplorePercentRsp::kRetcodeFieldNumber;
const int SceneGetAreaExplorePercentRsp::kExplorePercentFieldNumber;
const int SceneGetAreaExplorePercentRsp::kAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneGetAreaExplorePercentRsp::SceneGetAreaExplorePercentRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneGetAreaExplorePercentRsp)
}
SceneGetAreaExplorePercentRsp::SceneGetAreaExplorePercentRsp(const SceneGetAreaExplorePercentRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&area_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(area_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneGetAreaExplorePercentRsp)
}

void SceneGetAreaExplorePercentRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(area_id_));
  _cached_size_ = 0;
}

SceneGetAreaExplorePercentRsp::~SceneGetAreaExplorePercentRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneGetAreaExplorePercentRsp)
  SharedDtor();
}

void SceneGetAreaExplorePercentRsp::SharedDtor() {
}

void SceneGetAreaExplorePercentRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneGetAreaExplorePercentRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneGetAreaExplorePercentRsp& SceneGetAreaExplorePercentRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneGetAreaExplorePercentRsp* SceneGetAreaExplorePercentRsp::New(::google::protobuf::Arena* arena) const {
  SceneGetAreaExplorePercentRsp* n = new SceneGetAreaExplorePercentRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneGetAreaExplorePercentRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneGetAreaExplorePercentRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(area_id_));
  _internal_metadata_.Clear();
}

bool SceneGetAreaExplorePercentRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneGetAreaExplorePercentRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float explore_percent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &explore_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 area_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneGetAreaExplorePercentRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneGetAreaExplorePercentRsp)
  return false;
#undef DO_
}

void SceneGetAreaExplorePercentRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneGetAreaExplorePercentRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // float explore_percent = 2;
  if (this->explore_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->explore_percent(), output);
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneGetAreaExplorePercentRsp)
}

::google::protobuf::uint8* SceneGetAreaExplorePercentRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneGetAreaExplorePercentRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // float explore_percent = 2;
  if (this->explore_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->explore_percent(), target);
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneGetAreaExplorePercentRsp)
  return target;
}

size_t SceneGetAreaExplorePercentRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneGetAreaExplorePercentRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // float explore_percent = 2;
  if (this->explore_percent() != 0) {
    total_size += 1 + 4;
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneGetAreaExplorePercentRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneGetAreaExplorePercentRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneGetAreaExplorePercentRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneGetAreaExplorePercentRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneGetAreaExplorePercentRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneGetAreaExplorePercentRsp)
    MergeFrom(*source);
  }
}

void SceneGetAreaExplorePercentRsp::MergeFrom(const SceneGetAreaExplorePercentRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneGetAreaExplorePercentRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.explore_percent() != 0) {
    set_explore_percent(from.explore_percent());
  }
  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
}

void SceneGetAreaExplorePercentRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneGetAreaExplorePercentRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneGetAreaExplorePercentRsp::CopyFrom(const SceneGetAreaExplorePercentRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneGetAreaExplorePercentRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneGetAreaExplorePercentRsp::IsInitialized() const {
  return true;
}

void SceneGetAreaExplorePercentRsp::Swap(SceneGetAreaExplorePercentRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneGetAreaExplorePercentRsp::InternalSwap(SceneGetAreaExplorePercentRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(explore_percent_, other->explore_percent_);
  swap(area_id_, other->area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneGetAreaExplorePercentRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneGetAreaExplorePercentRsp

// int32 retcode = 1;
void SceneGetAreaExplorePercentRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneGetAreaExplorePercentRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneGetAreaExplorePercentRsp.retcode)
  return retcode_;
}
void SceneGetAreaExplorePercentRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGetAreaExplorePercentRsp.retcode)
}

// float explore_percent = 2;
void SceneGetAreaExplorePercentRsp::clear_explore_percent() {
  explore_percent_ = 0;
}
float SceneGetAreaExplorePercentRsp::explore_percent() const {
  // @@protoc_insertion_point(field_get:proto.SceneGetAreaExplorePercentRsp.explore_percent)
  return explore_percent_;
}
void SceneGetAreaExplorePercentRsp::set_explore_percent(float value) {
  
  explore_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGetAreaExplorePercentRsp.explore_percent)
}

// uint32 area_id = 3;
void SceneGetAreaExplorePercentRsp::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 SceneGetAreaExplorePercentRsp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneGetAreaExplorePercentRsp.area_id)
  return area_id_;
}
void SceneGetAreaExplorePercentRsp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneGetAreaExplorePercentRsp.area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientTransmitReq::kPosFieldNumber;
const int ClientTransmitReq::kRotFieldNumber;
const int ClientTransmitReq::kReasonFieldNumber;
const int ClientTransmitReq::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientTransmitReq::ClientTransmitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientTransmitReq)
}
ClientTransmitReq::ClientTransmitReq(const ClientTransmitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  ::memcpy(&reason_, &from.reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&reason_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientTransmitReq)
}

void ClientTransmitReq::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

ClientTransmitReq::~ClientTransmitReq() {
  // @@protoc_insertion_point(destructor:proto.ClientTransmitReq)
  SharedDtor();
}

void ClientTransmitReq::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rot_;
}

void ClientTransmitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientTransmitReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientTransmitReq& ClientTransmitReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientTransmitReq* ClientTransmitReq::New(::google::protobuf::Arena* arena) const {
  ClientTransmitReq* n = new ClientTransmitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientTransmitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientTransmitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool ClientTransmitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientTransmitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TransmitReason reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::TransmitReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientTransmitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientTransmitReq)
  return false;
#undef DO_
}

void ClientTransmitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientTransmitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rot_, output);
  }

  // .proto.TransmitReason reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reason(), output);
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientTransmitReq)
}

::google::protobuf::uint8* ClientTransmitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientTransmitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, deterministic, target);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rot_, deterministic, target);
  }

  // .proto.TransmitReason reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->reason(), target);
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientTransmitReq)
  return target;
}

size_t ClientTransmitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientTransmitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector rot = 2;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // .proto.TransmitReason reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  // uint32 scene_id = 4;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientTransmitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientTransmitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientTransmitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientTransmitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientTransmitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientTransmitReq)
    MergeFrom(*source);
  }
}

void ClientTransmitReq::MergeFrom(const ClientTransmitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientTransmitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ClientTransmitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientTransmitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientTransmitReq::CopyFrom(const ClientTransmitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientTransmitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientTransmitReq::IsInitialized() const {
  return true;
}

void ClientTransmitReq::Swap(ClientTransmitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientTransmitReq::InternalSwap(ClientTransmitReq* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rot_, other->rot_);
  swap(reason_, other->reason_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientTransmitReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientTransmitReq

// .proto.Vector pos = 1;
bool ClientTransmitReq::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void ClientTransmitReq::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& ClientTransmitReq::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* ClientTransmitReq::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientTransmitReq.pos)
  return pos_;
}
::proto::Vector* ClientTransmitReq::release_pos() {
  // @@protoc_insertion_point(field_release:proto.ClientTransmitReq.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void ClientTransmitReq::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientTransmitReq.pos)
}

// .proto.Vector rot = 2;
bool ClientTransmitReq::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void ClientTransmitReq::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& ClientTransmitReq::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* ClientTransmitReq::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientTransmitReq.rot)
  return rot_;
}
::proto::Vector* ClientTransmitReq::release_rot() {
  // @@protoc_insertion_point(field_release:proto.ClientTransmitReq.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void ClientTransmitReq::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientTransmitReq.rot)
}

// .proto.TransmitReason reason = 3;
void ClientTransmitReq::clear_reason() {
  reason_ = 0;
}
::proto::TransmitReason ClientTransmitReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.reason)
  return static_cast< ::proto::TransmitReason >(reason_);
}
void ClientTransmitReq::set_reason(::proto::TransmitReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitReq.reason)
}

// uint32 scene_id = 4;
void ClientTransmitReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ClientTransmitReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitReq.scene_id)
  return scene_id_;
}
void ClientTransmitReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitReq.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientTransmitRsp::kRetcodeFieldNumber;
const int ClientTransmitRsp::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientTransmitRsp::ClientTransmitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientTransmitRsp)
}
ClientTransmitRsp::ClientTransmitRsp(const ClientTransmitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientTransmitRsp)
}

void ClientTransmitRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reason_));
  _cached_size_ = 0;
}

ClientTransmitRsp::~ClientTransmitRsp() {
  // @@protoc_insertion_point(destructor:proto.ClientTransmitRsp)
  SharedDtor();
}

void ClientTransmitRsp::SharedDtor() {
}

void ClientTransmitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientTransmitRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientTransmitRsp& ClientTransmitRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientTransmitRsp* ClientTransmitRsp::New(::google::protobuf::Arena* arena) const {
  ClientTransmitRsp* n = new ClientTransmitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientTransmitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientTransmitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool ClientTransmitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientTransmitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TransmitReason reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::TransmitReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientTransmitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientTransmitRsp)
  return false;
#undef DO_
}

void ClientTransmitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientTransmitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.TransmitReason reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientTransmitRsp)
}

::google::protobuf::uint8* ClientTransmitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientTransmitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.TransmitReason reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientTransmitRsp)
  return target;
}

size_t ClientTransmitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientTransmitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.TransmitReason reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientTransmitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientTransmitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientTransmitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientTransmitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientTransmitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientTransmitRsp)
    MergeFrom(*source);
  }
}

void ClientTransmitRsp::MergeFrom(const ClientTransmitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientTransmitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void ClientTransmitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientTransmitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientTransmitRsp::CopyFrom(const ClientTransmitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientTransmitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientTransmitRsp::IsInitialized() const {
  return true;
}

void ClientTransmitRsp::Swap(ClientTransmitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientTransmitRsp::InternalSwap(ClientTransmitRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientTransmitRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientTransmitRsp

// int32 retcode = 1;
void ClientTransmitRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ClientTransmitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitRsp.retcode)
  return retcode_;
}
void ClientTransmitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitRsp.retcode)
}

// .proto.TransmitReason reason = 2;
void ClientTransmitRsp::clear_reason() {
  reason_ = 0;
}
::proto::TransmitReason ClientTransmitRsp::reason() const {
  // @@protoc_insertion_point(field_get:proto.ClientTransmitRsp.reason)
  return static_cast< ::proto::TransmitReason >(reason_);
}
void ClientTransmitRsp::set_reason(::proto::TransmitReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTransmitRsp.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneWeatherAreaNotify::kWeatherGadgetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneWeatherAreaNotify::EnterSceneWeatherAreaNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterSceneWeatherAreaNotify)
}
EnterSceneWeatherAreaNotify::EnterSceneWeatherAreaNotify(const EnterSceneWeatherAreaNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weather_gadget_id_ = from.weather_gadget_id_;
  // @@protoc_insertion_point(copy_constructor:proto.EnterSceneWeatherAreaNotify)
}

void EnterSceneWeatherAreaNotify::SharedCtor() {
  weather_gadget_id_ = 0u;
  _cached_size_ = 0;
}

EnterSceneWeatherAreaNotify::~EnterSceneWeatherAreaNotify() {
  // @@protoc_insertion_point(destructor:proto.EnterSceneWeatherAreaNotify)
  SharedDtor();
}

void EnterSceneWeatherAreaNotify::SharedDtor() {
}

void EnterSceneWeatherAreaNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneWeatherAreaNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneWeatherAreaNotify& EnterSceneWeatherAreaNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterSceneWeatherAreaNotify* EnterSceneWeatherAreaNotify::New(::google::protobuf::Arena* arena) const {
  EnterSceneWeatherAreaNotify* n = new EnterSceneWeatherAreaNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneWeatherAreaNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterSceneWeatherAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weather_gadget_id_ = 0u;
  _internal_metadata_.Clear();
}

bool EnterSceneWeatherAreaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterSceneWeatherAreaNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 weather_gadget_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weather_gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterSceneWeatherAreaNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterSceneWeatherAreaNotify)
  return false;
#undef DO_
}

void EnterSceneWeatherAreaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterSceneWeatherAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->weather_gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterSceneWeatherAreaNotify)
}

::google::protobuf::uint8* EnterSceneWeatherAreaNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterSceneWeatherAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->weather_gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterSceneWeatherAreaNotify)
  return target;
}

size_t EnterSceneWeatherAreaNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterSceneWeatherAreaNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weather_gadget_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneWeatherAreaNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterSceneWeatherAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneWeatherAreaNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneWeatherAreaNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterSceneWeatherAreaNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterSceneWeatherAreaNotify)
    MergeFrom(*source);
  }
}

void EnterSceneWeatherAreaNotify::MergeFrom(const EnterSceneWeatherAreaNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterSceneWeatherAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weather_gadget_id() != 0) {
    set_weather_gadget_id(from.weather_gadget_id());
  }
}

void EnterSceneWeatherAreaNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterSceneWeatherAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneWeatherAreaNotify::CopyFrom(const EnterSceneWeatherAreaNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterSceneWeatherAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneWeatherAreaNotify::IsInitialized() const {
  return true;
}

void EnterSceneWeatherAreaNotify::Swap(EnterSceneWeatherAreaNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneWeatherAreaNotify::InternalSwap(EnterSceneWeatherAreaNotify* other) {
  using std::swap;
  swap(weather_gadget_id_, other->weather_gadget_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneWeatherAreaNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneWeatherAreaNotify

// uint32 weather_gadget_id = 1;
void EnterSceneWeatherAreaNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
::google::protobuf::uint32 EnterSceneWeatherAreaNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneWeatherAreaNotify.weather_gadget_id)
  return weather_gadget_id_;
}
void EnterSceneWeatherAreaNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneWeatherAreaNotify.weather_gadget_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitSceneWeatherAreaNotify::kWeatherGadgetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitSceneWeatherAreaNotify::ExitSceneWeatherAreaNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExitSceneWeatherAreaNotify)
}
ExitSceneWeatherAreaNotify::ExitSceneWeatherAreaNotify(const ExitSceneWeatherAreaNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weather_gadget_id_ = from.weather_gadget_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ExitSceneWeatherAreaNotify)
}

void ExitSceneWeatherAreaNotify::SharedCtor() {
  weather_gadget_id_ = 0u;
  _cached_size_ = 0;
}

ExitSceneWeatherAreaNotify::~ExitSceneWeatherAreaNotify() {
  // @@protoc_insertion_point(destructor:proto.ExitSceneWeatherAreaNotify)
  SharedDtor();
}

void ExitSceneWeatherAreaNotify::SharedDtor() {
}

void ExitSceneWeatherAreaNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitSceneWeatherAreaNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitSceneWeatherAreaNotify& ExitSceneWeatherAreaNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitSceneWeatherAreaNotify* ExitSceneWeatherAreaNotify::New(::google::protobuf::Arena* arena) const {
  ExitSceneWeatherAreaNotify* n = new ExitSceneWeatherAreaNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitSceneWeatherAreaNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExitSceneWeatherAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weather_gadget_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ExitSceneWeatherAreaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExitSceneWeatherAreaNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 weather_gadget_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weather_gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExitSceneWeatherAreaNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExitSceneWeatherAreaNotify)
  return false;
#undef DO_
}

void ExitSceneWeatherAreaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExitSceneWeatherAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->weather_gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExitSceneWeatherAreaNotify)
}

::google::protobuf::uint8* ExitSceneWeatherAreaNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExitSceneWeatherAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->weather_gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExitSceneWeatherAreaNotify)
  return target;
}

size_t ExitSceneWeatherAreaNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExitSceneWeatherAreaNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weather_gadget_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitSceneWeatherAreaNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExitSceneWeatherAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitSceneWeatherAreaNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitSceneWeatherAreaNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExitSceneWeatherAreaNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExitSceneWeatherAreaNotify)
    MergeFrom(*source);
  }
}

void ExitSceneWeatherAreaNotify::MergeFrom(const ExitSceneWeatherAreaNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExitSceneWeatherAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weather_gadget_id() != 0) {
    set_weather_gadget_id(from.weather_gadget_id());
  }
}

void ExitSceneWeatherAreaNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExitSceneWeatherAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitSceneWeatherAreaNotify::CopyFrom(const ExitSceneWeatherAreaNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExitSceneWeatherAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitSceneWeatherAreaNotify::IsInitialized() const {
  return true;
}

void ExitSceneWeatherAreaNotify::Swap(ExitSceneWeatherAreaNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitSceneWeatherAreaNotify::InternalSwap(ExitSceneWeatherAreaNotify* other) {
  using std::swap;
  swap(weather_gadget_id_, other->weather_gadget_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitSceneWeatherAreaNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitSceneWeatherAreaNotify

// uint32 weather_gadget_id = 1;
void ExitSceneWeatherAreaNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
::google::protobuf::uint32 ExitSceneWeatherAreaNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.ExitSceneWeatherAreaNotify.weather_gadget_id)
  return weather_gadget_id_;
}
void ExitSceneWeatherAreaNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExitSceneWeatherAreaNotify.weather_gadget_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SceneAreaWeatherNotify::SceneAreaWeatherNotify_WeatherValueMapEntry::SceneAreaWeatherNotify_WeatherValueMapEntry() {}
SceneAreaWeatherNotify::SceneAreaWeatherNotify_WeatherValueMapEntry::SceneAreaWeatherNotify_WeatherValueMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SceneAreaWeatherNotify::SceneAreaWeatherNotify_WeatherValueMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[44];
}
void SceneAreaWeatherNotify::SceneAreaWeatherNotify_WeatherValueMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SceneAreaWeatherNotify::SceneAreaWeatherNotify_WeatherValueMapEntry::MergeFrom(const SceneAreaWeatherNotify_WeatherValueMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneAreaWeatherNotify::kWeatherGadgetIdFieldNumber;
const int SceneAreaWeatherNotify::kWeatherValueMapFieldNumber;
const int SceneAreaWeatherNotify::kWeatherAreaIdFieldNumber;
const int SceneAreaWeatherNotify::kClimateTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAreaWeatherNotify::SceneAreaWeatherNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAreaWeatherNotify)
}
SceneAreaWeatherNotify::SceneAreaWeatherNotify(const SceneAreaWeatherNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weather_value_map_.MergeFrom(from.weather_value_map_);
  ::memcpy(&weather_gadget_id_, &from.weather_gadget_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&climate_type_) -
    reinterpret_cast<char*>(&weather_gadget_id_)) + sizeof(climate_type_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneAreaWeatherNotify)
}

void SceneAreaWeatherNotify::SharedCtor() {
  ::memset(&weather_gadget_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&climate_type_) -
      reinterpret_cast<char*>(&weather_gadget_id_)) + sizeof(climate_type_));
  _cached_size_ = 0;
}

SceneAreaWeatherNotify::~SceneAreaWeatherNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneAreaWeatherNotify)
  SharedDtor();
}

void SceneAreaWeatherNotify::SharedDtor() {
}

void SceneAreaWeatherNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAreaWeatherNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAreaWeatherNotify& SceneAreaWeatherNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAreaWeatherNotify* SceneAreaWeatherNotify::New(::google::protobuf::Arena* arena) const {
  SceneAreaWeatherNotify* n = new SceneAreaWeatherNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAreaWeatherNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAreaWeatherNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weather_value_map_.Clear();
  ::memset(&weather_gadget_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&climate_type_) -
      reinterpret_cast<char*>(&weather_gadget_id_)) + sizeof(climate_type_));
  _internal_metadata_.Clear();
}

bool SceneAreaWeatherNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAreaWeatherNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 weather_gadget_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weather_gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, string> weather_value_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          SceneAreaWeatherNotify_WeatherValueMapEntry::Parser< ::google::protobuf::internal::MapField<
              SceneAreaWeatherNotify_WeatherValueMapEntry,
              ::google::protobuf::uint32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string > > parser(&weather_value_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SceneAreaWeatherNotify.WeatherValueMapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 weather_area_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weather_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 climate_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &climate_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAreaWeatherNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAreaWeatherNotify)
  return false;
#undef DO_
}

void SceneAreaWeatherNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAreaWeatherNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->weather_gadget_id(), output);
  }

  // map<uint32, string> weather_value_map = 2;
  if (!this->weather_value_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.SceneAreaWeatherNotify.WeatherValueMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->weather_value_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->weather_value_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->weather_value_map().begin();
          it != this->weather_value_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAreaWeatherNotify_WeatherValueMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(weather_value_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAreaWeatherNotify_WeatherValueMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->weather_value_map().begin();
          it != this->weather_value_map().end(); ++it) {
        entry.reset(weather_value_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 weather_area_id = 3;
  if (this->weather_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->weather_area_id(), output);
  }

  // uint32 climate_type = 4;
  if (this->climate_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->climate_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAreaWeatherNotify)
}

::google::protobuf::uint8* SceneAreaWeatherNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAreaWeatherNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->weather_gadget_id(), target);
  }

  // map<uint32, string> weather_value_map = 2;
  if (!this->weather_value_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.SceneAreaWeatherNotify.WeatherValueMapEntry.value");
      }
    };

    if (deterministic &&
        this->weather_value_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->weather_value_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->weather_value_map().begin();
          it != this->weather_value_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SceneAreaWeatherNotify_WeatherValueMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(weather_value_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<SceneAreaWeatherNotify_WeatherValueMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->weather_value_map().begin();
          it != this->weather_value_map().end(); ++it) {
        entry.reset(weather_value_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 weather_area_id = 3;
  if (this->weather_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->weather_area_id(), target);
  }

  // uint32 climate_type = 4;
  if (this->climate_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->climate_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAreaWeatherNotify)
  return target;
}

size_t SceneAreaWeatherNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAreaWeatherNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, string> weather_value_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->weather_value_map_size());
  {
    ::google::protobuf::scoped_ptr<SceneAreaWeatherNotify_WeatherValueMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
        it = this->weather_value_map().begin();
        it != this->weather_value_map().end(); ++it) {
      entry.reset(weather_value_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weather_gadget_id());
  }

  // uint32 weather_area_id = 3;
  if (this->weather_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weather_area_id());
  }

  // uint32 climate_type = 4;
  if (this->climate_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->climate_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAreaWeatherNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAreaWeatherNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAreaWeatherNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAreaWeatherNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAreaWeatherNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAreaWeatherNotify)
    MergeFrom(*source);
  }
}

void SceneAreaWeatherNotify::MergeFrom(const SceneAreaWeatherNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAreaWeatherNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weather_value_map_.MergeFrom(from.weather_value_map_);
  if (from.weather_gadget_id() != 0) {
    set_weather_gadget_id(from.weather_gadget_id());
  }
  if (from.weather_area_id() != 0) {
    set_weather_area_id(from.weather_area_id());
  }
  if (from.climate_type() != 0) {
    set_climate_type(from.climate_type());
  }
}

void SceneAreaWeatherNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAreaWeatherNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAreaWeatherNotify::CopyFrom(const SceneAreaWeatherNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAreaWeatherNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAreaWeatherNotify::IsInitialized() const {
  return true;
}

void SceneAreaWeatherNotify::Swap(SceneAreaWeatherNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAreaWeatherNotify::InternalSwap(SceneAreaWeatherNotify* other) {
  using std::swap;
  weather_value_map_.Swap(&other->weather_value_map_);
  swap(weather_gadget_id_, other->weather_gadget_id_);
  swap(weather_area_id_, other->weather_area_id_);
  swap(climate_type_, other->climate_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAreaWeatherNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAreaWeatherNotify

// uint32 weather_gadget_id = 1;
void SceneAreaWeatherNotify::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
::google::protobuf::uint32 SceneAreaWeatherNotify::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.weather_gadget_id)
  return weather_gadget_id_;
}
void SceneAreaWeatherNotify::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.weather_gadget_id)
}

// map<uint32, string> weather_value_map = 2;
int SceneAreaWeatherNotify::weather_value_map_size() const {
  return weather_value_map_.size();
}
void SceneAreaWeatherNotify::clear_weather_value_map() {
  weather_value_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
SceneAreaWeatherNotify::weather_value_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAreaWeatherNotify.weather_value_map)
  return weather_value_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
SceneAreaWeatherNotify::mutable_weather_value_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAreaWeatherNotify.weather_value_map)
  return weather_value_map_.MutableMap();
}

// uint32 weather_area_id = 3;
void SceneAreaWeatherNotify::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
::google::protobuf::uint32 SceneAreaWeatherNotify::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.weather_area_id)
  return weather_area_id_;
}
void SceneAreaWeatherNotify::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.weather_area_id)
}

// uint32 climate_type = 4;
void SceneAreaWeatherNotify::clear_climate_type() {
  climate_type_ = 0u;
}
::google::protobuf::uint32 SceneAreaWeatherNotify::climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaWeatherNotify.climate_type)
  return climate_type_;
}
void SceneAreaWeatherNotify::set_climate_type(::google::protobuf::uint32 value) {
  
  climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneAreaWeatherNotify.climate_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenePlayerInfo::kUidFieldNumber;
const int ScenePlayerInfo::kPeerIdFieldNumber;
const int ScenePlayerInfo::kNameFieldNumber;
const int ScenePlayerInfo::kIsConnectedFieldNumber;
const int ScenePlayerInfo::kSceneIdFieldNumber;
const int ScenePlayerInfo::kOnlinePlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenePlayerInfo::ScenePlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ScenePlayerInfo)
}
ScenePlayerInfo::ScenePlayerInfo(const ScenePlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_online_player_info()) {
    online_player_info_ = new ::proto::OnlinePlayerInfo(*from.online_player_info_);
  } else {
    online_player_info_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ScenePlayerInfo)
}

void ScenePlayerInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&online_player_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&online_player_info_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

ScenePlayerInfo::~ScenePlayerInfo() {
  // @@protoc_insertion_point(destructor:proto.ScenePlayerInfo)
  SharedDtor();
}

void ScenePlayerInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete online_player_info_;
}

void ScenePlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScenePlayerInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScenePlayerInfo& ScenePlayerInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScenePlayerInfo* ScenePlayerInfo::New(::google::protobuf::Arena* arena) const {
  ScenePlayerInfo* n = new ScenePlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScenePlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ScenePlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && online_player_info_ != NULL) {
    delete online_player_info_;
  }
  online_player_info_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool ScenePlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ScenePlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ScenePlayerInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_connected = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_connected_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OnlinePlayerInfo online_player_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_online_player_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ScenePlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ScenePlayerInfo)
  return false;
#undef DO_
}

void ScenePlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ScenePlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 peer_id = 2;
  if (this->peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->peer_id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ScenePlayerInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // bool is_connected = 4;
  if (this->is_connected() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_connected(), output);
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scene_id(), output);
  }

  // .proto.OnlinePlayerInfo online_player_info = 6;
  if (this->has_online_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->online_player_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ScenePlayerInfo)
}

::google::protobuf::uint8* ScenePlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ScenePlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 peer_id = 2;
  if (this->peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->peer_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ScenePlayerInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // bool is_connected = 4;
  if (this->is_connected() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_connected(), target);
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scene_id(), target);
  }

  // .proto.OnlinePlayerInfo online_player_info = 6;
  if (this->has_online_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->online_player_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ScenePlayerInfo)
  return target;
}

size_t ScenePlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ScenePlayerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .proto.OnlinePlayerInfo online_player_info = 6;
  if (this->has_online_player_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->online_player_info_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 peer_id = 2;
  if (this->peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->peer_id());
  }

  // bool is_connected = 4;
  if (this->is_connected() != 0) {
    total_size += 1 + 1;
  }

  // uint32 scene_id = 5;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScenePlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ScenePlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenePlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScenePlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ScenePlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ScenePlayerInfo)
    MergeFrom(*source);
  }
}

void ScenePlayerInfo::MergeFrom(const ScenePlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ScenePlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_online_player_info()) {
    mutable_online_player_info()->::proto::OnlinePlayerInfo::MergeFrom(from.online_player_info());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.peer_id() != 0) {
    set_peer_id(from.peer_id());
  }
  if (from.is_connected() != 0) {
    set_is_connected(from.is_connected());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void ScenePlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ScenePlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenePlayerInfo::CopyFrom(const ScenePlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ScenePlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenePlayerInfo::IsInitialized() const {
  return true;
}

void ScenePlayerInfo::Swap(ScenePlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenePlayerInfo::InternalSwap(ScenePlayerInfo* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(online_player_info_, other->online_player_info_);
  swap(uid_, other->uid_);
  swap(peer_id_, other->peer_id_);
  swap(is_connected_, other->is_connected_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScenePlayerInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScenePlayerInfo

// uint32 uid = 1;
void ScenePlayerInfo::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 ScenePlayerInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.uid)
  return uid_;
}
void ScenePlayerInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.uid)
}

// uint32 peer_id = 2;
void ScenePlayerInfo::clear_peer_id() {
  peer_id_ = 0u;
}
::google::protobuf::uint32 ScenePlayerInfo::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.peer_id)
  return peer_id_;
}
void ScenePlayerInfo::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.peer_id)
}

// string name = 3;
void ScenePlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ScenePlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.name)
  return name_.GetNoArena();
}
void ScenePlayerInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.name)
}
#if LANG_CXX11
void ScenePlayerInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ScenePlayerInfo.name)
}
#endif
void ScenePlayerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ScenePlayerInfo.name)
}
void ScenePlayerInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ScenePlayerInfo.name)
}
::std::string* ScenePlayerInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScenePlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScenePlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerInfo.name)
}

// bool is_connected = 4;
void ScenePlayerInfo::clear_is_connected() {
  is_connected_ = false;
}
bool ScenePlayerInfo::is_connected() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.is_connected)
  return is_connected_;
}
void ScenePlayerInfo::set_is_connected(bool value) {
  
  is_connected_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.is_connected)
}

// uint32 scene_id = 5;
void ScenePlayerInfo::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 ScenePlayerInfo::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.scene_id)
  return scene_id_;
}
void ScenePlayerInfo::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerInfo.scene_id)
}

// .proto.OnlinePlayerInfo online_player_info = 6;
bool ScenePlayerInfo::has_online_player_info() const {
  return this != internal_default_instance() && online_player_info_ != NULL;
}
void ScenePlayerInfo::clear_online_player_info() {
  if (GetArenaNoVirtual() == NULL && online_player_info_ != NULL) delete online_player_info_;
  online_player_info_ = NULL;
}
const ::proto::OnlinePlayerInfo& ScenePlayerInfo::online_player_info() const {
  const ::proto::OnlinePlayerInfo* p = online_player_info_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfo.online_player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
::proto::OnlinePlayerInfo* ScenePlayerInfo::mutable_online_player_info() {
  
  if (online_player_info_ == NULL) {
    online_player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfo.online_player_info)
  return online_player_info_;
}
::proto::OnlinePlayerInfo* ScenePlayerInfo::release_online_player_info() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerInfo.online_player_info)
  
  ::proto::OnlinePlayerInfo* temp = online_player_info_;
  online_player_info_ = NULL;
  return temp;
}
void ScenePlayerInfo::set_allocated_online_player_info(::proto::OnlinePlayerInfo* online_player_info) {
  delete online_player_info_;
  online_player_info_ = online_player_info;
  if (online_player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerInfo.online_player_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenePlayerInfoNotify::kPlayerInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenePlayerInfoNotify::ScenePlayerInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ScenePlayerInfoNotify)
}
ScenePlayerInfoNotify::ScenePlayerInfoNotify(const ScenePlayerInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_info_list_(from.player_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ScenePlayerInfoNotify)
}

void ScenePlayerInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

ScenePlayerInfoNotify::~ScenePlayerInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.ScenePlayerInfoNotify)
  SharedDtor();
}

void ScenePlayerInfoNotify::SharedDtor() {
}

void ScenePlayerInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScenePlayerInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScenePlayerInfoNotify& ScenePlayerInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScenePlayerInfoNotify* ScenePlayerInfoNotify::New(::google::protobuf::Arena* arena) const {
  ScenePlayerInfoNotify* n = new ScenePlayerInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScenePlayerInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ScenePlayerInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool ScenePlayerInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ScenePlayerInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ScenePlayerInfo player_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ScenePlayerInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ScenePlayerInfoNotify)
  return false;
#undef DO_
}

void ScenePlayerInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ScenePlayerInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ScenePlayerInfo player_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ScenePlayerInfoNotify)
}

::google::protobuf::uint8* ScenePlayerInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ScenePlayerInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ScenePlayerInfo player_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ScenePlayerInfoNotify)
  return target;
}

size_t ScenePlayerInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ScenePlayerInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ScenePlayerInfo player_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->player_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScenePlayerInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ScenePlayerInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenePlayerInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScenePlayerInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ScenePlayerInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ScenePlayerInfoNotify)
    MergeFrom(*source);
  }
}

void ScenePlayerInfoNotify::MergeFrom(const ScenePlayerInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ScenePlayerInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_info_list_.MergeFrom(from.player_info_list_);
}

void ScenePlayerInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ScenePlayerInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenePlayerInfoNotify::CopyFrom(const ScenePlayerInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ScenePlayerInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenePlayerInfoNotify::IsInitialized() const {
  return true;
}

void ScenePlayerInfoNotify::Swap(ScenePlayerInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenePlayerInfoNotify::InternalSwap(ScenePlayerInfoNotify* other) {
  using std::swap;
  player_info_list_.InternalSwap(&other->player_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScenePlayerInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScenePlayerInfoNotify

// repeated .proto.ScenePlayerInfo player_info_list = 1;
int ScenePlayerInfoNotify::player_info_list_size() const {
  return player_info_list_.size();
}
void ScenePlayerInfoNotify::clear_player_info_list() {
  player_info_list_.Clear();
}
const ::proto::ScenePlayerInfo& ScenePlayerInfoNotify::player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Get(index);
}
::proto::ScenePlayerInfo* ScenePlayerInfoNotify::mutable_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Mutable(index);
}
::proto::ScenePlayerInfo* ScenePlayerInfoNotify::add_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >*
ScenePlayerInfoNotify::mutable_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ScenePlayerInfoNotify.player_info_list)
  return &player_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ScenePlayerInfo >&
ScenePlayerInfoNotify::player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ScenePlayerInfoNotify.player_info_list)
  return player_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLocationInfo::kUidFieldNumber;
const int PlayerLocationInfo::kPosFieldNumber;
const int PlayerLocationInfo::kRotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLocationInfo::PlayerLocationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLocationInfo)
}
PlayerLocationInfo::PlayerLocationInfo(const PlayerLocationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLocationInfo)
}

void PlayerLocationInfo::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(uid_));
  _cached_size_ = 0;
}

PlayerLocationInfo::~PlayerLocationInfo() {
  // @@protoc_insertion_point(destructor:proto.PlayerLocationInfo)
  SharedDtor();
}

void PlayerLocationInfo::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rot_;
}

void PlayerLocationInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLocationInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLocationInfo& PlayerLocationInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLocationInfo* PlayerLocationInfo::New(::google::protobuf::Arena* arena) const {
  PlayerLocationInfo* n = new PlayerLocationInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLocationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerLocationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLocationInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLocationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLocationInfo)
  return false;
#undef DO_
}

void PlayerLocationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rot_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLocationInfo)
}

::google::protobuf::uint8* PlayerLocationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLocationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, deterministic, target);
  }

  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->rot_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLocationInfo)
  return target;
}

size_t PlayerLocationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLocationInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector rot = 3;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLocationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLocationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLocationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLocationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLocationInfo)
    MergeFrom(*source);
  }
}

void PlayerLocationInfo::MergeFrom(const PlayerLocationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLocationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void PlayerLocationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLocationInfo::CopyFrom(const PlayerLocationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLocationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLocationInfo::IsInitialized() const {
  return true;
}

void PlayerLocationInfo::Swap(PlayerLocationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLocationInfo::InternalSwap(PlayerLocationInfo* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rot_, other->rot_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLocationInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLocationInfo

// uint32 uid = 1;
void PlayerLocationInfo::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 PlayerLocationInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.uid)
  return uid_;
}
void PlayerLocationInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLocationInfo.uid)
}

// .proto.Vector pos = 2;
bool PlayerLocationInfo::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void PlayerLocationInfo::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& PlayerLocationInfo::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlayerLocationInfo::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLocationInfo.pos)
  return pos_;
}
::proto::Vector* PlayerLocationInfo::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerLocationInfo.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PlayerLocationInfo::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLocationInfo.pos)
}

// .proto.Vector rot = 3;
bool PlayerLocationInfo::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void PlayerLocationInfo::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& PlayerLocationInfo::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.PlayerLocationInfo.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlayerLocationInfo::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLocationInfo.rot)
  return rot_;
}
::proto::Vector* PlayerLocationInfo::release_rot() {
  // @@protoc_insertion_point(field_release:proto.PlayerLocationInfo.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void PlayerLocationInfo::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLocationInfo.rot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldPlayerLocationNotify::kPlayerLocListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldPlayerLocationNotify::WorldPlayerLocationNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldPlayerLocationNotify)
}
WorldPlayerLocationNotify::WorldPlayerLocationNotify(const WorldPlayerLocationNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_loc_list_(from.player_loc_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WorldPlayerLocationNotify)
}

void WorldPlayerLocationNotify::SharedCtor() {
  _cached_size_ = 0;
}

WorldPlayerLocationNotify::~WorldPlayerLocationNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldPlayerLocationNotify)
  SharedDtor();
}

void WorldPlayerLocationNotify::SharedDtor() {
}

void WorldPlayerLocationNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldPlayerLocationNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldPlayerLocationNotify& WorldPlayerLocationNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldPlayerLocationNotify* WorldPlayerLocationNotify::New(::google::protobuf::Arena* arena) const {
  WorldPlayerLocationNotify* n = new WorldPlayerLocationNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldPlayerLocationNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldPlayerLocationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_loc_list_.Clear();
  _internal_metadata_.Clear();
}

bool WorldPlayerLocationNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldPlayerLocationNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.PlayerLocationInfo player_loc_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_loc_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldPlayerLocationNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldPlayerLocationNotify)
  return false;
#undef DO_
}

void WorldPlayerLocationNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldPlayerLocationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PlayerLocationInfo player_loc_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_loc_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_loc_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldPlayerLocationNotify)
}

::google::protobuf::uint8* WorldPlayerLocationNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldPlayerLocationNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.PlayerLocationInfo player_loc_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_loc_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player_loc_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldPlayerLocationNotify)
  return target;
}

size_t WorldPlayerLocationNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldPlayerLocationNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PlayerLocationInfo player_loc_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->player_loc_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_loc_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldPlayerLocationNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldPlayerLocationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldPlayerLocationNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldPlayerLocationNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldPlayerLocationNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldPlayerLocationNotify)
    MergeFrom(*source);
  }
}

void WorldPlayerLocationNotify::MergeFrom(const WorldPlayerLocationNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldPlayerLocationNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_loc_list_.MergeFrom(from.player_loc_list_);
}

void WorldPlayerLocationNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldPlayerLocationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldPlayerLocationNotify::CopyFrom(const WorldPlayerLocationNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldPlayerLocationNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldPlayerLocationNotify::IsInitialized() const {
  return true;
}

void WorldPlayerLocationNotify::Swap(WorldPlayerLocationNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldPlayerLocationNotify::InternalSwap(WorldPlayerLocationNotify* other) {
  using std::swap;
  player_loc_list_.InternalSwap(&other->player_loc_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldPlayerLocationNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldPlayerLocationNotify

// repeated .proto.PlayerLocationInfo player_loc_list = 1;
int WorldPlayerLocationNotify::player_loc_list_size() const {
  return player_loc_list_.size();
}
void WorldPlayerLocationNotify::clear_player_loc_list() {
  player_loc_list_.Clear();
}
const ::proto::PlayerLocationInfo& WorldPlayerLocationNotify::player_loc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Get(index);
}
::proto::PlayerLocationInfo* WorldPlayerLocationNotify::mutable_player_loc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Mutable(index);
}
::proto::PlayerLocationInfo* WorldPlayerLocationNotify::add_player_loc_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >*
WorldPlayerLocationNotify::mutable_player_loc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerLocationNotify.player_loc_list)
  return &player_loc_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PlayerLocationInfo >&
WorldPlayerLocationNotify::player_loc_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerLocationNotify.player_loc_list)
  return player_loc_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BeginCameraSceneLookNotify::kLookPosFieldNumber;
const int BeginCameraSceneLookNotify::kDurationFieldNumber;
const int BeginCameraSceneLookNotify::kIsForceFieldNumber;
const int BeginCameraSceneLookNotify::kIsRecoverKeepCurrentFieldNumber;
const int BeginCameraSceneLookNotify::kIsAllowInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BeginCameraSceneLookNotify::BeginCameraSceneLookNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BeginCameraSceneLookNotify)
}
BeginCameraSceneLookNotify::BeginCameraSceneLookNotify(const BeginCameraSceneLookNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_look_pos()) {
    look_pos_ = new ::proto::Vector(*from.look_pos_);
  } else {
    look_pos_ = NULL;
  }
  ::memcpy(&duration_, &from.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_allow_input_) -
    reinterpret_cast<char*>(&duration_)) + sizeof(is_allow_input_));
  // @@protoc_insertion_point(copy_constructor:proto.BeginCameraSceneLookNotify)
}

void BeginCameraSceneLookNotify::SharedCtor() {
  ::memset(&look_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_allow_input_) -
      reinterpret_cast<char*>(&look_pos_)) + sizeof(is_allow_input_));
  _cached_size_ = 0;
}

BeginCameraSceneLookNotify::~BeginCameraSceneLookNotify() {
  // @@protoc_insertion_point(destructor:proto.BeginCameraSceneLookNotify)
  SharedDtor();
}

void BeginCameraSceneLookNotify::SharedDtor() {
  if (this != internal_default_instance()) delete look_pos_;
}

void BeginCameraSceneLookNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BeginCameraSceneLookNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BeginCameraSceneLookNotify& BeginCameraSceneLookNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

BeginCameraSceneLookNotify* BeginCameraSceneLookNotify::New(::google::protobuf::Arena* arena) const {
  BeginCameraSceneLookNotify* n = new BeginCameraSceneLookNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BeginCameraSceneLookNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BeginCameraSceneLookNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && look_pos_ != NULL) {
    delete look_pos_;
  }
  look_pos_ = NULL;
  ::memset(&duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_allow_input_) -
      reinterpret_cast<char*>(&duration_)) + sizeof(is_allow_input_));
  _internal_metadata_.Clear();
}

bool BeginCameraSceneLookNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BeginCameraSceneLookNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector look_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_look_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_force = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_force_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_recover_keep_current = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_recover_keep_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_allow_input = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_allow_input_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BeginCameraSceneLookNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BeginCameraSceneLookNotify)
  return false;
#undef DO_
}

void BeginCameraSceneLookNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BeginCameraSceneLookNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector look_pos = 1;
  if (this->has_look_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->look_pos_, output);
  }

  // float duration = 2;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->duration(), output);
  }

  // bool is_force = 3;
  if (this->is_force() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_force(), output);
  }

  // bool is_recover_keep_current = 4;
  if (this->is_recover_keep_current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_recover_keep_current(), output);
  }

  // bool is_allow_input = 5;
  if (this->is_allow_input() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_allow_input(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BeginCameraSceneLookNotify)
}

::google::protobuf::uint8* BeginCameraSceneLookNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BeginCameraSceneLookNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector look_pos = 1;
  if (this->has_look_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->look_pos_, deterministic, target);
  }

  // float duration = 2;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->duration(), target);
  }

  // bool is_force = 3;
  if (this->is_force() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_force(), target);
  }

  // bool is_recover_keep_current = 4;
  if (this->is_recover_keep_current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_recover_keep_current(), target);
  }

  // bool is_allow_input = 5;
  if (this->is_allow_input() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_allow_input(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BeginCameraSceneLookNotify)
  return target;
}

size_t BeginCameraSceneLookNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BeginCameraSceneLookNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector look_pos = 1;
  if (this->has_look_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->look_pos_);
  }

  // float duration = 2;
  if (this->duration() != 0) {
    total_size += 1 + 4;
  }

  // bool is_force = 3;
  if (this->is_force() != 0) {
    total_size += 1 + 1;
  }

  // bool is_recover_keep_current = 4;
  if (this->is_recover_keep_current() != 0) {
    total_size += 1 + 1;
  }

  // bool is_allow_input = 5;
  if (this->is_allow_input() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BeginCameraSceneLookNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BeginCameraSceneLookNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BeginCameraSceneLookNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BeginCameraSceneLookNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BeginCameraSceneLookNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BeginCameraSceneLookNotify)
    MergeFrom(*source);
  }
}

void BeginCameraSceneLookNotify::MergeFrom(const BeginCameraSceneLookNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BeginCameraSceneLookNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_look_pos()) {
    mutable_look_pos()->::proto::Vector::MergeFrom(from.look_pos());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.is_force() != 0) {
    set_is_force(from.is_force());
  }
  if (from.is_recover_keep_current() != 0) {
    set_is_recover_keep_current(from.is_recover_keep_current());
  }
  if (from.is_allow_input() != 0) {
    set_is_allow_input(from.is_allow_input());
  }
}

void BeginCameraSceneLookNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BeginCameraSceneLookNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BeginCameraSceneLookNotify::CopyFrom(const BeginCameraSceneLookNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BeginCameraSceneLookNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BeginCameraSceneLookNotify::IsInitialized() const {
  return true;
}

void BeginCameraSceneLookNotify::Swap(BeginCameraSceneLookNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BeginCameraSceneLookNotify::InternalSwap(BeginCameraSceneLookNotify* other) {
  using std::swap;
  swap(look_pos_, other->look_pos_);
  swap(duration_, other->duration_);
  swap(is_force_, other->is_force_);
  swap(is_recover_keep_current_, other->is_recover_keep_current_);
  swap(is_allow_input_, other->is_allow_input_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BeginCameraSceneLookNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BeginCameraSceneLookNotify

// .proto.Vector look_pos = 1;
bool BeginCameraSceneLookNotify::has_look_pos() const {
  return this != internal_default_instance() && look_pos_ != NULL;
}
void BeginCameraSceneLookNotify::clear_look_pos() {
  if (GetArenaNoVirtual() == NULL && look_pos_ != NULL) delete look_pos_;
  look_pos_ = NULL;
}
const ::proto::Vector& BeginCameraSceneLookNotify::look_pos() const {
  const ::proto::Vector* p = look_pos_;
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.look_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* BeginCameraSceneLookNotify::mutable_look_pos() {
  
  if (look_pos_ == NULL) {
    look_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.BeginCameraSceneLookNotify.look_pos)
  return look_pos_;
}
::proto::Vector* BeginCameraSceneLookNotify::release_look_pos() {
  // @@protoc_insertion_point(field_release:proto.BeginCameraSceneLookNotify.look_pos)
  
  ::proto::Vector* temp = look_pos_;
  look_pos_ = NULL;
  return temp;
}
void BeginCameraSceneLookNotify::set_allocated_look_pos(::proto::Vector* look_pos) {
  delete look_pos_;
  look_pos_ = look_pos;
  if (look_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.BeginCameraSceneLookNotify.look_pos)
}

// float duration = 2;
void BeginCameraSceneLookNotify::clear_duration() {
  duration_ = 0;
}
float BeginCameraSceneLookNotify::duration() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.duration)
  return duration_;
}
void BeginCameraSceneLookNotify::set_duration(float value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.duration)
}

// bool is_force = 3;
void BeginCameraSceneLookNotify::clear_is_force() {
  is_force_ = false;
}
bool BeginCameraSceneLookNotify::is_force() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_force)
  return is_force_;
}
void BeginCameraSceneLookNotify::set_is_force(bool value) {
  
  is_force_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_force)
}

// bool is_recover_keep_current = 4;
void BeginCameraSceneLookNotify::clear_is_recover_keep_current() {
  is_recover_keep_current_ = false;
}
bool BeginCameraSceneLookNotify::is_recover_keep_current() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_recover_keep_current)
  return is_recover_keep_current_;
}
void BeginCameraSceneLookNotify::set_is_recover_keep_current(bool value) {
  
  is_recover_keep_current_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_recover_keep_current)
}

// bool is_allow_input = 5;
void BeginCameraSceneLookNotify::clear_is_allow_input() {
  is_allow_input_ = false;
}
bool BeginCameraSceneLookNotify::is_allow_input() const {
  // @@protoc_insertion_point(field_get:proto.BeginCameraSceneLookNotify.is_allow_input)
  return is_allow_input_;
}
void BeginCameraSceneLookNotify::set_is_allow_input(bool value) {
  
  is_allow_input_ = value;
  // @@protoc_insertion_point(field_set:proto.BeginCameraSceneLookNotify.is_allow_input)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EndCameraSceneLookNotify::EndCameraSceneLookNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EndCameraSceneLookNotify)
}
EndCameraSceneLookNotify::EndCameraSceneLookNotify(const EndCameraSceneLookNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.EndCameraSceneLookNotify)
}

void EndCameraSceneLookNotify::SharedCtor() {
  _cached_size_ = 0;
}

EndCameraSceneLookNotify::~EndCameraSceneLookNotify() {
  // @@protoc_insertion_point(destructor:proto.EndCameraSceneLookNotify)
  SharedDtor();
}

void EndCameraSceneLookNotify::SharedDtor() {
}

void EndCameraSceneLookNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EndCameraSceneLookNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EndCameraSceneLookNotify& EndCameraSceneLookNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EndCameraSceneLookNotify* EndCameraSceneLookNotify::New(::google::protobuf::Arena* arena) const {
  EndCameraSceneLookNotify* n = new EndCameraSceneLookNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EndCameraSceneLookNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EndCameraSceneLookNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool EndCameraSceneLookNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EndCameraSceneLookNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EndCameraSceneLookNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EndCameraSceneLookNotify)
  return false;
#undef DO_
}

void EndCameraSceneLookNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EndCameraSceneLookNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EndCameraSceneLookNotify)
}

::google::protobuf::uint8* EndCameraSceneLookNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EndCameraSceneLookNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EndCameraSceneLookNotify)
  return target;
}

size_t EndCameraSceneLookNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EndCameraSceneLookNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EndCameraSceneLookNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EndCameraSceneLookNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EndCameraSceneLookNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EndCameraSceneLookNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EndCameraSceneLookNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EndCameraSceneLookNotify)
    MergeFrom(*source);
  }
}

void EndCameraSceneLookNotify::MergeFrom(const EndCameraSceneLookNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EndCameraSceneLookNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EndCameraSceneLookNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EndCameraSceneLookNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndCameraSceneLookNotify::CopyFrom(const EndCameraSceneLookNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EndCameraSceneLookNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndCameraSceneLookNotify::IsInitialized() const {
  return true;
}

void EndCameraSceneLookNotify::Swap(EndCameraSceneLookNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EndCameraSceneLookNotify::InternalSwap(EndCameraSceneLookNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EndCameraSceneLookNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EndCameraSceneLookNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarkEntityInMinMapNotify::kEntityIdFieldNumber;
const int MarkEntityInMinMapNotify::kPositionFieldNumber;
const int MarkEntityInMinMapNotify::kMonsterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarkEntityInMinMapNotify::MarkEntityInMinMapNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MarkEntityInMinMapNotify)
}
MarkEntityInMinMapNotify::MarkEntityInMinMapNotify(const MarkEntityInMinMapNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::proto::Vector(*from.position_);
  } else {
    position_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&monster_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(monster_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MarkEntityInMinMapNotify)
}

void MarkEntityInMinMapNotify::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monster_id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(monster_id_));
  _cached_size_ = 0;
}

MarkEntityInMinMapNotify::~MarkEntityInMinMapNotify() {
  // @@protoc_insertion_point(destructor:proto.MarkEntityInMinMapNotify)
  SharedDtor();
}

void MarkEntityInMinMapNotify::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void MarkEntityInMinMapNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarkEntityInMinMapNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarkEntityInMinMapNotify& MarkEntityInMinMapNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarkEntityInMinMapNotify* MarkEntityInMinMapNotify::New(::google::protobuf::Arena* arena) const {
  MarkEntityInMinMapNotify* n = new MarkEntityInMinMapNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarkEntityInMinMapNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MarkEntityInMinMapNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&monster_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(monster_id_));
  _internal_metadata_.Clear();
}

bool MarkEntityInMinMapNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MarkEntityInMinMapNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 monster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MarkEntityInMinMapNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MarkEntityInMinMapNotify)
  return false;
#undef DO_
}

void MarkEntityInMinMapNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MarkEntityInMinMapNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.Vector position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  // uint32 monster_id = 3;
  if (this->monster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->monster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MarkEntityInMinMapNotify)
}

::google::protobuf::uint8* MarkEntityInMinMapNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MarkEntityInMinMapNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.Vector position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->position_, deterministic, target);
  }

  // uint32 monster_id = 3;
  if (this->monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->monster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MarkEntityInMinMapNotify)
  return target;
}

size_t MarkEntityInMinMapNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MarkEntityInMinMapNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 monster_id = 3;
  if (this->monster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarkEntityInMinMapNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MarkEntityInMinMapNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkEntityInMinMapNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarkEntityInMinMapNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MarkEntityInMinMapNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MarkEntityInMinMapNotify)
    MergeFrom(*source);
  }
}

void MarkEntityInMinMapNotify::MergeFrom(const MarkEntityInMinMapNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MarkEntityInMinMapNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::proto::Vector::MergeFrom(from.position());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.monster_id() != 0) {
    set_monster_id(from.monster_id());
  }
}

void MarkEntityInMinMapNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MarkEntityInMinMapNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkEntityInMinMapNotify::CopyFrom(const MarkEntityInMinMapNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MarkEntityInMinMapNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkEntityInMinMapNotify::IsInitialized() const {
  return true;
}

void MarkEntityInMinMapNotify::Swap(MarkEntityInMinMapNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarkEntityInMinMapNotify::InternalSwap(MarkEntityInMinMapNotify* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(entity_id_, other->entity_id_);
  swap(monster_id_, other->monster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarkEntityInMinMapNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarkEntityInMinMapNotify

// uint32 entity_id = 1;
void MarkEntityInMinMapNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 MarkEntityInMinMapNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.entity_id)
  return entity_id_;
}
void MarkEntityInMinMapNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkEntityInMinMapNotify.entity_id)
}

// .proto.Vector position = 2;
bool MarkEntityInMinMapNotify::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void MarkEntityInMinMapNotify::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::proto::Vector& MarkEntityInMinMapNotify::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* MarkEntityInMinMapNotify::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkEntityInMinMapNotify.position)
  return position_;
}
::proto::Vector* MarkEntityInMinMapNotify::release_position() {
  // @@protoc_insertion_point(field_release:proto.MarkEntityInMinMapNotify.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
void MarkEntityInMinMapNotify::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkEntityInMinMapNotify.position)
}

// uint32 monster_id = 3;
void MarkEntityInMinMapNotify::clear_monster_id() {
  monster_id_ = 0u;
}
::google::protobuf::uint32 MarkEntityInMinMapNotify::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkEntityInMinMapNotify.monster_id)
  return monster_id_;
}
void MarkEntityInMinMapNotify::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkEntityInMinMapNotify.monster_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnmarkEntityInMinMapNotify::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnmarkEntityInMinMapNotify::UnmarkEntityInMinMapNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnmarkEntityInMinMapNotify)
}
UnmarkEntityInMinMapNotify::UnmarkEntityInMinMapNotify(const UnmarkEntityInMinMapNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.UnmarkEntityInMinMapNotify)
}

void UnmarkEntityInMinMapNotify::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

UnmarkEntityInMinMapNotify::~UnmarkEntityInMinMapNotify() {
  // @@protoc_insertion_point(destructor:proto.UnmarkEntityInMinMapNotify)
  SharedDtor();
}

void UnmarkEntityInMinMapNotify::SharedDtor() {
}

void UnmarkEntityInMinMapNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnmarkEntityInMinMapNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnmarkEntityInMinMapNotify& UnmarkEntityInMinMapNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnmarkEntityInMinMapNotify* UnmarkEntityInMinMapNotify::New(::google::protobuf::Arena* arena) const {
  UnmarkEntityInMinMapNotify* n = new UnmarkEntityInMinMapNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnmarkEntityInMinMapNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnmarkEntityInMinMapNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UnmarkEntityInMinMapNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnmarkEntityInMinMapNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnmarkEntityInMinMapNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnmarkEntityInMinMapNotify)
  return false;
#undef DO_
}

void UnmarkEntityInMinMapNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnmarkEntityInMinMapNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnmarkEntityInMinMapNotify)
}

::google::protobuf::uint8* UnmarkEntityInMinMapNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnmarkEntityInMinMapNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnmarkEntityInMinMapNotify)
  return target;
}

size_t UnmarkEntityInMinMapNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnmarkEntityInMinMapNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnmarkEntityInMinMapNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnmarkEntityInMinMapNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UnmarkEntityInMinMapNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnmarkEntityInMinMapNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnmarkEntityInMinMapNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnmarkEntityInMinMapNotify)
    MergeFrom(*source);
  }
}

void UnmarkEntityInMinMapNotify::MergeFrom(const UnmarkEntityInMinMapNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnmarkEntityInMinMapNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void UnmarkEntityInMinMapNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnmarkEntityInMinMapNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnmarkEntityInMinMapNotify::CopyFrom(const UnmarkEntityInMinMapNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnmarkEntityInMinMapNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnmarkEntityInMinMapNotify::IsInitialized() const {
  return true;
}

void UnmarkEntityInMinMapNotify::Swap(UnmarkEntityInMinMapNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnmarkEntityInMinMapNotify::InternalSwap(UnmarkEntityInMinMapNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnmarkEntityInMinMapNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnmarkEntityInMinMapNotify

// uint32 entity_id = 1;
void UnmarkEntityInMinMapNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 UnmarkEntityInMinMapNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.UnmarkEntityInMinMapNotify.entity_id)
  return entity_id_;
}
void UnmarkEntityInMinMapNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnmarkEntityInMinMapNotify.entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropSubfieldReq::kDropTypeFieldNumber;
const int DropSubfieldReq::kDropParamFieldNumber;
const int DropSubfieldReq::kEntityIdFieldNumber;
const int DropSubfieldReq::kSubfieldNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropSubfieldReq::DropSubfieldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DropSubfieldReq)
}
DropSubfieldReq::DropSubfieldReq(const DropSubfieldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subfield_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subfield_name().size() > 0) {
    subfield_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subfield_name_);
  }
  ::memcpy(&drop_type_, &from.drop_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&drop_type_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.DropSubfieldReq)
}

void DropSubfieldReq::SharedCtor() {
  subfield_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&drop_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&drop_type_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

DropSubfieldReq::~DropSubfieldReq() {
  // @@protoc_insertion_point(destructor:proto.DropSubfieldReq)
  SharedDtor();
}

void DropSubfieldReq::SharedDtor() {
  subfield_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DropSubfieldReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropSubfieldReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropSubfieldReq& DropSubfieldReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

DropSubfieldReq* DropSubfieldReq::New(::google::protobuf::Arena* arena) const {
  DropSubfieldReq* n = new DropSubfieldReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropSubfieldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DropSubfieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subfield_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&drop_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&drop_type_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool DropSubfieldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DropSubfieldReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DropSubfieldType drop_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_drop_type(static_cast< ::proto::DropSubfieldType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 drop_param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drop_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subfield_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subfield_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subfield_name().data(), static_cast<int>(this->subfield_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DropSubfieldReq.subfield_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DropSubfieldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DropSubfieldReq)
  return false;
#undef DO_
}

void DropSubfieldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DropSubfieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DropSubfieldType drop_type = 1;
  if (this->drop_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->drop_type(), output);
  }

  // uint32 drop_param = 2;
  if (this->drop_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->drop_param(), output);
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->entity_id(), output);
  }

  // string subfield_name = 4;
  if (this->subfield_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subfield_name().data(), static_cast<int>(this->subfield_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DropSubfieldReq.subfield_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->subfield_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DropSubfieldReq)
}

::google::protobuf::uint8* DropSubfieldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DropSubfieldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DropSubfieldType drop_type = 1;
  if (this->drop_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->drop_type(), target);
  }

  // uint32 drop_param = 2;
  if (this->drop_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->drop_param(), target);
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->entity_id(), target);
  }

  // string subfield_name = 4;
  if (this->subfield_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subfield_name().data(), static_cast<int>(this->subfield_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DropSubfieldReq.subfield_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->subfield_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DropSubfieldReq)
  return target;
}

size_t DropSubfieldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DropSubfieldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subfield_name = 4;
  if (this->subfield_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subfield_name());
  }

  // .proto.DropSubfieldType drop_type = 1;
  if (this->drop_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->drop_type());
  }

  // uint32 drop_param = 2;
  if (this->drop_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drop_param());
  }

  // uint32 entity_id = 3;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropSubfieldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DropSubfieldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DropSubfieldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropSubfieldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DropSubfieldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DropSubfieldReq)
    MergeFrom(*source);
  }
}

void DropSubfieldReq::MergeFrom(const DropSubfieldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DropSubfieldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subfield_name().size() > 0) {

    subfield_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subfield_name_);
  }
  if (from.drop_type() != 0) {
    set_drop_type(from.drop_type());
  }
  if (from.drop_param() != 0) {
    set_drop_param(from.drop_param());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void DropSubfieldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DropSubfieldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropSubfieldReq::CopyFrom(const DropSubfieldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DropSubfieldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropSubfieldReq::IsInitialized() const {
  return true;
}

void DropSubfieldReq::Swap(DropSubfieldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropSubfieldReq::InternalSwap(DropSubfieldReq* other) {
  using std::swap;
  subfield_name_.Swap(&other->subfield_name_);
  swap(drop_type_, other->drop_type_);
  swap(drop_param_, other->drop_param_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropSubfieldReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DropSubfieldReq

// .proto.DropSubfieldType drop_type = 1;
void DropSubfieldReq::clear_drop_type() {
  drop_type_ = 0;
}
::proto::DropSubfieldType DropSubfieldReq::drop_type() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldReq.drop_type)
  return static_cast< ::proto::DropSubfieldType >(drop_type_);
}
void DropSubfieldReq::set_drop_type(::proto::DropSubfieldType value) {
  
  drop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.DropSubfieldReq.drop_type)
}

// uint32 drop_param = 2;
void DropSubfieldReq::clear_drop_param() {
  drop_param_ = 0u;
}
::google::protobuf::uint32 DropSubfieldReq::drop_param() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldReq.drop_param)
  return drop_param_;
}
void DropSubfieldReq::set_drop_param(::google::protobuf::uint32 value) {
  
  drop_param_ = value;
  // @@protoc_insertion_point(field_set:proto.DropSubfieldReq.drop_param)
}

// uint32 entity_id = 3;
void DropSubfieldReq::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 DropSubfieldReq::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldReq.entity_id)
  return entity_id_;
}
void DropSubfieldReq::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DropSubfieldReq.entity_id)
}

// string subfield_name = 4;
void DropSubfieldReq::clear_subfield_name() {
  subfield_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DropSubfieldReq::subfield_name() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldReq.subfield_name)
  return subfield_name_.GetNoArena();
}
void DropSubfieldReq::set_subfield_name(const ::std::string& value) {
  
  subfield_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DropSubfieldReq.subfield_name)
}
#if LANG_CXX11
void DropSubfieldReq::set_subfield_name(::std::string&& value) {
  
  subfield_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DropSubfieldReq.subfield_name)
}
#endif
void DropSubfieldReq::set_subfield_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  subfield_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DropSubfieldReq.subfield_name)
}
void DropSubfieldReq::set_subfield_name(const char* value, size_t size) {
  
  subfield_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DropSubfieldReq.subfield_name)
}
::std::string* DropSubfieldReq::mutable_subfield_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.DropSubfieldReq.subfield_name)
  return subfield_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DropSubfieldReq::release_subfield_name() {
  // @@protoc_insertion_point(field_release:proto.DropSubfieldReq.subfield_name)
  
  return subfield_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DropSubfieldReq::set_allocated_subfield_name(::std::string* subfield_name) {
  if (subfield_name != NULL) {
    
  } else {
    
  }
  subfield_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subfield_name);
  // @@protoc_insertion_point(field_set_allocated:proto.DropSubfieldReq.subfield_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DropSubfieldRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DropSubfieldRsp::DropSubfieldRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DropSubfieldRsp)
}
DropSubfieldRsp::DropSubfieldRsp(const DropSubfieldRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.DropSubfieldRsp)
}

void DropSubfieldRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

DropSubfieldRsp::~DropSubfieldRsp() {
  // @@protoc_insertion_point(destructor:proto.DropSubfieldRsp)
  SharedDtor();
}

void DropSubfieldRsp::SharedDtor() {
}

void DropSubfieldRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DropSubfieldRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DropSubfieldRsp& DropSubfieldRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

DropSubfieldRsp* DropSubfieldRsp::New(::google::protobuf::Arena* arena) const {
  DropSubfieldRsp* n = new DropSubfieldRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DropSubfieldRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DropSubfieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool DropSubfieldRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DropSubfieldRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DropSubfieldRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DropSubfieldRsp)
  return false;
#undef DO_
}

void DropSubfieldRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DropSubfieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DropSubfieldRsp)
}

::google::protobuf::uint8* DropSubfieldRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DropSubfieldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DropSubfieldRsp)
  return target;
}

size_t DropSubfieldRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DropSubfieldRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DropSubfieldRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DropSubfieldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DropSubfieldRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DropSubfieldRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DropSubfieldRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DropSubfieldRsp)
    MergeFrom(*source);
  }
}

void DropSubfieldRsp::MergeFrom(const DropSubfieldRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DropSubfieldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void DropSubfieldRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DropSubfieldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DropSubfieldRsp::CopyFrom(const DropSubfieldRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DropSubfieldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DropSubfieldRsp::IsInitialized() const {
  return true;
}

void DropSubfieldRsp::Swap(DropSubfieldRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DropSubfieldRsp::InternalSwap(DropSubfieldRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DropSubfieldRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DropSubfieldRsp

// int32 retcode = 1;
void DropSubfieldRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 DropSubfieldRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DropSubfieldRsp.retcode)
  return retcode_;
}
void DropSubfieldRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DropSubfieldRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteGroupTriggerReq::kSourceEntityIdFieldNumber;
const int ExecuteGroupTriggerReq::kSourceNameFieldNumber;
const int ExecuteGroupTriggerReq::kTargetEntityIdFieldNumber;
const int ExecuteGroupTriggerReq::kParam1FieldNumber;
const int ExecuteGroupTriggerReq::kParam2FieldNumber;
const int ExecuteGroupTriggerReq::kParam3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteGroupTriggerReq::ExecuteGroupTriggerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExecuteGroupTriggerReq)
}
ExecuteGroupTriggerReq::ExecuteGroupTriggerReq(const ExecuteGroupTriggerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source_name().size() > 0) {
    source_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_name_);
  }
  ::memcpy(&source_entity_id_, &from.source_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&param3_) -
    reinterpret_cast<char*>(&source_entity_id_)) + sizeof(param3_));
  // @@protoc_insertion_point(copy_constructor:proto.ExecuteGroupTriggerReq)
}

void ExecuteGroupTriggerReq::SharedCtor() {
  source_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param3_) -
      reinterpret_cast<char*>(&source_entity_id_)) + sizeof(param3_));
  _cached_size_ = 0;
}

ExecuteGroupTriggerReq::~ExecuteGroupTriggerReq() {
  // @@protoc_insertion_point(destructor:proto.ExecuteGroupTriggerReq)
  SharedDtor();
}

void ExecuteGroupTriggerReq::SharedDtor() {
  source_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExecuteGroupTriggerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteGroupTriggerReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteGroupTriggerReq& ExecuteGroupTriggerReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExecuteGroupTriggerReq* ExecuteGroupTriggerReq::New(::google::protobuf::Arena* arena) const {
  ExecuteGroupTriggerReq* n = new ExecuteGroupTriggerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteGroupTriggerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExecuteGroupTriggerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param3_) -
      reinterpret_cast<char*>(&source_entity_id_)) + sizeof(param3_));
  _internal_metadata_.Clear();
}

bool ExecuteGroupTriggerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExecuteGroupTriggerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 source_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_name().data(), static_cast<int>(this->source_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ExecuteGroupTriggerReq.source_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_entity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 param1 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 param2 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 param3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExecuteGroupTriggerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExecuteGroupTriggerReq)
  return false;
#undef DO_
}

void ExecuteGroupTriggerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExecuteGroupTriggerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 source_entity_id = 1;
  if (this->source_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source_entity_id(), output);
  }

  // string source_name = 2;
  if (this->source_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_name().data(), static_cast<int>(this->source_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExecuteGroupTriggerReq.source_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->source_name(), output);
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_entity_id(), output);
  }

  // int32 param1 = 4;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->param1(), output);
  }

  // int32 param2 = 5;
  if (this->param2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->param2(), output);
  }

  // int32 param3 = 6;
  if (this->param3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->param3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExecuteGroupTriggerReq)
}

::google::protobuf::uint8* ExecuteGroupTriggerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExecuteGroupTriggerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 source_entity_id = 1;
  if (this->source_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source_entity_id(), target);
  }

  // string source_name = 2;
  if (this->source_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_name().data(), static_cast<int>(this->source_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ExecuteGroupTriggerReq.source_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_name(), target);
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_entity_id(), target);
  }

  // int32 param1 = 4;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->param1(), target);
  }

  // int32 param2 = 5;
  if (this->param2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->param2(), target);
  }

  // int32 param3 = 6;
  if (this->param3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->param3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExecuteGroupTriggerReq)
  return target;
}

size_t ExecuteGroupTriggerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExecuteGroupTriggerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string source_name = 2;
  if (this->source_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_name());
  }

  // uint32 source_entity_id = 1;
  if (this->source_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_entity_id());
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_entity_id());
  }

  // int32 param1 = 4;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param1());
  }

  // int32 param2 = 5;
  if (this->param2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param2());
  }

  // int32 param3 = 6;
  if (this->param3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteGroupTriggerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExecuteGroupTriggerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteGroupTriggerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteGroupTriggerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExecuteGroupTriggerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExecuteGroupTriggerReq)
    MergeFrom(*source);
  }
}

void ExecuteGroupTriggerReq::MergeFrom(const ExecuteGroupTriggerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExecuteGroupTriggerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source_name().size() > 0) {

    source_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_name_);
  }
  if (from.source_entity_id() != 0) {
    set_source_entity_id(from.source_entity_id());
  }
  if (from.target_entity_id() != 0) {
    set_target_entity_id(from.target_entity_id());
  }
  if (from.param1() != 0) {
    set_param1(from.param1());
  }
  if (from.param2() != 0) {
    set_param2(from.param2());
  }
  if (from.param3() != 0) {
    set_param3(from.param3());
  }
}

void ExecuteGroupTriggerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExecuteGroupTriggerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteGroupTriggerReq::CopyFrom(const ExecuteGroupTriggerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExecuteGroupTriggerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteGroupTriggerReq::IsInitialized() const {
  return true;
}

void ExecuteGroupTriggerReq::Swap(ExecuteGroupTriggerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteGroupTriggerReq::InternalSwap(ExecuteGroupTriggerReq* other) {
  using std::swap;
  source_name_.Swap(&other->source_name_);
  swap(source_entity_id_, other->source_entity_id_);
  swap(target_entity_id_, other->target_entity_id_);
  swap(param1_, other->param1_);
  swap(param2_, other->param2_);
  swap(param3_, other->param3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteGroupTriggerReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteGroupTriggerReq

// uint32 source_entity_id = 1;
void ExecuteGroupTriggerReq::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
::google::protobuf::uint32 ExecuteGroupTriggerReq::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.source_entity_id)
  return source_entity_id_;
}
void ExecuteGroupTriggerReq::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.source_entity_id)
}

// string source_name = 2;
void ExecuteGroupTriggerReq::clear_source_name() {
  source_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExecuteGroupTriggerReq::source_name() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.source_name)
  return source_name_.GetNoArena();
}
void ExecuteGroupTriggerReq::set_source_name(const ::std::string& value) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.source_name)
}
#if LANG_CXX11
void ExecuteGroupTriggerReq::set_source_name(::std::string&& value) {
  
  source_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ExecuteGroupTriggerReq.source_name)
}
#endif
void ExecuteGroupTriggerReq::set_source_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ExecuteGroupTriggerReq.source_name)
}
void ExecuteGroupTriggerReq::set_source_name(const char* value, size_t size) {
  
  source_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ExecuteGroupTriggerReq.source_name)
}
::std::string* ExecuteGroupTriggerReq::mutable_source_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ExecuteGroupTriggerReq.source_name)
  return source_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExecuteGroupTriggerReq::release_source_name() {
  // @@protoc_insertion_point(field_release:proto.ExecuteGroupTriggerReq.source_name)
  
  return source_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExecuteGroupTriggerReq::set_allocated_source_name(::std::string* source_name) {
  if (source_name != NULL) {
    
  } else {
    
  }
  source_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ExecuteGroupTriggerReq.source_name)
}

// uint32 target_entity_id = 3;
void ExecuteGroupTriggerReq::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
::google::protobuf::uint32 ExecuteGroupTriggerReq::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.target_entity_id)
  return target_entity_id_;
}
void ExecuteGroupTriggerReq::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.target_entity_id)
}

// int32 param1 = 4;
void ExecuteGroupTriggerReq::clear_param1() {
  param1_ = 0;
}
::google::protobuf::int32 ExecuteGroupTriggerReq::param1() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param1)
  return param1_;
}
void ExecuteGroupTriggerReq::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param1)
}

// int32 param2 = 5;
void ExecuteGroupTriggerReq::clear_param2() {
  param2_ = 0;
}
::google::protobuf::int32 ExecuteGroupTriggerReq::param2() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param2)
  return param2_;
}
void ExecuteGroupTriggerReq::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param2)
}

// int32 param3 = 6;
void ExecuteGroupTriggerReq::clear_param3() {
  param3_ = 0;
}
::google::protobuf::int32 ExecuteGroupTriggerReq::param3() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerReq.param3)
  return param3_;
}
void ExecuteGroupTriggerReq::set_param3(::google::protobuf::int32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerReq.param3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteGroupTriggerRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteGroupTriggerRsp::ExecuteGroupTriggerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExecuteGroupTriggerRsp)
}
ExecuteGroupTriggerRsp::ExecuteGroupTriggerRsp(const ExecuteGroupTriggerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ExecuteGroupTriggerRsp)
}

void ExecuteGroupTriggerRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ExecuteGroupTriggerRsp::~ExecuteGroupTriggerRsp() {
  // @@protoc_insertion_point(destructor:proto.ExecuteGroupTriggerRsp)
  SharedDtor();
}

void ExecuteGroupTriggerRsp::SharedDtor() {
}

void ExecuteGroupTriggerRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteGroupTriggerRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteGroupTriggerRsp& ExecuteGroupTriggerRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExecuteGroupTriggerRsp* ExecuteGroupTriggerRsp::New(::google::protobuf::Arena* arena) const {
  ExecuteGroupTriggerRsp* n = new ExecuteGroupTriggerRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteGroupTriggerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExecuteGroupTriggerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ExecuteGroupTriggerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExecuteGroupTriggerRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExecuteGroupTriggerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExecuteGroupTriggerRsp)
  return false;
#undef DO_
}

void ExecuteGroupTriggerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExecuteGroupTriggerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExecuteGroupTriggerRsp)
}

::google::protobuf::uint8* ExecuteGroupTriggerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExecuteGroupTriggerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExecuteGroupTriggerRsp)
  return target;
}

size_t ExecuteGroupTriggerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExecuteGroupTriggerRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteGroupTriggerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExecuteGroupTriggerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteGroupTriggerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteGroupTriggerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExecuteGroupTriggerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExecuteGroupTriggerRsp)
    MergeFrom(*source);
  }
}

void ExecuteGroupTriggerRsp::MergeFrom(const ExecuteGroupTriggerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExecuteGroupTriggerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ExecuteGroupTriggerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExecuteGroupTriggerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteGroupTriggerRsp::CopyFrom(const ExecuteGroupTriggerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExecuteGroupTriggerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteGroupTriggerRsp::IsInitialized() const {
  return true;
}

void ExecuteGroupTriggerRsp::Swap(ExecuteGroupTriggerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteGroupTriggerRsp::InternalSwap(ExecuteGroupTriggerRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteGroupTriggerRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteGroupTriggerRsp

// int32 retcode = 1;
void ExecuteGroupTriggerRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ExecuteGroupTriggerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGroupTriggerRsp.retcode)
  return retcode_;
}
void ExecuteGroupTriggerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGroupTriggerRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelupCityReq::kSceneIdFieldNumber;
const int LevelupCityReq::kAreaIdFieldNumber;
const int LevelupCityReq::kItemNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelupCityReq::LevelupCityReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LevelupCityReq)
}
LevelupCityReq::LevelupCityReq(const LevelupCityReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_num_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(item_num_));
  // @@protoc_insertion_point(copy_constructor:proto.LevelupCityReq)
}

void LevelupCityReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(item_num_));
  _cached_size_ = 0;
}

LevelupCityReq::~LevelupCityReq() {
  // @@protoc_insertion_point(destructor:proto.LevelupCityReq)
  SharedDtor();
}

void LevelupCityReq::SharedDtor() {
}

void LevelupCityReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelupCityReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelupCityReq& LevelupCityReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

LevelupCityReq* LevelupCityReq::New(::google::protobuf::Arena* arena) const {
  LevelupCityReq* n = new LevelupCityReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelupCityReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LevelupCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_num_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(item_num_));
  _internal_metadata_.Clear();
}

bool LevelupCityReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LevelupCityReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 area_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LevelupCityReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LevelupCityReq)
  return false;
#undef DO_
}

void LevelupCityReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LevelupCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 area_id = 2;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->area_id(), output);
  }

  // uint32 item_num = 3;
  if (this->item_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LevelupCityReq)
}

::google::protobuf::uint8* LevelupCityReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LevelupCityReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 area_id = 2;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->area_id(), target);
  }

  // uint32 item_num = 3;
  if (this->item_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LevelupCityReq)
  return target;
}

size_t LevelupCityReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LevelupCityReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 area_id = 2;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  // uint32 item_num = 3;
  if (this->item_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelupCityReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LevelupCityReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelupCityReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelupCityReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LevelupCityReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LevelupCityReq)
    MergeFrom(*source);
  }
}

void LevelupCityReq::MergeFrom(const LevelupCityReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LevelupCityReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
  if (from.item_num() != 0) {
    set_item_num(from.item_num());
  }
}

void LevelupCityReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LevelupCityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelupCityReq::CopyFrom(const LevelupCityReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LevelupCityReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelupCityReq::IsInitialized() const {
  return true;
}

void LevelupCityReq::Swap(LevelupCityReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelupCityReq::InternalSwap(LevelupCityReq* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(area_id_, other->area_id_);
  swap(item_num_, other->item_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelupCityReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LevelupCityReq

// uint32 scene_id = 1;
void LevelupCityReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 LevelupCityReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.scene_id)
  return scene_id_;
}
void LevelupCityReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.scene_id)
}

// uint32 area_id = 2;
void LevelupCityReq::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 LevelupCityReq::area_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.area_id)
  return area_id_;
}
void LevelupCityReq::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.area_id)
}

// uint32 item_num = 3;
void LevelupCityReq::clear_item_num() {
  item_num_ = 0u;
}
::google::protobuf::uint32 LevelupCityReq::item_num() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityReq.item_num)
  return item_num_;
}
void LevelupCityReq::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityReq.item_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelupCityRsp::kRetcodeFieldNumber;
const int LevelupCityRsp::kSceneIdFieldNumber;
const int LevelupCityRsp::kAreaIdFieldNumber;
const int LevelupCityRsp::kCityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelupCityRsp::LevelupCityRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LevelupCityRsp)
}
LevelupCityRsp::LevelupCityRsp(const LevelupCityRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_city_info()) {
    city_info_ = new ::proto::CityInfo(*from.city_info_);
  } else {
    city_info_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&area_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(area_id_));
  // @@protoc_insertion_point(copy_constructor:proto.LevelupCityRsp)
}

void LevelupCityRsp::SharedCtor() {
  ::memset(&city_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&city_info_)) + sizeof(area_id_));
  _cached_size_ = 0;
}

LevelupCityRsp::~LevelupCityRsp() {
  // @@protoc_insertion_point(destructor:proto.LevelupCityRsp)
  SharedDtor();
}

void LevelupCityRsp::SharedDtor() {
  if (this != internal_default_instance()) delete city_info_;
}

void LevelupCityRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelupCityRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LevelupCityRsp& LevelupCityRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

LevelupCityRsp* LevelupCityRsp::New(::google::protobuf::Arena* arena) const {
  LevelupCityRsp* n = new LevelupCityRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelupCityRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LevelupCityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && city_info_ != NULL) {
    delete city_info_;
  }
  city_info_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&area_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(area_id_));
  _internal_metadata_.Clear();
}

bool LevelupCityRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LevelupCityRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 area_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CityInfo city_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_city_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LevelupCityRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LevelupCityRsp)
  return false;
#undef DO_
}

void LevelupCityRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LevelupCityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->area_id(), output);
  }

  // .proto.CityInfo city_info = 4;
  if (this->has_city_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->city_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LevelupCityRsp)
}

::google::protobuf::uint8* LevelupCityRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LevelupCityRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->area_id(), target);
  }

  // .proto.CityInfo city_info = 4;
  if (this->has_city_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->city_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LevelupCityRsp)
  return target;
}

size_t LevelupCityRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LevelupCityRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CityInfo city_info = 4;
  if (this->has_city_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->city_info_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 area_id = 3;
  if (this->area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelupCityRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LevelupCityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelupCityRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelupCityRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LevelupCityRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LevelupCityRsp)
    MergeFrom(*source);
  }
}

void LevelupCityRsp::MergeFrom(const LevelupCityRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LevelupCityRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_city_info()) {
    mutable_city_info()->::proto::CityInfo::MergeFrom(from.city_info());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.area_id() != 0) {
    set_area_id(from.area_id());
  }
}

void LevelupCityRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LevelupCityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelupCityRsp::CopyFrom(const LevelupCityRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LevelupCityRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelupCityRsp::IsInitialized() const {
  return true;
}

void LevelupCityRsp::Swap(LevelupCityRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelupCityRsp::InternalSwap(LevelupCityRsp* other) {
  using std::swap;
  swap(city_info_, other->city_info_);
  swap(retcode_, other->retcode_);
  swap(scene_id_, other->scene_id_);
  swap(area_id_, other->area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelupCityRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LevelupCityRsp

// int32 retcode = 1;
void LevelupCityRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 LevelupCityRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.retcode)
  return retcode_;
}
void LevelupCityRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.retcode)
}

// uint32 scene_id = 2;
void LevelupCityRsp::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 LevelupCityRsp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.scene_id)
  return scene_id_;
}
void LevelupCityRsp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.scene_id)
}

// uint32 area_id = 3;
void LevelupCityRsp::clear_area_id() {
  area_id_ = 0u;
}
::google::protobuf::uint32 LevelupCityRsp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.area_id)
  return area_id_;
}
void LevelupCityRsp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelupCityRsp.area_id)
}

// .proto.CityInfo city_info = 4;
bool LevelupCityRsp::has_city_info() const {
  return this != internal_default_instance() && city_info_ != NULL;
}
void LevelupCityRsp::clear_city_info() {
  if (GetArenaNoVirtual() == NULL && city_info_ != NULL) delete city_info_;
  city_info_ = NULL;
}
const ::proto::CityInfo& LevelupCityRsp::city_info() const {
  const ::proto::CityInfo* p = city_info_;
  // @@protoc_insertion_point(field_get:proto.LevelupCityRsp.city_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CityInfo*>(
      &::proto::_CityInfo_default_instance_);
}
::proto::CityInfo* LevelupCityRsp::mutable_city_info() {
  
  if (city_info_ == NULL) {
    city_info_ = new ::proto::CityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.LevelupCityRsp.city_info)
  return city_info_;
}
::proto::CityInfo* LevelupCityRsp::release_city_info() {
  // @@protoc_insertion_point(field_release:proto.LevelupCityRsp.city_info)
  
  ::proto::CityInfo* temp = city_info_;
  city_info_ = NULL;
  return temp;
}
void LevelupCityRsp::set_allocated_city_info(::proto::CityInfo* city_info) {
  delete city_info_;
  city_info_ = city_info;
  if (city_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.LevelupCityRsp.city_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoutePointChangeInfo::kPointIndexFieldNumber;
const int RoutePointChangeInfo::kTargetVelocityFieldNumber;
const int RoutePointChangeInfo::kWaitTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoutePointChangeInfo::RoutePointChangeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RoutePointChangeInfo)
}
RoutePointChangeInfo::RoutePointChangeInfo(const RoutePointChangeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&point_index_, &from.point_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&wait_time_) -
    reinterpret_cast<char*>(&point_index_)) + sizeof(wait_time_));
  // @@protoc_insertion_point(copy_constructor:proto.RoutePointChangeInfo)
}

void RoutePointChangeInfo::SharedCtor() {
  ::memset(&point_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wait_time_) -
      reinterpret_cast<char*>(&point_index_)) + sizeof(wait_time_));
  _cached_size_ = 0;
}

RoutePointChangeInfo::~RoutePointChangeInfo() {
  // @@protoc_insertion_point(destructor:proto.RoutePointChangeInfo)
  SharedDtor();
}

void RoutePointChangeInfo::SharedDtor() {
}

void RoutePointChangeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoutePointChangeInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoutePointChangeInfo& RoutePointChangeInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoutePointChangeInfo* RoutePointChangeInfo::New(::google::protobuf::Arena* arena) const {
  RoutePointChangeInfo* n = new RoutePointChangeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoutePointChangeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RoutePointChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&point_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wait_time_) -
      reinterpret_cast<char*>(&point_index_)) + sizeof(wait_time_));
  _internal_metadata_.Clear();
}

bool RoutePointChangeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RoutePointChangeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 point_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float target_velocity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &target_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float wait_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &wait_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RoutePointChangeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RoutePointChangeInfo)
  return false;
#undef DO_
}

void RoutePointChangeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RoutePointChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_index = 1;
  if (this->point_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->point_index(), output);
  }

  // float target_velocity = 2;
  if (this->target_velocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->target_velocity(), output);
  }

  // float wait_time = 3;
  if (this->wait_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->wait_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RoutePointChangeInfo)
}

::google::protobuf::uint8* RoutePointChangeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RoutePointChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_index = 1;
  if (this->point_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->point_index(), target);
  }

  // float target_velocity = 2;
  if (this->target_velocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->target_velocity(), target);
  }

  // float wait_time = 3;
  if (this->wait_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->wait_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RoutePointChangeInfo)
  return target;
}

size_t RoutePointChangeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RoutePointChangeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 point_index = 1;
  if (this->point_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_index());
  }

  // float target_velocity = 2;
  if (this->target_velocity() != 0) {
    total_size += 1 + 4;
  }

  // float wait_time = 3;
  if (this->wait_time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoutePointChangeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RoutePointChangeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoutePointChangeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoutePointChangeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RoutePointChangeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RoutePointChangeInfo)
    MergeFrom(*source);
  }
}

void RoutePointChangeInfo::MergeFrom(const RoutePointChangeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RoutePointChangeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point_index() != 0) {
    set_point_index(from.point_index());
  }
  if (from.target_velocity() != 0) {
    set_target_velocity(from.target_velocity());
  }
  if (from.wait_time() != 0) {
    set_wait_time(from.wait_time());
  }
}

void RoutePointChangeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RoutePointChangeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoutePointChangeInfo::CopyFrom(const RoutePointChangeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RoutePointChangeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoutePointChangeInfo::IsInitialized() const {
  return true;
}

void RoutePointChangeInfo::Swap(RoutePointChangeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoutePointChangeInfo::InternalSwap(RoutePointChangeInfo* other) {
  using std::swap;
  swap(point_index_, other->point_index_);
  swap(target_velocity_, other->target_velocity_);
  swap(wait_time_, other->wait_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoutePointChangeInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoutePointChangeInfo

// uint32 point_index = 1;
void RoutePointChangeInfo::clear_point_index() {
  point_index_ = 0u;
}
::google::protobuf::uint32 RoutePointChangeInfo::point_index() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.point_index)
  return point_index_;
}
void RoutePointChangeInfo::set_point_index(::google::protobuf::uint32 value) {
  
  point_index_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.point_index)
}

// float target_velocity = 2;
void RoutePointChangeInfo::clear_target_velocity() {
  target_velocity_ = 0;
}
float RoutePointChangeInfo::target_velocity() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.target_velocity)
  return target_velocity_;
}
void RoutePointChangeInfo::set_target_velocity(float value) {
  
  target_velocity_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.target_velocity)
}

// float wait_time = 3;
void RoutePointChangeInfo::clear_wait_time() {
  wait_time_ = 0;
}
float RoutePointChangeInfo::wait_time() const {
  // @@protoc_insertion_point(field_get:proto.RoutePointChangeInfo.wait_time)
  return wait_time_;
}
void RoutePointChangeInfo::set_wait_time(float value) {
  
  wait_time_ = value;
  // @@protoc_insertion_point(field_set:proto.RoutePointChangeInfo.wait_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneRouteChangeInfo::kRouteIdFieldNumber;
const int SceneRouteChangeInfo::kTypeFieldNumber;
const int SceneRouteChangeInfo::kIsForwardFieldNumber;
const int SceneRouteChangeInfo::kPointListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneRouteChangeInfo::SceneRouteChangeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneRouteChangeInfo)
}
SceneRouteChangeInfo::SceneRouteChangeInfo(const SceneRouteChangeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_list_(from.point_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&route_id_, &from.route_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_forward_) -
    reinterpret_cast<char*>(&route_id_)) + sizeof(is_forward_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneRouteChangeInfo)
}

void SceneRouteChangeInfo::SharedCtor() {
  ::memset(&route_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_forward_) -
      reinterpret_cast<char*>(&route_id_)) + sizeof(is_forward_));
  _cached_size_ = 0;
}

SceneRouteChangeInfo::~SceneRouteChangeInfo() {
  // @@protoc_insertion_point(destructor:proto.SceneRouteChangeInfo)
  SharedDtor();
}

void SceneRouteChangeInfo::SharedDtor() {
}

void SceneRouteChangeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneRouteChangeInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneRouteChangeInfo& SceneRouteChangeInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneRouteChangeInfo* SceneRouteChangeInfo::New(::google::protobuf::Arena* arena) const {
  SceneRouteChangeInfo* n = new SceneRouteChangeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneRouteChangeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneRouteChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_list_.Clear();
  ::memset(&route_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_forward_) -
      reinterpret_cast<char*>(&route_id_)) + sizeof(is_forward_));
  _internal_metadata_.Clear();
}

bool SceneRouteChangeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneRouteChangeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 route_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &route_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_forward = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_forward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.RoutePointChangeInfo point_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneRouteChangeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneRouteChangeInfo)
  return false;
#undef DO_
}

void SceneRouteChangeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneRouteChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->route_id(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_forward(), output);
  }

  // repeated .proto.RoutePointChangeInfo point_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->point_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneRouteChangeInfo)
}

::google::protobuf::uint8* SceneRouteChangeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneRouteChangeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->route_id(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_forward(), target);
  }

  // repeated .proto.RoutePointChangeInfo point_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->point_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneRouteChangeInfo)
  return target;
}

size_t SceneRouteChangeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneRouteChangeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.RoutePointChangeInfo point_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->point_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point_list(static_cast<int>(i)));
    }
  }

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->route_id());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // bool is_forward = 3;
  if (this->is_forward() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneRouteChangeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneRouteChangeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneRouteChangeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneRouteChangeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneRouteChangeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneRouteChangeInfo)
    MergeFrom(*source);
  }
}

void SceneRouteChangeInfo::MergeFrom(const SceneRouteChangeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneRouteChangeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_list_.MergeFrom(from.point_list_);
  if (from.route_id() != 0) {
    set_route_id(from.route_id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.is_forward() != 0) {
    set_is_forward(from.is_forward());
  }
}

void SceneRouteChangeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneRouteChangeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneRouteChangeInfo::CopyFrom(const SceneRouteChangeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneRouteChangeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneRouteChangeInfo::IsInitialized() const {
  return true;
}

void SceneRouteChangeInfo::Swap(SceneRouteChangeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneRouteChangeInfo::InternalSwap(SceneRouteChangeInfo* other) {
  using std::swap;
  point_list_.InternalSwap(&other->point_list_);
  swap(route_id_, other->route_id_);
  swap(type_, other->type_);
  swap(is_forward_, other->is_forward_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneRouteChangeInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneRouteChangeInfo

// uint32 route_id = 1;
void SceneRouteChangeInfo::clear_route_id() {
  route_id_ = 0u;
}
::google::protobuf::uint32 SceneRouteChangeInfo::route_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.route_id)
  return route_id_;
}
void SceneRouteChangeInfo::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.route_id)
}

// uint32 type = 2;
void SceneRouteChangeInfo::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 SceneRouteChangeInfo::type() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.type)
  return type_;
}
void SceneRouteChangeInfo::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.type)
}

// bool is_forward = 3;
void SceneRouteChangeInfo::clear_is_forward() {
  is_forward_ = false;
}
bool SceneRouteChangeInfo::is_forward() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.is_forward)
  return is_forward_;
}
void SceneRouteChangeInfo::set_is_forward(bool value) {
  
  is_forward_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeInfo.is_forward)
}

// repeated .proto.RoutePointChangeInfo point_list = 4;
int SceneRouteChangeInfo::point_list_size() const {
  return point_list_.size();
}
void SceneRouteChangeInfo::clear_point_list() {
  point_list_.Clear();
}
const ::proto::RoutePointChangeInfo& SceneRouteChangeInfo::point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Get(index);
}
::proto::RoutePointChangeInfo* SceneRouteChangeInfo::mutable_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Mutable(index);
}
::proto::RoutePointChangeInfo* SceneRouteChangeInfo::add_point_list() {
  // @@protoc_insertion_point(field_add:proto.SceneRouteChangeInfo.point_list)
  return point_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >*
SceneRouteChangeInfo::mutable_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneRouteChangeInfo.point_list)
  return &point_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::RoutePointChangeInfo >&
SceneRouteChangeInfo::point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneRouteChangeInfo.point_list)
  return point_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneRouteChangeNotify::kSceneIdFieldNumber;
const int SceneRouteChangeNotify::kRouteListFieldNumber;
const int SceneRouteChangeNotify::kSceneTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneRouteChangeNotify::SceneRouteChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneRouteChangeNotify)
}
SceneRouteChangeNotify::SceneRouteChangeNotify(const SceneRouteChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      route_list_(from.route_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_time_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(scene_time_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneRouteChangeNotify)
}

void SceneRouteChangeNotify::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(scene_time_));
  _cached_size_ = 0;
}

SceneRouteChangeNotify::~SceneRouteChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneRouteChangeNotify)
  SharedDtor();
}

void SceneRouteChangeNotify::SharedDtor() {
}

void SceneRouteChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneRouteChangeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneRouteChangeNotify& SceneRouteChangeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneRouteChangeNotify* SceneRouteChangeNotify::New(::google::protobuf::Arena* arena) const {
  SceneRouteChangeNotify* n = new SceneRouteChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneRouteChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneRouteChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  route_list_.Clear();
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(scene_time_));
  _internal_metadata_.Clear();
}

bool SceneRouteChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneRouteChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.SceneRouteChangeInfo route_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_route_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneRouteChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneRouteChangeNotify)
  return false;
#undef DO_
}

void SceneRouteChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneRouteChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // repeated .proto.SceneRouteChangeInfo route_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->route_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->route_list(static_cast<int>(i)), output);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneRouteChangeNotify)
}

::google::protobuf::uint8* SceneRouteChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneRouteChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // repeated .proto.SceneRouteChangeInfo route_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->route_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->route_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneRouteChangeNotify)
  return target;
}

size_t SceneRouteChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneRouteChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.SceneRouteChangeInfo route_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->route_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->route_list(static_cast<int>(i)));
    }
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneRouteChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneRouteChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneRouteChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneRouteChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneRouteChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneRouteChangeNotify)
    MergeFrom(*source);
  }
}

void SceneRouteChangeNotify::MergeFrom(const SceneRouteChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneRouteChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  route_list_.MergeFrom(from.route_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
}

void SceneRouteChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneRouteChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneRouteChangeNotify::CopyFrom(const SceneRouteChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneRouteChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneRouteChangeNotify::IsInitialized() const {
  return true;
}

void SceneRouteChangeNotify::Swap(SceneRouteChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneRouteChangeNotify::InternalSwap(SceneRouteChangeNotify* other) {
  using std::swap;
  route_list_.InternalSwap(&other->route_list_);
  swap(scene_id_, other->scene_id_);
  swap(scene_time_, other->scene_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneRouteChangeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneRouteChangeNotify

// uint32 scene_id = 1;
void SceneRouteChangeNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SceneRouteChangeNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.scene_id)
  return scene_id_;
}
void SceneRouteChangeNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeNotify.scene_id)
}

// repeated .proto.SceneRouteChangeInfo route_list = 2;
int SceneRouteChangeNotify::route_list_size() const {
  return route_list_.size();
}
void SceneRouteChangeNotify::clear_route_list() {
  route_list_.Clear();
}
const ::proto::SceneRouteChangeInfo& SceneRouteChangeNotify::route_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Get(index);
}
::proto::SceneRouteChangeInfo* SceneRouteChangeNotify::mutable_route_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Mutable(index);
}
::proto::SceneRouteChangeInfo* SceneRouteChangeNotify::add_route_list() {
  // @@protoc_insertion_point(field_add:proto.SceneRouteChangeNotify.route_list)
  return route_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >*
SceneRouteChangeNotify::mutable_route_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneRouteChangeNotify.route_list)
  return &route_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::SceneRouteChangeInfo >&
SceneRouteChangeNotify::route_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneRouteChangeNotify.route_list)
  return route_list_;
}

// uint32 scene_time = 3;
void SceneRouteChangeNotify::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 SceneRouteChangeNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneRouteChangeNotify.scene_time)
  return scene_time_;
}
void SceneRouteChangeNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneRouteChangeNotify.scene_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformStartRouteNotify::kEntityIdFieldNumber;
const int PlatformStartRouteNotify::kPlatformFieldNumber;
const int PlatformStartRouteNotify::kSceneTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformStartRouteNotify::PlatformStartRouteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlatformStartRouteNotify)
}
PlatformStartRouteNotify::PlatformStartRouteNotify(const PlatformStartRouteNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_platform()) {
    platform_ = new ::proto::PlatformInfo(*from.platform_);
  } else {
    platform_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_time_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(scene_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PlatformStartRouteNotify)
}

void PlatformStartRouteNotify::SharedCtor() {
  ::memset(&platform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&platform_)) + sizeof(scene_time_));
  _cached_size_ = 0;
}

PlatformStartRouteNotify::~PlatformStartRouteNotify() {
  // @@protoc_insertion_point(destructor:proto.PlatformStartRouteNotify)
  SharedDtor();
}

void PlatformStartRouteNotify::SharedDtor() {
  if (this != internal_default_instance()) delete platform_;
}

void PlatformStartRouteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformStartRouteNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformStartRouteNotify& PlatformStartRouteNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlatformStartRouteNotify* PlatformStartRouteNotify::New(::google::protobuf::Arena* arena) const {
  PlatformStartRouteNotify* n = new PlatformStartRouteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformStartRouteNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlatformStartRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && platform_ != NULL) {
    delete platform_;
  }
  platform_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(scene_time_));
  _internal_metadata_.Clear();
}

bool PlatformStartRouteNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlatformStartRouteNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlatformInfo platform = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_platform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlatformStartRouteNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlatformStartRouteNotify)
  return false;
#undef DO_
}

void PlatformStartRouteNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlatformStartRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.PlatformInfo platform = 2;
  if (this->has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->platform_, output);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlatformStartRouteNotify)
}

::google::protobuf::uint8* PlatformStartRouteNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlatformStartRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.PlatformInfo platform = 2;
  if (this->has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->platform_, deterministic, target);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlatformStartRouteNotify)
  return target;
}

size_t PlatformStartRouteNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlatformStartRouteNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlatformInfo platform = 2;
  if (this->has_platform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->platform_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformStartRouteNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlatformStartRouteNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformStartRouteNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformStartRouteNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlatformStartRouteNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlatformStartRouteNotify)
    MergeFrom(*source);
  }
}

void PlatformStartRouteNotify::MergeFrom(const PlatformStartRouteNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlatformStartRouteNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_platform()) {
    mutable_platform()->::proto::PlatformInfo::MergeFrom(from.platform());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
}

void PlatformStartRouteNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlatformStartRouteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformStartRouteNotify::CopyFrom(const PlatformStartRouteNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlatformStartRouteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformStartRouteNotify::IsInitialized() const {
  return true;
}

void PlatformStartRouteNotify::Swap(PlatformStartRouteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformStartRouteNotify::InternalSwap(PlatformStartRouteNotify* other) {
  using std::swap;
  swap(platform_, other->platform_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformStartRouteNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlatformStartRouteNotify

// uint32 entity_id = 1;
void PlatformStartRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 PlatformStartRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.entity_id)
  return entity_id_;
}
void PlatformStartRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStartRouteNotify.entity_id)
}

// .proto.PlatformInfo platform = 2;
bool PlatformStartRouteNotify::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
void PlatformStartRouteNotify::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) delete platform_;
  platform_ = NULL;
}
const ::proto::PlatformInfo& PlatformStartRouteNotify::platform() const {
  const ::proto::PlatformInfo* p = platform_;
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlatformInfo*>(
      &::proto::_PlatformInfo_default_instance_);
}
::proto::PlatformInfo* PlatformStartRouteNotify::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformStartRouteNotify.platform)
  return platform_;
}
::proto::PlatformInfo* PlatformStartRouteNotify::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlatformStartRouteNotify.platform)
  
  ::proto::PlatformInfo* temp = platform_;
  platform_ = NULL;
  return temp;
}
void PlatformStartRouteNotify::set_allocated_platform(::proto::PlatformInfo* platform) {
  delete platform_;
  platform_ = platform;
  if (platform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformStartRouteNotify.platform)
}

// uint32 scene_time = 3;
void PlatformStartRouteNotify::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 PlatformStartRouteNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStartRouteNotify.scene_time)
  return scene_time_;
}
void PlatformStartRouteNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStartRouteNotify.scene_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformStopRouteNotify::kEntityIdFieldNumber;
const int PlatformStopRouteNotify::kSceneTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformStopRouteNotify::PlatformStopRouteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlatformStopRouteNotify)
}
PlatformStopRouteNotify::PlatformStopRouteNotify(const PlatformStopRouteNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_time_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(scene_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PlatformStopRouteNotify)
}

void PlatformStopRouteNotify::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(scene_time_));
  _cached_size_ = 0;
}

PlatformStopRouteNotify::~PlatformStopRouteNotify() {
  // @@protoc_insertion_point(destructor:proto.PlatformStopRouteNotify)
  SharedDtor();
}

void PlatformStopRouteNotify::SharedDtor() {
}

void PlatformStopRouteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformStopRouteNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformStopRouteNotify& PlatformStopRouteNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlatformStopRouteNotify* PlatformStopRouteNotify::New(::google::protobuf::Arena* arena) const {
  PlatformStopRouteNotify* n = new PlatformStopRouteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformStopRouteNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlatformStopRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(scene_time_));
  _internal_metadata_.Clear();
}

bool PlatformStopRouteNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlatformStopRouteNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlatformStopRouteNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlatformStopRouteNotify)
  return false;
#undef DO_
}

void PlatformStopRouteNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlatformStopRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 scene_time = 2;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlatformStopRouteNotify)
}

::google::protobuf::uint8* PlatformStopRouteNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlatformStopRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 scene_time = 2;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlatformStopRouteNotify)
  return target;
}

size_t PlatformStopRouteNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlatformStopRouteNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 2;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformStopRouteNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlatformStopRouteNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformStopRouteNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformStopRouteNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlatformStopRouteNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlatformStopRouteNotify)
    MergeFrom(*source);
  }
}

void PlatformStopRouteNotify::MergeFrom(const PlatformStopRouteNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlatformStopRouteNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
}

void PlatformStopRouteNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlatformStopRouteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformStopRouteNotify::CopyFrom(const PlatformStopRouteNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlatformStopRouteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformStopRouteNotify::IsInitialized() const {
  return true;
}

void PlatformStopRouteNotify::Swap(PlatformStopRouteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformStopRouteNotify::InternalSwap(PlatformStopRouteNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformStopRouteNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlatformStopRouteNotify

// uint32 entity_id = 1;
void PlatformStopRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 PlatformStopRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStopRouteNotify.entity_id)
  return entity_id_;
}
void PlatformStopRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStopRouteNotify.entity_id)
}

// uint32 scene_time = 2;
void PlatformStopRouteNotify::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 PlatformStopRouteNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformStopRouteNotify.scene_time)
  return scene_time_;
}
void PlatformStopRouteNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformStopRouteNotify.scene_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformChangeRouteNotify::kEntityIdFieldNumber;
const int PlatformChangeRouteNotify::kPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformChangeRouteNotify::PlatformChangeRouteNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlatformChangeRouteNotify)
}
PlatformChangeRouteNotify::PlatformChangeRouteNotify(const PlatformChangeRouteNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_platform()) {
    platform_ = new ::proto::PlatformInfo(*from.platform_);
  } else {
    platform_ = NULL;
  }
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.PlatformChangeRouteNotify)
}

void PlatformChangeRouteNotify::SharedCtor() {
  ::memset(&platform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&platform_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

PlatformChangeRouteNotify::~PlatformChangeRouteNotify() {
  // @@protoc_insertion_point(destructor:proto.PlatformChangeRouteNotify)
  SharedDtor();
}

void PlatformChangeRouteNotify::SharedDtor() {
  if (this != internal_default_instance()) delete platform_;
}

void PlatformChangeRouteNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformChangeRouteNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformChangeRouteNotify& PlatformChangeRouteNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlatformChangeRouteNotify* PlatformChangeRouteNotify::New(::google::protobuf::Arena* arena) const {
  PlatformChangeRouteNotify* n = new PlatformChangeRouteNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformChangeRouteNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlatformChangeRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && platform_ != NULL) {
    delete platform_;
  }
  platform_ = NULL;
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlatformChangeRouteNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlatformChangeRouteNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlatformInfo platform = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_platform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlatformChangeRouteNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlatformChangeRouteNotify)
  return false;
#undef DO_
}

void PlatformChangeRouteNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlatformChangeRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.PlatformInfo platform = 2;
  if (this->has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->platform_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlatformChangeRouteNotify)
}

::google::protobuf::uint8* PlatformChangeRouteNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlatformChangeRouteNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.PlatformInfo platform = 2;
  if (this->has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->platform_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlatformChangeRouteNotify)
  return target;
}

size_t PlatformChangeRouteNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlatformChangeRouteNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlatformInfo platform = 2;
  if (this->has_platform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->platform_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformChangeRouteNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlatformChangeRouteNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformChangeRouteNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformChangeRouteNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlatformChangeRouteNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlatformChangeRouteNotify)
    MergeFrom(*source);
  }
}

void PlatformChangeRouteNotify::MergeFrom(const PlatformChangeRouteNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlatformChangeRouteNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_platform()) {
    mutable_platform()->::proto::PlatformInfo::MergeFrom(from.platform());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void PlatformChangeRouteNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlatformChangeRouteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformChangeRouteNotify::CopyFrom(const PlatformChangeRouteNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlatformChangeRouteNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformChangeRouteNotify::IsInitialized() const {
  return true;
}

void PlatformChangeRouteNotify::Swap(PlatformChangeRouteNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformChangeRouteNotify::InternalSwap(PlatformChangeRouteNotify* other) {
  using std::swap;
  swap(platform_, other->platform_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformChangeRouteNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlatformChangeRouteNotify

// uint32 entity_id = 1;
void PlatformChangeRouteNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 PlatformChangeRouteNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformChangeRouteNotify.entity_id)
  return entity_id_;
}
void PlatformChangeRouteNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformChangeRouteNotify.entity_id)
}

// .proto.PlatformInfo platform = 2;
bool PlatformChangeRouteNotify::has_platform() const {
  return this != internal_default_instance() && platform_ != NULL;
}
void PlatformChangeRouteNotify::clear_platform() {
  if (GetArenaNoVirtual() == NULL && platform_ != NULL) delete platform_;
  platform_ = NULL;
}
const ::proto::PlatformInfo& PlatformChangeRouteNotify::platform() const {
  const ::proto::PlatformInfo* p = platform_;
  // @@protoc_insertion_point(field_get:proto.PlatformChangeRouteNotify.platform)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlatformInfo*>(
      &::proto::_PlatformInfo_default_instance_);
}
::proto::PlatformInfo* PlatformChangeRouteNotify::mutable_platform() {
  
  if (platform_ == NULL) {
    platform_ = new ::proto::PlatformInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformChangeRouteNotify.platform)
  return platform_;
}
::proto::PlatformInfo* PlatformChangeRouteNotify::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlatformChangeRouteNotify.platform)
  
  ::proto::PlatformInfo* temp = platform_;
  platform_ = NULL;
  return temp;
}
void PlatformChangeRouteNotify::set_allocated_platform(::proto::PlatformInfo* platform) {
  delete platform_;
  platform_ = platform;
  if (platform) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformChangeRouteNotify.platform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScenePlayerSoundNotify::kSoundNameFieldNumber;
const int ScenePlayerSoundNotify::kPlayPosFieldNumber;
const int ScenePlayerSoundNotify::kPlayTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScenePlayerSoundNotify::ScenePlayerSoundNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ScenePlayerSoundNotify)
}
ScenePlayerSoundNotify::ScenePlayerSoundNotify(const ScenePlayerSoundNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sound_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sound_name().size() > 0) {
    sound_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sound_name_);
  }
  if (from.has_play_pos()) {
    play_pos_ = new ::proto::Vector(*from.play_pos_);
  } else {
    play_pos_ = NULL;
  }
  play_type_ = from.play_type_;
  // @@protoc_insertion_point(copy_constructor:proto.ScenePlayerSoundNotify)
}

void ScenePlayerSoundNotify::SharedCtor() {
  sound_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&play_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&play_type_) -
      reinterpret_cast<char*>(&play_pos_)) + sizeof(play_type_));
  _cached_size_ = 0;
}

ScenePlayerSoundNotify::~ScenePlayerSoundNotify() {
  // @@protoc_insertion_point(destructor:proto.ScenePlayerSoundNotify)
  SharedDtor();
}

void ScenePlayerSoundNotify::SharedDtor() {
  sound_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete play_pos_;
}

void ScenePlayerSoundNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScenePlayerSoundNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScenePlayerSoundNotify& ScenePlayerSoundNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScenePlayerSoundNotify* ScenePlayerSoundNotify::New(::google::protobuf::Arena* arena) const {
  ScenePlayerSoundNotify* n = new ScenePlayerSoundNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScenePlayerSoundNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ScenePlayerSoundNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sound_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && play_pos_ != NULL) {
    delete play_pos_;
  }
  play_pos_ = NULL;
  play_type_ = 0;
  _internal_metadata_.Clear();
}

bool ScenePlayerSoundNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ScenePlayerSoundNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sound_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sound_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sound_name().data(), static_cast<int>(this->sound_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ScenePlayerSoundNotify.sound_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector play_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_play_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_play_type(static_cast< ::proto::ScenePlayerSoundNotify_PlaySoundType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ScenePlayerSoundNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ScenePlayerSoundNotify)
  return false;
#undef DO_
}

void ScenePlayerSoundNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ScenePlayerSoundNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sound_name = 1;
  if (this->sound_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sound_name().data(), static_cast<int>(this->sound_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ScenePlayerSoundNotify.sound_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sound_name(), output);
  }

  // .proto.Vector play_pos = 2;
  if (this->has_play_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->play_pos_, output);
  }

  // .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 3;
  if (this->play_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->play_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ScenePlayerSoundNotify)
}

::google::protobuf::uint8* ScenePlayerSoundNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ScenePlayerSoundNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sound_name = 1;
  if (this->sound_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sound_name().data(), static_cast<int>(this->sound_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ScenePlayerSoundNotify.sound_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sound_name(), target);
  }

  // .proto.Vector play_pos = 2;
  if (this->has_play_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->play_pos_, deterministic, target);
  }

  // .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 3;
  if (this->play_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->play_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ScenePlayerSoundNotify)
  return target;
}

size_t ScenePlayerSoundNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ScenePlayerSoundNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sound_name = 1;
  if (this->sound_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sound_name());
  }

  // .proto.Vector play_pos = 2;
  if (this->has_play_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->play_pos_);
  }

  // .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 3;
  if (this->play_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->play_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScenePlayerSoundNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ScenePlayerSoundNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ScenePlayerSoundNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScenePlayerSoundNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ScenePlayerSoundNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ScenePlayerSoundNotify)
    MergeFrom(*source);
  }
}

void ScenePlayerSoundNotify::MergeFrom(const ScenePlayerSoundNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ScenePlayerSoundNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sound_name().size() > 0) {

    sound_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sound_name_);
  }
  if (from.has_play_pos()) {
    mutable_play_pos()->::proto::Vector::MergeFrom(from.play_pos());
  }
  if (from.play_type() != 0) {
    set_play_type(from.play_type());
  }
}

void ScenePlayerSoundNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ScenePlayerSoundNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScenePlayerSoundNotify::CopyFrom(const ScenePlayerSoundNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ScenePlayerSoundNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScenePlayerSoundNotify::IsInitialized() const {
  return true;
}

void ScenePlayerSoundNotify::Swap(ScenePlayerSoundNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScenePlayerSoundNotify::InternalSwap(ScenePlayerSoundNotify* other) {
  using std::swap;
  sound_name_.Swap(&other->sound_name_);
  swap(play_pos_, other->play_pos_);
  swap(play_type_, other->play_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScenePlayerSoundNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScenePlayerSoundNotify

// string sound_name = 1;
void ScenePlayerSoundNotify::clear_sound_name() {
  sound_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ScenePlayerSoundNotify::sound_name() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.sound_name)
  return sound_name_.GetNoArena();
}
void ScenePlayerSoundNotify::set_sound_name(const ::std::string& value) {
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ScenePlayerSoundNotify.sound_name)
}
#if LANG_CXX11
void ScenePlayerSoundNotify::set_sound_name(::std::string&& value) {
  
  sound_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ScenePlayerSoundNotify.sound_name)
}
#endif
void ScenePlayerSoundNotify::set_sound_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ScenePlayerSoundNotify.sound_name)
}
void ScenePlayerSoundNotify::set_sound_name(const char* value, size_t size) {
  
  sound_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ScenePlayerSoundNotify.sound_name)
}
::std::string* ScenePlayerSoundNotify::mutable_sound_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerSoundNotify.sound_name)
  return sound_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScenePlayerSoundNotify::release_sound_name() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerSoundNotify.sound_name)
  
  return sound_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScenePlayerSoundNotify::set_allocated_sound_name(::std::string* sound_name) {
  if (sound_name != NULL) {
    
  } else {
    
  }
  sound_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sound_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerSoundNotify.sound_name)
}

// .proto.Vector play_pos = 2;
bool ScenePlayerSoundNotify::has_play_pos() const {
  return this != internal_default_instance() && play_pos_ != NULL;
}
void ScenePlayerSoundNotify::clear_play_pos() {
  if (GetArenaNoVirtual() == NULL && play_pos_ != NULL) delete play_pos_;
  play_pos_ = NULL;
}
const ::proto::Vector& ScenePlayerSoundNotify::play_pos() const {
  const ::proto::Vector* p = play_pos_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.play_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* ScenePlayerSoundNotify::mutable_play_pos() {
  
  if (play_pos_ == NULL) {
    play_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerSoundNotify.play_pos)
  return play_pos_;
}
::proto::Vector* ScenePlayerSoundNotify::release_play_pos() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerSoundNotify.play_pos)
  
  ::proto::Vector* temp = play_pos_;
  play_pos_ = NULL;
  return temp;
}
void ScenePlayerSoundNotify::set_allocated_play_pos(::proto::Vector* play_pos) {
  delete play_pos_;
  play_pos_ = play_pos;
  if (play_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerSoundNotify.play_pos)
}

// .proto.ScenePlayerSoundNotify.PlaySoundType play_type = 3;
void ScenePlayerSoundNotify::clear_play_type() {
  play_type_ = 0;
}
::proto::ScenePlayerSoundNotify_PlaySoundType ScenePlayerSoundNotify::play_type() const {
  // @@protoc_insertion_point(field_get:proto.ScenePlayerSoundNotify.play_type)
  return static_cast< ::proto::ScenePlayerSoundNotify_PlaySoundType >(play_type_);
}
void ScenePlayerSoundNotify::set_play_type(::proto::ScenePlayerSoundNotify_PlaySoundType value) {
  
  play_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ScenePlayerSoundNotify.play_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersonalSceneJumpReq::kPointIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersonalSceneJumpReq::PersonalSceneJumpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PersonalSceneJumpReq)
}
PersonalSceneJumpReq::PersonalSceneJumpReq(const PersonalSceneJumpReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  point_id_ = from.point_id_;
  // @@protoc_insertion_point(copy_constructor:proto.PersonalSceneJumpReq)
}

void PersonalSceneJumpReq::SharedCtor() {
  point_id_ = 0u;
  _cached_size_ = 0;
}

PersonalSceneJumpReq::~PersonalSceneJumpReq() {
  // @@protoc_insertion_point(destructor:proto.PersonalSceneJumpReq)
  SharedDtor();
}

void PersonalSceneJumpReq::SharedDtor() {
}

void PersonalSceneJumpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersonalSceneJumpReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersonalSceneJumpReq& PersonalSceneJumpReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersonalSceneJumpReq* PersonalSceneJumpReq::New(::google::protobuf::Arena* arena) const {
  PersonalSceneJumpReq* n = new PersonalSceneJumpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersonalSceneJumpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PersonalSceneJumpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PersonalSceneJumpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PersonalSceneJumpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 point_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PersonalSceneJumpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PersonalSceneJumpReq)
  return false;
#undef DO_
}

void PersonalSceneJumpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PersonalSceneJumpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PersonalSceneJumpReq)
}

::google::protobuf::uint8* PersonalSceneJumpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PersonalSceneJumpReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PersonalSceneJumpReq)
  return target;
}

size_t PersonalSceneJumpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PersonalSceneJumpReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersonalSceneJumpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PersonalSceneJumpReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PersonalSceneJumpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersonalSceneJumpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PersonalSceneJumpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PersonalSceneJumpReq)
    MergeFrom(*source);
  }
}

void PersonalSceneJumpReq::MergeFrom(const PersonalSceneJumpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PersonalSceneJumpReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
}

void PersonalSceneJumpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PersonalSceneJumpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersonalSceneJumpReq::CopyFrom(const PersonalSceneJumpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PersonalSceneJumpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersonalSceneJumpReq::IsInitialized() const {
  return true;
}

void PersonalSceneJumpReq::Swap(PersonalSceneJumpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersonalSceneJumpReq::InternalSwap(PersonalSceneJumpReq* other) {
  using std::swap;
  swap(point_id_, other->point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersonalSceneJumpReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersonalSceneJumpReq

// uint32 point_id = 1;
void PersonalSceneJumpReq::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 PersonalSceneJumpReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpReq.point_id)
  return point_id_;
}
void PersonalSceneJumpReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpReq.point_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersonalSceneJumpRsp::kRetcodeFieldNumber;
const int PersonalSceneJumpRsp::kDestSceneIdFieldNumber;
const int PersonalSceneJumpRsp::kDestPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersonalSceneJumpRsp::PersonalSceneJumpRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PersonalSceneJumpRsp)
}
PersonalSceneJumpRsp::PersonalSceneJumpRsp(const PersonalSceneJumpRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dest_pos()) {
    dest_pos_ = new ::proto::Vector(*from.dest_pos_);
  } else {
    dest_pos_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&dest_scene_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(dest_scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.PersonalSceneJumpRsp)
}

void PersonalSceneJumpRsp::SharedCtor() {
  ::memset(&dest_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_scene_id_) -
      reinterpret_cast<char*>(&dest_pos_)) + sizeof(dest_scene_id_));
  _cached_size_ = 0;
}

PersonalSceneJumpRsp::~PersonalSceneJumpRsp() {
  // @@protoc_insertion_point(destructor:proto.PersonalSceneJumpRsp)
  SharedDtor();
}

void PersonalSceneJumpRsp::SharedDtor() {
  if (this != internal_default_instance()) delete dest_pos_;
}

void PersonalSceneJumpRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersonalSceneJumpRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PersonalSceneJumpRsp& PersonalSceneJumpRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersonalSceneJumpRsp* PersonalSceneJumpRsp::New(::google::protobuf::Arena* arena) const {
  PersonalSceneJumpRsp* n = new PersonalSceneJumpRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersonalSceneJumpRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PersonalSceneJumpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dest_pos_ != NULL) {
    delete dest_pos_;
  }
  dest_pos_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_scene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(dest_scene_id_));
  _internal_metadata_.Clear();
}

bool PersonalSceneJumpRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PersonalSceneJumpRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dest_scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector dest_pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dest_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PersonalSceneJumpRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PersonalSceneJumpRsp)
  return false;
#undef DO_
}

void PersonalSceneJumpRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PersonalSceneJumpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 dest_scene_id = 2;
  if (this->dest_scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dest_scene_id(), output);
  }

  // .proto.Vector dest_pos = 3;
  if (this->has_dest_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dest_pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PersonalSceneJumpRsp)
}

::google::protobuf::uint8* PersonalSceneJumpRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PersonalSceneJumpRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 dest_scene_id = 2;
  if (this->dest_scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dest_scene_id(), target);
  }

  // .proto.Vector dest_pos = 3;
  if (this->has_dest_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->dest_pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PersonalSceneJumpRsp)
  return target;
}

size_t PersonalSceneJumpRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PersonalSceneJumpRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector dest_pos = 3;
  if (this->has_dest_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dest_pos_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 dest_scene_id = 2;
  if (this->dest_scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dest_scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersonalSceneJumpRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PersonalSceneJumpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PersonalSceneJumpRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersonalSceneJumpRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PersonalSceneJumpRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PersonalSceneJumpRsp)
    MergeFrom(*source);
  }
}

void PersonalSceneJumpRsp::MergeFrom(const PersonalSceneJumpRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PersonalSceneJumpRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dest_pos()) {
    mutable_dest_pos()->::proto::Vector::MergeFrom(from.dest_pos());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.dest_scene_id() != 0) {
    set_dest_scene_id(from.dest_scene_id());
  }
}

void PersonalSceneJumpRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PersonalSceneJumpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersonalSceneJumpRsp::CopyFrom(const PersonalSceneJumpRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PersonalSceneJumpRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersonalSceneJumpRsp::IsInitialized() const {
  return true;
}

void PersonalSceneJumpRsp::Swap(PersonalSceneJumpRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersonalSceneJumpRsp::InternalSwap(PersonalSceneJumpRsp* other) {
  using std::swap;
  swap(dest_pos_, other->dest_pos_);
  swap(retcode_, other->retcode_);
  swap(dest_scene_id_, other->dest_scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersonalSceneJumpRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersonalSceneJumpRsp

// int32 retcode = 1;
void PersonalSceneJumpRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PersonalSceneJumpRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.retcode)
  return retcode_;
}
void PersonalSceneJumpRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpRsp.retcode)
}

// uint32 dest_scene_id = 2;
void PersonalSceneJumpRsp::clear_dest_scene_id() {
  dest_scene_id_ = 0u;
}
::google::protobuf::uint32 PersonalSceneJumpRsp::dest_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.dest_scene_id)
  return dest_scene_id_;
}
void PersonalSceneJumpRsp::set_dest_scene_id(::google::protobuf::uint32 value) {
  
  dest_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PersonalSceneJumpRsp.dest_scene_id)
}

// .proto.Vector dest_pos = 3;
bool PersonalSceneJumpRsp::has_dest_pos() const {
  return this != internal_default_instance() && dest_pos_ != NULL;
}
void PersonalSceneJumpRsp::clear_dest_pos() {
  if (GetArenaNoVirtual() == NULL && dest_pos_ != NULL) delete dest_pos_;
  dest_pos_ = NULL;
}
const ::proto::Vector& PersonalSceneJumpRsp::dest_pos() const {
  const ::proto::Vector* p = dest_pos_;
  // @@protoc_insertion_point(field_get:proto.PersonalSceneJumpRsp.dest_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PersonalSceneJumpRsp::mutable_dest_pos() {
  
  if (dest_pos_ == NULL) {
    dest_pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PersonalSceneJumpRsp.dest_pos)
  return dest_pos_;
}
::proto::Vector* PersonalSceneJumpRsp::release_dest_pos() {
  // @@protoc_insertion_point(field_release:proto.PersonalSceneJumpRsp.dest_pos)
  
  ::proto::Vector* temp = dest_pos_;
  dest_pos_ = NULL;
  return temp;
}
void PersonalSceneJumpRsp::set_allocated_dest_pos(::proto::Vector* dest_pos) {
  delete dest_pos_;
  dest_pos_ = dest_pos;
  if (dest_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PersonalSceneJumpRsp.dest_pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SealBattleBeginNotify::kSealEntityIdFieldNumber;
const int SealBattleBeginNotify::kSealRadiusFieldNumber;
const int SealBattleBeginNotify::kSealMaxProgressFieldNumber;
const int SealBattleBeginNotify::kBattleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SealBattleBeginNotify::SealBattleBeginNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SealBattleBeginNotify)
}
SealBattleBeginNotify::SealBattleBeginNotify(const SealBattleBeginNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seal_entity_id_, &from.seal_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&battle_type_) -
    reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(battle_type_));
  // @@protoc_insertion_point(copy_constructor:proto.SealBattleBeginNotify)
}

void SealBattleBeginNotify::SharedCtor() {
  ::memset(&seal_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battle_type_) -
      reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(battle_type_));
  _cached_size_ = 0;
}

SealBattleBeginNotify::~SealBattleBeginNotify() {
  // @@protoc_insertion_point(destructor:proto.SealBattleBeginNotify)
  SharedDtor();
}

void SealBattleBeginNotify::SharedDtor() {
}

void SealBattleBeginNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SealBattleBeginNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SealBattleBeginNotify& SealBattleBeginNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SealBattleBeginNotify* SealBattleBeginNotify::New(::google::protobuf::Arena* arena) const {
  SealBattleBeginNotify* n = new SealBattleBeginNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SealBattleBeginNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SealBattleBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seal_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battle_type_) -
      reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(battle_type_));
  _internal_metadata_.Clear();
}

bool SealBattleBeginNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SealBattleBeginNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seal_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seal_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seal_radius = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seal_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seal_max_progress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seal_max_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SealBattleType battle_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_battle_type(static_cast< ::proto::SealBattleType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SealBattleBeginNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SealBattleBeginNotify)
  return false;
#undef DO_
}

void SealBattleBeginNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SealBattleBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seal_entity_id(), output);
  }

  // uint32 seal_radius = 2;
  if (this->seal_radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->seal_radius(), output);
  }

  // uint32 seal_max_progress = 3;
  if (this->seal_max_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->seal_max_progress(), output);
  }

  // .proto.SealBattleType battle_type = 4;
  if (this->battle_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->battle_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SealBattleBeginNotify)
}

::google::protobuf::uint8* SealBattleBeginNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SealBattleBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seal_entity_id(), target);
  }

  // uint32 seal_radius = 2;
  if (this->seal_radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->seal_radius(), target);
  }

  // uint32 seal_max_progress = 3;
  if (this->seal_max_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->seal_max_progress(), target);
  }

  // .proto.SealBattleType battle_type = 4;
  if (this->battle_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->battle_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SealBattleBeginNotify)
  return target;
}

size_t SealBattleBeginNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SealBattleBeginNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seal_entity_id());
  }

  // uint32 seal_radius = 2;
  if (this->seal_radius() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seal_radius());
  }

  // uint32 seal_max_progress = 3;
  if (this->seal_max_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seal_max_progress());
  }

  // .proto.SealBattleType battle_type = 4;
  if (this->battle_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->battle_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SealBattleBeginNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SealBattleBeginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SealBattleBeginNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SealBattleBeginNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SealBattleBeginNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SealBattleBeginNotify)
    MergeFrom(*source);
  }
}

void SealBattleBeginNotify::MergeFrom(const SealBattleBeginNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SealBattleBeginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seal_entity_id() != 0) {
    set_seal_entity_id(from.seal_entity_id());
  }
  if (from.seal_radius() != 0) {
    set_seal_radius(from.seal_radius());
  }
  if (from.seal_max_progress() != 0) {
    set_seal_max_progress(from.seal_max_progress());
  }
  if (from.battle_type() != 0) {
    set_battle_type(from.battle_type());
  }
}

void SealBattleBeginNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SealBattleBeginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SealBattleBeginNotify::CopyFrom(const SealBattleBeginNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SealBattleBeginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SealBattleBeginNotify::IsInitialized() const {
  return true;
}

void SealBattleBeginNotify::Swap(SealBattleBeginNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SealBattleBeginNotify::InternalSwap(SealBattleBeginNotify* other) {
  using std::swap;
  swap(seal_entity_id_, other->seal_entity_id_);
  swap(seal_radius_, other->seal_radius_);
  swap(seal_max_progress_, other->seal_max_progress_);
  swap(battle_type_, other->battle_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SealBattleBeginNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SealBattleBeginNotify

// uint32 seal_entity_id = 1;
void SealBattleBeginNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
::google::protobuf::uint32 SealBattleBeginNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_entity_id)
  return seal_entity_id_;
}
void SealBattleBeginNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_entity_id)
}

// uint32 seal_radius = 2;
void SealBattleBeginNotify::clear_seal_radius() {
  seal_radius_ = 0u;
}
::google::protobuf::uint32 SealBattleBeginNotify::seal_radius() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_radius)
  return seal_radius_;
}
void SealBattleBeginNotify::set_seal_radius(::google::protobuf::uint32 value) {
  
  seal_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_radius)
}

// uint32 seal_max_progress = 3;
void SealBattleBeginNotify::clear_seal_max_progress() {
  seal_max_progress_ = 0u;
}
::google::protobuf::uint32 SealBattleBeginNotify::seal_max_progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.seal_max_progress)
  return seal_max_progress_;
}
void SealBattleBeginNotify::set_seal_max_progress(::google::protobuf::uint32 value) {
  
  seal_max_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.seal_max_progress)
}

// .proto.SealBattleType battle_type = 4;
void SealBattleBeginNotify::clear_battle_type() {
  battle_type_ = 0;
}
::proto::SealBattleType SealBattleBeginNotify::battle_type() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleBeginNotify.battle_type)
  return static_cast< ::proto::SealBattleType >(battle_type_);
}
void SealBattleBeginNotify::set_battle_type(::proto::SealBattleType value) {
  
  battle_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleBeginNotify.battle_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SealBattleEndNotify::kSealEntityIdFieldNumber;
const int SealBattleEndNotify::kIsWinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SealBattleEndNotify::SealBattleEndNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SealBattleEndNotify)
}
SealBattleEndNotify::SealBattleEndNotify(const SealBattleEndNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seal_entity_id_, &from.seal_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_win_) -
    reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(is_win_));
  // @@protoc_insertion_point(copy_constructor:proto.SealBattleEndNotify)
}

void SealBattleEndNotify::SharedCtor() {
  ::memset(&seal_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_win_) -
      reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(is_win_));
  _cached_size_ = 0;
}

SealBattleEndNotify::~SealBattleEndNotify() {
  // @@protoc_insertion_point(destructor:proto.SealBattleEndNotify)
  SharedDtor();
}

void SealBattleEndNotify::SharedDtor() {
}

void SealBattleEndNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SealBattleEndNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SealBattleEndNotify& SealBattleEndNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SealBattleEndNotify* SealBattleEndNotify::New(::google::protobuf::Arena* arena) const {
  SealBattleEndNotify* n = new SealBattleEndNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SealBattleEndNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SealBattleEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seal_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_win_) -
      reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(is_win_));
  _internal_metadata_.Clear();
}

bool SealBattleEndNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SealBattleEndNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seal_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seal_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_win = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_win_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SealBattleEndNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SealBattleEndNotify)
  return false;
#undef DO_
}

void SealBattleEndNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SealBattleEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seal_entity_id(), output);
  }

  // bool is_win = 2;
  if (this->is_win() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_win(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SealBattleEndNotify)
}

::google::protobuf::uint8* SealBattleEndNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SealBattleEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seal_entity_id(), target);
  }

  // bool is_win = 2;
  if (this->is_win() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_win(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SealBattleEndNotify)
  return target;
}

size_t SealBattleEndNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SealBattleEndNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seal_entity_id());
  }

  // bool is_win = 2;
  if (this->is_win() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SealBattleEndNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SealBattleEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SealBattleEndNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SealBattleEndNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SealBattleEndNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SealBattleEndNotify)
    MergeFrom(*source);
  }
}

void SealBattleEndNotify::MergeFrom(const SealBattleEndNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SealBattleEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seal_entity_id() != 0) {
    set_seal_entity_id(from.seal_entity_id());
  }
  if (from.is_win() != 0) {
    set_is_win(from.is_win());
  }
}

void SealBattleEndNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SealBattleEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SealBattleEndNotify::CopyFrom(const SealBattleEndNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SealBattleEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SealBattleEndNotify::IsInitialized() const {
  return true;
}

void SealBattleEndNotify::Swap(SealBattleEndNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SealBattleEndNotify::InternalSwap(SealBattleEndNotify* other) {
  using std::swap;
  swap(seal_entity_id_, other->seal_entity_id_);
  swap(is_win_, other->is_win_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SealBattleEndNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SealBattleEndNotify

// uint32 seal_entity_id = 1;
void SealBattleEndNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
::google::protobuf::uint32 SealBattleEndNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleEndNotify.seal_entity_id)
  return seal_entity_id_;
}
void SealBattleEndNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleEndNotify.seal_entity_id)
}

// bool is_win = 2;
void SealBattleEndNotify::clear_is_win() {
  is_win_ = false;
}
bool SealBattleEndNotify::is_win() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleEndNotify.is_win)
  return is_win_;
}
void SealBattleEndNotify::set_is_win(bool value) {
  
  is_win_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleEndNotify.is_win)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SealBattleProgressNotify::kSealEntityIdFieldNumber;
const int SealBattleProgressNotify::kProgressFieldNumber;
const int SealBattleProgressNotify::kMaxProgressFieldNumber;
const int SealBattleProgressNotify::kEndTimeFieldNumber;
const int SealBattleProgressNotify::kSealRadiusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SealBattleProgressNotify::SealBattleProgressNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SealBattleProgressNotify)
}
SealBattleProgressNotify::SealBattleProgressNotify(const SealBattleProgressNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seal_entity_id_, &from.seal_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&seal_radius_) -
    reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(seal_radius_));
  // @@protoc_insertion_point(copy_constructor:proto.SealBattleProgressNotify)
}

void SealBattleProgressNotify::SharedCtor() {
  ::memset(&seal_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seal_radius_) -
      reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(seal_radius_));
  _cached_size_ = 0;
}

SealBattleProgressNotify::~SealBattleProgressNotify() {
  // @@protoc_insertion_point(destructor:proto.SealBattleProgressNotify)
  SharedDtor();
}

void SealBattleProgressNotify::SharedDtor() {
}

void SealBattleProgressNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SealBattleProgressNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SealBattleProgressNotify& SealBattleProgressNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SealBattleProgressNotify* SealBattleProgressNotify::New(::google::protobuf::Arena* arena) const {
  SealBattleProgressNotify* n = new SealBattleProgressNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SealBattleProgressNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SealBattleProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seal_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seal_radius_) -
      reinterpret_cast<char*>(&seal_entity_id_)) + sizeof(seal_radius_));
  _internal_metadata_.Clear();
}

bool SealBattleProgressNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SealBattleProgressNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 seal_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seal_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_progress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seal_radius = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seal_radius_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SealBattleProgressNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SealBattleProgressNotify)
  return false;
#undef DO_
}

void SealBattleProgressNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SealBattleProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seal_entity_id(), output);
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->progress(), output);
  }

  // uint32 max_progress = 3;
  if (this->max_progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_progress(), output);
  }

  // uint32 end_time = 4;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->end_time(), output);
  }

  // uint32 seal_radius = 5;
  if (this->seal_radius() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->seal_radius(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SealBattleProgressNotify)
}

::google::protobuf::uint8* SealBattleProgressNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SealBattleProgressNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seal_entity_id(), target);
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->progress(), target);
  }

  // uint32 max_progress = 3;
  if (this->max_progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_progress(), target);
  }

  // uint32 end_time = 4;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->end_time(), target);
  }

  // uint32 seal_radius = 5;
  if (this->seal_radius() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->seal_radius(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SealBattleProgressNotify)
  return target;
}

size_t SealBattleProgressNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SealBattleProgressNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 seal_entity_id = 1;
  if (this->seal_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seal_entity_id());
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  // uint32 max_progress = 3;
  if (this->max_progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_progress());
  }

  // uint32 end_time = 4;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  // uint32 seal_radius = 5;
  if (this->seal_radius() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seal_radius());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SealBattleProgressNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SealBattleProgressNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SealBattleProgressNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SealBattleProgressNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SealBattleProgressNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SealBattleProgressNotify)
    MergeFrom(*source);
  }
}

void SealBattleProgressNotify::MergeFrom(const SealBattleProgressNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SealBattleProgressNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seal_entity_id() != 0) {
    set_seal_entity_id(from.seal_entity_id());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
  if (from.max_progress() != 0) {
    set_max_progress(from.max_progress());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
  if (from.seal_radius() != 0) {
    set_seal_radius(from.seal_radius());
  }
}

void SealBattleProgressNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SealBattleProgressNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SealBattleProgressNotify::CopyFrom(const SealBattleProgressNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SealBattleProgressNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SealBattleProgressNotify::IsInitialized() const {
  return true;
}

void SealBattleProgressNotify::Swap(SealBattleProgressNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SealBattleProgressNotify::InternalSwap(SealBattleProgressNotify* other) {
  using std::swap;
  swap(seal_entity_id_, other->seal_entity_id_);
  swap(progress_, other->progress_);
  swap(max_progress_, other->max_progress_);
  swap(end_time_, other->end_time_);
  swap(seal_radius_, other->seal_radius_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SealBattleProgressNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SealBattleProgressNotify

// uint32 seal_entity_id = 1;
void SealBattleProgressNotify::clear_seal_entity_id() {
  seal_entity_id_ = 0u;
}
::google::protobuf::uint32 SealBattleProgressNotify::seal_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.seal_entity_id)
  return seal_entity_id_;
}
void SealBattleProgressNotify::set_seal_entity_id(::google::protobuf::uint32 value) {
  
  seal_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.seal_entity_id)
}

// uint32 progress = 2;
void SealBattleProgressNotify::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 SealBattleProgressNotify::progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.progress)
  return progress_;
}
void SealBattleProgressNotify::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.progress)
}

// uint32 max_progress = 3;
void SealBattleProgressNotify::clear_max_progress() {
  max_progress_ = 0u;
}
::google::protobuf::uint32 SealBattleProgressNotify::max_progress() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.max_progress)
  return max_progress_;
}
void SealBattleProgressNotify::set_max_progress(::google::protobuf::uint32 value) {
  
  max_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.max_progress)
}

// uint32 end_time = 4;
void SealBattleProgressNotify::clear_end_time() {
  end_time_ = 0u;
}
::google::protobuf::uint32 SealBattleProgressNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.end_time)
  return end_time_;
}
void SealBattleProgressNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.end_time)
}

// uint32 seal_radius = 5;
void SealBattleProgressNotify::clear_seal_radius() {
  seal_radius_ = 0u;
}
::google::protobuf::uint32 SealBattleProgressNotify::seal_radius() const {
  // @@protoc_insertion_point(field_get:proto.SealBattleProgressNotify.seal_radius)
  return seal_radius_;
}
void SealBattleProgressNotify::set_seal_radius(::google::protobuf::uint32 value) {
  
  seal_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.SealBattleProgressNotify.seal_radius)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientPauseNotify::kIsOpenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientPauseNotify::ClientPauseNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientPauseNotify)
}
ClientPauseNotify::ClientPauseNotify(const ClientPauseNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_open_ = from.is_open_;
  // @@protoc_insertion_point(copy_constructor:proto.ClientPauseNotify)
}

void ClientPauseNotify::SharedCtor() {
  is_open_ = false;
  _cached_size_ = 0;
}

ClientPauseNotify::~ClientPauseNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientPauseNotify)
  SharedDtor();
}

void ClientPauseNotify::SharedDtor() {
}

void ClientPauseNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientPauseNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientPauseNotify& ClientPauseNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientPauseNotify* ClientPauseNotify::New(::google::protobuf::Arena* arena) const {
  ClientPauseNotify* n = new ClientPauseNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientPauseNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientPauseNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_open_ = false;
  _internal_metadata_.Clear();
}

bool ClientPauseNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientPauseNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_open = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientPauseNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientPauseNotify)
  return false;
#undef DO_
}

void ClientPauseNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientPauseNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_open = 1;
  if (this->is_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_open(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientPauseNotify)
}

::google::protobuf::uint8* ClientPauseNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientPauseNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_open = 1;
  if (this->is_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_open(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientPauseNotify)
  return target;
}

size_t ClientPauseNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientPauseNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_open = 1;
  if (this->is_open() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientPauseNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientPauseNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientPauseNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientPauseNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientPauseNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientPauseNotify)
    MergeFrom(*source);
  }
}

void ClientPauseNotify::MergeFrom(const ClientPauseNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientPauseNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_open() != 0) {
    set_is_open(from.is_open());
  }
}

void ClientPauseNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientPauseNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientPauseNotify::CopyFrom(const ClientPauseNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientPauseNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientPauseNotify::IsInitialized() const {
  return true;
}

void ClientPauseNotify::Swap(ClientPauseNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientPauseNotify::InternalSwap(ClientPauseNotify* other) {
  using std::swap;
  swap(is_open_, other->is_open_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientPauseNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientPauseNotify

// bool is_open = 1;
void ClientPauseNotify::clear_is_open() {
  is_open_ = false;
}
bool ClientPauseNotify::is_open() const {
  // @@protoc_insertion_point(field_get:proto.ClientPauseNotify.is_open)
  return is_open_;
}
void ClientPauseNotify::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientPauseNotify.is_open)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AvatarEnterSceneInfo::kAvatarGuidFieldNumber;
const int AvatarEnterSceneInfo::kAvatarEntityIdFieldNumber;
const int AvatarEnterSceneInfo::kAvatarAbilityInfoFieldNumber;
const int AvatarEnterSceneInfo::kBuffIdListFieldNumber;
const int AvatarEnterSceneInfo::kWeaponGuidFieldNumber;
const int AvatarEnterSceneInfo::kWeaponEntityIdFieldNumber;
const int AvatarEnterSceneInfo::kWeaponAbilityInfoFieldNumber;
const int AvatarEnterSceneInfo::kServerBuffListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AvatarEnterSceneInfo::AvatarEnterSceneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AvatarEnterSceneInfo)
}
AvatarEnterSceneInfo::AvatarEnterSceneInfo(const AvatarEnterSceneInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      buff_id_list_(from.buff_id_list_),
      server_buff_list_(from.server_buff_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_avatar_ability_info()) {
    avatar_ability_info_ = new ::proto::AbilitySyncStateInfo(*from.avatar_ability_info_);
  } else {
    avatar_ability_info_ = NULL;
  }
  if (from.has_weapon_ability_info()) {
    weapon_ability_info_ = new ::proto::AbilitySyncStateInfo(*from.weapon_ability_info_);
  } else {
    weapon_ability_info_ = NULL;
  }
  ::memcpy(&avatar_guid_, &from.avatar_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&weapon_guid_) -
    reinterpret_cast<char*>(&avatar_guid_)) + sizeof(weapon_guid_));
  // @@protoc_insertion_point(copy_constructor:proto.AvatarEnterSceneInfo)
}

void AvatarEnterSceneInfo::SharedCtor() {
  ::memset(&avatar_ability_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weapon_guid_) -
      reinterpret_cast<char*>(&avatar_ability_info_)) + sizeof(weapon_guid_));
  _cached_size_ = 0;
}

AvatarEnterSceneInfo::~AvatarEnterSceneInfo() {
  // @@protoc_insertion_point(destructor:proto.AvatarEnterSceneInfo)
  SharedDtor();
}

void AvatarEnterSceneInfo::SharedDtor() {
  if (this != internal_default_instance()) delete avatar_ability_info_;
  if (this != internal_default_instance()) delete weapon_ability_info_;
}

void AvatarEnterSceneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AvatarEnterSceneInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AvatarEnterSceneInfo& AvatarEnterSceneInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

AvatarEnterSceneInfo* AvatarEnterSceneInfo::New(::google::protobuf::Arena* arena) const {
  AvatarEnterSceneInfo* n = new AvatarEnterSceneInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AvatarEnterSceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AvatarEnterSceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buff_id_list_.Clear();
  server_buff_list_.Clear();
  if (GetArenaNoVirtual() == NULL && avatar_ability_info_ != NULL) {
    delete avatar_ability_info_;
  }
  avatar_ability_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && weapon_ability_info_ != NULL) {
    delete weapon_ability_info_;
  }
  weapon_ability_info_ = NULL;
  ::memset(&avatar_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&weapon_guid_) -
      reinterpret_cast<char*>(&avatar_guid_)) + sizeof(weapon_guid_));
  _internal_metadata_.Clear();
}

bool AvatarEnterSceneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AvatarEnterSceneInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 avatar_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &avatar_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 avatar_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avatar_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo avatar_ability_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avatar_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 buff_id_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_buff_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_buff_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 weapon_guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &weapon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 weapon_entity_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weapon_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo weapon_ability_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weapon_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ServerBuff server_buff_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_buff_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AvatarEnterSceneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AvatarEnterSceneInfo)
  return false;
#undef DO_
}

void AvatarEnterSceneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AvatarEnterSceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->avatar_guid(), output);
  }

  // uint32 avatar_entity_id = 2;
  if (this->avatar_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->avatar_entity_id(), output);
  }

  // .proto.AbilitySyncStateInfo avatar_ability_info = 3;
  if (this->has_avatar_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->avatar_ability_info_, output);
  }

  // repeated uint32 buff_id_list = 4;
  if (this->buff_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _buff_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->buff_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->buff_id_list(i), output);
  }

  // uint64 weapon_guid = 5;
  if (this->weapon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->weapon_guid(), output);
  }

  // uint32 weapon_entity_id = 6;
  if (this->weapon_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->weapon_entity_id(), output);
  }

  // .proto.AbilitySyncStateInfo weapon_ability_info = 7;
  if (this->has_weapon_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->weapon_ability_info_, output);
  }

  // repeated .proto.ServerBuff server_buff_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_buff_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->server_buff_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AvatarEnterSceneInfo)
}

::google::protobuf::uint8* AvatarEnterSceneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AvatarEnterSceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->avatar_guid(), target);
  }

  // uint32 avatar_entity_id = 2;
  if (this->avatar_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->avatar_entity_id(), target);
  }

  // .proto.AbilitySyncStateInfo avatar_ability_info = 3;
  if (this->has_avatar_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->avatar_ability_info_, deterministic, target);
  }

  // repeated uint32 buff_id_list = 4;
  if (this->buff_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _buff_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->buff_id_list_, target);
  }

  // uint64 weapon_guid = 5;
  if (this->weapon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->weapon_guid(), target);
  }

  // uint32 weapon_entity_id = 6;
  if (this->weapon_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->weapon_entity_id(), target);
  }

  // .proto.AbilitySyncStateInfo weapon_ability_info = 7;
  if (this->has_weapon_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->weapon_ability_info_, deterministic, target);
  }

  // repeated .proto.ServerBuff server_buff_list = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_buff_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->server_buff_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AvatarEnterSceneInfo)
  return target;
}

size_t AvatarEnterSceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AvatarEnterSceneInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 buff_id_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->buff_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _buff_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.ServerBuff server_buff_list = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->server_buff_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_buff_list(static_cast<int>(i)));
    }
  }

  // .proto.AbilitySyncStateInfo avatar_ability_info = 3;
  if (this->has_avatar_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->avatar_ability_info_);
  }

  // .proto.AbilitySyncStateInfo weapon_ability_info = 7;
  if (this->has_weapon_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->weapon_ability_info_);
  }

  // uint64 avatar_guid = 1;
  if (this->avatar_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->avatar_guid());
  }

  // uint32 avatar_entity_id = 2;
  if (this->avatar_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->avatar_entity_id());
  }

  // uint32 weapon_entity_id = 6;
  if (this->weapon_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weapon_entity_id());
  }

  // uint64 weapon_guid = 5;
  if (this->weapon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->weapon_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AvatarEnterSceneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AvatarEnterSceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AvatarEnterSceneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AvatarEnterSceneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AvatarEnterSceneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AvatarEnterSceneInfo)
    MergeFrom(*source);
  }
}

void AvatarEnterSceneInfo::MergeFrom(const AvatarEnterSceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AvatarEnterSceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  buff_id_list_.MergeFrom(from.buff_id_list_);
  server_buff_list_.MergeFrom(from.server_buff_list_);
  if (from.has_avatar_ability_info()) {
    mutable_avatar_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.avatar_ability_info());
  }
  if (from.has_weapon_ability_info()) {
    mutable_weapon_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.weapon_ability_info());
  }
  if (from.avatar_guid() != 0) {
    set_avatar_guid(from.avatar_guid());
  }
  if (from.avatar_entity_id() != 0) {
    set_avatar_entity_id(from.avatar_entity_id());
  }
  if (from.weapon_entity_id() != 0) {
    set_weapon_entity_id(from.weapon_entity_id());
  }
  if (from.weapon_guid() != 0) {
    set_weapon_guid(from.weapon_guid());
  }
}

void AvatarEnterSceneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AvatarEnterSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AvatarEnterSceneInfo::CopyFrom(const AvatarEnterSceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AvatarEnterSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AvatarEnterSceneInfo::IsInitialized() const {
  return true;
}

void AvatarEnterSceneInfo::Swap(AvatarEnterSceneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AvatarEnterSceneInfo::InternalSwap(AvatarEnterSceneInfo* other) {
  using std::swap;
  buff_id_list_.InternalSwap(&other->buff_id_list_);
  server_buff_list_.InternalSwap(&other->server_buff_list_);
  swap(avatar_ability_info_, other->avatar_ability_info_);
  swap(weapon_ability_info_, other->weapon_ability_info_);
  swap(avatar_guid_, other->avatar_guid_);
  swap(avatar_entity_id_, other->avatar_entity_id_);
  swap(weapon_entity_id_, other->weapon_entity_id_);
  swap(weapon_guid_, other->weapon_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AvatarEnterSceneInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AvatarEnterSceneInfo

// uint64 avatar_guid = 1;
void AvatarEnterSceneInfo::clear_avatar_guid() {
  avatar_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarEnterSceneInfo::avatar_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_guid)
  return avatar_guid_;
}
void AvatarEnterSceneInfo::set_avatar_guid(::google::protobuf::uint64 value) {
  
  avatar_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.avatar_guid)
}

// uint32 avatar_entity_id = 2;
void AvatarEnterSceneInfo::clear_avatar_entity_id() {
  avatar_entity_id_ = 0u;
}
::google::protobuf::uint32 AvatarEnterSceneInfo::avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_entity_id)
  return avatar_entity_id_;
}
void AvatarEnterSceneInfo::set_avatar_entity_id(::google::protobuf::uint32 value) {
  
  avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.avatar_entity_id)
}

// .proto.AbilitySyncStateInfo avatar_ability_info = 3;
bool AvatarEnterSceneInfo::has_avatar_ability_info() const {
  return this != internal_default_instance() && avatar_ability_info_ != NULL;
}
void AvatarEnterSceneInfo::clear_avatar_ability_info() {
  if (GetArenaNoVirtual() == NULL && avatar_ability_info_ != NULL) delete avatar_ability_info_;
  avatar_ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& AvatarEnterSceneInfo::avatar_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = avatar_ability_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.avatar_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::mutable_avatar_ability_info() {
  
  if (avatar_ability_info_ == NULL) {
    avatar_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.avatar_ability_info)
  return avatar_ability_info_;
}
::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::release_avatar_ability_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarEnterSceneInfo.avatar_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = avatar_ability_info_;
  avatar_ability_info_ = NULL;
  return temp;
}
void AvatarEnterSceneInfo::set_allocated_avatar_ability_info(::proto::AbilitySyncStateInfo* avatar_ability_info) {
  delete avatar_ability_info_;
  avatar_ability_info_ = avatar_ability_info;
  if (avatar_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarEnterSceneInfo.avatar_ability_info)
}

// repeated uint32 buff_id_list = 4;
int AvatarEnterSceneInfo::buff_id_list_size() const {
  return buff_id_list_.size();
}
void AvatarEnterSceneInfo::clear_buff_id_list() {
  buff_id_list_.Clear();
}
::google::protobuf::uint32 AvatarEnterSceneInfo::buff_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.buff_id_list)
  return buff_id_list_.Get(index);
}
void AvatarEnterSceneInfo::set_buff_id_list(int index, ::google::protobuf::uint32 value) {
  buff_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.buff_id_list)
}
void AvatarEnterSceneInfo::add_buff_id_list(::google::protobuf::uint32 value) {
  buff_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AvatarEnterSceneInfo.buff_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AvatarEnterSceneInfo::buff_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarEnterSceneInfo.buff_id_list)
  return buff_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AvatarEnterSceneInfo::mutable_buff_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarEnterSceneInfo.buff_id_list)
  return &buff_id_list_;
}

// uint64 weapon_guid = 5;
void AvatarEnterSceneInfo::clear_weapon_guid() {
  weapon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AvatarEnterSceneInfo::weapon_guid() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_guid)
  return weapon_guid_;
}
void AvatarEnterSceneInfo::set_weapon_guid(::google::protobuf::uint64 value) {
  
  weapon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.weapon_guid)
}

// uint32 weapon_entity_id = 6;
void AvatarEnterSceneInfo::clear_weapon_entity_id() {
  weapon_entity_id_ = 0u;
}
::google::protobuf::uint32 AvatarEnterSceneInfo::weapon_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_entity_id)
  return weapon_entity_id_;
}
void AvatarEnterSceneInfo::set_weapon_entity_id(::google::protobuf::uint32 value) {
  
  weapon_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarEnterSceneInfo.weapon_entity_id)
}

// .proto.AbilitySyncStateInfo weapon_ability_info = 7;
bool AvatarEnterSceneInfo::has_weapon_ability_info() const {
  return this != internal_default_instance() && weapon_ability_info_ != NULL;
}
void AvatarEnterSceneInfo::clear_weapon_ability_info() {
  if (GetArenaNoVirtual() == NULL && weapon_ability_info_ != NULL) delete weapon_ability_info_;
  weapon_ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& AvatarEnterSceneInfo::weapon_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = weapon_ability_info_;
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.weapon_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::mutable_weapon_ability_info() {
  
  if (weapon_ability_info_ == NULL) {
    weapon_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.weapon_ability_info)
  return weapon_ability_info_;
}
::proto::AbilitySyncStateInfo* AvatarEnterSceneInfo::release_weapon_ability_info() {
  // @@protoc_insertion_point(field_release:proto.AvatarEnterSceneInfo.weapon_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = weapon_ability_info_;
  weapon_ability_info_ = NULL;
  return temp;
}
void AvatarEnterSceneInfo::set_allocated_weapon_ability_info(::proto::AbilitySyncStateInfo* weapon_ability_info) {
  delete weapon_ability_info_;
  weapon_ability_info_ = weapon_ability_info;
  if (weapon_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarEnterSceneInfo.weapon_ability_info)
}

// repeated .proto.ServerBuff server_buff_list = 8;
int AvatarEnterSceneInfo::server_buff_list_size() const {
  return server_buff_list_.size();
}
void AvatarEnterSceneInfo::clear_server_buff_list() {
  server_buff_list_.Clear();
}
const ::proto::ServerBuff& AvatarEnterSceneInfo::server_buff_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Get(index);
}
::proto::ServerBuff* AvatarEnterSceneInfo::mutable_server_buff_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Mutable(index);
}
::proto::ServerBuff* AvatarEnterSceneInfo::add_server_buff_list() {
  // @@protoc_insertion_point(field_add:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >*
AvatarEnterSceneInfo::mutable_server_buff_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AvatarEnterSceneInfo.server_buff_list)
  return &server_buff_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ServerBuff >&
AvatarEnterSceneInfo::server_buff_list() const {
  // @@protoc_insertion_point(field_list:proto.AvatarEnterSceneInfo.server_buff_list)
  return server_buff_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamEnterSceneInfo::kTeamEntityIdFieldNumber;
const int TeamEnterSceneInfo::kTeamAbilityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamEnterSceneInfo::TeamEnterSceneInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.TeamEnterSceneInfo)
}
TeamEnterSceneInfo::TeamEnterSceneInfo(const TeamEnterSceneInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_team_ability_info()) {
    team_ability_info_ = new ::proto::AbilitySyncStateInfo(*from.team_ability_info_);
  } else {
    team_ability_info_ = NULL;
  }
  team_entity_id_ = from.team_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.TeamEnterSceneInfo)
}

void TeamEnterSceneInfo::SharedCtor() {
  ::memset(&team_ability_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&team_entity_id_) -
      reinterpret_cast<char*>(&team_ability_info_)) + sizeof(team_entity_id_));
  _cached_size_ = 0;
}

TeamEnterSceneInfo::~TeamEnterSceneInfo() {
  // @@protoc_insertion_point(destructor:proto.TeamEnterSceneInfo)
  SharedDtor();
}

void TeamEnterSceneInfo::SharedDtor() {
  if (this != internal_default_instance()) delete team_ability_info_;
}

void TeamEnterSceneInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamEnterSceneInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamEnterSceneInfo& TeamEnterSceneInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamEnterSceneInfo* TeamEnterSceneInfo::New(::google::protobuf::Arena* arena) const {
  TeamEnterSceneInfo* n = new TeamEnterSceneInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamEnterSceneInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.TeamEnterSceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && team_ability_info_ != NULL) {
    delete team_ability_info_;
  }
  team_ability_info_ = NULL;
  team_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool TeamEnterSceneInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.TeamEnterSceneInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 team_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo team_ability_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_team_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.TeamEnterSceneInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.TeamEnterSceneInfo)
  return false;
#undef DO_
}

void TeamEnterSceneInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.TeamEnterSceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 team_entity_id = 1;
  if (this->team_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->team_entity_id(), output);
  }

  // .proto.AbilitySyncStateInfo team_ability_info = 2;
  if (this->has_team_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->team_ability_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.TeamEnterSceneInfo)
}

::google::protobuf::uint8* TeamEnterSceneInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.TeamEnterSceneInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 team_entity_id = 1;
  if (this->team_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->team_entity_id(), target);
  }

  // .proto.AbilitySyncStateInfo team_ability_info = 2;
  if (this->has_team_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->team_ability_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.TeamEnterSceneInfo)
  return target;
}

size_t TeamEnterSceneInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.TeamEnterSceneInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AbilitySyncStateInfo team_ability_info = 2;
  if (this->has_team_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->team_ability_info_);
  }

  // uint32 team_entity_id = 1;
  if (this->team_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->team_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamEnterSceneInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.TeamEnterSceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamEnterSceneInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamEnterSceneInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.TeamEnterSceneInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.TeamEnterSceneInfo)
    MergeFrom(*source);
  }
}

void TeamEnterSceneInfo::MergeFrom(const TeamEnterSceneInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.TeamEnterSceneInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_team_ability_info()) {
    mutable_team_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.team_ability_info());
  }
  if (from.team_entity_id() != 0) {
    set_team_entity_id(from.team_entity_id());
  }
}

void TeamEnterSceneInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.TeamEnterSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamEnterSceneInfo::CopyFrom(const TeamEnterSceneInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.TeamEnterSceneInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamEnterSceneInfo::IsInitialized() const {
  return true;
}

void TeamEnterSceneInfo::Swap(TeamEnterSceneInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamEnterSceneInfo::InternalSwap(TeamEnterSceneInfo* other) {
  using std::swap;
  swap(team_ability_info_, other->team_ability_info_);
  swap(team_entity_id_, other->team_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamEnterSceneInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamEnterSceneInfo

// uint32 team_entity_id = 1;
void TeamEnterSceneInfo::clear_team_entity_id() {
  team_entity_id_ = 0u;
}
::google::protobuf::uint32 TeamEnterSceneInfo::team_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.TeamEnterSceneInfo.team_entity_id)
  return team_entity_id_;
}
void TeamEnterSceneInfo::set_team_entity_id(::google::protobuf::uint32 value) {
  
  team_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TeamEnterSceneInfo.team_entity_id)
}

// .proto.AbilitySyncStateInfo team_ability_info = 2;
bool TeamEnterSceneInfo::has_team_ability_info() const {
  return this != internal_default_instance() && team_ability_info_ != NULL;
}
void TeamEnterSceneInfo::clear_team_ability_info() {
  if (GetArenaNoVirtual() == NULL && team_ability_info_ != NULL) delete team_ability_info_;
  team_ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& TeamEnterSceneInfo::team_ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = team_ability_info_;
  // @@protoc_insertion_point(field_get:proto.TeamEnterSceneInfo.team_ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* TeamEnterSceneInfo::mutable_team_ability_info() {
  
  if (team_ability_info_ == NULL) {
    team_ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.TeamEnterSceneInfo.team_ability_info)
  return team_ability_info_;
}
::proto::AbilitySyncStateInfo* TeamEnterSceneInfo::release_team_ability_info() {
  // @@protoc_insertion_point(field_release:proto.TeamEnterSceneInfo.team_ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = team_ability_info_;
  team_ability_info_ = NULL;
  return temp;
}
void TeamEnterSceneInfo::set_allocated_team_ability_info(::proto::AbilitySyncStateInfo* team_ability_info) {
  delete team_ability_info_;
  team_ability_info_ = team_ability_info;
  if (team_ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.TeamEnterSceneInfo.team_ability_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MPLevelEntityInfo::kEntityIdFieldNumber;
const int MPLevelEntityInfo::kAuthorityPeerIdFieldNumber;
const int MPLevelEntityInfo::kAbilityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MPLevelEntityInfo::MPLevelEntityInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MPLevelEntityInfo)
}
MPLevelEntityInfo::MPLevelEntityInfo(const MPLevelEntityInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ability_info()) {
    ability_info_ = new ::proto::AbilitySyncStateInfo(*from.ability_info_);
  } else {
    ability_info_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&authority_peer_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(authority_peer_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MPLevelEntityInfo)
}

void MPLevelEntityInfo::SharedCtor() {
  ::memset(&ability_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authority_peer_id_) -
      reinterpret_cast<char*>(&ability_info_)) + sizeof(authority_peer_id_));
  _cached_size_ = 0;
}

MPLevelEntityInfo::~MPLevelEntityInfo() {
  // @@protoc_insertion_point(destructor:proto.MPLevelEntityInfo)
  SharedDtor();
}

void MPLevelEntityInfo::SharedDtor() {
  if (this != internal_default_instance()) delete ability_info_;
}

void MPLevelEntityInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MPLevelEntityInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MPLevelEntityInfo& MPLevelEntityInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

MPLevelEntityInfo* MPLevelEntityInfo::New(::google::protobuf::Arena* arena) const {
  MPLevelEntityInfo* n = new MPLevelEntityInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MPLevelEntityInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MPLevelEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) {
    delete ability_info_;
  }
  ability_info_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&authority_peer_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(authority_peer_id_));
  _internal_metadata_.Clear();
}

bool MPLevelEntityInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MPLevelEntityInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 authority_peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &authority_peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.AbilitySyncStateInfo ability_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ability_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MPLevelEntityInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MPLevelEntityInfo)
  return false;
#undef DO_
}

void MPLevelEntityInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MPLevelEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->authority_peer_id(), output);
  }

  // .proto.AbilitySyncStateInfo ability_info = 3;
  if (this->has_ability_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ability_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MPLevelEntityInfo)
}

::google::protobuf::uint8* MPLevelEntityInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MPLevelEntityInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->authority_peer_id(), target);
  }

  // .proto.AbilitySyncStateInfo ability_info = 3;
  if (this->has_ability_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ability_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MPLevelEntityInfo)
  return target;
}

size_t MPLevelEntityInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MPLevelEntityInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.AbilitySyncStateInfo ability_info = 3;
  if (this->has_ability_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ability_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 authority_peer_id = 2;
  if (this->authority_peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->authority_peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MPLevelEntityInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MPLevelEntityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MPLevelEntityInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MPLevelEntityInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MPLevelEntityInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MPLevelEntityInfo)
    MergeFrom(*source);
  }
}

void MPLevelEntityInfo::MergeFrom(const MPLevelEntityInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MPLevelEntityInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ability_info()) {
    mutable_ability_info()->::proto::AbilitySyncStateInfo::MergeFrom(from.ability_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.authority_peer_id() != 0) {
    set_authority_peer_id(from.authority_peer_id());
  }
}

void MPLevelEntityInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MPLevelEntityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MPLevelEntityInfo::CopyFrom(const MPLevelEntityInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MPLevelEntityInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MPLevelEntityInfo::IsInitialized() const {
  return true;
}

void MPLevelEntityInfo::Swap(MPLevelEntityInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MPLevelEntityInfo::InternalSwap(MPLevelEntityInfo* other) {
  using std::swap;
  swap(ability_info_, other->ability_info_);
  swap(entity_id_, other->entity_id_);
  swap(authority_peer_id_, other->authority_peer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MPLevelEntityInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MPLevelEntityInfo

// uint32 entity_id = 1;
void MPLevelEntityInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 MPLevelEntityInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.entity_id)
  return entity_id_;
}
void MPLevelEntityInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MPLevelEntityInfo.entity_id)
}

// uint32 authority_peer_id = 2;
void MPLevelEntityInfo::clear_authority_peer_id() {
  authority_peer_id_ = 0u;
}
::google::protobuf::uint32 MPLevelEntityInfo::authority_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.authority_peer_id)
  return authority_peer_id_;
}
void MPLevelEntityInfo::set_authority_peer_id(::google::protobuf::uint32 value) {
  
  authority_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MPLevelEntityInfo.authority_peer_id)
}

// .proto.AbilitySyncStateInfo ability_info = 3;
bool MPLevelEntityInfo::has_ability_info() const {
  return this != internal_default_instance() && ability_info_ != NULL;
}
void MPLevelEntityInfo::clear_ability_info() {
  if (GetArenaNoVirtual() == NULL && ability_info_ != NULL) delete ability_info_;
  ability_info_ = NULL;
}
const ::proto::AbilitySyncStateInfo& MPLevelEntityInfo::ability_info() const {
  const ::proto::AbilitySyncStateInfo* p = ability_info_;
  // @@protoc_insertion_point(field_get:proto.MPLevelEntityInfo.ability_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AbilitySyncStateInfo*>(
      &::proto::_AbilitySyncStateInfo_default_instance_);
}
::proto::AbilitySyncStateInfo* MPLevelEntityInfo::mutable_ability_info() {
  
  if (ability_info_ == NULL) {
    ability_info_ = new ::proto::AbilitySyncStateInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MPLevelEntityInfo.ability_info)
  return ability_info_;
}
::proto::AbilitySyncStateInfo* MPLevelEntityInfo::release_ability_info() {
  // @@protoc_insertion_point(field_release:proto.MPLevelEntityInfo.ability_info)
  
  ::proto::AbilitySyncStateInfo* temp = ability_info_;
  ability_info_ = NULL;
  return temp;
}
void MPLevelEntityInfo::set_allocated_ability_info(::proto::AbilitySyncStateInfo* ability_info) {
  delete ability_info_;
  ability_info_ = ability_info;
  if (ability_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MPLevelEntityInfo.ability_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerEnterSceneInfoNotify::kCurAvatarEntityIdFieldNumber;
const int PlayerEnterSceneInfoNotify::kAvatarEnterInfoFieldNumber;
const int PlayerEnterSceneInfoNotify::kTeamEnterInfoFieldNumber;
const int PlayerEnterSceneInfoNotify::kMpLevelEntityInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerEnterSceneInfoNotify::PlayerEnterSceneInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerEnterSceneInfoNotify)
}
PlayerEnterSceneInfoNotify::PlayerEnterSceneInfoNotify(const PlayerEnterSceneInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      avatar_enter_info_(from.avatar_enter_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_team_enter_info()) {
    team_enter_info_ = new ::proto::TeamEnterSceneInfo(*from.team_enter_info_);
  } else {
    team_enter_info_ = NULL;
  }
  if (from.has_mp_level_entity_info()) {
    mp_level_entity_info_ = new ::proto::MPLevelEntityInfo(*from.mp_level_entity_info_);
  } else {
    mp_level_entity_info_ = NULL;
  }
  cur_avatar_entity_id_ = from.cur_avatar_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerEnterSceneInfoNotify)
}

void PlayerEnterSceneInfoNotify::SharedCtor() {
  ::memset(&team_enter_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cur_avatar_entity_id_) -
      reinterpret_cast<char*>(&team_enter_info_)) + sizeof(cur_avatar_entity_id_));
  _cached_size_ = 0;
}

PlayerEnterSceneInfoNotify::~PlayerEnterSceneInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerEnterSceneInfoNotify)
  SharedDtor();
}

void PlayerEnterSceneInfoNotify::SharedDtor() {
  if (this != internal_default_instance()) delete team_enter_info_;
  if (this != internal_default_instance()) delete mp_level_entity_info_;
}

void PlayerEnterSceneInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerEnterSceneInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerEnterSceneInfoNotify& PlayerEnterSceneInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerEnterSceneInfoNotify* PlayerEnterSceneInfoNotify::New(::google::protobuf::Arena* arena) const {
  PlayerEnterSceneInfoNotify* n = new PlayerEnterSceneInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerEnterSceneInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerEnterSceneInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avatar_enter_info_.Clear();
  if (GetArenaNoVirtual() == NULL && team_enter_info_ != NULL) {
    delete team_enter_info_;
  }
  team_enter_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && mp_level_entity_info_ != NULL) {
    delete mp_level_entity_info_;
  }
  mp_level_entity_info_ = NULL;
  cur_avatar_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerEnterSceneInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerEnterSceneInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cur_avatar_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_avatar_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_avatar_enter_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.TeamEnterSceneInfo team_enter_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_team_enter_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MPLevelEntityInfo mp_level_entity_info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mp_level_entity_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerEnterSceneInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerEnterSceneInfoNotify)
  return false;
#undef DO_
}

void PlayerEnterSceneInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerEnterSceneInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_avatar_entity_id = 1;
  if (this->cur_avatar_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_avatar_entity_id(), output);
  }

  // repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avatar_enter_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->avatar_enter_info(static_cast<int>(i)), output);
  }

  // .proto.TeamEnterSceneInfo team_enter_info = 3;
  if (this->has_team_enter_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->team_enter_info_, output);
  }

  // .proto.MPLevelEntityInfo mp_level_entity_info = 4;
  if (this->has_mp_level_entity_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->mp_level_entity_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerEnterSceneInfoNotify)
}

::google::protobuf::uint8* PlayerEnterSceneInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerEnterSceneInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cur_avatar_entity_id = 1;
  if (this->cur_avatar_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_avatar_entity_id(), target);
  }

  // repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->avatar_enter_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->avatar_enter_info(static_cast<int>(i)), deterministic, target);
  }

  // .proto.TeamEnterSceneInfo team_enter_info = 3;
  if (this->has_team_enter_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->team_enter_info_, deterministic, target);
  }

  // .proto.MPLevelEntityInfo mp_level_entity_info = 4;
  if (this->has_mp_level_entity_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->mp_level_entity_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerEnterSceneInfoNotify)
  return target;
}

size_t PlayerEnterSceneInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerEnterSceneInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->avatar_enter_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->avatar_enter_info(static_cast<int>(i)));
    }
  }

  // .proto.TeamEnterSceneInfo team_enter_info = 3;
  if (this->has_team_enter_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->team_enter_info_);
  }

  // .proto.MPLevelEntityInfo mp_level_entity_info = 4;
  if (this->has_mp_level_entity_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mp_level_entity_info_);
  }

  // uint32 cur_avatar_entity_id = 1;
  if (this->cur_avatar_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_avatar_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerEnterSceneInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerEnterSceneInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerEnterSceneInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerEnterSceneInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerEnterSceneInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerEnterSceneInfoNotify)
    MergeFrom(*source);
  }
}

void PlayerEnterSceneInfoNotify::MergeFrom(const PlayerEnterSceneInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerEnterSceneInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  avatar_enter_info_.MergeFrom(from.avatar_enter_info_);
  if (from.has_team_enter_info()) {
    mutable_team_enter_info()->::proto::TeamEnterSceneInfo::MergeFrom(from.team_enter_info());
  }
  if (from.has_mp_level_entity_info()) {
    mutable_mp_level_entity_info()->::proto::MPLevelEntityInfo::MergeFrom(from.mp_level_entity_info());
  }
  if (from.cur_avatar_entity_id() != 0) {
    set_cur_avatar_entity_id(from.cur_avatar_entity_id());
  }
}

void PlayerEnterSceneInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerEnterSceneInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerEnterSceneInfoNotify::CopyFrom(const PlayerEnterSceneInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerEnterSceneInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerEnterSceneInfoNotify::IsInitialized() const {
  return true;
}

void PlayerEnterSceneInfoNotify::Swap(PlayerEnterSceneInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerEnterSceneInfoNotify::InternalSwap(PlayerEnterSceneInfoNotify* other) {
  using std::swap;
  avatar_enter_info_.InternalSwap(&other->avatar_enter_info_);
  swap(team_enter_info_, other->team_enter_info_);
  swap(mp_level_entity_info_, other->mp_level_entity_info_);
  swap(cur_avatar_entity_id_, other->cur_avatar_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerEnterSceneInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerEnterSceneInfoNotify

// uint32 cur_avatar_entity_id = 1;
void PlayerEnterSceneInfoNotify::clear_cur_avatar_entity_id() {
  cur_avatar_entity_id_ = 0u;
}
::google::protobuf::uint32 PlayerEnterSceneInfoNotify::cur_avatar_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.cur_avatar_entity_id)
  return cur_avatar_entity_id_;
}
void PlayerEnterSceneInfoNotify::set_cur_avatar_entity_id(::google::protobuf::uint32 value) {
  
  cur_avatar_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerEnterSceneInfoNotify.cur_avatar_entity_id)
}

// repeated .proto.AvatarEnterSceneInfo avatar_enter_info = 2;
int PlayerEnterSceneInfoNotify::avatar_enter_info_size() const {
  return avatar_enter_info_.size();
}
void PlayerEnterSceneInfoNotify::clear_avatar_enter_info() {
  avatar_enter_info_.Clear();
}
const ::proto::AvatarEnterSceneInfo& PlayerEnterSceneInfoNotify::avatar_enter_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Get(index);
}
::proto::AvatarEnterSceneInfo* PlayerEnterSceneInfoNotify::mutable_avatar_enter_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Mutable(index);
}
::proto::AvatarEnterSceneInfo* PlayerEnterSceneInfoNotify::add_avatar_enter_info() {
  // @@protoc_insertion_point(field_add:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >*
PlayerEnterSceneInfoNotify::mutable_avatar_enter_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return &avatar_enter_info_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::AvatarEnterSceneInfo >&
PlayerEnterSceneInfoNotify::avatar_enter_info() const {
  // @@protoc_insertion_point(field_list:proto.PlayerEnterSceneInfoNotify.avatar_enter_info)
  return avatar_enter_info_;
}

// .proto.TeamEnterSceneInfo team_enter_info = 3;
bool PlayerEnterSceneInfoNotify::has_team_enter_info() const {
  return this != internal_default_instance() && team_enter_info_ != NULL;
}
void PlayerEnterSceneInfoNotify::clear_team_enter_info() {
  if (GetArenaNoVirtual() == NULL && team_enter_info_ != NULL) delete team_enter_info_;
  team_enter_info_ = NULL;
}
const ::proto::TeamEnterSceneInfo& PlayerEnterSceneInfoNotify::team_enter_info() const {
  const ::proto::TeamEnterSceneInfo* p = team_enter_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::TeamEnterSceneInfo*>(
      &::proto::_TeamEnterSceneInfo_default_instance_);
}
::proto::TeamEnterSceneInfo* PlayerEnterSceneInfoNotify::mutable_team_enter_info() {
  
  if (team_enter_info_ == NULL) {
    team_enter_info_ = new ::proto::TeamEnterSceneInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  return team_enter_info_;
}
::proto::TeamEnterSceneInfo* PlayerEnterSceneInfoNotify::release_team_enter_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneInfoNotify.team_enter_info)
  
  ::proto::TeamEnterSceneInfo* temp = team_enter_info_;
  team_enter_info_ = NULL;
  return temp;
}
void PlayerEnterSceneInfoNotify::set_allocated_team_enter_info(::proto::TeamEnterSceneInfo* team_enter_info) {
  delete team_enter_info_;
  team_enter_info_ = team_enter_info;
  if (team_enter_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneInfoNotify.team_enter_info)
}

// .proto.MPLevelEntityInfo mp_level_entity_info = 4;
bool PlayerEnterSceneInfoNotify::has_mp_level_entity_info() const {
  return this != internal_default_instance() && mp_level_entity_info_ != NULL;
}
void PlayerEnterSceneInfoNotify::clear_mp_level_entity_info() {
  if (GetArenaNoVirtual() == NULL && mp_level_entity_info_ != NULL) delete mp_level_entity_info_;
  mp_level_entity_info_ = NULL;
}
const ::proto::MPLevelEntityInfo& PlayerEnterSceneInfoNotify::mp_level_entity_info() const {
  const ::proto::MPLevelEntityInfo* p = mp_level_entity_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MPLevelEntityInfo*>(
      &::proto::_MPLevelEntityInfo_default_instance_);
}
::proto::MPLevelEntityInfo* PlayerEnterSceneInfoNotify::mutable_mp_level_entity_info() {
  
  if (mp_level_entity_info_ == NULL) {
    mp_level_entity_info_ = new ::proto::MPLevelEntityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  return mp_level_entity_info_;
}
::proto::MPLevelEntityInfo* PlayerEnterSceneInfoNotify::release_mp_level_entity_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
  
  ::proto::MPLevelEntityInfo* temp = mp_level_entity_info_;
  mp_level_entity_info_ = NULL;
  return temp;
}
void PlayerEnterSceneInfoNotify::set_allocated_mp_level_entity_info(::proto::MPLevelEntityInfo* mp_level_entity_info) {
  delete mp_level_entity_info_;
  mp_level_entity_info_ = mp_level_entity_info;
  if (mp_level_entity_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerEnterSceneInfoNotify.mp_level_entity_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinPlayerSceneReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinPlayerSceneReq::JoinPlayerSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.JoinPlayerSceneReq)
}
JoinPlayerSceneReq::JoinPlayerSceneReq(const JoinPlayerSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.JoinPlayerSceneReq)
}

void JoinPlayerSceneReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

JoinPlayerSceneReq::~JoinPlayerSceneReq() {
  // @@protoc_insertion_point(destructor:proto.JoinPlayerSceneReq)
  SharedDtor();
}

void JoinPlayerSceneReq::SharedDtor() {
}

void JoinPlayerSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinPlayerSceneReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinPlayerSceneReq& JoinPlayerSceneReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinPlayerSceneReq* JoinPlayerSceneReq::New(::google::protobuf::Arena* arena) const {
  JoinPlayerSceneReq* n = new JoinPlayerSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinPlayerSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.JoinPlayerSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool JoinPlayerSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.JoinPlayerSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.JoinPlayerSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.JoinPlayerSceneReq)
  return false;
#undef DO_
}

void JoinPlayerSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.JoinPlayerSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.JoinPlayerSceneReq)
}

::google::protobuf::uint8* JoinPlayerSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.JoinPlayerSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.JoinPlayerSceneReq)
  return target;
}

size_t JoinPlayerSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.JoinPlayerSceneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinPlayerSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.JoinPlayerSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinPlayerSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinPlayerSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.JoinPlayerSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.JoinPlayerSceneReq)
    MergeFrom(*source);
  }
}

void JoinPlayerSceneReq::MergeFrom(const JoinPlayerSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.JoinPlayerSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void JoinPlayerSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.JoinPlayerSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinPlayerSceneReq::CopyFrom(const JoinPlayerSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.JoinPlayerSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinPlayerSceneReq::IsInitialized() const {
  return true;
}

void JoinPlayerSceneReq::Swap(JoinPlayerSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinPlayerSceneReq::InternalSwap(JoinPlayerSceneReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinPlayerSceneReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinPlayerSceneReq

// uint32 target_uid = 1;
void JoinPlayerSceneReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 JoinPlayerSceneReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerSceneReq.target_uid)
  return target_uid_;
}
void JoinPlayerSceneReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerSceneReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinPlayerSceneRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinPlayerSceneRsp::JoinPlayerSceneRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.JoinPlayerSceneRsp)
}
JoinPlayerSceneRsp::JoinPlayerSceneRsp(const JoinPlayerSceneRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.JoinPlayerSceneRsp)
}

void JoinPlayerSceneRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

JoinPlayerSceneRsp::~JoinPlayerSceneRsp() {
  // @@protoc_insertion_point(destructor:proto.JoinPlayerSceneRsp)
  SharedDtor();
}

void JoinPlayerSceneRsp::SharedDtor() {
}

void JoinPlayerSceneRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinPlayerSceneRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinPlayerSceneRsp& JoinPlayerSceneRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinPlayerSceneRsp* JoinPlayerSceneRsp::New(::google::protobuf::Arena* arena) const {
  JoinPlayerSceneRsp* n = new JoinPlayerSceneRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinPlayerSceneRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.JoinPlayerSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool JoinPlayerSceneRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.JoinPlayerSceneRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.JoinPlayerSceneRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.JoinPlayerSceneRsp)
  return false;
#undef DO_
}

void JoinPlayerSceneRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.JoinPlayerSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.JoinPlayerSceneRsp)
}

::google::protobuf::uint8* JoinPlayerSceneRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.JoinPlayerSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.JoinPlayerSceneRsp)
  return target;
}

size_t JoinPlayerSceneRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.JoinPlayerSceneRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinPlayerSceneRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.JoinPlayerSceneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinPlayerSceneRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinPlayerSceneRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.JoinPlayerSceneRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.JoinPlayerSceneRsp)
    MergeFrom(*source);
  }
}

void JoinPlayerSceneRsp::MergeFrom(const JoinPlayerSceneRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.JoinPlayerSceneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void JoinPlayerSceneRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.JoinPlayerSceneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinPlayerSceneRsp::CopyFrom(const JoinPlayerSceneRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.JoinPlayerSceneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinPlayerSceneRsp::IsInitialized() const {
  return true;
}

void JoinPlayerSceneRsp::Swap(JoinPlayerSceneRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinPlayerSceneRsp::InternalSwap(JoinPlayerSceneRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinPlayerSceneRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinPlayerSceneRsp

// int32 retcode = 1;
void JoinPlayerSceneRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 JoinPlayerSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerSceneRsp.retcode)
  return retcode_;
}
void JoinPlayerSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerSceneRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneKickPlayerReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneKickPlayerReq::SceneKickPlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneKickPlayerReq)
}
SceneKickPlayerReq::SceneKickPlayerReq(const SceneKickPlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneKickPlayerReq)
}

void SceneKickPlayerReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

SceneKickPlayerReq::~SceneKickPlayerReq() {
  // @@protoc_insertion_point(destructor:proto.SceneKickPlayerReq)
  SharedDtor();
}

void SceneKickPlayerReq::SharedDtor() {
}

void SceneKickPlayerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneKickPlayerReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneKickPlayerReq& SceneKickPlayerReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneKickPlayerReq* SceneKickPlayerReq::New(::google::protobuf::Arena* arena) const {
  SceneKickPlayerReq* n = new SceneKickPlayerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneKickPlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneKickPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneKickPlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneKickPlayerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneKickPlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneKickPlayerReq)
  return false;
#undef DO_
}

void SceneKickPlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneKickPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneKickPlayerReq)
}

::google::protobuf::uint8* SceneKickPlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneKickPlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneKickPlayerReq)
  return target;
}

size_t SceneKickPlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneKickPlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneKickPlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneKickPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneKickPlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneKickPlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneKickPlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneKickPlayerReq)
    MergeFrom(*source);
  }
}

void SceneKickPlayerReq::MergeFrom(const SceneKickPlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneKickPlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void SceneKickPlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneKickPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneKickPlayerReq::CopyFrom(const SceneKickPlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneKickPlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneKickPlayerReq::IsInitialized() const {
  return true;
}

void SceneKickPlayerReq::Swap(SceneKickPlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneKickPlayerReq::InternalSwap(SceneKickPlayerReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneKickPlayerReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneKickPlayerReq

// uint32 target_uid = 1;
void SceneKickPlayerReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 SceneKickPlayerReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerReq.target_uid)
  return target_uid_;
}
void SceneKickPlayerReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneKickPlayerRsp::kRetcodeFieldNumber;
const int SceneKickPlayerRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneKickPlayerRsp::SceneKickPlayerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneKickPlayerRsp)
}
SceneKickPlayerRsp::SceneKickPlayerRsp(const SceneKickPlayerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneKickPlayerRsp)
}

void SceneKickPlayerRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

SceneKickPlayerRsp::~SceneKickPlayerRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneKickPlayerRsp)
  SharedDtor();
}

void SceneKickPlayerRsp::SharedDtor() {
}

void SceneKickPlayerRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneKickPlayerRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneKickPlayerRsp& SceneKickPlayerRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneKickPlayerRsp* SceneKickPlayerRsp::New(::google::protobuf::Arena* arena) const {
  SceneKickPlayerRsp* n = new SceneKickPlayerRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneKickPlayerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneKickPlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool SceneKickPlayerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneKickPlayerRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneKickPlayerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneKickPlayerRsp)
  return false;
#undef DO_
}

void SceneKickPlayerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneKickPlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneKickPlayerRsp)
}

::google::protobuf::uint8* SceneKickPlayerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneKickPlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneKickPlayerRsp)
  return target;
}

size_t SceneKickPlayerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneKickPlayerRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneKickPlayerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneKickPlayerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneKickPlayerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneKickPlayerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneKickPlayerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneKickPlayerRsp)
    MergeFrom(*source);
  }
}

void SceneKickPlayerRsp::MergeFrom(const SceneKickPlayerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneKickPlayerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void SceneKickPlayerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneKickPlayerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneKickPlayerRsp::CopyFrom(const SceneKickPlayerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneKickPlayerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneKickPlayerRsp::IsInitialized() const {
  return true;
}

void SceneKickPlayerRsp::Swap(SceneKickPlayerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneKickPlayerRsp::InternalSwap(SceneKickPlayerRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneKickPlayerRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneKickPlayerRsp

// int32 retcode = 1;
void SceneKickPlayerRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneKickPlayerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerRsp.retcode)
  return retcode_;
}
void SceneKickPlayerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerRsp.retcode)
}

// uint32 target_uid = 2;
void SceneKickPlayerRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 SceneKickPlayerRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerRsp.target_uid)
  return target_uid_;
}
void SceneKickPlayerRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneKickPlayerNotify::kKickerUidFieldNumber;
const int SceneKickPlayerNotify::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneKickPlayerNotify::SceneKickPlayerNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneKickPlayerNotify)
}
SceneKickPlayerNotify::SceneKickPlayerNotify(const SceneKickPlayerNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&kicker_uid_, &from.kicker_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&kicker_uid_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneKickPlayerNotify)
}

void SceneKickPlayerNotify::SharedCtor() {
  ::memset(&kicker_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&kicker_uid_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

SceneKickPlayerNotify::~SceneKickPlayerNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneKickPlayerNotify)
  SharedDtor();
}

void SceneKickPlayerNotify::SharedDtor() {
}

void SceneKickPlayerNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneKickPlayerNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneKickPlayerNotify& SceneKickPlayerNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneKickPlayerNotify* SceneKickPlayerNotify::New(::google::protobuf::Arena* arena) const {
  SceneKickPlayerNotify* n = new SceneKickPlayerNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneKickPlayerNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneKickPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&kicker_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&kicker_uid_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool SceneKickPlayerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneKickPlayerNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 kicker_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kicker_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneKickPlayerNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneKickPlayerNotify)
  return false;
#undef DO_
}

void SceneKickPlayerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneKickPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 kicker_uid = 1;
  if (this->kicker_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->kicker_uid(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneKickPlayerNotify)
}

::google::protobuf::uint8* SceneKickPlayerNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneKickPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 kicker_uid = 1;
  if (this->kicker_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->kicker_uid(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneKickPlayerNotify)
  return target;
}

size_t SceneKickPlayerNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneKickPlayerNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 kicker_uid = 1;
  if (this->kicker_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kicker_uid());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneKickPlayerNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneKickPlayerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneKickPlayerNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneKickPlayerNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneKickPlayerNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneKickPlayerNotify)
    MergeFrom(*source);
  }
}

void SceneKickPlayerNotify::MergeFrom(const SceneKickPlayerNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneKickPlayerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kicker_uid() != 0) {
    set_kicker_uid(from.kicker_uid());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void SceneKickPlayerNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneKickPlayerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneKickPlayerNotify::CopyFrom(const SceneKickPlayerNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneKickPlayerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneKickPlayerNotify::IsInitialized() const {
  return true;
}

void SceneKickPlayerNotify::Swap(SceneKickPlayerNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneKickPlayerNotify::InternalSwap(SceneKickPlayerNotify* other) {
  using std::swap;
  swap(kicker_uid_, other->kicker_uid_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneKickPlayerNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneKickPlayerNotify

// uint32 kicker_uid = 1;
void SceneKickPlayerNotify::clear_kicker_uid() {
  kicker_uid_ = 0u;
}
::google::protobuf::uint32 SceneKickPlayerNotify::kicker_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerNotify.kicker_uid)
  return kicker_uid_;
}
void SceneKickPlayerNotify::set_kicker_uid(::google::protobuf::uint32 value) {
  
  kicker_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerNotify.kicker_uid)
}

// uint32 target_uid = 2;
void SceneKickPlayerNotify::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 SceneKickPlayerNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.SceneKickPlayerNotify.target_uid)
  return target_uid_;
}
void SceneKickPlayerNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneKickPlayerNotify.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HitClientTrivialNotify::kPositionFieldNumber;
const int HitClientTrivialNotify::kOwnerEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HitClientTrivialNotify::HitClientTrivialNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HitClientTrivialNotify)
}
HitClientTrivialNotify::HitClientTrivialNotify(const HitClientTrivialNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::proto::Vector(*from.position_);
  } else {
    position_ = NULL;
  }
  owner_entity_id_ = from.owner_entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.HitClientTrivialNotify)
}

void HitClientTrivialNotify::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&owner_entity_id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(owner_entity_id_));
  _cached_size_ = 0;
}

HitClientTrivialNotify::~HitClientTrivialNotify() {
  // @@protoc_insertion_point(destructor:proto.HitClientTrivialNotify)
  SharedDtor();
}

void HitClientTrivialNotify::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
}

void HitClientTrivialNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HitClientTrivialNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HitClientTrivialNotify& HitClientTrivialNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

HitClientTrivialNotify* HitClientTrivialNotify::New(::google::protobuf::Arena* arena) const {
  HitClientTrivialNotify* n = new HitClientTrivialNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HitClientTrivialNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HitClientTrivialNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  owner_entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool HitClientTrivialNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HitClientTrivialNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Vector position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 owner_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HitClientTrivialNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HitClientTrivialNotify)
  return false;
#undef DO_
}

void HitClientTrivialNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HitClientTrivialNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->position_, output);
  }

  // uint32 owner_entity_id = 2;
  if (this->owner_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HitClientTrivialNotify)
}

::google::protobuf::uint8* HitClientTrivialNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HitClientTrivialNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Vector position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->position_, deterministic, target);
  }

  // uint32 owner_entity_id = 2;
  if (this->owner_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HitClientTrivialNotify)
  return target;
}

size_t HitClientTrivialNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HitClientTrivialNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  // uint32 owner_entity_id = 2;
  if (this->owner_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HitClientTrivialNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HitClientTrivialNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const HitClientTrivialNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HitClientTrivialNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HitClientTrivialNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HitClientTrivialNotify)
    MergeFrom(*source);
  }
}

void HitClientTrivialNotify::MergeFrom(const HitClientTrivialNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HitClientTrivialNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::proto::Vector::MergeFrom(from.position());
  }
  if (from.owner_entity_id() != 0) {
    set_owner_entity_id(from.owner_entity_id());
  }
}

void HitClientTrivialNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HitClientTrivialNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HitClientTrivialNotify::CopyFrom(const HitClientTrivialNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HitClientTrivialNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HitClientTrivialNotify::IsInitialized() const {
  return true;
}

void HitClientTrivialNotify::Swap(HitClientTrivialNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HitClientTrivialNotify::InternalSwap(HitClientTrivialNotify* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(owner_entity_id_, other->owner_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HitClientTrivialNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HitClientTrivialNotify

// .proto.Vector position = 1;
bool HitClientTrivialNotify::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
void HitClientTrivialNotify::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) delete position_;
  position_ = NULL;
}
const ::proto::Vector& HitClientTrivialNotify::position() const {
  const ::proto::Vector* p = position_;
  // @@protoc_insertion_point(field_get:proto.HitClientTrivialNotify.position)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* HitClientTrivialNotify::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.HitClientTrivialNotify.position)
  return position_;
}
::proto::Vector* HitClientTrivialNotify::release_position() {
  // @@protoc_insertion_point(field_release:proto.HitClientTrivialNotify.position)
  
  ::proto::Vector* temp = position_;
  position_ = NULL;
  return temp;
}
void HitClientTrivialNotify::set_allocated_position(::proto::Vector* position) {
  delete position_;
  position_ = position;
  if (position) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HitClientTrivialNotify.position)
}

// uint32 owner_entity_id = 2;
void HitClientTrivialNotify::clear_owner_entity_id() {
  owner_entity_id_ = 0u;
}
::google::protobuf::uint32 HitClientTrivialNotify::owner_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.HitClientTrivialNotify.owner_entity_id)
  return owner_entity_id_;
}
void HitClientTrivialNotify::set_owner_entity_id(::google::protobuf::uint32 value) {
  
  owner_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HitClientTrivialNotify.owner_entity_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackMyWorldReq::BackMyWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BackMyWorldReq)
}
BackMyWorldReq::BackMyWorldReq(const BackMyWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.BackMyWorldReq)
}

void BackMyWorldReq::SharedCtor() {
  _cached_size_ = 0;
}

BackMyWorldReq::~BackMyWorldReq() {
  // @@protoc_insertion_point(destructor:proto.BackMyWorldReq)
  SharedDtor();
}

void BackMyWorldReq::SharedDtor() {
}

void BackMyWorldReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackMyWorldReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackMyWorldReq& BackMyWorldReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

BackMyWorldReq* BackMyWorldReq::New(::google::protobuf::Arena* arena) const {
  BackMyWorldReq* n = new BackMyWorldReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackMyWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BackMyWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool BackMyWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BackMyWorldReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BackMyWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BackMyWorldReq)
  return false;
#undef DO_
}

void BackMyWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BackMyWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BackMyWorldReq)
}

::google::protobuf::uint8* BackMyWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BackMyWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BackMyWorldReq)
  return target;
}

size_t BackMyWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BackMyWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackMyWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BackMyWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BackMyWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackMyWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BackMyWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BackMyWorldReq)
    MergeFrom(*source);
  }
}

void BackMyWorldReq::MergeFrom(const BackMyWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BackMyWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void BackMyWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BackMyWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackMyWorldReq::CopyFrom(const BackMyWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BackMyWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackMyWorldReq::IsInitialized() const {
  return true;
}

void BackMyWorldReq::Swap(BackMyWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackMyWorldReq::InternalSwap(BackMyWorldReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackMyWorldReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BackMyWorldReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BackMyWorldRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BackMyWorldRsp::BackMyWorldRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BackMyWorldRsp)
}
BackMyWorldRsp::BackMyWorldRsp(const BackMyWorldRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.BackMyWorldRsp)
}

void BackMyWorldRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

BackMyWorldRsp::~BackMyWorldRsp() {
  // @@protoc_insertion_point(destructor:proto.BackMyWorldRsp)
  SharedDtor();
}

void BackMyWorldRsp::SharedDtor() {
}

void BackMyWorldRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BackMyWorldRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BackMyWorldRsp& BackMyWorldRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

BackMyWorldRsp* BackMyWorldRsp::New(::google::protobuf::Arena* arena) const {
  BackMyWorldRsp* n = new BackMyWorldRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BackMyWorldRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BackMyWorldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool BackMyWorldRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BackMyWorldRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BackMyWorldRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BackMyWorldRsp)
  return false;
#undef DO_
}

void BackMyWorldRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BackMyWorldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BackMyWorldRsp)
}

::google::protobuf::uint8* BackMyWorldRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BackMyWorldRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BackMyWorldRsp)
  return target;
}

size_t BackMyWorldRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BackMyWorldRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BackMyWorldRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BackMyWorldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BackMyWorldRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BackMyWorldRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BackMyWorldRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BackMyWorldRsp)
    MergeFrom(*source);
  }
}

void BackMyWorldRsp::MergeFrom(const BackMyWorldRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BackMyWorldRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void BackMyWorldRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BackMyWorldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BackMyWorldRsp::CopyFrom(const BackMyWorldRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BackMyWorldRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackMyWorldRsp::IsInitialized() const {
  return true;
}

void BackMyWorldRsp::Swap(BackMyWorldRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BackMyWorldRsp::InternalSwap(BackMyWorldRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BackMyWorldRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BackMyWorldRsp

// int32 retcode = 1;
void BackMyWorldRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 BackMyWorldRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.BackMyWorldRsp.retcode)
  return retcode_;
}
void BackMyWorldRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.BackMyWorldRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeeMonsterReq::kMonsterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeeMonsterReq::SeeMonsterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SeeMonsterReq)
}
SeeMonsterReq::SeeMonsterReq(const SeeMonsterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  monster_id_ = from.monster_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SeeMonsterReq)
}

void SeeMonsterReq::SharedCtor() {
  monster_id_ = 0u;
  _cached_size_ = 0;
}

SeeMonsterReq::~SeeMonsterReq() {
  // @@protoc_insertion_point(destructor:proto.SeeMonsterReq)
  SharedDtor();
}

void SeeMonsterReq::SharedDtor() {
}

void SeeMonsterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeeMonsterReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SeeMonsterReq& SeeMonsterReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SeeMonsterReq* SeeMonsterReq::New(::google::protobuf::Arena* arena) const {
  SeeMonsterReq* n = new SeeMonsterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeeMonsterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SeeMonsterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monster_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SeeMonsterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SeeMonsterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 monster_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &monster_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SeeMonsterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SeeMonsterReq)
  return false;
#undef DO_
}

void SeeMonsterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SeeMonsterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_id = 1;
  if (this->monster_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->monster_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SeeMonsterReq)
}

::google::protobuf::uint8* SeeMonsterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SeeMonsterReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 monster_id = 1;
  if (this->monster_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->monster_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SeeMonsterReq)
  return target;
}

size_t SeeMonsterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SeeMonsterReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 monster_id = 1;
  if (this->monster_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->monster_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeeMonsterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SeeMonsterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SeeMonsterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeeMonsterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SeeMonsterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SeeMonsterReq)
    MergeFrom(*source);
  }
}

void SeeMonsterReq::MergeFrom(const SeeMonsterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SeeMonsterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.monster_id() != 0) {
    set_monster_id(from.monster_id());
  }
}

void SeeMonsterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SeeMonsterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeeMonsterReq::CopyFrom(const SeeMonsterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SeeMonsterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeeMonsterReq::IsInitialized() const {
  return true;
}

void SeeMonsterReq::Swap(SeeMonsterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeeMonsterReq::InternalSwap(SeeMonsterReq* other) {
  using std::swap;
  swap(monster_id_, other->monster_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeeMonsterReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeeMonsterReq

// uint32 monster_id = 1;
void SeeMonsterReq::clear_monster_id() {
  monster_id_ = 0u;
}
::google::protobuf::uint32 SeeMonsterReq::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.SeeMonsterReq.monster_id)
  return monster_id_;
}
void SeeMonsterReq::set_monster_id(::google::protobuf::uint32 value) {
  
  monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SeeMonsterReq.monster_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeeMonsterRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeeMonsterRsp::SeeMonsterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SeeMonsterRsp)
}
SeeMonsterRsp::SeeMonsterRsp(const SeeMonsterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SeeMonsterRsp)
}

void SeeMonsterRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SeeMonsterRsp::~SeeMonsterRsp() {
  // @@protoc_insertion_point(destructor:proto.SeeMonsterRsp)
  SharedDtor();
}

void SeeMonsterRsp::SharedDtor() {
}

void SeeMonsterRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeeMonsterRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SeeMonsterRsp& SeeMonsterRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SeeMonsterRsp* SeeMonsterRsp::New(::google::protobuf::Arena* arena) const {
  SeeMonsterRsp* n = new SeeMonsterRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeeMonsterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SeeMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SeeMonsterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SeeMonsterRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SeeMonsterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SeeMonsterRsp)
  return false;
#undef DO_
}

void SeeMonsterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SeeMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SeeMonsterRsp)
}

::google::protobuf::uint8* SeeMonsterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SeeMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SeeMonsterRsp)
  return target;
}

size_t SeeMonsterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SeeMonsterRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeeMonsterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SeeMonsterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SeeMonsterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeeMonsterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SeeMonsterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SeeMonsterRsp)
    MergeFrom(*source);
  }
}

void SeeMonsterRsp::MergeFrom(const SeeMonsterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SeeMonsterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SeeMonsterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SeeMonsterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeeMonsterRsp::CopyFrom(const SeeMonsterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SeeMonsterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeeMonsterRsp::IsInitialized() const {
  return true;
}

void SeeMonsterRsp::Swap(SeeMonsterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeeMonsterRsp::InternalSwap(SeeMonsterRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeeMonsterRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeeMonsterRsp

// int32 retcode = 1;
void SeeMonsterRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SeeMonsterRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SeeMonsterRsp.retcode)
  return retcode_;
}
void SeeMonsterRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SeeMonsterRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddSeenMonsterNotify::kMonsterIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddSeenMonsterNotify::AddSeenMonsterNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddSeenMonsterNotify)
}
AddSeenMonsterNotify::AddSeenMonsterNotify(const AddSeenMonsterNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      monster_id_list_(from.monster_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AddSeenMonsterNotify)
}

void AddSeenMonsterNotify::SharedCtor() {
  _cached_size_ = 0;
}

AddSeenMonsterNotify::~AddSeenMonsterNotify() {
  // @@protoc_insertion_point(destructor:proto.AddSeenMonsterNotify)
  SharedDtor();
}

void AddSeenMonsterNotify::SharedDtor() {
}

void AddSeenMonsterNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddSeenMonsterNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddSeenMonsterNotify& AddSeenMonsterNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddSeenMonsterNotify* AddSeenMonsterNotify::New(::google::protobuf::Arena* arena) const {
  AddSeenMonsterNotify* n = new AddSeenMonsterNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddSeenMonsterNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddSeenMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monster_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool AddSeenMonsterNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddSeenMonsterNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 monster_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_monster_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_monster_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddSeenMonsterNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddSeenMonsterNotify)
  return false;
#undef DO_
}

void AddSeenMonsterNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddSeenMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 monster_id_list = 1;
  if (this->monster_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _monster_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->monster_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->monster_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddSeenMonsterNotify)
}

::google::protobuf::uint8* AddSeenMonsterNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddSeenMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 monster_id_list = 1;
  if (this->monster_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _monster_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->monster_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddSeenMonsterNotify)
  return target;
}

size_t AddSeenMonsterNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddSeenMonsterNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 monster_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->monster_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _monster_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddSeenMonsterNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddSeenMonsterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AddSeenMonsterNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddSeenMonsterNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddSeenMonsterNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddSeenMonsterNotify)
    MergeFrom(*source);
  }
}

void AddSeenMonsterNotify::MergeFrom(const AddSeenMonsterNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddSeenMonsterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monster_id_list_.MergeFrom(from.monster_id_list_);
}

void AddSeenMonsterNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddSeenMonsterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSeenMonsterNotify::CopyFrom(const AddSeenMonsterNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddSeenMonsterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddSeenMonsterNotify::IsInitialized() const {
  return true;
}

void AddSeenMonsterNotify::Swap(AddSeenMonsterNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddSeenMonsterNotify::InternalSwap(AddSeenMonsterNotify* other) {
  using std::swap;
  monster_id_list_.InternalSwap(&other->monster_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddSeenMonsterNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddSeenMonsterNotify

// repeated uint32 monster_id_list = 1;
int AddSeenMonsterNotify::monster_id_list_size() const {
  return monster_id_list_.size();
}
void AddSeenMonsterNotify::clear_monster_id_list() {
  monster_id_list_.Clear();
}
::google::protobuf::uint32 AddSeenMonsterNotify::monster_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AddSeenMonsterNotify.monster_id_list)
  return monster_id_list_.Get(index);
}
void AddSeenMonsterNotify::set_monster_id_list(int index, ::google::protobuf::uint32 value) {
  monster_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AddSeenMonsterNotify.monster_id_list)
}
void AddSeenMonsterNotify::add_monster_id_list(::google::protobuf::uint32 value) {
  monster_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AddSeenMonsterNotify.monster_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddSeenMonsterNotify::monster_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AddSeenMonsterNotify.monster_id_list)
  return monster_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddSeenMonsterNotify::mutable_monster_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AddSeenMonsterNotify.monster_id_list)
  return &monster_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllSeenMonsterNotify::kMonsterIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllSeenMonsterNotify::AllSeenMonsterNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AllSeenMonsterNotify)
}
AllSeenMonsterNotify::AllSeenMonsterNotify(const AllSeenMonsterNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      monster_id_list_(from.monster_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AllSeenMonsterNotify)
}

void AllSeenMonsterNotify::SharedCtor() {
  _cached_size_ = 0;
}

AllSeenMonsterNotify::~AllSeenMonsterNotify() {
  // @@protoc_insertion_point(destructor:proto.AllSeenMonsterNotify)
  SharedDtor();
}

void AllSeenMonsterNotify::SharedDtor() {
}

void AllSeenMonsterNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllSeenMonsterNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllSeenMonsterNotify& AllSeenMonsterNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllSeenMonsterNotify* AllSeenMonsterNotify::New(::google::protobuf::Arena* arena) const {
  AllSeenMonsterNotify* n = new AllSeenMonsterNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllSeenMonsterNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AllSeenMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monster_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool AllSeenMonsterNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AllSeenMonsterNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 monster_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_monster_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_monster_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AllSeenMonsterNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AllSeenMonsterNotify)
  return false;
#undef DO_
}

void AllSeenMonsterNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AllSeenMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 monster_id_list = 1;
  if (this->monster_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _monster_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->monster_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->monster_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AllSeenMonsterNotify)
}

::google::protobuf::uint8* AllSeenMonsterNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AllSeenMonsterNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 monster_id_list = 1;
  if (this->monster_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _monster_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->monster_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AllSeenMonsterNotify)
  return target;
}

size_t AllSeenMonsterNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AllSeenMonsterNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 monster_id_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->monster_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _monster_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllSeenMonsterNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AllSeenMonsterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AllSeenMonsterNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllSeenMonsterNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AllSeenMonsterNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AllSeenMonsterNotify)
    MergeFrom(*source);
  }
}

void AllSeenMonsterNotify::MergeFrom(const AllSeenMonsterNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AllSeenMonsterNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monster_id_list_.MergeFrom(from.monster_id_list_);
}

void AllSeenMonsterNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AllSeenMonsterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllSeenMonsterNotify::CopyFrom(const AllSeenMonsterNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AllSeenMonsterNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllSeenMonsterNotify::IsInitialized() const {
  return true;
}

void AllSeenMonsterNotify::Swap(AllSeenMonsterNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllSeenMonsterNotify::InternalSwap(AllSeenMonsterNotify* other) {
  using std::swap;
  monster_id_list_.InternalSwap(&other->monster_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllSeenMonsterNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllSeenMonsterNotify

// repeated uint32 monster_id_list = 1;
int AllSeenMonsterNotify::monster_id_list_size() const {
  return monster_id_list_.size();
}
void AllSeenMonsterNotify::clear_monster_id_list() {
  monster_id_list_.Clear();
}
::google::protobuf::uint32 AllSeenMonsterNotify::monster_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllSeenMonsterNotify.monster_id_list)
  return monster_id_list_.Get(index);
}
void AllSeenMonsterNotify::set_monster_id_list(int index, ::google::protobuf::uint32 value) {
  monster_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AllSeenMonsterNotify.monster_id_list)
}
void AllSeenMonsterNotify::add_monster_id_list(::google::protobuf::uint32 value) {
  monster_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AllSeenMonsterNotify.monster_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AllSeenMonsterNotify::monster_id_list() const {
  // @@protoc_insertion_point(field_list:proto.AllSeenMonsterNotify.monster_id_list)
  return monster_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AllSeenMonsterNotify::mutable_monster_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllSeenMonsterNotify.monster_id_list)
  return &monster_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneTimeNotify::kSceneIdFieldNumber;
const int SceneTimeNotify::kIsPausedFieldNumber;
const int SceneTimeNotify::kSceneTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneTimeNotify::SceneTimeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneTimeNotify)
}
SceneTimeNotify::SceneTimeNotify(const SceneTimeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_time_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(scene_time_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneTimeNotify)
}

void SceneTimeNotify::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(scene_time_));
  _cached_size_ = 0;
}

SceneTimeNotify::~SceneTimeNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneTimeNotify)
  SharedDtor();
}

void SceneTimeNotify::SharedDtor() {
}

void SceneTimeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneTimeNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneTimeNotify& SceneTimeNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneTimeNotify* SceneTimeNotify::New(::google::protobuf::Arena* arena) const {
  SceneTimeNotify* n = new SceneTimeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneTimeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_time_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(scene_time_));
  _internal_metadata_.Clear();
}

bool SceneTimeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneTimeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_paused = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 scene_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneTimeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneTimeNotify)
  return false;
#undef DO_
}

void SceneTimeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // bool is_paused = 2;
  if (this->is_paused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_paused(), output);
  }

  // uint64 scene_time = 3;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->scene_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneTimeNotify)
}

::google::protobuf::uint8* SceneTimeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneTimeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // bool is_paused = 2;
  if (this->is_paused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_paused(), target);
  }

  // uint64 scene_time = 3;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->scene_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneTimeNotify)
  return target;
}

size_t SceneTimeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneTimeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // bool is_paused = 2;
  if (this->is_paused() != 0) {
    total_size += 1 + 1;
  }

  // uint64 scene_time = 3;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->scene_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneTimeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneTimeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneTimeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneTimeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneTimeNotify)
    MergeFrom(*source);
  }
}

void SceneTimeNotify::MergeFrom(const SceneTimeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneTimeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.is_paused() != 0) {
    set_is_paused(from.is_paused());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
}

void SceneTimeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneTimeNotify::CopyFrom(const SceneTimeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneTimeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneTimeNotify::IsInitialized() const {
  return true;
}

void SceneTimeNotify::Swap(SceneTimeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneTimeNotify::InternalSwap(SceneTimeNotify* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(is_paused_, other->is_paused_);
  swap(scene_time_, other->scene_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneTimeNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneTimeNotify

// uint32 scene_id = 1;
void SceneTimeNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 SceneTimeNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.scene_id)
  return scene_id_;
}
void SceneTimeNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.scene_id)
}

// bool is_paused = 2;
void SceneTimeNotify::clear_is_paused() {
  is_paused_ = false;
}
bool SceneTimeNotify::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.is_paused)
  return is_paused_;
}
void SceneTimeNotify::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.is_paused)
}

// uint64 scene_time = 3;
void SceneTimeNotify::clear_scene_time() {
  scene_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneTimeNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneTimeNotify.scene_time)
  return scene_time_;
}
void SceneTimeNotify::set_scene_time(::google::protobuf::uint64 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTimeNotify.scene_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneReadyReq::kEnterSceneTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneReadyReq::EnterSceneReadyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterSceneReadyReq)
}
EnterSceneReadyReq::EnterSceneReadyReq(const EnterSceneReadyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enter_scene_token_ = from.enter_scene_token_;
  // @@protoc_insertion_point(copy_constructor:proto.EnterSceneReadyReq)
}

void EnterSceneReadyReq::SharedCtor() {
  enter_scene_token_ = 0u;
  _cached_size_ = 0;
}

EnterSceneReadyReq::~EnterSceneReadyReq() {
  // @@protoc_insertion_point(destructor:proto.EnterSceneReadyReq)
  SharedDtor();
}

void EnterSceneReadyReq::SharedDtor() {
}

void EnterSceneReadyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneReadyReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneReadyReq& EnterSceneReadyReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterSceneReadyReq* EnterSceneReadyReq::New(::google::protobuf::Arena* arena) const {
  EnterSceneReadyReq* n = new EnterSceneReadyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneReadyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterSceneReadyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enter_scene_token_ = 0u;
  _internal_metadata_.Clear();
}

bool EnterSceneReadyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterSceneReadyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 enter_scene_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enter_scene_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterSceneReadyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterSceneReadyReq)
  return false;
#undef DO_
}

void EnterSceneReadyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterSceneReadyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->enter_scene_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterSceneReadyReq)
}

::google::protobuf::uint8* EnterSceneReadyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterSceneReadyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->enter_scene_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterSceneReadyReq)
  return target;
}

size_t EnterSceneReadyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterSceneReadyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enter_scene_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneReadyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterSceneReadyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneReadyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneReadyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterSceneReadyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterSceneReadyReq)
    MergeFrom(*source);
  }
}

void EnterSceneReadyReq::MergeFrom(const EnterSceneReadyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterSceneReadyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enter_scene_token() != 0) {
    set_enter_scene_token(from.enter_scene_token());
  }
}

void EnterSceneReadyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterSceneReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneReadyReq::CopyFrom(const EnterSceneReadyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterSceneReadyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneReadyReq::IsInitialized() const {
  return true;
}

void EnterSceneReadyReq::Swap(EnterSceneReadyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneReadyReq::InternalSwap(EnterSceneReadyReq* other) {
  using std::swap;
  swap(enter_scene_token_, other->enter_scene_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneReadyReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneReadyReq

// uint32 enter_scene_token = 1;
void EnterSceneReadyReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
::google::protobuf::uint32 EnterSceneReadyReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneReadyReq.enter_scene_token)
  return enter_scene_token_;
}
void EnterSceneReadyReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneReadyReq.enter_scene_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneReadyRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneReadyRsp::EnterSceneReadyRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterSceneReadyRsp)
}
EnterSceneReadyRsp::EnterSceneReadyRsp(const EnterSceneReadyRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.EnterSceneReadyRsp)
}

void EnterSceneReadyRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

EnterSceneReadyRsp::~EnterSceneReadyRsp() {
  // @@protoc_insertion_point(destructor:proto.EnterSceneReadyRsp)
  SharedDtor();
}

void EnterSceneReadyRsp::SharedDtor() {
}

void EnterSceneReadyRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneReadyRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneReadyRsp& EnterSceneReadyRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterSceneReadyRsp* EnterSceneReadyRsp::New(::google::protobuf::Arena* arena) const {
  EnterSceneReadyRsp* n = new EnterSceneReadyRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneReadyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterSceneReadyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool EnterSceneReadyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterSceneReadyRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterSceneReadyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterSceneReadyRsp)
  return false;
#undef DO_
}

void EnterSceneReadyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterSceneReadyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterSceneReadyRsp)
}

::google::protobuf::uint8* EnterSceneReadyRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterSceneReadyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterSceneReadyRsp)
  return target;
}

size_t EnterSceneReadyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterSceneReadyRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneReadyRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterSceneReadyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneReadyRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneReadyRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterSceneReadyRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterSceneReadyRsp)
    MergeFrom(*source);
  }
}

void EnterSceneReadyRsp::MergeFrom(const EnterSceneReadyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterSceneReadyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void EnterSceneReadyRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterSceneReadyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneReadyRsp::CopyFrom(const EnterSceneReadyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterSceneReadyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneReadyRsp::IsInitialized() const {
  return true;
}

void EnterSceneReadyRsp::Swap(EnterSceneReadyRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneReadyRsp::InternalSwap(EnterSceneReadyRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneReadyRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneReadyRsp

// int32 retcode = 1;
void EnterSceneReadyRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 EnterSceneReadyRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneReadyRsp.retcode)
  return retcode_;
}
void EnterSceneReadyRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneReadyRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterScenePeerNotify::kDestSceneIdFieldNumber;
const int EnterScenePeerNotify::kPeerIdFieldNumber;
const int EnterScenePeerNotify::kHostPeerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterScenePeerNotify::EnterScenePeerNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterScenePeerNotify)
}
EnterScenePeerNotify::EnterScenePeerNotify(const EnterScenePeerNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dest_scene_id_, &from.dest_scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_peer_id_) -
    reinterpret_cast<char*>(&dest_scene_id_)) + sizeof(host_peer_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EnterScenePeerNotify)
}

void EnterScenePeerNotify::SharedCtor() {
  ::memset(&dest_scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_peer_id_) -
      reinterpret_cast<char*>(&dest_scene_id_)) + sizeof(host_peer_id_));
  _cached_size_ = 0;
}

EnterScenePeerNotify::~EnterScenePeerNotify() {
  // @@protoc_insertion_point(destructor:proto.EnterScenePeerNotify)
  SharedDtor();
}

void EnterScenePeerNotify::SharedDtor() {
}

void EnterScenePeerNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterScenePeerNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterScenePeerNotify& EnterScenePeerNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterScenePeerNotify* EnterScenePeerNotify::New(::google::protobuf::Arena* arena) const {
  EnterScenePeerNotify* n = new EnterScenePeerNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterScenePeerNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterScenePeerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dest_scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_peer_id_) -
      reinterpret_cast<char*>(&dest_scene_id_)) + sizeof(host_peer_id_));
  _internal_metadata_.Clear();
}

bool EnterScenePeerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterScenePeerNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dest_scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 peer_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 host_peer_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_peer_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterScenePeerNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterScenePeerNotify)
  return false;
#undef DO_
}

void EnterScenePeerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterScenePeerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dest_scene_id = 1;
  if (this->dest_scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dest_scene_id(), output);
  }

  // uint32 peer_id = 2;
  if (this->peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->peer_id(), output);
  }

  // uint32 host_peer_id = 3;
  if (this->host_peer_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->host_peer_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterScenePeerNotify)
}

::google::protobuf::uint8* EnterScenePeerNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterScenePeerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dest_scene_id = 1;
  if (this->dest_scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dest_scene_id(), target);
  }

  // uint32 peer_id = 2;
  if (this->peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->peer_id(), target);
  }

  // uint32 host_peer_id = 3;
  if (this->host_peer_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->host_peer_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterScenePeerNotify)
  return target;
}

size_t EnterScenePeerNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterScenePeerNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 dest_scene_id = 1;
  if (this->dest_scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dest_scene_id());
  }

  // uint32 peer_id = 2;
  if (this->peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->peer_id());
  }

  // uint32 host_peer_id = 3;
  if (this->host_peer_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->host_peer_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterScenePeerNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterScenePeerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterScenePeerNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterScenePeerNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterScenePeerNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterScenePeerNotify)
    MergeFrom(*source);
  }
}

void EnterScenePeerNotify::MergeFrom(const EnterScenePeerNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterScenePeerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dest_scene_id() != 0) {
    set_dest_scene_id(from.dest_scene_id());
  }
  if (from.peer_id() != 0) {
    set_peer_id(from.peer_id());
  }
  if (from.host_peer_id() != 0) {
    set_host_peer_id(from.host_peer_id());
  }
}

void EnterScenePeerNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterScenePeerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterScenePeerNotify::CopyFrom(const EnterScenePeerNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterScenePeerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterScenePeerNotify::IsInitialized() const {
  return true;
}

void EnterScenePeerNotify::Swap(EnterScenePeerNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterScenePeerNotify::InternalSwap(EnterScenePeerNotify* other) {
  using std::swap;
  swap(dest_scene_id_, other->dest_scene_id_);
  swap(peer_id_, other->peer_id_);
  swap(host_peer_id_, other->host_peer_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterScenePeerNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterScenePeerNotify

// uint32 dest_scene_id = 1;
void EnterScenePeerNotify::clear_dest_scene_id() {
  dest_scene_id_ = 0u;
}
::google::protobuf::uint32 EnterScenePeerNotify::dest_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.dest_scene_id)
  return dest_scene_id_;
}
void EnterScenePeerNotify::set_dest_scene_id(::google::protobuf::uint32 value) {
  
  dest_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.dest_scene_id)
}

// uint32 peer_id = 2;
void EnterScenePeerNotify::clear_peer_id() {
  peer_id_ = 0u;
}
::google::protobuf::uint32 EnterScenePeerNotify::peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.peer_id)
  return peer_id_;
}
void EnterScenePeerNotify::set_peer_id(::google::protobuf::uint32 value) {
  
  peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.peer_id)
}

// uint32 host_peer_id = 3;
void EnterScenePeerNotify::clear_host_peer_id() {
  host_peer_id_ = 0u;
}
::google::protobuf::uint32 EnterScenePeerNotify::host_peer_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterScenePeerNotify.host_peer_id)
  return host_peer_id_;
}
void EnterScenePeerNotify::set_host_peer_id(::google::protobuf::uint32 value) {
  
  host_peer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterScenePeerNotify.host_peer_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneDoneReq::kEnterSceneTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneDoneReq::EnterSceneDoneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterSceneDoneReq)
}
EnterSceneDoneReq::EnterSceneDoneReq(const EnterSceneDoneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enter_scene_token_ = from.enter_scene_token_;
  // @@protoc_insertion_point(copy_constructor:proto.EnterSceneDoneReq)
}

void EnterSceneDoneReq::SharedCtor() {
  enter_scene_token_ = 0u;
  _cached_size_ = 0;
}

EnterSceneDoneReq::~EnterSceneDoneReq() {
  // @@protoc_insertion_point(destructor:proto.EnterSceneDoneReq)
  SharedDtor();
}

void EnterSceneDoneReq::SharedDtor() {
}

void EnterSceneDoneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneDoneReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneDoneReq& EnterSceneDoneReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterSceneDoneReq* EnterSceneDoneReq::New(::google::protobuf::Arena* arena) const {
  EnterSceneDoneReq* n = new EnterSceneDoneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneDoneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterSceneDoneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enter_scene_token_ = 0u;
  _internal_metadata_.Clear();
}

bool EnterSceneDoneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterSceneDoneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 enter_scene_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enter_scene_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterSceneDoneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterSceneDoneReq)
  return false;
#undef DO_
}

void EnterSceneDoneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterSceneDoneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->enter_scene_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterSceneDoneReq)
}

::google::protobuf::uint8* EnterSceneDoneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterSceneDoneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->enter_scene_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterSceneDoneReq)
  return target;
}

size_t EnterSceneDoneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterSceneDoneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enter_scene_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneDoneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterSceneDoneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneDoneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneDoneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterSceneDoneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterSceneDoneReq)
    MergeFrom(*source);
  }
}

void EnterSceneDoneReq::MergeFrom(const EnterSceneDoneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterSceneDoneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enter_scene_token() != 0) {
    set_enter_scene_token(from.enter_scene_token());
  }
}

void EnterSceneDoneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterSceneDoneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneDoneReq::CopyFrom(const EnterSceneDoneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterSceneDoneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneDoneReq::IsInitialized() const {
  return true;
}

void EnterSceneDoneReq::Swap(EnterSceneDoneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneDoneReq::InternalSwap(EnterSceneDoneReq* other) {
  using std::swap;
  swap(enter_scene_token_, other->enter_scene_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneDoneReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneDoneReq

// uint32 enter_scene_token = 1;
void EnterSceneDoneReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
::google::protobuf::uint32 EnterSceneDoneReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneDoneReq.enter_scene_token)
  return enter_scene_token_;
}
void EnterSceneDoneReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneDoneReq.enter_scene_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterSceneDoneRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterSceneDoneRsp::EnterSceneDoneRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterSceneDoneRsp)
}
EnterSceneDoneRsp::EnterSceneDoneRsp(const EnterSceneDoneRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.EnterSceneDoneRsp)
}

void EnterSceneDoneRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

EnterSceneDoneRsp::~EnterSceneDoneRsp() {
  // @@protoc_insertion_point(destructor:proto.EnterSceneDoneRsp)
  SharedDtor();
}

void EnterSceneDoneRsp::SharedDtor() {
}

void EnterSceneDoneRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterSceneDoneRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterSceneDoneRsp& EnterSceneDoneRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterSceneDoneRsp* EnterSceneDoneRsp::New(::google::protobuf::Arena* arena) const {
  EnterSceneDoneRsp* n = new EnterSceneDoneRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterSceneDoneRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterSceneDoneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool EnterSceneDoneRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterSceneDoneRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterSceneDoneRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterSceneDoneRsp)
  return false;
#undef DO_
}

void EnterSceneDoneRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterSceneDoneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterSceneDoneRsp)
}

::google::protobuf::uint8* EnterSceneDoneRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterSceneDoneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterSceneDoneRsp)
  return target;
}

size_t EnterSceneDoneRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterSceneDoneRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterSceneDoneRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterSceneDoneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterSceneDoneRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterSceneDoneRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterSceneDoneRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterSceneDoneRsp)
    MergeFrom(*source);
  }
}

void EnterSceneDoneRsp::MergeFrom(const EnterSceneDoneRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterSceneDoneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void EnterSceneDoneRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterSceneDoneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterSceneDoneRsp::CopyFrom(const EnterSceneDoneRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterSceneDoneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterSceneDoneRsp::IsInitialized() const {
  return true;
}

void EnterSceneDoneRsp::Swap(EnterSceneDoneRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterSceneDoneRsp::InternalSwap(EnterSceneDoneRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterSceneDoneRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterSceneDoneRsp

// int32 retcode = 1;
void EnterSceneDoneRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 EnterSceneDoneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EnterSceneDoneRsp.retcode)
  return retcode_;
}
void EnterSceneDoneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterSceneDoneRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldPlayerDieNotify::kDieTypeFieldNumber;
const int WorldPlayerDieNotify::kMurdererEntityIdFieldNumber;
const int WorldPlayerDieNotify::kMonsterIdFieldNumber;
const int WorldPlayerDieNotify::kGadgetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldPlayerDieNotify::WorldPlayerDieNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldPlayerDieNotify)
}
WorldPlayerDieNotify::WorldPlayerDieNotify(const WorldPlayerDieNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&die_type_, &from.die_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&murderer_entity_id_) -
    reinterpret_cast<char*>(&die_type_)) + sizeof(murderer_entity_id_));
  clear_has_entity();
  switch (from.entity_case()) {
    case kMonsterId: {
      set_monster_id(from.monster_id());
      break;
    }
    case kGadgetId: {
      set_gadget_id(from.gadget_id());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.WorldPlayerDieNotify)
}

void WorldPlayerDieNotify::SharedCtor() {
  ::memset(&die_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&murderer_entity_id_) -
      reinterpret_cast<char*>(&die_type_)) + sizeof(murderer_entity_id_));
  clear_has_entity();
  _cached_size_ = 0;
}

WorldPlayerDieNotify::~WorldPlayerDieNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldPlayerDieNotify)
  SharedDtor();
}

void WorldPlayerDieNotify::SharedDtor() {
  if (has_entity()) {
    clear_entity();
  }
}

void WorldPlayerDieNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldPlayerDieNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldPlayerDieNotify& WorldPlayerDieNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldPlayerDieNotify* WorldPlayerDieNotify::New(::google::protobuf::Arena* arena) const {
  WorldPlayerDieNotify* n = new WorldPlayerDieNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldPlayerDieNotify::clear_entity() {
// @@protoc_insertion_point(one_of_clear_start:proto.WorldPlayerDieNotify)
  switch (entity_case()) {
    case kMonsterId: {
      // No need to clear
      break;
    }
    case kGadgetId: {
      // No need to clear
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ENTITY_NOT_SET;
}


void WorldPlayerDieNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldPlayerDieNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&die_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&murderer_entity_id_) -
      reinterpret_cast<char*>(&die_type_)) + sizeof(murderer_entity_id_));
  clear_entity();
  _internal_metadata_.Clear();
}

bool WorldPlayerDieNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldPlayerDieNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PlayerDieType die_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_die_type(static_cast< ::proto::PlayerDieType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 murderer_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &murderer_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 monster_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_.monster_id_)));
          set_has_monster_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_entity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_.gadget_id_)));
          set_has_gadget_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldPlayerDieNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldPlayerDieNotify)
  return false;
#undef DO_
}

void WorldPlayerDieNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldPlayerDieNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerDieType die_type = 1;
  if (this->die_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->die_type(), output);
  }

  // uint32 murderer_entity_id = 2;
  if (this->murderer_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->murderer_entity_id(), output);
  }

  // uint32 monster_id = 3;
  if (has_monster_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->monster_id(), output);
  }

  // uint32 gadget_id = 4;
  if (has_gadget_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gadget_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldPlayerDieNotify)
}

::google::protobuf::uint8* WorldPlayerDieNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldPlayerDieNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerDieType die_type = 1;
  if (this->die_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->die_type(), target);
  }

  // uint32 murderer_entity_id = 2;
  if (this->murderer_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->murderer_entity_id(), target);
  }

  // uint32 monster_id = 3;
  if (has_monster_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->monster_id(), target);
  }

  // uint32 gadget_id = 4;
  if (has_gadget_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gadget_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldPlayerDieNotify)
  return target;
}

size_t WorldPlayerDieNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldPlayerDieNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlayerDieType die_type = 1;
  if (this->die_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->die_type());
  }

  // uint32 murderer_entity_id = 2;
  if (this->murderer_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->murderer_entity_id());
  }

  switch (entity_case()) {
    // uint32 monster_id = 3;
    case kMonsterId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->monster_id());
      break;
    }
    // uint32 gadget_id = 4;
    case kGadgetId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gadget_id());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldPlayerDieNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldPlayerDieNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldPlayerDieNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldPlayerDieNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldPlayerDieNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldPlayerDieNotify)
    MergeFrom(*source);
  }
}

void WorldPlayerDieNotify::MergeFrom(const WorldPlayerDieNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldPlayerDieNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.die_type() != 0) {
    set_die_type(from.die_type());
  }
  if (from.murderer_entity_id() != 0) {
    set_murderer_entity_id(from.murderer_entity_id());
  }
  switch (from.entity_case()) {
    case kMonsterId: {
      set_monster_id(from.monster_id());
      break;
    }
    case kGadgetId: {
      set_gadget_id(from.gadget_id());
      break;
    }
    case ENTITY_NOT_SET: {
      break;
    }
  }
}

void WorldPlayerDieNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldPlayerDieNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldPlayerDieNotify::CopyFrom(const WorldPlayerDieNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldPlayerDieNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldPlayerDieNotify::IsInitialized() const {
  return true;
}

void WorldPlayerDieNotify::Swap(WorldPlayerDieNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldPlayerDieNotify::InternalSwap(WorldPlayerDieNotify* other) {
  using std::swap;
  swap(die_type_, other->die_type_);
  swap(murderer_entity_id_, other->murderer_entity_id_);
  swap(entity_, other->entity_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldPlayerDieNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldPlayerDieNotify

// .proto.PlayerDieType die_type = 1;
void WorldPlayerDieNotify::clear_die_type() {
  die_type_ = 0;
}
::proto::PlayerDieType WorldPlayerDieNotify::die_type() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.die_type)
  return static_cast< ::proto::PlayerDieType >(die_type_);
}
void WorldPlayerDieNotify::set_die_type(::proto::PlayerDieType value) {
  
  die_type_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.die_type)
}

// uint32 murderer_entity_id = 2;
void WorldPlayerDieNotify::clear_murderer_entity_id() {
  murderer_entity_id_ = 0u;
}
::google::protobuf::uint32 WorldPlayerDieNotify::murderer_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.murderer_entity_id)
  return murderer_entity_id_;
}
void WorldPlayerDieNotify::set_murderer_entity_id(::google::protobuf::uint32 value) {
  
  murderer_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.murderer_entity_id)
}

// uint32 monster_id = 3;
bool WorldPlayerDieNotify::has_monster_id() const {
  return entity_case() == kMonsterId;
}
void WorldPlayerDieNotify::set_has_monster_id() {
  _oneof_case_[0] = kMonsterId;
}
void WorldPlayerDieNotify::clear_monster_id() {
  if (has_monster_id()) {
    entity_.monster_id_ = 0u;
    clear_has_entity();
  }
}
::google::protobuf::uint32 WorldPlayerDieNotify::monster_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.monster_id)
  if (has_monster_id()) {
    return entity_.monster_id_;
  }
  return 0u;
}
void WorldPlayerDieNotify::set_monster_id(::google::protobuf::uint32 value) {
  if (!has_monster_id()) {
    clear_entity();
    set_has_monster_id();
  }
  entity_.monster_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.monster_id)
}

// uint32 gadget_id = 4;
bool WorldPlayerDieNotify::has_gadget_id() const {
  return entity_case() == kGadgetId;
}
void WorldPlayerDieNotify::set_has_gadget_id() {
  _oneof_case_[0] = kGadgetId;
}
void WorldPlayerDieNotify::clear_gadget_id() {
  if (has_gadget_id()) {
    entity_.gadget_id_ = 0u;
    clear_has_entity();
  }
}
::google::protobuf::uint32 WorldPlayerDieNotify::gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerDieNotify.gadget_id)
  if (has_gadget_id()) {
    return entity_.gadget_id_;
  }
  return 0u;
}
void WorldPlayerDieNotify::set_gadget_id(::google::protobuf::uint32 value) {
  if (!has_gadget_id()) {
    clear_entity();
    set_has_gadget_id();
  }
  entity_.gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerDieNotify.gadget_id)
}

bool WorldPlayerDieNotify::has_entity() const {
  return entity_case() != ENTITY_NOT_SET;
}
void WorldPlayerDieNotify::clear_has_entity() {
  _oneof_case_[0] = ENTITY_NOT_SET;
}
WorldPlayerDieNotify::EntityCase WorldPlayerDieNotify::entity_case() const {
  return WorldPlayerDieNotify::EntityCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldPlayerReviveReq::WorldPlayerReviveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldPlayerReviveReq)
}
WorldPlayerReviveReq::WorldPlayerReviveReq(const WorldPlayerReviveReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WorldPlayerReviveReq)
}

void WorldPlayerReviveReq::SharedCtor() {
  _cached_size_ = 0;
}

WorldPlayerReviveReq::~WorldPlayerReviveReq() {
  // @@protoc_insertion_point(destructor:proto.WorldPlayerReviveReq)
  SharedDtor();
}

void WorldPlayerReviveReq::SharedDtor() {
}

void WorldPlayerReviveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldPlayerReviveReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldPlayerReviveReq& WorldPlayerReviveReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldPlayerReviveReq* WorldPlayerReviveReq::New(::google::protobuf::Arena* arena) const {
  WorldPlayerReviveReq* n = new WorldPlayerReviveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldPlayerReviveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldPlayerReviveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool WorldPlayerReviveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldPlayerReviveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldPlayerReviveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldPlayerReviveReq)
  return false;
#undef DO_
}

void WorldPlayerReviveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldPlayerReviveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldPlayerReviveReq)
}

::google::protobuf::uint8* WorldPlayerReviveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldPlayerReviveReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldPlayerReviveReq)
  return target;
}

size_t WorldPlayerReviveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldPlayerReviveReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldPlayerReviveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldPlayerReviveReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldPlayerReviveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldPlayerReviveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldPlayerReviveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldPlayerReviveReq)
    MergeFrom(*source);
  }
}

void WorldPlayerReviveReq::MergeFrom(const WorldPlayerReviveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldPlayerReviveReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WorldPlayerReviveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldPlayerReviveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldPlayerReviveReq::CopyFrom(const WorldPlayerReviveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldPlayerReviveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldPlayerReviveReq::IsInitialized() const {
  return true;
}

void WorldPlayerReviveReq::Swap(WorldPlayerReviveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldPlayerReviveReq::InternalSwap(WorldPlayerReviveReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldPlayerReviveReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldPlayerReviveReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldPlayerReviveRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldPlayerReviveRsp::WorldPlayerReviveRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldPlayerReviveRsp)
}
WorldPlayerReviveRsp::WorldPlayerReviveRsp(const WorldPlayerReviveRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.WorldPlayerReviveRsp)
}

void WorldPlayerReviveRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

WorldPlayerReviveRsp::~WorldPlayerReviveRsp() {
  // @@protoc_insertion_point(destructor:proto.WorldPlayerReviveRsp)
  SharedDtor();
}

void WorldPlayerReviveRsp::SharedDtor() {
}

void WorldPlayerReviveRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldPlayerReviveRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldPlayerReviveRsp& WorldPlayerReviveRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldPlayerReviveRsp* WorldPlayerReviveRsp::New(::google::protobuf::Arena* arena) const {
  WorldPlayerReviveRsp* n = new WorldPlayerReviveRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldPlayerReviveRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldPlayerReviveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool WorldPlayerReviveRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldPlayerReviveRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldPlayerReviveRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldPlayerReviveRsp)
  return false;
#undef DO_
}

void WorldPlayerReviveRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldPlayerReviveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldPlayerReviveRsp)
}

::google::protobuf::uint8* WorldPlayerReviveRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldPlayerReviveRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldPlayerReviveRsp)
  return target;
}

size_t WorldPlayerReviveRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldPlayerReviveRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldPlayerReviveRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldPlayerReviveRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldPlayerReviveRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldPlayerReviveRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldPlayerReviveRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldPlayerReviveRsp)
    MergeFrom(*source);
  }
}

void WorldPlayerReviveRsp::MergeFrom(const WorldPlayerReviveRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldPlayerReviveRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void WorldPlayerReviveRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldPlayerReviveRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldPlayerReviveRsp::CopyFrom(const WorldPlayerReviveRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldPlayerReviveRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldPlayerReviveRsp::IsInitialized() const {
  return true;
}

void WorldPlayerReviveRsp::Swap(WorldPlayerReviveRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldPlayerReviveRsp::InternalSwap(WorldPlayerReviveRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldPlayerReviveRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldPlayerReviveRsp

// int32 retcode = 1;
void WorldPlayerReviveRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 WorldPlayerReviveRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerReviveRsp.retcode)
  return retcode_;
}
void WorldPlayerReviveRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.WorldPlayerReviveRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JoinPlayerFailNotify::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JoinPlayerFailNotify::JoinPlayerFailNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.JoinPlayerFailNotify)
}
JoinPlayerFailNotify::JoinPlayerFailNotify(const JoinPlayerFailNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.JoinPlayerFailNotify)
}

void JoinPlayerFailNotify::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

JoinPlayerFailNotify::~JoinPlayerFailNotify() {
  // @@protoc_insertion_point(destructor:proto.JoinPlayerFailNotify)
  SharedDtor();
}

void JoinPlayerFailNotify::SharedDtor() {
}

void JoinPlayerFailNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JoinPlayerFailNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JoinPlayerFailNotify& JoinPlayerFailNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

JoinPlayerFailNotify* JoinPlayerFailNotify::New(::google::protobuf::Arena* arena) const {
  JoinPlayerFailNotify* n = new JoinPlayerFailNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JoinPlayerFailNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.JoinPlayerFailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool JoinPlayerFailNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.JoinPlayerFailNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.JoinPlayerFailNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.JoinPlayerFailNotify)
  return false;
#undef DO_
}

void JoinPlayerFailNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.JoinPlayerFailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.JoinPlayerFailNotify)
}

::google::protobuf::uint8* JoinPlayerFailNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.JoinPlayerFailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.JoinPlayerFailNotify)
  return target;
}

size_t JoinPlayerFailNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.JoinPlayerFailNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JoinPlayerFailNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.JoinPlayerFailNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const JoinPlayerFailNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JoinPlayerFailNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.JoinPlayerFailNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.JoinPlayerFailNotify)
    MergeFrom(*source);
  }
}

void JoinPlayerFailNotify::MergeFrom(const JoinPlayerFailNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.JoinPlayerFailNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void JoinPlayerFailNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.JoinPlayerFailNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JoinPlayerFailNotify::CopyFrom(const JoinPlayerFailNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.JoinPlayerFailNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JoinPlayerFailNotify::IsInitialized() const {
  return true;
}

void JoinPlayerFailNotify::Swap(JoinPlayerFailNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JoinPlayerFailNotify::InternalSwap(JoinPlayerFailNotify* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JoinPlayerFailNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JoinPlayerFailNotify

// int32 retcode = 1;
void JoinPlayerFailNotify::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 JoinPlayerFailNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.JoinPlayerFailNotify.retcode)
  return retcode_;
}
void JoinPlayerFailNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.JoinPlayerFailNotify.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

SetSceneWeatherAreaReq::SetSceneWeatherAreaReq_WeatherValueMapEntry::SetSceneWeatherAreaReq_WeatherValueMapEntry() {}
SetSceneWeatherAreaReq::SetSceneWeatherAreaReq_WeatherValueMapEntry::SetSceneWeatherAreaReq_WeatherValueMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata SetSceneWeatherAreaReq::SetSceneWeatherAreaReq_WeatherValueMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[99];
}
void SetSceneWeatherAreaReq::SetSceneWeatherAreaReq_WeatherValueMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void SetSceneWeatherAreaReq::SetSceneWeatherAreaReq_WeatherValueMapEntry::MergeFrom(const SetSceneWeatherAreaReq_WeatherValueMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSceneWeatherAreaReq::kWeatherGadgetIdFieldNumber;
const int SetSceneWeatherAreaReq::kWeatherValueMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSceneWeatherAreaReq::SetSceneWeatherAreaReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetSceneWeatherAreaReq)
}
SetSceneWeatherAreaReq::SetSceneWeatherAreaReq(const SetSceneWeatherAreaReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weather_value_map_.MergeFrom(from.weather_value_map_);
  weather_gadget_id_ = from.weather_gadget_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SetSceneWeatherAreaReq)
}

void SetSceneWeatherAreaReq::SharedCtor() {
  weather_gadget_id_ = 0u;
  _cached_size_ = 0;
}

SetSceneWeatherAreaReq::~SetSceneWeatherAreaReq() {
  // @@protoc_insertion_point(destructor:proto.SetSceneWeatherAreaReq)
  SharedDtor();
}

void SetSceneWeatherAreaReq::SharedDtor() {
}

void SetSceneWeatherAreaReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSceneWeatherAreaReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSceneWeatherAreaReq& SetSceneWeatherAreaReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetSceneWeatherAreaReq* SetSceneWeatherAreaReq::New(::google::protobuf::Arena* arena) const {
  SetSceneWeatherAreaReq* n = new SetSceneWeatherAreaReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSceneWeatherAreaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetSceneWeatherAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weather_value_map_.Clear();
  weather_gadget_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SetSceneWeatherAreaReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetSceneWeatherAreaReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 weather_gadget_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weather_gadget_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, string> weather_value_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          SetSceneWeatherAreaReq_WeatherValueMapEntry::Parser< ::google::protobuf::internal::MapField<
              SetSceneWeatherAreaReq_WeatherValueMapEntry,
              ::google::protobuf::uint32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string > > parser(&weather_value_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SetSceneWeatherAreaReq.WeatherValueMapEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetSceneWeatherAreaReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetSceneWeatherAreaReq)
  return false;
#undef DO_
}

void SetSceneWeatherAreaReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetSceneWeatherAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->weather_gadget_id(), output);
  }

  // map<uint32, string> weather_value_map = 2;
  if (!this->weather_value_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.SetSceneWeatherAreaReq.WeatherValueMapEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->weather_value_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->weather_value_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->weather_value_map().begin();
          it != this->weather_value_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SetSceneWeatherAreaReq_WeatherValueMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(weather_value_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<SetSceneWeatherAreaReq_WeatherValueMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->weather_value_map().begin();
          it != this->weather_value_map().end(); ++it) {
        entry.reset(weather_value_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetSceneWeatherAreaReq)
}

::google::protobuf::uint8* SetSceneWeatherAreaReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetSceneWeatherAreaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->weather_gadget_id(), target);
  }

  // map<uint32, string> weather_value_map = 2;
  if (!this->weather_value_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.SetSceneWeatherAreaReq.WeatherValueMapEntry.value");
      }
    };

    if (deterministic &&
        this->weather_value_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->weather_value_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->weather_value_map().begin();
          it != this->weather_value_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SetSceneWeatherAreaReq_WeatherValueMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(weather_value_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<SetSceneWeatherAreaReq_WeatherValueMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->weather_value_map().begin();
          it != this->weather_value_map().end(); ++it) {
        entry.reset(weather_value_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetSceneWeatherAreaReq)
  return target;
}

size_t SetSceneWeatherAreaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetSceneWeatherAreaReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, string> weather_value_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->weather_value_map_size());
  {
    ::google::protobuf::scoped_ptr<SetSceneWeatherAreaReq_WeatherValueMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
        it = this->weather_value_map().begin();
        it != this->weather_value_map().end(); ++it) {
      entry.reset(weather_value_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 weather_gadget_id = 1;
  if (this->weather_gadget_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weather_gadget_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSceneWeatherAreaReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetSceneWeatherAreaReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSceneWeatherAreaReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSceneWeatherAreaReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetSceneWeatherAreaReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetSceneWeatherAreaReq)
    MergeFrom(*source);
  }
}

void SetSceneWeatherAreaReq::MergeFrom(const SetSceneWeatherAreaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetSceneWeatherAreaReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  weather_value_map_.MergeFrom(from.weather_value_map_);
  if (from.weather_gadget_id() != 0) {
    set_weather_gadget_id(from.weather_gadget_id());
  }
}

void SetSceneWeatherAreaReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetSceneWeatherAreaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSceneWeatherAreaReq::CopyFrom(const SetSceneWeatherAreaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetSceneWeatherAreaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSceneWeatherAreaReq::IsInitialized() const {
  return true;
}

void SetSceneWeatherAreaReq::Swap(SetSceneWeatherAreaReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSceneWeatherAreaReq::InternalSwap(SetSceneWeatherAreaReq* other) {
  using std::swap;
  weather_value_map_.Swap(&other->weather_value_map_);
  swap(weather_gadget_id_, other->weather_gadget_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSceneWeatherAreaReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSceneWeatherAreaReq

// uint32 weather_gadget_id = 1;
void SetSceneWeatherAreaReq::clear_weather_gadget_id() {
  weather_gadget_id_ = 0u;
}
::google::protobuf::uint32 SetSceneWeatherAreaReq::weather_gadget_id() const {
  // @@protoc_insertion_point(field_get:proto.SetSceneWeatherAreaReq.weather_gadget_id)
  return weather_gadget_id_;
}
void SetSceneWeatherAreaReq::set_weather_gadget_id(::google::protobuf::uint32 value) {
  
  weather_gadget_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetSceneWeatherAreaReq.weather_gadget_id)
}

// map<uint32, string> weather_value_map = 2;
int SetSceneWeatherAreaReq::weather_value_map_size() const {
  return weather_value_map_.size();
}
void SetSceneWeatherAreaReq::clear_weather_value_map() {
  weather_value_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
SetSceneWeatherAreaReq::weather_value_map() const {
  // @@protoc_insertion_point(field_map:proto.SetSceneWeatherAreaReq.weather_value_map)
  return weather_value_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
SetSceneWeatherAreaReq::mutable_weather_value_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SetSceneWeatherAreaReq.weather_value_map)
  return weather_value_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSceneWeatherAreaRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSceneWeatherAreaRsp::SetSceneWeatherAreaRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetSceneWeatherAreaRsp)
}
SetSceneWeatherAreaRsp::SetSceneWeatherAreaRsp(const SetSceneWeatherAreaRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SetSceneWeatherAreaRsp)
}

void SetSceneWeatherAreaRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SetSceneWeatherAreaRsp::~SetSceneWeatherAreaRsp() {
  // @@protoc_insertion_point(destructor:proto.SetSceneWeatherAreaRsp)
  SharedDtor();
}

void SetSceneWeatherAreaRsp::SharedDtor() {
}

void SetSceneWeatherAreaRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSceneWeatherAreaRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetSceneWeatherAreaRsp& SetSceneWeatherAreaRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetSceneWeatherAreaRsp* SetSceneWeatherAreaRsp::New(::google::protobuf::Arena* arena) const {
  SetSceneWeatherAreaRsp* n = new SetSceneWeatherAreaRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSceneWeatherAreaRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetSceneWeatherAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SetSceneWeatherAreaRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetSceneWeatherAreaRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetSceneWeatherAreaRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetSceneWeatherAreaRsp)
  return false;
#undef DO_
}

void SetSceneWeatherAreaRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetSceneWeatherAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetSceneWeatherAreaRsp)
}

::google::protobuf::uint8* SetSceneWeatherAreaRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetSceneWeatherAreaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetSceneWeatherAreaRsp)
  return target;
}

size_t SetSceneWeatherAreaRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetSceneWeatherAreaRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSceneWeatherAreaRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetSceneWeatherAreaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSceneWeatherAreaRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSceneWeatherAreaRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetSceneWeatherAreaRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetSceneWeatherAreaRsp)
    MergeFrom(*source);
  }
}

void SetSceneWeatherAreaRsp::MergeFrom(const SetSceneWeatherAreaRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetSceneWeatherAreaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SetSceneWeatherAreaRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetSceneWeatherAreaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSceneWeatherAreaRsp::CopyFrom(const SetSceneWeatherAreaRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetSceneWeatherAreaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSceneWeatherAreaRsp::IsInitialized() const {
  return true;
}

void SetSceneWeatherAreaRsp::Swap(SetSceneWeatherAreaRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSceneWeatherAreaRsp::InternalSwap(SetSceneWeatherAreaRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSceneWeatherAreaRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSceneWeatherAreaRsp

// int32 retcode = 1;
void SetSceneWeatherAreaRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SetSceneWeatherAreaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetSceneWeatherAreaRsp.retcode)
  return retcode_;
}
void SetSceneWeatherAreaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetSceneWeatherAreaRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteGadgetLuaReq::kSourceEntityIdFieldNumber;
const int ExecuteGadgetLuaReq::kParam1FieldNumber;
const int ExecuteGadgetLuaReq::kParam2FieldNumber;
const int ExecuteGadgetLuaReq::kParam3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteGadgetLuaReq::ExecuteGadgetLuaReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExecuteGadgetLuaReq)
}
ExecuteGadgetLuaReq::ExecuteGadgetLuaReq(const ExecuteGadgetLuaReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&source_entity_id_, &from.source_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&param3_) -
    reinterpret_cast<char*>(&source_entity_id_)) + sizeof(param3_));
  // @@protoc_insertion_point(copy_constructor:proto.ExecuteGadgetLuaReq)
}

void ExecuteGadgetLuaReq::SharedCtor() {
  ::memset(&source_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param3_) -
      reinterpret_cast<char*>(&source_entity_id_)) + sizeof(param3_));
  _cached_size_ = 0;
}

ExecuteGadgetLuaReq::~ExecuteGadgetLuaReq() {
  // @@protoc_insertion_point(destructor:proto.ExecuteGadgetLuaReq)
  SharedDtor();
}

void ExecuteGadgetLuaReq::SharedDtor() {
}

void ExecuteGadgetLuaReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteGadgetLuaReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteGadgetLuaReq& ExecuteGadgetLuaReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExecuteGadgetLuaReq* ExecuteGadgetLuaReq::New(::google::protobuf::Arena* arena) const {
  ExecuteGadgetLuaReq* n = new ExecuteGadgetLuaReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteGadgetLuaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExecuteGadgetLuaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&source_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param3_) -
      reinterpret_cast<char*>(&source_entity_id_)) + sizeof(param3_));
  _internal_metadata_.Clear();
}

bool ExecuteGadgetLuaReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExecuteGadgetLuaReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 source_entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 param1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 param2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 param3 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &param3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExecuteGadgetLuaReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExecuteGadgetLuaReq)
  return false;
#undef DO_
}

void ExecuteGadgetLuaReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExecuteGadgetLuaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 source_entity_id = 1;
  if (this->source_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source_entity_id(), output);
  }

  // int32 param1 = 2;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->param1(), output);
  }

  // int32 param2 = 3;
  if (this->param2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->param2(), output);
  }

  // int32 param3 = 4;
  if (this->param3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->param3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExecuteGadgetLuaReq)
}

::google::protobuf::uint8* ExecuteGadgetLuaReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExecuteGadgetLuaReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 source_entity_id = 1;
  if (this->source_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source_entity_id(), target);
  }

  // int32 param1 = 2;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->param1(), target);
  }

  // int32 param2 = 3;
  if (this->param2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->param2(), target);
  }

  // int32 param3 = 4;
  if (this->param3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->param3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExecuteGadgetLuaReq)
  return target;
}

size_t ExecuteGadgetLuaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExecuteGadgetLuaReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 source_entity_id = 1;
  if (this->source_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_entity_id());
  }

  // int32 param1 = 2;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param1());
  }

  // int32 param2 = 3;
  if (this->param2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param2());
  }

  // int32 param3 = 4;
  if (this->param3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->param3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteGadgetLuaReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExecuteGadgetLuaReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteGadgetLuaReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteGadgetLuaReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExecuteGadgetLuaReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExecuteGadgetLuaReq)
    MergeFrom(*source);
  }
}

void ExecuteGadgetLuaReq::MergeFrom(const ExecuteGadgetLuaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExecuteGadgetLuaReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source_entity_id() != 0) {
    set_source_entity_id(from.source_entity_id());
  }
  if (from.param1() != 0) {
    set_param1(from.param1());
  }
  if (from.param2() != 0) {
    set_param2(from.param2());
  }
  if (from.param3() != 0) {
    set_param3(from.param3());
  }
}

void ExecuteGadgetLuaReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExecuteGadgetLuaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteGadgetLuaReq::CopyFrom(const ExecuteGadgetLuaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExecuteGadgetLuaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteGadgetLuaReq::IsInitialized() const {
  return true;
}

void ExecuteGadgetLuaReq::Swap(ExecuteGadgetLuaReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteGadgetLuaReq::InternalSwap(ExecuteGadgetLuaReq* other) {
  using std::swap;
  swap(source_entity_id_, other->source_entity_id_);
  swap(param1_, other->param1_);
  swap(param2_, other->param2_);
  swap(param3_, other->param3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteGadgetLuaReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteGadgetLuaReq

// uint32 source_entity_id = 1;
void ExecuteGadgetLuaReq::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
::google::protobuf::uint32 ExecuteGadgetLuaReq::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.source_entity_id)
  return source_entity_id_;
}
void ExecuteGadgetLuaReq::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.source_entity_id)
}

// int32 param1 = 2;
void ExecuteGadgetLuaReq::clear_param1() {
  param1_ = 0;
}
::google::protobuf::int32 ExecuteGadgetLuaReq::param1() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param1)
  return param1_;
}
void ExecuteGadgetLuaReq::set_param1(::google::protobuf::int32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param1)
}

// int32 param2 = 3;
void ExecuteGadgetLuaReq::clear_param2() {
  param2_ = 0;
}
::google::protobuf::int32 ExecuteGadgetLuaReq::param2() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param2)
  return param2_;
}
void ExecuteGadgetLuaReq::set_param2(::google::protobuf::int32 value) {
  
  param2_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param2)
}

// int32 param3 = 4;
void ExecuteGadgetLuaReq::clear_param3() {
  param3_ = 0;
}
::google::protobuf::int32 ExecuteGadgetLuaReq::param3() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaReq.param3)
  return param3_;
}
void ExecuteGadgetLuaReq::set_param3(::google::protobuf::int32 value) {
  
  param3_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaReq.param3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecuteGadgetLuaRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecuteGadgetLuaRsp::ExecuteGadgetLuaRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ExecuteGadgetLuaRsp)
}
ExecuteGadgetLuaRsp::ExecuteGadgetLuaRsp(const ExecuteGadgetLuaRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ExecuteGadgetLuaRsp)
}

void ExecuteGadgetLuaRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ExecuteGadgetLuaRsp::~ExecuteGadgetLuaRsp() {
  // @@protoc_insertion_point(destructor:proto.ExecuteGadgetLuaRsp)
  SharedDtor();
}

void ExecuteGadgetLuaRsp::SharedDtor() {
}

void ExecuteGadgetLuaRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecuteGadgetLuaRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExecuteGadgetLuaRsp& ExecuteGadgetLuaRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExecuteGadgetLuaRsp* ExecuteGadgetLuaRsp::New(::google::protobuf::Arena* arena) const {
  ExecuteGadgetLuaRsp* n = new ExecuteGadgetLuaRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExecuteGadgetLuaRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ExecuteGadgetLuaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ExecuteGadgetLuaRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ExecuteGadgetLuaRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ExecuteGadgetLuaRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ExecuteGadgetLuaRsp)
  return false;
#undef DO_
}

void ExecuteGadgetLuaRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ExecuteGadgetLuaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ExecuteGadgetLuaRsp)
}

::google::protobuf::uint8* ExecuteGadgetLuaRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ExecuteGadgetLuaRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ExecuteGadgetLuaRsp)
  return target;
}

size_t ExecuteGadgetLuaRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ExecuteGadgetLuaRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecuteGadgetLuaRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ExecuteGadgetLuaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecuteGadgetLuaRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExecuteGadgetLuaRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ExecuteGadgetLuaRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ExecuteGadgetLuaRsp)
    MergeFrom(*source);
  }
}

void ExecuteGadgetLuaRsp::MergeFrom(const ExecuteGadgetLuaRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ExecuteGadgetLuaRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ExecuteGadgetLuaRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ExecuteGadgetLuaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecuteGadgetLuaRsp::CopyFrom(const ExecuteGadgetLuaRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ExecuteGadgetLuaRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteGadgetLuaRsp::IsInitialized() const {
  return true;
}

void ExecuteGadgetLuaRsp::Swap(ExecuteGadgetLuaRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecuteGadgetLuaRsp::InternalSwap(ExecuteGadgetLuaRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExecuteGadgetLuaRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExecuteGadgetLuaRsp

// int32 retcode = 1;
void ExecuteGadgetLuaRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ExecuteGadgetLuaRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ExecuteGadgetLuaRsp.retcode)
  return retcode_;
}
void ExecuteGadgetLuaRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ExecuteGadgetLuaRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CutSceneBeginNotify::kCutsceneIdFieldNumber;
const int CutSceneBeginNotify::kIsWaitOthersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CutSceneBeginNotify::CutSceneBeginNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CutSceneBeginNotify)
}
CutSceneBeginNotify::CutSceneBeginNotify(const CutSceneBeginNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cutscene_id_, &from.cutscene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_wait_others_) -
    reinterpret_cast<char*>(&cutscene_id_)) + sizeof(is_wait_others_));
  // @@protoc_insertion_point(copy_constructor:proto.CutSceneBeginNotify)
}

void CutSceneBeginNotify::SharedCtor() {
  ::memset(&cutscene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_wait_others_) -
      reinterpret_cast<char*>(&cutscene_id_)) + sizeof(is_wait_others_));
  _cached_size_ = 0;
}

CutSceneBeginNotify::~CutSceneBeginNotify() {
  // @@protoc_insertion_point(destructor:proto.CutSceneBeginNotify)
  SharedDtor();
}

void CutSceneBeginNotify::SharedDtor() {
}

void CutSceneBeginNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CutSceneBeginNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CutSceneBeginNotify& CutSceneBeginNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

CutSceneBeginNotify* CutSceneBeginNotify::New(::google::protobuf::Arena* arena) const {
  CutSceneBeginNotify* n = new CutSceneBeginNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CutSceneBeginNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CutSceneBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cutscene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_wait_others_) -
      reinterpret_cast<char*>(&cutscene_id_)) + sizeof(is_wait_others_));
  _internal_metadata_.Clear();
}

bool CutSceneBeginNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CutSceneBeginNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cutscene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cutscene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_wait_others = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_wait_others_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CutSceneBeginNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CutSceneBeginNotify)
  return false;
#undef DO_
}

void CutSceneBeginNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CutSceneBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cutscene_id = 1;
  if (this->cutscene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cutscene_id(), output);
  }

  // bool is_wait_others = 2;
  if (this->is_wait_others() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_wait_others(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CutSceneBeginNotify)
}

::google::protobuf::uint8* CutSceneBeginNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CutSceneBeginNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cutscene_id = 1;
  if (this->cutscene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cutscene_id(), target);
  }

  // bool is_wait_others = 2;
  if (this->is_wait_others() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_wait_others(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CutSceneBeginNotify)
  return target;
}

size_t CutSceneBeginNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CutSceneBeginNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cutscene_id = 1;
  if (this->cutscene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cutscene_id());
  }

  // bool is_wait_others = 2;
  if (this->is_wait_others() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CutSceneBeginNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CutSceneBeginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CutSceneBeginNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CutSceneBeginNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CutSceneBeginNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CutSceneBeginNotify)
    MergeFrom(*source);
  }
}

void CutSceneBeginNotify::MergeFrom(const CutSceneBeginNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CutSceneBeginNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cutscene_id() != 0) {
    set_cutscene_id(from.cutscene_id());
  }
  if (from.is_wait_others() != 0) {
    set_is_wait_others(from.is_wait_others());
  }
}

void CutSceneBeginNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CutSceneBeginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CutSceneBeginNotify::CopyFrom(const CutSceneBeginNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CutSceneBeginNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CutSceneBeginNotify::IsInitialized() const {
  return true;
}

void CutSceneBeginNotify::Swap(CutSceneBeginNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CutSceneBeginNotify::InternalSwap(CutSceneBeginNotify* other) {
  using std::swap;
  swap(cutscene_id_, other->cutscene_id_);
  swap(is_wait_others_, other->is_wait_others_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CutSceneBeginNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CutSceneBeginNotify

// uint32 cutscene_id = 1;
void CutSceneBeginNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
::google::protobuf::uint32 CutSceneBeginNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneBeginNotify.cutscene_id)
  return cutscene_id_;
}
void CutSceneBeginNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneBeginNotify.cutscene_id)
}

// bool is_wait_others = 2;
void CutSceneBeginNotify::clear_is_wait_others() {
  is_wait_others_ = false;
}
bool CutSceneBeginNotify::is_wait_others() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneBeginNotify.is_wait_others)
  return is_wait_others_;
}
void CutSceneBeginNotify::set_is_wait_others(bool value) {
  
  is_wait_others_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneBeginNotify.is_wait_others)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CutSceneFinishNotify::kCutsceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CutSceneFinishNotify::CutSceneFinishNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CutSceneFinishNotify)
}
CutSceneFinishNotify::CutSceneFinishNotify(const CutSceneFinishNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cutscene_id_ = from.cutscene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.CutSceneFinishNotify)
}

void CutSceneFinishNotify::SharedCtor() {
  cutscene_id_ = 0u;
  _cached_size_ = 0;
}

CutSceneFinishNotify::~CutSceneFinishNotify() {
  // @@protoc_insertion_point(destructor:proto.CutSceneFinishNotify)
  SharedDtor();
}

void CutSceneFinishNotify::SharedDtor() {
}

void CutSceneFinishNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CutSceneFinishNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CutSceneFinishNotify& CutSceneFinishNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

CutSceneFinishNotify* CutSceneFinishNotify::New(::google::protobuf::Arena* arena) const {
  CutSceneFinishNotify* n = new CutSceneFinishNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CutSceneFinishNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CutSceneFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cutscene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool CutSceneFinishNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CutSceneFinishNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cutscene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cutscene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CutSceneFinishNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CutSceneFinishNotify)
  return false;
#undef DO_
}

void CutSceneFinishNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CutSceneFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cutscene_id = 1;
  if (this->cutscene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cutscene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CutSceneFinishNotify)
}

::google::protobuf::uint8* CutSceneFinishNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CutSceneFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cutscene_id = 1;
  if (this->cutscene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cutscene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CutSceneFinishNotify)
  return target;
}

size_t CutSceneFinishNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CutSceneFinishNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cutscene_id = 1;
  if (this->cutscene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cutscene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CutSceneFinishNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CutSceneFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CutSceneFinishNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CutSceneFinishNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CutSceneFinishNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CutSceneFinishNotify)
    MergeFrom(*source);
  }
}

void CutSceneFinishNotify::MergeFrom(const CutSceneFinishNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CutSceneFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cutscene_id() != 0) {
    set_cutscene_id(from.cutscene_id());
  }
}

void CutSceneFinishNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CutSceneFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CutSceneFinishNotify::CopyFrom(const CutSceneFinishNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CutSceneFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CutSceneFinishNotify::IsInitialized() const {
  return true;
}

void CutSceneFinishNotify::Swap(CutSceneFinishNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CutSceneFinishNotify::InternalSwap(CutSceneFinishNotify* other) {
  using std::swap;
  swap(cutscene_id_, other->cutscene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CutSceneFinishNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CutSceneFinishNotify

// uint32 cutscene_id = 1;
void CutSceneFinishNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
::google::protobuf::uint32 CutSceneFinishNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneFinishNotify.cutscene_id)
  return cutscene_id_;
}
void CutSceneFinishNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneFinishNotify.cutscene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CutSceneEndNotify::kRetcodeFieldNumber;
const int CutSceneEndNotify::kCutsceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CutSceneEndNotify::CutSceneEndNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CutSceneEndNotify)
}
CutSceneEndNotify::CutSceneEndNotify(const CutSceneEndNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&cutscene_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(cutscene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.CutSceneEndNotify)
}

void CutSceneEndNotify::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cutscene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cutscene_id_));
  _cached_size_ = 0;
}

CutSceneEndNotify::~CutSceneEndNotify() {
  // @@protoc_insertion_point(destructor:proto.CutSceneEndNotify)
  SharedDtor();
}

void CutSceneEndNotify::SharedDtor() {
}

void CutSceneEndNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CutSceneEndNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CutSceneEndNotify& CutSceneEndNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

CutSceneEndNotify* CutSceneEndNotify::New(::google::protobuf::Arena* arena) const {
  CutSceneEndNotify* n = new CutSceneEndNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CutSceneEndNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CutSceneEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cutscene_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(cutscene_id_));
  _internal_metadata_.Clear();
}

bool CutSceneEndNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CutSceneEndNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 cutscene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cutscene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CutSceneEndNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CutSceneEndNotify)
  return false;
#undef DO_
}

void CutSceneEndNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CutSceneEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 cutscene_id = 2;
  if (this->cutscene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cutscene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CutSceneEndNotify)
}

::google::protobuf::uint8* CutSceneEndNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CutSceneEndNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 cutscene_id = 2;
  if (this->cutscene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cutscene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CutSceneEndNotify)
  return target;
}

size_t CutSceneEndNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CutSceneEndNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 cutscene_id = 2;
  if (this->cutscene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cutscene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CutSceneEndNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CutSceneEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CutSceneEndNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CutSceneEndNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CutSceneEndNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CutSceneEndNotify)
    MergeFrom(*source);
  }
}

void CutSceneEndNotify::MergeFrom(const CutSceneEndNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CutSceneEndNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.cutscene_id() != 0) {
    set_cutscene_id(from.cutscene_id());
  }
}

void CutSceneEndNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CutSceneEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CutSceneEndNotify::CopyFrom(const CutSceneEndNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CutSceneEndNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CutSceneEndNotify::IsInitialized() const {
  return true;
}

void CutSceneEndNotify::Swap(CutSceneEndNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CutSceneEndNotify::InternalSwap(CutSceneEndNotify* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(cutscene_id_, other->cutscene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CutSceneEndNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CutSceneEndNotify

// int32 retcode = 1;
void CutSceneEndNotify::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 CutSceneEndNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneEndNotify.retcode)
  return retcode_;
}
void CutSceneEndNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneEndNotify.retcode)
}

// uint32 cutscene_id = 2;
void CutSceneEndNotify::clear_cutscene_id() {
  cutscene_id_ = 0u;
}
::google::protobuf::uint32 CutSceneEndNotify::cutscene_id() const {
  // @@protoc_insertion_point(field_get:proto.CutSceneEndNotify.cutscene_id)
  return cutscene_id_;
}
void CutSceneEndNotify::set_cutscene_id(::google::protobuf::uint32 value) {
  
  cutscene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CutSceneEndNotify.cutscene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientScriptEventNotify::kEventTypeFieldNumber;
const int ClientScriptEventNotify::kSourceEntityIdFieldNumber;
const int ClientScriptEventNotify::kTargetEntityIdFieldNumber;
const int ClientScriptEventNotify::kParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientScriptEventNotify::ClientScriptEventNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientScriptEventNotify)
}
ClientScriptEventNotify::ClientScriptEventNotify(const ClientScriptEventNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      param_list_(from.param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&event_type_, &from.event_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_entity_id_) -
    reinterpret_cast<char*>(&event_type_)) + sizeof(target_entity_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ClientScriptEventNotify)
}

void ClientScriptEventNotify::SharedCtor() {
  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_entity_id_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(target_entity_id_));
  _cached_size_ = 0;
}

ClientScriptEventNotify::~ClientScriptEventNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientScriptEventNotify)
  SharedDtor();
}

void ClientScriptEventNotify::SharedDtor() {
}

void ClientScriptEventNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientScriptEventNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientScriptEventNotify& ClientScriptEventNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientScriptEventNotify* ClientScriptEventNotify::New(::google::protobuf::Arena* arena) const {
  ClientScriptEventNotify* n = new ClientScriptEventNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientScriptEventNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientScriptEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_list_.Clear();
  ::memset(&event_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_entity_id_) -
      reinterpret_cast<char*>(&event_type_)) + sizeof(target_entity_id_));
  _internal_metadata_.Clear();
}

bool ClientScriptEventNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientScriptEventNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 source_entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_entity_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 param_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 34u, input, this->mutable_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientScriptEventNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientScriptEventNotify)
  return false;
#undef DO_
}

void ClientScriptEventNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientScriptEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 event_type = 1;
  if (this->event_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_type(), output);
  }

  // uint32 source_entity_id = 2;
  if (this->source_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source_entity_id(), output);
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_entity_id(), output);
  }

  // repeated int32 param_list = 4;
  if (this->param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->param_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientScriptEventNotify)
}

::google::protobuf::uint8* ClientScriptEventNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientScriptEventNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 event_type = 1;
  if (this->event_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_type(), target);
  }

  // uint32 source_entity_id = 2;
  if (this->source_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source_entity_id(), target);
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_entity_id(), target);
  }

  // repeated int32 param_list = 4;
  if (this->param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->param_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientScriptEventNotify)
  return target;
}

size_t ClientScriptEventNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientScriptEventNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 param_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 event_type = 1;
  if (this->event_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->event_type());
  }

  // uint32 source_entity_id = 2;
  if (this->source_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_entity_id());
  }

  // uint32 target_entity_id = 3;
  if (this->target_entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientScriptEventNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientScriptEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientScriptEventNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientScriptEventNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientScriptEventNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientScriptEventNotify)
    MergeFrom(*source);
  }
}

void ClientScriptEventNotify::MergeFrom(const ClientScriptEventNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientScriptEventNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_list_.MergeFrom(from.param_list_);
  if (from.event_type() != 0) {
    set_event_type(from.event_type());
  }
  if (from.source_entity_id() != 0) {
    set_source_entity_id(from.source_entity_id());
  }
  if (from.target_entity_id() != 0) {
    set_target_entity_id(from.target_entity_id());
  }
}

void ClientScriptEventNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientScriptEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientScriptEventNotify::CopyFrom(const ClientScriptEventNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientScriptEventNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientScriptEventNotify::IsInitialized() const {
  return true;
}

void ClientScriptEventNotify::Swap(ClientScriptEventNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientScriptEventNotify::InternalSwap(ClientScriptEventNotify* other) {
  using std::swap;
  param_list_.InternalSwap(&other->param_list_);
  swap(event_type_, other->event_type_);
  swap(source_entity_id_, other->source_entity_id_);
  swap(target_entity_id_, other->target_entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientScriptEventNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientScriptEventNotify

// uint32 event_type = 1;
void ClientScriptEventNotify::clear_event_type() {
  event_type_ = 0u;
}
::google::protobuf::uint32 ClientScriptEventNotify::event_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.event_type)
  return event_type_;
}
void ClientScriptEventNotify::set_event_type(::google::protobuf::uint32 value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.event_type)
}

// uint32 source_entity_id = 2;
void ClientScriptEventNotify::clear_source_entity_id() {
  source_entity_id_ = 0u;
}
::google::protobuf::uint32 ClientScriptEventNotify::source_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.source_entity_id)
  return source_entity_id_;
}
void ClientScriptEventNotify::set_source_entity_id(::google::protobuf::uint32 value) {
  
  source_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.source_entity_id)
}

// uint32 target_entity_id = 3;
void ClientScriptEventNotify::clear_target_entity_id() {
  target_entity_id_ = 0u;
}
::google::protobuf::uint32 ClientScriptEventNotify::target_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.target_entity_id)
  return target_entity_id_;
}
void ClientScriptEventNotify::set_target_entity_id(::google::protobuf::uint32 value) {
  
  target_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.target_entity_id)
}

// repeated int32 param_list = 4;
int ClientScriptEventNotify::param_list_size() const {
  return param_list_.size();
}
void ClientScriptEventNotify::clear_param_list() {
  param_list_.Clear();
}
::google::protobuf::int32 ClientScriptEventNotify::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ClientScriptEventNotify.param_list)
  return param_list_.Get(index);
}
void ClientScriptEventNotify::set_param_list(int index, ::google::protobuf::int32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ClientScriptEventNotify.param_list)
}
void ClientScriptEventNotify::add_param_list(::google::protobuf::int32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ClientScriptEventNotify.param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ClientScriptEventNotify::param_list() const {
  // @@protoc_insertion_point(field_list:proto.ClientScriptEventNotify.param_list)
  return param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ClientScriptEventNotify::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ClientScriptEventNotify.param_list)
  return &param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityMoveInfo::kEntityIdFieldNumber;
const int EntityMoveInfo::kMotionInfoFieldNumber;
const int EntityMoveInfo::kSceneTimeFieldNumber;
const int EntityMoveInfo::kReliableSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityMoveInfo::EntityMoveInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityMoveInfo)
}
EntityMoveInfo::EntityMoveInfo(const EntityMoveInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_motion_info()) {
    motion_info_ = new ::proto::MotionInfo(*from.motion_info_);
  } else {
    motion_info_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reliable_seq_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(reliable_seq_));
  // @@protoc_insertion_point(copy_constructor:proto.EntityMoveInfo)
}

void EntityMoveInfo::SharedCtor() {
  ::memset(&motion_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&motion_info_)) + sizeof(reliable_seq_));
  _cached_size_ = 0;
}

EntityMoveInfo::~EntityMoveInfo() {
  // @@protoc_insertion_point(destructor:proto.EntityMoveInfo)
  SharedDtor();
}

void EntityMoveInfo::SharedDtor() {
  if (this != internal_default_instance()) delete motion_info_;
}

void EntityMoveInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityMoveInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityMoveInfo& EntityMoveInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityMoveInfo* EntityMoveInfo::New(::google::protobuf::Arena* arena) const {
  EntityMoveInfo* n = new EntityMoveInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityMoveInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityMoveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) {
    delete motion_info_;
  }
  motion_info_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(reliable_seq_));
  _internal_metadata_.Clear();
}

bool EntityMoveInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityMoveInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionInfo motion_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_motion_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reliable_seq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reliable_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityMoveInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityMoveInfo)
  return false;
#undef DO_
}

void EntityMoveInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityMoveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->motion_info_, output);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_time(), output);
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->reliable_seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityMoveInfo)
}

::google::protobuf::uint8* EntityMoveInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityMoveInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->motion_info_, deterministic, target);
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_time(), target);
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->reliable_seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityMoveInfo)
  return target;
}

size_t EntityMoveInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityMoveInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MotionInfo motion_info = 2;
  if (this->has_motion_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->motion_info_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 3;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  // uint32 reliable_seq = 4;
  if (this->reliable_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reliable_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityMoveInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityMoveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityMoveInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityMoveInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityMoveInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityMoveInfo)
    MergeFrom(*source);
  }
}

void EntityMoveInfo::MergeFrom(const EntityMoveInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityMoveInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_motion_info()) {
    mutable_motion_info()->::proto::MotionInfo::MergeFrom(from.motion_info());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
  if (from.reliable_seq() != 0) {
    set_reliable_seq(from.reliable_seq());
  }
}

void EntityMoveInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityMoveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityMoveInfo::CopyFrom(const EntityMoveInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityMoveInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityMoveInfo::IsInitialized() const {
  return true;
}

void EntityMoveInfo::Swap(EntityMoveInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityMoveInfo::InternalSwap(EntityMoveInfo* other) {
  using std::swap;
  swap(motion_info_, other->motion_info_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  swap(reliable_seq_, other->reliable_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityMoveInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityMoveInfo

// uint32 entity_id = 1;
void EntityMoveInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EntityMoveInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.entity_id)
  return entity_id_;
}
void EntityMoveInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.entity_id)
}

// .proto.MotionInfo motion_info = 2;
bool EntityMoveInfo::has_motion_info() const {
  return this != internal_default_instance() && motion_info_ != NULL;
}
void EntityMoveInfo::clear_motion_info() {
  if (GetArenaNoVirtual() == NULL && motion_info_ != NULL) delete motion_info_;
  motion_info_ = NULL;
}
const ::proto::MotionInfo& EntityMoveInfo::motion_info() const {
  const ::proto::MotionInfo* p = motion_info_;
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.motion_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
::proto::MotionInfo* EntityMoveInfo::mutable_motion_info() {
  
  if (motion_info_ == NULL) {
    motion_info_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityMoveInfo.motion_info)
  return motion_info_;
}
::proto::MotionInfo* EntityMoveInfo::release_motion_info() {
  // @@protoc_insertion_point(field_release:proto.EntityMoveInfo.motion_info)
  
  ::proto::MotionInfo* temp = motion_info_;
  motion_info_ = NULL;
  return temp;
}
void EntityMoveInfo::set_allocated_motion_info(::proto::MotionInfo* motion_info) {
  delete motion_info_;
  motion_info_ = motion_info;
  if (motion_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityMoveInfo.motion_info)
}

// uint32 scene_time = 3;
void EntityMoveInfo::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 EntityMoveInfo::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.scene_time)
  return scene_time_;
}
void EntityMoveInfo::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.scene_time)
}

// uint32 reliable_seq = 4;
void EntityMoveInfo::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
::google::protobuf::uint32 EntityMoveInfo::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveInfo.reliable_seq)
  return reliable_seq_;
}
void EntityMoveInfo::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveInfo.reliable_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntitiesMovesReq::kEntityMoveInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntitiesMovesReq::SceneEntitiesMovesReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntitiesMovesReq)
}
SceneEntitiesMovesReq::SceneEntitiesMovesReq(const SceneEntitiesMovesReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_move_info_list_(from.entity_move_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntitiesMovesReq)
}

void SceneEntitiesMovesReq::SharedCtor() {
  _cached_size_ = 0;
}

SceneEntitiesMovesReq::~SceneEntitiesMovesReq() {
  // @@protoc_insertion_point(destructor:proto.SceneEntitiesMovesReq)
  SharedDtor();
}

void SceneEntitiesMovesReq::SharedDtor() {
}

void SceneEntitiesMovesReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntitiesMovesReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntitiesMovesReq& SceneEntitiesMovesReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntitiesMovesReq* SceneEntitiesMovesReq::New(::google::protobuf::Arena* arena) const {
  SceneEntitiesMovesReq* n = new SceneEntitiesMovesReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntitiesMovesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntitiesMovesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_move_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool SceneEntitiesMovesReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntitiesMovesReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entity_move_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntitiesMovesReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntitiesMovesReq)
  return false;
#undef DO_
}

void SceneEntitiesMovesReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntitiesMovesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_move_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity_move_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntitiesMovesReq)
}

::google::protobuf::uint8* SceneEntitiesMovesReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntitiesMovesReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_move_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entity_move_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntitiesMovesReq)
  return target;
}

size_t SceneEntitiesMovesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntitiesMovesReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entity_move_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity_move_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntitiesMovesReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntitiesMovesReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntitiesMovesReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntitiesMovesReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntitiesMovesReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntitiesMovesReq)
    MergeFrom(*source);
  }
}

void SceneEntitiesMovesReq::MergeFrom(const SceneEntitiesMovesReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntitiesMovesReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_move_info_list_.MergeFrom(from.entity_move_info_list_);
}

void SceneEntitiesMovesReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntitiesMovesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntitiesMovesReq::CopyFrom(const SceneEntitiesMovesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntitiesMovesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntitiesMovesReq::IsInitialized() const {
  return true;
}

void SceneEntitiesMovesReq::Swap(SceneEntitiesMovesReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntitiesMovesReq::InternalSwap(SceneEntitiesMovesReq* other) {
  using std::swap;
  entity_move_info_list_.InternalSwap(&other->entity_move_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntitiesMovesReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntitiesMovesReq

// repeated .proto.EntityMoveInfo entity_move_info_list = 1;
int SceneEntitiesMovesReq::entity_move_info_list_size() const {
  return entity_move_info_list_.size();
}
void SceneEntitiesMovesReq::clear_entity_move_info_list() {
  entity_move_info_list_.Clear();
}
const ::proto::EntityMoveInfo& SceneEntitiesMovesReq::entity_move_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Get(index);
}
::proto::EntityMoveInfo* SceneEntitiesMovesReq::mutable_entity_move_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Mutable(index);
}
::proto::EntityMoveInfo* SceneEntitiesMovesReq::add_entity_move_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
SceneEntitiesMovesReq::mutable_entity_move_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return &entity_move_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
SceneEntitiesMovesReq::entity_move_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMovesReq.entity_move_info_list)
  return entity_move_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityMoveFailInfo::kRetcodeFieldNumber;
const int EntityMoveFailInfo::kEntityIdFieldNumber;
const int EntityMoveFailInfo::kFailMotionFieldNumber;
const int EntityMoveFailInfo::kSceneTimeFieldNumber;
const int EntityMoveFailInfo::kReliableSeqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityMoveFailInfo::EntityMoveFailInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityMoveFailInfo)
}
EntityMoveFailInfo::EntityMoveFailInfo(const EntityMoveFailInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_fail_motion()) {
    fail_motion_ = new ::proto::MotionInfo(*from.fail_motion_);
  } else {
    fail_motion_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&reliable_seq_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(reliable_seq_));
  // @@protoc_insertion_point(copy_constructor:proto.EntityMoveFailInfo)
}

void EntityMoveFailInfo::SharedCtor() {
  ::memset(&fail_motion_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&fail_motion_)) + sizeof(reliable_seq_));
  _cached_size_ = 0;
}

EntityMoveFailInfo::~EntityMoveFailInfo() {
  // @@protoc_insertion_point(destructor:proto.EntityMoveFailInfo)
  SharedDtor();
}

void EntityMoveFailInfo::SharedDtor() {
  if (this != internal_default_instance()) delete fail_motion_;
}

void EntityMoveFailInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityMoveFailInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityMoveFailInfo& EntityMoveFailInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityMoveFailInfo* EntityMoveFailInfo::New(::google::protobuf::Arena* arena) const {
  EntityMoveFailInfo* n = new EntityMoveFailInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityMoveFailInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityMoveFailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) {
    delete fail_motion_;
  }
  fail_motion_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reliable_seq_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reliable_seq_));
  _internal_metadata_.Clear();
}

bool EntityMoveFailInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityMoveFailInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MotionInfo fail_motion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fail_motion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reliable_seq = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reliable_seq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityMoveFailInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityMoveFailInfo)
  return false;
#undef DO_
}

void EntityMoveFailInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityMoveFailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->fail_motion_, output);
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scene_time(), output);
  }

  // uint32 reliable_seq = 5;
  if (this->reliable_seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->reliable_seq(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityMoveFailInfo)
}

::google::protobuf::uint8* EntityMoveFailInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityMoveFailInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->fail_motion_, deterministic, target);
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scene_time(), target);
  }

  // uint32 reliable_seq = 5;
  if (this->reliable_seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->reliable_seq(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityMoveFailInfo)
  return target;
}

size_t EntityMoveFailInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityMoveFailInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MotionInfo fail_motion = 3;
  if (this->has_fail_motion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->fail_motion_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 4;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  // uint32 reliable_seq = 5;
  if (this->reliable_seq() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reliable_seq());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityMoveFailInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityMoveFailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityMoveFailInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityMoveFailInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityMoveFailInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityMoveFailInfo)
    MergeFrom(*source);
  }
}

void EntityMoveFailInfo::MergeFrom(const EntityMoveFailInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityMoveFailInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fail_motion()) {
    mutable_fail_motion()->::proto::MotionInfo::MergeFrom(from.fail_motion());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
  if (from.reliable_seq() != 0) {
    set_reliable_seq(from.reliable_seq());
  }
}

void EntityMoveFailInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityMoveFailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityMoveFailInfo::CopyFrom(const EntityMoveFailInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityMoveFailInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityMoveFailInfo::IsInitialized() const {
  return true;
}

void EntityMoveFailInfo::Swap(EntityMoveFailInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityMoveFailInfo::InternalSwap(EntityMoveFailInfo* other) {
  using std::swap;
  swap(fail_motion_, other->fail_motion_);
  swap(retcode_, other->retcode_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  swap(reliable_seq_, other->reliable_seq_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityMoveFailInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityMoveFailInfo

// int32 retcode = 1;
void EntityMoveFailInfo::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 EntityMoveFailInfo::retcode() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.retcode)
  return retcode_;
}
void EntityMoveFailInfo::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.retcode)
}

// uint32 entity_id = 2;
void EntityMoveFailInfo::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EntityMoveFailInfo::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.entity_id)
  return entity_id_;
}
void EntityMoveFailInfo::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.entity_id)
}

// .proto.MotionInfo fail_motion = 3;
bool EntityMoveFailInfo::has_fail_motion() const {
  return this != internal_default_instance() && fail_motion_ != NULL;
}
void EntityMoveFailInfo::clear_fail_motion() {
  if (GetArenaNoVirtual() == NULL && fail_motion_ != NULL) delete fail_motion_;
  fail_motion_ = NULL;
}
const ::proto::MotionInfo& EntityMoveFailInfo::fail_motion() const {
  const ::proto::MotionInfo* p = fail_motion_;
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.fail_motion)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MotionInfo*>(
      &::proto::_MotionInfo_default_instance_);
}
::proto::MotionInfo* EntityMoveFailInfo::mutable_fail_motion() {
  
  if (fail_motion_ == NULL) {
    fail_motion_ = new ::proto::MotionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.EntityMoveFailInfo.fail_motion)
  return fail_motion_;
}
::proto::MotionInfo* EntityMoveFailInfo::release_fail_motion() {
  // @@protoc_insertion_point(field_release:proto.EntityMoveFailInfo.fail_motion)
  
  ::proto::MotionInfo* temp = fail_motion_;
  fail_motion_ = NULL;
  return temp;
}
void EntityMoveFailInfo::set_allocated_fail_motion(::proto::MotionInfo* fail_motion) {
  delete fail_motion_;
  fail_motion_ = fail_motion;
  if (fail_motion) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.EntityMoveFailInfo.fail_motion)
}

// uint32 scene_time = 4;
void EntityMoveFailInfo::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 EntityMoveFailInfo::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.scene_time)
  return scene_time_;
}
void EntityMoveFailInfo::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.scene_time)
}

// uint32 reliable_seq = 5;
void EntityMoveFailInfo::clear_reliable_seq() {
  reliable_seq_ = 0u;
}
::google::protobuf::uint32 EntityMoveFailInfo::reliable_seq() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveFailInfo.reliable_seq)
  return reliable_seq_;
}
void EntityMoveFailInfo::set_reliable_seq(::google::protobuf::uint32 value) {
  
  reliable_seq_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveFailInfo.reliable_seq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntitiesMovesRsp::kEntityMoveFailInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntitiesMovesRsp::SceneEntitiesMovesRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntitiesMovesRsp)
}
SceneEntitiesMovesRsp::SceneEntitiesMovesRsp(const SceneEntitiesMovesRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_move_fail_info_list_(from.entity_move_fail_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntitiesMovesRsp)
}

void SceneEntitiesMovesRsp::SharedCtor() {
  _cached_size_ = 0;
}

SceneEntitiesMovesRsp::~SceneEntitiesMovesRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneEntitiesMovesRsp)
  SharedDtor();
}

void SceneEntitiesMovesRsp::SharedDtor() {
}

void SceneEntitiesMovesRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntitiesMovesRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntitiesMovesRsp& SceneEntitiesMovesRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntitiesMovesRsp* SceneEntitiesMovesRsp::New(::google::protobuf::Arena* arena) const {
  SceneEntitiesMovesRsp* n = new SceneEntitiesMovesRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntitiesMovesRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntitiesMovesRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_move_fail_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool SceneEntitiesMovesRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntitiesMovesRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entity_move_fail_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntitiesMovesRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntitiesMovesRsp)
  return false;
#undef DO_
}

void SceneEntitiesMovesRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntitiesMovesRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_move_fail_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity_move_fail_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntitiesMovesRsp)
}

::google::protobuf::uint8* SceneEntitiesMovesRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntitiesMovesRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_move_fail_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entity_move_fail_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntitiesMovesRsp)
  return target;
}

size_t SceneEntitiesMovesRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntitiesMovesRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entity_move_fail_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity_move_fail_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntitiesMovesRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntitiesMovesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntitiesMovesRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntitiesMovesRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntitiesMovesRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntitiesMovesRsp)
    MergeFrom(*source);
  }
}

void SceneEntitiesMovesRsp::MergeFrom(const SceneEntitiesMovesRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntitiesMovesRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_move_fail_info_list_.MergeFrom(from.entity_move_fail_info_list_);
}

void SceneEntitiesMovesRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntitiesMovesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntitiesMovesRsp::CopyFrom(const SceneEntitiesMovesRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntitiesMovesRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntitiesMovesRsp::IsInitialized() const {
  return true;
}

void SceneEntitiesMovesRsp::Swap(SceneEntitiesMovesRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntitiesMovesRsp::InternalSwap(SceneEntitiesMovesRsp* other) {
  using std::swap;
  entity_move_fail_info_list_.InternalSwap(&other->entity_move_fail_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntitiesMovesRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntitiesMovesRsp

// repeated .proto.EntityMoveFailInfo entity_move_fail_info_list = 1;
int SceneEntitiesMovesRsp::entity_move_fail_info_list_size() const {
  return entity_move_fail_info_list_.size();
}
void SceneEntitiesMovesRsp::clear_entity_move_fail_info_list() {
  entity_move_fail_info_list_.Clear();
}
const ::proto::EntityMoveFailInfo& SceneEntitiesMovesRsp::entity_move_fail_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Get(index);
}
::proto::EntityMoveFailInfo* SceneEntitiesMovesRsp::mutable_entity_move_fail_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Mutable(index);
}
::proto::EntityMoveFailInfo* SceneEntitiesMovesRsp::add_entity_move_fail_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >*
SceneEntitiesMovesRsp::mutable_entity_move_fail_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return &entity_move_fail_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveFailInfo >&
SceneEntitiesMovesRsp::entity_move_fail_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMovesRsp.entity_move_fail_info_list)
  return entity_move_fail_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntitiesMoveCombineNotify::kEntityMoveInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntitiesMoveCombineNotify::SceneEntitiesMoveCombineNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneEntitiesMoveCombineNotify)
}
SceneEntitiesMoveCombineNotify::SceneEntitiesMoveCombineNotify(const SceneEntitiesMoveCombineNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_move_info_list_(from.entity_move_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneEntitiesMoveCombineNotify)
}

void SceneEntitiesMoveCombineNotify::SharedCtor() {
  _cached_size_ = 0;
}

SceneEntitiesMoveCombineNotify::~SceneEntitiesMoveCombineNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneEntitiesMoveCombineNotify)
  SharedDtor();
}

void SceneEntitiesMoveCombineNotify::SharedDtor() {
}

void SceneEntitiesMoveCombineNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneEntitiesMoveCombineNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntitiesMoveCombineNotify& SceneEntitiesMoveCombineNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneEntitiesMoveCombineNotify* SceneEntitiesMoveCombineNotify::New(::google::protobuf::Arena* arena) const {
  SceneEntitiesMoveCombineNotify* n = new SceneEntitiesMoveCombineNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneEntitiesMoveCombineNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneEntitiesMoveCombineNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_move_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool SceneEntitiesMoveCombineNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneEntitiesMoveCombineNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_entity_move_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneEntitiesMoveCombineNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneEntitiesMoveCombineNotify)
  return false;
#undef DO_
}

void SceneEntitiesMoveCombineNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneEntitiesMoveCombineNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_move_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity_move_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneEntitiesMoveCombineNotify)
}

::google::protobuf::uint8* SceneEntitiesMoveCombineNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneEntitiesMoveCombineNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_move_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->entity_move_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneEntitiesMoveCombineNotify)
  return target;
}

size_t SceneEntitiesMoveCombineNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneEntitiesMoveCombineNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.EntityMoveInfo entity_move_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entity_move_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entity_move_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneEntitiesMoveCombineNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneEntitiesMoveCombineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntitiesMoveCombineNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntitiesMoveCombineNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneEntitiesMoveCombineNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneEntitiesMoveCombineNotify)
    MergeFrom(*source);
  }
}

void SceneEntitiesMoveCombineNotify::MergeFrom(const SceneEntitiesMoveCombineNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneEntitiesMoveCombineNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_move_info_list_.MergeFrom(from.entity_move_info_list_);
}

void SceneEntitiesMoveCombineNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneEntitiesMoveCombineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntitiesMoveCombineNotify::CopyFrom(const SceneEntitiesMoveCombineNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneEntitiesMoveCombineNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntitiesMoveCombineNotify::IsInitialized() const {
  return true;
}

void SceneEntitiesMoveCombineNotify::Swap(SceneEntitiesMoveCombineNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntitiesMoveCombineNotify::InternalSwap(SceneEntitiesMoveCombineNotify* other) {
  using std::swap;
  entity_move_info_list_.InternalSwap(&other->entity_move_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneEntitiesMoveCombineNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneEntitiesMoveCombineNotify

// repeated .proto.EntityMoveInfo entity_move_info_list = 1;
int SceneEntitiesMoveCombineNotify::entity_move_info_list_size() const {
  return entity_move_info_list_.size();
}
void SceneEntitiesMoveCombineNotify::clear_entity_move_info_list() {
  entity_move_info_list_.Clear();
}
const ::proto::EntityMoveInfo& SceneEntitiesMoveCombineNotify::entity_move_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Get(index);
}
::proto::EntityMoveInfo* SceneEntitiesMoveCombineNotify::mutable_entity_move_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Mutable(index);
}
::proto::EntityMoveInfo* SceneEntitiesMoveCombineNotify::add_entity_move_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >*
SceneEntitiesMoveCombineNotify::mutable_entity_move_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return &entity_move_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::EntityMoveInfo >&
SceneEntitiesMoveCombineNotify::entity_move_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEntitiesMoveCombineNotify.entity_move_info_list)
  return entity_move_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockTransPointReq::kSceneIdFieldNumber;
const int UnlockTransPointReq::kPointIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockTransPointReq::UnlockTransPointReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnlockTransPointReq)
}
UnlockTransPointReq::UnlockTransPointReq(const UnlockTransPointReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&point_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  // @@protoc_insertion_point(copy_constructor:proto.UnlockTransPointReq)
}

void UnlockTransPointReq::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  _cached_size_ = 0;
}

UnlockTransPointReq::~UnlockTransPointReq() {
  // @@protoc_insertion_point(destructor:proto.UnlockTransPointReq)
  SharedDtor();
}

void UnlockTransPointReq::SharedDtor() {
}

void UnlockTransPointReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockTransPointReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockTransPointReq& UnlockTransPointReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockTransPointReq* UnlockTransPointReq::New(::google::protobuf::Arena* arena) const {
  UnlockTransPointReq* n = new UnlockTransPointReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockTransPointReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnlockTransPointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&point_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(point_id_));
  _internal_metadata_.Clear();
}

bool UnlockTransPointReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnlockTransPointReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnlockTransPointReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnlockTransPointReq)
  return false;
#undef DO_
}

void UnlockTransPointReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnlockTransPointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->point_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnlockTransPointReq)
}

::google::protobuf::uint8* UnlockTransPointReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnlockTransPointReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->point_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnlockTransPointReq)
  return target;
}

size_t UnlockTransPointReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnlockTransPointReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 point_id = 2;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockTransPointReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnlockTransPointReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockTransPointReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockTransPointReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnlockTransPointReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnlockTransPointReq)
    MergeFrom(*source);
  }
}

void UnlockTransPointReq::MergeFrom(const UnlockTransPointReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnlockTransPointReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
}

void UnlockTransPointReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnlockTransPointReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockTransPointReq::CopyFrom(const UnlockTransPointReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnlockTransPointReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockTransPointReq::IsInitialized() const {
  return true;
}

void UnlockTransPointReq::Swap(UnlockTransPointReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockTransPointReq::InternalSwap(UnlockTransPointReq* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(point_id_, other->point_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockTransPointReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockTransPointReq

// uint32 scene_id = 1;
void UnlockTransPointReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 UnlockTransPointReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointReq.scene_id)
  return scene_id_;
}
void UnlockTransPointReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointReq.scene_id)
}

// uint32 point_id = 2;
void UnlockTransPointReq::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 UnlockTransPointReq::point_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointReq.point_id)
  return point_id_;
}
void UnlockTransPointReq::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointReq.point_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockTransPointRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockTransPointRsp::UnlockTransPointRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnlockTransPointRsp)
}
UnlockTransPointRsp::UnlockTransPointRsp(const UnlockTransPointRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.UnlockTransPointRsp)
}

void UnlockTransPointRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

UnlockTransPointRsp::~UnlockTransPointRsp() {
  // @@protoc_insertion_point(destructor:proto.UnlockTransPointRsp)
  SharedDtor();
}

void UnlockTransPointRsp::SharedDtor() {
}

void UnlockTransPointRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockTransPointRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockTransPointRsp& UnlockTransPointRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockTransPointRsp* UnlockTransPointRsp::New(::google::protobuf::Arena* arena) const {
  UnlockTransPointRsp* n = new UnlockTransPointRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockTransPointRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnlockTransPointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool UnlockTransPointRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnlockTransPointRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnlockTransPointRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnlockTransPointRsp)
  return false;
#undef DO_
}

void UnlockTransPointRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnlockTransPointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnlockTransPointRsp)
}

::google::protobuf::uint8* UnlockTransPointRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnlockTransPointRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnlockTransPointRsp)
  return target;
}

size_t UnlockTransPointRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnlockTransPointRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockTransPointRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnlockTransPointRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockTransPointRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockTransPointRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnlockTransPointRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnlockTransPointRsp)
    MergeFrom(*source);
  }
}

void UnlockTransPointRsp::MergeFrom(const UnlockTransPointRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnlockTransPointRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void UnlockTransPointRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnlockTransPointRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockTransPointRsp::CopyFrom(const UnlockTransPointRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnlockTransPointRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockTransPointRsp::IsInitialized() const {
  return true;
}

void UnlockTransPointRsp::Swap(UnlockTransPointRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockTransPointRsp::InternalSwap(UnlockTransPointRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockTransPointRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockTransPointRsp

// int32 retcode = 1;
void UnlockTransPointRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UnlockTransPointRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTransPointRsp.retcode)
  return retcode_;
}
void UnlockTransPointRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTransPointRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformRouteStateNotify::kEntityIdFieldNumber;
const int PlatformRouteStateNotify::kSceneTimeFieldNumber;
const int PlatformRouteStateNotify::kPosFieldNumber;
const int PlatformRouteStateNotify::kRotFieldNumber;
const int PlatformRouteStateNotify::kRouteIdFieldNumber;
const int PlatformRouteStateNotify::kIsStartedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformRouteStateNotify::PlatformRouteStateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlatformRouteStateNotify)
}
PlatformRouteStateNotify::PlatformRouteStateNotify(const PlatformRouteStateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::proto::Vector(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rot()) {
    rot_ = new ::proto::Vector(*from.rot_);
  } else {
    rot_ = NULL;
  }
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_started_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(is_started_));
  // @@protoc_insertion_point(copy_constructor:proto.PlatformRouteStateNotify)
}

void PlatformRouteStateNotify::SharedCtor() {
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_started_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(is_started_));
  _cached_size_ = 0;
}

PlatformRouteStateNotify::~PlatformRouteStateNotify() {
  // @@protoc_insertion_point(destructor:proto.PlatformRouteStateNotify)
  SharedDtor();
}

void PlatformRouteStateNotify::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
  if (this != internal_default_instance()) delete rot_;
}

void PlatformRouteStateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformRouteStateNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformRouteStateNotify& PlatformRouteStateNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlatformRouteStateNotify* PlatformRouteStateNotify::New(::google::protobuf::Arena* arena) const {
  PlatformRouteStateNotify* n = new PlatformRouteStateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformRouteStateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlatformRouteStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pos_ != NULL) {
    delete pos_;
  }
  pos_ = NULL;
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) {
    delete rot_;
  }
  rot_ = NULL;
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_started_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(is_started_));
  _internal_metadata_.Clear();
}

bool PlatformRouteStateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlatformRouteStateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector pos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Vector rot = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 route_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &route_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_started = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlatformRouteStateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlatformRouteStateNotify)
  return false;
#undef DO_
}

void PlatformRouteStateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlatformRouteStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 scene_time = 2;
  if (this->scene_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_time(), output);
  }

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  // .proto.Vector rot = 4;
  if (this->has_rot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->rot_, output);
  }

  // uint32 route_id = 5;
  if (this->route_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->route_id(), output);
  }

  // bool is_started = 6;
  if (this->is_started() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_started(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlatformRouteStateNotify)
}

::google::protobuf::uint8* PlatformRouteStateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlatformRouteStateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 scene_time = 2;
  if (this->scene_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_time(), target);
  }

  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, deterministic, target);
  }

  // .proto.Vector rot = 4;
  if (this->has_rot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->rot_, deterministic, target);
  }

  // uint32 route_id = 5;
  if (this->route_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->route_id(), target);
  }

  // bool is_started = 6;
  if (this->is_started() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_started(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlatformRouteStateNotify)
  return target;
}

size_t PlatformRouteStateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlatformRouteStateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Vector pos = 3;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  // .proto.Vector rot = 4;
  if (this->has_rot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rot_);
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 scene_time = 2;
  if (this->scene_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_time());
  }

  // uint32 route_id = 5;
  if (this->route_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->route_id());
  }

  // bool is_started = 6;
  if (this->is_started() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformRouteStateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlatformRouteStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformRouteStateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformRouteStateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlatformRouteStateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlatformRouteStateNotify)
    MergeFrom(*source);
  }
}

void PlatformRouteStateNotify::MergeFrom(const PlatformRouteStateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlatformRouteStateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::proto::Vector::MergeFrom(from.pos());
  }
  if (from.has_rot()) {
    mutable_rot()->::proto::Vector::MergeFrom(from.rot());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.scene_time() != 0) {
    set_scene_time(from.scene_time());
  }
  if (from.route_id() != 0) {
    set_route_id(from.route_id());
  }
  if (from.is_started() != 0) {
    set_is_started(from.is_started());
  }
}

void PlatformRouteStateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlatformRouteStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformRouteStateNotify::CopyFrom(const PlatformRouteStateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlatformRouteStateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformRouteStateNotify::IsInitialized() const {
  return true;
}

void PlatformRouteStateNotify::Swap(PlatformRouteStateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformRouteStateNotify::InternalSwap(PlatformRouteStateNotify* other) {
  using std::swap;
  swap(pos_, other->pos_);
  swap(rot_, other->rot_);
  swap(entity_id_, other->entity_id_);
  swap(scene_time_, other->scene_time_);
  swap(route_id_, other->route_id_);
  swap(is_started_, other->is_started_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformRouteStateNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlatformRouteStateNotify

// uint32 entity_id = 1;
void PlatformRouteStateNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 PlatformRouteStateNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.entity_id)
  return entity_id_;
}
void PlatformRouteStateNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformRouteStateNotify.entity_id)
}

// uint32 scene_time = 2;
void PlatformRouteStateNotify::clear_scene_time() {
  scene_time_ = 0u;
}
::google::protobuf::uint32 PlatformRouteStateNotify::scene_time() const {
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.scene_time)
  return scene_time_;
}
void PlatformRouteStateNotify::set_scene_time(::google::protobuf::uint32 value) {
  
  scene_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformRouteStateNotify.scene_time)
}

// .proto.Vector pos = 3;
bool PlatformRouteStateNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
void PlatformRouteStateNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
const ::proto::Vector& PlatformRouteStateNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlatformRouteStateNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformRouteStateNotify.pos)
  return pos_;
}
::proto::Vector* PlatformRouteStateNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlatformRouteStateNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PlatformRouteStateNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformRouteStateNotify.pos)
}

// .proto.Vector rot = 4;
bool PlatformRouteStateNotify::has_rot() const {
  return this != internal_default_instance() && rot_ != NULL;
}
void PlatformRouteStateNotify::clear_rot() {
  if (GetArenaNoVirtual() == NULL && rot_ != NULL) delete rot_;
  rot_ = NULL;
}
const ::proto::Vector& PlatformRouteStateNotify::rot() const {
  const ::proto::Vector* p = rot_;
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
::proto::Vector* PlatformRouteStateNotify::mutable_rot() {
  
  if (rot_ == NULL) {
    rot_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlatformRouteStateNotify.rot)
  return rot_;
}
::proto::Vector* PlatformRouteStateNotify::release_rot() {
  // @@protoc_insertion_point(field_release:proto.PlatformRouteStateNotify.rot)
  
  ::proto::Vector* temp = rot_;
  rot_ = NULL;
  return temp;
}
void PlatformRouteStateNotify::set_allocated_rot(::proto::Vector* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformRouteStateNotify.rot)
}

// uint32 route_id = 5;
void PlatformRouteStateNotify::clear_route_id() {
  route_id_ = 0u;
}
::google::protobuf::uint32 PlatformRouteStateNotify::route_id() const {
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.route_id)
  return route_id_;
}
void PlatformRouteStateNotify::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformRouteStateNotify.route_id)
}

// bool is_started = 6;
void PlatformRouteStateNotify::clear_is_started() {
  is_started_ = false;
}
bool PlatformRouteStateNotify::is_started() const {
  // @@protoc_insertion_point(field_get:proto.PlatformRouteStateNotify.is_started)
  return is_started_;
}
void PlatformRouteStateNotify::set_is_started(bool value) {
  
  is_started_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformRouteStateNotify.is_started)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneWeatherForcastReq::kWeatherAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneWeatherForcastReq::SceneWeatherForcastReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneWeatherForcastReq)
}
SceneWeatherForcastReq::SceneWeatherForcastReq(const SceneWeatherForcastReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weather_area_id_ = from.weather_area_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SceneWeatherForcastReq)
}

void SceneWeatherForcastReq::SharedCtor() {
  weather_area_id_ = 0u;
  _cached_size_ = 0;
}

SceneWeatherForcastReq::~SceneWeatherForcastReq() {
  // @@protoc_insertion_point(destructor:proto.SceneWeatherForcastReq)
  SharedDtor();
}

void SceneWeatherForcastReq::SharedDtor() {
}

void SceneWeatherForcastReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneWeatherForcastReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneWeatherForcastReq& SceneWeatherForcastReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneWeatherForcastReq* SceneWeatherForcastReq::New(::google::protobuf::Arena* arena) const {
  SceneWeatherForcastReq* n = new SceneWeatherForcastReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneWeatherForcastReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneWeatherForcastReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weather_area_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneWeatherForcastReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneWeatherForcastReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 weather_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weather_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneWeatherForcastReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneWeatherForcastReq)
  return false;
#undef DO_
}

void SceneWeatherForcastReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneWeatherForcastReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_area_id = 1;
  if (this->weather_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->weather_area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneWeatherForcastReq)
}

::google::protobuf::uint8* SceneWeatherForcastReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneWeatherForcastReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 weather_area_id = 1;
  if (this->weather_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->weather_area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneWeatherForcastReq)
  return target;
}

size_t SceneWeatherForcastReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneWeatherForcastReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 weather_area_id = 1;
  if (this->weather_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->weather_area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneWeatherForcastReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneWeatherForcastReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneWeatherForcastReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneWeatherForcastReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneWeatherForcastReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneWeatherForcastReq)
    MergeFrom(*source);
  }
}

void SceneWeatherForcastReq::MergeFrom(const SceneWeatherForcastReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneWeatherForcastReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weather_area_id() != 0) {
    set_weather_area_id(from.weather_area_id());
  }
}

void SceneWeatherForcastReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneWeatherForcastReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneWeatherForcastReq::CopyFrom(const SceneWeatherForcastReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneWeatherForcastReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneWeatherForcastReq::IsInitialized() const {
  return true;
}

void SceneWeatherForcastReq::Swap(SceneWeatherForcastReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneWeatherForcastReq::InternalSwap(SceneWeatherForcastReq* other) {
  using std::swap;
  swap(weather_area_id_, other->weather_area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneWeatherForcastReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneWeatherForcastReq

// uint32 weather_area_id = 1;
void SceneWeatherForcastReq::clear_weather_area_id() {
  weather_area_id_ = 0u;
}
::google::protobuf::uint32 SceneWeatherForcastReq::weather_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastReq.weather_area_id)
  return weather_area_id_;
}
void SceneWeatherForcastReq::set_weather_area_id(::google::protobuf::uint32 value) {
  
  weather_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastReq.weather_area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneWeatherForcastRsp::kRetcodeFieldNumber;
const int SceneWeatherForcastRsp::kNextClimateTimeFieldNumber;
const int SceneWeatherForcastRsp::kForcastClimateListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneWeatherForcastRsp::SceneWeatherForcastRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneWeatherForcastRsp)
}
SceneWeatherForcastRsp::SceneWeatherForcastRsp(const SceneWeatherForcastRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      forcast_climate_list_(from.forcast_climate_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&next_climate_time_, &from.next_climate_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&next_climate_time_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.SceneWeatherForcastRsp)
}

void SceneWeatherForcastRsp::SharedCtor() {
  ::memset(&next_climate_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&next_climate_time_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

SceneWeatherForcastRsp::~SceneWeatherForcastRsp() {
  // @@protoc_insertion_point(destructor:proto.SceneWeatherForcastRsp)
  SharedDtor();
}

void SceneWeatherForcastRsp::SharedDtor() {
}

void SceneWeatherForcastRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneWeatherForcastRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneWeatherForcastRsp& SceneWeatherForcastRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneWeatherForcastRsp* SceneWeatherForcastRsp::New(::google::protobuf::Arena* arena) const {
  SceneWeatherForcastRsp* n = new SceneWeatherForcastRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneWeatherForcastRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneWeatherForcastRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  forcast_climate_list_.Clear();
  ::memset(&next_climate_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&next_climate_time_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool SceneWeatherForcastRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneWeatherForcastRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 next_climate_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &next_climate_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 forcast_climate_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_forcast_climate_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_forcast_climate_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneWeatherForcastRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneWeatherForcastRsp)
  return false;
#undef DO_
}

void SceneWeatherForcastRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneWeatherForcastRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint64 next_climate_time = 2;
  if (this->next_climate_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->next_climate_time(), output);
  }

  // repeated uint32 forcast_climate_list = 3;
  if (this->forcast_climate_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _forcast_climate_list_cached_byte_size_));
  }
  for (int i = 0, n = this->forcast_climate_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->forcast_climate_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneWeatherForcastRsp)
}

::google::protobuf::uint8* SceneWeatherForcastRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneWeatherForcastRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint64 next_climate_time = 2;
  if (this->next_climate_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->next_climate_time(), target);
  }

  // repeated uint32 forcast_climate_list = 3;
  if (this->forcast_climate_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _forcast_climate_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->forcast_climate_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneWeatherForcastRsp)
  return target;
}

size_t SceneWeatherForcastRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneWeatherForcastRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 forcast_climate_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->forcast_climate_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _forcast_climate_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 next_climate_time = 2;
  if (this->next_climate_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->next_climate_time());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneWeatherForcastRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneWeatherForcastRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneWeatherForcastRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneWeatherForcastRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneWeatherForcastRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneWeatherForcastRsp)
    MergeFrom(*source);
  }
}

void SceneWeatherForcastRsp::MergeFrom(const SceneWeatherForcastRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneWeatherForcastRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  forcast_climate_list_.MergeFrom(from.forcast_climate_list_);
  if (from.next_climate_time() != 0) {
    set_next_climate_time(from.next_climate_time());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SceneWeatherForcastRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneWeatherForcastRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneWeatherForcastRsp::CopyFrom(const SceneWeatherForcastRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneWeatherForcastRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneWeatherForcastRsp::IsInitialized() const {
  return true;
}

void SceneWeatherForcastRsp::Swap(SceneWeatherForcastRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneWeatherForcastRsp::InternalSwap(SceneWeatherForcastRsp* other) {
  using std::swap;
  forcast_climate_list_.InternalSwap(&other->forcast_climate_list_);
  swap(next_climate_time_, other->next_climate_time_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneWeatherForcastRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneWeatherForcastRsp

// int32 retcode = 1;
void SceneWeatherForcastRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SceneWeatherForcastRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.retcode)
  return retcode_;
}
void SceneWeatherForcastRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.retcode)
}

// uint64 next_climate_time = 2;
void SceneWeatherForcastRsp::clear_next_climate_time() {
  next_climate_time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SceneWeatherForcastRsp::next_climate_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.next_climate_time)
  return next_climate_time_;
}
void SceneWeatherForcastRsp::set_next_climate_time(::google::protobuf::uint64 value) {
  
  next_climate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.next_climate_time)
}

// repeated uint32 forcast_climate_list = 3;
int SceneWeatherForcastRsp::forcast_climate_list_size() const {
  return forcast_climate_list_.size();
}
void SceneWeatherForcastRsp::clear_forcast_climate_list() {
  forcast_climate_list_.Clear();
}
::google::protobuf::uint32 SceneWeatherForcastRsp::forcast_climate_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return forcast_climate_list_.Get(index);
}
void SceneWeatherForcastRsp::set_forcast_climate_list(int index, ::google::protobuf::uint32 value) {
  forcast_climate_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneWeatherForcastRsp.forcast_climate_list)
}
void SceneWeatherForcastRsp::add_forcast_climate_list(::google::protobuf::uint32 value) {
  forcast_climate_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneWeatherForcastRsp.forcast_climate_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneWeatherForcastRsp::forcast_climate_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return forcast_climate_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneWeatherForcastRsp::mutable_forcast_climate_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneWeatherForcastRsp.forcast_climate_list)
  return &forcast_climate_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarkMapReq::kOpFieldNumber;
const int MarkMapReq::kOldFieldNumber;
const int MarkMapReq::kMarkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarkMapReq::MarkMapReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MarkMapReq)
}
MarkMapReq::MarkMapReq(const MarkMapReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_old()) {
    old_ = new ::proto::MapMarkPoint(*from.old_);
  } else {
    old_ = NULL;
  }
  if (from.has_mark()) {
    mark_ = new ::proto::MapMarkPoint(*from.mark_);
  } else {
    mark_ = NULL;
  }
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:proto.MarkMapReq)
}

void MarkMapReq::SharedCtor() {
  ::memset(&old_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_) -
      reinterpret_cast<char*>(&old_)) + sizeof(op_));
  _cached_size_ = 0;
}

MarkMapReq::~MarkMapReq() {
  // @@protoc_insertion_point(destructor:proto.MarkMapReq)
  SharedDtor();
}

void MarkMapReq::SharedDtor() {
  if (this != internal_default_instance()) delete old_;
  if (this != internal_default_instance()) delete mark_;
}

void MarkMapReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarkMapReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarkMapReq& MarkMapReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarkMapReq* MarkMapReq::New(::google::protobuf::Arena* arena) const {
  MarkMapReq* n = new MarkMapReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarkMapReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MarkMapReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && old_ != NULL) {
    delete old_;
  }
  old_ = NULL;
  if (GetArenaNoVirtual() == NULL && mark_ != NULL) {
    delete mark_;
  }
  mark_ = NULL;
  op_ = 0;
  _internal_metadata_.Clear();
}

bool MarkMapReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MarkMapReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MarkMapReq.Operation op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::proto::MarkMapReq_Operation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MapMarkPoint old = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_old()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MapMarkPoint mark = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mark()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MarkMapReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MarkMapReq)
  return false;
#undef DO_
}

void MarkMapReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MarkMapReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MarkMapReq.Operation op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op(), output);
  }

  // .proto.MapMarkPoint old = 2;
  if (this->has_old()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->old_, output);
  }

  // .proto.MapMarkPoint mark = 3;
  if (this->has_mark()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mark_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MarkMapReq)
}

::google::protobuf::uint8* MarkMapReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MarkMapReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MarkMapReq.Operation op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op(), target);
  }

  // .proto.MapMarkPoint old = 2;
  if (this->has_old()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->old_, deterministic, target);
  }

  // .proto.MapMarkPoint mark = 3;
  if (this->has_mark()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->mark_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MarkMapReq)
  return target;
}

size_t MarkMapReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MarkMapReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MapMarkPoint old = 2;
  if (this->has_old()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->old_);
  }

  // .proto.MapMarkPoint mark = 3;
  if (this->has_mark()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mark_);
  }

  // .proto.MarkMapReq.Operation op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarkMapReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MarkMapReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkMapReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarkMapReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MarkMapReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MarkMapReq)
    MergeFrom(*source);
  }
}

void MarkMapReq::MergeFrom(const MarkMapReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MarkMapReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_old()) {
    mutable_old()->::proto::MapMarkPoint::MergeFrom(from.old());
  }
  if (from.has_mark()) {
    mutable_mark()->::proto::MapMarkPoint::MergeFrom(from.mark());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void MarkMapReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MarkMapReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkMapReq::CopyFrom(const MarkMapReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MarkMapReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkMapReq::IsInitialized() const {
  return true;
}

void MarkMapReq::Swap(MarkMapReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarkMapReq::InternalSwap(MarkMapReq* other) {
  using std::swap;
  swap(old_, other->old_);
  swap(mark_, other->mark_);
  swap(op_, other->op_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarkMapReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarkMapReq

// .proto.MarkMapReq.Operation op = 1;
void MarkMapReq::clear_op() {
  op_ = 0;
}
::proto::MarkMapReq_Operation MarkMapReq::op() const {
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.op)
  return static_cast< ::proto::MarkMapReq_Operation >(op_);
}
void MarkMapReq::set_op(::proto::MarkMapReq_Operation value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkMapReq.op)
}

// .proto.MapMarkPoint old = 2;
bool MarkMapReq::has_old() const {
  return this != internal_default_instance() && old_ != NULL;
}
void MarkMapReq::clear_old() {
  if (GetArenaNoVirtual() == NULL && old_ != NULL) delete old_;
  old_ = NULL;
}
const ::proto::MapMarkPoint& MarkMapReq::old() const {
  const ::proto::MapMarkPoint* p = old_;
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.old)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MapMarkPoint*>(
      &::proto::_MapMarkPoint_default_instance_);
}
::proto::MapMarkPoint* MarkMapReq::mutable_old() {
  
  if (old_ == NULL) {
    old_ = new ::proto::MapMarkPoint;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkMapReq.old)
  return old_;
}
::proto::MapMarkPoint* MarkMapReq::release_old() {
  // @@protoc_insertion_point(field_release:proto.MarkMapReq.old)
  
  ::proto::MapMarkPoint* temp = old_;
  old_ = NULL;
  return temp;
}
void MarkMapReq::set_allocated_old(::proto::MapMarkPoint* old) {
  delete old_;
  old_ = old;
  if (old) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkMapReq.old)
}

// .proto.MapMarkPoint mark = 3;
bool MarkMapReq::has_mark() const {
  return this != internal_default_instance() && mark_ != NULL;
}
void MarkMapReq::clear_mark() {
  if (GetArenaNoVirtual() == NULL && mark_ != NULL) delete mark_;
  mark_ = NULL;
}
const ::proto::MapMarkPoint& MarkMapReq::mark() const {
  const ::proto::MapMarkPoint* p = mark_;
  // @@protoc_insertion_point(field_get:proto.MarkMapReq.mark)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MapMarkPoint*>(
      &::proto::_MapMarkPoint_default_instance_);
}
::proto::MapMarkPoint* MarkMapReq::mutable_mark() {
  
  if (mark_ == NULL) {
    mark_ = new ::proto::MapMarkPoint;
  }
  // @@protoc_insertion_point(field_mutable:proto.MarkMapReq.mark)
  return mark_;
}
::proto::MapMarkPoint* MarkMapReq::release_mark() {
  // @@protoc_insertion_point(field_release:proto.MarkMapReq.mark)
  
  ::proto::MapMarkPoint* temp = mark_;
  mark_ = NULL;
  return temp;
}
void MarkMapReq::set_allocated_mark(::proto::MapMarkPoint* mark) {
  delete mark_;
  mark_ = mark;
  if (mark) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MarkMapReq.mark)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarkMapRsp::kRetcodeFieldNumber;
const int MarkMapRsp::kMarkListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarkMapRsp::MarkMapRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MarkMapRsp)
}
MarkMapRsp::MarkMapRsp(const MarkMapRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mark_list_(from.mark_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.MarkMapRsp)
}

void MarkMapRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

MarkMapRsp::~MarkMapRsp() {
  // @@protoc_insertion_point(destructor:proto.MarkMapRsp)
  SharedDtor();
}

void MarkMapRsp::SharedDtor() {
}

void MarkMapRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarkMapRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarkMapRsp& MarkMapRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarkMapRsp* MarkMapRsp::New(::google::protobuf::Arena* arena) const {
  MarkMapRsp* n = new MarkMapRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarkMapRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MarkMapRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mark_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool MarkMapRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MarkMapRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.MapMarkPoint mark_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mark_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MarkMapRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MarkMapRsp)
  return false;
#undef DO_
}

void MarkMapRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MarkMapRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.MapMarkPoint mark_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mark_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mark_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MarkMapRsp)
}

::google::protobuf::uint8* MarkMapRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MarkMapRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.MapMarkPoint mark_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mark_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->mark_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MarkMapRsp)
  return target;
}

size_t MarkMapRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MarkMapRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MapMarkPoint mark_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mark_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mark_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarkMapRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MarkMapRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkMapRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarkMapRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MarkMapRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MarkMapRsp)
    MergeFrom(*source);
  }
}

void MarkMapRsp::MergeFrom(const MarkMapRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MarkMapRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mark_list_.MergeFrom(from.mark_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void MarkMapRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MarkMapRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkMapRsp::CopyFrom(const MarkMapRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MarkMapRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkMapRsp::IsInitialized() const {
  return true;
}

void MarkMapRsp::Swap(MarkMapRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarkMapRsp::InternalSwap(MarkMapRsp* other) {
  using std::swap;
  mark_list_.InternalSwap(&other->mark_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarkMapRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarkMapRsp

// int32 retcode = 1;
void MarkMapRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MarkMapRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MarkMapRsp.retcode)
  return retcode_;
}
void MarkMapRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkMapRsp.retcode)
}

// repeated .proto.MapMarkPoint mark_list = 2;
int MarkMapRsp::mark_list_size() const {
  return mark_list_.size();
}
void MarkMapRsp::clear_mark_list() {
  mark_list_.Clear();
}
const ::proto::MapMarkPoint& MarkMapRsp::mark_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MarkMapRsp.mark_list)
  return mark_list_.Get(index);
}
::proto::MapMarkPoint* MarkMapRsp::mutable_mark_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MarkMapRsp.mark_list)
  return mark_list_.Mutable(index);
}
::proto::MapMarkPoint* MarkMapRsp::add_mark_list() {
  // @@protoc_insertion_point(field_add:proto.MarkMapRsp.mark_list)
  return mark_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
MarkMapRsp::mutable_mark_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MarkMapRsp.mark_list)
  return &mark_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
MarkMapRsp::mark_list() const {
  // @@protoc_insertion_point(field_list:proto.MarkMapRsp.mark_list)
  return mark_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllMarkPointNotify::kMarkListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllMarkPointNotify::AllMarkPointNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AllMarkPointNotify)
}
AllMarkPointNotify::AllMarkPointNotify(const AllMarkPointNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mark_list_(from.mark_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.AllMarkPointNotify)
}

void AllMarkPointNotify::SharedCtor() {
  _cached_size_ = 0;
}

AllMarkPointNotify::~AllMarkPointNotify() {
  // @@protoc_insertion_point(destructor:proto.AllMarkPointNotify)
  SharedDtor();
}

void AllMarkPointNotify::SharedDtor() {
}

void AllMarkPointNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllMarkPointNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllMarkPointNotify& AllMarkPointNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllMarkPointNotify* AllMarkPointNotify::New(::google::protobuf::Arena* arena) const {
  AllMarkPointNotify* n = new AllMarkPointNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllMarkPointNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AllMarkPointNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mark_list_.Clear();
  _internal_metadata_.Clear();
}

bool AllMarkPointNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AllMarkPointNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.MapMarkPoint mark_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_mark_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AllMarkPointNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AllMarkPointNotify)
  return false;
#undef DO_
}

void AllMarkPointNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AllMarkPointNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MapMarkPoint mark_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mark_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->mark_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AllMarkPointNotify)
}

::google::protobuf::uint8* AllMarkPointNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AllMarkPointNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MapMarkPoint mark_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mark_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->mark_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AllMarkPointNotify)
  return target;
}

size_t AllMarkPointNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AllMarkPointNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MapMarkPoint mark_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->mark_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mark_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllMarkPointNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AllMarkPointNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AllMarkPointNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllMarkPointNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AllMarkPointNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AllMarkPointNotify)
    MergeFrom(*source);
  }
}

void AllMarkPointNotify::MergeFrom(const AllMarkPointNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AllMarkPointNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mark_list_.MergeFrom(from.mark_list_);
}

void AllMarkPointNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AllMarkPointNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllMarkPointNotify::CopyFrom(const AllMarkPointNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AllMarkPointNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllMarkPointNotify::IsInitialized() const {
  return true;
}

void AllMarkPointNotify::Swap(AllMarkPointNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllMarkPointNotify::InternalSwap(AllMarkPointNotify* other) {
  using std::swap;
  mark_list_.InternalSwap(&other->mark_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllMarkPointNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllMarkPointNotify

// repeated .proto.MapMarkPoint mark_list = 1;
int AllMarkPointNotify::mark_list_size() const {
  return mark_list_.size();
}
void AllMarkPointNotify::clear_mark_list() {
  mark_list_.Clear();
}
const ::proto::MapMarkPoint& AllMarkPointNotify::mark_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Get(index);
}
::proto::MapMarkPoint* AllMarkPointNotify::mutable_mark_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Mutable(index);
}
::proto::MapMarkPoint* AllMarkPointNotify::add_mark_list() {
  // @@protoc_insertion_point(field_add:proto.AllMarkPointNotify.mark_list)
  return mark_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >*
AllMarkPointNotify::mutable_mark_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AllMarkPointNotify.mark_list)
  return &mark_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MapMarkPoint >&
AllMarkPointNotify::mark_list() const {
  // @@protoc_insertion_point(field_list:proto.AllMarkPointNotify.mark_list)
  return mark_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

WorldDataNotify::WorldDataNotify_WorldPropMapEntry::WorldDataNotify_WorldPropMapEntry() {}
WorldDataNotify::WorldDataNotify_WorldPropMapEntry::WorldDataNotify_WorldPropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata WorldDataNotify::WorldDataNotify_WorldPropMapEntry::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[121];
}
void WorldDataNotify::WorldDataNotify_WorldPropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void WorldDataNotify::WorldDataNotify_WorldPropMapEntry::MergeFrom(const WorldDataNotify_WorldPropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldDataNotify::kWorldPropMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldDataNotify::WorldDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldDataNotify)
}
WorldDataNotify::WorldDataNotify(const WorldDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  world_prop_map_.MergeFrom(from.world_prop_map_);
  // @@protoc_insertion_point(copy_constructor:proto.WorldDataNotify)
}

void WorldDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

WorldDataNotify::~WorldDataNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldDataNotify)
  SharedDtor();
}

void WorldDataNotify::SharedDtor() {
}

void WorldDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldDataNotify& WorldDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldDataNotify* WorldDataNotify::New(::google::protobuf::Arena* arena) const {
  WorldDataNotify* n = new WorldDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  world_prop_map_.Clear();
  _internal_metadata_.Clear();
}

bool WorldDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.PropValue> world_prop_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          WorldDataNotify_WorldPropMapEntry::Parser< ::google::protobuf::internal::MapField<
              WorldDataNotify_WorldPropMapEntry,
              ::google::protobuf::uint32, ::proto::PropValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue > > parser(&world_prop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldDataNotify)
  return false;
#undef DO_
}

void WorldDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.PropValue> world_prop_map = 1;
  if (!this->world_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->world_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->world_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->world_prop_map().begin();
          it != this->world_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<WorldDataNotify_WorldPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(world_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<WorldDataNotify_WorldPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->world_prop_map().begin();
          it != this->world_prop_map().end(); ++it) {
        entry.reset(world_prop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldDataNotify)
}

::google::protobuf::uint8* WorldDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.PropValue> world_prop_map = 1;
  if (!this->world_prop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->world_prop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->world_prop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->world_prop_map().begin();
          it != this->world_prop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<WorldDataNotify_WorldPropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(world_prop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<WorldDataNotify_WorldPropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
          it = this->world_prop_map().begin();
          it != this->world_prop_map().end(); ++it) {
        entry.reset(world_prop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldDataNotify)
  return target;
}

size_t WorldDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.PropValue> world_prop_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->world_prop_map_size());
  {
    ::google::protobuf::scoped_ptr<WorldDataNotify_WorldPropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >::const_iterator
        it = this->world_prop_map().begin();
        it != this->world_prop_map().end(); ++it) {
      entry.reset(world_prop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldDataNotify)
    MergeFrom(*source);
  }
}

void WorldDataNotify::MergeFrom(const WorldDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  world_prop_map_.MergeFrom(from.world_prop_map_);
}

void WorldDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldDataNotify::CopyFrom(const WorldDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldDataNotify::IsInitialized() const {
  return true;
}

void WorldDataNotify::Swap(WorldDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldDataNotify::InternalSwap(WorldDataNotify* other) {
  using std::swap;
  world_prop_map_.Swap(&other->world_prop_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldDataNotify

// map<uint32, .proto.PropValue> world_prop_map = 1;
int WorldDataNotify::world_prop_map_size() const {
  return world_prop_map_.size();
}
void WorldDataNotify::clear_world_prop_map() {
  world_prop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
WorldDataNotify::world_prop_map() const {
  // @@protoc_insertion_point(field_map:proto.WorldDataNotify.world_prop_map)
  return world_prop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
WorldDataNotify::mutable_world_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.WorldDataNotify.world_prop_map)
  return world_prop_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityMoveRoomNotify::kEntityIdFieldNumber;
const int EntityMoveRoomNotify::kDestRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityMoveRoomNotify::EntityMoveRoomNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EntityMoveRoomNotify)
}
EntityMoveRoomNotify::EntityMoveRoomNotify(const EntityMoveRoomNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&dest_room_id_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(dest_room_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EntityMoveRoomNotify)
}

void EntityMoveRoomNotify::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_room_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(dest_room_id_));
  _cached_size_ = 0;
}

EntityMoveRoomNotify::~EntityMoveRoomNotify() {
  // @@protoc_insertion_point(destructor:proto.EntityMoveRoomNotify)
  SharedDtor();
}

void EntityMoveRoomNotify::SharedDtor() {
}

void EntityMoveRoomNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityMoveRoomNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityMoveRoomNotify& EntityMoveRoomNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EntityMoveRoomNotify* EntityMoveRoomNotify::New(::google::protobuf::Arena* arena) const {
  EntityMoveRoomNotify* n = new EntityMoveRoomNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityMoveRoomNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EntityMoveRoomNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dest_room_id_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(dest_room_id_));
  _internal_metadata_.Clear();
}

bool EntityMoveRoomNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EntityMoveRoomNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dest_room_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dest_room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EntityMoveRoomNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EntityMoveRoomNotify)
  return false;
#undef DO_
}

void EntityMoveRoomNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EntityMoveRoomNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // uint32 dest_room_id = 2;
  if (this->dest_room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dest_room_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EntityMoveRoomNotify)
}

::google::protobuf::uint8* EntityMoveRoomNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EntityMoveRoomNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // uint32 dest_room_id = 2;
  if (this->dest_room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dest_room_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EntityMoveRoomNotify)
  return target;
}

size_t EntityMoveRoomNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EntityMoveRoomNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // uint32 dest_room_id = 2;
  if (this->dest_room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dest_room_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityMoveRoomNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EntityMoveRoomNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityMoveRoomNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityMoveRoomNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EntityMoveRoomNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EntityMoveRoomNotify)
    MergeFrom(*source);
  }
}

void EntityMoveRoomNotify::MergeFrom(const EntityMoveRoomNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EntityMoveRoomNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.dest_room_id() != 0) {
    set_dest_room_id(from.dest_room_id());
  }
}

void EntityMoveRoomNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EntityMoveRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityMoveRoomNotify::CopyFrom(const EntityMoveRoomNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EntityMoveRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityMoveRoomNotify::IsInitialized() const {
  return true;
}

void EntityMoveRoomNotify::Swap(EntityMoveRoomNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityMoveRoomNotify::InternalSwap(EntityMoveRoomNotify* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(dest_room_id_, other->dest_room_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityMoveRoomNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityMoveRoomNotify

// uint32 entity_id = 1;
void EntityMoveRoomNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 EntityMoveRoomNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveRoomNotify.entity_id)
  return entity_id_;
}
void EntityMoveRoomNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveRoomNotify.entity_id)
}

// uint32 dest_room_id = 2;
void EntityMoveRoomNotify::clear_dest_room_id() {
  dest_room_id_ = 0u;
}
::google::protobuf::uint32 EntityMoveRoomNotify::dest_room_id() const {
  // @@protoc_insertion_point(field_get:proto.EntityMoveRoomNotify.dest_room_id)
  return dest_room_id_;
}
void EntityMoveRoomNotify::set_dest_room_id(::google::protobuf::uint32 value) {
  
  dest_room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EntityMoveRoomNotify.dest_room_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldPlayerInfoNotify::kPlayerInfoListFieldNumber;
const int WorldPlayerInfoNotify::kPlayerUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldPlayerInfoNotify::WorldPlayerInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.WorldPlayerInfoNotify)
}
WorldPlayerInfoNotify::WorldPlayerInfoNotify(const WorldPlayerInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_info_list_(from.player_info_list_),
      player_uid_list_(from.player_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.WorldPlayerInfoNotify)
}

void WorldPlayerInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

WorldPlayerInfoNotify::~WorldPlayerInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.WorldPlayerInfoNotify)
  SharedDtor();
}

void WorldPlayerInfoNotify::SharedDtor() {
}

void WorldPlayerInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldPlayerInfoNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldPlayerInfoNotify& WorldPlayerInfoNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

WorldPlayerInfoNotify* WorldPlayerInfoNotify::New(::google::protobuf::Arena* arena) const {
  WorldPlayerInfoNotify* n = new WorldPlayerInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldPlayerInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.WorldPlayerInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_info_list_.Clear();
  player_uid_list_.Clear();
  _internal_metadata_.Clear();
}

bool WorldPlayerInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.WorldPlayerInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.OnlinePlayerInfo player_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_player_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 player_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_player_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_player_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.WorldPlayerInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.WorldPlayerInfoNotify)
  return false;
#undef DO_
}

void WorldPlayerInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.WorldPlayerInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.OnlinePlayerInfo player_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->player_info_list(static_cast<int>(i)), output);
  }

  // repeated uint32 player_uid_list = 2;
  if (this->player_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _player_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->player_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->player_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.WorldPlayerInfoNotify)
}

::google::protobuf::uint8* WorldPlayerInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.WorldPlayerInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.OnlinePlayerInfo player_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->player_info_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 player_uid_list = 2;
  if (this->player_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _player_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->player_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.WorldPlayerInfoNotify)
  return target;
}

size_t WorldPlayerInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.WorldPlayerInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.OnlinePlayerInfo player_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->player_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->player_info_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 player_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->player_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _player_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldPlayerInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.WorldPlayerInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldPlayerInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldPlayerInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.WorldPlayerInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.WorldPlayerInfoNotify)
    MergeFrom(*source);
  }
}

void WorldPlayerInfoNotify::MergeFrom(const WorldPlayerInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.WorldPlayerInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_info_list_.MergeFrom(from.player_info_list_);
  player_uid_list_.MergeFrom(from.player_uid_list_);
}

void WorldPlayerInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.WorldPlayerInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldPlayerInfoNotify::CopyFrom(const WorldPlayerInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.WorldPlayerInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldPlayerInfoNotify::IsInitialized() const {
  return true;
}

void WorldPlayerInfoNotify::Swap(WorldPlayerInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldPlayerInfoNotify::InternalSwap(WorldPlayerInfoNotify* other) {
  using std::swap;
  player_info_list_.InternalSwap(&other->player_info_list_);
  player_uid_list_.InternalSwap(&other->player_uid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldPlayerInfoNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldPlayerInfoNotify

// repeated .proto.OnlinePlayerInfo player_info_list = 1;
int WorldPlayerInfoNotify::player_info_list_size() const {
  return player_info_list_.size();
}
void WorldPlayerInfoNotify::clear_player_info_list() {
  player_info_list_.Clear();
}
const ::proto::OnlinePlayerInfo& WorldPlayerInfoNotify::player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Get(index);
}
::proto::OnlinePlayerInfo* WorldPlayerInfoNotify::mutable_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Mutable(index);
}
::proto::OnlinePlayerInfo* WorldPlayerInfoNotify::add_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >*
WorldPlayerInfoNotify::mutable_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerInfoNotify.player_info_list)
  return &player_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::OnlinePlayerInfo >&
WorldPlayerInfoNotify::player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerInfoNotify.player_info_list)
  return player_info_list_;
}

// repeated uint32 player_uid_list = 2;
int WorldPlayerInfoNotify::player_uid_list_size() const {
  return player_uid_list_.size();
}
void WorldPlayerInfoNotify::clear_player_uid_list() {
  player_uid_list_.Clear();
}
::google::protobuf::uint32 WorldPlayerInfoNotify::player_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldPlayerInfoNotify.player_uid_list)
  return player_uid_list_.Get(index);
}
void WorldPlayerInfoNotify::set_player_uid_list(int index, ::google::protobuf::uint32 value) {
  player_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.WorldPlayerInfoNotify.player_uid_list)
}
void WorldPlayerInfoNotify::add_player_uid_list(::google::protobuf::uint32 value) {
  player_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.WorldPlayerInfoNotify.player_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
WorldPlayerInfoNotify::player_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldPlayerInfoNotify.player_uid_list)
  return player_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
WorldPlayerInfoNotify::mutable_player_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldPlayerInfoNotify.player_uid_list)
  return &player_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PostEnterSceneReq::kEnterSceneTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PostEnterSceneReq::PostEnterSceneReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PostEnterSceneReq)
}
PostEnterSceneReq::PostEnterSceneReq(const PostEnterSceneReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  enter_scene_token_ = from.enter_scene_token_;
  // @@protoc_insertion_point(copy_constructor:proto.PostEnterSceneReq)
}

void PostEnterSceneReq::SharedCtor() {
  enter_scene_token_ = 0u;
  _cached_size_ = 0;
}

PostEnterSceneReq::~PostEnterSceneReq() {
  // @@protoc_insertion_point(destructor:proto.PostEnterSceneReq)
  SharedDtor();
}

void PostEnterSceneReq::SharedDtor() {
}

void PostEnterSceneReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PostEnterSceneReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PostEnterSceneReq& PostEnterSceneReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PostEnterSceneReq* PostEnterSceneReq::New(::google::protobuf::Arena* arena) const {
  PostEnterSceneReq* n = new PostEnterSceneReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PostEnterSceneReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PostEnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enter_scene_token_ = 0u;
  _internal_metadata_.Clear();
}

bool PostEnterSceneReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PostEnterSceneReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 enter_scene_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enter_scene_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PostEnterSceneReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PostEnterSceneReq)
  return false;
#undef DO_
}

void PostEnterSceneReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PostEnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->enter_scene_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PostEnterSceneReq)
}

::google::protobuf::uint8* PostEnterSceneReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PostEnterSceneReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->enter_scene_token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PostEnterSceneReq)
  return target;
}

size_t PostEnterSceneReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PostEnterSceneReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 enter_scene_token = 1;
  if (this->enter_scene_token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enter_scene_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PostEnterSceneReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PostEnterSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PostEnterSceneReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PostEnterSceneReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PostEnterSceneReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PostEnterSceneReq)
    MergeFrom(*source);
  }
}

void PostEnterSceneReq::MergeFrom(const PostEnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PostEnterSceneReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.enter_scene_token() != 0) {
    set_enter_scene_token(from.enter_scene_token());
  }
}

void PostEnterSceneReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PostEnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostEnterSceneReq::CopyFrom(const PostEnterSceneReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PostEnterSceneReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostEnterSceneReq::IsInitialized() const {
  return true;
}

void PostEnterSceneReq::Swap(PostEnterSceneReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PostEnterSceneReq::InternalSwap(PostEnterSceneReq* other) {
  using std::swap;
  swap(enter_scene_token_, other->enter_scene_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PostEnterSceneReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PostEnterSceneReq

// uint32 enter_scene_token = 1;
void PostEnterSceneReq::clear_enter_scene_token() {
  enter_scene_token_ = 0u;
}
::google::protobuf::uint32 PostEnterSceneReq::enter_scene_token() const {
  // @@protoc_insertion_point(field_get:proto.PostEnterSceneReq.enter_scene_token)
  return enter_scene_token_;
}
void PostEnterSceneReq::set_enter_scene_token(::google::protobuf::uint32 value) {
  
  enter_scene_token_ = value;
  // @@protoc_insertion_point(field_set:proto.PostEnterSceneReq.enter_scene_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PostEnterSceneRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PostEnterSceneRsp::PostEnterSceneRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PostEnterSceneRsp)
}
PostEnterSceneRsp::PostEnterSceneRsp(const PostEnterSceneRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PostEnterSceneRsp)
}

void PostEnterSceneRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PostEnterSceneRsp::~PostEnterSceneRsp() {
  // @@protoc_insertion_point(destructor:proto.PostEnterSceneRsp)
  SharedDtor();
}

void PostEnterSceneRsp::SharedDtor() {
}

void PostEnterSceneRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PostEnterSceneRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PostEnterSceneRsp& PostEnterSceneRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PostEnterSceneRsp* PostEnterSceneRsp::New(::google::protobuf::Arena* arena) const {
  PostEnterSceneRsp* n = new PostEnterSceneRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PostEnterSceneRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PostEnterSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PostEnterSceneRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PostEnterSceneRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PostEnterSceneRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PostEnterSceneRsp)
  return false;
#undef DO_
}

void PostEnterSceneRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PostEnterSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PostEnterSceneRsp)
}

::google::protobuf::uint8* PostEnterSceneRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PostEnterSceneRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PostEnterSceneRsp)
  return target;
}

size_t PostEnterSceneRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PostEnterSceneRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PostEnterSceneRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PostEnterSceneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PostEnterSceneRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PostEnterSceneRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PostEnterSceneRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PostEnterSceneRsp)
    MergeFrom(*source);
  }
}

void PostEnterSceneRsp::MergeFrom(const PostEnterSceneRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PostEnterSceneRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PostEnterSceneRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PostEnterSceneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostEnterSceneRsp::CopyFrom(const PostEnterSceneRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PostEnterSceneRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostEnterSceneRsp::IsInitialized() const {
  return true;
}

void PostEnterSceneRsp::Swap(PostEnterSceneRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PostEnterSceneRsp::InternalSwap(PostEnterSceneRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PostEnterSceneRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PostEnterSceneRsp

// int32 retcode = 1;
void PostEnterSceneRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PostEnterSceneRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PostEnterSceneRsp.retcode)
  return retcode_;
}
void PostEnterSceneRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PostEnterSceneRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatInfo_SystemHint::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatInfo_SystemHint::ChatInfo_SystemHint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatInfo.SystemHint)
}
ChatInfo_SystemHint::ChatInfo_SystemHint(const ChatInfo_SystemHint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:proto.ChatInfo.SystemHint)
}

void ChatInfo_SystemHint::SharedCtor() {
  type_ = 0u;
  _cached_size_ = 0;
}

ChatInfo_SystemHint::~ChatInfo_SystemHint() {
  // @@protoc_insertion_point(destructor:proto.ChatInfo.SystemHint)
  SharedDtor();
}

void ChatInfo_SystemHint::SharedDtor() {
}

void ChatInfo_SystemHint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatInfo_SystemHint::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatInfo_SystemHint& ChatInfo_SystemHint::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatInfo_SystemHint* ChatInfo_SystemHint::New(::google::protobuf::Arena* arena) const {
  ChatInfo_SystemHint* n = new ChatInfo_SystemHint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatInfo_SystemHint::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatInfo.SystemHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0u;
  _internal_metadata_.Clear();
}

bool ChatInfo_SystemHint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatInfo.SystemHint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatInfo.SystemHint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatInfo.SystemHint)
  return false;
#undef DO_
}

void ChatInfo_SystemHint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatInfo.SystemHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatInfo.SystemHint)
}

::google::protobuf::uint8* ChatInfo_SystemHint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatInfo.SystemHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatInfo.SystemHint)
  return target;
}

size_t ChatInfo_SystemHint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatInfo.SystemHint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatInfo_SystemHint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatInfo.SystemHint)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatInfo_SystemHint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatInfo_SystemHint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatInfo.SystemHint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatInfo.SystemHint)
    MergeFrom(*source);
  }
}

void ChatInfo_SystemHint::MergeFrom(const ChatInfo_SystemHint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatInfo.SystemHint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ChatInfo_SystemHint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatInfo.SystemHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatInfo_SystemHint::CopyFrom(const ChatInfo_SystemHint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatInfo.SystemHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatInfo_SystemHint::IsInitialized() const {
  return true;
}

void ChatInfo_SystemHint::Swap(ChatInfo_SystemHint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatInfo_SystemHint::InternalSwap(ChatInfo_SystemHint* other) {
  using std::swap;
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatInfo_SystemHint::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatInfo_SystemHint

// uint32 type = 1;
void ChatInfo_SystemHint::clear_type() {
  type_ = 0u;
}
::google::protobuf::uint32 ChatInfo_SystemHint::type() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.SystemHint.type)
  return type_;
}
void ChatInfo_SystemHint::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.SystemHint.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatInfo::kTimeFieldNumber;
const int ChatInfo::kUidFieldNumber;
const int ChatInfo::kTextFieldNumber;
const int ChatInfo::kIconFieldNumber;
const int ChatInfo::kSystemHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatInfo::ChatInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatInfo)
}
ChatInfo::ChatInfo(const ChatInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&time_, &from.time_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&time_)) + sizeof(uid_));
  clear_has_content();
  switch (from.content_case()) {
    case kText: {
      set_text(from.text());
      break;
    }
    case kIcon: {
      set_icon(from.icon());
      break;
    }
    case kSystemHint: {
      mutable_system_hint()->::proto::ChatInfo_SystemHint::MergeFrom(from.system_hint());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.ChatInfo)
}

void ChatInfo::SharedCtor() {
  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&time_)) + sizeof(uid_));
  clear_has_content();
  _cached_size_ = 0;
}

ChatInfo::~ChatInfo() {
  // @@protoc_insertion_point(destructor:proto.ChatInfo)
  SharedDtor();
}

void ChatInfo::SharedDtor() {
  if (has_content()) {
    clear_content();
  }
}

void ChatInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatInfo::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatInfo& ChatInfo::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatInfo* ChatInfo::New(::google::protobuf::Arena* arena) const {
  ChatInfo* n = new ChatInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatInfo::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:proto.ChatInfo)
  switch (content_case()) {
    case kText: {
      content_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIcon: {
      // No need to clear
      break;
    }
    case kSystemHint: {
      delete content_.system_hint_;
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void ChatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&time_)) + sizeof(uid_));
  clear_content();
  _internal_metadata_.Clear();
}

bool ChatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ChatInfo.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &content_.icon_)));
          set_has_icon();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChatInfo.SystemHint system_hint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_system_hint()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatInfo)
  return false;
#undef DO_
}

void ChatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->time(), output);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ChatInfo.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->text(), output);
  }

  // uint32 icon = 4;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->icon(), output);
  }

  // .proto.ChatInfo.SystemHint system_hint = 5;
  if (has_system_hint()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *content_.system_hint_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatInfo)
}

::google::protobuf::uint8* ChatInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->time(), target);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // string text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ChatInfo.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->text(), target);
  }

  // uint32 icon = 4;
  if (has_icon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->icon(), target);
  }

  // .proto.ChatInfo.SystemHint system_hint = 5;
  if (has_system_hint()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *content_.system_hint_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatInfo)
  return target;
}

size_t ChatInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->time());
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  switch (content_case()) {
    // string text = 3;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
      break;
    }
    // uint32 icon = 4;
    case kIcon: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->icon());
      break;
    }
    // .proto.ChatInfo.SystemHint system_hint = 5;
    case kSystemHint: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *content_.system_hint_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatInfo)
    MergeFrom(*source);
  }
}

void ChatInfo::MergeFrom(const ChatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  switch (from.content_case()) {
    case kText: {
      set_text(from.text());
      break;
    }
    case kIcon: {
      set_icon(from.icon());
      break;
    }
    case kSystemHint: {
      mutable_system_hint()->::proto::ChatInfo_SystemHint::MergeFrom(from.system_hint());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void ChatInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatInfo::CopyFrom(const ChatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatInfo::IsInitialized() const {
  return true;
}

void ChatInfo::Swap(ChatInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatInfo::InternalSwap(ChatInfo* other) {
  using std::swap;
  swap(time_, other->time_);
  swap(uid_, other->uid_);
  swap(content_, other->content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatInfo::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatInfo

// uint32 time = 1;
void ChatInfo::clear_time() {
  time_ = 0u;
}
::google::protobuf::uint32 ChatInfo::time() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.time)
  return time_;
}
void ChatInfo::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.time)
}

// uint32 uid = 2;
void ChatInfo::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 ChatInfo::uid() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.uid)
  return uid_;
}
void ChatInfo::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.uid)
}

// string text = 3;
bool ChatInfo::has_text() const {
  return content_case() == kText;
}
void ChatInfo::set_has_text() {
  _oneof_case_[0] = kText;
}
void ChatInfo::clear_text() {
  if (has_text()) {
    content_.text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_content();
  }
}
const ::std::string& ChatInfo::text() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.text)
  if (has_text()) {
    return content_.text_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void ChatInfo::set_text(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
}
#if LANG_CXX11
void ChatInfo::set_text(::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.ChatInfo.text)
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ChatInfo.text)
}
#endif
void ChatInfo::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ChatInfo.text)
}
void ChatInfo::set_text(const char* value, size_t size) {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  content_.text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ChatInfo.text)
}
::std::string* ChatInfo::mutable_text() {
  if (!has_text()) {
    clear_content();
    set_has_text();
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatInfo.text)
  return content_.text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatInfo::release_text() {
  // @@protoc_insertion_point(field_release:proto.ChatInfo.text)
  if (has_text()) {
    clear_has_content();
    return content_.text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void ChatInfo::set_allocated_text(::std::string* text) {
  if (!has_text()) {
    content_.text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_content();
  if (text != NULL) {
    set_has_text();
    content_.text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        text);
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatInfo.text)
}

// uint32 icon = 4;
bool ChatInfo::has_icon() const {
  return content_case() == kIcon;
}
void ChatInfo::set_has_icon() {
  _oneof_case_[0] = kIcon;
}
void ChatInfo::clear_icon() {
  if (has_icon()) {
    content_.icon_ = 0u;
    clear_has_content();
  }
}
::google::protobuf::uint32 ChatInfo::icon() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.icon)
  if (has_icon()) {
    return content_.icon_;
  }
  return 0u;
}
void ChatInfo::set_icon(::google::protobuf::uint32 value) {
  if (!has_icon()) {
    clear_content();
    set_has_icon();
  }
  content_.icon_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatInfo.icon)
}

// .proto.ChatInfo.SystemHint system_hint = 5;
bool ChatInfo::has_system_hint() const {
  return content_case() == kSystemHint;
}
void ChatInfo::set_has_system_hint() {
  _oneof_case_[0] = kSystemHint;
}
void ChatInfo::clear_system_hint() {
  if (has_system_hint()) {
    delete content_.system_hint_;
    clear_has_content();
  }
}
 const ::proto::ChatInfo_SystemHint& ChatInfo::system_hint() const {
  // @@protoc_insertion_point(field_get:proto.ChatInfo.system_hint)
  return has_system_hint()
      ? *content_.system_hint_
      : ::proto::ChatInfo_SystemHint::default_instance();
}
::proto::ChatInfo_SystemHint* ChatInfo::mutable_system_hint() {
  if (!has_system_hint()) {
    clear_content();
    set_has_system_hint();
    content_.system_hint_ = new ::proto::ChatInfo_SystemHint;
  }
  // @@protoc_insertion_point(field_mutable:proto.ChatInfo.system_hint)
  return content_.system_hint_;
}
::proto::ChatInfo_SystemHint* ChatInfo::release_system_hint() {
  // @@protoc_insertion_point(field_release:proto.ChatInfo.system_hint)
  if (has_system_hint()) {
    clear_has_content();
    ::proto::ChatInfo_SystemHint* temp = content_.system_hint_;
    content_.system_hint_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ChatInfo::set_allocated_system_hint(::proto::ChatInfo_SystemHint* system_hint) {
  clear_content();
  if (system_hint) {
    set_has_system_hint();
    content_.system_hint_ = system_hint;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ChatInfo.system_hint)
}

bool ChatInfo::has_content() const {
  return content_case() != CONTENT_NOT_SET;
}
void ChatInfo::clear_has_content() {
  _oneof_case_[0] = CONTENT_NOT_SET;
}
ChatInfo::ContentCase ChatInfo::content_case() const {
  return ChatInfo::ContentCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerChatReq::kChannelIdFieldNumber;
const int PlayerChatReq::kChatInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerChatReq::PlayerChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerChatReq)
}
PlayerChatReq::PlayerChatReq(const PlayerChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chat_info()) {
    chat_info_ = new ::proto::ChatInfo(*from.chat_info_);
  } else {
    chat_info_ = NULL;
  }
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerChatReq)
}

void PlayerChatReq::SharedCtor() {
  ::memset(&chat_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_id_) -
      reinterpret_cast<char*>(&chat_info_)) + sizeof(channel_id_));
  _cached_size_ = 0;
}

PlayerChatReq::~PlayerChatReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerChatReq)
  SharedDtor();
}

void PlayerChatReq::SharedDtor() {
  if (this != internal_default_instance()) delete chat_info_;
}

void PlayerChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerChatReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerChatReq& PlayerChatReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerChatReq* PlayerChatReq::New(::google::protobuf::Arena* arena) const {
  PlayerChatReq* n = new PlayerChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) {
    delete chat_info_;
  }
  chat_info_ = NULL;
  channel_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChatInfo chat_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chat_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerChatReq)
  return false;
#undef DO_
}

void PlayerChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel_id(), output);
  }

  // .proto.ChatInfo chat_info = 2;
  if (this->has_chat_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->chat_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerChatReq)
}

::google::protobuf::uint8* PlayerChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel_id(), target);
  }

  // .proto.ChatInfo chat_info = 2;
  if (this->has_chat_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->chat_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerChatReq)
  return target;
}

size_t PlayerChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChatInfo chat_info = 2;
  if (this->has_chat_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chat_info_);
  }

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerChatReq)
    MergeFrom(*source);
  }
}

void PlayerChatReq::MergeFrom(const PlayerChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_info()) {
    mutable_chat_info()->::proto::ChatInfo::MergeFrom(from.chat_info());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void PlayerChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerChatReq::CopyFrom(const PlayerChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerChatReq::IsInitialized() const {
  return true;
}

void PlayerChatReq::Swap(PlayerChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerChatReq::InternalSwap(PlayerChatReq* other) {
  using std::swap;
  swap(chat_info_, other->chat_info_);
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerChatReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerChatReq

// uint32 channel_id = 1;
void PlayerChatReq::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 PlayerChatReq::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatReq.channel_id)
  return channel_id_;
}
void PlayerChatReq::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatReq.channel_id)
}

// .proto.ChatInfo chat_info = 2;
bool PlayerChatReq::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
void PlayerChatReq::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
const ::proto::ChatInfo& PlayerChatReq::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerChatReq.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
::proto::ChatInfo* PlayerChatReq::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerChatReq.chat_info)
  return chat_info_;
}
::proto::ChatInfo* PlayerChatReq::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerChatReq.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
void PlayerChatReq::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerChatReq.chat_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerChatRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerChatRsp::PlayerChatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerChatRsp)
}
PlayerChatRsp::PlayerChatRsp(const PlayerChatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerChatRsp)
}

void PlayerChatRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

PlayerChatRsp::~PlayerChatRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerChatRsp)
  SharedDtor();
}

void PlayerChatRsp::SharedDtor() {
}

void PlayerChatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerChatRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerChatRsp& PlayerChatRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerChatRsp* PlayerChatRsp::New(::google::protobuf::Arena* arena) const {
  PlayerChatRsp* n = new PlayerChatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerChatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerChatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerChatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerChatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerChatRsp)
  return false;
#undef DO_
}

void PlayerChatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerChatRsp)
}

::google::protobuf::uint8* PlayerChatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerChatRsp)
  return target;
}

size_t PlayerChatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerChatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerChatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerChatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerChatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerChatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerChatRsp)
    MergeFrom(*source);
  }
}

void PlayerChatRsp::MergeFrom(const PlayerChatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void PlayerChatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerChatRsp::CopyFrom(const PlayerChatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerChatRsp::IsInitialized() const {
  return true;
}

void PlayerChatRsp::Swap(PlayerChatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerChatRsp::InternalSwap(PlayerChatRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerChatRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerChatRsp

// int32 retcode = 1;
void PlayerChatRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatRsp.retcode)
  return retcode_;
}
void PlayerChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerChatNotify::kChannelIdFieldNumber;
const int PlayerChatNotify::kChatInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerChatNotify::PlayerChatNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerChatNotify)
}
PlayerChatNotify::PlayerChatNotify(const PlayerChatNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chat_info()) {
    chat_info_ = new ::proto::ChatInfo(*from.chat_info_);
  } else {
    chat_info_ = NULL;
  }
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerChatNotify)
}

void PlayerChatNotify::SharedCtor() {
  ::memset(&chat_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_id_) -
      reinterpret_cast<char*>(&chat_info_)) + sizeof(channel_id_));
  _cached_size_ = 0;
}

PlayerChatNotify::~PlayerChatNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerChatNotify)
  SharedDtor();
}

void PlayerChatNotify::SharedDtor() {
  if (this != internal_default_instance()) delete chat_info_;
}

void PlayerChatNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerChatNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerChatNotify& PlayerChatNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerChatNotify* PlayerChatNotify::New(::google::protobuf::Arena* arena) const {
  PlayerChatNotify* n = new PlayerChatNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerChatNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) {
    delete chat_info_;
  }
  chat_info_ = NULL;
  channel_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerChatNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerChatNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ChatInfo chat_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chat_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerChatNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerChatNotify)
  return false;
#undef DO_
}

void PlayerChatNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel_id(), output);
  }

  // .proto.ChatInfo chat_info = 2;
  if (this->has_chat_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->chat_info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerChatNotify)
}

::google::protobuf::uint8* PlayerChatNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel_id(), target);
  }

  // .proto.ChatInfo chat_info = 2;
  if (this->has_chat_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->chat_info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerChatNotify)
  return target;
}

size_t PlayerChatNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerChatNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChatInfo chat_info = 2;
  if (this->has_chat_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chat_info_);
  }

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerChatNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerChatNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerChatNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerChatNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerChatNotify)
    MergeFrom(*source);
  }
}

void PlayerChatNotify::MergeFrom(const PlayerChatNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_info()) {
    mutable_chat_info()->::proto::ChatInfo::MergeFrom(from.chat_info());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void PlayerChatNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerChatNotify::CopyFrom(const PlayerChatNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerChatNotify::IsInitialized() const {
  return true;
}

void PlayerChatNotify::Swap(PlayerChatNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerChatNotify::InternalSwap(PlayerChatNotify* other) {
  using std::swap;
  swap(chat_info_, other->chat_info_);
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerChatNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerChatNotify

// uint32 channel_id = 1;
void PlayerChatNotify::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 PlayerChatNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatNotify.channel_id)
  return channel_id_;
}
void PlayerChatNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatNotify.channel_id)
}

// .proto.ChatInfo chat_info = 2;
bool PlayerChatNotify::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
void PlayerChatNotify::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
const ::proto::ChatInfo& PlayerChatNotify::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.PlayerChatNotify.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
::proto::ChatInfo* PlayerChatNotify::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerChatNotify.chat_info)
  return chat_info_;
}
::proto::ChatInfo* PlayerChatNotify::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerChatNotify.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
void PlayerChatNotify::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerChatNotify.chat_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerChatCDNotify::kOverTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerChatCDNotify::PlayerChatCDNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerChatCDNotify)
}
PlayerChatCDNotify::PlayerChatCDNotify(const PlayerChatCDNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  over_time_ = from.over_time_;
  // @@protoc_insertion_point(copy_constructor:proto.PlayerChatCDNotify)
}

void PlayerChatCDNotify::SharedCtor() {
  over_time_ = 0u;
  _cached_size_ = 0;
}

PlayerChatCDNotify::~PlayerChatCDNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerChatCDNotify)
  SharedDtor();
}

void PlayerChatCDNotify::SharedDtor() {
}

void PlayerChatCDNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerChatCDNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerChatCDNotify& PlayerChatCDNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerChatCDNotify* PlayerChatCDNotify::New(::google::protobuf::Arena* arena) const {
  PlayerChatCDNotify* n = new PlayerChatCDNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerChatCDNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerChatCDNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  over_time_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerChatCDNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerChatCDNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 over_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &over_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerChatCDNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerChatCDNotify)
  return false;
#undef DO_
}

void PlayerChatCDNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerChatCDNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 over_time = 1;
  if (this->over_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->over_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerChatCDNotify)
}

::google::protobuf::uint8* PlayerChatCDNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerChatCDNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 over_time = 1;
  if (this->over_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->over_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerChatCDNotify)
  return target;
}

size_t PlayerChatCDNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerChatCDNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 over_time = 1;
  if (this->over_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->over_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerChatCDNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerChatCDNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerChatCDNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerChatCDNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerChatCDNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerChatCDNotify)
    MergeFrom(*source);
  }
}

void PlayerChatCDNotify::MergeFrom(const PlayerChatCDNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerChatCDNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.over_time() != 0) {
    set_over_time(from.over_time());
  }
}

void PlayerChatCDNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerChatCDNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerChatCDNotify::CopyFrom(const PlayerChatCDNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerChatCDNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerChatCDNotify::IsInitialized() const {
  return true;
}

void PlayerChatCDNotify::Swap(PlayerChatCDNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerChatCDNotify::InternalSwap(PlayerChatCDNotify* other) {
  using std::swap;
  swap(over_time_, other->over_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerChatCDNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerChatCDNotify

// uint32 over_time = 1;
void PlayerChatCDNotify::clear_over_time() {
  over_time_ = 0u;
}
::google::protobuf::uint32 PlayerChatCDNotify::over_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerChatCDNotify.over_time)
  return over_time_;
}
void PlayerChatCDNotify::set_over_time(::google::protobuf::uint32 value) {
  
  over_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerChatCDNotify.over_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatHistoryNotify::kChannelIdFieldNumber;
const int ChatHistoryNotify::kChatInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatHistoryNotify::ChatHistoryNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChatHistoryNotify)
}
ChatHistoryNotify::ChatHistoryNotify(const ChatHistoryNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      chat_info_(from.chat_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_id_ = from.channel_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ChatHistoryNotify)
}

void ChatHistoryNotify::SharedCtor() {
  channel_id_ = 0u;
  _cached_size_ = 0;
}

ChatHistoryNotify::~ChatHistoryNotify() {
  // @@protoc_insertion_point(destructor:proto.ChatHistoryNotify)
  SharedDtor();
}

void ChatHistoryNotify::SharedDtor() {
}

void ChatHistoryNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatHistoryNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatHistoryNotify& ChatHistoryNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatHistoryNotify* ChatHistoryNotify::New(::google::protobuf::Arena* arena) const {
  ChatHistoryNotify* n = new ChatHistoryNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatHistoryNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChatHistoryNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chat_info_.Clear();
  channel_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ChatHistoryNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChatHistoryNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ChatInfo chat_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_chat_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChatHistoryNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChatHistoryNotify)
  return false;
#undef DO_
}

void ChatHistoryNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChatHistoryNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->channel_id(), output);
  }

  // repeated .proto.ChatInfo chat_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chat_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->chat_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChatHistoryNotify)
}

::google::protobuf::uint8* ChatHistoryNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChatHistoryNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->channel_id(), target);
  }

  // repeated .proto.ChatInfo chat_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->chat_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->chat_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChatHistoryNotify)
  return target;
}

size_t ChatHistoryNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChatHistoryNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ChatInfo chat_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->chat_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->chat_info(static_cast<int>(i)));
    }
  }

  // uint32 channel_id = 1;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatHistoryNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChatHistoryNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatHistoryNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatHistoryNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChatHistoryNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChatHistoryNotify)
    MergeFrom(*source);
  }
}

void ChatHistoryNotify::MergeFrom(const ChatHistoryNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChatHistoryNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  chat_info_.MergeFrom(from.chat_info_);
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
}

void ChatHistoryNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChatHistoryNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatHistoryNotify::CopyFrom(const ChatHistoryNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChatHistoryNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatHistoryNotify::IsInitialized() const {
  return true;
}

void ChatHistoryNotify::Swap(ChatHistoryNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatHistoryNotify::InternalSwap(ChatHistoryNotify* other) {
  using std::swap;
  chat_info_.InternalSwap(&other->chat_info_);
  swap(channel_id_, other->channel_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatHistoryNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatHistoryNotify

// uint32 channel_id = 1;
void ChatHistoryNotify::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 ChatHistoryNotify::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.ChatHistoryNotify.channel_id)
  return channel_id_;
}
void ChatHistoryNotify::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChatHistoryNotify.channel_id)
}

// repeated .proto.ChatInfo chat_info = 2;
int ChatHistoryNotify::chat_info_size() const {
  return chat_info_.size();
}
void ChatHistoryNotify::clear_chat_info() {
  chat_info_.Clear();
}
const ::proto::ChatInfo& ChatHistoryNotify::chat_info(int index) const {
  // @@protoc_insertion_point(field_get:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Get(index);
}
::proto::ChatInfo* ChatHistoryNotify::mutable_chat_info(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Mutable(index);
}
::proto::ChatInfo* ChatHistoryNotify::add_chat_info() {
  // @@protoc_insertion_point(field_add:proto.ChatHistoryNotify.chat_info)
  return chat_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >*
ChatHistoryNotify::mutable_chat_info() {
  // @@protoc_insertion_point(field_mutable_list:proto.ChatHistoryNotify.chat_info)
  return &chat_info_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ChatInfo >&
ChatHistoryNotify::chat_info() const {
  // @@protoc_insertion_point(field_list:proto.ChatHistoryNotify.chat_info)
  return chat_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneDataNotify::kLevelConfigNameListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneDataNotify::SceneDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneDataNotify)
}
SceneDataNotify::SceneDataNotify(const SceneDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      level_config_name_list_(from.level_config_name_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneDataNotify)
}

void SceneDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

SceneDataNotify::~SceneDataNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneDataNotify)
  SharedDtor();
}

void SceneDataNotify::SharedDtor() {
}

void SceneDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneDataNotify& SceneDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneDataNotify* SceneDataNotify::New(::google::protobuf::Arena* arena) const {
  SceneDataNotify* n = new SceneDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  level_config_name_list_.Clear();
  _internal_metadata_.Clear();
}

bool SceneDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string level_config_name_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_level_config_name_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->level_config_name_list(this->level_config_name_list_size() - 1).data(),
            static_cast<int>(this->level_config_name_list(this->level_config_name_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SceneDataNotify.level_config_name_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneDataNotify)
  return false;
#undef DO_
}

void SceneDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string level_config_name_list = 1;
  for (int i = 0, n = this->level_config_name_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->level_config_name_list(i).data(), static_cast<int>(this->level_config_name_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SceneDataNotify.level_config_name_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->level_config_name_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneDataNotify)
}

::google::protobuf::uint8* SceneDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string level_config_name_list = 1;
  for (int i = 0, n = this->level_config_name_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->level_config_name_list(i).data(), static_cast<int>(this->level_config_name_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SceneDataNotify.level_config_name_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->level_config_name_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneDataNotify)
  return target;
}

size_t SceneDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string level_config_name_list = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->level_config_name_list_size());
  for (int i = 0, n = this->level_config_name_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->level_config_name_list(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneDataNotify)
    MergeFrom(*source);
  }
}

void SceneDataNotify::MergeFrom(const SceneDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  level_config_name_list_.MergeFrom(from.level_config_name_list_);
}

void SceneDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneDataNotify::CopyFrom(const SceneDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneDataNotify::IsInitialized() const {
  return true;
}

void SceneDataNotify::Swap(SceneDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneDataNotify::InternalSwap(SceneDataNotify* other) {
  using std::swap;
  level_config_name_list_.InternalSwap(&other->level_config_name_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneDataNotify

// repeated string level_config_name_list = 1;
int SceneDataNotify::level_config_name_list_size() const {
  return level_config_name_list_.size();
}
void SceneDataNotify::clear_level_config_name_list() {
  level_config_name_list_.Clear();
}
const ::std::string& SceneDataNotify::level_config_name_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Get(index);
}
::std::string* SceneDataNotify::mutable_level_config_name_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Mutable(index);
}
void SceneDataNotify::set_level_config_name_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.SceneDataNotify.level_config_name_list)
  level_config_name_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SceneDataNotify::set_level_config_name_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.SceneDataNotify.level_config_name_list)
  level_config_name_list_.Mutable(index)->assign(std::move(value));
}
#endif
void SceneDataNotify::set_level_config_name_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  level_config_name_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.SceneDataNotify.level_config_name_list)
}
void SceneDataNotify::set_level_config_name_list(int index, const char* value, size_t size) {
  level_config_name_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.SceneDataNotify.level_config_name_list)
}
::std::string* SceneDataNotify::add_level_config_name_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_.Add();
}
void SceneDataNotify::add_level_config_name_list(const ::std::string& value) {
  level_config_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.SceneDataNotify.level_config_name_list)
}
#if LANG_CXX11
void SceneDataNotify::add_level_config_name_list(::std::string&& value) {
  level_config_name_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.SceneDataNotify.level_config_name_list)
}
#endif
void SceneDataNotify::add_level_config_name_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  level_config_name_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.SceneDataNotify.level_config_name_list)
}
void SceneDataNotify::add_level_config_name_list(const char* value, size_t size) {
  level_config_name_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.SceneDataNotify.level_config_name_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SceneDataNotify::level_config_name_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneDataNotify.level_config_name_list)
  return level_config_name_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SceneDataNotify::mutable_level_config_name_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneDataNotify.level_config_name_list)
  return &level_config_name_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DungeonEntryToBeExploreNotify::kDungeonEntryScenePointIdFieldNumber;
const int DungeonEntryToBeExploreNotify::kDungeonEntryConfigIdFieldNumber;
const int DungeonEntryToBeExploreNotify::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DungeonEntryToBeExploreNotify::DungeonEntryToBeExploreNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DungeonEntryToBeExploreNotify)
}
DungeonEntryToBeExploreNotify::DungeonEntryToBeExploreNotify(const DungeonEntryToBeExploreNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_entry_scene_point_id_, &from.dungeon_entry_scene_point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&dungeon_entry_scene_point_id_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.DungeonEntryToBeExploreNotify)
}

void DungeonEntryToBeExploreNotify::SharedCtor() {
  ::memset(&dungeon_entry_scene_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&dungeon_entry_scene_point_id_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

DungeonEntryToBeExploreNotify::~DungeonEntryToBeExploreNotify() {
  // @@protoc_insertion_point(destructor:proto.DungeonEntryToBeExploreNotify)
  SharedDtor();
}

void DungeonEntryToBeExploreNotify::SharedDtor() {
}

void DungeonEntryToBeExploreNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonEntryToBeExploreNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DungeonEntryToBeExploreNotify& DungeonEntryToBeExploreNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

DungeonEntryToBeExploreNotify* DungeonEntryToBeExploreNotify::New(::google::protobuf::Arena* arena) const {
  DungeonEntryToBeExploreNotify* n = new DungeonEntryToBeExploreNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DungeonEntryToBeExploreNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DungeonEntryToBeExploreNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_entry_scene_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&dungeon_entry_scene_point_id_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool DungeonEntryToBeExploreNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DungeonEntryToBeExploreNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dungeon_entry_scene_point_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_entry_scene_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_entry_config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_entry_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DungeonEntryToBeExploreNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DungeonEntryToBeExploreNotify)
  return false;
#undef DO_
}

void DungeonEntryToBeExploreNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DungeonEntryToBeExploreNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dungeon_entry_scene_point_id = 1;
  if (this->dungeon_entry_scene_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dungeon_entry_scene_point_id(), output);
  }

  // uint32 dungeon_entry_config_id = 2;
  if (this->dungeon_entry_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dungeon_entry_config_id(), output);
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DungeonEntryToBeExploreNotify)
}

::google::protobuf::uint8* DungeonEntryToBeExploreNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DungeonEntryToBeExploreNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dungeon_entry_scene_point_id = 1;
  if (this->dungeon_entry_scene_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dungeon_entry_scene_point_id(), target);
  }

  // uint32 dungeon_entry_config_id = 2;
  if (this->dungeon_entry_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dungeon_entry_config_id(), target);
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DungeonEntryToBeExploreNotify)
  return target;
}

size_t DungeonEntryToBeExploreNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DungeonEntryToBeExploreNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 dungeon_entry_scene_point_id = 1;
  if (this->dungeon_entry_scene_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_entry_scene_point_id());
  }

  // uint32 dungeon_entry_config_id = 2;
  if (this->dungeon_entry_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_entry_config_id());
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonEntryToBeExploreNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DungeonEntryToBeExploreNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const DungeonEntryToBeExploreNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DungeonEntryToBeExploreNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DungeonEntryToBeExploreNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DungeonEntryToBeExploreNotify)
    MergeFrom(*source);
  }
}

void DungeonEntryToBeExploreNotify::MergeFrom(const DungeonEntryToBeExploreNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DungeonEntryToBeExploreNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_entry_scene_point_id() != 0) {
    set_dungeon_entry_scene_point_id(from.dungeon_entry_scene_point_id());
  }
  if (from.dungeon_entry_config_id() != 0) {
    set_dungeon_entry_config_id(from.dungeon_entry_config_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void DungeonEntryToBeExploreNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DungeonEntryToBeExploreNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonEntryToBeExploreNotify::CopyFrom(const DungeonEntryToBeExploreNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DungeonEntryToBeExploreNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonEntryToBeExploreNotify::IsInitialized() const {
  return true;
}

void DungeonEntryToBeExploreNotify::Swap(DungeonEntryToBeExploreNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DungeonEntryToBeExploreNotify::InternalSwap(DungeonEntryToBeExploreNotify* other) {
  using std::swap;
  swap(dungeon_entry_scene_point_id_, other->dungeon_entry_scene_point_id_);
  swap(dungeon_entry_config_id_, other->dungeon_entry_config_id_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DungeonEntryToBeExploreNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DungeonEntryToBeExploreNotify

// uint32 dungeon_entry_scene_point_id = 1;
void DungeonEntryToBeExploreNotify::clear_dungeon_entry_scene_point_id() {
  dungeon_entry_scene_point_id_ = 0u;
}
::google::protobuf::uint32 DungeonEntryToBeExploreNotify::dungeon_entry_scene_point_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.dungeon_entry_scene_point_id)
  return dungeon_entry_scene_point_id_;
}
void DungeonEntryToBeExploreNotify::set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_scene_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.dungeon_entry_scene_point_id)
}

// uint32 dungeon_entry_config_id = 2;
void DungeonEntryToBeExploreNotify::clear_dungeon_entry_config_id() {
  dungeon_entry_config_id_ = 0u;
}
::google::protobuf::uint32 DungeonEntryToBeExploreNotify::dungeon_entry_config_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.dungeon_entry_config_id)
  return dungeon_entry_config_id_;
}
void DungeonEntryToBeExploreNotify::set_dungeon_entry_config_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.dungeon_entry_config_id)
}

// uint32 scene_id = 3;
void DungeonEntryToBeExploreNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 DungeonEntryToBeExploreNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryToBeExploreNotify.scene_id)
  return scene_id_;
}
void DungeonEntryToBeExploreNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryToBeExploreNotify.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDungeonEntryExploreConditionReq::kDungeonEntryScenePointIdFieldNumber;
const int GetDungeonEntryExploreConditionReq::kDungeonEntryConfigIdFieldNumber;
const int GetDungeonEntryExploreConditionReq::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDungeonEntryExploreConditionReq::GetDungeonEntryExploreConditionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetDungeonEntryExploreConditionReq)
}
GetDungeonEntryExploreConditionReq::GetDungeonEntryExploreConditionReq(const GetDungeonEntryExploreConditionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_entry_scene_point_id_, &from.dungeon_entry_scene_point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&dungeon_entry_scene_point_id_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GetDungeonEntryExploreConditionReq)
}

void GetDungeonEntryExploreConditionReq::SharedCtor() {
  ::memset(&dungeon_entry_scene_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&dungeon_entry_scene_point_id_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

GetDungeonEntryExploreConditionReq::~GetDungeonEntryExploreConditionReq() {
  // @@protoc_insertion_point(destructor:proto.GetDungeonEntryExploreConditionReq)
  SharedDtor();
}

void GetDungeonEntryExploreConditionReq::SharedDtor() {
}

void GetDungeonEntryExploreConditionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDungeonEntryExploreConditionReq::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDungeonEntryExploreConditionReq& GetDungeonEntryExploreConditionReq::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetDungeonEntryExploreConditionReq* GetDungeonEntryExploreConditionReq::New(::google::protobuf::Arena* arena) const {
  GetDungeonEntryExploreConditionReq* n = new GetDungeonEntryExploreConditionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDungeonEntryExploreConditionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetDungeonEntryExploreConditionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_entry_scene_point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&dungeon_entry_scene_point_id_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool GetDungeonEntryExploreConditionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetDungeonEntryExploreConditionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dungeon_entry_scene_point_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_entry_scene_point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_entry_config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_entry_config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetDungeonEntryExploreConditionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetDungeonEntryExploreConditionReq)
  return false;
#undef DO_
}

void GetDungeonEntryExploreConditionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetDungeonEntryExploreConditionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dungeon_entry_scene_point_id = 1;
  if (this->dungeon_entry_scene_point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dungeon_entry_scene_point_id(), output);
  }

  // uint32 dungeon_entry_config_id = 2;
  if (this->dungeon_entry_config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dungeon_entry_config_id(), output);
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetDungeonEntryExploreConditionReq)
}

::google::protobuf::uint8* GetDungeonEntryExploreConditionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetDungeonEntryExploreConditionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dungeon_entry_scene_point_id = 1;
  if (this->dungeon_entry_scene_point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dungeon_entry_scene_point_id(), target);
  }

  // uint32 dungeon_entry_config_id = 2;
  if (this->dungeon_entry_config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dungeon_entry_config_id(), target);
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetDungeonEntryExploreConditionReq)
  return target;
}

size_t GetDungeonEntryExploreConditionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetDungeonEntryExploreConditionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 dungeon_entry_scene_point_id = 1;
  if (this->dungeon_entry_scene_point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_entry_scene_point_id());
  }

  // uint32 dungeon_entry_config_id = 2;
  if (this->dungeon_entry_config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_entry_config_id());
  }

  // uint32 scene_id = 3;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDungeonEntryExploreConditionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetDungeonEntryExploreConditionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDungeonEntryExploreConditionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDungeonEntryExploreConditionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetDungeonEntryExploreConditionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetDungeonEntryExploreConditionReq)
    MergeFrom(*source);
  }
}

void GetDungeonEntryExploreConditionReq::MergeFrom(const GetDungeonEntryExploreConditionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetDungeonEntryExploreConditionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_entry_scene_point_id() != 0) {
    set_dungeon_entry_scene_point_id(from.dungeon_entry_scene_point_id());
  }
  if (from.dungeon_entry_config_id() != 0) {
    set_dungeon_entry_config_id(from.dungeon_entry_config_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void GetDungeonEntryExploreConditionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetDungeonEntryExploreConditionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDungeonEntryExploreConditionReq::CopyFrom(const GetDungeonEntryExploreConditionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetDungeonEntryExploreConditionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDungeonEntryExploreConditionReq::IsInitialized() const {
  return true;
}

void GetDungeonEntryExploreConditionReq::Swap(GetDungeonEntryExploreConditionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDungeonEntryExploreConditionReq::InternalSwap(GetDungeonEntryExploreConditionReq* other) {
  using std::swap;
  swap(dungeon_entry_scene_point_id_, other->dungeon_entry_scene_point_id_);
  swap(dungeon_entry_config_id_, other->dungeon_entry_config_id_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDungeonEntryExploreConditionReq::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDungeonEntryExploreConditionReq

// uint32 dungeon_entry_scene_point_id = 1;
void GetDungeonEntryExploreConditionReq::clear_dungeon_entry_scene_point_id() {
  dungeon_entry_scene_point_id_ = 0u;
}
::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::dungeon_entry_scene_point_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_scene_point_id)
  return dungeon_entry_scene_point_id_;
}
void GetDungeonEntryExploreConditionReq::set_dungeon_entry_scene_point_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_scene_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_scene_point_id)
}

// uint32 dungeon_entry_config_id = 2;
void GetDungeonEntryExploreConditionReq::clear_dungeon_entry_config_id() {
  dungeon_entry_config_id_ = 0u;
}
::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::dungeon_entry_config_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_config_id)
  return dungeon_entry_config_id_;
}
void GetDungeonEntryExploreConditionReq::set_dungeon_entry_config_id(::google::protobuf::uint32 value) {
  
  dungeon_entry_config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.dungeon_entry_config_id)
}

// uint32 scene_id = 3;
void GetDungeonEntryExploreConditionReq::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 GetDungeonEntryExploreConditionReq::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionReq.scene_id)
  return scene_id_;
}
void GetDungeonEntryExploreConditionReq::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionReq.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DungeonEntryCond::kCondReasonFieldNumber;
const int DungeonEntryCond::kParam1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DungeonEntryCond::DungeonEntryCond()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DungeonEntryCond)
}
DungeonEntryCond::DungeonEntryCond(const DungeonEntryCond& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cond_reason_, &from.cond_reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&param1_) -
    reinterpret_cast<char*>(&cond_reason_)) + sizeof(param1_));
  // @@protoc_insertion_point(copy_constructor:proto.DungeonEntryCond)
}

void DungeonEntryCond::SharedCtor() {
  ::memset(&cond_reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param1_) -
      reinterpret_cast<char*>(&cond_reason_)) + sizeof(param1_));
  _cached_size_ = 0;
}

DungeonEntryCond::~DungeonEntryCond() {
  // @@protoc_insertion_point(destructor:proto.DungeonEntryCond)
  SharedDtor();
}

void DungeonEntryCond::SharedDtor() {
}

void DungeonEntryCond::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DungeonEntryCond::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DungeonEntryCond& DungeonEntryCond::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

DungeonEntryCond* DungeonEntryCond::New(::google::protobuf::Arena* arena) const {
  DungeonEntryCond* n = new DungeonEntryCond;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DungeonEntryCond::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DungeonEntryCond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cond_reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&param1_) -
      reinterpret_cast<char*>(&cond_reason_)) + sizeof(param1_));
  _internal_metadata_.Clear();
}

bool DungeonEntryCond::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DungeonEntryCond)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DungeonEntryBlockReason cond_reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cond_reason(static_cast< ::proto::DungeonEntryBlockReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 param1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &param1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DungeonEntryCond)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DungeonEntryCond)
  return false;
#undef DO_
}

void DungeonEntryCond::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DungeonEntryCond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DungeonEntryBlockReason cond_reason = 1;
  if (this->cond_reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cond_reason(), output);
  }

  // uint32 param1 = 2;
  if (this->param1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->param1(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DungeonEntryCond)
}

::google::protobuf::uint8* DungeonEntryCond::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DungeonEntryCond)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DungeonEntryBlockReason cond_reason = 1;
  if (this->cond_reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cond_reason(), target);
  }

  // uint32 param1 = 2;
  if (this->param1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->param1(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DungeonEntryCond)
  return target;
}

size_t DungeonEntryCond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DungeonEntryCond)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.DungeonEntryBlockReason cond_reason = 1;
  if (this->cond_reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cond_reason());
  }

  // uint32 param1 = 2;
  if (this->param1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->param1());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DungeonEntryCond::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DungeonEntryCond)
  GOOGLE_DCHECK_NE(&from, this);
  const DungeonEntryCond* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DungeonEntryCond>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DungeonEntryCond)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DungeonEntryCond)
    MergeFrom(*source);
  }
}

void DungeonEntryCond::MergeFrom(const DungeonEntryCond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DungeonEntryCond)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cond_reason() != 0) {
    set_cond_reason(from.cond_reason());
  }
  if (from.param1() != 0) {
    set_param1(from.param1());
  }
}

void DungeonEntryCond::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DungeonEntryCond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DungeonEntryCond::CopyFrom(const DungeonEntryCond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DungeonEntryCond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DungeonEntryCond::IsInitialized() const {
  return true;
}

void DungeonEntryCond::Swap(DungeonEntryCond* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DungeonEntryCond::InternalSwap(DungeonEntryCond* other) {
  using std::swap;
  swap(cond_reason_, other->cond_reason_);
  swap(param1_, other->param1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DungeonEntryCond::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DungeonEntryCond

// .proto.DungeonEntryBlockReason cond_reason = 1;
void DungeonEntryCond::clear_cond_reason() {
  cond_reason_ = 0;
}
::proto::DungeonEntryBlockReason DungeonEntryCond::cond_reason() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryCond.cond_reason)
  return static_cast< ::proto::DungeonEntryBlockReason >(cond_reason_);
}
void DungeonEntryCond::set_cond_reason(::proto::DungeonEntryBlockReason value) {
  
  cond_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryCond.cond_reason)
}

// uint32 param1 = 2;
void DungeonEntryCond::clear_param1() {
  param1_ = 0u;
}
::google::protobuf::uint32 DungeonEntryCond::param1() const {
  // @@protoc_insertion_point(field_get:proto.DungeonEntryCond.param1)
  return param1_;
}
void DungeonEntryCond::set_param1(::google::protobuf::uint32 value) {
  
  param1_ = value;
  // @@protoc_insertion_point(field_set:proto.DungeonEntryCond.param1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDungeonEntryExploreConditionRsp::kRetcodeFieldNumber;
const int GetDungeonEntryExploreConditionRsp::kDungeonEntryCondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDungeonEntryExploreConditionRsp::GetDungeonEntryExploreConditionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetDungeonEntryExploreConditionRsp)
}
GetDungeonEntryExploreConditionRsp::GetDungeonEntryExploreConditionRsp(const GetDungeonEntryExploreConditionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dungeon_entry_cond()) {
    dungeon_entry_cond_ = new ::proto::DungeonEntryCond(*from.dungeon_entry_cond_);
  } else {
    dungeon_entry_cond_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetDungeonEntryExploreConditionRsp)
}

void GetDungeonEntryExploreConditionRsp::SharedCtor() {
  ::memset(&dungeon_entry_cond_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&dungeon_entry_cond_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetDungeonEntryExploreConditionRsp::~GetDungeonEntryExploreConditionRsp() {
  // @@protoc_insertion_point(destructor:proto.GetDungeonEntryExploreConditionRsp)
  SharedDtor();
}

void GetDungeonEntryExploreConditionRsp::SharedDtor() {
  if (this != internal_default_instance()) delete dungeon_entry_cond_;
}

void GetDungeonEntryExploreConditionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDungeonEntryExploreConditionRsp::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDungeonEntryExploreConditionRsp& GetDungeonEntryExploreConditionRsp::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetDungeonEntryExploreConditionRsp* GetDungeonEntryExploreConditionRsp::New(::google::protobuf::Arena* arena) const {
  GetDungeonEntryExploreConditionRsp* n = new GetDungeonEntryExploreConditionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDungeonEntryExploreConditionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetDungeonEntryExploreConditionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dungeon_entry_cond_ != NULL) {
    delete dungeon_entry_cond_;
  }
  dungeon_entry_cond_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetDungeonEntryExploreConditionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetDungeonEntryExploreConditionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DungeonEntryCond dungeon_entry_cond = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dungeon_entry_cond()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetDungeonEntryExploreConditionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetDungeonEntryExploreConditionRsp)
  return false;
#undef DO_
}

void GetDungeonEntryExploreConditionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetDungeonEntryExploreConditionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.DungeonEntryCond dungeon_entry_cond = 2;
  if (this->has_dungeon_entry_cond()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dungeon_entry_cond_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetDungeonEntryExploreConditionRsp)
}

::google::protobuf::uint8* GetDungeonEntryExploreConditionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetDungeonEntryExploreConditionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.DungeonEntryCond dungeon_entry_cond = 2;
  if (this->has_dungeon_entry_cond()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dungeon_entry_cond_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetDungeonEntryExploreConditionRsp)
  return target;
}

size_t GetDungeonEntryExploreConditionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetDungeonEntryExploreConditionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.DungeonEntryCond dungeon_entry_cond = 2;
  if (this->has_dungeon_entry_cond()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dungeon_entry_cond_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDungeonEntryExploreConditionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetDungeonEntryExploreConditionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDungeonEntryExploreConditionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDungeonEntryExploreConditionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetDungeonEntryExploreConditionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetDungeonEntryExploreConditionRsp)
    MergeFrom(*source);
  }
}

void GetDungeonEntryExploreConditionRsp::MergeFrom(const GetDungeonEntryExploreConditionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetDungeonEntryExploreConditionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dungeon_entry_cond()) {
    mutable_dungeon_entry_cond()->::proto::DungeonEntryCond::MergeFrom(from.dungeon_entry_cond());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetDungeonEntryExploreConditionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetDungeonEntryExploreConditionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDungeonEntryExploreConditionRsp::CopyFrom(const GetDungeonEntryExploreConditionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetDungeonEntryExploreConditionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDungeonEntryExploreConditionRsp::IsInitialized() const {
  return true;
}

void GetDungeonEntryExploreConditionRsp::Swap(GetDungeonEntryExploreConditionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDungeonEntryExploreConditionRsp::InternalSwap(GetDungeonEntryExploreConditionRsp* other) {
  using std::swap;
  swap(dungeon_entry_cond_, other->dungeon_entry_cond_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDungeonEntryExploreConditionRsp::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDungeonEntryExploreConditionRsp

// int32 retcode = 1;
void GetDungeonEntryExploreConditionRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetDungeonEntryExploreConditionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionRsp.retcode)
  return retcode_;
}
void GetDungeonEntryExploreConditionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetDungeonEntryExploreConditionRsp.retcode)
}

// .proto.DungeonEntryCond dungeon_entry_cond = 2;
bool GetDungeonEntryExploreConditionRsp::has_dungeon_entry_cond() const {
  return this != internal_default_instance() && dungeon_entry_cond_ != NULL;
}
void GetDungeonEntryExploreConditionRsp::clear_dungeon_entry_cond() {
  if (GetArenaNoVirtual() == NULL && dungeon_entry_cond_ != NULL) delete dungeon_entry_cond_;
  dungeon_entry_cond_ = NULL;
}
const ::proto::DungeonEntryCond& GetDungeonEntryExploreConditionRsp::dungeon_entry_cond() const {
  const ::proto::DungeonEntryCond* p = dungeon_entry_cond_;
  // @@protoc_insertion_point(field_get:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DungeonEntryCond*>(
      &::proto::_DungeonEntryCond_default_instance_);
}
::proto::DungeonEntryCond* GetDungeonEntryExploreConditionRsp::mutable_dungeon_entry_cond() {
  
  if (dungeon_entry_cond_ == NULL) {
    dungeon_entry_cond_ = new ::proto::DungeonEntryCond;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  return dungeon_entry_cond_;
}
::proto::DungeonEntryCond* GetDungeonEntryExploreConditionRsp::release_dungeon_entry_cond() {
  // @@protoc_insertion_point(field_release:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
  
  ::proto::DungeonEntryCond* temp = dungeon_entry_cond_;
  dungeon_entry_cond_ = NULL;
  return temp;
}
void GetDungeonEntryExploreConditionRsp::set_allocated_dungeon_entry_cond(::proto::DungeonEntryCond* dungeon_entry_cond) {
  delete dungeon_entry_cond_;
  dungeon_entry_cond_ = dungeon_entry_cond;
  if (dungeon_entry_cond) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetDungeonEntryExploreConditionRsp.dungeon_entry_cond)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnfreezeGroupLimitNotify::kPointIdFieldNumber;
const int UnfreezeGroupLimitNotify::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnfreezeGroupLimitNotify::UnfreezeGroupLimitNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnfreezeGroupLimitNotify)
}
UnfreezeGroupLimitNotify::UnfreezeGroupLimitNotify(const UnfreezeGroupLimitNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&point_id_, &from.point_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&scene_id_) -
    reinterpret_cast<char*>(&point_id_)) + sizeof(scene_id_));
  // @@protoc_insertion_point(copy_constructor:proto.UnfreezeGroupLimitNotify)
}

void UnfreezeGroupLimitNotify::SharedCtor() {
  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(scene_id_));
  _cached_size_ = 0;
}

UnfreezeGroupLimitNotify::~UnfreezeGroupLimitNotify() {
  // @@protoc_insertion_point(destructor:proto.UnfreezeGroupLimitNotify)
  SharedDtor();
}

void UnfreezeGroupLimitNotify::SharedDtor() {
}

void UnfreezeGroupLimitNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnfreezeGroupLimitNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnfreezeGroupLimitNotify& UnfreezeGroupLimitNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnfreezeGroupLimitNotify* UnfreezeGroupLimitNotify::New(::google::protobuf::Arena* arena) const {
  UnfreezeGroupLimitNotify* n = new UnfreezeGroupLimitNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnfreezeGroupLimitNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnfreezeGroupLimitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&point_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_id_) -
      reinterpret_cast<char*>(&point_id_)) + sizeof(scene_id_));
  _internal_metadata_.Clear();
}

bool UnfreezeGroupLimitNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnfreezeGroupLimitNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 point_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scene_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnfreezeGroupLimitNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnfreezeGroupLimitNotify)
  return false;
#undef DO_
}

void UnfreezeGroupLimitNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnfreezeGroupLimitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->point_id(), output);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnfreezeGroupLimitNotify)
}

::google::protobuf::uint8* UnfreezeGroupLimitNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnfreezeGroupLimitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->point_id(), target);
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnfreezeGroupLimitNotify)
  return target;
}

size_t UnfreezeGroupLimitNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnfreezeGroupLimitNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 point_id = 1;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  // uint32 scene_id = 2;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnfreezeGroupLimitNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnfreezeGroupLimitNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UnfreezeGroupLimitNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnfreezeGroupLimitNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnfreezeGroupLimitNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnfreezeGroupLimitNotify)
    MergeFrom(*source);
  }
}

void UnfreezeGroupLimitNotify::MergeFrom(const UnfreezeGroupLimitNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnfreezeGroupLimitNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void UnfreezeGroupLimitNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnfreezeGroupLimitNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnfreezeGroupLimitNotify::CopyFrom(const UnfreezeGroupLimitNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnfreezeGroupLimitNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnfreezeGroupLimitNotify::IsInitialized() const {
  return true;
}

void UnfreezeGroupLimitNotify::Swap(UnfreezeGroupLimitNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnfreezeGroupLimitNotify::InternalSwap(UnfreezeGroupLimitNotify* other) {
  using std::swap;
  swap(point_id_, other->point_id_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnfreezeGroupLimitNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnfreezeGroupLimitNotify

// uint32 point_id = 1;
void UnfreezeGroupLimitNotify::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 UnfreezeGroupLimitNotify::point_id() const {
  // @@protoc_insertion_point(field_get:proto.UnfreezeGroupLimitNotify.point_id)
  return point_id_;
}
void UnfreezeGroupLimitNotify::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnfreezeGroupLimitNotify.point_id)
}

// uint32 scene_id = 2;
void UnfreezeGroupLimitNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 UnfreezeGroupLimitNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.UnfreezeGroupLimitNotify.scene_id)
  return scene_id_;
}
void UnfreezeGroupLimitNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnfreezeGroupLimitNotify.scene_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterWorldFogAreaNotify::kSceneIdFieldNumber;
const int EnterWorldFogAreaNotify::kFogAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterWorldFogAreaNotify::EnterWorldFogAreaNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.EnterWorldFogAreaNotify)
}
EnterWorldFogAreaNotify::EnterWorldFogAreaNotify(const EnterWorldFogAreaNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&scene_id_, &from.scene_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&fog_area_id_) -
    reinterpret_cast<char*>(&scene_id_)) + sizeof(fog_area_id_));
  // @@protoc_insertion_point(copy_constructor:proto.EnterWorldFogAreaNotify)
}

void EnterWorldFogAreaNotify::SharedCtor() {
  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fog_area_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(fog_area_id_));
  _cached_size_ = 0;
}

EnterWorldFogAreaNotify::~EnterWorldFogAreaNotify() {
  // @@protoc_insertion_point(destructor:proto.EnterWorldFogAreaNotify)
  SharedDtor();
}

void EnterWorldFogAreaNotify::SharedDtor() {
}

void EnterWorldFogAreaNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterWorldFogAreaNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterWorldFogAreaNotify& EnterWorldFogAreaNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterWorldFogAreaNotify* EnterWorldFogAreaNotify::New(::google::protobuf::Arena* arena) const {
  EnterWorldFogAreaNotify* n = new EnterWorldFogAreaNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterWorldFogAreaNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.EnterWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&scene_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fog_area_id_) -
      reinterpret_cast<char*>(&scene_id_)) + sizeof(fog_area_id_));
  _internal_metadata_.Clear();
}

bool EnterWorldFogAreaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.EnterWorldFogAreaNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 fog_area_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fog_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.EnterWorldFogAreaNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.EnterWorldFogAreaNotify)
  return false;
#undef DO_
}

void EnterWorldFogAreaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.EnterWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // uint32 fog_area_id = 2;
  if (this->fog_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->fog_area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.EnterWorldFogAreaNotify)
}

::google::protobuf::uint8* EnterWorldFogAreaNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.EnterWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // uint32 fog_area_id = 2;
  if (this->fog_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->fog_area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.EnterWorldFogAreaNotify)
  return target;
}

size_t EnterWorldFogAreaNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.EnterWorldFogAreaNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  // uint32 fog_area_id = 2;
  if (this->fog_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->fog_area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterWorldFogAreaNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.EnterWorldFogAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterWorldFogAreaNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterWorldFogAreaNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.EnterWorldFogAreaNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.EnterWorldFogAreaNotify)
    MergeFrom(*source);
  }
}

void EnterWorldFogAreaNotify::MergeFrom(const EnterWorldFogAreaNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.EnterWorldFogAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
  if (from.fog_area_id() != 0) {
    set_fog_area_id(from.fog_area_id());
  }
}

void EnterWorldFogAreaNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.EnterWorldFogAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterWorldFogAreaNotify::CopyFrom(const EnterWorldFogAreaNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.EnterWorldFogAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterWorldFogAreaNotify::IsInitialized() const {
  return true;
}

void EnterWorldFogAreaNotify::Swap(EnterWorldFogAreaNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterWorldFogAreaNotify::InternalSwap(EnterWorldFogAreaNotify* other) {
  using std::swap;
  swap(scene_id_, other->scene_id_);
  swap(fog_area_id_, other->fog_area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterWorldFogAreaNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterWorldFogAreaNotify

// uint32 scene_id = 1;
void EnterWorldFogAreaNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 EnterWorldFogAreaNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldFogAreaNotify.scene_id)
  return scene_id_;
}
void EnterWorldFogAreaNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldFogAreaNotify.scene_id)
}

// uint32 fog_area_id = 2;
void EnterWorldFogAreaNotify::clear_fog_area_id() {
  fog_area_id_ = 0u;
}
::google::protobuf::uint32 EnterWorldFogAreaNotify::fog_area_id() const {
  // @@protoc_insertion_point(field_get:proto.EnterWorldFogAreaNotify.fog_area_id)
  return fog_area_id_;
}
void EnterWorldFogAreaNotify::set_fog_area_id(::google::protobuf::uint32 value) {
  
  fog_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.EnterWorldFogAreaNotify.fog_area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockWorldFogAreaNotify::kSceneIdFieldNumber;
const int UnlockWorldFogAreaNotify::kUnlockedFogLevel1AreaListFieldNumber;
const int UnlockWorldFogAreaNotify::kUnlockedFogLevel2AreaListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockWorldFogAreaNotify::UnlockWorldFogAreaNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnlockWorldFogAreaNotify)
}
UnlockWorldFogAreaNotify::UnlockWorldFogAreaNotify(const UnlockWorldFogAreaNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      unlocked_fog_level_1_area_list_(from.unlocked_fog_level_1_area_list_),
      unlocked_fog_level_2_area_list_(from.unlocked_fog_level_2_area_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.UnlockWorldFogAreaNotify)
}

void UnlockWorldFogAreaNotify::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

UnlockWorldFogAreaNotify::~UnlockWorldFogAreaNotify() {
  // @@protoc_insertion_point(destructor:proto.UnlockWorldFogAreaNotify)
  SharedDtor();
}

void UnlockWorldFogAreaNotify::SharedDtor() {
}

void UnlockWorldFogAreaNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockWorldFogAreaNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockWorldFogAreaNotify& UnlockWorldFogAreaNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockWorldFogAreaNotify* UnlockWorldFogAreaNotify::New(::google::protobuf::Arena* arena) const {
  UnlockWorldFogAreaNotify* n = new UnlockWorldFogAreaNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockWorldFogAreaNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnlockWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  unlocked_fog_level_1_area_list_.Clear();
  unlocked_fog_level_2_area_list_.Clear();
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool UnlockWorldFogAreaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnlockWorldFogAreaNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlocked_fog_level_1_area_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlocked_fog_level_1_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_unlocked_fog_level_1_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unlocked_fog_level_2_area_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unlocked_fog_level_2_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_unlocked_fog_level_2_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnlockWorldFogAreaNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnlockWorldFogAreaNotify)
  return false;
#undef DO_
}

void UnlockWorldFogAreaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnlockWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // repeated uint32 unlocked_fog_level_1_area_list = 2;
  if (this->unlocked_fog_level_1_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlocked_fog_level_1_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlocked_fog_level_1_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlocked_fog_level_1_area_list(i), output);
  }

  // repeated uint32 unlocked_fog_level_2_area_list = 3;
  if (this->unlocked_fog_level_2_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unlocked_fog_level_2_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unlocked_fog_level_2_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unlocked_fog_level_2_area_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnlockWorldFogAreaNotify)
}

::google::protobuf::uint8* UnlockWorldFogAreaNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnlockWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // repeated uint32 unlocked_fog_level_1_area_list = 2;
  if (this->unlocked_fog_level_1_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlocked_fog_level_1_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlocked_fog_level_1_area_list_, target);
  }

  // repeated uint32 unlocked_fog_level_2_area_list = 3;
  if (this->unlocked_fog_level_2_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unlocked_fog_level_2_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unlocked_fog_level_2_area_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnlockWorldFogAreaNotify)
  return target;
}

size_t UnlockWorldFogAreaNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnlockWorldFogAreaNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 unlocked_fog_level_1_area_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlocked_fog_level_1_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlocked_fog_level_1_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 unlocked_fog_level_2_area_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unlocked_fog_level_2_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unlocked_fog_level_2_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockWorldFogAreaNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnlockWorldFogAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockWorldFogAreaNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockWorldFogAreaNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnlockWorldFogAreaNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnlockWorldFogAreaNotify)
    MergeFrom(*source);
  }
}

void UnlockWorldFogAreaNotify::MergeFrom(const UnlockWorldFogAreaNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnlockWorldFogAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unlocked_fog_level_1_area_list_.MergeFrom(from.unlocked_fog_level_1_area_list_);
  unlocked_fog_level_2_area_list_.MergeFrom(from.unlocked_fog_level_2_area_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void UnlockWorldFogAreaNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnlockWorldFogAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockWorldFogAreaNotify::CopyFrom(const UnlockWorldFogAreaNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnlockWorldFogAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockWorldFogAreaNotify::IsInitialized() const {
  return true;
}

void UnlockWorldFogAreaNotify::Swap(UnlockWorldFogAreaNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockWorldFogAreaNotify::InternalSwap(UnlockWorldFogAreaNotify* other) {
  using std::swap;
  unlocked_fog_level_1_area_list_.InternalSwap(&other->unlocked_fog_level_1_area_list_);
  unlocked_fog_level_2_area_list_.InternalSwap(&other->unlocked_fog_level_2_area_list_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockWorldFogAreaNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockWorldFogAreaNotify

// uint32 scene_id = 1;
void UnlockWorldFogAreaNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 UnlockWorldFogAreaNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockWorldFogAreaNotify.scene_id)
  return scene_id_;
}
void UnlockWorldFogAreaNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockWorldFogAreaNotify.scene_id)
}

// repeated uint32 unlocked_fog_level_1_area_list = 2;
int UnlockWorldFogAreaNotify::unlocked_fog_level_1_area_list_size() const {
  return unlocked_fog_level_1_area_list_.size();
}
void UnlockWorldFogAreaNotify::clear_unlocked_fog_level_1_area_list() {
  unlocked_fog_level_1_area_list_.Clear();
}
::google::protobuf::uint32 UnlockWorldFogAreaNotify::unlocked_fog_level_1_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
  return unlocked_fog_level_1_area_list_.Get(index);
}
void UnlockWorldFogAreaNotify::set_unlocked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value) {
  unlocked_fog_level_1_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
}
void UnlockWorldFogAreaNotify::add_unlocked_fog_level_1_area_list(::google::protobuf::uint32 value) {
  unlocked_fog_level_1_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UnlockWorldFogAreaNotify::unlocked_fog_level_1_area_list() const {
  // @@protoc_insertion_point(field_list:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
  return unlocked_fog_level_1_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UnlockWorldFogAreaNotify::mutable_unlocked_fog_level_1_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_1_area_list)
  return &unlocked_fog_level_1_area_list_;
}

// repeated uint32 unlocked_fog_level_2_area_list = 3;
int UnlockWorldFogAreaNotify::unlocked_fog_level_2_area_list_size() const {
  return unlocked_fog_level_2_area_list_.size();
}
void UnlockWorldFogAreaNotify::clear_unlocked_fog_level_2_area_list() {
  unlocked_fog_level_2_area_list_.Clear();
}
::google::protobuf::uint32 UnlockWorldFogAreaNotify::unlocked_fog_level_2_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
  return unlocked_fog_level_2_area_list_.Get(index);
}
void UnlockWorldFogAreaNotify::set_unlocked_fog_level_2_area_list(int index, ::google::protobuf::uint32 value) {
  unlocked_fog_level_2_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
}
void UnlockWorldFogAreaNotify::add_unlocked_fog_level_2_area_list(::google::protobuf::uint32 value) {
  unlocked_fog_level_2_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UnlockWorldFogAreaNotify::unlocked_fog_level_2_area_list() const {
  // @@protoc_insertion_point(field_list:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
  return unlocked_fog_level_2_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UnlockWorldFogAreaNotify::mutable_unlocked_fog_level_2_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UnlockWorldFogAreaNotify.unlocked_fog_level_2_area_list)
  return &unlocked_fog_level_2_area_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockWorldFogAreaNotify::kSceneIdFieldNumber;
const int LockWorldFogAreaNotify::kLockedFogLevel1AreaListFieldNumber;
const int LockWorldFogAreaNotify::kLockedFogLevel2AreaListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockWorldFogAreaNotify::LockWorldFogAreaNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.LockWorldFogAreaNotify)
}
LockWorldFogAreaNotify::LockWorldFogAreaNotify(const LockWorldFogAreaNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      locked_fog_level_1_area_list_(from.locked_fog_level_1_area_list_),
      locked_fog_level_2_area_list_(from.locked_fog_level_2_area_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scene_id_ = from.scene_id_;
  // @@protoc_insertion_point(copy_constructor:proto.LockWorldFogAreaNotify)
}

void LockWorldFogAreaNotify::SharedCtor() {
  scene_id_ = 0u;
  _cached_size_ = 0;
}

LockWorldFogAreaNotify::~LockWorldFogAreaNotify() {
  // @@protoc_insertion_point(destructor:proto.LockWorldFogAreaNotify)
  SharedDtor();
}

void LockWorldFogAreaNotify::SharedDtor() {
}

void LockWorldFogAreaNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockWorldFogAreaNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockWorldFogAreaNotify& LockWorldFogAreaNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

LockWorldFogAreaNotify* LockWorldFogAreaNotify::New(::google::protobuf::Arena* arena) const {
  LockWorldFogAreaNotify* n = new LockWorldFogAreaNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockWorldFogAreaNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.LockWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locked_fog_level_1_area_list_.Clear();
  locked_fog_level_2_area_list_.Clear();
  scene_id_ = 0u;
  _internal_metadata_.Clear();
}

bool LockWorldFogAreaNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.LockWorldFogAreaNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 scene_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 locked_fog_level_1_area_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_locked_fog_level_1_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_locked_fog_level_1_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 locked_fog_level_2_area_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_locked_fog_level_2_area_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_locked_fog_level_2_area_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.LockWorldFogAreaNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.LockWorldFogAreaNotify)
  return false;
#undef DO_
}

void LockWorldFogAreaNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.LockWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->scene_id(), output);
  }

  // repeated uint32 locked_fog_level_1_area_list = 2;
  if (this->locked_fog_level_1_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _locked_fog_level_1_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->locked_fog_level_1_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->locked_fog_level_1_area_list(i), output);
  }

  // repeated uint32 locked_fog_level_2_area_list = 3;
  if (this->locked_fog_level_2_area_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _locked_fog_level_2_area_list_cached_byte_size_));
  }
  for (int i = 0, n = this->locked_fog_level_2_area_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->locked_fog_level_2_area_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.LockWorldFogAreaNotify)
}

::google::protobuf::uint8* LockWorldFogAreaNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.LockWorldFogAreaNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->scene_id(), target);
  }

  // repeated uint32 locked_fog_level_1_area_list = 2;
  if (this->locked_fog_level_1_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _locked_fog_level_1_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->locked_fog_level_1_area_list_, target);
  }

  // repeated uint32 locked_fog_level_2_area_list = 3;
  if (this->locked_fog_level_2_area_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _locked_fog_level_2_area_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->locked_fog_level_2_area_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.LockWorldFogAreaNotify)
  return target;
}

size_t LockWorldFogAreaNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.LockWorldFogAreaNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 locked_fog_level_1_area_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->locked_fog_level_1_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _locked_fog_level_1_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 locked_fog_level_2_area_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->locked_fog_level_2_area_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _locked_fog_level_2_area_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 scene_id = 1;
  if (this->scene_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockWorldFogAreaNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.LockWorldFogAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const LockWorldFogAreaNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockWorldFogAreaNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.LockWorldFogAreaNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.LockWorldFogAreaNotify)
    MergeFrom(*source);
  }
}

void LockWorldFogAreaNotify::MergeFrom(const LockWorldFogAreaNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.LockWorldFogAreaNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locked_fog_level_1_area_list_.MergeFrom(from.locked_fog_level_1_area_list_);
  locked_fog_level_2_area_list_.MergeFrom(from.locked_fog_level_2_area_list_);
  if (from.scene_id() != 0) {
    set_scene_id(from.scene_id());
  }
}

void LockWorldFogAreaNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.LockWorldFogAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockWorldFogAreaNotify::CopyFrom(const LockWorldFogAreaNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.LockWorldFogAreaNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockWorldFogAreaNotify::IsInitialized() const {
  return true;
}

void LockWorldFogAreaNotify::Swap(LockWorldFogAreaNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockWorldFogAreaNotify::InternalSwap(LockWorldFogAreaNotify* other) {
  using std::swap;
  locked_fog_level_1_area_list_.InternalSwap(&other->locked_fog_level_1_area_list_);
  locked_fog_level_2_area_list_.InternalSwap(&other->locked_fog_level_2_area_list_);
  swap(scene_id_, other->scene_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockWorldFogAreaNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LockWorldFogAreaNotify

// uint32 scene_id = 1;
void LockWorldFogAreaNotify::clear_scene_id() {
  scene_id_ = 0u;
}
::google::protobuf::uint32 LockWorldFogAreaNotify::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.LockWorldFogAreaNotify.scene_id)
  return scene_id_;
}
void LockWorldFogAreaNotify::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LockWorldFogAreaNotify.scene_id)
}

// repeated uint32 locked_fog_level_1_area_list = 2;
int LockWorldFogAreaNotify::locked_fog_level_1_area_list_size() const {
  return locked_fog_level_1_area_list_.size();
}
void LockWorldFogAreaNotify::clear_locked_fog_level_1_area_list() {
  locked_fog_level_1_area_list_.Clear();
}
::google::protobuf::uint32 LockWorldFogAreaNotify::locked_fog_level_1_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
  return locked_fog_level_1_area_list_.Get(index);
}
void LockWorldFogAreaNotify::set_locked_fog_level_1_area_list(int index, ::google::protobuf::uint32 value) {
  locked_fog_level_1_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
}
void LockWorldFogAreaNotify::add_locked_fog_level_1_area_list(::google::protobuf::uint32 value) {
  locked_fog_level_1_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LockWorldFogAreaNotify::locked_fog_level_1_area_list() const {
  // @@protoc_insertion_point(field_list:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
  return locked_fog_level_1_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LockWorldFogAreaNotify::mutable_locked_fog_level_1_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.LockWorldFogAreaNotify.locked_fog_level_1_area_list)
  return &locked_fog_level_1_area_list_;
}

// repeated uint32 locked_fog_level_2_area_list = 3;
int LockWorldFogAreaNotify::locked_fog_level_2_area_list_size() const {
  return locked_fog_level_2_area_list_.size();
}
void LockWorldFogAreaNotify::clear_locked_fog_level_2_area_list() {
  locked_fog_level_2_area_list_.Clear();
}
::google::protobuf::uint32 LockWorldFogAreaNotify::locked_fog_level_2_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
  return locked_fog_level_2_area_list_.Get(index);
}
void LockWorldFogAreaNotify::set_locked_fog_level_2_area_list(int index, ::google::protobuf::uint32 value) {
  locked_fog_level_2_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
}
void LockWorldFogAreaNotify::add_locked_fog_level_2_area_list(::google::protobuf::uint32 value) {
  locked_fog_level_2_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LockWorldFogAreaNotify::locked_fog_level_2_area_list() const {
  // @@protoc_insertion_point(field_list:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
  return locked_fog_level_2_area_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LockWorldFogAreaNotify::mutable_locked_fog_level_2_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.LockWorldFogAreaNotify.locked_fog_level_2_area_list)
  return &locked_fog_level_2_area_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetEntityClientDataNotify::kEntityIdFieldNumber;
const int SetEntityClientDataNotify::kEntityClientDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetEntityClientDataNotify::SetEntityClientDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SetEntityClientDataNotify)
}
SetEntityClientDataNotify::SetEntityClientDataNotify(const SetEntityClientDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_client_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.entity_client_data().size() > 0) {
    entity_client_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_client_data_);
  }
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SetEntityClientDataNotify)
}

void SetEntityClientDataNotify::SharedCtor() {
  entity_client_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_id_ = 0u;
  _cached_size_ = 0;
}

SetEntityClientDataNotify::~SetEntityClientDataNotify() {
  // @@protoc_insertion_point(destructor:proto.SetEntityClientDataNotify)
  SharedDtor();
}

void SetEntityClientDataNotify::SharedDtor() {
  entity_client_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetEntityClientDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetEntityClientDataNotify::descriptor() {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetEntityClientDataNotify& SetEntityClientDataNotify::default_instance() {
  protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetEntityClientDataNotify* SetEntityClientDataNotify::New(::google::protobuf::Arena* arena) const {
  SetEntityClientDataNotify* n = new SetEntityClientDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetEntityClientDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SetEntityClientDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_client_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SetEntityClientDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SetEntityClientDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes entity_client_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_entity_client_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SetEntityClientDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SetEntityClientDataNotify)
  return false;
#undef DO_
}

void SetEntityClientDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SetEntityClientDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // bytes entity_client_data = 2;
  if (this->entity_client_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->entity_client_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SetEntityClientDataNotify)
}

::google::protobuf::uint8* SetEntityClientDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SetEntityClientDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // bytes entity_client_data = 2;
  if (this->entity_client_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->entity_client_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SetEntityClientDataNotify)
  return target;
}

size_t SetEntityClientDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SetEntityClientDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes entity_client_data = 2;
  if (this->entity_client_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->entity_client_data());
  }

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetEntityClientDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SetEntityClientDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SetEntityClientDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetEntityClientDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SetEntityClientDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SetEntityClientDataNotify)
    MergeFrom(*source);
  }
}

void SetEntityClientDataNotify::MergeFrom(const SetEntityClientDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SetEntityClientDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_client_data().size() > 0) {

    entity_client_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.entity_client_data_);
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void SetEntityClientDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SetEntityClientDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetEntityClientDataNotify::CopyFrom(const SetEntityClientDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SetEntityClientDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetEntityClientDataNotify::IsInitialized() const {
  return true;
}

void SetEntityClientDataNotify::Swap(SetEntityClientDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetEntityClientDataNotify::InternalSwap(SetEntityClientDataNotify* other) {
  using std::swap;
  entity_client_data_.Swap(&other->entity_client_data_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetEntityClientDataNotify::GetMetadata() const {
  protobuf_cmd_2fcmd_5fscene_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_cmd_2fcmd_5fscene_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetEntityClientDataNotify

// uint32 entity_id = 1;
void SetEntityClientDataNotify::clear_entity_id() {
  entity_id_ = 0u;
}
::google::protobuf::uint32 SetEntityClientDataNotify::entity_id() const {
  // @@protoc_insertion_point(field_get:proto.SetEntityClientDataNotify.entity_id)
  return entity_id_;
}
void SetEntityClientDataNotify::set_entity_id(::google::protobuf::uint32 value) {
  
  entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetEntityClientDataNotify.entity_id)
}

// bytes entity_client_data = 2;
void SetEntityClientDataNotify::clear_entity_client_data() {
  entity_client_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetEntityClientDataNotify::entity_client_data() const {
  // @@protoc_insertion_point(field_get:proto.SetEntityClientDataNotify.entity_client_data)
  return entity_client_data_.GetNoArena();
}
void SetEntityClientDataNotify::set_entity_client_data(const ::std::string& value) {
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetEntityClientDataNotify.entity_client_data)
}
#if LANG_CXX11
void SetEntityClientDataNotify::set_entity_client_data(::std::string&& value) {
  
  entity_client_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetEntityClientDataNotify.entity_client_data)
}
#endif
void SetEntityClientDataNotify::set_entity_client_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetEntityClientDataNotify.entity_client_data)
}
void SetEntityClientDataNotify::set_entity_client_data(const void* value, size_t size) {
  
  entity_client_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetEntityClientDataNotify.entity_client_data)
}
::std::string* SetEntityClientDataNotify::mutable_entity_client_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetEntityClientDataNotify.entity_client_data)
  return entity_client_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetEntityClientDataNotify::release_entity_client_data() {
  // @@protoc_insertion_point(field_release:proto.SetEntityClientDataNotify.entity_client_data)
  
  return entity_client_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetEntityClientDataNotify::set_allocated_entity_client_data(::std::string* entity_client_data) {
  if (entity_client_data != NULL) {
    
  } else {
    
  }
  entity_client_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entity_client_data);
  // @@protoc_insertion_point(field_set_allocated:proto.SetEntityClientDataNotify.entity_client_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
