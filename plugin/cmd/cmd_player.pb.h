// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/cmd_player.proto

#ifndef PROTOBUF_cmd_2fcmd_5fplayer_2eproto__INCLUDED
#define PROTOBUF_cmd_2fcmd_5fplayer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AddRandTaskInfoNotify;
class AddRandTaskInfoNotifyDefaultTypeInternal;
extern AddRandTaskInfoNotifyDefaultTypeInternal _AddRandTaskInfoNotify_default_instance_;
class ChangeGameTimeReq;
class ChangeGameTimeReqDefaultTypeInternal;
extern ChangeGameTimeReqDefaultTypeInternal _ChangeGameTimeReq_default_instance_;
class ChangeGameTimeRsp;
class ChangeGameTimeRspDefaultTypeInternal;
extern ChangeGameTimeRspDefaultTypeInternal _ChangeGameTimeRsp_default_instance_;
class ClientTriggerEventNotify;
class ClientTriggerEventNotifyDefaultTypeInternal;
extern ClientTriggerEventNotifyDefaultTypeInternal _ClientTriggerEventNotify_default_instance_;
class CompoundDataNotify;
class CompoundDataNotifyDefaultTypeInternal;
extern CompoundDataNotifyDefaultTypeInternal _CompoundDataNotify_default_instance_;
class CompoundQueueData;
class CompoundQueueDataDefaultTypeInternal;
extern CompoundQueueDataDefaultTypeInternal _CompoundQueueData_default_instance_;
class CookDataNotify;
class CookDataNotifyDefaultTypeInternal;
extern CookDataNotifyDefaultTypeInternal _CookDataNotify_default_instance_;
class CookGradeDataNotify;
class CookGradeDataNotifyDefaultTypeInternal;
extern CookGradeDataNotifyDefaultTypeInternal _CookGradeDataNotify_default_instance_;
class CookRecipeData;
class CookRecipeDataDefaultTypeInternal;
extern CookRecipeDataDefaultTypeInternal _CookRecipeData_default_instance_;
class CookRecipeDataNotify;
class CookRecipeDataNotifyDefaultTypeInternal;
extern CookRecipeDataNotifyDefaultTypeInternal _CookRecipeDataNotify_default_instance_;
class DailyTaskDataNotify;
class DailyTaskDataNotifyDefaultTypeInternal;
extern DailyTaskDataNotifyDefaultTypeInternal _DailyTaskDataNotify_default_instance_;
class DailyTaskInfo;
class DailyTaskInfoDefaultTypeInternal;
extern DailyTaskInfoDefaultTypeInternal _DailyTaskInfo_default_instance_;
class DailyTaskProgressNotify;
class DailyTaskProgressNotifyDefaultTypeInternal;
extern DailyTaskProgressNotifyDefaultTypeInternal _DailyTaskProgressNotify_default_instance_;
class DailyTaskScoreRewardNotify;
class DailyTaskScoreRewardNotifyDefaultTypeInternal;
extern DailyTaskScoreRewardNotifyDefaultTypeInternal _DailyTaskScoreRewardNotify_default_instance_;
class DataResVersionNotify;
class DataResVersionNotifyDefaultTypeInternal;
extern DataResVersionNotifyDefaultTypeInternal _DataResVersionNotify_default_instance_;
class DoSetPlayerBornDataNotify;
class DoSetPlayerBornDataNotifyDefaultTypeInternal;
extern DoSetPlayerBornDataNotifyDefaultTypeInternal _DoSetPlayerBornDataNotify_default_instance_;
class GetCompoundDataReq;
class GetCompoundDataReqDefaultTypeInternal;
extern GetCompoundDataReqDefaultTypeInternal _GetCompoundDataReq_default_instance_;
class GetCompoundDataRsp;
class GetCompoundDataRspDefaultTypeInternal;
extern GetCompoundDataRspDefaultTypeInternal _GetCompoundDataRsp_default_instance_;
class GetPlayerTokenReq;
class GetPlayerTokenReqDefaultTypeInternal;
extern GetPlayerTokenReqDefaultTypeInternal _GetPlayerTokenReq_default_instance_;
class GetPlayerTokenRsp;
class GetPlayerTokenRspDefaultTypeInternal;
extern GetPlayerTokenRspDefaultTypeInternal _GetPlayerTokenRsp_default_instance_;
class GivingRecord;
class GivingRecordDefaultTypeInternal;
extern GivingRecordDefaultTypeInternal _GivingRecord_default_instance_;
class GivingRecordChangeNotify;
class GivingRecordChangeNotifyDefaultTypeInternal;
extern GivingRecordChangeNotifyDefaultTypeInternal _GivingRecordChangeNotify_default_instance_;
class GivingRecordNotify;
class GivingRecordNotifyDefaultTypeInternal;
extern GivingRecordNotifyDefaultTypeInternal _GivingRecordNotify_default_instance_;
class ItemGivingReq;
class ItemGivingReqDefaultTypeInternal;
extern ItemGivingReqDefaultTypeInternal _ItemGivingReq_default_instance_;
class ItemGivingReq_ItemGuidCountMapEntry;
class ItemGivingReq_ItemGuidCountMapEntryDefaultTypeInternal;
extern ItemGivingReq_ItemGuidCountMapEntryDefaultTypeInternal _ItemGivingReq_ItemGuidCountMapEntry_default_instance_;
class ItemGivingRsp;
class ItemGivingRspDefaultTypeInternal;
extern ItemGivingRspDefaultTypeInternal _ItemGivingRsp_default_instance_;
class OpenStateChangeNotify;
class OpenStateChangeNotifyDefaultTypeInternal;
extern OpenStateChangeNotifyDefaultTypeInternal _OpenStateChangeNotify_default_instance_;
class OpenStateChangeNotify_OpenStateMapEntry;
class OpenStateChangeNotify_OpenStateMapEntryDefaultTypeInternal;
extern OpenStateChangeNotify_OpenStateMapEntryDefaultTypeInternal _OpenStateChangeNotify_OpenStateMapEntry_default_instance_;
class OpenStateUpdateNotify;
class OpenStateUpdateNotifyDefaultTypeInternal;
extern OpenStateUpdateNotifyDefaultTypeInternal _OpenStateUpdateNotify_default_instance_;
class OpenStateUpdateNotify_OpenStateMapEntry;
class OpenStateUpdateNotify_OpenStateMapEntryDefaultTypeInternal;
extern OpenStateUpdateNotify_OpenStateMapEntryDefaultTypeInternal _OpenStateUpdateNotify_OpenStateMapEntry_default_instance_;
class PlayerCompoundMaterialReq;
class PlayerCompoundMaterialReqDefaultTypeInternal;
extern PlayerCompoundMaterialReqDefaultTypeInternal _PlayerCompoundMaterialReq_default_instance_;
class PlayerCompoundMaterialRsp;
class PlayerCompoundMaterialRspDefaultTypeInternal;
extern PlayerCompoundMaterialRspDefaultTypeInternal _PlayerCompoundMaterialRsp_default_instance_;
class PlayerCookArgsReq;
class PlayerCookArgsReqDefaultTypeInternal;
extern PlayerCookArgsReqDefaultTypeInternal _PlayerCookArgsReq_default_instance_;
class PlayerCookArgsRsp;
class PlayerCookArgsRspDefaultTypeInternal;
extern PlayerCookArgsRspDefaultTypeInternal _PlayerCookArgsRsp_default_instance_;
class PlayerCookReq;
class PlayerCookReqDefaultTypeInternal;
extern PlayerCookReqDefaultTypeInternal _PlayerCookReq_default_instance_;
class PlayerCookRsp;
class PlayerCookRspDefaultTypeInternal;
extern PlayerCookRspDefaultTypeInternal _PlayerCookRsp_default_instance_;
class PlayerDataNotify;
class PlayerDataNotifyDefaultTypeInternal;
extern PlayerDataNotifyDefaultTypeInternal _PlayerDataNotify_default_instance_;
class PlayerDataNotify_PropMapEntry;
class PlayerDataNotify_PropMapEntryDefaultTypeInternal;
extern PlayerDataNotify_PropMapEntryDefaultTypeInternal _PlayerDataNotify_PropMapEntry_default_instance_;
class PlayerGameTimeNotify;
class PlayerGameTimeNotifyDefaultTypeInternal;
extern PlayerGameTimeNotifyDefaultTypeInternal _PlayerGameTimeNotify_default_instance_;
class PlayerLevelRewardUpdateNotify;
class PlayerLevelRewardUpdateNotifyDefaultTypeInternal;
extern PlayerLevelRewardUpdateNotifyDefaultTypeInternal _PlayerLevelRewardUpdateNotify_default_instance_;
class PlayerLoginReq;
class PlayerLoginReqDefaultTypeInternal;
extern PlayerLoginReqDefaultTypeInternal _PlayerLoginReq_default_instance_;
class PlayerLoginRsp;
class PlayerLoginRspDefaultTypeInternal;
extern PlayerLoginRspDefaultTypeInternal _PlayerLoginRsp_default_instance_;
class PlayerLoginRsp_AbilityHashMapEntry;
class PlayerLoginRsp_AbilityHashMapEntryDefaultTypeInternal;
extern PlayerLoginRsp_AbilityHashMapEntryDefaultTypeInternal _PlayerLoginRsp_AbilityHashMapEntry_default_instance_;
class PlayerLoginRsp_BlockInfoMapEntry;
class PlayerLoginRsp_BlockInfoMapEntryDefaultTypeInternal;
extern PlayerLoginRsp_BlockInfoMapEntryDefaultTypeInternal _PlayerLoginRsp_BlockInfoMapEntry_default_instance_;
class PlayerLogoutNotify;
class PlayerLogoutNotifyDefaultTypeInternal;
extern PlayerLogoutNotifyDefaultTypeInternal _PlayerLogoutNotify_default_instance_;
class PlayerLogoutReq;
class PlayerLogoutReqDefaultTypeInternal;
extern PlayerLogoutReqDefaultTypeInternal _PlayerLogoutReq_default_instance_;
class PlayerLogoutRsp;
class PlayerLogoutRspDefaultTypeInternal;
extern PlayerLogoutRspDefaultTypeInternal _PlayerLogoutRsp_default_instance_;
class PlayerLuaShellNotify;
class PlayerLuaShellNotifyDefaultTypeInternal;
extern PlayerLuaShellNotifyDefaultTypeInternal _PlayerLuaShellNotify_default_instance_;
class PlayerPropChangeNotify;
class PlayerPropChangeNotifyDefaultTypeInternal;
extern PlayerPropChangeNotifyDefaultTypeInternal _PlayerPropChangeNotify_default_instance_;
class PlayerPropNotify;
class PlayerPropNotifyDefaultTypeInternal;
extern PlayerPropNotifyDefaultTypeInternal _PlayerPropNotify_default_instance_;
class PlayerPropNotify_PropMapEntry;
class PlayerPropNotify_PropMapEntryDefaultTypeInternal;
extern PlayerPropNotify_PropMapEntryDefaultTypeInternal _PlayerPropNotify_PropMapEntry_default_instance_;
class PlayerRandomCookReq;
class PlayerRandomCookReqDefaultTypeInternal;
extern PlayerRandomCookReqDefaultTypeInternal _PlayerRandomCookReq_default_instance_;
class PlayerRandomCookRsp;
class PlayerRandomCookRspDefaultTypeInternal;
extern PlayerRandomCookRspDefaultTypeInternal _PlayerRandomCookRsp_default_instance_;
class PlayerSetLanguageReq;
class PlayerSetLanguageReqDefaultTypeInternal;
extern PlayerSetLanguageReqDefaultTypeInternal _PlayerSetLanguageReq_default_instance_;
class PlayerSetLanguageRsp;
class PlayerSetLanguageRspDefaultTypeInternal;
extern PlayerSetLanguageRspDefaultTypeInternal _PlayerSetLanguageRsp_default_instance_;
class PlayerSetPauseReq;
class PlayerSetPauseReqDefaultTypeInternal;
extern PlayerSetPauseReqDefaultTypeInternal _PlayerSetPauseReq_default_instance_;
class PlayerSetPauseRsp;
class PlayerSetPauseRspDefaultTypeInternal;
extern PlayerSetPauseRspDefaultTypeInternal _PlayerSetPauseRsp_default_instance_;
class PlayerTimeNotify;
class PlayerTimeNotifyDefaultTypeInternal;
extern PlayerTimeNotifyDefaultTypeInternal _PlayerTimeNotify_default_instance_;
class RemoveRandTaskInfoNotify;
class RemoveRandTaskInfoNotifyDefaultTypeInternal;
extern RemoveRandTaskInfoNotifyDefaultTypeInternal _RemoveRandTaskInfoNotify_default_instance_;
class ServerDisconnectClientNotify;
class ServerDisconnectClientNotifyDefaultTypeInternal;
extern ServerDisconnectClientNotifyDefaultTypeInternal _ServerDisconnectClientNotify_default_instance_;
class SetOpenStateReq;
class SetOpenStateReqDefaultTypeInternal;
extern SetOpenStateReqDefaultTypeInternal _SetOpenStateReq_default_instance_;
class SetOpenStateRsp;
class SetOpenStateRspDefaultTypeInternal;
extern SetOpenStateRspDefaultTypeInternal _SetOpenStateRsp_default_instance_;
class SetPlayerBornDataReq;
class SetPlayerBornDataReqDefaultTypeInternal;
extern SetPlayerBornDataReqDefaultTypeInternal _SetPlayerBornDataReq_default_instance_;
class SetPlayerBornDataRsp;
class SetPlayerBornDataRspDefaultTypeInternal;
extern SetPlayerBornDataRspDefaultTypeInternal _SetPlayerBornDataRsp_default_instance_;
class SetPlayerNameReq;
class SetPlayerNameReqDefaultTypeInternal;
extern SetPlayerNameReqDefaultTypeInternal _SetPlayerNameReq_default_instance_;
class SetPlayerNameRsp;
class SetPlayerNameRspDefaultTypeInternal;
extern SetPlayerNameRspDefaultTypeInternal _SetPlayerNameRsp_default_instance_;
class SetPlayerPropReq;
class SetPlayerPropReqDefaultTypeInternal;
extern SetPlayerPropReqDefaultTypeInternal _SetPlayerPropReq_default_instance_;
class SetPlayerPropRsp;
class SetPlayerPropRspDefaultTypeInternal;
extern SetPlayerPropRspDefaultTypeInternal _SetPlayerPropRsp_default_instance_;
class TakeCompoundOutputReq;
class TakeCompoundOutputReqDefaultTypeInternal;
extern TakeCompoundOutputReqDefaultTypeInternal _TakeCompoundOutputReq_default_instance_;
class TakeCompoundOutputRsp;
class TakeCompoundOutputRspDefaultTypeInternal;
extern TakeCompoundOutputRspDefaultTypeInternal _TakeCompoundOutputRsp_default_instance_;
class TakePlayerLevelRewardReq;
class TakePlayerLevelRewardReqDefaultTypeInternal;
extern TakePlayerLevelRewardReqDefaultTypeInternal _TakePlayerLevelRewardReq_default_instance_;
class TakePlayerLevelRewardRsp;
class TakePlayerLevelRewardRspDefaultTypeInternal;
extern TakePlayerLevelRewardRspDefaultTypeInternal _TakePlayerLevelRewardRsp_default_instance_;
class WorldOwnerDailyTaskNotify;
class WorldOwnerDailyTaskNotifyDefaultTypeInternal;
extern WorldOwnerDailyTaskNotifyDefaultTypeInternal _WorldOwnerDailyTaskNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_cmd_2fcmd_5fplayer_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmd_2fcmd_5fplayer_2eproto

enum GetPlayerTokenReq_CmdId {
  GetPlayerTokenReq_CmdId_NONE = 0,
  GetPlayerTokenReq_CmdId_CMD_ID = 101,
  GetPlayerTokenReq_CmdId_ENET_CHANNEL_ID = 0,
  GetPlayerTokenReq_CmdId_ENET_IS_RELIABLE = 1,
  GetPlayerTokenReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetPlayerTokenReq_CmdId_GetPlayerTokenReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetPlayerTokenReq_CmdId_GetPlayerTokenReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetPlayerTokenReq_CmdId_IsValid(int value);
const GetPlayerTokenReq_CmdId GetPlayerTokenReq_CmdId_CmdId_MIN = GetPlayerTokenReq_CmdId_NONE;
const GetPlayerTokenReq_CmdId GetPlayerTokenReq_CmdId_CmdId_MAX = GetPlayerTokenReq_CmdId_CMD_ID;
const int GetPlayerTokenReq_CmdId_CmdId_ARRAYSIZE = GetPlayerTokenReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetPlayerTokenReq_CmdId_descriptor();
inline const ::std::string& GetPlayerTokenReq_CmdId_Name(GetPlayerTokenReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetPlayerTokenReq_CmdId_descriptor(), value);
}
inline bool GetPlayerTokenReq_CmdId_Parse(
    const ::std::string& name, GetPlayerTokenReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetPlayerTokenReq_CmdId>(
    GetPlayerTokenReq_CmdId_descriptor(), name, value);
}
enum GetPlayerTokenRsp_CmdId {
  GetPlayerTokenRsp_CmdId_NONE = 0,
  GetPlayerTokenRsp_CmdId_CMD_ID = 102,
  GetPlayerTokenRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetPlayerTokenRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetPlayerTokenRsp_CmdId_GetPlayerTokenRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetPlayerTokenRsp_CmdId_GetPlayerTokenRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetPlayerTokenRsp_CmdId_IsValid(int value);
const GetPlayerTokenRsp_CmdId GetPlayerTokenRsp_CmdId_CmdId_MIN = GetPlayerTokenRsp_CmdId_NONE;
const GetPlayerTokenRsp_CmdId GetPlayerTokenRsp_CmdId_CmdId_MAX = GetPlayerTokenRsp_CmdId_CMD_ID;
const int GetPlayerTokenRsp_CmdId_CmdId_ARRAYSIZE = GetPlayerTokenRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetPlayerTokenRsp_CmdId_descriptor();
inline const ::std::string& GetPlayerTokenRsp_CmdId_Name(GetPlayerTokenRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetPlayerTokenRsp_CmdId_descriptor(), value);
}
inline bool GetPlayerTokenRsp_CmdId_Parse(
    const ::std::string& name, GetPlayerTokenRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetPlayerTokenRsp_CmdId>(
    GetPlayerTokenRsp_CmdId_descriptor(), name, value);
}
enum PlayerLoginReq_CmdId {
  PlayerLoginReq_CmdId_NONE = 0,
  PlayerLoginReq_CmdId_CMD_ID = 103,
  PlayerLoginReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerLoginReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerLoginReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerLoginReq_CmdId_PlayerLoginReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLoginReq_CmdId_PlayerLoginReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLoginReq_CmdId_IsValid(int value);
const PlayerLoginReq_CmdId PlayerLoginReq_CmdId_CmdId_MIN = PlayerLoginReq_CmdId_NONE;
const PlayerLoginReq_CmdId PlayerLoginReq_CmdId_CmdId_MAX = PlayerLoginReq_CmdId_CMD_ID;
const int PlayerLoginReq_CmdId_CmdId_ARRAYSIZE = PlayerLoginReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLoginReq_CmdId_descriptor();
inline const ::std::string& PlayerLoginReq_CmdId_Name(PlayerLoginReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLoginReq_CmdId_descriptor(), value);
}
inline bool PlayerLoginReq_CmdId_Parse(
    const ::std::string& name, PlayerLoginReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLoginReq_CmdId>(
    PlayerLoginReq_CmdId_descriptor(), name, value);
}
enum PlayerLoginRsp_CmdId {
  PlayerLoginRsp_CmdId_NONE = 0,
  PlayerLoginRsp_CmdId_CMD_ID = 104,
  PlayerLoginRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerLoginRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerLoginRsp_CmdId_PlayerLoginRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLoginRsp_CmdId_PlayerLoginRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLoginRsp_CmdId_IsValid(int value);
const PlayerLoginRsp_CmdId PlayerLoginRsp_CmdId_CmdId_MIN = PlayerLoginRsp_CmdId_NONE;
const PlayerLoginRsp_CmdId PlayerLoginRsp_CmdId_CmdId_MAX = PlayerLoginRsp_CmdId_CMD_ID;
const int PlayerLoginRsp_CmdId_CmdId_ARRAYSIZE = PlayerLoginRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLoginRsp_CmdId_descriptor();
inline const ::std::string& PlayerLoginRsp_CmdId_Name(PlayerLoginRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLoginRsp_CmdId_descriptor(), value);
}
inline bool PlayerLoginRsp_CmdId_Parse(
    const ::std::string& name, PlayerLoginRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLoginRsp_CmdId>(
    PlayerLoginRsp_CmdId_descriptor(), name, value);
}
enum PlayerLogoutReq_CmdId {
  PlayerLogoutReq_CmdId_NONE = 0,
  PlayerLogoutReq_CmdId_CMD_ID = 105,
  PlayerLogoutReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerLogoutReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerLogoutReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerLogoutReq_CmdId_PlayerLogoutReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLogoutReq_CmdId_PlayerLogoutReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLogoutReq_CmdId_IsValid(int value);
const PlayerLogoutReq_CmdId PlayerLogoutReq_CmdId_CmdId_MIN = PlayerLogoutReq_CmdId_NONE;
const PlayerLogoutReq_CmdId PlayerLogoutReq_CmdId_CmdId_MAX = PlayerLogoutReq_CmdId_CMD_ID;
const int PlayerLogoutReq_CmdId_CmdId_ARRAYSIZE = PlayerLogoutReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLogoutReq_CmdId_descriptor();
inline const ::std::string& PlayerLogoutReq_CmdId_Name(PlayerLogoutReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLogoutReq_CmdId_descriptor(), value);
}
inline bool PlayerLogoutReq_CmdId_Parse(
    const ::std::string& name, PlayerLogoutReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLogoutReq_CmdId>(
    PlayerLogoutReq_CmdId_descriptor(), name, value);
}
enum PlayerLogoutReq_Reason {
  PlayerLogoutReq_Reason_DISCONNECT = 0,
  PlayerLogoutReq_Reason_CLIENT_REQ = 1,
  PlayerLogoutReq_Reason_TIMEOUT = 2,
  PlayerLogoutReq_Reason_ADMIN_REQ = 3,
  PlayerLogoutReq_Reason_SERVER_CLOSE = 4,
  PlayerLogoutReq_Reason_GM_CLEAR = 5,
  PlayerLogoutReq_Reason_PLAYER_TRANSFER = 6,
  PlayerLogoutReq_Reason_PlayerLogoutReq_Reason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLogoutReq_Reason_PlayerLogoutReq_Reason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLogoutReq_Reason_IsValid(int value);
const PlayerLogoutReq_Reason PlayerLogoutReq_Reason_Reason_MIN = PlayerLogoutReq_Reason_DISCONNECT;
const PlayerLogoutReq_Reason PlayerLogoutReq_Reason_Reason_MAX = PlayerLogoutReq_Reason_PLAYER_TRANSFER;
const int PlayerLogoutReq_Reason_Reason_ARRAYSIZE = PlayerLogoutReq_Reason_Reason_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLogoutReq_Reason_descriptor();
inline const ::std::string& PlayerLogoutReq_Reason_Name(PlayerLogoutReq_Reason value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLogoutReq_Reason_descriptor(), value);
}
inline bool PlayerLogoutReq_Reason_Parse(
    const ::std::string& name, PlayerLogoutReq_Reason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLogoutReq_Reason>(
    PlayerLogoutReq_Reason_descriptor(), name, value);
}
enum PlayerLogoutRsp_CmdId {
  PlayerLogoutRsp_CmdId_NONE = 0,
  PlayerLogoutRsp_CmdId_CMD_ID = 106,
  PlayerLogoutRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerLogoutRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerLogoutRsp_CmdId_PlayerLogoutRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLogoutRsp_CmdId_PlayerLogoutRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLogoutRsp_CmdId_IsValid(int value);
const PlayerLogoutRsp_CmdId PlayerLogoutRsp_CmdId_CmdId_MIN = PlayerLogoutRsp_CmdId_NONE;
const PlayerLogoutRsp_CmdId PlayerLogoutRsp_CmdId_CmdId_MAX = PlayerLogoutRsp_CmdId_CMD_ID;
const int PlayerLogoutRsp_CmdId_CmdId_ARRAYSIZE = PlayerLogoutRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLogoutRsp_CmdId_descriptor();
inline const ::std::string& PlayerLogoutRsp_CmdId_Name(PlayerLogoutRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLogoutRsp_CmdId_descriptor(), value);
}
inline bool PlayerLogoutRsp_CmdId_Parse(
    const ::std::string& name, PlayerLogoutRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLogoutRsp_CmdId>(
    PlayerLogoutRsp_CmdId_descriptor(), name, value);
}
enum PlayerLogoutNotify_CmdId {
  PlayerLogoutNotify_CmdId_NONE = 0,
  PlayerLogoutNotify_CmdId_CMD_ID = 107,
  PlayerLogoutNotify_CmdId_PlayerLogoutNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLogoutNotify_CmdId_PlayerLogoutNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLogoutNotify_CmdId_IsValid(int value);
const PlayerLogoutNotify_CmdId PlayerLogoutNotify_CmdId_CmdId_MIN = PlayerLogoutNotify_CmdId_NONE;
const PlayerLogoutNotify_CmdId PlayerLogoutNotify_CmdId_CmdId_MAX = PlayerLogoutNotify_CmdId_CMD_ID;
const int PlayerLogoutNotify_CmdId_CmdId_ARRAYSIZE = PlayerLogoutNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLogoutNotify_CmdId_descriptor();
inline const ::std::string& PlayerLogoutNotify_CmdId_Name(PlayerLogoutNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLogoutNotify_CmdId_descriptor(), value);
}
inline bool PlayerLogoutNotify_CmdId_Parse(
    const ::std::string& name, PlayerLogoutNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLogoutNotify_CmdId>(
    PlayerLogoutNotify_CmdId_descriptor(), name, value);
}
enum PlayerDataNotify_CmdId {
  PlayerDataNotify_CmdId_NONE = 0,
  PlayerDataNotify_CmdId_CMD_ID = 108,
  PlayerDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerDataNotify_CmdId_PlayerDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerDataNotify_CmdId_PlayerDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerDataNotify_CmdId_IsValid(int value);
const PlayerDataNotify_CmdId PlayerDataNotify_CmdId_CmdId_MIN = PlayerDataNotify_CmdId_NONE;
const PlayerDataNotify_CmdId PlayerDataNotify_CmdId_CmdId_MAX = PlayerDataNotify_CmdId_CMD_ID;
const int PlayerDataNotify_CmdId_CmdId_ARRAYSIZE = PlayerDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerDataNotify_CmdId_descriptor();
inline const ::std::string& PlayerDataNotify_CmdId_Name(PlayerDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerDataNotify_CmdId_descriptor(), value);
}
inline bool PlayerDataNotify_CmdId_Parse(
    const ::std::string& name, PlayerDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerDataNotify_CmdId>(
    PlayerDataNotify_CmdId_descriptor(), name, value);
}
enum ChangeGameTimeReq_CmdId {
  ChangeGameTimeReq_CmdId_NONE = 0,
  ChangeGameTimeReq_CmdId_CMD_ID = 109,
  ChangeGameTimeReq_CmdId_ENET_CHANNEL_ID = 0,
  ChangeGameTimeReq_CmdId_ENET_IS_RELIABLE = 1,
  ChangeGameTimeReq_CmdId_IS_ALLOW_CLIENT = 1,
  ChangeGameTimeReq_CmdId_ChangeGameTimeReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeGameTimeReq_CmdId_ChangeGameTimeReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeGameTimeReq_CmdId_IsValid(int value);
const ChangeGameTimeReq_CmdId ChangeGameTimeReq_CmdId_CmdId_MIN = ChangeGameTimeReq_CmdId_NONE;
const ChangeGameTimeReq_CmdId ChangeGameTimeReq_CmdId_CmdId_MAX = ChangeGameTimeReq_CmdId_CMD_ID;
const int ChangeGameTimeReq_CmdId_CmdId_ARRAYSIZE = ChangeGameTimeReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeGameTimeReq_CmdId_descriptor();
inline const ::std::string& ChangeGameTimeReq_CmdId_Name(ChangeGameTimeReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeGameTimeReq_CmdId_descriptor(), value);
}
inline bool ChangeGameTimeReq_CmdId_Parse(
    const ::std::string& name, ChangeGameTimeReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeGameTimeReq_CmdId>(
    ChangeGameTimeReq_CmdId_descriptor(), name, value);
}
enum ChangeGameTimeRsp_CmdId {
  ChangeGameTimeRsp_CmdId_NONE = 0,
  ChangeGameTimeRsp_CmdId_CMD_ID = 110,
  ChangeGameTimeRsp_CmdId_ENET_CHANNEL_ID = 0,
  ChangeGameTimeRsp_CmdId_ENET_IS_RELIABLE = 1,
  ChangeGameTimeRsp_CmdId_ChangeGameTimeRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ChangeGameTimeRsp_CmdId_ChangeGameTimeRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ChangeGameTimeRsp_CmdId_IsValid(int value);
const ChangeGameTimeRsp_CmdId ChangeGameTimeRsp_CmdId_CmdId_MIN = ChangeGameTimeRsp_CmdId_NONE;
const ChangeGameTimeRsp_CmdId ChangeGameTimeRsp_CmdId_CmdId_MAX = ChangeGameTimeRsp_CmdId_CMD_ID;
const int ChangeGameTimeRsp_CmdId_CmdId_ARRAYSIZE = ChangeGameTimeRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeGameTimeRsp_CmdId_descriptor();
inline const ::std::string& ChangeGameTimeRsp_CmdId_Name(ChangeGameTimeRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeGameTimeRsp_CmdId_descriptor(), value);
}
inline bool ChangeGameTimeRsp_CmdId_Parse(
    const ::std::string& name, ChangeGameTimeRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeGameTimeRsp_CmdId>(
    ChangeGameTimeRsp_CmdId_descriptor(), name, value);
}
enum PlayerGameTimeNotify_CmdId {
  PlayerGameTimeNotify_CmdId_NONE = 0,
  PlayerGameTimeNotify_CmdId_CMD_ID = 111,
  PlayerGameTimeNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerGameTimeNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerGameTimeNotify_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerGameTimeNotify_CmdId_PlayerGameTimeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerGameTimeNotify_CmdId_PlayerGameTimeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerGameTimeNotify_CmdId_IsValid(int value);
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify_CmdId_CmdId_MIN = PlayerGameTimeNotify_CmdId_NONE;
const PlayerGameTimeNotify_CmdId PlayerGameTimeNotify_CmdId_CmdId_MAX = PlayerGameTimeNotify_CmdId_CMD_ID;
const int PlayerGameTimeNotify_CmdId_CmdId_ARRAYSIZE = PlayerGameTimeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerGameTimeNotify_CmdId_descriptor();
inline const ::std::string& PlayerGameTimeNotify_CmdId_Name(PlayerGameTimeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerGameTimeNotify_CmdId_descriptor(), value);
}
inline bool PlayerGameTimeNotify_CmdId_Parse(
    const ::std::string& name, PlayerGameTimeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerGameTimeNotify_CmdId>(
    PlayerGameTimeNotify_CmdId_descriptor(), name, value);
}
enum PlayerPropNotify_CmdId {
  PlayerPropNotify_CmdId_NONE = 0,
  PlayerPropNotify_CmdId_CMD_ID = 112,
  PlayerPropNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerPropNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerPropNotify_CmdId_PlayerPropNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerPropNotify_CmdId_PlayerPropNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerPropNotify_CmdId_IsValid(int value);
const PlayerPropNotify_CmdId PlayerPropNotify_CmdId_CmdId_MIN = PlayerPropNotify_CmdId_NONE;
const PlayerPropNotify_CmdId PlayerPropNotify_CmdId_CmdId_MAX = PlayerPropNotify_CmdId_CMD_ID;
const int PlayerPropNotify_CmdId_CmdId_ARRAYSIZE = PlayerPropNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerPropNotify_CmdId_descriptor();
inline const ::std::string& PlayerPropNotify_CmdId_Name(PlayerPropNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerPropNotify_CmdId_descriptor(), value);
}
inline bool PlayerPropNotify_CmdId_Parse(
    const ::std::string& name, PlayerPropNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerPropNotify_CmdId>(
    PlayerPropNotify_CmdId_descriptor(), name, value);
}
enum ClientTriggerEventNotify_CmdId {
  ClientTriggerEventNotify_CmdId_NONE = 0,
  ClientTriggerEventNotify_CmdId_CMD_ID = 113,
  ClientTriggerEventNotify_CmdId_ENET_CHANNEL_ID = 0,
  ClientTriggerEventNotify_CmdId_ENET_IS_RELIABLE = 1,
  ClientTriggerEventNotify_CmdId_IS_ALLOW_CLIENT = 1,
  ClientTriggerEventNotify_CmdId_ClientTriggerEventNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClientTriggerEventNotify_CmdId_ClientTriggerEventNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClientTriggerEventNotify_CmdId_IsValid(int value);
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify_CmdId_CmdId_MIN = ClientTriggerEventNotify_CmdId_NONE;
const ClientTriggerEventNotify_CmdId ClientTriggerEventNotify_CmdId_CmdId_MAX = ClientTriggerEventNotify_CmdId_CMD_ID;
const int ClientTriggerEventNotify_CmdId_CmdId_ARRAYSIZE = ClientTriggerEventNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClientTriggerEventNotify_CmdId_descriptor();
inline const ::std::string& ClientTriggerEventNotify_CmdId_Name(ClientTriggerEventNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClientTriggerEventNotify_CmdId_descriptor(), value);
}
inline bool ClientTriggerEventNotify_CmdId_Parse(
    const ::std::string& name, ClientTriggerEventNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClientTriggerEventNotify_CmdId>(
    ClientTriggerEventNotify_CmdId_descriptor(), name, value);
}
enum SetPlayerPropReq_CmdId {
  SetPlayerPropReq_CmdId_NONE = 0,
  SetPlayerPropReq_CmdId_CMD_ID = 114,
  SetPlayerPropReq_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerPropReq_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerPropReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetPlayerPropReq_CmdId_SetPlayerPropReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerPropReq_CmdId_SetPlayerPropReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerPropReq_CmdId_IsValid(int value);
const SetPlayerPropReq_CmdId SetPlayerPropReq_CmdId_CmdId_MIN = SetPlayerPropReq_CmdId_NONE;
const SetPlayerPropReq_CmdId SetPlayerPropReq_CmdId_CmdId_MAX = SetPlayerPropReq_CmdId_CMD_ID;
const int SetPlayerPropReq_CmdId_CmdId_ARRAYSIZE = SetPlayerPropReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerPropReq_CmdId_descriptor();
inline const ::std::string& SetPlayerPropReq_CmdId_Name(SetPlayerPropReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerPropReq_CmdId_descriptor(), value);
}
inline bool SetPlayerPropReq_CmdId_Parse(
    const ::std::string& name, SetPlayerPropReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerPropReq_CmdId>(
    SetPlayerPropReq_CmdId_descriptor(), name, value);
}
enum SetPlayerPropRsp_CmdId {
  SetPlayerPropRsp_CmdId_NONE = 0,
  SetPlayerPropRsp_CmdId_CMD_ID = 115,
  SetPlayerPropRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerPropRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerPropRsp_CmdId_SetPlayerPropRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerPropRsp_CmdId_SetPlayerPropRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerPropRsp_CmdId_IsValid(int value);
const SetPlayerPropRsp_CmdId SetPlayerPropRsp_CmdId_CmdId_MIN = SetPlayerPropRsp_CmdId_NONE;
const SetPlayerPropRsp_CmdId SetPlayerPropRsp_CmdId_CmdId_MAX = SetPlayerPropRsp_CmdId_CMD_ID;
const int SetPlayerPropRsp_CmdId_CmdId_ARRAYSIZE = SetPlayerPropRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerPropRsp_CmdId_descriptor();
inline const ::std::string& SetPlayerPropRsp_CmdId_Name(SetPlayerPropRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerPropRsp_CmdId_descriptor(), value);
}
inline bool SetPlayerPropRsp_CmdId_Parse(
    const ::std::string& name, SetPlayerPropRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerPropRsp_CmdId>(
    SetPlayerPropRsp_CmdId_descriptor(), name, value);
}
enum SetPlayerBornDataReq_CmdId {
  SetPlayerBornDataReq_CmdId_NONE = 0,
  SetPlayerBornDataReq_CmdId_CMD_ID = 116,
  SetPlayerBornDataReq_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerBornDataReq_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerBornDataReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetPlayerBornDataReq_CmdId_SetPlayerBornDataReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerBornDataReq_CmdId_SetPlayerBornDataReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerBornDataReq_CmdId_IsValid(int value);
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq_CmdId_CmdId_MIN = SetPlayerBornDataReq_CmdId_NONE;
const SetPlayerBornDataReq_CmdId SetPlayerBornDataReq_CmdId_CmdId_MAX = SetPlayerBornDataReq_CmdId_CMD_ID;
const int SetPlayerBornDataReq_CmdId_CmdId_ARRAYSIZE = SetPlayerBornDataReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerBornDataReq_CmdId_descriptor();
inline const ::std::string& SetPlayerBornDataReq_CmdId_Name(SetPlayerBornDataReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerBornDataReq_CmdId_descriptor(), value);
}
inline bool SetPlayerBornDataReq_CmdId_Parse(
    const ::std::string& name, SetPlayerBornDataReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerBornDataReq_CmdId>(
    SetPlayerBornDataReq_CmdId_descriptor(), name, value);
}
enum SetPlayerBornDataRsp_CmdId {
  SetPlayerBornDataRsp_CmdId_NONE = 0,
  SetPlayerBornDataRsp_CmdId_CMD_ID = 117,
  SetPlayerBornDataRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerBornDataRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerBornDataRsp_CmdId_SetPlayerBornDataRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerBornDataRsp_CmdId_SetPlayerBornDataRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerBornDataRsp_CmdId_IsValid(int value);
const SetPlayerBornDataRsp_CmdId SetPlayerBornDataRsp_CmdId_CmdId_MIN = SetPlayerBornDataRsp_CmdId_NONE;
const SetPlayerBornDataRsp_CmdId SetPlayerBornDataRsp_CmdId_CmdId_MAX = SetPlayerBornDataRsp_CmdId_CMD_ID;
const int SetPlayerBornDataRsp_CmdId_CmdId_ARRAYSIZE = SetPlayerBornDataRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerBornDataRsp_CmdId_descriptor();
inline const ::std::string& SetPlayerBornDataRsp_CmdId_Name(SetPlayerBornDataRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerBornDataRsp_CmdId_descriptor(), value);
}
inline bool SetPlayerBornDataRsp_CmdId_Parse(
    const ::std::string& name, SetPlayerBornDataRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerBornDataRsp_CmdId>(
    SetPlayerBornDataRsp_CmdId_descriptor(), name, value);
}
enum DoSetPlayerBornDataNotify_CmdId {
  DoSetPlayerBornDataNotify_CmdId_NONE = 0,
  DoSetPlayerBornDataNotify_CmdId_CMD_ID = 118,
  DoSetPlayerBornDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  DoSetPlayerBornDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  DoSetPlayerBornDataNotify_CmdId_DoSetPlayerBornDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DoSetPlayerBornDataNotify_CmdId_DoSetPlayerBornDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DoSetPlayerBornDataNotify_CmdId_IsValid(int value);
const DoSetPlayerBornDataNotify_CmdId DoSetPlayerBornDataNotify_CmdId_CmdId_MIN = DoSetPlayerBornDataNotify_CmdId_NONE;
const DoSetPlayerBornDataNotify_CmdId DoSetPlayerBornDataNotify_CmdId_CmdId_MAX = DoSetPlayerBornDataNotify_CmdId_CMD_ID;
const int DoSetPlayerBornDataNotify_CmdId_CmdId_ARRAYSIZE = DoSetPlayerBornDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DoSetPlayerBornDataNotify_CmdId_descriptor();
inline const ::std::string& DoSetPlayerBornDataNotify_CmdId_Name(DoSetPlayerBornDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DoSetPlayerBornDataNotify_CmdId_descriptor(), value);
}
inline bool DoSetPlayerBornDataNotify_CmdId_Parse(
    const ::std::string& name, DoSetPlayerBornDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DoSetPlayerBornDataNotify_CmdId>(
    DoSetPlayerBornDataNotify_CmdId_descriptor(), name, value);
}
enum PlayerPropChangeNotify_CmdId {
  PlayerPropChangeNotify_CmdId_NONE = 0,
  PlayerPropChangeNotify_CmdId_CMD_ID = 119,
  PlayerPropChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerPropChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerPropChangeNotify_CmdId_PlayerPropChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerPropChangeNotify_CmdId_PlayerPropChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerPropChangeNotify_CmdId_IsValid(int value);
const PlayerPropChangeNotify_CmdId PlayerPropChangeNotify_CmdId_CmdId_MIN = PlayerPropChangeNotify_CmdId_NONE;
const PlayerPropChangeNotify_CmdId PlayerPropChangeNotify_CmdId_CmdId_MAX = PlayerPropChangeNotify_CmdId_CMD_ID;
const int PlayerPropChangeNotify_CmdId_CmdId_ARRAYSIZE = PlayerPropChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerPropChangeNotify_CmdId_descriptor();
inline const ::std::string& PlayerPropChangeNotify_CmdId_Name(PlayerPropChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerPropChangeNotify_CmdId_descriptor(), value);
}
inline bool PlayerPropChangeNotify_CmdId_Parse(
    const ::std::string& name, PlayerPropChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerPropChangeNotify_CmdId>(
    PlayerPropChangeNotify_CmdId_descriptor(), name, value);
}
enum SetPlayerNameReq_CmdId {
  SetPlayerNameReq_CmdId_NONE = 0,
  SetPlayerNameReq_CmdId_CMD_ID = 120,
  SetPlayerNameReq_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerNameReq_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerNameReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetPlayerNameReq_CmdId_SetPlayerNameReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerNameReq_CmdId_SetPlayerNameReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerNameReq_CmdId_IsValid(int value);
const SetPlayerNameReq_CmdId SetPlayerNameReq_CmdId_CmdId_MIN = SetPlayerNameReq_CmdId_NONE;
const SetPlayerNameReq_CmdId SetPlayerNameReq_CmdId_CmdId_MAX = SetPlayerNameReq_CmdId_CMD_ID;
const int SetPlayerNameReq_CmdId_CmdId_ARRAYSIZE = SetPlayerNameReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerNameReq_CmdId_descriptor();
inline const ::std::string& SetPlayerNameReq_CmdId_Name(SetPlayerNameReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerNameReq_CmdId_descriptor(), value);
}
inline bool SetPlayerNameReq_CmdId_Parse(
    const ::std::string& name, SetPlayerNameReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerNameReq_CmdId>(
    SetPlayerNameReq_CmdId_descriptor(), name, value);
}
enum SetPlayerNameRsp_CmdId {
  SetPlayerNameRsp_CmdId_NONE = 0,
  SetPlayerNameRsp_CmdId_CMD_ID = 121,
  SetPlayerNameRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetPlayerNameRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetPlayerNameRsp_CmdId_SetPlayerNameRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetPlayerNameRsp_CmdId_SetPlayerNameRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetPlayerNameRsp_CmdId_IsValid(int value);
const SetPlayerNameRsp_CmdId SetPlayerNameRsp_CmdId_CmdId_MIN = SetPlayerNameRsp_CmdId_NONE;
const SetPlayerNameRsp_CmdId SetPlayerNameRsp_CmdId_CmdId_MAX = SetPlayerNameRsp_CmdId_CMD_ID;
const int SetPlayerNameRsp_CmdId_CmdId_ARRAYSIZE = SetPlayerNameRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetPlayerNameRsp_CmdId_descriptor();
inline const ::std::string& SetPlayerNameRsp_CmdId_Name(SetPlayerNameRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetPlayerNameRsp_CmdId_descriptor(), value);
}
inline bool SetPlayerNameRsp_CmdId_Parse(
    const ::std::string& name, SetPlayerNameRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetPlayerNameRsp_CmdId>(
    SetPlayerNameRsp_CmdId_descriptor(), name, value);
}
enum SetOpenStateReq_CmdId {
  SetOpenStateReq_CmdId_NONE = 0,
  SetOpenStateReq_CmdId_CMD_ID = 122,
  SetOpenStateReq_CmdId_ENET_CHANNEL_ID = 0,
  SetOpenStateReq_CmdId_ENET_IS_RELIABLE = 1,
  SetOpenStateReq_CmdId_IS_ALLOW_CLIENT = 1,
  SetOpenStateReq_CmdId_SetOpenStateReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetOpenStateReq_CmdId_SetOpenStateReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetOpenStateReq_CmdId_IsValid(int value);
const SetOpenStateReq_CmdId SetOpenStateReq_CmdId_CmdId_MIN = SetOpenStateReq_CmdId_NONE;
const SetOpenStateReq_CmdId SetOpenStateReq_CmdId_CmdId_MAX = SetOpenStateReq_CmdId_CMD_ID;
const int SetOpenStateReq_CmdId_CmdId_ARRAYSIZE = SetOpenStateReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetOpenStateReq_CmdId_descriptor();
inline const ::std::string& SetOpenStateReq_CmdId_Name(SetOpenStateReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetOpenStateReq_CmdId_descriptor(), value);
}
inline bool SetOpenStateReq_CmdId_Parse(
    const ::std::string& name, SetOpenStateReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetOpenStateReq_CmdId>(
    SetOpenStateReq_CmdId_descriptor(), name, value);
}
enum SetOpenStateRsp_CmdId {
  SetOpenStateRsp_CmdId_NONE = 0,
  SetOpenStateRsp_CmdId_CMD_ID = 123,
  SetOpenStateRsp_CmdId_ENET_CHANNEL_ID = 0,
  SetOpenStateRsp_CmdId_ENET_IS_RELIABLE = 1,
  SetOpenStateRsp_CmdId_SetOpenStateRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SetOpenStateRsp_CmdId_SetOpenStateRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SetOpenStateRsp_CmdId_IsValid(int value);
const SetOpenStateRsp_CmdId SetOpenStateRsp_CmdId_CmdId_MIN = SetOpenStateRsp_CmdId_NONE;
const SetOpenStateRsp_CmdId SetOpenStateRsp_CmdId_CmdId_MAX = SetOpenStateRsp_CmdId_CMD_ID;
const int SetOpenStateRsp_CmdId_CmdId_ARRAYSIZE = SetOpenStateRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* SetOpenStateRsp_CmdId_descriptor();
inline const ::std::string& SetOpenStateRsp_CmdId_Name(SetOpenStateRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    SetOpenStateRsp_CmdId_descriptor(), value);
}
inline bool SetOpenStateRsp_CmdId_Parse(
    const ::std::string& name, SetOpenStateRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SetOpenStateRsp_CmdId>(
    SetOpenStateRsp_CmdId_descriptor(), name, value);
}
enum OpenStateUpdateNotify_CmdId {
  OpenStateUpdateNotify_CmdId_NONE = 0,
  OpenStateUpdateNotify_CmdId_CMD_ID = 124,
  OpenStateUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  OpenStateUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  OpenStateUpdateNotify_CmdId_OpenStateUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenStateUpdateNotify_CmdId_OpenStateUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenStateUpdateNotify_CmdId_IsValid(int value);
const OpenStateUpdateNotify_CmdId OpenStateUpdateNotify_CmdId_CmdId_MIN = OpenStateUpdateNotify_CmdId_NONE;
const OpenStateUpdateNotify_CmdId OpenStateUpdateNotify_CmdId_CmdId_MAX = OpenStateUpdateNotify_CmdId_CMD_ID;
const int OpenStateUpdateNotify_CmdId_CmdId_ARRAYSIZE = OpenStateUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenStateUpdateNotify_CmdId_descriptor();
inline const ::std::string& OpenStateUpdateNotify_CmdId_Name(OpenStateUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenStateUpdateNotify_CmdId_descriptor(), value);
}
inline bool OpenStateUpdateNotify_CmdId_Parse(
    const ::std::string& name, OpenStateUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenStateUpdateNotify_CmdId>(
    OpenStateUpdateNotify_CmdId_descriptor(), name, value);
}
enum OpenStateChangeNotify_CmdId {
  OpenStateChangeNotify_CmdId_NONE = 0,
  OpenStateChangeNotify_CmdId_CMD_ID = 125,
  OpenStateChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  OpenStateChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  OpenStateChangeNotify_CmdId_OpenStateChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenStateChangeNotify_CmdId_OpenStateChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenStateChangeNotify_CmdId_IsValid(int value);
const OpenStateChangeNotify_CmdId OpenStateChangeNotify_CmdId_CmdId_MIN = OpenStateChangeNotify_CmdId_NONE;
const OpenStateChangeNotify_CmdId OpenStateChangeNotify_CmdId_CmdId_MAX = OpenStateChangeNotify_CmdId_CMD_ID;
const int OpenStateChangeNotify_CmdId_CmdId_ARRAYSIZE = OpenStateChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenStateChangeNotify_CmdId_descriptor();
inline const ::std::string& OpenStateChangeNotify_CmdId_Name(OpenStateChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenStateChangeNotify_CmdId_descriptor(), value);
}
inline bool OpenStateChangeNotify_CmdId_Parse(
    const ::std::string& name, OpenStateChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenStateChangeNotify_CmdId>(
    OpenStateChangeNotify_CmdId_descriptor(), name, value);
}
enum PlayerCookReq_CmdId {
  PlayerCookReq_CmdId_NONE = 0,
  PlayerCookReq_CmdId_CMD_ID = 126,
  PlayerCookReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerCookReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerCookReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerCookReq_CmdId_PlayerCookReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerCookReq_CmdId_PlayerCookReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerCookReq_CmdId_IsValid(int value);
const PlayerCookReq_CmdId PlayerCookReq_CmdId_CmdId_MIN = PlayerCookReq_CmdId_NONE;
const PlayerCookReq_CmdId PlayerCookReq_CmdId_CmdId_MAX = PlayerCookReq_CmdId_CMD_ID;
const int PlayerCookReq_CmdId_CmdId_ARRAYSIZE = PlayerCookReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCookReq_CmdId_descriptor();
inline const ::std::string& PlayerCookReq_CmdId_Name(PlayerCookReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCookReq_CmdId_descriptor(), value);
}
inline bool PlayerCookReq_CmdId_Parse(
    const ::std::string& name, PlayerCookReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCookReq_CmdId>(
    PlayerCookReq_CmdId_descriptor(), name, value);
}
enum PlayerCookRsp_CmdId {
  PlayerCookRsp_CmdId_NONE = 0,
  PlayerCookRsp_CmdId_CMD_ID = 127,
  PlayerCookRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerCookRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerCookRsp_CmdId_PlayerCookRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerCookRsp_CmdId_PlayerCookRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerCookRsp_CmdId_IsValid(int value);
const PlayerCookRsp_CmdId PlayerCookRsp_CmdId_CmdId_MIN = PlayerCookRsp_CmdId_NONE;
const PlayerCookRsp_CmdId PlayerCookRsp_CmdId_CmdId_MAX = PlayerCookRsp_CmdId_CMD_ID;
const int PlayerCookRsp_CmdId_CmdId_ARRAYSIZE = PlayerCookRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCookRsp_CmdId_descriptor();
inline const ::std::string& PlayerCookRsp_CmdId_Name(PlayerCookRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCookRsp_CmdId_descriptor(), value);
}
inline bool PlayerCookRsp_CmdId_Parse(
    const ::std::string& name, PlayerCookRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCookRsp_CmdId>(
    PlayerCookRsp_CmdId_descriptor(), name, value);
}
enum PlayerRandomCookReq_CmdId {
  PlayerRandomCookReq_CmdId_NONE = 0,
  PlayerRandomCookReq_CmdId_CMD_ID = 128,
  PlayerRandomCookReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerRandomCookReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerRandomCookReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerRandomCookReq_CmdId_PlayerRandomCookReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerRandomCookReq_CmdId_PlayerRandomCookReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerRandomCookReq_CmdId_IsValid(int value);
const PlayerRandomCookReq_CmdId PlayerRandomCookReq_CmdId_CmdId_MIN = PlayerRandomCookReq_CmdId_NONE;
const PlayerRandomCookReq_CmdId PlayerRandomCookReq_CmdId_CmdId_MAX = PlayerRandomCookReq_CmdId_CMD_ID;
const int PlayerRandomCookReq_CmdId_CmdId_ARRAYSIZE = PlayerRandomCookReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerRandomCookReq_CmdId_descriptor();
inline const ::std::string& PlayerRandomCookReq_CmdId_Name(PlayerRandomCookReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerRandomCookReq_CmdId_descriptor(), value);
}
inline bool PlayerRandomCookReq_CmdId_Parse(
    const ::std::string& name, PlayerRandomCookReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerRandomCookReq_CmdId>(
    PlayerRandomCookReq_CmdId_descriptor(), name, value);
}
enum PlayerRandomCookRsp_CmdId {
  PlayerRandomCookRsp_CmdId_NONE = 0,
  PlayerRandomCookRsp_CmdId_CMD_ID = 129,
  PlayerRandomCookRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerRandomCookRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerRandomCookRsp_CmdId_PlayerRandomCookRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerRandomCookRsp_CmdId_PlayerRandomCookRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerRandomCookRsp_CmdId_IsValid(int value);
const PlayerRandomCookRsp_CmdId PlayerRandomCookRsp_CmdId_CmdId_MIN = PlayerRandomCookRsp_CmdId_NONE;
const PlayerRandomCookRsp_CmdId PlayerRandomCookRsp_CmdId_CmdId_MAX = PlayerRandomCookRsp_CmdId_CMD_ID;
const int PlayerRandomCookRsp_CmdId_CmdId_ARRAYSIZE = PlayerRandomCookRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerRandomCookRsp_CmdId_descriptor();
inline const ::std::string& PlayerRandomCookRsp_CmdId_Name(PlayerRandomCookRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerRandomCookRsp_CmdId_descriptor(), value);
}
inline bool PlayerRandomCookRsp_CmdId_Parse(
    const ::std::string& name, PlayerRandomCookRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerRandomCookRsp_CmdId>(
    PlayerRandomCookRsp_CmdId_descriptor(), name, value);
}
enum CookDataNotify_CmdId {
  CookDataNotify_CmdId_NONE = 0,
  CookDataNotify_CmdId_CMD_ID = 130,
  CookDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  CookDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  CookDataNotify_CmdId_CookDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CookDataNotify_CmdId_CookDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CookDataNotify_CmdId_IsValid(int value);
const CookDataNotify_CmdId CookDataNotify_CmdId_CmdId_MIN = CookDataNotify_CmdId_NONE;
const CookDataNotify_CmdId CookDataNotify_CmdId_CmdId_MAX = CookDataNotify_CmdId_CMD_ID;
const int CookDataNotify_CmdId_CmdId_ARRAYSIZE = CookDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CookDataNotify_CmdId_descriptor();
inline const ::std::string& CookDataNotify_CmdId_Name(CookDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CookDataNotify_CmdId_descriptor(), value);
}
inline bool CookDataNotify_CmdId_Parse(
    const ::std::string& name, CookDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CookDataNotify_CmdId>(
    CookDataNotify_CmdId_descriptor(), name, value);
}
enum CookRecipeDataNotify_CmdId {
  CookRecipeDataNotify_CmdId_NONE = 0,
  CookRecipeDataNotify_CmdId_CMD_ID = 131,
  CookRecipeDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  CookRecipeDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  CookRecipeDataNotify_CmdId_CookRecipeDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CookRecipeDataNotify_CmdId_CookRecipeDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CookRecipeDataNotify_CmdId_IsValid(int value);
const CookRecipeDataNotify_CmdId CookRecipeDataNotify_CmdId_CmdId_MIN = CookRecipeDataNotify_CmdId_NONE;
const CookRecipeDataNotify_CmdId CookRecipeDataNotify_CmdId_CmdId_MAX = CookRecipeDataNotify_CmdId_CMD_ID;
const int CookRecipeDataNotify_CmdId_CmdId_ARRAYSIZE = CookRecipeDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CookRecipeDataNotify_CmdId_descriptor();
inline const ::std::string& CookRecipeDataNotify_CmdId_Name(CookRecipeDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CookRecipeDataNotify_CmdId_descriptor(), value);
}
inline bool CookRecipeDataNotify_CmdId_Parse(
    const ::std::string& name, CookRecipeDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CookRecipeDataNotify_CmdId>(
    CookRecipeDataNotify_CmdId_descriptor(), name, value);
}
enum CookGradeDataNotify_CmdId {
  CookGradeDataNotify_CmdId_NONE = 0,
  CookGradeDataNotify_CmdId_CMD_ID = 132,
  CookGradeDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  CookGradeDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  CookGradeDataNotify_CmdId_CookGradeDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CookGradeDataNotify_CmdId_CookGradeDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CookGradeDataNotify_CmdId_IsValid(int value);
const CookGradeDataNotify_CmdId CookGradeDataNotify_CmdId_CmdId_MIN = CookGradeDataNotify_CmdId_NONE;
const CookGradeDataNotify_CmdId CookGradeDataNotify_CmdId_CmdId_MAX = CookGradeDataNotify_CmdId_CMD_ID;
const int CookGradeDataNotify_CmdId_CmdId_ARRAYSIZE = CookGradeDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CookGradeDataNotify_CmdId_descriptor();
inline const ::std::string& CookGradeDataNotify_CmdId_Name(CookGradeDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CookGradeDataNotify_CmdId_descriptor(), value);
}
inline bool CookGradeDataNotify_CmdId_Parse(
    const ::std::string& name, CookGradeDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CookGradeDataNotify_CmdId>(
    CookGradeDataNotify_CmdId_descriptor(), name, value);
}
enum PlayerCompoundMaterialReq_CmdId {
  PlayerCompoundMaterialReq_CmdId_NONE = 0,
  PlayerCompoundMaterialReq_CmdId_CMD_ID = 133,
  PlayerCompoundMaterialReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerCompoundMaterialReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerCompoundMaterialReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerCompoundMaterialReq_CmdId_PlayerCompoundMaterialReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerCompoundMaterialReq_CmdId_PlayerCompoundMaterialReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerCompoundMaterialReq_CmdId_IsValid(int value);
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq_CmdId_CmdId_MIN = PlayerCompoundMaterialReq_CmdId_NONE;
const PlayerCompoundMaterialReq_CmdId PlayerCompoundMaterialReq_CmdId_CmdId_MAX = PlayerCompoundMaterialReq_CmdId_CMD_ID;
const int PlayerCompoundMaterialReq_CmdId_CmdId_ARRAYSIZE = PlayerCompoundMaterialReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCompoundMaterialReq_CmdId_descriptor();
inline const ::std::string& PlayerCompoundMaterialReq_CmdId_Name(PlayerCompoundMaterialReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCompoundMaterialReq_CmdId_descriptor(), value);
}
inline bool PlayerCompoundMaterialReq_CmdId_Parse(
    const ::std::string& name, PlayerCompoundMaterialReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCompoundMaterialReq_CmdId>(
    PlayerCompoundMaterialReq_CmdId_descriptor(), name, value);
}
enum PlayerCompoundMaterialRsp_CmdId {
  PlayerCompoundMaterialRsp_CmdId_NONE = 0,
  PlayerCompoundMaterialRsp_CmdId_CMD_ID = 134,
  PlayerCompoundMaterialRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerCompoundMaterialRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerCompoundMaterialRsp_CmdId_PlayerCompoundMaterialRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerCompoundMaterialRsp_CmdId_PlayerCompoundMaterialRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerCompoundMaterialRsp_CmdId_IsValid(int value);
const PlayerCompoundMaterialRsp_CmdId PlayerCompoundMaterialRsp_CmdId_CmdId_MIN = PlayerCompoundMaterialRsp_CmdId_NONE;
const PlayerCompoundMaterialRsp_CmdId PlayerCompoundMaterialRsp_CmdId_CmdId_MAX = PlayerCompoundMaterialRsp_CmdId_CMD_ID;
const int PlayerCompoundMaterialRsp_CmdId_CmdId_ARRAYSIZE = PlayerCompoundMaterialRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCompoundMaterialRsp_CmdId_descriptor();
inline const ::std::string& PlayerCompoundMaterialRsp_CmdId_Name(PlayerCompoundMaterialRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCompoundMaterialRsp_CmdId_descriptor(), value);
}
inline bool PlayerCompoundMaterialRsp_CmdId_Parse(
    const ::std::string& name, PlayerCompoundMaterialRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCompoundMaterialRsp_CmdId>(
    PlayerCompoundMaterialRsp_CmdId_descriptor(), name, value);
}
enum TakeCompoundOutputReq_CmdId {
  TakeCompoundOutputReq_CmdId_NONE = 0,
  TakeCompoundOutputReq_CmdId_CMD_ID = 135,
  TakeCompoundOutputReq_CmdId_ENET_CHANNEL_ID = 0,
  TakeCompoundOutputReq_CmdId_ENET_IS_RELIABLE = 1,
  TakeCompoundOutputReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakeCompoundOutputReq_CmdId_TakeCompoundOutputReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeCompoundOutputReq_CmdId_TakeCompoundOutputReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeCompoundOutputReq_CmdId_IsValid(int value);
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq_CmdId_CmdId_MIN = TakeCompoundOutputReq_CmdId_NONE;
const TakeCompoundOutputReq_CmdId TakeCompoundOutputReq_CmdId_CmdId_MAX = TakeCompoundOutputReq_CmdId_CMD_ID;
const int TakeCompoundOutputReq_CmdId_CmdId_ARRAYSIZE = TakeCompoundOutputReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeCompoundOutputReq_CmdId_descriptor();
inline const ::std::string& TakeCompoundOutputReq_CmdId_Name(TakeCompoundOutputReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeCompoundOutputReq_CmdId_descriptor(), value);
}
inline bool TakeCompoundOutputReq_CmdId_Parse(
    const ::std::string& name, TakeCompoundOutputReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeCompoundOutputReq_CmdId>(
    TakeCompoundOutputReq_CmdId_descriptor(), name, value);
}
enum TakeCompoundOutputRsp_CmdId {
  TakeCompoundOutputRsp_CmdId_NONE = 0,
  TakeCompoundOutputRsp_CmdId_CMD_ID = 136,
  TakeCompoundOutputRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakeCompoundOutputRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakeCompoundOutputRsp_CmdId_TakeCompoundOutputRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakeCompoundOutputRsp_CmdId_TakeCompoundOutputRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakeCompoundOutputRsp_CmdId_IsValid(int value);
const TakeCompoundOutputRsp_CmdId TakeCompoundOutputRsp_CmdId_CmdId_MIN = TakeCompoundOutputRsp_CmdId_NONE;
const TakeCompoundOutputRsp_CmdId TakeCompoundOutputRsp_CmdId_CmdId_MAX = TakeCompoundOutputRsp_CmdId_CMD_ID;
const int TakeCompoundOutputRsp_CmdId_CmdId_ARRAYSIZE = TakeCompoundOutputRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakeCompoundOutputRsp_CmdId_descriptor();
inline const ::std::string& TakeCompoundOutputRsp_CmdId_Name(TakeCompoundOutputRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakeCompoundOutputRsp_CmdId_descriptor(), value);
}
inline bool TakeCompoundOutputRsp_CmdId_Parse(
    const ::std::string& name, TakeCompoundOutputRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakeCompoundOutputRsp_CmdId>(
    TakeCompoundOutputRsp_CmdId_descriptor(), name, value);
}
enum CompoundDataNotify_CmdId {
  CompoundDataNotify_CmdId_NONE = 0,
  CompoundDataNotify_CmdId_CMD_ID = 137,
  CompoundDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  CompoundDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  CompoundDataNotify_CmdId_CompoundDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CompoundDataNotify_CmdId_CompoundDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CompoundDataNotify_CmdId_IsValid(int value);
const CompoundDataNotify_CmdId CompoundDataNotify_CmdId_CmdId_MIN = CompoundDataNotify_CmdId_NONE;
const CompoundDataNotify_CmdId CompoundDataNotify_CmdId_CmdId_MAX = CompoundDataNotify_CmdId_CMD_ID;
const int CompoundDataNotify_CmdId_CmdId_ARRAYSIZE = CompoundDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* CompoundDataNotify_CmdId_descriptor();
inline const ::std::string& CompoundDataNotify_CmdId_Name(CompoundDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    CompoundDataNotify_CmdId_descriptor(), value);
}
inline bool CompoundDataNotify_CmdId_Parse(
    const ::std::string& name, CompoundDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CompoundDataNotify_CmdId>(
    CompoundDataNotify_CmdId_descriptor(), name, value);
}
enum GetCompoundDataReq_CmdId {
  GetCompoundDataReq_CmdId_NONE = 0,
  GetCompoundDataReq_CmdId_CMD_ID = 138,
  GetCompoundDataReq_CmdId_ENET_CHANNEL_ID = 0,
  GetCompoundDataReq_CmdId_ENET_IS_RELIABLE = 1,
  GetCompoundDataReq_CmdId_IS_ALLOW_CLIENT = 1,
  GetCompoundDataReq_CmdId_GetCompoundDataReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetCompoundDataReq_CmdId_GetCompoundDataReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetCompoundDataReq_CmdId_IsValid(int value);
const GetCompoundDataReq_CmdId GetCompoundDataReq_CmdId_CmdId_MIN = GetCompoundDataReq_CmdId_NONE;
const GetCompoundDataReq_CmdId GetCompoundDataReq_CmdId_CmdId_MAX = GetCompoundDataReq_CmdId_CMD_ID;
const int GetCompoundDataReq_CmdId_CmdId_ARRAYSIZE = GetCompoundDataReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetCompoundDataReq_CmdId_descriptor();
inline const ::std::string& GetCompoundDataReq_CmdId_Name(GetCompoundDataReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetCompoundDataReq_CmdId_descriptor(), value);
}
inline bool GetCompoundDataReq_CmdId_Parse(
    const ::std::string& name, GetCompoundDataReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetCompoundDataReq_CmdId>(
    GetCompoundDataReq_CmdId_descriptor(), name, value);
}
enum GetCompoundDataRsp_CmdId {
  GetCompoundDataRsp_CmdId_NONE = 0,
  GetCompoundDataRsp_CmdId_CMD_ID = 139,
  GetCompoundDataRsp_CmdId_ENET_CHANNEL_ID = 0,
  GetCompoundDataRsp_CmdId_ENET_IS_RELIABLE = 1,
  GetCompoundDataRsp_CmdId_GetCompoundDataRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GetCompoundDataRsp_CmdId_GetCompoundDataRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GetCompoundDataRsp_CmdId_IsValid(int value);
const GetCompoundDataRsp_CmdId GetCompoundDataRsp_CmdId_CmdId_MIN = GetCompoundDataRsp_CmdId_NONE;
const GetCompoundDataRsp_CmdId GetCompoundDataRsp_CmdId_CmdId_MAX = GetCompoundDataRsp_CmdId_CMD_ID;
const int GetCompoundDataRsp_CmdId_CmdId_ARRAYSIZE = GetCompoundDataRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GetCompoundDataRsp_CmdId_descriptor();
inline const ::std::string& GetCompoundDataRsp_CmdId_Name(GetCompoundDataRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GetCompoundDataRsp_CmdId_descriptor(), value);
}
inline bool GetCompoundDataRsp_CmdId_Parse(
    const ::std::string& name, GetCompoundDataRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GetCompoundDataRsp_CmdId>(
    GetCompoundDataRsp_CmdId_descriptor(), name, value);
}
enum PlayerTimeNotify_CmdId {
  PlayerTimeNotify_CmdId_NONE = 0,
  PlayerTimeNotify_CmdId_CMD_ID = 140,
  PlayerTimeNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerTimeNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerTimeNotify_CmdId_PlayerTimeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerTimeNotify_CmdId_PlayerTimeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerTimeNotify_CmdId_IsValid(int value);
const PlayerTimeNotify_CmdId PlayerTimeNotify_CmdId_CmdId_MIN = PlayerTimeNotify_CmdId_NONE;
const PlayerTimeNotify_CmdId PlayerTimeNotify_CmdId_CmdId_MAX = PlayerTimeNotify_CmdId_CMD_ID;
const int PlayerTimeNotify_CmdId_CmdId_ARRAYSIZE = PlayerTimeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerTimeNotify_CmdId_descriptor();
inline const ::std::string& PlayerTimeNotify_CmdId_Name(PlayerTimeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerTimeNotify_CmdId_descriptor(), value);
}
inline bool PlayerTimeNotify_CmdId_Parse(
    const ::std::string& name, PlayerTimeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerTimeNotify_CmdId>(
    PlayerTimeNotify_CmdId_descriptor(), name, value);
}
enum PlayerSetPauseReq_CmdId {
  PlayerSetPauseReq_CmdId_NONE = 0,
  PlayerSetPauseReq_CmdId_CMD_ID = 141,
  PlayerSetPauseReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerSetPauseReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerSetPauseReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerSetPauseReq_CmdId_PlayerSetPauseReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerSetPauseReq_CmdId_PlayerSetPauseReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerSetPauseReq_CmdId_IsValid(int value);
const PlayerSetPauseReq_CmdId PlayerSetPauseReq_CmdId_CmdId_MIN = PlayerSetPauseReq_CmdId_NONE;
const PlayerSetPauseReq_CmdId PlayerSetPauseReq_CmdId_CmdId_MAX = PlayerSetPauseReq_CmdId_CMD_ID;
const int PlayerSetPauseReq_CmdId_CmdId_ARRAYSIZE = PlayerSetPauseReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerSetPauseReq_CmdId_descriptor();
inline const ::std::string& PlayerSetPauseReq_CmdId_Name(PlayerSetPauseReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerSetPauseReq_CmdId_descriptor(), value);
}
inline bool PlayerSetPauseReq_CmdId_Parse(
    const ::std::string& name, PlayerSetPauseReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerSetPauseReq_CmdId>(
    PlayerSetPauseReq_CmdId_descriptor(), name, value);
}
enum PlayerSetPauseRsp_CmdId {
  PlayerSetPauseRsp_CmdId_NONE = 0,
  PlayerSetPauseRsp_CmdId_CMD_ID = 142,
  PlayerSetPauseRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerSetPauseRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerSetPauseRsp_CmdId_PlayerSetPauseRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerSetPauseRsp_CmdId_PlayerSetPauseRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerSetPauseRsp_CmdId_IsValid(int value);
const PlayerSetPauseRsp_CmdId PlayerSetPauseRsp_CmdId_CmdId_MIN = PlayerSetPauseRsp_CmdId_NONE;
const PlayerSetPauseRsp_CmdId PlayerSetPauseRsp_CmdId_CmdId_MAX = PlayerSetPauseRsp_CmdId_CMD_ID;
const int PlayerSetPauseRsp_CmdId_CmdId_ARRAYSIZE = PlayerSetPauseRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerSetPauseRsp_CmdId_descriptor();
inline const ::std::string& PlayerSetPauseRsp_CmdId_Name(PlayerSetPauseRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerSetPauseRsp_CmdId_descriptor(), value);
}
inline bool PlayerSetPauseRsp_CmdId_Parse(
    const ::std::string& name, PlayerSetPauseRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerSetPauseRsp_CmdId>(
    PlayerSetPauseRsp_CmdId_descriptor(), name, value);
}
enum PlayerSetLanguageReq_CmdId {
  PlayerSetLanguageReq_CmdId_NONE = 0,
  PlayerSetLanguageReq_CmdId_CMD_ID = 143,
  PlayerSetLanguageReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerSetLanguageReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerSetLanguageReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerSetLanguageReq_CmdId_PlayerSetLanguageReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerSetLanguageReq_CmdId_PlayerSetLanguageReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerSetLanguageReq_CmdId_IsValid(int value);
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq_CmdId_CmdId_MIN = PlayerSetLanguageReq_CmdId_NONE;
const PlayerSetLanguageReq_CmdId PlayerSetLanguageReq_CmdId_CmdId_MAX = PlayerSetLanguageReq_CmdId_CMD_ID;
const int PlayerSetLanguageReq_CmdId_CmdId_ARRAYSIZE = PlayerSetLanguageReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerSetLanguageReq_CmdId_descriptor();
inline const ::std::string& PlayerSetLanguageReq_CmdId_Name(PlayerSetLanguageReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerSetLanguageReq_CmdId_descriptor(), value);
}
inline bool PlayerSetLanguageReq_CmdId_Parse(
    const ::std::string& name, PlayerSetLanguageReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerSetLanguageReq_CmdId>(
    PlayerSetLanguageReq_CmdId_descriptor(), name, value);
}
enum PlayerSetLanguageRsp_CmdId {
  PlayerSetLanguageRsp_CmdId_NONE = 0,
  PlayerSetLanguageRsp_CmdId_CMD_ID = 144,
  PlayerSetLanguageRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerSetLanguageRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerSetLanguageRsp_CmdId_PlayerSetLanguageRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerSetLanguageRsp_CmdId_PlayerSetLanguageRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerSetLanguageRsp_CmdId_IsValid(int value);
const PlayerSetLanguageRsp_CmdId PlayerSetLanguageRsp_CmdId_CmdId_MIN = PlayerSetLanguageRsp_CmdId_NONE;
const PlayerSetLanguageRsp_CmdId PlayerSetLanguageRsp_CmdId_CmdId_MAX = PlayerSetLanguageRsp_CmdId_CMD_ID;
const int PlayerSetLanguageRsp_CmdId_CmdId_ARRAYSIZE = PlayerSetLanguageRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerSetLanguageRsp_CmdId_descriptor();
inline const ::std::string& PlayerSetLanguageRsp_CmdId_Name(PlayerSetLanguageRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerSetLanguageRsp_CmdId_descriptor(), value);
}
inline bool PlayerSetLanguageRsp_CmdId_Parse(
    const ::std::string& name, PlayerSetLanguageRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerSetLanguageRsp_CmdId>(
    PlayerSetLanguageRsp_CmdId_descriptor(), name, value);
}
enum DataResVersionNotify_CmdId {
  DataResVersionNotify_CmdId_NONE = 0,
  DataResVersionNotify_CmdId_CMD_ID = 145,
  DataResVersionNotify_CmdId_ENET_CHANNEL_ID = 0,
  DataResVersionNotify_CmdId_ENET_IS_RELIABLE = 1,
  DataResVersionNotify_CmdId_DataResVersionNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DataResVersionNotify_CmdId_DataResVersionNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DataResVersionNotify_CmdId_IsValid(int value);
const DataResVersionNotify_CmdId DataResVersionNotify_CmdId_CmdId_MIN = DataResVersionNotify_CmdId_NONE;
const DataResVersionNotify_CmdId DataResVersionNotify_CmdId_CmdId_MAX = DataResVersionNotify_CmdId_CMD_ID;
const int DataResVersionNotify_CmdId_CmdId_ARRAYSIZE = DataResVersionNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataResVersionNotify_CmdId_descriptor();
inline const ::std::string& DataResVersionNotify_CmdId_Name(DataResVersionNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataResVersionNotify_CmdId_descriptor(), value);
}
inline bool DataResVersionNotify_CmdId_Parse(
    const ::std::string& name, DataResVersionNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataResVersionNotify_CmdId>(
    DataResVersionNotify_CmdId_descriptor(), name, value);
}
enum DailyTaskDataNotify_CmdId {
  DailyTaskDataNotify_CmdId_NONE = 0,
  DailyTaskDataNotify_CmdId_CMD_ID = 146,
  DailyTaskDataNotify_CmdId_ENET_CHANNEL_ID = 0,
  DailyTaskDataNotify_CmdId_ENET_IS_RELIABLE = 1,
  DailyTaskDataNotify_CmdId_DailyTaskDataNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DailyTaskDataNotify_CmdId_DailyTaskDataNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DailyTaskDataNotify_CmdId_IsValid(int value);
const DailyTaskDataNotify_CmdId DailyTaskDataNotify_CmdId_CmdId_MIN = DailyTaskDataNotify_CmdId_NONE;
const DailyTaskDataNotify_CmdId DailyTaskDataNotify_CmdId_CmdId_MAX = DailyTaskDataNotify_CmdId_CMD_ID;
const int DailyTaskDataNotify_CmdId_CmdId_ARRAYSIZE = DailyTaskDataNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DailyTaskDataNotify_CmdId_descriptor();
inline const ::std::string& DailyTaskDataNotify_CmdId_Name(DailyTaskDataNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DailyTaskDataNotify_CmdId_descriptor(), value);
}
inline bool DailyTaskDataNotify_CmdId_Parse(
    const ::std::string& name, DailyTaskDataNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DailyTaskDataNotify_CmdId>(
    DailyTaskDataNotify_CmdId_descriptor(), name, value);
}
enum DailyTaskProgressNotify_CmdId {
  DailyTaskProgressNotify_CmdId_NONE = 0,
  DailyTaskProgressNotify_CmdId_CMD_ID = 147,
  DailyTaskProgressNotify_CmdId_ENET_CHANNEL_ID = 0,
  DailyTaskProgressNotify_CmdId_ENET_IS_RELIABLE = 1,
  DailyTaskProgressNotify_CmdId_DailyTaskProgressNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DailyTaskProgressNotify_CmdId_DailyTaskProgressNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DailyTaskProgressNotify_CmdId_IsValid(int value);
const DailyTaskProgressNotify_CmdId DailyTaskProgressNotify_CmdId_CmdId_MIN = DailyTaskProgressNotify_CmdId_NONE;
const DailyTaskProgressNotify_CmdId DailyTaskProgressNotify_CmdId_CmdId_MAX = DailyTaskProgressNotify_CmdId_CMD_ID;
const int DailyTaskProgressNotify_CmdId_CmdId_ARRAYSIZE = DailyTaskProgressNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DailyTaskProgressNotify_CmdId_descriptor();
inline const ::std::string& DailyTaskProgressNotify_CmdId_Name(DailyTaskProgressNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DailyTaskProgressNotify_CmdId_descriptor(), value);
}
inline bool DailyTaskProgressNotify_CmdId_Parse(
    const ::std::string& name, DailyTaskProgressNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DailyTaskProgressNotify_CmdId>(
    DailyTaskProgressNotify_CmdId_descriptor(), name, value);
}
enum DailyTaskScoreRewardNotify_CmdId {
  DailyTaskScoreRewardNotify_CmdId_NONE = 0,
  DailyTaskScoreRewardNotify_CmdId_CMD_ID = 148,
  DailyTaskScoreRewardNotify_CmdId_ENET_CHANNEL_ID = 0,
  DailyTaskScoreRewardNotify_CmdId_ENET_IS_RELIABLE = 1,
  DailyTaskScoreRewardNotify_CmdId_DailyTaskScoreRewardNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  DailyTaskScoreRewardNotify_CmdId_DailyTaskScoreRewardNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool DailyTaskScoreRewardNotify_CmdId_IsValid(int value);
const DailyTaskScoreRewardNotify_CmdId DailyTaskScoreRewardNotify_CmdId_CmdId_MIN = DailyTaskScoreRewardNotify_CmdId_NONE;
const DailyTaskScoreRewardNotify_CmdId DailyTaskScoreRewardNotify_CmdId_CmdId_MAX = DailyTaskScoreRewardNotify_CmdId_CMD_ID;
const int DailyTaskScoreRewardNotify_CmdId_CmdId_ARRAYSIZE = DailyTaskScoreRewardNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* DailyTaskScoreRewardNotify_CmdId_descriptor();
inline const ::std::string& DailyTaskScoreRewardNotify_CmdId_Name(DailyTaskScoreRewardNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    DailyTaskScoreRewardNotify_CmdId_descriptor(), value);
}
inline bool DailyTaskScoreRewardNotify_CmdId_Parse(
    const ::std::string& name, DailyTaskScoreRewardNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DailyTaskScoreRewardNotify_CmdId>(
    DailyTaskScoreRewardNotify_CmdId_descriptor(), name, value);
}
enum WorldOwnerDailyTaskNotify_CmdId {
  WorldOwnerDailyTaskNotify_CmdId_NONE = 0,
  WorldOwnerDailyTaskNotify_CmdId_CMD_ID = 149,
  WorldOwnerDailyTaskNotify_CmdId_ENET_CHANNEL_ID = 0,
  WorldOwnerDailyTaskNotify_CmdId_ENET_IS_RELIABLE = 1,
  WorldOwnerDailyTaskNotify_CmdId_IS_ALLOW_CLIENT = 1,
  WorldOwnerDailyTaskNotify_CmdId_WorldOwnerDailyTaskNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  WorldOwnerDailyTaskNotify_CmdId_WorldOwnerDailyTaskNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool WorldOwnerDailyTaskNotify_CmdId_IsValid(int value);
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify_CmdId_CmdId_MIN = WorldOwnerDailyTaskNotify_CmdId_NONE;
const WorldOwnerDailyTaskNotify_CmdId WorldOwnerDailyTaskNotify_CmdId_CmdId_MAX = WorldOwnerDailyTaskNotify_CmdId_CMD_ID;
const int WorldOwnerDailyTaskNotify_CmdId_CmdId_ARRAYSIZE = WorldOwnerDailyTaskNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* WorldOwnerDailyTaskNotify_CmdId_descriptor();
inline const ::std::string& WorldOwnerDailyTaskNotify_CmdId_Name(WorldOwnerDailyTaskNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    WorldOwnerDailyTaskNotify_CmdId_descriptor(), value);
}
inline bool WorldOwnerDailyTaskNotify_CmdId_Parse(
    const ::std::string& name, WorldOwnerDailyTaskNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WorldOwnerDailyTaskNotify_CmdId>(
    WorldOwnerDailyTaskNotify_CmdId_descriptor(), name, value);
}
enum AddRandTaskInfoNotify_CmdId {
  AddRandTaskInfoNotify_CmdId_NONE = 0,
  AddRandTaskInfoNotify_CmdId_CMD_ID = 150,
  AddRandTaskInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  AddRandTaskInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  AddRandTaskInfoNotify_CmdId_AddRandTaskInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AddRandTaskInfoNotify_CmdId_AddRandTaskInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AddRandTaskInfoNotify_CmdId_IsValid(int value);
const AddRandTaskInfoNotify_CmdId AddRandTaskInfoNotify_CmdId_CmdId_MIN = AddRandTaskInfoNotify_CmdId_NONE;
const AddRandTaskInfoNotify_CmdId AddRandTaskInfoNotify_CmdId_CmdId_MAX = AddRandTaskInfoNotify_CmdId_CMD_ID;
const int AddRandTaskInfoNotify_CmdId_CmdId_ARRAYSIZE = AddRandTaskInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* AddRandTaskInfoNotify_CmdId_descriptor();
inline const ::std::string& AddRandTaskInfoNotify_CmdId_Name(AddRandTaskInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    AddRandTaskInfoNotify_CmdId_descriptor(), value);
}
inline bool AddRandTaskInfoNotify_CmdId_Parse(
    const ::std::string& name, AddRandTaskInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddRandTaskInfoNotify_CmdId>(
    AddRandTaskInfoNotify_CmdId_descriptor(), name, value);
}
enum RemoveRandTaskInfoNotify_FinishReason {
  RemoveRandTaskInfoNotify_FinishReason_DEFAULT = 0,
  RemoveRandTaskInfoNotify_FinishReason_CLEAR = 1,
  RemoveRandTaskInfoNotify_FinishReason_DISTANCE = 2,
  RemoveRandTaskInfoNotify_FinishReason_FINISH = 3,
  RemoveRandTaskInfoNotify_FinishReason_RemoveRandTaskInfoNotify_FinishReason_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RemoveRandTaskInfoNotify_FinishReason_RemoveRandTaskInfoNotify_FinishReason_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RemoveRandTaskInfoNotify_FinishReason_IsValid(int value);
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify_FinishReason_FinishReason_MIN = RemoveRandTaskInfoNotify_FinishReason_DEFAULT;
const RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify_FinishReason_FinishReason_MAX = RemoveRandTaskInfoNotify_FinishReason_FINISH;
const int RemoveRandTaskInfoNotify_FinishReason_FinishReason_ARRAYSIZE = RemoveRandTaskInfoNotify_FinishReason_FinishReason_MAX + 1;

const ::google::protobuf::EnumDescriptor* RemoveRandTaskInfoNotify_FinishReason_descriptor();
inline const ::std::string& RemoveRandTaskInfoNotify_FinishReason_Name(RemoveRandTaskInfoNotify_FinishReason value) {
  return ::google::protobuf::internal::NameOfEnum(
    RemoveRandTaskInfoNotify_FinishReason_descriptor(), value);
}
inline bool RemoveRandTaskInfoNotify_FinishReason_Parse(
    const ::std::string& name, RemoveRandTaskInfoNotify_FinishReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoveRandTaskInfoNotify_FinishReason>(
    RemoveRandTaskInfoNotify_FinishReason_descriptor(), name, value);
}
enum RemoveRandTaskInfoNotify_CmdId {
  RemoveRandTaskInfoNotify_CmdId_NONE = 0,
  RemoveRandTaskInfoNotify_CmdId_CMD_ID = 151,
  RemoveRandTaskInfoNotify_CmdId_ENET_CHANNEL_ID = 0,
  RemoveRandTaskInfoNotify_CmdId_ENET_IS_RELIABLE = 1,
  RemoveRandTaskInfoNotify_CmdId_RemoveRandTaskInfoNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RemoveRandTaskInfoNotify_CmdId_RemoveRandTaskInfoNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RemoveRandTaskInfoNotify_CmdId_IsValid(int value);
const RemoveRandTaskInfoNotify_CmdId RemoveRandTaskInfoNotify_CmdId_CmdId_MIN = RemoveRandTaskInfoNotify_CmdId_NONE;
const RemoveRandTaskInfoNotify_CmdId RemoveRandTaskInfoNotify_CmdId_CmdId_MAX = RemoveRandTaskInfoNotify_CmdId_CMD_ID;
const int RemoveRandTaskInfoNotify_CmdId_CmdId_ARRAYSIZE = RemoveRandTaskInfoNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* RemoveRandTaskInfoNotify_CmdId_descriptor();
inline const ::std::string& RemoveRandTaskInfoNotify_CmdId_Name(RemoveRandTaskInfoNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    RemoveRandTaskInfoNotify_CmdId_descriptor(), value);
}
inline bool RemoveRandTaskInfoNotify_CmdId_Parse(
    const ::std::string& name, RemoveRandTaskInfoNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemoveRandTaskInfoNotify_CmdId>(
    RemoveRandTaskInfoNotify_CmdId_descriptor(), name, value);
}
enum TakePlayerLevelRewardReq_CmdId {
  TakePlayerLevelRewardReq_CmdId_NONE = 0,
  TakePlayerLevelRewardReq_CmdId_CMD_ID = 152,
  TakePlayerLevelRewardReq_CmdId_ENET_CHANNEL_ID = 0,
  TakePlayerLevelRewardReq_CmdId_ENET_IS_RELIABLE = 1,
  TakePlayerLevelRewardReq_CmdId_IS_ALLOW_CLIENT = 1,
  TakePlayerLevelRewardReq_CmdId_TakePlayerLevelRewardReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakePlayerLevelRewardReq_CmdId_TakePlayerLevelRewardReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakePlayerLevelRewardReq_CmdId_IsValid(int value);
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq_CmdId_CmdId_MIN = TakePlayerLevelRewardReq_CmdId_NONE;
const TakePlayerLevelRewardReq_CmdId TakePlayerLevelRewardReq_CmdId_CmdId_MAX = TakePlayerLevelRewardReq_CmdId_CMD_ID;
const int TakePlayerLevelRewardReq_CmdId_CmdId_ARRAYSIZE = TakePlayerLevelRewardReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakePlayerLevelRewardReq_CmdId_descriptor();
inline const ::std::string& TakePlayerLevelRewardReq_CmdId_Name(TakePlayerLevelRewardReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakePlayerLevelRewardReq_CmdId_descriptor(), value);
}
inline bool TakePlayerLevelRewardReq_CmdId_Parse(
    const ::std::string& name, TakePlayerLevelRewardReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakePlayerLevelRewardReq_CmdId>(
    TakePlayerLevelRewardReq_CmdId_descriptor(), name, value);
}
enum TakePlayerLevelRewardRsp_CmdId {
  TakePlayerLevelRewardRsp_CmdId_NONE = 0,
  TakePlayerLevelRewardRsp_CmdId_CMD_ID = 153,
  TakePlayerLevelRewardRsp_CmdId_ENET_CHANNEL_ID = 0,
  TakePlayerLevelRewardRsp_CmdId_ENET_IS_RELIABLE = 1,
  TakePlayerLevelRewardRsp_CmdId_TakePlayerLevelRewardRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TakePlayerLevelRewardRsp_CmdId_TakePlayerLevelRewardRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TakePlayerLevelRewardRsp_CmdId_IsValid(int value);
const TakePlayerLevelRewardRsp_CmdId TakePlayerLevelRewardRsp_CmdId_CmdId_MIN = TakePlayerLevelRewardRsp_CmdId_NONE;
const TakePlayerLevelRewardRsp_CmdId TakePlayerLevelRewardRsp_CmdId_CmdId_MAX = TakePlayerLevelRewardRsp_CmdId_CMD_ID;
const int TakePlayerLevelRewardRsp_CmdId_CmdId_ARRAYSIZE = TakePlayerLevelRewardRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* TakePlayerLevelRewardRsp_CmdId_descriptor();
inline const ::std::string& TakePlayerLevelRewardRsp_CmdId_Name(TakePlayerLevelRewardRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    TakePlayerLevelRewardRsp_CmdId_descriptor(), value);
}
inline bool TakePlayerLevelRewardRsp_CmdId_Parse(
    const ::std::string& name, TakePlayerLevelRewardRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TakePlayerLevelRewardRsp_CmdId>(
    TakePlayerLevelRewardRsp_CmdId_descriptor(), name, value);
}
enum PlayerLevelRewardUpdateNotify_CmdId {
  PlayerLevelRewardUpdateNotify_CmdId_NONE = 0,
  PlayerLevelRewardUpdateNotify_CmdId_CMD_ID = 154,
  PlayerLevelRewardUpdateNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerLevelRewardUpdateNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerLevelRewardUpdateNotify_CmdId_PlayerLevelRewardUpdateNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLevelRewardUpdateNotify_CmdId_PlayerLevelRewardUpdateNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLevelRewardUpdateNotify_CmdId_IsValid(int value);
const PlayerLevelRewardUpdateNotify_CmdId PlayerLevelRewardUpdateNotify_CmdId_CmdId_MIN = PlayerLevelRewardUpdateNotify_CmdId_NONE;
const PlayerLevelRewardUpdateNotify_CmdId PlayerLevelRewardUpdateNotify_CmdId_CmdId_MAX = PlayerLevelRewardUpdateNotify_CmdId_CMD_ID;
const int PlayerLevelRewardUpdateNotify_CmdId_CmdId_ARRAYSIZE = PlayerLevelRewardUpdateNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLevelRewardUpdateNotify_CmdId_descriptor();
inline const ::std::string& PlayerLevelRewardUpdateNotify_CmdId_Name(PlayerLevelRewardUpdateNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLevelRewardUpdateNotify_CmdId_descriptor(), value);
}
inline bool PlayerLevelRewardUpdateNotify_CmdId_Parse(
    const ::std::string& name, PlayerLevelRewardUpdateNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLevelRewardUpdateNotify_CmdId>(
    PlayerLevelRewardUpdateNotify_CmdId_descriptor(), name, value);
}
enum GivingRecordNotify_CmdId {
  GivingRecordNotify_CmdId_NONE = 0,
  GivingRecordNotify_CmdId_CMD_ID = 155,
  GivingRecordNotify_CmdId_ENET_CHANNEL_ID = 0,
  GivingRecordNotify_CmdId_ENET_IS_RELIABLE = 1,
  GivingRecordNotify_CmdId_GivingRecordNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GivingRecordNotify_CmdId_GivingRecordNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GivingRecordNotify_CmdId_IsValid(int value);
const GivingRecordNotify_CmdId GivingRecordNotify_CmdId_CmdId_MIN = GivingRecordNotify_CmdId_NONE;
const GivingRecordNotify_CmdId GivingRecordNotify_CmdId_CmdId_MAX = GivingRecordNotify_CmdId_CMD_ID;
const int GivingRecordNotify_CmdId_CmdId_ARRAYSIZE = GivingRecordNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GivingRecordNotify_CmdId_descriptor();
inline const ::std::string& GivingRecordNotify_CmdId_Name(GivingRecordNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GivingRecordNotify_CmdId_descriptor(), value);
}
inline bool GivingRecordNotify_CmdId_Parse(
    const ::std::string& name, GivingRecordNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GivingRecordNotify_CmdId>(
    GivingRecordNotify_CmdId_descriptor(), name, value);
}
enum GivingRecordChangeNotify_CmdId {
  GivingRecordChangeNotify_CmdId_NONE = 0,
  GivingRecordChangeNotify_CmdId_CMD_ID = 156,
  GivingRecordChangeNotify_CmdId_ENET_CHANNEL_ID = 0,
  GivingRecordChangeNotify_CmdId_ENET_IS_RELIABLE = 1,
  GivingRecordChangeNotify_CmdId_GivingRecordChangeNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GivingRecordChangeNotify_CmdId_GivingRecordChangeNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GivingRecordChangeNotify_CmdId_IsValid(int value);
const GivingRecordChangeNotify_CmdId GivingRecordChangeNotify_CmdId_CmdId_MIN = GivingRecordChangeNotify_CmdId_NONE;
const GivingRecordChangeNotify_CmdId GivingRecordChangeNotify_CmdId_CmdId_MAX = GivingRecordChangeNotify_CmdId_CMD_ID;
const int GivingRecordChangeNotify_CmdId_CmdId_ARRAYSIZE = GivingRecordChangeNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* GivingRecordChangeNotify_CmdId_descriptor();
inline const ::std::string& GivingRecordChangeNotify_CmdId_Name(GivingRecordChangeNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    GivingRecordChangeNotify_CmdId_descriptor(), value);
}
inline bool GivingRecordChangeNotify_CmdId_Parse(
    const ::std::string& name, GivingRecordChangeNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GivingRecordChangeNotify_CmdId>(
    GivingRecordChangeNotify_CmdId_descriptor(), name, value);
}
enum ItemGivingReq_CmdId {
  ItemGivingReq_CmdId_NONE = 0,
  ItemGivingReq_CmdId_CMD_ID = 157,
  ItemGivingReq_CmdId_ENET_CHANNEL_ID = 0,
  ItemGivingReq_CmdId_ENET_IS_RELIABLE = 1,
  ItemGivingReq_CmdId_IS_ALLOW_CLIENT = 1,
  ItemGivingReq_CmdId_ItemGivingReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ItemGivingReq_CmdId_ItemGivingReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ItemGivingReq_CmdId_IsValid(int value);
const ItemGivingReq_CmdId ItemGivingReq_CmdId_CmdId_MIN = ItemGivingReq_CmdId_NONE;
const ItemGivingReq_CmdId ItemGivingReq_CmdId_CmdId_MAX = ItemGivingReq_CmdId_CMD_ID;
const int ItemGivingReq_CmdId_CmdId_ARRAYSIZE = ItemGivingReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemGivingReq_CmdId_descriptor();
inline const ::std::string& ItemGivingReq_CmdId_Name(ItemGivingReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemGivingReq_CmdId_descriptor(), value);
}
inline bool ItemGivingReq_CmdId_Parse(
    const ::std::string& name, ItemGivingReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemGivingReq_CmdId>(
    ItemGivingReq_CmdId_descriptor(), name, value);
}
enum ItemGivingRsp_CmdId {
  ItemGivingRsp_CmdId_NONE = 0,
  ItemGivingRsp_CmdId_CMD_ID = 158,
  ItemGivingRsp_CmdId_ENET_CHANNEL_ID = 0,
  ItemGivingRsp_CmdId_ENET_IS_RELIABLE = 1,
  ItemGivingRsp_CmdId_ItemGivingRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ItemGivingRsp_CmdId_ItemGivingRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ItemGivingRsp_CmdId_IsValid(int value);
const ItemGivingRsp_CmdId ItemGivingRsp_CmdId_CmdId_MIN = ItemGivingRsp_CmdId_NONE;
const ItemGivingRsp_CmdId ItemGivingRsp_CmdId_CmdId_MAX = ItemGivingRsp_CmdId_CMD_ID;
const int ItemGivingRsp_CmdId_CmdId_ARRAYSIZE = ItemGivingRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemGivingRsp_CmdId_descriptor();
inline const ::std::string& ItemGivingRsp_CmdId_Name(ItemGivingRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemGivingRsp_CmdId_descriptor(), value);
}
inline bool ItemGivingRsp_CmdId_Parse(
    const ::std::string& name, ItemGivingRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemGivingRsp_CmdId>(
    ItemGivingRsp_CmdId_descriptor(), name, value);
}
enum PlayerCookArgsReq_CmdId {
  PlayerCookArgsReq_CmdId_NONE = 0,
  PlayerCookArgsReq_CmdId_CMD_ID = 159,
  PlayerCookArgsReq_CmdId_ENET_CHANNEL_ID = 0,
  PlayerCookArgsReq_CmdId_ENET_IS_RELIABLE = 1,
  PlayerCookArgsReq_CmdId_IS_ALLOW_CLIENT = 1,
  PlayerCookArgsReq_CmdId_PlayerCookArgsReq_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerCookArgsReq_CmdId_PlayerCookArgsReq_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerCookArgsReq_CmdId_IsValid(int value);
const PlayerCookArgsReq_CmdId PlayerCookArgsReq_CmdId_CmdId_MIN = PlayerCookArgsReq_CmdId_NONE;
const PlayerCookArgsReq_CmdId PlayerCookArgsReq_CmdId_CmdId_MAX = PlayerCookArgsReq_CmdId_CMD_ID;
const int PlayerCookArgsReq_CmdId_CmdId_ARRAYSIZE = PlayerCookArgsReq_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCookArgsReq_CmdId_descriptor();
inline const ::std::string& PlayerCookArgsReq_CmdId_Name(PlayerCookArgsReq_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCookArgsReq_CmdId_descriptor(), value);
}
inline bool PlayerCookArgsReq_CmdId_Parse(
    const ::std::string& name, PlayerCookArgsReq_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCookArgsReq_CmdId>(
    PlayerCookArgsReq_CmdId_descriptor(), name, value);
}
enum PlayerCookArgsRsp_CmdId {
  PlayerCookArgsRsp_CmdId_NONE = 0,
  PlayerCookArgsRsp_CmdId_CMD_ID = 160,
  PlayerCookArgsRsp_CmdId_ENET_CHANNEL_ID = 0,
  PlayerCookArgsRsp_CmdId_ENET_IS_RELIABLE = 1,
  PlayerCookArgsRsp_CmdId_PlayerCookArgsRsp_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerCookArgsRsp_CmdId_PlayerCookArgsRsp_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerCookArgsRsp_CmdId_IsValid(int value);
const PlayerCookArgsRsp_CmdId PlayerCookArgsRsp_CmdId_CmdId_MIN = PlayerCookArgsRsp_CmdId_NONE;
const PlayerCookArgsRsp_CmdId PlayerCookArgsRsp_CmdId_CmdId_MAX = PlayerCookArgsRsp_CmdId_CMD_ID;
const int PlayerCookArgsRsp_CmdId_CmdId_ARRAYSIZE = PlayerCookArgsRsp_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCookArgsRsp_CmdId_descriptor();
inline const ::std::string& PlayerCookArgsRsp_CmdId_Name(PlayerCookArgsRsp_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCookArgsRsp_CmdId_descriptor(), value);
}
inline bool PlayerCookArgsRsp_CmdId_Parse(
    const ::std::string& name, PlayerCookArgsRsp_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCookArgsRsp_CmdId>(
    PlayerCookArgsRsp_CmdId_descriptor(), name, value);
}
enum PlayerLuaShellNotify_CmdId {
  PlayerLuaShellNotify_CmdId_NONE = 0,
  PlayerLuaShellNotify_CmdId_CMD_ID = 161,
  PlayerLuaShellNotify_CmdId_ENET_CHANNEL_ID = 0,
  PlayerLuaShellNotify_CmdId_ENET_IS_RELIABLE = 1,
  PlayerLuaShellNotify_CmdId_PlayerLuaShellNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerLuaShellNotify_CmdId_PlayerLuaShellNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerLuaShellNotify_CmdId_IsValid(int value);
const PlayerLuaShellNotify_CmdId PlayerLuaShellNotify_CmdId_CmdId_MIN = PlayerLuaShellNotify_CmdId_NONE;
const PlayerLuaShellNotify_CmdId PlayerLuaShellNotify_CmdId_CmdId_MAX = PlayerLuaShellNotify_CmdId_CMD_ID;
const int PlayerLuaShellNotify_CmdId_CmdId_ARRAYSIZE = PlayerLuaShellNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerLuaShellNotify_CmdId_descriptor();
inline const ::std::string& PlayerLuaShellNotify_CmdId_Name(PlayerLuaShellNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerLuaShellNotify_CmdId_descriptor(), value);
}
inline bool PlayerLuaShellNotify_CmdId_Parse(
    const ::std::string& name, PlayerLuaShellNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerLuaShellNotify_CmdId>(
    PlayerLuaShellNotify_CmdId_descriptor(), name, value);
}
enum ServerDisconnectClientNotify_CmdId {
  ServerDisconnectClientNotify_CmdId_NONE = 0,
  ServerDisconnectClientNotify_CmdId_CMD_ID = 162,
  ServerDisconnectClientNotify_CmdId_ENET_CHANNEL_ID = 0,
  ServerDisconnectClientNotify_CmdId_ENET_IS_RELIABLE = 1,
  ServerDisconnectClientNotify_CmdId_ServerDisconnectClientNotify_CmdId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServerDisconnectClientNotify_CmdId_ServerDisconnectClientNotify_CmdId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServerDisconnectClientNotify_CmdId_IsValid(int value);
const ServerDisconnectClientNotify_CmdId ServerDisconnectClientNotify_CmdId_CmdId_MIN = ServerDisconnectClientNotify_CmdId_NONE;
const ServerDisconnectClientNotify_CmdId ServerDisconnectClientNotify_CmdId_CmdId_MAX = ServerDisconnectClientNotify_CmdId_CMD_ID;
const int ServerDisconnectClientNotify_CmdId_CmdId_ARRAYSIZE = ServerDisconnectClientNotify_CmdId_CmdId_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServerDisconnectClientNotify_CmdId_descriptor();
inline const ::std::string& ServerDisconnectClientNotify_CmdId_Name(ServerDisconnectClientNotify_CmdId value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerDisconnectClientNotify_CmdId_descriptor(), value);
}
inline bool ServerDisconnectClientNotify_CmdId_Parse(
    const ::std::string& name, ServerDisconnectClientNotify_CmdId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerDisconnectClientNotify_CmdId>(
    ServerDisconnectClientNotify_CmdId_descriptor(), name, value);
}
// ===================================================================

class GetPlayerTokenReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerTokenReq) */ {
 public:
  GetPlayerTokenReq();
  virtual ~GetPlayerTokenReq();

  GetPlayerTokenReq(const GetPlayerTokenReq& from);

  inline GetPlayerTokenReq& operator=(const GetPlayerTokenReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerTokenReq(GetPlayerTokenReq&& from) noexcept
    : GetPlayerTokenReq() {
    *this = ::std::move(from);
  }

  inline GetPlayerTokenReq& operator=(GetPlayerTokenReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerTokenReq& default_instance();

  static inline const GetPlayerTokenReq* internal_default_instance() {
    return reinterpret_cast<const GetPlayerTokenReq*>(
               &_GetPlayerTokenReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetPlayerTokenReq* other);
  friend void swap(GetPlayerTokenReq& a, GetPlayerTokenReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerTokenReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerTokenReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerTokenReq& from);
  void MergeFrom(const GetPlayerTokenReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerTokenReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetPlayerTokenReq_CmdId CmdId;
  static const CmdId NONE =
    GetPlayerTokenReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetPlayerTokenReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetPlayerTokenReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetPlayerTokenReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetPlayerTokenReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetPlayerTokenReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetPlayerTokenReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetPlayerTokenReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetPlayerTokenReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetPlayerTokenReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetPlayerTokenReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetPlayerTokenReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string account_uid = 2;
  void clear_account_uid();
  static const int kAccountUidFieldNumber = 2;
  const ::std::string& account_uid() const;
  void set_account_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_account_uid(::std::string&& value);
  #endif
  void set_account_uid(const char* value);
  void set_account_uid(const char* value, size_t size);
  ::std::string* mutable_account_uid();
  ::std::string* release_account_uid();
  void set_allocated_account_uid(::std::string* account_uid);

  // string account_token = 3;
  void clear_account_token();
  static const int kAccountTokenFieldNumber = 3;
  const ::std::string& account_token() const;
  void set_account_token(const ::std::string& value);
  #if LANG_CXX11
  void set_account_token(::std::string&& value);
  #endif
  void set_account_token(const char* value);
  void set_account_token(const char* value, size_t size);
  ::std::string* mutable_account_token();
  ::std::string* release_account_token();
  void set_allocated_account_token(::std::string* account_token);

  // string account_ext = 4;
  void clear_account_ext();
  static const int kAccountExtFieldNumber = 4;
  const ::std::string& account_ext() const;
  void set_account_ext(const ::std::string& value);
  #if LANG_CXX11
  void set_account_ext(::std::string&& value);
  #endif
  void set_account_ext(const char* value);
  void set_account_ext(const char* value, size_t size);
  ::std::string* mutable_account_ext();
  ::std::string* release_account_ext();
  void set_allocated_account_ext(::std::string* account_ext);

  // uint32 account_type = 1;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 1;
  ::google::protobuf::uint32 account_type() const;
  void set_account_type(::google::protobuf::uint32 value);

  // uint32 uid = 5;
  void clear_uid();
  static const int kUidFieldNumber = 5;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // bool is_guest = 6;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 6;
  bool is_guest() const;
  void set_is_guest(bool value);

  // uint32 platform_type = 7;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 7;
  ::google::protobuf::uint32 platform_type() const;
  void set_platform_type(::google::protobuf::uint32 value);

  // uint32 cloud_client_ip = 8;
  void clear_cloud_client_ip();
  static const int kCloudClientIpFieldNumber = 8;
  ::google::protobuf::uint32 cloud_client_ip() const;
  void set_cloud_client_ip(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerTokenReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_uid_;
  ::google::protobuf::internal::ArenaStringPtr account_token_;
  ::google::protobuf::internal::ArenaStringPtr account_ext_;
  ::google::protobuf::uint32 account_type_;
  ::google::protobuf::uint32 uid_;
  bool is_guest_;
  ::google::protobuf::uint32 platform_type_;
  ::google::protobuf::uint32 cloud_client_ip_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPlayerTokenRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetPlayerTokenRsp) */ {
 public:
  GetPlayerTokenRsp();
  virtual ~GetPlayerTokenRsp();

  GetPlayerTokenRsp(const GetPlayerTokenRsp& from);

  inline GetPlayerTokenRsp& operator=(const GetPlayerTokenRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPlayerTokenRsp(GetPlayerTokenRsp&& from) noexcept
    : GetPlayerTokenRsp() {
    *this = ::std::move(from);
  }

  inline GetPlayerTokenRsp& operator=(GetPlayerTokenRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerTokenRsp& default_instance();

  static inline const GetPlayerTokenRsp* internal_default_instance() {
    return reinterpret_cast<const GetPlayerTokenRsp*>(
               &_GetPlayerTokenRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GetPlayerTokenRsp* other);
  friend void swap(GetPlayerTokenRsp& a, GetPlayerTokenRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPlayerTokenRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPlayerTokenRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPlayerTokenRsp& from);
  void MergeFrom(const GetPlayerTokenRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPlayerTokenRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetPlayerTokenRsp_CmdId CmdId;
  static const CmdId NONE =
    GetPlayerTokenRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetPlayerTokenRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetPlayerTokenRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetPlayerTokenRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetPlayerTokenRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetPlayerTokenRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetPlayerTokenRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetPlayerTokenRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetPlayerTokenRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetPlayerTokenRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetPlayerTokenRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string msg = 2;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string token = 4;
  void clear_token();
  static const int kTokenFieldNumber = 4;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string account_uid = 7;
  void clear_account_uid();
  static const int kAccountUidFieldNumber = 7;
  const ::std::string& account_uid() const;
  void set_account_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_account_uid(::std::string&& value);
  #endif
  void set_account_uid(const char* value);
  void set_account_uid(const char* value, size_t size);
  ::std::string* mutable_account_uid();
  ::std::string* release_account_uid();
  void set_allocated_account_uid(::std::string* account_uid);

  // string secret_key = 9;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 9;
  const ::std::string& secret_key() const;
  void set_secret_key(const ::std::string& value);
  #if LANG_CXX11
  void set_secret_key(::std::string&& value);
  #endif
  void set_secret_key(const char* value);
  void set_secret_key(const char* value, size_t size);
  ::std::string* mutable_secret_key();
  ::std::string* release_secret_key();
  void set_allocated_secret_key(::std::string* secret_key);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 black_uid_end_time = 5;
  void clear_black_uid_end_time();
  static const int kBlackUidEndTimeFieldNumber = 5;
  ::google::protobuf::uint32 black_uid_end_time() const;
  void set_black_uid_end_time(::google::protobuf::uint32 value);

  // uint32 account_type = 6;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 6;
  ::google::protobuf::uint32 account_type() const;
  void set_account_type(::google::protobuf::uint32 value);

  // bool is_proficient_player = 8;
  void clear_is_proficient_player();
  static const int kIsProficientPlayerFieldNumber = 8;
  bool is_proficient_player() const;
  void set_is_proficient_player(bool value);

  // uint32 gm_uid = 10;
  void clear_gm_uid();
  static const int kGmUidFieldNumber = 10;
  ::google::protobuf::uint32 gm_uid() const;
  void set_gm_uid(::google::protobuf::uint32 value);

  // uint64 secret_key_seed = 11;
  void clear_secret_key_seed();
  static const int kSecretKeySeedFieldNumber = 11;
  ::google::protobuf::uint64 secret_key_seed() const;
  void set_secret_key_seed(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.GetPlayerTokenRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr account_uid_;
  ::google::protobuf::internal::ArenaStringPtr secret_key_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 black_uid_end_time_;
  ::google::protobuf::uint32 account_type_;
  bool is_proficient_player_;
  ::google::protobuf::uint32 gm_uid_;
  ::google::protobuf::uint64 secret_key_seed_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLoginReq) */ {
 public:
  PlayerLoginReq();
  virtual ~PlayerLoginReq();

  PlayerLoginReq(const PlayerLoginReq& from);

  inline PlayerLoginReq& operator=(const PlayerLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginReq(PlayerLoginReq&& from) noexcept
    : PlayerLoginReq() {
    *this = ::std::move(from);
  }

  inline PlayerLoginReq& operator=(PlayerLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginReq& default_instance();

  static inline const PlayerLoginReq* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginReq*>(
               &_PlayerLoginReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PlayerLoginReq* other);
  friend void swap(PlayerLoginReq& a, PlayerLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLoginReq& from);
  void MergeFrom(const PlayerLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerLoginReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerLoginReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerLoginReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerLoginReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerLoginReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerLoginReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerLoginReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerLoginReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerLoginReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerLoginReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerLoginReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerLoginReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerLoginReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // string client_version = 2;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 2;
  const ::std::string& client_version() const;
  void set_client_version(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version(::std::string&& value);
  #endif
  void set_client_version(const char* value);
  void set_client_version(const char* value, size_t size);
  ::std::string* mutable_client_version();
  ::std::string* release_client_version();
  void set_allocated_client_version(::std::string* client_version);

  // string system_version = 3;
  void clear_system_version();
  static const int kSystemVersionFieldNumber = 3;
  const ::std::string& system_version() const;
  void set_system_version(const ::std::string& value);
  #if LANG_CXX11
  void set_system_version(::std::string&& value);
  #endif
  void set_system_version(const char* value);
  void set_system_version(const char* value, size_t size);
  ::std::string* mutable_system_version();
  ::std::string* release_system_version();
  void set_allocated_system_version(::std::string* system_version);

  // string device_name = 4;
  void clear_device_name();
  static const int kDeviceNameFieldNumber = 4;
  const ::std::string& device_name() const;
  void set_device_name(const ::std::string& value);
  #if LANG_CXX11
  void set_device_name(::std::string&& value);
  #endif
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  ::std::string* mutable_device_name();
  ::std::string* release_device_name();
  void set_allocated_device_name(::std::string* device_name);

  // string device_uuid = 5;
  void clear_device_uuid();
  static const int kDeviceUuidFieldNumber = 5;
  const ::std::string& device_uuid() const;
  void set_device_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_device_uuid(::std::string&& value);
  #endif
  void set_device_uuid(const char* value);
  void set_device_uuid(const char* value, size_t size);
  ::std::string* mutable_device_uuid();
  ::std::string* release_device_uuid();
  void set_allocated_device_uuid(::std::string* device_uuid);

  // string account_uid = 11;
  void clear_account_uid();
  static const int kAccountUidFieldNumber = 11;
  const ::std::string& account_uid() const;
  void set_account_uid(const ::std::string& value);
  #if LANG_CXX11
  void set_account_uid(::std::string&& value);
  #endif
  void set_account_uid(const char* value);
  void set_account_uid(const char* value, size_t size);
  ::std::string* mutable_account_uid();
  ::std::string* release_account_uid();
  void set_allocated_account_uid(::std::string* account_uid);

  // string platform = 12;
  void clear_platform();
  static const int kPlatformFieldNumber = 12;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // string device_info = 13;
  void clear_device_info();
  static const int kDeviceInfoFieldNumber = 13;
  const ::std::string& device_info() const;
  void set_device_info(const ::std::string& value);
  #if LANG_CXX11
  void set_device_info(::std::string&& value);
  #endif
  void set_device_info(const char* value);
  void set_device_info(const char* value, size_t size);
  ::std::string* mutable_device_info();
  ::std::string* release_device_info();
  void set_allocated_device_info(::std::string* device_info);

  // uint64 login_rand = 7;
  void clear_login_rand();
  static const int kLoginRandFieldNumber = 7;
  ::google::protobuf::uint64 login_rand() const;
  void set_login_rand(::google::protobuf::uint64 value);

  // uint32 target_uid = 6;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 6;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 language_type = 9;
  void clear_language_type();
  static const int kLanguageTypeFieldNumber = 9;
  ::google::protobuf::uint32 language_type() const;
  void set_language_type(::google::protobuf::uint32 value);

  // uint32 account_type = 10;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 10;
  ::google::protobuf::uint32 account_type() const;
  void set_account_type(::google::protobuf::uint32 value);

  // bool is_editor = 8;
  void clear_is_editor();
  static const int kIsEditorFieldNumber = 8;
  bool is_editor() const;
  void set_is_editor(bool value);

  // bool is_guest = 15;
  void clear_is_guest();
  static const int kIsGuestFieldNumber = 15;
  bool is_guest() const;
  void set_is_guest(bool value);

  // uint32 platform_type = 14;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 14;
  ::google::protobuf::uint32 platform_type() const;
  void set_platform_type(::google::protobuf::uint32 value);

  // uint32 cloud_client_ip = 16;
  void clear_cloud_client_ip();
  static const int kCloudClientIpFieldNumber = 16;
  ::google::protobuf::uint32 cloud_client_ip() const;
  void set_cloud_client_ip(::google::protobuf::uint32 value);

  // uint32 gm_uid = 17;
  void clear_gm_uid();
  static const int kGmUidFieldNumber = 17;
  ::google::protobuf::uint32 gm_uid() const;
  void set_gm_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr client_version_;
  ::google::protobuf::internal::ArenaStringPtr system_version_;
  ::google::protobuf::internal::ArenaStringPtr device_name_;
  ::google::protobuf::internal::ArenaStringPtr device_uuid_;
  ::google::protobuf::internal::ArenaStringPtr account_uid_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::internal::ArenaStringPtr device_info_;
  ::google::protobuf::uint64 login_rand_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 language_type_;
  ::google::protobuf::uint32 account_type_;
  bool is_editor_;
  bool is_guest_;
  ::google::protobuf::uint32 platform_type_;
  ::google::protobuf::uint32 cloud_client_ip_;
  ::google::protobuf::uint32 gm_uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlayerLoginRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLoginRsp) */ {
 public:
  PlayerLoginRsp();
  virtual ~PlayerLoginRsp();

  PlayerLoginRsp(const PlayerLoginRsp& from);

  inline PlayerLoginRsp& operator=(const PlayerLoginRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginRsp(PlayerLoginRsp&& from) noexcept
    : PlayerLoginRsp() {
    *this = ::std::move(from);
  }

  inline PlayerLoginRsp& operator=(PlayerLoginRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginRsp& default_instance();

  static inline const PlayerLoginRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginRsp*>(
               &_PlayerLoginRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PlayerLoginRsp* other);
  friend void swap(PlayerLoginRsp& a, PlayerLoginRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLoginRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLoginRsp& from);
  void MergeFrom(const PlayerLoginRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLoginRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef PlayerLoginRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerLoginRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerLoginRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerLoginRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerLoginRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerLoginRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerLoginRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerLoginRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerLoginRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerLoginRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerLoginRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerLoginRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<string, int32> ability_hash_map = 8;
  int ability_hash_map_size() const;
  void clear_ability_hash_map();
  static const int kAbilityHashMapFieldNumber = 8;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      ability_hash_map() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_ability_hash_map();

  // map<uint32, .proto.BlockInfo> block_info_map = 21;
  int block_info_map_size() const;
  void clear_block_info_map();
  static const int kBlockInfoMapFieldNumber = 21;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >&
      block_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >*
      mutable_block_info_map();

  // bytes player_data = 2;
  void clear_player_data();
  static const int kPlayerDataFieldNumber = 2;
  const ::std::string& player_data() const;
  void set_player_data(const ::std::string& value);
  #if LANG_CXX11
  void set_player_data(::std::string&& value);
  #endif
  void set_player_data(const char* value);
  void set_player_data(const void* value, size_t size);
  ::std::string* mutable_player_data();
  ::std::string* release_player_data();
  void set_allocated_player_data(::std::string* player_data);

  // string game_biz = 14;
  void clear_game_biz();
  static const int kGameBizFieldNumber = 14;
  const ::std::string& game_biz() const;
  void set_game_biz(const ::std::string& value);
  #if LANG_CXX11
  void set_game_biz(::std::string&& value);
  #endif
  void set_game_biz(const char* value);
  void set_game_biz(const char* value, size_t size);
  ::std::string* mutable_game_biz();
  ::std::string* release_game_biz();
  void set_allocated_game_biz(::std::string* game_biz);

  // string client_md5 = 16;
  void clear_client_md5();
  static const int kClientMd5FieldNumber = 16;
  const ::std::string& client_md5() const;
  void set_client_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_md5(::std::string&& value);
  #endif
  void set_client_md5(const char* value);
  void set_client_md5(const char* value, size_t size);
  ::std::string* mutable_client_md5();
  ::std::string* release_client_md5();
  void set_allocated_client_md5(::std::string* client_md5);

  // string client_silence_md5 = 17;
  void clear_client_silence_md5();
  static const int kClientSilenceMd5FieldNumber = 17;
  const ::std::string& client_silence_md5() const;
  void set_client_silence_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_md5(::std::string&& value);
  #endif
  void set_client_silence_md5(const char* value);
  void set_client_silence_md5(const char* value, size_t size);
  ::std::string* mutable_client_silence_md5();
  ::std::string* release_client_silence_md5();
  void set_allocated_client_silence_md5(::std::string* client_silence_md5);

  // string res_md5 = 18;
  void clear_res_md5();
  static const int kResMd5FieldNumber = 18;
  const ::std::string& res_md5() const;
  void set_res_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_res_md5(::std::string&& value);
  #endif
  void set_res_md5(const char* value);
  void set_res_md5(const char* value, size_t size);
  ::std::string* mutable_res_md5();
  ::std::string* release_res_md5();
  void set_allocated_res_md5(::std::string* res_md5);

  // .proto.ResVersionConfig res_version_config = 20;
  bool has_res_version_config() const;
  void clear_res_version_config();
  static const int kResVersionConfigFieldNumber = 20;
  const ::proto::ResVersionConfig& res_version_config() const;
  ::proto::ResVersionConfig* mutable_res_version_config();
  ::proto::ResVersionConfig* release_res_version_config();
  void set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 target_uid = 4;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 4;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint64 login_rand = 5;
  void clear_login_rand();
  static const int kLoginRandFieldNumber = 5;
  ::google::protobuf::uint64 login_rand() const;
  void set_login_rand(::google::protobuf::uint64 value);

  // int32 ability_hash_code = 7;
  void clear_ability_hash_code();
  static const int kAbilityHashCodeFieldNumber = 7;
  ::google::protobuf::int32 ability_hash_code() const;
  void set_ability_hash_code(::google::protobuf::int32 value);

  // uint32 client_data_version = 9;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 9;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // bool is_new_player = 3;
  void clear_is_new_player();
  static const int kIsNewPlayerFieldNumber = 3;
  bool is_new_player() const;
  void set_is_new_player(bool value);

  // bool is_use_ability_hash = 6;
  void clear_is_use_ability_hash();
  static const int kIsUseAbilityHashFieldNumber = 6;
  bool is_use_ability_hash() const;
  void set_is_use_ability_hash(bool value);

  // bool is_relogin = 11;
  void clear_is_relogin();
  static const int kIsReloginFieldNumber = 11;
  bool is_relogin() const;
  void set_is_relogin(bool value);

  // bool is_res_need_relogin = 19;
  void clear_is_res_need_relogin();
  static const int kIsResNeedReloginFieldNumber = 19;
  bool is_res_need_relogin() const;
  void set_is_res_need_relogin(bool value);

  // uint32 res_version = 10;
  void clear_res_version();
  static const int kResVersionFieldNumber = 10;
  ::google::protobuf::uint32 res_version() const;
  void set_res_version(::google::protobuf::uint32 value);

  // uint32 client_silence_data_version = 13;
  void clear_client_silence_data_version();
  static const int kClientSilenceDataVersionFieldNumber = 13;
  ::google::protobuf::uint32 client_silence_data_version() const;
  void set_client_silence_data_version(::google::protobuf::uint32 value);

  // uint32 player_data_version = 15;
  void clear_player_data_version();
  static const int kPlayerDataVersionFieldNumber = 15;
  ::google::protobuf::uint32 player_data_version() const;
  void set_player_data_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLoginRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlayerLoginRsp_AbilityHashMapEntry : public ::google::protobuf::internal::MapEntry<PlayerLoginRsp_AbilityHashMapEntry, 
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerLoginRsp_AbilityHashMapEntry, 
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    PlayerLoginRsp_AbilityHashMapEntry();
    PlayerLoginRsp_AbilityHashMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerLoginRsp_AbilityHashMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerLoginRsp_AbilityHashMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerLoginRsp_AbilityHashMapEntry,
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > ability_hash_map_;
  private:
  public:
  class PlayerLoginRsp_BlockInfoMapEntry : public ::google::protobuf::internal::MapEntry<PlayerLoginRsp_BlockInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::BlockInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerLoginRsp_BlockInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::BlockInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    PlayerLoginRsp_BlockInfoMapEntry();
    PlayerLoginRsp_BlockInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerLoginRsp_BlockInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerLoginRsp_BlockInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerLoginRsp_BlockInfoMapEntry,
      ::google::protobuf::uint32, ::proto::BlockInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > block_info_map_;
  private:
  ::google::protobuf::internal::ArenaStringPtr player_data_;
  ::google::protobuf::internal::ArenaStringPtr game_biz_;
  ::google::protobuf::internal::ArenaStringPtr client_md5_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_md5_;
  ::google::protobuf::internal::ArenaStringPtr res_md5_;
  ::proto::ResVersionConfig* res_version_config_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint64 login_rand_;
  ::google::protobuf::int32 ability_hash_code_;
  ::google::protobuf::uint32 client_data_version_;
  bool is_new_player_;
  bool is_use_ability_hash_;
  bool is_relogin_;
  bool is_res_need_relogin_;
  ::google::protobuf::uint32 res_version_;
  ::google::protobuf::uint32 client_silence_data_version_;
  ::google::protobuf::uint32 player_data_version_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLogoutReq) */ {
 public:
  PlayerLogoutReq();
  virtual ~PlayerLogoutReq();

  PlayerLogoutReq(const PlayerLogoutReq& from);

  inline PlayerLogoutReq& operator=(const PlayerLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLogoutReq(PlayerLogoutReq&& from) noexcept
    : PlayerLogoutReq() {
    *this = ::std::move(from);
  }

  inline PlayerLogoutReq& operator=(PlayerLogoutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLogoutReq& default_instance();

  static inline const PlayerLogoutReq* internal_default_instance() {
    return reinterpret_cast<const PlayerLogoutReq*>(
               &_PlayerLogoutReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PlayerLogoutReq* other);
  friend void swap(PlayerLogoutReq& a, PlayerLogoutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogoutReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLogoutReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLogoutReq& from);
  void MergeFrom(const PlayerLogoutReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerLogoutReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerLogoutReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerLogoutReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerLogoutReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerLogoutReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerLogoutReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerLogoutReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerLogoutReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerLogoutReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerLogoutReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerLogoutReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerLogoutReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerLogoutReq_CmdId_Parse(name, value);
  }

  typedef PlayerLogoutReq_Reason Reason;
  static const Reason DISCONNECT =
    PlayerLogoutReq_Reason_DISCONNECT;
  static const Reason CLIENT_REQ =
    PlayerLogoutReq_Reason_CLIENT_REQ;
  static const Reason TIMEOUT =
    PlayerLogoutReq_Reason_TIMEOUT;
  static const Reason ADMIN_REQ =
    PlayerLogoutReq_Reason_ADMIN_REQ;
  static const Reason SERVER_CLOSE =
    PlayerLogoutReq_Reason_SERVER_CLOSE;
  static const Reason GM_CLEAR =
    PlayerLogoutReq_Reason_GM_CLEAR;
  static const Reason PLAYER_TRANSFER =
    PlayerLogoutReq_Reason_PLAYER_TRANSFER;
  static inline bool Reason_IsValid(int value) {
    return PlayerLogoutReq_Reason_IsValid(value);
  }
  static const Reason Reason_MIN =
    PlayerLogoutReq_Reason_Reason_MIN;
  static const Reason Reason_MAX =
    PlayerLogoutReq_Reason_Reason_MAX;
  static const int Reason_ARRAYSIZE =
    PlayerLogoutReq_Reason_Reason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Reason_descriptor() {
    return PlayerLogoutReq_Reason_descriptor();
  }
  static inline const ::std::string& Reason_Name(Reason value) {
    return PlayerLogoutReq_Reason_Name(value);
  }
  static inline bool Reason_Parse(const ::std::string& name,
      Reason* value) {
    return PlayerLogoutReq_Reason_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.PlayerLogoutReq.Reason reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::proto::PlayerLogoutReq_Reason reason() const;
  void set_reason(::proto::PlayerLogoutReq_Reason value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLogoutRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLogoutRsp) */ {
 public:
  PlayerLogoutRsp();
  virtual ~PlayerLogoutRsp();

  PlayerLogoutRsp(const PlayerLogoutRsp& from);

  inline PlayerLogoutRsp& operator=(const PlayerLogoutRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLogoutRsp(PlayerLogoutRsp&& from) noexcept
    : PlayerLogoutRsp() {
    *this = ::std::move(from);
  }

  inline PlayerLogoutRsp& operator=(PlayerLogoutRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLogoutRsp& default_instance();

  static inline const PlayerLogoutRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerLogoutRsp*>(
               &_PlayerLogoutRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PlayerLogoutRsp* other);
  friend void swap(PlayerLogoutRsp& a, PlayerLogoutRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogoutRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLogoutRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLogoutRsp& from);
  void MergeFrom(const PlayerLogoutRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLogoutRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerLogoutRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerLogoutRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerLogoutRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerLogoutRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerLogoutRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerLogoutRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerLogoutRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerLogoutRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerLogoutRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerLogoutRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerLogoutRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerLogoutRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLogoutRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLogoutNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLogoutNotify) */ {
 public:
  PlayerLogoutNotify();
  virtual ~PlayerLogoutNotify();

  PlayerLogoutNotify(const PlayerLogoutNotify& from);

  inline PlayerLogoutNotify& operator=(const PlayerLogoutNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLogoutNotify(PlayerLogoutNotify&& from) noexcept
    : PlayerLogoutNotify() {
    *this = ::std::move(from);
  }

  inline PlayerLogoutNotify& operator=(PlayerLogoutNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLogoutNotify& default_instance();

  static inline const PlayerLogoutNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerLogoutNotify*>(
               &_PlayerLogoutNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PlayerLogoutNotify* other);
  friend void swap(PlayerLogoutNotify& a, PlayerLogoutNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogoutNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLogoutNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLogoutNotify& from);
  void MergeFrom(const PlayerLogoutNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLogoutNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerLogoutNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerLogoutNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerLogoutNotify_CmdId_CMD_ID;
  static inline bool CmdId_IsValid(int value) {
    return PlayerLogoutNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerLogoutNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerLogoutNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerLogoutNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerLogoutNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerLogoutNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerLogoutNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLogoutNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlayerDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerDataNotify) */ {
 public:
  PlayerDataNotify();
  virtual ~PlayerDataNotify();

  PlayerDataNotify(const PlayerDataNotify& from);

  inline PlayerDataNotify& operator=(const PlayerDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerDataNotify(PlayerDataNotify&& from) noexcept
    : PlayerDataNotify() {
    *this = ::std::move(from);
  }

  inline PlayerDataNotify& operator=(PlayerDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerDataNotify& default_instance();

  static inline const PlayerDataNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerDataNotify*>(
               &_PlayerDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PlayerDataNotify* other);
  friend void swap(PlayerDataNotify& a, PlayerDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerDataNotify& from);
  void MergeFrom(const PlayerDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef PlayerDataNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 6;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // string nick_name = 1;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 1;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // uint64 server_time = 2;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 2;
  ::google::protobuf::uint64 server_time() const;
  void set_server_time(::google::protobuf::uint64 value);

  // bool is_first_login_today = 3;
  void clear_is_first_login_today();
  static const int kIsFirstLoginTodayFieldNumber = 3;
  bool is_first_login_today() const;
  void set_is_first_login_today(bool value);

  // uint32 region_id = 4;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 4;
  ::google::protobuf::uint32 region_id() const;
  void set_region_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlayerDataNotify_PropMapEntry : public ::google::protobuf::internal::MapEntry<PlayerDataNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerDataNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    PlayerDataNotify_PropMapEntry();
    PlayerDataNotify_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerDataNotify_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerDataNotify_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerDataNotify_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::uint64 server_time_;
  bool is_first_login_today_;
  ::google::protobuf::uint32 region_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeGameTimeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeGameTimeReq) */ {
 public:
  ChangeGameTimeReq();
  virtual ~ChangeGameTimeReq();

  ChangeGameTimeReq(const ChangeGameTimeReq& from);

  inline ChangeGameTimeReq& operator=(const ChangeGameTimeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeGameTimeReq(ChangeGameTimeReq&& from) noexcept
    : ChangeGameTimeReq() {
    *this = ::std::move(from);
  }

  inline ChangeGameTimeReq& operator=(ChangeGameTimeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeGameTimeReq& default_instance();

  static inline const ChangeGameTimeReq* internal_default_instance() {
    return reinterpret_cast<const ChangeGameTimeReq*>(
               &_ChangeGameTimeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ChangeGameTimeReq* other);
  friend void swap(ChangeGameTimeReq& a, ChangeGameTimeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeGameTimeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeGameTimeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeGameTimeReq& from);
  void MergeFrom(const ChangeGameTimeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeGameTimeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChangeGameTimeReq_CmdId CmdId;
  static const CmdId NONE =
    ChangeGameTimeReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ChangeGameTimeReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChangeGameTimeReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChangeGameTimeReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ChangeGameTimeReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ChangeGameTimeReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChangeGameTimeReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChangeGameTimeReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChangeGameTimeReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChangeGameTimeReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChangeGameTimeReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChangeGameTimeReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 game_time = 1;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 1;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // bool is_force_set = 2;
  void clear_is_force_set();
  static const int kIsForceSetFieldNumber = 2;
  bool is_force_set() const;
  void set_is_force_set(bool value);

  // @@protoc_insertion_point(class_scope:proto.ChangeGameTimeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 game_time_;
  bool is_force_set_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeGameTimeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeGameTimeRsp) */ {
 public:
  ChangeGameTimeRsp();
  virtual ~ChangeGameTimeRsp();

  ChangeGameTimeRsp(const ChangeGameTimeRsp& from);

  inline ChangeGameTimeRsp& operator=(const ChangeGameTimeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeGameTimeRsp(ChangeGameTimeRsp&& from) noexcept
    : ChangeGameTimeRsp() {
    *this = ::std::move(from);
  }

  inline ChangeGameTimeRsp& operator=(ChangeGameTimeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeGameTimeRsp& default_instance();

  static inline const ChangeGameTimeRsp* internal_default_instance() {
    return reinterpret_cast<const ChangeGameTimeRsp*>(
               &_ChangeGameTimeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ChangeGameTimeRsp* other);
  friend void swap(ChangeGameTimeRsp& a, ChangeGameTimeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeGameTimeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeGameTimeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeGameTimeRsp& from);
  void MergeFrom(const ChangeGameTimeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeGameTimeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ChangeGameTimeRsp_CmdId CmdId;
  static const CmdId NONE =
    ChangeGameTimeRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ChangeGameTimeRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ChangeGameTimeRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ChangeGameTimeRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ChangeGameTimeRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ChangeGameTimeRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ChangeGameTimeRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ChangeGameTimeRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ChangeGameTimeRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ChangeGameTimeRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ChangeGameTimeRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 cur_game_time = 2;
  void clear_cur_game_time();
  static const int kCurGameTimeFieldNumber = 2;
  ::google::protobuf::uint32 cur_game_time() const;
  void set_cur_game_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ChangeGameTimeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 cur_game_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGameTimeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGameTimeNotify) */ {
 public:
  PlayerGameTimeNotify();
  virtual ~PlayerGameTimeNotify();

  PlayerGameTimeNotify(const PlayerGameTimeNotify& from);

  inline PlayerGameTimeNotify& operator=(const PlayerGameTimeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGameTimeNotify(PlayerGameTimeNotify&& from) noexcept
    : PlayerGameTimeNotify() {
    *this = ::std::move(from);
  }

  inline PlayerGameTimeNotify& operator=(PlayerGameTimeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGameTimeNotify& default_instance();

  static inline const PlayerGameTimeNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerGameTimeNotify*>(
               &_PlayerGameTimeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(PlayerGameTimeNotify* other);
  friend void swap(PlayerGameTimeNotify& a, PlayerGameTimeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGameTimeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGameTimeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGameTimeNotify& from);
  void MergeFrom(const PlayerGameTimeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGameTimeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerGameTimeNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerGameTimeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerGameTimeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerGameTimeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerGameTimeNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerGameTimeNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerGameTimeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerGameTimeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerGameTimeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerGameTimeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerGameTimeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerGameTimeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerGameTimeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 game_time = 1;
  void clear_game_time();
  static const int kGameTimeFieldNumber = 1;
  ::google::protobuf::uint32 game_time() const;
  void set_game_time(::google::protobuf::uint32 value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGameTimeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 game_time_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlayerPropNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerPropNotify) */ {
 public:
  PlayerPropNotify();
  virtual ~PlayerPropNotify();

  PlayerPropNotify(const PlayerPropNotify& from);

  inline PlayerPropNotify& operator=(const PlayerPropNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPropNotify(PlayerPropNotify&& from) noexcept
    : PlayerPropNotify() {
    *this = ::std::move(from);
  }

  inline PlayerPropNotify& operator=(PlayerPropNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPropNotify& default_instance();

  static inline const PlayerPropNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerPropNotify*>(
               &_PlayerPropNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(PlayerPropNotify* other);
  friend void swap(PlayerPropNotify& a, PlayerPropNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPropNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerPropNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPropNotify& from);
  void MergeFrom(const PlayerPropNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPropNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef PlayerPropNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerPropNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerPropNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerPropNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerPropNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerPropNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerPropNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerPropNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerPropNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerPropNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerPropNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerPropNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, .proto.PropValue> prop_map = 1;
  int prop_map_size() const;
  void clear_prop_map();
  static const int kPropMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
      prop_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
      mutable_prop_map();

  // @@protoc_insertion_point(class_scope:proto.PlayerPropNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlayerPropNotify_PropMapEntry : public ::google::protobuf::internal::MapEntry<PlayerPropNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerPropNotify_PropMapEntry, 
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    PlayerPropNotify_PropMapEntry();
    PlayerPropNotify_PropMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerPropNotify_PropMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerPropNotify_PropMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerPropNotify_PropMapEntry,
      ::google::protobuf::uint32, ::proto::PropValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > prop_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientTriggerEventNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientTriggerEventNotify) */ {
 public:
  ClientTriggerEventNotify();
  virtual ~ClientTriggerEventNotify();

  ClientTriggerEventNotify(const ClientTriggerEventNotify& from);

  inline ClientTriggerEventNotify& operator=(const ClientTriggerEventNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientTriggerEventNotify(ClientTriggerEventNotify&& from) noexcept
    : ClientTriggerEventNotify() {
    *this = ::std::move(from);
  }

  inline ClientTriggerEventNotify& operator=(ClientTriggerEventNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientTriggerEventNotify& default_instance();

  static inline const ClientTriggerEventNotify* internal_default_instance() {
    return reinterpret_cast<const ClientTriggerEventNotify*>(
               &_ClientTriggerEventNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(ClientTriggerEventNotify* other);
  friend void swap(ClientTriggerEventNotify& a, ClientTriggerEventNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientTriggerEventNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientTriggerEventNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientTriggerEventNotify& from);
  void MergeFrom(const ClientTriggerEventNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientTriggerEventNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ClientTriggerEventNotify_CmdId CmdId;
  static const CmdId NONE =
    ClientTriggerEventNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ClientTriggerEventNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ClientTriggerEventNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ClientTriggerEventNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ClientTriggerEventNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ClientTriggerEventNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ClientTriggerEventNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ClientTriggerEventNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ClientTriggerEventNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ClientTriggerEventNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ClientTriggerEventNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ClientTriggerEventNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.EventTriggerType event_type = 1;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::proto::EventTriggerType event_type() const;
  void set_event_type(::proto::EventTriggerType value);

  // uint32 force_id = 2;
  void clear_force_id();
  static const int kForceIdFieldNumber = 2;
  ::google::protobuf::uint32 force_id() const;
  void set_force_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ClientTriggerEventNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  ::google::protobuf::uint32 force_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerPropReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerPropReq) */ {
 public:
  SetPlayerPropReq();
  virtual ~SetPlayerPropReq();

  SetPlayerPropReq(const SetPlayerPropReq& from);

  inline SetPlayerPropReq& operator=(const SetPlayerPropReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerPropReq(SetPlayerPropReq&& from) noexcept
    : SetPlayerPropReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerPropReq& operator=(SetPlayerPropReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerPropReq& default_instance();

  static inline const SetPlayerPropReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerPropReq*>(
               &_SetPlayerPropReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SetPlayerPropReq* other);
  friend void swap(SetPlayerPropReq& a, SetPlayerPropReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerPropReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerPropReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerPropReq& from);
  void MergeFrom(const SetPlayerPropReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerPropReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerPropReq_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerPropReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerPropReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerPropReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerPropReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetPlayerPropReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerPropReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerPropReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerPropReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerPropReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerPropReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerPropReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerPropReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.PropValue prop_list = 1;
  int prop_list_size() const;
  void clear_prop_list();
  static const int kPropListFieldNumber = 1;
  const ::proto::PropValue& prop_list(int index) const;
  ::proto::PropValue* mutable_prop_list(int index);
  ::proto::PropValue* add_prop_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PropValue >*
      mutable_prop_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PropValue >&
      prop_list() const;

  // @@protoc_insertion_point(class_scope:proto.SetPlayerPropReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PropValue > prop_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerPropRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerPropRsp) */ {
 public:
  SetPlayerPropRsp();
  virtual ~SetPlayerPropRsp();

  SetPlayerPropRsp(const SetPlayerPropRsp& from);

  inline SetPlayerPropRsp& operator=(const SetPlayerPropRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerPropRsp(SetPlayerPropRsp&& from) noexcept
    : SetPlayerPropRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerPropRsp& operator=(SetPlayerPropRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerPropRsp& default_instance();

  static inline const SetPlayerPropRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerPropRsp*>(
               &_SetPlayerPropRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(SetPlayerPropRsp* other);
  friend void swap(SetPlayerPropRsp& a, SetPlayerPropRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerPropRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerPropRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerPropRsp& from);
  void MergeFrom(const SetPlayerPropRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerPropRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerPropRsp_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerPropRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerPropRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerPropRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerPropRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerPropRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerPropRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerPropRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerPropRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerPropRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerPropRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerPropRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerPropRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerBornDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerBornDataReq) */ {
 public:
  SetPlayerBornDataReq();
  virtual ~SetPlayerBornDataReq();

  SetPlayerBornDataReq(const SetPlayerBornDataReq& from);

  inline SetPlayerBornDataReq& operator=(const SetPlayerBornDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerBornDataReq(SetPlayerBornDataReq&& from) noexcept
    : SetPlayerBornDataReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerBornDataReq& operator=(SetPlayerBornDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerBornDataReq& default_instance();

  static inline const SetPlayerBornDataReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerBornDataReq*>(
               &_SetPlayerBornDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(SetPlayerBornDataReq* other);
  friend void swap(SetPlayerBornDataReq& a, SetPlayerBornDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerBornDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerBornDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerBornDataReq& from);
  void MergeFrom(const SetPlayerBornDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerBornDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerBornDataReq_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerBornDataReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerBornDataReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerBornDataReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerBornDataReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetPlayerBornDataReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerBornDataReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerBornDataReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerBornDataReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerBornDataReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerBornDataReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerBornDataReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerBornDataReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string nick_name = 2;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerBornDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerBornDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerBornDataRsp) */ {
 public:
  SetPlayerBornDataRsp();
  virtual ~SetPlayerBornDataRsp();

  SetPlayerBornDataRsp(const SetPlayerBornDataRsp& from);

  inline SetPlayerBornDataRsp& operator=(const SetPlayerBornDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerBornDataRsp(SetPlayerBornDataRsp&& from) noexcept
    : SetPlayerBornDataRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerBornDataRsp& operator=(SetPlayerBornDataRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerBornDataRsp& default_instance();

  static inline const SetPlayerBornDataRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerBornDataRsp*>(
               &_SetPlayerBornDataRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(SetPlayerBornDataRsp* other);
  friend void swap(SetPlayerBornDataRsp& a, SetPlayerBornDataRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerBornDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerBornDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerBornDataRsp& from);
  void MergeFrom(const SetPlayerBornDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerBornDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerBornDataRsp_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerBornDataRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerBornDataRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerBornDataRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerBornDataRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerBornDataRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerBornDataRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerBornDataRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerBornDataRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerBornDataRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerBornDataRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerBornDataRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerBornDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoSetPlayerBornDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DoSetPlayerBornDataNotify) */ {
 public:
  DoSetPlayerBornDataNotify();
  virtual ~DoSetPlayerBornDataNotify();

  DoSetPlayerBornDataNotify(const DoSetPlayerBornDataNotify& from);

  inline DoSetPlayerBornDataNotify& operator=(const DoSetPlayerBornDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DoSetPlayerBornDataNotify(DoSetPlayerBornDataNotify&& from) noexcept
    : DoSetPlayerBornDataNotify() {
    *this = ::std::move(from);
  }

  inline DoSetPlayerBornDataNotify& operator=(DoSetPlayerBornDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DoSetPlayerBornDataNotify& default_instance();

  static inline const DoSetPlayerBornDataNotify* internal_default_instance() {
    return reinterpret_cast<const DoSetPlayerBornDataNotify*>(
               &_DoSetPlayerBornDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(DoSetPlayerBornDataNotify* other);
  friend void swap(DoSetPlayerBornDataNotify& a, DoSetPlayerBornDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoSetPlayerBornDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DoSetPlayerBornDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DoSetPlayerBornDataNotify& from);
  void MergeFrom(const DoSetPlayerBornDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DoSetPlayerBornDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DoSetPlayerBornDataNotify_CmdId CmdId;
  static const CmdId NONE =
    DoSetPlayerBornDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DoSetPlayerBornDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DoSetPlayerBornDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DoSetPlayerBornDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DoSetPlayerBornDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DoSetPlayerBornDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DoSetPlayerBornDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DoSetPlayerBornDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DoSetPlayerBornDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DoSetPlayerBornDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DoSetPlayerBornDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.DoSetPlayerBornDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerPropChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerPropChangeNotify) */ {
 public:
  PlayerPropChangeNotify();
  virtual ~PlayerPropChangeNotify();

  PlayerPropChangeNotify(const PlayerPropChangeNotify& from);

  inline PlayerPropChangeNotify& operator=(const PlayerPropChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerPropChangeNotify(PlayerPropChangeNotify&& from) noexcept
    : PlayerPropChangeNotify() {
    *this = ::std::move(from);
  }

  inline PlayerPropChangeNotify& operator=(PlayerPropChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerPropChangeNotify& default_instance();

  static inline const PlayerPropChangeNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerPropChangeNotify*>(
               &_PlayerPropChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(PlayerPropChangeNotify* other);
  friend void swap(PlayerPropChangeNotify& a, PlayerPropChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerPropChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerPropChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerPropChangeNotify& from);
  void MergeFrom(const PlayerPropChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerPropChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerPropChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerPropChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerPropChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerPropChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerPropChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerPropChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerPropChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerPropChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerPropChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerPropChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerPropChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerPropChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 prop_type = 1;
  void clear_prop_type();
  static const int kPropTypeFieldNumber = 1;
  ::google::protobuf::uint32 prop_type() const;
  void set_prop_type(::google::protobuf::uint32 value);

  // uint32 prop_delta = 2;
  void clear_prop_delta();
  static const int kPropDeltaFieldNumber = 2;
  ::google::protobuf::uint32 prop_delta() const;
  void set_prop_delta(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerPropChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 prop_type_;
  ::google::protobuf::uint32 prop_delta_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerNameReq) */ {
 public:
  SetPlayerNameReq();
  virtual ~SetPlayerNameReq();

  SetPlayerNameReq(const SetPlayerNameReq& from);

  inline SetPlayerNameReq& operator=(const SetPlayerNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerNameReq(SetPlayerNameReq&& from) noexcept
    : SetPlayerNameReq() {
    *this = ::std::move(from);
  }

  inline SetPlayerNameReq& operator=(SetPlayerNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerNameReq& default_instance();

  static inline const SetPlayerNameReq* internal_default_instance() {
    return reinterpret_cast<const SetPlayerNameReq*>(
               &_SetPlayerNameReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(SetPlayerNameReq* other);
  friend void swap(SetPlayerNameReq& a, SetPlayerNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerNameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerNameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerNameReq& from);
  void MergeFrom(const SetPlayerNameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerNameReq_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerNameReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerNameReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerNameReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerNameReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetPlayerNameReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerNameReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerNameReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerNameReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerNameReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerNameReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerNameReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerNameReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string nick_name = 1;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 1;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerNameRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerNameRsp) */ {
 public:
  SetPlayerNameRsp();
  virtual ~SetPlayerNameRsp();

  SetPlayerNameRsp(const SetPlayerNameRsp& from);

  inline SetPlayerNameRsp& operator=(const SetPlayerNameRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerNameRsp(SetPlayerNameRsp&& from) noexcept
    : SetPlayerNameRsp() {
    *this = ::std::move(from);
  }

  inline SetPlayerNameRsp& operator=(SetPlayerNameRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerNameRsp& default_instance();

  static inline const SetPlayerNameRsp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerNameRsp*>(
               &_SetPlayerNameRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(SetPlayerNameRsp* other);
  friend void swap(SetPlayerNameRsp& a, SetPlayerNameRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerNameRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerNameRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerNameRsp& from);
  void MergeFrom(const SetPlayerNameRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerNameRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetPlayerNameRsp_CmdId CmdId;
  static const CmdId NONE =
    SetPlayerNameRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetPlayerNameRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetPlayerNameRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetPlayerNameRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetPlayerNameRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetPlayerNameRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetPlayerNameRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetPlayerNameRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetPlayerNameRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetPlayerNameRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetPlayerNameRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string nick_name = 2;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerNameRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetOpenStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetOpenStateReq) */ {
 public:
  SetOpenStateReq();
  virtual ~SetOpenStateReq();

  SetOpenStateReq(const SetOpenStateReq& from);

  inline SetOpenStateReq& operator=(const SetOpenStateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetOpenStateReq(SetOpenStateReq&& from) noexcept
    : SetOpenStateReq() {
    *this = ::std::move(from);
  }

  inline SetOpenStateReq& operator=(SetOpenStateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetOpenStateReq& default_instance();

  static inline const SetOpenStateReq* internal_default_instance() {
    return reinterpret_cast<const SetOpenStateReq*>(
               &_SetOpenStateReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(SetOpenStateReq* other);
  friend void swap(SetOpenStateReq& a, SetOpenStateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetOpenStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetOpenStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetOpenStateReq& from);
  void MergeFrom(const SetOpenStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetOpenStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetOpenStateReq_CmdId CmdId;
  static const CmdId NONE =
    SetOpenStateReq_CmdId_NONE;
  static const CmdId CMD_ID =
    SetOpenStateReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetOpenStateReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetOpenStateReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    SetOpenStateReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return SetOpenStateReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetOpenStateReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetOpenStateReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetOpenStateReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetOpenStateReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetOpenStateReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetOpenStateReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // uint32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetOpenStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetOpenStateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetOpenStateRsp) */ {
 public:
  SetOpenStateRsp();
  virtual ~SetOpenStateRsp();

  SetOpenStateRsp(const SetOpenStateRsp& from);

  inline SetOpenStateRsp& operator=(const SetOpenStateRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetOpenStateRsp(SetOpenStateRsp&& from) noexcept
    : SetOpenStateRsp() {
    *this = ::std::move(from);
  }

  inline SetOpenStateRsp& operator=(SetOpenStateRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetOpenStateRsp& default_instance();

  static inline const SetOpenStateRsp* internal_default_instance() {
    return reinterpret_cast<const SetOpenStateRsp*>(
               &_SetOpenStateRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(SetOpenStateRsp* other);
  friend void swap(SetOpenStateRsp& a, SetOpenStateRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetOpenStateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetOpenStateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetOpenStateRsp& from);
  void MergeFrom(const SetOpenStateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetOpenStateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SetOpenStateRsp_CmdId CmdId;
  static const CmdId NONE =
    SetOpenStateRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    SetOpenStateRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    SetOpenStateRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    SetOpenStateRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return SetOpenStateRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    SetOpenStateRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    SetOpenStateRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    SetOpenStateRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return SetOpenStateRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return SetOpenStateRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return SetOpenStateRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // uint32 value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetOpenStateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class OpenStateUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OpenStateUpdateNotify) */ {
 public:
  OpenStateUpdateNotify();
  virtual ~OpenStateUpdateNotify();

  OpenStateUpdateNotify(const OpenStateUpdateNotify& from);

  inline OpenStateUpdateNotify& operator=(const OpenStateUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenStateUpdateNotify(OpenStateUpdateNotify&& from) noexcept
    : OpenStateUpdateNotify() {
    *this = ::std::move(from);
  }

  inline OpenStateUpdateNotify& operator=(OpenStateUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenStateUpdateNotify& default_instance();

  static inline const OpenStateUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const OpenStateUpdateNotify*>(
               &_OpenStateUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(OpenStateUpdateNotify* other);
  friend void swap(OpenStateUpdateNotify& a, OpenStateUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenStateUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  OpenStateUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpenStateUpdateNotify& from);
  void MergeFrom(const OpenStateUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpenStateUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef OpenStateUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    OpenStateUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    OpenStateUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    OpenStateUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    OpenStateUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return OpenStateUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    OpenStateUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    OpenStateUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    OpenStateUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return OpenStateUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return OpenStateUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return OpenStateUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, uint32> open_state_map = 1;
  int open_state_map_size() const;
  void clear_open_state_map();
  static const int kOpenStateMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      open_state_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_open_state_map();

  // @@protoc_insertion_point(class_scope:proto.OpenStateUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class OpenStateUpdateNotify_OpenStateMapEntry : public ::google::protobuf::internal::MapEntry<OpenStateUpdateNotify_OpenStateMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OpenStateUpdateNotify_OpenStateMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    OpenStateUpdateNotify_OpenStateMapEntry();
    OpenStateUpdateNotify_OpenStateMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OpenStateUpdateNotify_OpenStateMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OpenStateUpdateNotify_OpenStateMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      OpenStateUpdateNotify_OpenStateMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > open_state_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class OpenStateChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OpenStateChangeNotify) */ {
 public:
  OpenStateChangeNotify();
  virtual ~OpenStateChangeNotify();

  OpenStateChangeNotify(const OpenStateChangeNotify& from);

  inline OpenStateChangeNotify& operator=(const OpenStateChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpenStateChangeNotify(OpenStateChangeNotify&& from) noexcept
    : OpenStateChangeNotify() {
    *this = ::std::move(from);
  }

  inline OpenStateChangeNotify& operator=(OpenStateChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenStateChangeNotify& default_instance();

  static inline const OpenStateChangeNotify* internal_default_instance() {
    return reinterpret_cast<const OpenStateChangeNotify*>(
               &_OpenStateChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(OpenStateChangeNotify* other);
  friend void swap(OpenStateChangeNotify& a, OpenStateChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpenStateChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  OpenStateChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpenStateChangeNotify& from);
  void MergeFrom(const OpenStateChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpenStateChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef OpenStateChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    OpenStateChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    OpenStateChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    OpenStateChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    OpenStateChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return OpenStateChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    OpenStateChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    OpenStateChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    OpenStateChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return OpenStateChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return OpenStateChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return OpenStateChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<uint32, uint32> open_state_map = 1;
  int open_state_map_size() const;
  void clear_open_state_map();
  static const int kOpenStateMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      open_state_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_open_state_map();

  // @@protoc_insertion_point(class_scope:proto.OpenStateChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class OpenStateChangeNotify_OpenStateMapEntry : public ::google::protobuf::internal::MapEntry<OpenStateChangeNotify_OpenStateMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OpenStateChangeNotify_OpenStateMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    OpenStateChangeNotify_OpenStateMapEntry();
    OpenStateChangeNotify_OpenStateMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OpenStateChangeNotify_OpenStateMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OpenStateChangeNotify_OpenStateMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      OpenStateChangeNotify_OpenStateMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > open_state_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCookReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCookReq) */ {
 public:
  PlayerCookReq();
  virtual ~PlayerCookReq();

  PlayerCookReq(const PlayerCookReq& from);

  inline PlayerCookReq& operator=(const PlayerCookReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCookReq(PlayerCookReq&& from) noexcept
    : PlayerCookReq() {
    *this = ::std::move(from);
  }

  inline PlayerCookReq& operator=(PlayerCookReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCookReq& default_instance();

  static inline const PlayerCookReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCookReq*>(
               &_PlayerCookReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(PlayerCookReq* other);
  friend void swap(PlayerCookReq& a, PlayerCookReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCookReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCookReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCookReq& from);
  void MergeFrom(const PlayerCookReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCookReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerCookReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerCookReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerCookReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerCookReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerCookReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerCookReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerCookReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerCookReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerCookReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerCookReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerCookReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerCookReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerCookReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 recipe_id = 1;
  void clear_recipe_id();
  static const int kRecipeIdFieldNumber = 1;
  ::google::protobuf::uint32 recipe_id() const;
  void set_recipe_id(::google::protobuf::uint32 value);

  // uint32 qte_quality = 2;
  void clear_qte_quality();
  static const int kQteQualityFieldNumber = 2;
  ::google::protobuf::uint32 qte_quality() const;
  void set_qte_quality(::google::protobuf::uint32 value);

  // uint32 assist_avatar = 3;
  void clear_assist_avatar();
  static const int kAssistAvatarFieldNumber = 3;
  ::google::protobuf::uint32 assist_avatar() const;
  void set_assist_avatar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCookReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recipe_id_;
  ::google::protobuf::uint32 qte_quality_;
  ::google::protobuf::uint32 assist_avatar_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCookRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCookRsp) */ {
 public:
  PlayerCookRsp();
  virtual ~PlayerCookRsp();

  PlayerCookRsp(const PlayerCookRsp& from);

  inline PlayerCookRsp& operator=(const PlayerCookRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCookRsp(PlayerCookRsp&& from) noexcept
    : PlayerCookRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCookRsp& operator=(PlayerCookRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCookRsp& default_instance();

  static inline const PlayerCookRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCookRsp*>(
               &_PlayerCookRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(PlayerCookRsp* other);
  friend void swap(PlayerCookRsp& a, PlayerCookRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCookRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCookRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCookRsp& from);
  void MergeFrom(const PlayerCookRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCookRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerCookRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerCookRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerCookRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerCookRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerCookRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerCookRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerCookRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerCookRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerCookRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerCookRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerCookRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerCookRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CookRecipeData recipe_data = 2;
  bool has_recipe_data() const;
  void clear_recipe_data();
  static const int kRecipeDataFieldNumber = 2;
  const ::proto::CookRecipeData& recipe_data() const;
  ::proto::CookRecipeData* mutable_recipe_data();
  ::proto::CookRecipeData* release_recipe_data();
  void set_allocated_recipe_data(::proto::CookRecipeData* recipe_data);

  // .proto.ItemParam item = 3;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 3;
  const ::proto::ItemParam& item() const;
  ::proto::ItemParam* mutable_item();
  ::proto::ItemParam* release_item();
  void set_allocated_item(::proto::ItemParam* item);

  // uint32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // uint32 qte_quality = 4;
  void clear_qte_quality();
  static const int kQteQualityFieldNumber = 4;
  ::google::protobuf::uint32 qte_quality() const;
  void set_qte_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCookRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CookRecipeData* recipe_data_;
  ::proto::ItemParam* item_;
  ::google::protobuf::uint32 retcode_;
  ::google::protobuf::uint32 qte_quality_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerRandomCookReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerRandomCookReq) */ {
 public:
  PlayerRandomCookReq();
  virtual ~PlayerRandomCookReq();

  PlayerRandomCookReq(const PlayerRandomCookReq& from);

  inline PlayerRandomCookReq& operator=(const PlayerRandomCookReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRandomCookReq(PlayerRandomCookReq&& from) noexcept
    : PlayerRandomCookReq() {
    *this = ::std::move(from);
  }

  inline PlayerRandomCookReq& operator=(PlayerRandomCookReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRandomCookReq& default_instance();

  static inline const PlayerRandomCookReq* internal_default_instance() {
    return reinterpret_cast<const PlayerRandomCookReq*>(
               &_PlayerRandomCookReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(PlayerRandomCookReq* other);
  friend void swap(PlayerRandomCookReq& a, PlayerRandomCookReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRandomCookReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerRandomCookReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRandomCookReq& from);
  void MergeFrom(const PlayerRandomCookReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRandomCookReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerRandomCookReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerRandomCookReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerRandomCookReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerRandomCookReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerRandomCookReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerRandomCookReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerRandomCookReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerRandomCookReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerRandomCookReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerRandomCookReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerRandomCookReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerRandomCookReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerRandomCookReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam material_list = 1;
  int material_list_size() const;
  void clear_material_list();
  static const int kMaterialListFieldNumber = 1;
  const ::proto::ItemParam& material_list(int index) const;
  ::proto::ItemParam* mutable_material_list(int index);
  ::proto::ItemParam* add_material_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_material_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      material_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerRandomCookReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > material_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerRandomCookRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerRandomCookRsp) */ {
 public:
  PlayerRandomCookRsp();
  virtual ~PlayerRandomCookRsp();

  PlayerRandomCookRsp(const PlayerRandomCookRsp& from);

  inline PlayerRandomCookRsp& operator=(const PlayerRandomCookRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerRandomCookRsp(PlayerRandomCookRsp&& from) noexcept
    : PlayerRandomCookRsp() {
    *this = ::std::move(from);
  }

  inline PlayerRandomCookRsp& operator=(PlayerRandomCookRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerRandomCookRsp& default_instance();

  static inline const PlayerRandomCookRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerRandomCookRsp*>(
               &_PlayerRandomCookRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(PlayerRandomCookRsp* other);
  friend void swap(PlayerRandomCookRsp& a, PlayerRandomCookRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerRandomCookRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerRandomCookRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerRandomCookRsp& from);
  void MergeFrom(const PlayerRandomCookRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerRandomCookRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerRandomCookRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerRandomCookRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerRandomCookRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerRandomCookRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerRandomCookRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerRandomCookRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerRandomCookRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerRandomCookRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerRandomCookRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerRandomCookRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerRandomCookRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerRandomCookRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerRandomCookRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CookRecipeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CookRecipeData) */ {
 public:
  CookRecipeData();
  virtual ~CookRecipeData();

  CookRecipeData(const CookRecipeData& from);

  inline CookRecipeData& operator=(const CookRecipeData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CookRecipeData(CookRecipeData&& from) noexcept
    : CookRecipeData() {
    *this = ::std::move(from);
  }

  inline CookRecipeData& operator=(CookRecipeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CookRecipeData& default_instance();

  static inline const CookRecipeData* internal_default_instance() {
    return reinterpret_cast<const CookRecipeData*>(
               &_CookRecipeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(CookRecipeData* other);
  friend void swap(CookRecipeData& a, CookRecipeData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CookRecipeData* New() const PROTOBUF_FINAL { return New(NULL); }

  CookRecipeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CookRecipeData& from);
  void MergeFrom(const CookRecipeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CookRecipeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 recipe_id = 1;
  void clear_recipe_id();
  static const int kRecipeIdFieldNumber = 1;
  ::google::protobuf::uint32 recipe_id() const;
  void set_recipe_id(::google::protobuf::uint32 value);

  // uint32 proficiency = 2;
  void clear_proficiency();
  static const int kProficiencyFieldNumber = 2;
  ::google::protobuf::uint32 proficiency() const;
  void set_proficiency(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CookRecipeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recipe_id_;
  ::google::protobuf::uint32 proficiency_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CookDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CookDataNotify) */ {
 public:
  CookDataNotify();
  virtual ~CookDataNotify();

  CookDataNotify(const CookDataNotify& from);

  inline CookDataNotify& operator=(const CookDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CookDataNotify(CookDataNotify&& from) noexcept
    : CookDataNotify() {
    *this = ::std::move(from);
  }

  inline CookDataNotify& operator=(CookDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CookDataNotify& default_instance();

  static inline const CookDataNotify* internal_default_instance() {
    return reinterpret_cast<const CookDataNotify*>(
               &_CookDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(CookDataNotify* other);
  friend void swap(CookDataNotify& a, CookDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CookDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CookDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CookDataNotify& from);
  void MergeFrom(const CookDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CookDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CookDataNotify_CmdId CmdId;
  static const CmdId NONE =
    CookDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CookDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CookDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CookDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CookDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CookDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CookDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CookDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CookDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CookDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CookDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.CookRecipeData recipe_data_list = 2;
  int recipe_data_list_size() const;
  void clear_recipe_data_list();
  static const int kRecipeDataListFieldNumber = 2;
  const ::proto::CookRecipeData& recipe_data_list(int index) const;
  ::proto::CookRecipeData* mutable_recipe_data_list(int index);
  ::proto::CookRecipeData* add_recipe_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >*
      mutable_recipe_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >&
      recipe_data_list() const;

  // uint32 grade = 1;
  void clear_grade();
  static const int kGradeFieldNumber = 1;
  ::google::protobuf::uint32 grade() const;
  void set_grade(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CookDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData > recipe_data_list_;
  ::google::protobuf::uint32 grade_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CookRecipeDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CookRecipeDataNotify) */ {
 public:
  CookRecipeDataNotify();
  virtual ~CookRecipeDataNotify();

  CookRecipeDataNotify(const CookRecipeDataNotify& from);

  inline CookRecipeDataNotify& operator=(const CookRecipeDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CookRecipeDataNotify(CookRecipeDataNotify&& from) noexcept
    : CookRecipeDataNotify() {
    *this = ::std::move(from);
  }

  inline CookRecipeDataNotify& operator=(CookRecipeDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CookRecipeDataNotify& default_instance();

  static inline const CookRecipeDataNotify* internal_default_instance() {
    return reinterpret_cast<const CookRecipeDataNotify*>(
               &_CookRecipeDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(CookRecipeDataNotify* other);
  friend void swap(CookRecipeDataNotify& a, CookRecipeDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CookRecipeDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CookRecipeDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CookRecipeDataNotify& from);
  void MergeFrom(const CookRecipeDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CookRecipeDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CookRecipeDataNotify_CmdId CmdId;
  static const CmdId NONE =
    CookRecipeDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CookRecipeDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CookRecipeDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CookRecipeDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CookRecipeDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CookRecipeDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CookRecipeDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CookRecipeDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CookRecipeDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CookRecipeDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CookRecipeDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CookRecipeData recipe_data = 1;
  bool has_recipe_data() const;
  void clear_recipe_data();
  static const int kRecipeDataFieldNumber = 1;
  const ::proto::CookRecipeData& recipe_data() const;
  ::proto::CookRecipeData* mutable_recipe_data();
  ::proto::CookRecipeData* release_recipe_data();
  void set_allocated_recipe_data(::proto::CookRecipeData* recipe_data);

  // @@protoc_insertion_point(class_scope:proto.CookRecipeDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CookRecipeData* recipe_data_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CookGradeDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CookGradeDataNotify) */ {
 public:
  CookGradeDataNotify();
  virtual ~CookGradeDataNotify();

  CookGradeDataNotify(const CookGradeDataNotify& from);

  inline CookGradeDataNotify& operator=(const CookGradeDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CookGradeDataNotify(CookGradeDataNotify&& from) noexcept
    : CookGradeDataNotify() {
    *this = ::std::move(from);
  }

  inline CookGradeDataNotify& operator=(CookGradeDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CookGradeDataNotify& default_instance();

  static inline const CookGradeDataNotify* internal_default_instance() {
    return reinterpret_cast<const CookGradeDataNotify*>(
               &_CookGradeDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(CookGradeDataNotify* other);
  friend void swap(CookGradeDataNotify& a, CookGradeDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CookGradeDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CookGradeDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CookGradeDataNotify& from);
  void MergeFrom(const CookGradeDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CookGradeDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CookGradeDataNotify_CmdId CmdId;
  static const CmdId NONE =
    CookGradeDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CookGradeDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CookGradeDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CookGradeDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CookGradeDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CookGradeDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CookGradeDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CookGradeDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CookGradeDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CookGradeDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CookGradeDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 grade = 1;
  void clear_grade();
  static const int kGradeFieldNumber = 1;
  ::google::protobuf::uint32 grade() const;
  void set_grade(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CookGradeDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 grade_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCompoundMaterialReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCompoundMaterialReq) */ {
 public:
  PlayerCompoundMaterialReq();
  virtual ~PlayerCompoundMaterialReq();

  PlayerCompoundMaterialReq(const PlayerCompoundMaterialReq& from);

  inline PlayerCompoundMaterialReq& operator=(const PlayerCompoundMaterialReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCompoundMaterialReq(PlayerCompoundMaterialReq&& from) noexcept
    : PlayerCompoundMaterialReq() {
    *this = ::std::move(from);
  }

  inline PlayerCompoundMaterialReq& operator=(PlayerCompoundMaterialReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCompoundMaterialReq& default_instance();

  static inline const PlayerCompoundMaterialReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCompoundMaterialReq*>(
               &_PlayerCompoundMaterialReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(PlayerCompoundMaterialReq* other);
  friend void swap(PlayerCompoundMaterialReq& a, PlayerCompoundMaterialReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCompoundMaterialReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCompoundMaterialReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCompoundMaterialReq& from);
  void MergeFrom(const PlayerCompoundMaterialReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCompoundMaterialReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerCompoundMaterialReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerCompoundMaterialReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerCompoundMaterialReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerCompoundMaterialReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerCompoundMaterialReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerCompoundMaterialReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerCompoundMaterialReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerCompoundMaterialReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerCompoundMaterialReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerCompoundMaterialReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerCompoundMaterialReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerCompoundMaterialReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerCompoundMaterialReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 compound_id = 1;
  void clear_compound_id();
  static const int kCompoundIdFieldNumber = 1;
  ::google::protobuf::uint32 compound_id() const;
  void set_compound_id(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCompoundMaterialReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 compound_id_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompoundQueueData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CompoundQueueData) */ {
 public:
  CompoundQueueData();
  virtual ~CompoundQueueData();

  CompoundQueueData(const CompoundQueueData& from);

  inline CompoundQueueData& operator=(const CompoundQueueData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompoundQueueData(CompoundQueueData&& from) noexcept
    : CompoundQueueData() {
    *this = ::std::move(from);
  }

  inline CompoundQueueData& operator=(CompoundQueueData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompoundQueueData& default_instance();

  static inline const CompoundQueueData* internal_default_instance() {
    return reinterpret_cast<const CompoundQueueData*>(
               &_CompoundQueueData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CompoundQueueData* other);
  friend void swap(CompoundQueueData& a, CompoundQueueData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompoundQueueData* New() const PROTOBUF_FINAL { return New(NULL); }

  CompoundQueueData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompoundQueueData& from);
  void MergeFrom(const CompoundQueueData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompoundQueueData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 compound_id = 1;
  void clear_compound_id();
  static const int kCompoundIdFieldNumber = 1;
  ::google::protobuf::uint32 compound_id() const;
  void set_compound_id(::google::protobuf::uint32 value);

  // uint32 output_count = 2;
  void clear_output_count();
  static const int kOutputCountFieldNumber = 2;
  ::google::protobuf::uint32 output_count() const;
  void set_output_count(::google::protobuf::uint32 value);

  // uint32 wait_count = 3;
  void clear_wait_count();
  static const int kWaitCountFieldNumber = 3;
  ::google::protobuf::uint32 wait_count() const;
  void set_wait_count(::google::protobuf::uint32 value);

  // uint32 output_time = 4;
  void clear_output_time();
  static const int kOutputTimeFieldNumber = 4;
  ::google::protobuf::uint32 output_time() const;
  void set_output_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CompoundQueueData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 compound_id_;
  ::google::protobuf::uint32 output_count_;
  ::google::protobuf::uint32 wait_count_;
  ::google::protobuf::uint32 output_time_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCompoundMaterialRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCompoundMaterialRsp) */ {
 public:
  PlayerCompoundMaterialRsp();
  virtual ~PlayerCompoundMaterialRsp();

  PlayerCompoundMaterialRsp(const PlayerCompoundMaterialRsp& from);

  inline PlayerCompoundMaterialRsp& operator=(const PlayerCompoundMaterialRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCompoundMaterialRsp(PlayerCompoundMaterialRsp&& from) noexcept
    : PlayerCompoundMaterialRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCompoundMaterialRsp& operator=(PlayerCompoundMaterialRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCompoundMaterialRsp& default_instance();

  static inline const PlayerCompoundMaterialRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCompoundMaterialRsp*>(
               &_PlayerCompoundMaterialRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(PlayerCompoundMaterialRsp* other);
  friend void swap(PlayerCompoundMaterialRsp& a, PlayerCompoundMaterialRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCompoundMaterialRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCompoundMaterialRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCompoundMaterialRsp& from);
  void MergeFrom(const PlayerCompoundMaterialRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCompoundMaterialRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerCompoundMaterialRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerCompoundMaterialRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerCompoundMaterialRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerCompoundMaterialRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerCompoundMaterialRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerCompoundMaterialRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerCompoundMaterialRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerCompoundMaterialRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerCompoundMaterialRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerCompoundMaterialRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerCompoundMaterialRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerCompoundMaterialRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.CompoundQueueData compound_que_data = 2;
  bool has_compound_que_data() const;
  void clear_compound_que_data();
  static const int kCompoundQueDataFieldNumber = 2;
  const ::proto::CompoundQueueData& compound_que_data() const;
  ::proto::CompoundQueueData* mutable_compound_que_data();
  ::proto::CompoundQueueData* release_compound_que_data();
  void set_allocated_compound_que_data(::proto::CompoundQueueData* compound_que_data);

  // uint32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCompoundMaterialRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CompoundQueueData* compound_que_data_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeCompoundOutputReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeCompoundOutputReq) */ {
 public:
  TakeCompoundOutputReq();
  virtual ~TakeCompoundOutputReq();

  TakeCompoundOutputReq(const TakeCompoundOutputReq& from);

  inline TakeCompoundOutputReq& operator=(const TakeCompoundOutputReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeCompoundOutputReq(TakeCompoundOutputReq&& from) noexcept
    : TakeCompoundOutputReq() {
    *this = ::std::move(from);
  }

  inline TakeCompoundOutputReq& operator=(TakeCompoundOutputReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeCompoundOutputReq& default_instance();

  static inline const TakeCompoundOutputReq* internal_default_instance() {
    return reinterpret_cast<const TakeCompoundOutputReq*>(
               &_TakeCompoundOutputReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(TakeCompoundOutputReq* other);
  friend void swap(TakeCompoundOutputReq& a, TakeCompoundOutputReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeCompoundOutputReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeCompoundOutputReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeCompoundOutputReq& from);
  void MergeFrom(const TakeCompoundOutputReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeCompoundOutputReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeCompoundOutputReq_CmdId CmdId;
  static const CmdId NONE =
    TakeCompoundOutputReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeCompoundOutputReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeCompoundOutputReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeCompoundOutputReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakeCompoundOutputReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakeCompoundOutputReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeCompoundOutputReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeCompoundOutputReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeCompoundOutputReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeCompoundOutputReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeCompoundOutputReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeCompoundOutputReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 compound_id = 1;
  void clear_compound_id();
  static const int kCompoundIdFieldNumber = 1;
  ::google::protobuf::uint32 compound_id() const;
  void set_compound_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeCompoundOutputReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 compound_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeCompoundOutputRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeCompoundOutputRsp) */ {
 public:
  TakeCompoundOutputRsp();
  virtual ~TakeCompoundOutputRsp();

  TakeCompoundOutputRsp(const TakeCompoundOutputRsp& from);

  inline TakeCompoundOutputRsp& operator=(const TakeCompoundOutputRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeCompoundOutputRsp(TakeCompoundOutputRsp&& from) noexcept
    : TakeCompoundOutputRsp() {
    *this = ::std::move(from);
  }

  inline TakeCompoundOutputRsp& operator=(TakeCompoundOutputRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeCompoundOutputRsp& default_instance();

  static inline const TakeCompoundOutputRsp* internal_default_instance() {
    return reinterpret_cast<const TakeCompoundOutputRsp*>(
               &_TakeCompoundOutputRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(TakeCompoundOutputRsp* other);
  friend void swap(TakeCompoundOutputRsp& a, TakeCompoundOutputRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeCompoundOutputRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeCompoundOutputRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeCompoundOutputRsp& from);
  void MergeFrom(const TakeCompoundOutputRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeCompoundOutputRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakeCompoundOutputRsp_CmdId CmdId;
  static const CmdId NONE =
    TakeCompoundOutputRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakeCompoundOutputRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakeCompoundOutputRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakeCompoundOutputRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TakeCompoundOutputRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakeCompoundOutputRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakeCompoundOutputRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakeCompoundOutputRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakeCompoundOutputRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakeCompoundOutputRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakeCompoundOutputRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_list = 2;
  int item_list_size() const;
  void clear_item_list();
  static const int kItemListFieldNumber = 2;
  const ::proto::ItemParam& item_list(int index) const;
  ::proto::ItemParam* mutable_item_list(int index);
  ::proto::ItemParam* add_item_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_list() const;

  // uint32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeCompoundOutputRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_list_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CompoundDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CompoundDataNotify) */ {
 public:
  CompoundDataNotify();
  virtual ~CompoundDataNotify();

  CompoundDataNotify(const CompoundDataNotify& from);

  inline CompoundDataNotify& operator=(const CompoundDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CompoundDataNotify(CompoundDataNotify&& from) noexcept
    : CompoundDataNotify() {
    *this = ::std::move(from);
  }

  inline CompoundDataNotify& operator=(CompoundDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CompoundDataNotify& default_instance();

  static inline const CompoundDataNotify* internal_default_instance() {
    return reinterpret_cast<const CompoundDataNotify*>(
               &_CompoundDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(CompoundDataNotify* other);
  friend void swap(CompoundDataNotify& a, CompoundDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CompoundDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CompoundDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CompoundDataNotify& from);
  void MergeFrom(const CompoundDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CompoundDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CompoundDataNotify_CmdId CmdId;
  static const CmdId NONE =
    CompoundDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    CompoundDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    CompoundDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    CompoundDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return CompoundDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    CompoundDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    CompoundDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    CompoundDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return CompoundDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return CompoundDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return CompoundDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 unlock_compound_list = 1;
  int unlock_compound_list_size() const;
  void clear_unlock_compound_list();
  static const int kUnlockCompoundListFieldNumber = 1;
  ::google::protobuf::uint32 unlock_compound_list(int index) const;
  void set_unlock_compound_list(int index, ::google::protobuf::uint32 value);
  void add_unlock_compound_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_compound_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_compound_list();

  // repeated .proto.CompoundQueueData compound_que_data_list = 2;
  int compound_que_data_list_size() const;
  void clear_compound_que_data_list();
  static const int kCompoundQueDataListFieldNumber = 2;
  const ::proto::CompoundQueueData& compound_que_data_list(int index) const;
  ::proto::CompoundQueueData* mutable_compound_que_data_list(int index);
  ::proto::CompoundQueueData* add_compound_que_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
      mutable_compound_que_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
      compound_que_data_list() const;

  // @@protoc_insertion_point(class_scope:proto.CompoundDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_compound_list_;
  mutable int _unlock_compound_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData > compound_que_data_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCompoundDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetCompoundDataReq) */ {
 public:
  GetCompoundDataReq();
  virtual ~GetCompoundDataReq();

  GetCompoundDataReq(const GetCompoundDataReq& from);

  inline GetCompoundDataReq& operator=(const GetCompoundDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCompoundDataReq(GetCompoundDataReq&& from) noexcept
    : GetCompoundDataReq() {
    *this = ::std::move(from);
  }

  inline GetCompoundDataReq& operator=(GetCompoundDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCompoundDataReq& default_instance();

  static inline const GetCompoundDataReq* internal_default_instance() {
    return reinterpret_cast<const GetCompoundDataReq*>(
               &_GetCompoundDataReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(GetCompoundDataReq* other);
  friend void swap(GetCompoundDataReq& a, GetCompoundDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCompoundDataReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCompoundDataReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCompoundDataReq& from);
  void MergeFrom(const GetCompoundDataReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCompoundDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetCompoundDataReq_CmdId CmdId;
  static const CmdId NONE =
    GetCompoundDataReq_CmdId_NONE;
  static const CmdId CMD_ID =
    GetCompoundDataReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetCompoundDataReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetCompoundDataReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    GetCompoundDataReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return GetCompoundDataReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetCompoundDataReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetCompoundDataReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetCompoundDataReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetCompoundDataReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetCompoundDataReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetCompoundDataReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetCompoundDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCompoundDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetCompoundDataRsp) */ {
 public:
  GetCompoundDataRsp();
  virtual ~GetCompoundDataRsp();

  GetCompoundDataRsp(const GetCompoundDataRsp& from);

  inline GetCompoundDataRsp& operator=(const GetCompoundDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetCompoundDataRsp(GetCompoundDataRsp&& from) noexcept
    : GetCompoundDataRsp() {
    *this = ::std::move(from);
  }

  inline GetCompoundDataRsp& operator=(GetCompoundDataRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCompoundDataRsp& default_instance();

  static inline const GetCompoundDataRsp* internal_default_instance() {
    return reinterpret_cast<const GetCompoundDataRsp*>(
               &_GetCompoundDataRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(GetCompoundDataRsp* other);
  friend void swap(GetCompoundDataRsp& a, GetCompoundDataRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetCompoundDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCompoundDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCompoundDataRsp& from);
  void MergeFrom(const GetCompoundDataRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCompoundDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GetCompoundDataRsp_CmdId CmdId;
  static const CmdId NONE =
    GetCompoundDataRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    GetCompoundDataRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GetCompoundDataRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GetCompoundDataRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GetCompoundDataRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GetCompoundDataRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GetCompoundDataRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GetCompoundDataRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GetCompoundDataRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GetCompoundDataRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GetCompoundDataRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 unlock_compound_list = 2;
  int unlock_compound_list_size() const;
  void clear_unlock_compound_list();
  static const int kUnlockCompoundListFieldNumber = 2;
  ::google::protobuf::uint32 unlock_compound_list(int index) const;
  void set_unlock_compound_list(int index, ::google::protobuf::uint32 value);
  void add_unlock_compound_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_compound_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_compound_list();

  // repeated .proto.CompoundQueueData compound_que_data_list = 3;
  int compound_que_data_list_size() const;
  void clear_compound_que_data_list();
  static const int kCompoundQueDataListFieldNumber = 3;
  const ::proto::CompoundQueueData& compound_que_data_list(int index) const;
  ::proto::CompoundQueueData* mutable_compound_que_data_list(int index);
  ::proto::CompoundQueueData* add_compound_que_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
      mutable_compound_que_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
      compound_que_data_list() const;

  // uint32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetCompoundDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_compound_list_;
  mutable int _unlock_compound_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData > compound_que_data_list_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerTimeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerTimeNotify) */ {
 public:
  PlayerTimeNotify();
  virtual ~PlayerTimeNotify();

  PlayerTimeNotify(const PlayerTimeNotify& from);

  inline PlayerTimeNotify& operator=(const PlayerTimeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTimeNotify(PlayerTimeNotify&& from) noexcept
    : PlayerTimeNotify() {
    *this = ::std::move(from);
  }

  inline PlayerTimeNotify& operator=(PlayerTimeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTimeNotify& default_instance();

  static inline const PlayerTimeNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerTimeNotify*>(
               &_PlayerTimeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(PlayerTimeNotify* other);
  friend void swap(PlayerTimeNotify& a, PlayerTimeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTimeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerTimeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerTimeNotify& from);
  void MergeFrom(const PlayerTimeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerTimeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerTimeNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerTimeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerTimeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerTimeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerTimeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerTimeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerTimeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerTimeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerTimeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerTimeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerTimeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerTimeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint64 player_time = 2;
  void clear_player_time();
  static const int kPlayerTimeFieldNumber = 2;
  ::google::protobuf::uint64 player_time() const;
  void set_player_time(::google::protobuf::uint64 value);

  // uint64 server_time = 3;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 3;
  ::google::protobuf::uint64 server_time() const;
  void set_server_time(::google::protobuf::uint64 value);

  // bool is_paused = 1;
  void clear_is_paused();
  static const int kIsPausedFieldNumber = 1;
  bool is_paused() const;
  void set_is_paused(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerTimeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 player_time_;
  ::google::protobuf::uint64 server_time_;
  bool is_paused_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSetPauseReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSetPauseReq) */ {
 public:
  PlayerSetPauseReq();
  virtual ~PlayerSetPauseReq();

  PlayerSetPauseReq(const PlayerSetPauseReq& from);

  inline PlayerSetPauseReq& operator=(const PlayerSetPauseReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSetPauseReq(PlayerSetPauseReq&& from) noexcept
    : PlayerSetPauseReq() {
    *this = ::std::move(from);
  }

  inline PlayerSetPauseReq& operator=(PlayerSetPauseReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSetPauseReq& default_instance();

  static inline const PlayerSetPauseReq* internal_default_instance() {
    return reinterpret_cast<const PlayerSetPauseReq*>(
               &_PlayerSetPauseReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(PlayerSetPauseReq* other);
  friend void swap(PlayerSetPauseReq& a, PlayerSetPauseReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSetPauseReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSetPauseReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSetPauseReq& from);
  void MergeFrom(const PlayerSetPauseReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSetPauseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerSetPauseReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerSetPauseReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerSetPauseReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerSetPauseReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerSetPauseReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerSetPauseReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerSetPauseReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerSetPauseReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerSetPauseReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerSetPauseReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerSetPauseReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerSetPauseReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerSetPauseReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bool is_paused = 1;
  void clear_is_paused();
  static const int kIsPausedFieldNumber = 1;
  bool is_paused() const;
  void set_is_paused(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerSetPauseReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_paused_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSetPauseRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSetPauseRsp) */ {
 public:
  PlayerSetPauseRsp();
  virtual ~PlayerSetPauseRsp();

  PlayerSetPauseRsp(const PlayerSetPauseRsp& from);

  inline PlayerSetPauseRsp& operator=(const PlayerSetPauseRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSetPauseRsp(PlayerSetPauseRsp&& from) noexcept
    : PlayerSetPauseRsp() {
    *this = ::std::move(from);
  }

  inline PlayerSetPauseRsp& operator=(PlayerSetPauseRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSetPauseRsp& default_instance();

  static inline const PlayerSetPauseRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerSetPauseRsp*>(
               &_PlayerSetPauseRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(PlayerSetPauseRsp* other);
  friend void swap(PlayerSetPauseRsp& a, PlayerSetPauseRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSetPauseRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSetPauseRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSetPauseRsp& from);
  void MergeFrom(const PlayerSetPauseRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSetPauseRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerSetPauseRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerSetPauseRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerSetPauseRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerSetPauseRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerSetPauseRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerSetPauseRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerSetPauseRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerSetPauseRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerSetPauseRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerSetPauseRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerSetPauseRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerSetPauseRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerSetPauseRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSetLanguageReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSetLanguageReq) */ {
 public:
  PlayerSetLanguageReq();
  virtual ~PlayerSetLanguageReq();

  PlayerSetLanguageReq(const PlayerSetLanguageReq& from);

  inline PlayerSetLanguageReq& operator=(const PlayerSetLanguageReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSetLanguageReq(PlayerSetLanguageReq&& from) noexcept
    : PlayerSetLanguageReq() {
    *this = ::std::move(from);
  }

  inline PlayerSetLanguageReq& operator=(PlayerSetLanguageReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSetLanguageReq& default_instance();

  static inline const PlayerSetLanguageReq* internal_default_instance() {
    return reinterpret_cast<const PlayerSetLanguageReq*>(
               &_PlayerSetLanguageReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(PlayerSetLanguageReq* other);
  friend void swap(PlayerSetLanguageReq& a, PlayerSetLanguageReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSetLanguageReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSetLanguageReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSetLanguageReq& from);
  void MergeFrom(const PlayerSetLanguageReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSetLanguageReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerSetLanguageReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerSetLanguageReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerSetLanguageReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerSetLanguageReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerSetLanguageReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerSetLanguageReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerSetLanguageReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerSetLanguageReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerSetLanguageReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerSetLanguageReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerSetLanguageReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerSetLanguageReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerSetLanguageReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 language_type = 1;
  void clear_language_type();
  static const int kLanguageTypeFieldNumber = 1;
  ::google::protobuf::uint32 language_type() const;
  void set_language_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerSetLanguageReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 language_type_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerSetLanguageRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerSetLanguageRsp) */ {
 public:
  PlayerSetLanguageRsp();
  virtual ~PlayerSetLanguageRsp();

  PlayerSetLanguageRsp(const PlayerSetLanguageRsp& from);

  inline PlayerSetLanguageRsp& operator=(const PlayerSetLanguageRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerSetLanguageRsp(PlayerSetLanguageRsp&& from) noexcept
    : PlayerSetLanguageRsp() {
    *this = ::std::move(from);
  }

  inline PlayerSetLanguageRsp& operator=(PlayerSetLanguageRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerSetLanguageRsp& default_instance();

  static inline const PlayerSetLanguageRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerSetLanguageRsp*>(
               &_PlayerSetLanguageRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(PlayerSetLanguageRsp* other);
  friend void swap(PlayerSetLanguageRsp& a, PlayerSetLanguageRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerSetLanguageRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerSetLanguageRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerSetLanguageRsp& from);
  void MergeFrom(const PlayerSetLanguageRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerSetLanguageRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerSetLanguageRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerSetLanguageRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerSetLanguageRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerSetLanguageRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerSetLanguageRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerSetLanguageRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerSetLanguageRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerSetLanguageRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerSetLanguageRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerSetLanguageRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerSetLanguageRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerSetLanguageRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerSetLanguageRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DataResVersionNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DataResVersionNotify) */ {
 public:
  DataResVersionNotify();
  virtual ~DataResVersionNotify();

  DataResVersionNotify(const DataResVersionNotify& from);

  inline DataResVersionNotify& operator=(const DataResVersionNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DataResVersionNotify(DataResVersionNotify&& from) noexcept
    : DataResVersionNotify() {
    *this = ::std::move(from);
  }

  inline DataResVersionNotify& operator=(DataResVersionNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DataResVersionNotify& default_instance();

  static inline const DataResVersionNotify* internal_default_instance() {
    return reinterpret_cast<const DataResVersionNotify*>(
               &_DataResVersionNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(DataResVersionNotify* other);
  friend void swap(DataResVersionNotify& a, DataResVersionNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DataResVersionNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DataResVersionNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DataResVersionNotify& from);
  void MergeFrom(const DataResVersionNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DataResVersionNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DataResVersionNotify_CmdId CmdId;
  static const CmdId NONE =
    DataResVersionNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DataResVersionNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DataResVersionNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DataResVersionNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DataResVersionNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DataResVersionNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DataResVersionNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DataResVersionNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DataResVersionNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DataResVersionNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DataResVersionNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string client_md5 = 5;
  void clear_client_md5();
  static const int kClientMd5FieldNumber = 5;
  const ::std::string& client_md5() const;
  void set_client_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_md5(::std::string&& value);
  #endif
  void set_client_md5(const char* value);
  void set_client_md5(const char* value, size_t size);
  ::std::string* mutable_client_md5();
  ::std::string* release_client_md5();
  void set_allocated_client_md5(::std::string* client_md5);

  // string client_silence_md5 = 6;
  void clear_client_silence_md5();
  static const int kClientSilenceMd5FieldNumber = 6;
  const ::std::string& client_silence_md5() const;
  void set_client_silence_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_client_silence_md5(::std::string&& value);
  #endif
  void set_client_silence_md5(const char* value);
  void set_client_silence_md5(const char* value, size_t size);
  ::std::string* mutable_client_silence_md5();
  ::std::string* release_client_silence_md5();
  void set_allocated_client_silence_md5(::std::string* client_silence_md5);

  // string res_md5 = 7;
  void clear_res_md5();
  static const int kResMd5FieldNumber = 7;
  const ::std::string& res_md5() const;
  void set_res_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_res_md5(::std::string&& value);
  #endif
  void set_res_md5(const char* value);
  void set_res_md5(const char* value, size_t size);
  ::std::string* mutable_res_md5();
  ::std::string* release_res_md5();
  void set_allocated_res_md5(::std::string* res_md5);

  // .proto.ResVersionConfig res_version_config = 10;
  bool has_res_version_config() const;
  void clear_res_version_config();
  static const int kResVersionConfigFieldNumber = 10;
  const ::proto::ResVersionConfig& res_version_config() const;
  ::proto::ResVersionConfig* mutable_res_version_config();
  ::proto::ResVersionConfig* release_res_version_config();
  void set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config);

  // uint32 client_data_version = 1;
  void clear_client_data_version();
  static const int kClientDataVersionFieldNumber = 1;
  ::google::protobuf::uint32 client_data_version() const;
  void set_client_data_version(::google::protobuf::uint32 value);

  // uint32 client_silence_data_version = 2;
  void clear_client_silence_data_version();
  static const int kClientSilenceDataVersionFieldNumber = 2;
  ::google::protobuf::uint32 client_silence_data_version() const;
  void set_client_silence_data_version(::google::protobuf::uint32 value);

  // uint32 res_version = 3;
  void clear_res_version();
  static const int kResVersionFieldNumber = 3;
  ::google::protobuf::uint32 res_version() const;
  void set_res_version(::google::protobuf::uint32 value);

  // bool is_res_need_relogin = 9;
  void clear_is_res_need_relogin();
  static const int kIsResNeedReloginFieldNumber = 9;
  bool is_res_need_relogin() const;
  void set_is_res_need_relogin(bool value);

  // @@protoc_insertion_point(class_scope:proto.DataResVersionNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr client_md5_;
  ::google::protobuf::internal::ArenaStringPtr client_silence_md5_;
  ::google::protobuf::internal::ArenaStringPtr res_md5_;
  ::proto::ResVersionConfig* res_version_config_;
  ::google::protobuf::uint32 client_data_version_;
  ::google::protobuf::uint32 client_silence_data_version_;
  ::google::protobuf::uint32 res_version_;
  bool is_res_need_relogin_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskInfo) */ {
 public:
  DailyTaskInfo();
  virtual ~DailyTaskInfo();

  DailyTaskInfo(const DailyTaskInfo& from);

  inline DailyTaskInfo& operator=(const DailyTaskInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskInfo(DailyTaskInfo&& from) noexcept
    : DailyTaskInfo() {
    *this = ::std::move(from);
  }

  inline DailyTaskInfo& operator=(DailyTaskInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskInfo& default_instance();

  static inline const DailyTaskInfo* internal_default_instance() {
    return reinterpret_cast<const DailyTaskInfo*>(
               &_DailyTaskInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(DailyTaskInfo* other);
  friend void swap(DailyTaskInfo& a, DailyTaskInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskInfo& from);
  void MergeFrom(const DailyTaskInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 daily_task_id = 1;
  void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 1;
  ::google::protobuf::uint32 daily_task_id() const;
  void set_daily_task_id(::google::protobuf::uint32 value);

  // uint32 reward_id = 2;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 2;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // uint32 progress = 3;
  void clear_progress();
  static const int kProgressFieldNumber = 3;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // uint32 finish_progress = 4;
  void clear_finish_progress();
  static const int kFinishProgressFieldNumber = 4;
  ::google::protobuf::uint32 finish_progress() const;
  void set_finish_progress(::google::protobuf::uint32 value);

  // bool is_finished = 5;
  void clear_is_finished();
  static const int kIsFinishedFieldNumber = 5;
  bool is_finished() const;
  void set_is_finished(bool value);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 daily_task_id_;
  ::google::protobuf::uint32 reward_id_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 finish_progress_;
  bool is_finished_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskDataNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskDataNotify) */ {
 public:
  DailyTaskDataNotify();
  virtual ~DailyTaskDataNotify();

  DailyTaskDataNotify(const DailyTaskDataNotify& from);

  inline DailyTaskDataNotify& operator=(const DailyTaskDataNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskDataNotify(DailyTaskDataNotify&& from) noexcept
    : DailyTaskDataNotify() {
    *this = ::std::move(from);
  }

  inline DailyTaskDataNotify& operator=(DailyTaskDataNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskDataNotify& default_instance();

  static inline const DailyTaskDataNotify* internal_default_instance() {
    return reinterpret_cast<const DailyTaskDataNotify*>(
               &_DailyTaskDataNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(DailyTaskDataNotify* other);
  friend void swap(DailyTaskDataNotify& a, DailyTaskDataNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskDataNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskDataNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskDataNotify& from);
  void MergeFrom(const DailyTaskDataNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskDataNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DailyTaskDataNotify_CmdId CmdId;
  static const CmdId NONE =
    DailyTaskDataNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DailyTaskDataNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DailyTaskDataNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DailyTaskDataNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DailyTaskDataNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DailyTaskDataNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DailyTaskDataNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DailyTaskDataNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DailyTaskDataNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DailyTaskDataNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DailyTaskDataNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 score_reward_id = 3;
  void clear_score_reward_id();
  static const int kScoreRewardIdFieldNumber = 3;
  ::google::protobuf::uint32 score_reward_id() const;
  void set_score_reward_id(::google::protobuf::uint32 value);

  // bool is_taken_score_reward = 4;
  void clear_is_taken_score_reward();
  static const int kIsTakenScoreRewardFieldNumber = 4;
  bool is_taken_score_reward() const;
  void set_is_taken_score_reward(bool value);

  // uint32 finished_num = 5;
  void clear_finished_num();
  static const int kFinishedNumFieldNumber = 5;
  ::google::protobuf::uint32 finished_num() const;
  void set_finished_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskDataNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 score_reward_id_;
  bool is_taken_score_reward_;
  ::google::protobuf::uint32 finished_num_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskProgressNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskProgressNotify) */ {
 public:
  DailyTaskProgressNotify();
  virtual ~DailyTaskProgressNotify();

  DailyTaskProgressNotify(const DailyTaskProgressNotify& from);

  inline DailyTaskProgressNotify& operator=(const DailyTaskProgressNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskProgressNotify(DailyTaskProgressNotify&& from) noexcept
    : DailyTaskProgressNotify() {
    *this = ::std::move(from);
  }

  inline DailyTaskProgressNotify& operator=(DailyTaskProgressNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskProgressNotify& default_instance();

  static inline const DailyTaskProgressNotify* internal_default_instance() {
    return reinterpret_cast<const DailyTaskProgressNotify*>(
               &_DailyTaskProgressNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(DailyTaskProgressNotify* other);
  friend void swap(DailyTaskProgressNotify& a, DailyTaskProgressNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskProgressNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskProgressNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskProgressNotify& from);
  void MergeFrom(const DailyTaskProgressNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskProgressNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DailyTaskProgressNotify_CmdId CmdId;
  static const CmdId NONE =
    DailyTaskProgressNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DailyTaskProgressNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DailyTaskProgressNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DailyTaskProgressNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DailyTaskProgressNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DailyTaskProgressNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DailyTaskProgressNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DailyTaskProgressNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DailyTaskProgressNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DailyTaskProgressNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DailyTaskProgressNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.DailyTaskInfo info = 1;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 1;
  const ::proto::DailyTaskInfo& info() const;
  ::proto::DailyTaskInfo* mutable_info();
  ::proto::DailyTaskInfo* release_info();
  void set_allocated_info(::proto::DailyTaskInfo* info);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskProgressNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::DailyTaskInfo* info_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DailyTaskScoreRewardNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DailyTaskScoreRewardNotify) */ {
 public:
  DailyTaskScoreRewardNotify();
  virtual ~DailyTaskScoreRewardNotify();

  DailyTaskScoreRewardNotify(const DailyTaskScoreRewardNotify& from);

  inline DailyTaskScoreRewardNotify& operator=(const DailyTaskScoreRewardNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DailyTaskScoreRewardNotify(DailyTaskScoreRewardNotify&& from) noexcept
    : DailyTaskScoreRewardNotify() {
    *this = ::std::move(from);
  }

  inline DailyTaskScoreRewardNotify& operator=(DailyTaskScoreRewardNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyTaskScoreRewardNotify& default_instance();

  static inline const DailyTaskScoreRewardNotify* internal_default_instance() {
    return reinterpret_cast<const DailyTaskScoreRewardNotify*>(
               &_DailyTaskScoreRewardNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(DailyTaskScoreRewardNotify* other);
  friend void swap(DailyTaskScoreRewardNotify& a, DailyTaskScoreRewardNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DailyTaskScoreRewardNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  DailyTaskScoreRewardNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DailyTaskScoreRewardNotify& from);
  void MergeFrom(const DailyTaskScoreRewardNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DailyTaskScoreRewardNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DailyTaskScoreRewardNotify_CmdId CmdId;
  static const CmdId NONE =
    DailyTaskScoreRewardNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    DailyTaskScoreRewardNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    DailyTaskScoreRewardNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    DailyTaskScoreRewardNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return DailyTaskScoreRewardNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    DailyTaskScoreRewardNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    DailyTaskScoreRewardNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    DailyTaskScoreRewardNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return DailyTaskScoreRewardNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return DailyTaskScoreRewardNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return DailyTaskScoreRewardNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 reward_id = 1;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 1;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DailyTaskScoreRewardNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reward_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WorldOwnerDailyTaskNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WorldOwnerDailyTaskNotify) */ {
 public:
  WorldOwnerDailyTaskNotify();
  virtual ~WorldOwnerDailyTaskNotify();

  WorldOwnerDailyTaskNotify(const WorldOwnerDailyTaskNotify& from);

  inline WorldOwnerDailyTaskNotify& operator=(const WorldOwnerDailyTaskNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldOwnerDailyTaskNotify(WorldOwnerDailyTaskNotify&& from) noexcept
    : WorldOwnerDailyTaskNotify() {
    *this = ::std::move(from);
  }

  inline WorldOwnerDailyTaskNotify& operator=(WorldOwnerDailyTaskNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldOwnerDailyTaskNotify& default_instance();

  static inline const WorldOwnerDailyTaskNotify* internal_default_instance() {
    return reinterpret_cast<const WorldOwnerDailyTaskNotify*>(
               &_WorldOwnerDailyTaskNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(WorldOwnerDailyTaskNotify* other);
  friend void swap(WorldOwnerDailyTaskNotify& a, WorldOwnerDailyTaskNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldOwnerDailyTaskNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  WorldOwnerDailyTaskNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WorldOwnerDailyTaskNotify& from);
  void MergeFrom(const WorldOwnerDailyTaskNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WorldOwnerDailyTaskNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef WorldOwnerDailyTaskNotify_CmdId CmdId;
  static const CmdId NONE =
    WorldOwnerDailyTaskNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    WorldOwnerDailyTaskNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    WorldOwnerDailyTaskNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    WorldOwnerDailyTaskNotify_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    WorldOwnerDailyTaskNotify_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return WorldOwnerDailyTaskNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    WorldOwnerDailyTaskNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    WorldOwnerDailyTaskNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    WorldOwnerDailyTaskNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return WorldOwnerDailyTaskNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return WorldOwnerDailyTaskNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return WorldOwnerDailyTaskNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.DailyTaskInfo task_list = 1;
  int task_list_size() const;
  void clear_task_list();
  static const int kTaskListFieldNumber = 1;
  const ::proto::DailyTaskInfo& task_list(int index) const;
  ::proto::DailyTaskInfo* mutable_task_list(int index);
  ::proto::DailyTaskInfo* add_task_list();
  ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >*
      mutable_task_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >&
      task_list() const;

  // @@protoc_insertion_point(class_scope:proto.WorldOwnerDailyTaskNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo > task_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRandTaskInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddRandTaskInfoNotify) */ {
 public:
  AddRandTaskInfoNotify();
  virtual ~AddRandTaskInfoNotify();

  AddRandTaskInfoNotify(const AddRandTaskInfoNotify& from);

  inline AddRandTaskInfoNotify& operator=(const AddRandTaskInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddRandTaskInfoNotify(AddRandTaskInfoNotify&& from) noexcept
    : AddRandTaskInfoNotify() {
    *this = ::std::move(from);
  }

  inline AddRandTaskInfoNotify& operator=(AddRandTaskInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRandTaskInfoNotify& default_instance();

  static inline const AddRandTaskInfoNotify* internal_default_instance() {
    return reinterpret_cast<const AddRandTaskInfoNotify*>(
               &_AddRandTaskInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(AddRandTaskInfoNotify* other);
  friend void swap(AddRandTaskInfoNotify& a, AddRandTaskInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddRandTaskInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRandTaskInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRandTaskInfoNotify& from);
  void MergeFrom(const AddRandTaskInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRandTaskInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef AddRandTaskInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    AddRandTaskInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    AddRandTaskInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    AddRandTaskInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    AddRandTaskInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return AddRandTaskInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    AddRandTaskInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    AddRandTaskInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    AddRandTaskInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return AddRandTaskInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return AddRandTaskInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return AddRandTaskInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::proto::Vector& pos() const;
  ::proto::Vector* mutable_pos();
  ::proto::Vector* release_pos();
  void set_allocated_pos(::proto::Vector* pos);

  // uint32 rand_task_id = 1;
  void clear_rand_task_id();
  static const int kRandTaskIdFieldNumber = 1;
  ::google::protobuf::uint32 rand_task_id() const;
  void set_rand_task_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddRandTaskInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Vector* pos_;
  ::google::protobuf::uint32 rand_task_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveRandTaskInfoNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveRandTaskInfoNotify) */ {
 public:
  RemoveRandTaskInfoNotify();
  virtual ~RemoveRandTaskInfoNotify();

  RemoveRandTaskInfoNotify(const RemoveRandTaskInfoNotify& from);

  inline RemoveRandTaskInfoNotify& operator=(const RemoveRandTaskInfoNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveRandTaskInfoNotify(RemoveRandTaskInfoNotify&& from) noexcept
    : RemoveRandTaskInfoNotify() {
    *this = ::std::move(from);
  }

  inline RemoveRandTaskInfoNotify& operator=(RemoveRandTaskInfoNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveRandTaskInfoNotify& default_instance();

  static inline const RemoveRandTaskInfoNotify* internal_default_instance() {
    return reinterpret_cast<const RemoveRandTaskInfoNotify*>(
               &_RemoveRandTaskInfoNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(RemoveRandTaskInfoNotify* other);
  friend void swap(RemoveRandTaskInfoNotify& a, RemoveRandTaskInfoNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveRandTaskInfoNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveRandTaskInfoNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveRandTaskInfoNotify& from);
  void MergeFrom(const RemoveRandTaskInfoNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveRandTaskInfoNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RemoveRandTaskInfoNotify_FinishReason FinishReason;
  static const FinishReason DEFAULT =
    RemoveRandTaskInfoNotify_FinishReason_DEFAULT;
  static const FinishReason CLEAR =
    RemoveRandTaskInfoNotify_FinishReason_CLEAR;
  static const FinishReason DISTANCE =
    RemoveRandTaskInfoNotify_FinishReason_DISTANCE;
  static const FinishReason FINISH =
    RemoveRandTaskInfoNotify_FinishReason_FINISH;
  static inline bool FinishReason_IsValid(int value) {
    return RemoveRandTaskInfoNotify_FinishReason_IsValid(value);
  }
  static const FinishReason FinishReason_MIN =
    RemoveRandTaskInfoNotify_FinishReason_FinishReason_MIN;
  static const FinishReason FinishReason_MAX =
    RemoveRandTaskInfoNotify_FinishReason_FinishReason_MAX;
  static const int FinishReason_ARRAYSIZE =
    RemoveRandTaskInfoNotify_FinishReason_FinishReason_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  FinishReason_descriptor() {
    return RemoveRandTaskInfoNotify_FinishReason_descriptor();
  }
  static inline const ::std::string& FinishReason_Name(FinishReason value) {
    return RemoveRandTaskInfoNotify_FinishReason_Name(value);
  }
  static inline bool FinishReason_Parse(const ::std::string& name,
      FinishReason* value) {
    return RemoveRandTaskInfoNotify_FinishReason_Parse(name, value);
  }

  typedef RemoveRandTaskInfoNotify_CmdId CmdId;
  static const CmdId NONE =
    RemoveRandTaskInfoNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    RemoveRandTaskInfoNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    RemoveRandTaskInfoNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    RemoveRandTaskInfoNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return RemoveRandTaskInfoNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    RemoveRandTaskInfoNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    RemoveRandTaskInfoNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    RemoveRandTaskInfoNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return RemoveRandTaskInfoNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return RemoveRandTaskInfoNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return RemoveRandTaskInfoNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 rand_task_id = 1;
  void clear_rand_task_id();
  static const int kRandTaskIdFieldNumber = 1;
  ::google::protobuf::uint32 rand_task_id() const;
  void set_rand_task_id(::google::protobuf::uint32 value);

  // bool is_succ = 2;
  void clear_is_succ();
  static const int kIsSuccFieldNumber = 2;
  bool is_succ() const;
  void set_is_succ(bool value);

  // .proto.RemoveRandTaskInfoNotify.FinishReason reason = 3;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  ::proto::RemoveRandTaskInfoNotify_FinishReason reason() const;
  void set_reason(::proto::RemoveRandTaskInfoNotify_FinishReason value);

  // @@protoc_insertion_point(class_scope:proto.RemoveRandTaskInfoNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rand_task_id_;
  bool is_succ_;
  int reason_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakePlayerLevelRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakePlayerLevelRewardReq) */ {
 public:
  TakePlayerLevelRewardReq();
  virtual ~TakePlayerLevelRewardReq();

  TakePlayerLevelRewardReq(const TakePlayerLevelRewardReq& from);

  inline TakePlayerLevelRewardReq& operator=(const TakePlayerLevelRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakePlayerLevelRewardReq(TakePlayerLevelRewardReq&& from) noexcept
    : TakePlayerLevelRewardReq() {
    *this = ::std::move(from);
  }

  inline TakePlayerLevelRewardReq& operator=(TakePlayerLevelRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakePlayerLevelRewardReq& default_instance();

  static inline const TakePlayerLevelRewardReq* internal_default_instance() {
    return reinterpret_cast<const TakePlayerLevelRewardReq*>(
               &_TakePlayerLevelRewardReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(TakePlayerLevelRewardReq* other);
  friend void swap(TakePlayerLevelRewardReq& a, TakePlayerLevelRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakePlayerLevelRewardReq* New() const PROTOBUF_FINAL { return New(NULL); }

  TakePlayerLevelRewardReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakePlayerLevelRewardReq& from);
  void MergeFrom(const TakePlayerLevelRewardReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakePlayerLevelRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakePlayerLevelRewardReq_CmdId CmdId;
  static const CmdId NONE =
    TakePlayerLevelRewardReq_CmdId_NONE;
  static const CmdId CMD_ID =
    TakePlayerLevelRewardReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakePlayerLevelRewardReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakePlayerLevelRewardReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    TakePlayerLevelRewardReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return TakePlayerLevelRewardReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakePlayerLevelRewardReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakePlayerLevelRewardReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakePlayerLevelRewardReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakePlayerLevelRewardReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakePlayerLevelRewardReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakePlayerLevelRewardReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakePlayerLevelRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 level_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakePlayerLevelRewardRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakePlayerLevelRewardRsp) */ {
 public:
  TakePlayerLevelRewardRsp();
  virtual ~TakePlayerLevelRewardRsp();

  TakePlayerLevelRewardRsp(const TakePlayerLevelRewardRsp& from);

  inline TakePlayerLevelRewardRsp& operator=(const TakePlayerLevelRewardRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakePlayerLevelRewardRsp(TakePlayerLevelRewardRsp&& from) noexcept
    : TakePlayerLevelRewardRsp() {
    *this = ::std::move(from);
  }

  inline TakePlayerLevelRewardRsp& operator=(TakePlayerLevelRewardRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakePlayerLevelRewardRsp& default_instance();

  static inline const TakePlayerLevelRewardRsp* internal_default_instance() {
    return reinterpret_cast<const TakePlayerLevelRewardRsp*>(
               &_TakePlayerLevelRewardRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(TakePlayerLevelRewardRsp* other);
  friend void swap(TakePlayerLevelRewardRsp& a, TakePlayerLevelRewardRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakePlayerLevelRewardRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakePlayerLevelRewardRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakePlayerLevelRewardRsp& from);
  void MergeFrom(const TakePlayerLevelRewardRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakePlayerLevelRewardRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef TakePlayerLevelRewardRsp_CmdId CmdId;
  static const CmdId NONE =
    TakePlayerLevelRewardRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    TakePlayerLevelRewardRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    TakePlayerLevelRewardRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    TakePlayerLevelRewardRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return TakePlayerLevelRewardRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    TakePlayerLevelRewardRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    TakePlayerLevelRewardRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    TakePlayerLevelRewardRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return TakePlayerLevelRewardRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return TakePlayerLevelRewardRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return TakePlayerLevelRewardRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 reward_id = 3;
  void clear_reward_id();
  static const int kRewardIdFieldNumber = 3;
  ::google::protobuf::uint32 reward_id() const;
  void set_reward_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakePlayerLevelRewardRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 reward_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLevelRewardUpdateNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLevelRewardUpdateNotify) */ {
 public:
  PlayerLevelRewardUpdateNotify();
  virtual ~PlayerLevelRewardUpdateNotify();

  PlayerLevelRewardUpdateNotify(const PlayerLevelRewardUpdateNotify& from);

  inline PlayerLevelRewardUpdateNotify& operator=(const PlayerLevelRewardUpdateNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLevelRewardUpdateNotify(PlayerLevelRewardUpdateNotify&& from) noexcept
    : PlayerLevelRewardUpdateNotify() {
    *this = ::std::move(from);
  }

  inline PlayerLevelRewardUpdateNotify& operator=(PlayerLevelRewardUpdateNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLevelRewardUpdateNotify& default_instance();

  static inline const PlayerLevelRewardUpdateNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerLevelRewardUpdateNotify*>(
               &_PlayerLevelRewardUpdateNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(PlayerLevelRewardUpdateNotify* other);
  friend void swap(PlayerLevelRewardUpdateNotify& a, PlayerLevelRewardUpdateNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLevelRewardUpdateNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLevelRewardUpdateNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLevelRewardUpdateNotify& from);
  void MergeFrom(const PlayerLevelRewardUpdateNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLevelRewardUpdateNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerLevelRewardUpdateNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerLevelRewardUpdateNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerLevelRewardUpdateNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerLevelRewardUpdateNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerLevelRewardUpdateNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerLevelRewardUpdateNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerLevelRewardUpdateNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerLevelRewardUpdateNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerLevelRewardUpdateNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerLevelRewardUpdateNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerLevelRewardUpdateNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerLevelRewardUpdateNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 level_list = 1;
  int level_list_size() const;
  void clear_level_list();
  static const int kLevelListFieldNumber = 1;
  ::google::protobuf::uint32 level_list(int index) const;
  void set_level_list(int index, ::google::protobuf::uint32 value);
  void add_level_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      level_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_level_list();

  // @@protoc_insertion_point(class_scope:proto.PlayerLevelRewardUpdateNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > level_list_;
  mutable int _level_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GivingRecord : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GivingRecord) */ {
 public:
  GivingRecord();
  virtual ~GivingRecord();

  GivingRecord(const GivingRecord& from);

  inline GivingRecord& operator=(const GivingRecord& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GivingRecord(GivingRecord&& from) noexcept
    : GivingRecord() {
    *this = ::std::move(from);
  }

  inline GivingRecord& operator=(GivingRecord&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GivingRecord& default_instance();

  static inline const GivingRecord* internal_default_instance() {
    return reinterpret_cast<const GivingRecord*>(
               &_GivingRecord_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(GivingRecord* other);
  friend void swap(GivingRecord& a, GivingRecord& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GivingRecord* New() const PROTOBUF_FINAL { return New(NULL); }

  GivingRecord* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GivingRecord& from);
  void MergeFrom(const GivingRecord& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GivingRecord* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 giving_id = 1;
  void clear_giving_id();
  static const int kGivingIdFieldNumber = 1;
  ::google::protobuf::uint32 giving_id() const;
  void set_giving_id(::google::protobuf::uint32 value);

  // bool is_finished = 2;
  void clear_is_finished();
  static const int kIsFinishedFieldNumber = 2;
  bool is_finished() const;
  void set_is_finished(bool value);

  // uint32 last_group_id = 3;
  void clear_last_group_id();
  static const int kLastGroupIdFieldNumber = 3;
  ::google::protobuf::uint32 last_group_id() const;
  void set_last_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GivingRecord)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 giving_id_;
  bool is_finished_;
  ::google::protobuf::uint32 last_group_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GivingRecordNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GivingRecordNotify) */ {
 public:
  GivingRecordNotify();
  virtual ~GivingRecordNotify();

  GivingRecordNotify(const GivingRecordNotify& from);

  inline GivingRecordNotify& operator=(const GivingRecordNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GivingRecordNotify(GivingRecordNotify&& from) noexcept
    : GivingRecordNotify() {
    *this = ::std::move(from);
  }

  inline GivingRecordNotify& operator=(GivingRecordNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GivingRecordNotify& default_instance();

  static inline const GivingRecordNotify* internal_default_instance() {
    return reinterpret_cast<const GivingRecordNotify*>(
               &_GivingRecordNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(GivingRecordNotify* other);
  friend void swap(GivingRecordNotify& a, GivingRecordNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GivingRecordNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GivingRecordNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GivingRecordNotify& from);
  void MergeFrom(const GivingRecordNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GivingRecordNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GivingRecordNotify_CmdId CmdId;
  static const CmdId NONE =
    GivingRecordNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GivingRecordNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GivingRecordNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GivingRecordNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GivingRecordNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GivingRecordNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GivingRecordNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GivingRecordNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GivingRecordNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GivingRecordNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GivingRecordNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.GivingRecord giving_record_list = 1;
  int giving_record_list_size() const;
  void clear_giving_record_list();
  static const int kGivingRecordListFieldNumber = 1;
  const ::proto::GivingRecord& giving_record_list(int index) const;
  ::proto::GivingRecord* mutable_giving_record_list(int index);
  ::proto::GivingRecord* add_giving_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >*
      mutable_giving_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >&
      giving_record_list() const;

  // @@protoc_insertion_point(class_scope:proto.GivingRecordNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord > giving_record_list_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GivingRecordChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GivingRecordChangeNotify) */ {
 public:
  GivingRecordChangeNotify();
  virtual ~GivingRecordChangeNotify();

  GivingRecordChangeNotify(const GivingRecordChangeNotify& from);

  inline GivingRecordChangeNotify& operator=(const GivingRecordChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GivingRecordChangeNotify(GivingRecordChangeNotify&& from) noexcept
    : GivingRecordChangeNotify() {
    *this = ::std::move(from);
  }

  inline GivingRecordChangeNotify& operator=(GivingRecordChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GivingRecordChangeNotify& default_instance();

  static inline const GivingRecordChangeNotify* internal_default_instance() {
    return reinterpret_cast<const GivingRecordChangeNotify*>(
               &_GivingRecordChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(GivingRecordChangeNotify* other);
  friend void swap(GivingRecordChangeNotify& a, GivingRecordChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GivingRecordChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  GivingRecordChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GivingRecordChangeNotify& from);
  void MergeFrom(const GivingRecordChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GivingRecordChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GivingRecordChangeNotify_CmdId CmdId;
  static const CmdId NONE =
    GivingRecordChangeNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    GivingRecordChangeNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    GivingRecordChangeNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    GivingRecordChangeNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return GivingRecordChangeNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    GivingRecordChangeNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    GivingRecordChangeNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    GivingRecordChangeNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return GivingRecordChangeNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return GivingRecordChangeNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return GivingRecordChangeNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .proto.GivingRecord giving_record = 1;
  bool has_giving_record() const;
  void clear_giving_record();
  static const int kGivingRecordFieldNumber = 1;
  const ::proto::GivingRecord& giving_record() const;
  ::proto::GivingRecord* mutable_giving_record();
  ::proto::GivingRecord* release_giving_record();
  void set_allocated_giving_record(::proto::GivingRecord* giving_record);

  // @@protoc_insertion_point(class_scope:proto.GivingRecordChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GivingRecord* giving_record_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ItemGivingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ItemGivingReq) */ {
 public:
  ItemGivingReq();
  virtual ~ItemGivingReq();

  ItemGivingReq(const ItemGivingReq& from);

  inline ItemGivingReq& operator=(const ItemGivingReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemGivingReq(ItemGivingReq&& from) noexcept
    : ItemGivingReq() {
    *this = ::std::move(from);
  }

  inline ItemGivingReq& operator=(ItemGivingReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemGivingReq& default_instance();

  static inline const ItemGivingReq* internal_default_instance() {
    return reinterpret_cast<const ItemGivingReq*>(
               &_ItemGivingReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(ItemGivingReq* other);
  friend void swap(ItemGivingReq& a, ItemGivingReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemGivingReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemGivingReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemGivingReq& from);
  void MergeFrom(const ItemGivingReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemGivingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  typedef ItemGivingReq_CmdId CmdId;
  static const CmdId NONE =
    ItemGivingReq_CmdId_NONE;
  static const CmdId CMD_ID =
    ItemGivingReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ItemGivingReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ItemGivingReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    ItemGivingReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return ItemGivingReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ItemGivingReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ItemGivingReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ItemGivingReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ItemGivingReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ItemGivingReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ItemGivingReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParam item_param_list = 2;
  int item_param_list_size() const;
  void clear_item_param_list();
  static const int kItemParamListFieldNumber = 2;
  const ::proto::ItemParam& item_param_list(int index) const;
  ::proto::ItemParam* mutable_item_param_list(int index);
  ::proto::ItemParam* add_item_param_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
      mutable_item_param_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
      item_param_list() const;

  // map<uint64, uint32> item_guid_count_map = 3;
  int item_guid_count_map_size() const;
  void clear_item_guid_count_map();
  static const int kItemGuidCountMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
      item_guid_count_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
      mutable_item_guid_count_map();

  // uint32 giving_id = 1;
  void clear_giving_id();
  static const int kGivingIdFieldNumber = 1;
  ::google::protobuf::uint32 giving_id() const;
  void set_giving_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ItemGivingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParam > item_param_list_;
  public:
  class ItemGivingReq_ItemGuidCountMapEntry : public ::google::protobuf::internal::MapEntry<ItemGivingReq_ItemGuidCountMapEntry, 
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ItemGivingReq_ItemGuidCountMapEntry, 
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    ItemGivingReq_ItemGuidCountMapEntry();
    ItemGivingReq_ItemGuidCountMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ItemGivingReq_ItemGuidCountMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ItemGivingReq_ItemGuidCountMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ItemGivingReq_ItemGuidCountMapEntry,
      ::google::protobuf::uint64, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > item_guid_count_map_;
  private:
  ::google::protobuf::uint32 giving_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemGivingRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ItemGivingRsp) */ {
 public:
  ItemGivingRsp();
  virtual ~ItemGivingRsp();

  ItemGivingRsp(const ItemGivingRsp& from);

  inline ItemGivingRsp& operator=(const ItemGivingRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemGivingRsp(ItemGivingRsp&& from) noexcept
    : ItemGivingRsp() {
    *this = ::std::move(from);
  }

  inline ItemGivingRsp& operator=(ItemGivingRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemGivingRsp& default_instance();

  static inline const ItemGivingRsp* internal_default_instance() {
    return reinterpret_cast<const ItemGivingRsp*>(
               &_ItemGivingRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(ItemGivingRsp* other);
  friend void swap(ItemGivingRsp& a, ItemGivingRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemGivingRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemGivingRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemGivingRsp& from);
  void MergeFrom(const ItemGivingRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemGivingRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ItemGivingRsp_CmdId CmdId;
  static const CmdId NONE =
    ItemGivingRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    ItemGivingRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ItemGivingRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ItemGivingRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ItemGivingRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ItemGivingRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ItemGivingRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ItemGivingRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ItemGivingRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ItemGivingRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ItemGivingRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 giving_id = 2;
  void clear_giving_id();
  static const int kGivingIdFieldNumber = 2;
  ::google::protobuf::uint32 giving_id() const;
  void set_giving_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ItemGivingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 giving_id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCookArgsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCookArgsReq) */ {
 public:
  PlayerCookArgsReq();
  virtual ~PlayerCookArgsReq();

  PlayerCookArgsReq(const PlayerCookArgsReq& from);

  inline PlayerCookArgsReq& operator=(const PlayerCookArgsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCookArgsReq(PlayerCookArgsReq&& from) noexcept
    : PlayerCookArgsReq() {
    *this = ::std::move(from);
  }

  inline PlayerCookArgsReq& operator=(PlayerCookArgsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCookArgsReq& default_instance();

  static inline const PlayerCookArgsReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCookArgsReq*>(
               &_PlayerCookArgsReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(PlayerCookArgsReq* other);
  friend void swap(PlayerCookArgsReq& a, PlayerCookArgsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCookArgsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCookArgsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCookArgsReq& from);
  void MergeFrom(const PlayerCookArgsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCookArgsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerCookArgsReq_CmdId CmdId;
  static const CmdId NONE =
    PlayerCookArgsReq_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerCookArgsReq_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerCookArgsReq_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerCookArgsReq_CmdId_ENET_IS_RELIABLE;
  static const CmdId IS_ALLOW_CLIENT =
    PlayerCookArgsReq_CmdId_IS_ALLOW_CLIENT;
  static inline bool CmdId_IsValid(int value) {
    return PlayerCookArgsReq_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerCookArgsReq_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerCookArgsReq_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerCookArgsReq_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerCookArgsReq_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerCookArgsReq_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerCookArgsReq_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 recipe_id = 1;
  void clear_recipe_id();
  static const int kRecipeIdFieldNumber = 1;
  ::google::protobuf::uint32 recipe_id() const;
  void set_recipe_id(::google::protobuf::uint32 value);

  // uint32 assist_avatar = 2;
  void clear_assist_avatar();
  static const int kAssistAvatarFieldNumber = 2;
  ::google::protobuf::uint32 assist_avatar() const;
  void set_assist_avatar(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCookArgsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 recipe_id_;
  ::google::protobuf::uint32 assist_avatar_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCookArgsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCookArgsRsp) */ {
 public:
  PlayerCookArgsRsp();
  virtual ~PlayerCookArgsRsp();

  PlayerCookArgsRsp(const PlayerCookArgsRsp& from);

  inline PlayerCookArgsRsp& operator=(const PlayerCookArgsRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCookArgsRsp(PlayerCookArgsRsp&& from) noexcept
    : PlayerCookArgsRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCookArgsRsp& operator=(PlayerCookArgsRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCookArgsRsp& default_instance();

  static inline const PlayerCookArgsRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCookArgsRsp*>(
               &_PlayerCookArgsRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(PlayerCookArgsRsp* other);
  friend void swap(PlayerCookArgsRsp& a, PlayerCookArgsRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCookArgsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCookArgsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCookArgsRsp& from);
  void MergeFrom(const PlayerCookArgsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCookArgsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerCookArgsRsp_CmdId CmdId;
  static const CmdId NONE =
    PlayerCookArgsRsp_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerCookArgsRsp_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerCookArgsRsp_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerCookArgsRsp_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerCookArgsRsp_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerCookArgsRsp_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerCookArgsRsp_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerCookArgsRsp_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerCookArgsRsp_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerCookArgsRsp_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerCookArgsRsp_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::uint32 retcode() const;
  void set_retcode(::google::protobuf::uint32 value);

  // float qte_range_ratio = 2;
  void clear_qte_range_ratio();
  static const int kQteRangeRatioFieldNumber = 2;
  float qte_range_ratio() const;
  void set_qte_range_ratio(float value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCookArgsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 retcode_;
  float qte_range_ratio_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLuaShellNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLuaShellNotify) */ {
 public:
  PlayerLuaShellNotify();
  virtual ~PlayerLuaShellNotify();

  PlayerLuaShellNotify(const PlayerLuaShellNotify& from);

  inline PlayerLuaShellNotify& operator=(const PlayerLuaShellNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLuaShellNotify(PlayerLuaShellNotify&& from) noexcept
    : PlayerLuaShellNotify() {
    *this = ::std::move(from);
  }

  inline PlayerLuaShellNotify& operator=(PlayerLuaShellNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLuaShellNotify& default_instance();

  static inline const PlayerLuaShellNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerLuaShellNotify*>(
               &_PlayerLuaShellNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(PlayerLuaShellNotify* other);
  friend void swap(PlayerLuaShellNotify& a, PlayerLuaShellNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLuaShellNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLuaShellNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLuaShellNotify& from);
  void MergeFrom(const PlayerLuaShellNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLuaShellNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef PlayerLuaShellNotify_CmdId CmdId;
  static const CmdId NONE =
    PlayerLuaShellNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    PlayerLuaShellNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    PlayerLuaShellNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    PlayerLuaShellNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return PlayerLuaShellNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    PlayerLuaShellNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    PlayerLuaShellNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    PlayerLuaShellNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return PlayerLuaShellNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return PlayerLuaShellNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return PlayerLuaShellNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // bytes lua_shell = 2;
  void clear_lua_shell();
  static const int kLuaShellFieldNumber = 2;
  const ::std::string& lua_shell() const;
  void set_lua_shell(const ::std::string& value);
  #if LANG_CXX11
  void set_lua_shell(::std::string&& value);
  #endif
  void set_lua_shell(const char* value);
  void set_lua_shell(const void* value, size_t size);
  ::std::string* mutable_lua_shell();
  ::std::string* release_lua_shell();
  void set_allocated_lua_shell(::std::string* lua_shell);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLuaShellNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lua_shell_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerDisconnectClientNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerDisconnectClientNotify) */ {
 public:
  ServerDisconnectClientNotify();
  virtual ~ServerDisconnectClientNotify();

  ServerDisconnectClientNotify(const ServerDisconnectClientNotify& from);

  inline ServerDisconnectClientNotify& operator=(const ServerDisconnectClientNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerDisconnectClientNotify(ServerDisconnectClientNotify&& from) noexcept
    : ServerDisconnectClientNotify() {
    *this = ::std::move(from);
  }

  inline ServerDisconnectClientNotify& operator=(ServerDisconnectClientNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerDisconnectClientNotify& default_instance();

  static inline const ServerDisconnectClientNotify* internal_default_instance() {
    return reinterpret_cast<const ServerDisconnectClientNotify*>(
               &_ServerDisconnectClientNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(ServerDisconnectClientNotify* other);
  friend void swap(ServerDisconnectClientNotify& a, ServerDisconnectClientNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerDisconnectClientNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerDisconnectClientNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerDisconnectClientNotify& from);
  void MergeFrom(const ServerDisconnectClientNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerDisconnectClientNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ServerDisconnectClientNotify_CmdId CmdId;
  static const CmdId NONE =
    ServerDisconnectClientNotify_CmdId_NONE;
  static const CmdId CMD_ID =
    ServerDisconnectClientNotify_CmdId_CMD_ID;
  static const CmdId ENET_CHANNEL_ID =
    ServerDisconnectClientNotify_CmdId_ENET_CHANNEL_ID;
  static const CmdId ENET_IS_RELIABLE =
    ServerDisconnectClientNotify_CmdId_ENET_IS_RELIABLE;
  static inline bool CmdId_IsValid(int value) {
    return ServerDisconnectClientNotify_CmdId_IsValid(value);
  }
  static const CmdId CmdId_MIN =
    ServerDisconnectClientNotify_CmdId_CmdId_MIN;
  static const CmdId CmdId_MAX =
    ServerDisconnectClientNotify_CmdId_CmdId_MAX;
  static const int CmdId_ARRAYSIZE =
    ServerDisconnectClientNotify_CmdId_CmdId_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  CmdId_descriptor() {
    return ServerDisconnectClientNotify_CmdId_descriptor();
  }
  static inline const ::std::string& CmdId_Name(CmdId value) {
    return ServerDisconnectClientNotify_CmdId_Name(value);
  }
  static inline bool CmdId_Parse(const ::std::string& name,
      CmdId* value) {
    return ServerDisconnectClientNotify_CmdId_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // uint32 data = 1;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::google::protobuf::uint32 data() const;
  void set_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerDisconnectClientNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 data_;
  mutable int _cached_size_;
  friend struct protobuf_cmd_2fcmd_5fplayer_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetPlayerTokenReq

// uint32 account_type = 1;
inline void GetPlayerTokenReq::clear_account_type() {
  account_type_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::account_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_type)
  return account_type_;
}
inline void GetPlayerTokenReq::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_type)
}

// string account_uid = 2;
inline void GetPlayerTokenReq::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_uid)
  return account_uid_.GetNoArena();
}
inline void GetPlayerTokenReq::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_uid)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_uid)
}
#endif
inline void GetPlayerTokenReq::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_uid)
}
inline void GetPlayerTokenReq::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_uid)
}
inline ::std::string* GetPlayerTokenReq::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_uid)
}

// string account_token = 3;
inline void GetPlayerTokenReq::clear_account_token() {
  account_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::account_token() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_token)
  return account_token_.GetNoArena();
}
inline void GetPlayerTokenReq::set_account_token(const ::std::string& value) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_token)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_account_token(::std::string&& value) {
  
  account_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_token)
}
#endif
inline void GetPlayerTokenReq::set_account_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_token)
}
inline void GetPlayerTokenReq::set_account_token(const char* value, size_t size) {
  
  account_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_token)
}
inline ::std::string* GetPlayerTokenReq::mutable_account_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_token)
  return account_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_account_token() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_token)
  
  return account_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_account_token(::std::string* account_token) {
  if (account_token != NULL) {
    
  } else {
    
  }
  account_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_token);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_token)
}

// string account_ext = 4;
inline void GetPlayerTokenReq::clear_account_ext() {
  account_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenReq::account_ext() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.account_ext)
  return account_ext_.GetNoArena();
}
inline void GetPlayerTokenReq::set_account_ext(const ::std::string& value) {
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.account_ext)
}
#if LANG_CXX11
inline void GetPlayerTokenReq::set_account_ext(::std::string&& value) {
  
  account_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenReq.account_ext)
}
#endif
inline void GetPlayerTokenReq::set_account_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenReq.account_ext)
}
inline void GetPlayerTokenReq::set_account_ext(const char* value, size_t size) {
  
  account_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenReq.account_ext)
}
inline ::std::string* GetPlayerTokenReq::mutable_account_ext() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenReq.account_ext)
  return account_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenReq::release_account_ext() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenReq.account_ext)
  
  return account_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenReq::set_allocated_account_ext(::std::string* account_ext) {
  if (account_ext != NULL) {
    
  } else {
    
  }
  account_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_ext);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenReq.account_ext)
}

// uint32 uid = 5;
inline void GetPlayerTokenReq::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.uid)
  return uid_;
}
inline void GetPlayerTokenReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.uid)
}

// bool is_guest = 6;
inline void GetPlayerTokenReq::clear_is_guest() {
  is_guest_ = false;
}
inline bool GetPlayerTokenReq::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.is_guest)
  return is_guest_;
}
inline void GetPlayerTokenReq::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.is_guest)
}

// uint32 platform_type = 7;
inline void GetPlayerTokenReq::clear_platform_type() {
  platform_type_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.platform_type)
  return platform_type_;
}
inline void GetPlayerTokenReq::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.platform_type)
}

// uint32 cloud_client_ip = 8;
inline void GetPlayerTokenReq::clear_cloud_client_ip() {
  cloud_client_ip_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenReq::cloud_client_ip() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenReq.cloud_client_ip)
  return cloud_client_ip_;
}
inline void GetPlayerTokenReq::set_cloud_client_ip(::google::protobuf::uint32 value) {
  
  cloud_client_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenReq.cloud_client_ip)
}

// -------------------------------------------------------------------

// GetPlayerTokenRsp

// int32 retcode = 1;
inline void GetPlayerTokenRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetPlayerTokenRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.retcode)
  return retcode_;
}
inline void GetPlayerTokenRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.retcode)
}

// string msg = 2;
inline void GetPlayerTokenRsp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::msg() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.msg)
  return msg_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.msg)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.msg)
}
#endif
inline void GetPlayerTokenRsp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.msg)
}
inline void GetPlayerTokenRsp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.msg)
}
inline ::std::string* GetPlayerTokenRsp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.msg)
}

// uint32 uid = 3;
inline void GetPlayerTokenRsp::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.uid)
  return uid_;
}
inline void GetPlayerTokenRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.uid)
}

// string token = 4;
inline void GetPlayerTokenRsp::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::token() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.token)
  return token_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.token)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.token)
}
#endif
inline void GetPlayerTokenRsp::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.token)
}
inline void GetPlayerTokenRsp::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.token)
}
inline ::std::string* GetPlayerTokenRsp::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_token() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.token)
}

// uint32 black_uid_end_time = 5;
inline void GetPlayerTokenRsp::clear_black_uid_end_time() {
  black_uid_end_time_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::black_uid_end_time() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.black_uid_end_time)
  return black_uid_end_time_;
}
inline void GetPlayerTokenRsp::set_black_uid_end_time(::google::protobuf::uint32 value) {
  
  black_uid_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.black_uid_end_time)
}

// uint32 account_type = 6;
inline void GetPlayerTokenRsp::clear_account_type() {
  account_type_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::account_type() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.account_type)
  return account_type_;
}
inline void GetPlayerTokenRsp::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.account_type)
}

// string account_uid = 7;
inline void GetPlayerTokenRsp::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.account_uid)
  return account_uid_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.account_uid)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.account_uid)
}
#endif
inline void GetPlayerTokenRsp::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.account_uid)
}
inline void GetPlayerTokenRsp::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.account_uid)
}
inline ::std::string* GetPlayerTokenRsp::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.account_uid)
}

// bool is_proficient_player = 8;
inline void GetPlayerTokenRsp::clear_is_proficient_player() {
  is_proficient_player_ = false;
}
inline bool GetPlayerTokenRsp::is_proficient_player() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.is_proficient_player)
  return is_proficient_player_;
}
inline void GetPlayerTokenRsp::set_is_proficient_player(bool value) {
  
  is_proficient_player_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.is_proficient_player)
}

// string secret_key = 9;
inline void GetPlayerTokenRsp::clear_secret_key() {
  secret_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPlayerTokenRsp::secret_key() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.secret_key)
  return secret_key_.GetNoArena();
}
inline void GetPlayerTokenRsp::set_secret_key(const ::std::string& value) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.secret_key)
}
#if LANG_CXX11
inline void GetPlayerTokenRsp::set_secret_key(::std::string&& value) {
  
  secret_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetPlayerTokenRsp.secret_key)
}
#endif
inline void GetPlayerTokenRsp::set_secret_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetPlayerTokenRsp.secret_key)
}
inline void GetPlayerTokenRsp::set_secret_key(const char* value, size_t size) {
  
  secret_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetPlayerTokenRsp.secret_key)
}
inline ::std::string* GetPlayerTokenRsp::mutable_secret_key() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetPlayerTokenRsp.secret_key)
  return secret_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPlayerTokenRsp::release_secret_key() {
  // @@protoc_insertion_point(field_release:proto.GetPlayerTokenRsp.secret_key)
  
  return secret_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPlayerTokenRsp::set_allocated_secret_key(::std::string* secret_key) {
  if (secret_key != NULL) {
    
  } else {
    
  }
  secret_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret_key);
  // @@protoc_insertion_point(field_set_allocated:proto.GetPlayerTokenRsp.secret_key)
}

// uint32 gm_uid = 10;
inline void GetPlayerTokenRsp::clear_gm_uid() {
  gm_uid_ = 0u;
}
inline ::google::protobuf::uint32 GetPlayerTokenRsp::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.gm_uid)
  return gm_uid_;
}
inline void GetPlayerTokenRsp::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.gm_uid)
}

// uint64 secret_key_seed = 11;
inline void GetPlayerTokenRsp::clear_secret_key_seed() {
  secret_key_seed_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetPlayerTokenRsp::secret_key_seed() const {
  // @@protoc_insertion_point(field_get:proto.GetPlayerTokenRsp.secret_key_seed)
  return secret_key_seed_;
}
inline void GetPlayerTokenRsp::set_secret_key_seed(::google::protobuf::uint64 value) {
  
  secret_key_seed_ = value;
  // @@protoc_insertion_point(field_set:proto.GetPlayerTokenRsp.secret_key_seed)
}

// -------------------------------------------------------------------

// PlayerLoginReq

// string token = 1;
inline void PlayerLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::token() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.token)
  return token_.GetNoArena();
}
inline void PlayerLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.token)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.token)
}
#endif
inline void PlayerLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.token)
}
inline void PlayerLoginReq::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.token)
}
inline ::std::string* PlayerLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.token)
}

// string client_version = 2;
inline void PlayerLoginReq::clear_client_version() {
  client_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::client_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.client_version)
  return client_version_.GetNoArena();
}
inline void PlayerLoginReq::set_client_version(const ::std::string& value) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.client_version)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_client_version(::std::string&& value) {
  
  client_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.client_version)
}
#endif
inline void PlayerLoginReq::set_client_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.client_version)
}
inline void PlayerLoginReq::set_client_version(const char* value, size_t size) {
  
  client_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.client_version)
}
inline ::std::string* PlayerLoginReq::mutable_client_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.client_version)
  return client_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_client_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.client_version)
  
  return client_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_client_version(::std::string* client_version) {
  if (client_version != NULL) {
    
  } else {
    
  }
  client_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.client_version)
}

// string system_version = 3;
inline void PlayerLoginReq::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::system_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.system_version)
  return system_version_.GetNoArena();
}
inline void PlayerLoginReq::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.system_version)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.system_version)
}
#endif
inline void PlayerLoginReq::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.system_version)
}
inline void PlayerLoginReq::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.system_version)
}
inline ::std::string* PlayerLoginReq::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_system_version() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.system_version)
}

// string device_name = 4;
inline void PlayerLoginReq::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::device_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_name)
  return device_name_.GetNoArena();
}
inline void PlayerLoginReq::set_device_name(const ::std::string& value) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_name)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_device_name(::std::string&& value) {
  
  device_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_name)
}
#endif
inline void PlayerLoginReq::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_name)
}
inline void PlayerLoginReq::set_device_name(const char* value, size_t size) {
  
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_name)
}
inline ::std::string* PlayerLoginReq::mutable_device_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_device_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_name)
  
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    
  } else {
    
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_name)
}

// string device_uuid = 5;
inline void PlayerLoginReq::clear_device_uuid() {
  device_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::device_uuid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_uuid)
  return device_uuid_.GetNoArena();
}
inline void PlayerLoginReq::set_device_uuid(const ::std::string& value) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_uuid)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_device_uuid(::std::string&& value) {
  
  device_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_uuid)
}
#endif
inline void PlayerLoginReq::set_device_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_uuid)
}
inline void PlayerLoginReq::set_device_uuid(const char* value, size_t size) {
  
  device_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_uuid)
}
inline ::std::string* PlayerLoginReq::mutable_device_uuid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_uuid)
  return device_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_device_uuid() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_uuid)
  
  return device_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_device_uuid(::std::string* device_uuid) {
  if (device_uuid != NULL) {
    
  } else {
    
  }
  device_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_uuid);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_uuid)
}

// uint32 target_uid = 6;
inline void PlayerLoginReq::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.target_uid)
  return target_uid_;
}
inline void PlayerLoginReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.target_uid)
}

// uint64 login_rand = 7;
inline void PlayerLoginReq::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerLoginReq::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.login_rand)
  return login_rand_;
}
inline void PlayerLoginReq::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.login_rand)
}

// bool is_editor = 8;
inline void PlayerLoginReq::clear_is_editor() {
  is_editor_ = false;
}
inline bool PlayerLoginReq::is_editor() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_editor)
  return is_editor_;
}
inline void PlayerLoginReq::set_is_editor(bool value) {
  
  is_editor_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_editor)
}

// uint32 language_type = 9;
inline void PlayerLoginReq::clear_language_type() {
  language_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::language_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.language_type)
  return language_type_;
}
inline void PlayerLoginReq::set_language_type(::google::protobuf::uint32 value) {
  
  language_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.language_type)
}

// uint32 account_type = 10;
inline void PlayerLoginReq::clear_account_type() {
  account_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::account_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.account_type)
  return account_type_;
}
inline void PlayerLoginReq::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.account_type)
}

// string account_uid = 11;
inline void PlayerLoginReq::clear_account_uid() {
  account_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::account_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.account_uid)
  return account_uid_.GetNoArena();
}
inline void PlayerLoginReq::set_account_uid(const ::std::string& value) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.account_uid)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_account_uid(::std::string&& value) {
  
  account_uid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.account_uid)
}
#endif
inline void PlayerLoginReq::set_account_uid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.account_uid)
}
inline void PlayerLoginReq::set_account_uid(const char* value, size_t size) {
  
  account_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.account_uid)
}
inline ::std::string* PlayerLoginReq::mutable_account_uid() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.account_uid)
  return account_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_account_uid() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.account_uid)
  
  return account_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_account_uid(::std::string* account_uid) {
  if (account_uid != NULL) {
    
  } else {
    
  }
  account_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_uid);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.account_uid)
}

// string platform = 12;
inline void PlayerLoginReq::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::platform() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.platform)
  return platform_.GetNoArena();
}
inline void PlayerLoginReq::set_platform(const ::std::string& value) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.platform)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_platform(::std::string&& value) {
  
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.platform)
}
#endif
inline void PlayerLoginReq::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.platform)
}
inline void PlayerLoginReq::set_platform(const char* value, size_t size) {
  
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.platform)
}
inline ::std::string* PlayerLoginReq::mutable_platform() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_platform() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.platform)
  
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    
  } else {
    
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.platform)
}

// string device_info = 13;
inline void PlayerLoginReq::clear_device_info() {
  device_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginReq::device_info() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.device_info)
  return device_info_.GetNoArena();
}
inline void PlayerLoginReq::set_device_info(const ::std::string& value) {
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.device_info)
}
#if LANG_CXX11
inline void PlayerLoginReq::set_device_info(::std::string&& value) {
  
  device_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginReq.device_info)
}
#endif
inline void PlayerLoginReq::set_device_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginReq.device_info)
}
inline void PlayerLoginReq::set_device_info(const char* value, size_t size) {
  
  device_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginReq.device_info)
}
inline ::std::string* PlayerLoginReq::mutable_device_info() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginReq.device_info)
  return device_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginReq::release_device_info() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginReq.device_info)
  
  return device_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginReq::set_allocated_device_info(::std::string* device_info) {
  if (device_info != NULL) {
    
  } else {
    
  }
  device_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_info);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginReq.device_info)
}

// uint32 platform_type = 14;
inline void PlayerLoginReq::clear_platform_type() {
  platform_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.platform_type)
  return platform_type_;
}
inline void PlayerLoginReq::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.platform_type)
}

// bool is_guest = 15;
inline void PlayerLoginReq::clear_is_guest() {
  is_guest_ = false;
}
inline bool PlayerLoginReq::is_guest() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.is_guest)
  return is_guest_;
}
inline void PlayerLoginReq::set_is_guest(bool value) {
  
  is_guest_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.is_guest)
}

// uint32 cloud_client_ip = 16;
inline void PlayerLoginReq::clear_cloud_client_ip() {
  cloud_client_ip_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::cloud_client_ip() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.cloud_client_ip)
  return cloud_client_ip_;
}
inline void PlayerLoginReq::set_cloud_client_ip(::google::protobuf::uint32 value) {
  
  cloud_client_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.cloud_client_ip)
}

// uint32 gm_uid = 17;
inline void PlayerLoginReq::clear_gm_uid() {
  gm_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginReq::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginReq.gm_uid)
  return gm_uid_;
}
inline void PlayerLoginReq::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginReq.gm_uid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerLoginRsp

// int32 retcode = 1;
inline void PlayerLoginRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerLoginRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.retcode)
  return retcode_;
}
inline void PlayerLoginRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.retcode)
}

// bytes player_data = 2;
inline void PlayerLoginRsp::clear_player_data() {
  player_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::player_data() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.player_data)
  return player_data_.GetNoArena();
}
inline void PlayerLoginRsp::set_player_data(const ::std::string& value) {
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.player_data)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_player_data(::std::string&& value) {
  
  player_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.player_data)
}
#endif
inline void PlayerLoginRsp::set_player_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.player_data)
}
inline void PlayerLoginRsp::set_player_data(const void* value, size_t size) {
  
  player_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.player_data)
}
inline ::std::string* PlayerLoginRsp::mutable_player_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.player_data)
  return player_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_player_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.player_data)
  
  return player_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_player_data(::std::string* player_data) {
  if (player_data != NULL) {
    
  } else {
    
  }
  player_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_data);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.player_data)
}

// bool is_new_player = 3;
inline void PlayerLoginRsp::clear_is_new_player() {
  is_new_player_ = false;
}
inline bool PlayerLoginRsp::is_new_player() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_new_player)
  return is_new_player_;
}
inline void PlayerLoginRsp::set_is_new_player(bool value) {
  
  is_new_player_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_new_player)
}

// uint32 target_uid = 4;
inline void PlayerLoginRsp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.target_uid)
  return target_uid_;
}
inline void PlayerLoginRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.target_uid)
}

// uint64 login_rand = 5;
inline void PlayerLoginRsp::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerLoginRsp::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.login_rand)
  return login_rand_;
}
inline void PlayerLoginRsp::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.login_rand)
}

// bool is_use_ability_hash = 6;
inline void PlayerLoginRsp::clear_is_use_ability_hash() {
  is_use_ability_hash_ = false;
}
inline bool PlayerLoginRsp::is_use_ability_hash() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_use_ability_hash)
  return is_use_ability_hash_;
}
inline void PlayerLoginRsp::set_is_use_ability_hash(bool value) {
  
  is_use_ability_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_use_ability_hash)
}

// int32 ability_hash_code = 7;
inline void PlayerLoginRsp::clear_ability_hash_code() {
  ability_hash_code_ = 0;
}
inline ::google::protobuf::int32 PlayerLoginRsp::ability_hash_code() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.ability_hash_code)
  return ability_hash_code_;
}
inline void PlayerLoginRsp::set_ability_hash_code(::google::protobuf::int32 value) {
  
  ability_hash_code_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.ability_hash_code)
}

// map<string, int32> ability_hash_map = 8;
inline int PlayerLoginRsp::ability_hash_map_size() const {
  return ability_hash_map_.size();
}
inline void PlayerLoginRsp::clear_ability_hash_map() {
  ability_hash_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
PlayerLoginRsp::ability_hash_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerLoginRsp.ability_hash_map)
  return ability_hash_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
PlayerLoginRsp::mutable_ability_hash_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerLoginRsp.ability_hash_map)
  return ability_hash_map_.MutableMap();
}

// uint32 client_data_version = 9;
inline void PlayerLoginRsp::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_data_version)
  return client_data_version_;
}
inline void PlayerLoginRsp::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_data_version)
}

// uint32 res_version = 10;
inline void PlayerLoginRsp::clear_res_version() {
  res_version_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::res_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.res_version)
  return res_version_;
}
inline void PlayerLoginRsp::set_res_version(::google::protobuf::uint32 value) {
  
  res_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.res_version)
}

// bool is_relogin = 11;
inline void PlayerLoginRsp::clear_is_relogin() {
  is_relogin_ = false;
}
inline bool PlayerLoginRsp::is_relogin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_relogin)
  return is_relogin_;
}
inline void PlayerLoginRsp::set_is_relogin(bool value) {
  
  is_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_relogin)
}

// uint32 client_silence_data_version = 13;
inline void PlayerLoginRsp::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_data_version)
  return client_silence_data_version_;
}
inline void PlayerLoginRsp::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_data_version)
}

// string game_biz = 14;
inline void PlayerLoginRsp::clear_game_biz() {
  game_biz_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::game_biz() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.game_biz)
  return game_biz_.GetNoArena();
}
inline void PlayerLoginRsp::set_game_biz(const ::std::string& value) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.game_biz)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_game_biz(::std::string&& value) {
  
  game_biz_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.game_biz)
}
#endif
inline void PlayerLoginRsp::set_game_biz(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.game_biz)
}
inline void PlayerLoginRsp::set_game_biz(const char* value, size_t size) {
  
  game_biz_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.game_biz)
}
inline ::std::string* PlayerLoginRsp::mutable_game_biz() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.game_biz)
  return game_biz_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_game_biz() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.game_biz)
  
  return game_biz_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_game_biz(::std::string* game_biz) {
  if (game_biz != NULL) {
    
  } else {
    
  }
  game_biz_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_biz);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.game_biz)
}

// uint32 player_data_version = 15;
inline void PlayerLoginRsp::clear_player_data_version() {
  player_data_version_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginRsp::player_data_version() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.player_data_version)
  return player_data_version_;
}
inline void PlayerLoginRsp::set_player_data_version(::google::protobuf::uint32 value) {
  
  player_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.player_data_version)
}

// string client_md5 = 16;
inline void PlayerLoginRsp::clear_client_md5() {
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::client_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_md5)
  return client_md5_.GetNoArena();
}
inline void PlayerLoginRsp::set_client_md5(const ::std::string& value) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_md5)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_client_md5(::std::string&& value) {
  
  client_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_md5)
}
#endif
inline void PlayerLoginRsp::set_client_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_md5)
}
inline void PlayerLoginRsp::set_client_md5(const char* value, size_t size) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_md5)
}
inline ::std::string* PlayerLoginRsp::mutable_client_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_md5)
  return client_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_client_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_md5)
  
  return client_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_client_md5(::std::string* client_md5) {
  if (client_md5 != NULL) {
    
  } else {
    
  }
  client_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_md5)
}

// string client_silence_md5 = 17;
inline void PlayerLoginRsp::clear_client_silence_md5() {
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::client_silence_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.client_silence_md5)
  return client_silence_md5_.GetNoArena();
}
inline void PlayerLoginRsp::set_client_silence_md5(const ::std::string& value) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.client_silence_md5)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_client_silence_md5(::std::string&& value) {
  
  client_silence_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.client_silence_md5)
}
#endif
inline void PlayerLoginRsp::set_client_silence_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.client_silence_md5)
}
inline void PlayerLoginRsp::set_client_silence_md5(const char* value, size_t size) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.client_silence_md5)
}
inline ::std::string* PlayerLoginRsp::mutable_client_silence_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.client_silence_md5)
  return client_silence_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_client_silence_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.client_silence_md5)
  
  return client_silence_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_client_silence_md5(::std::string* client_silence_md5) {
  if (client_silence_md5 != NULL) {
    
  } else {
    
  }
  client_silence_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.client_silence_md5)
}

// string res_md5 = 18;
inline void PlayerLoginRsp::clear_res_md5() {
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLoginRsp::res_md5() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.res_md5)
  return res_md5_.GetNoArena();
}
inline void PlayerLoginRsp::set_res_md5(const ::std::string& value) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.res_md5)
}
#if LANG_CXX11
inline void PlayerLoginRsp::set_res_md5(::std::string&& value) {
  
  res_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLoginRsp.res_md5)
}
#endif
inline void PlayerLoginRsp::set_res_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLoginRsp.res_md5)
}
inline void PlayerLoginRsp::set_res_md5(const char* value, size_t size) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLoginRsp.res_md5)
}
inline ::std::string* PlayerLoginRsp::mutable_res_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.res_md5)
  return res_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLoginRsp::release_res_md5() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.res_md5)
  
  return res_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLoginRsp::set_allocated_res_md5(::std::string* res_md5) {
  if (res_md5 != NULL) {
    
  } else {
    
  }
  res_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.res_md5)
}

// bool is_res_need_relogin = 19;
inline void PlayerLoginRsp::clear_is_res_need_relogin() {
  is_res_need_relogin_ = false;
}
inline bool PlayerLoginRsp::is_res_need_relogin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.is_res_need_relogin)
  return is_res_need_relogin_;
}
inline void PlayerLoginRsp::set_is_res_need_relogin(bool value) {
  
  is_res_need_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginRsp.is_res_need_relogin)
}

// .proto.ResVersionConfig res_version_config = 20;
inline bool PlayerLoginRsp::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
inline void PlayerLoginRsp::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& PlayerLoginRsp::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.PlayerLoginRsp.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* PlayerLoginRsp::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerLoginRsp.res_version_config)
  return res_version_config_;
}
inline ::proto::ResVersionConfig* PlayerLoginRsp::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.PlayerLoginRsp.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
inline void PlayerLoginRsp::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLoginRsp.res_version_config)
}

// map<uint32, .proto.BlockInfo> block_info_map = 21;
inline int PlayerLoginRsp::block_info_map_size() const {
  return block_info_map_.size();
}
inline void PlayerLoginRsp::clear_block_info_map() {
  block_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >&
PlayerLoginRsp::block_info_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerLoginRsp.block_info_map)
  return block_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BlockInfo >*
PlayerLoginRsp::mutable_block_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerLoginRsp.block_info_map)
  return block_info_map_.MutableMap();
}

// -------------------------------------------------------------------

// PlayerLogoutReq

// .proto.PlayerLogoutReq.Reason reason = 1;
inline void PlayerLogoutReq::clear_reason() {
  reason_ = 0;
}
inline ::proto::PlayerLogoutReq_Reason PlayerLogoutReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutReq.reason)
  return static_cast< ::proto::PlayerLogoutReq_Reason >(reason_);
}
inline void PlayerLogoutReq::set_reason(::proto::PlayerLogoutReq_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutReq.reason)
}

// -------------------------------------------------------------------

// PlayerLogoutRsp

// int32 retcode = 1;
inline void PlayerLogoutRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerLogoutRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutRsp.retcode)
  return retcode_;
}
inline void PlayerLogoutRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerLogoutNotify

// int32 retcode = 1;
inline void PlayerLogoutNotify::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerLogoutNotify::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLogoutNotify.retcode)
  return retcode_;
}
inline void PlayerLogoutNotify::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLogoutNotify.retcode)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerDataNotify

// string nick_name = 1;
inline void PlayerDataNotify::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerDataNotify::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.nick_name)
  return nick_name_.GetNoArena();
}
inline void PlayerDataNotify::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.nick_name)
}
#if LANG_CXX11
inline void PlayerDataNotify::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerDataNotify.nick_name)
}
#endif
inline void PlayerDataNotify::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerDataNotify.nick_name)
}
inline void PlayerDataNotify::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerDataNotify.nick_name)
}
inline ::std::string* PlayerDataNotify::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerDataNotify.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerDataNotify::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.PlayerDataNotify.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerDataNotify::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerDataNotify.nick_name)
}

// uint64 server_time = 2;
inline void PlayerDataNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerDataNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.server_time)
  return server_time_;
}
inline void PlayerDataNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.server_time)
}

// bool is_first_login_today = 3;
inline void PlayerDataNotify::clear_is_first_login_today() {
  is_first_login_today_ = false;
}
inline bool PlayerDataNotify::is_first_login_today() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.is_first_login_today)
  return is_first_login_today_;
}
inline void PlayerDataNotify::set_is_first_login_today(bool value) {
  
  is_first_login_today_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.is_first_login_today)
}

// uint32 region_id = 4;
inline void PlayerDataNotify::clear_region_id() {
  region_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerDataNotify::region_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerDataNotify.region_id)
  return region_id_;
}
inline void PlayerDataNotify::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerDataNotify.region_id)
}

// map<uint32, .proto.PropValue> prop_map = 6;
inline int PlayerDataNotify::prop_map_size() const {
  return prop_map_.size();
}
inline void PlayerDataNotify::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
PlayerDataNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerDataNotify.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
PlayerDataNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerDataNotify.prop_map)
  return prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// ChangeGameTimeReq

// uint32 game_time = 1;
inline void ChangeGameTimeReq::clear_game_time() {
  game_time_ = 0u;
}
inline ::google::protobuf::uint32 ChangeGameTimeReq::game_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.game_time)
  return game_time_;
}
inline void ChangeGameTimeReq::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.game_time)
}

// bool is_force_set = 2;
inline void ChangeGameTimeReq::clear_is_force_set() {
  is_force_set_ = false;
}
inline bool ChangeGameTimeReq::is_force_set() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeReq.is_force_set)
  return is_force_set_;
}
inline void ChangeGameTimeReq::set_is_force_set(bool value) {
  
  is_force_set_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeReq.is_force_set)
}

// -------------------------------------------------------------------

// ChangeGameTimeRsp

// int32 retcode = 1;
inline void ChangeGameTimeRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ChangeGameTimeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.retcode)
  return retcode_;
}
inline void ChangeGameTimeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.retcode)
}

// uint32 cur_game_time = 2;
inline void ChangeGameTimeRsp::clear_cur_game_time() {
  cur_game_time_ = 0u;
}
inline ::google::protobuf::uint32 ChangeGameTimeRsp::cur_game_time() const {
  // @@protoc_insertion_point(field_get:proto.ChangeGameTimeRsp.cur_game_time)
  return cur_game_time_;
}
inline void ChangeGameTimeRsp::set_cur_game_time(::google::protobuf::uint32 value) {
  
  cur_game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeGameTimeRsp.cur_game_time)
}

// -------------------------------------------------------------------

// PlayerGameTimeNotify

// uint32 game_time = 1;
inline void PlayerGameTimeNotify::clear_game_time() {
  game_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGameTimeNotify::game_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.game_time)
  return game_time_;
}
inline void PlayerGameTimeNotify::set_game_time(::google::protobuf::uint32 value) {
  
  game_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.game_time)
}

// uint32 uid = 2;
inline void PlayerGameTimeNotify::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGameTimeNotify::uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGameTimeNotify.uid)
  return uid_;
}
inline void PlayerGameTimeNotify::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGameTimeNotify.uid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerPropNotify

// map<uint32, .proto.PropValue> prop_map = 1;
inline int PlayerPropNotify::prop_map_size() const {
  return prop_map_.size();
}
inline void PlayerPropNotify::clear_prop_map() {
  prop_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >&
PlayerPropNotify::prop_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerPropNotify.prop_map)
  return prop_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::PropValue >*
PlayerPropNotify::mutable_prop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerPropNotify.prop_map)
  return prop_map_.MutableMap();
}

// -------------------------------------------------------------------

// ClientTriggerEventNotify

// .proto.EventTriggerType event_type = 1;
inline void ClientTriggerEventNotify::clear_event_type() {
  event_type_ = 0;
}
inline ::proto::EventTriggerType ClientTriggerEventNotify::event_type() const {
  // @@protoc_insertion_point(field_get:proto.ClientTriggerEventNotify.event_type)
  return static_cast< ::proto::EventTriggerType >(event_type_);
}
inline void ClientTriggerEventNotify::set_event_type(::proto::EventTriggerType value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTriggerEventNotify.event_type)
}

// uint32 force_id = 2;
inline void ClientTriggerEventNotify::clear_force_id() {
  force_id_ = 0u;
}
inline ::google::protobuf::uint32 ClientTriggerEventNotify::force_id() const {
  // @@protoc_insertion_point(field_get:proto.ClientTriggerEventNotify.force_id)
  return force_id_;
}
inline void ClientTriggerEventNotify::set_force_id(::google::protobuf::uint32 value) {
  
  force_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ClientTriggerEventNotify.force_id)
}

// -------------------------------------------------------------------

// SetPlayerPropReq

// repeated .proto.PropValue prop_list = 1;
inline int SetPlayerPropReq::prop_list_size() const {
  return prop_list_.size();
}
inline void SetPlayerPropReq::clear_prop_list() {
  prop_list_.Clear();
}
inline const ::proto::PropValue& SetPlayerPropReq::prop_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Get(index);
}
inline ::proto::PropValue* SetPlayerPropReq::mutable_prop_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Mutable(index);
}
inline ::proto::PropValue* SetPlayerPropReq::add_prop_list() {
  // @@protoc_insertion_point(field_add:proto.SetPlayerPropReq.prop_list)
  return prop_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PropValue >*
SetPlayerPropReq::mutable_prop_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SetPlayerPropReq.prop_list)
  return &prop_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PropValue >&
SetPlayerPropReq::prop_list() const {
  // @@protoc_insertion_point(field_list:proto.SetPlayerPropReq.prop_list)
  return prop_list_;
}

// -------------------------------------------------------------------

// SetPlayerPropRsp

// int32 retcode = 1;
inline void SetPlayerPropRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerPropRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerPropRsp.retcode)
  return retcode_;
}
inline void SetPlayerPropRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerPropRsp.retcode)
}

// -------------------------------------------------------------------

// SetPlayerBornDataReq

// uint32 avatar_id = 1;
inline void SetPlayerBornDataReq::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SetPlayerBornDataReq::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataReq.avatar_id)
  return avatar_id_;
}
inline void SetPlayerBornDataReq::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataReq.avatar_id)
}

// string nick_name = 2;
inline void SetPlayerBornDataReq::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerBornDataReq::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataReq.nick_name)
  return nick_name_.GetNoArena();
}
inline void SetPlayerBornDataReq::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataReq.nick_name)
}
#if LANG_CXX11
inline void SetPlayerBornDataReq::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerBornDataReq.nick_name)
}
#endif
inline void SetPlayerBornDataReq::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerBornDataReq.nick_name)
}
inline void SetPlayerBornDataReq::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerBornDataReq.nick_name)
}
inline ::std::string* SetPlayerBornDataReq::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerBornDataReq.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerBornDataReq::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerBornDataReq.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerBornDataReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerBornDataReq.nick_name)
}

// -------------------------------------------------------------------

// SetPlayerBornDataRsp

// int32 retcode = 1;
inline void SetPlayerBornDataRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerBornDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerBornDataRsp.retcode)
  return retcode_;
}
inline void SetPlayerBornDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerBornDataRsp.retcode)
}

// -------------------------------------------------------------------

// DoSetPlayerBornDataNotify

// -------------------------------------------------------------------

// PlayerPropChangeNotify

// uint32 prop_type = 1;
inline void PlayerPropChangeNotify::clear_prop_type() {
  prop_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerPropChangeNotify::prop_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeNotify.prop_type)
  return prop_type_;
}
inline void PlayerPropChangeNotify::set_prop_type(::google::protobuf::uint32 value) {
  
  prop_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeNotify.prop_type)
}

// uint32 prop_delta = 2;
inline void PlayerPropChangeNotify::clear_prop_delta() {
  prop_delta_ = 0u;
}
inline ::google::protobuf::uint32 PlayerPropChangeNotify::prop_delta() const {
  // @@protoc_insertion_point(field_get:proto.PlayerPropChangeNotify.prop_delta)
  return prop_delta_;
}
inline void PlayerPropChangeNotify::set_prop_delta(::google::protobuf::uint32 value) {
  
  prop_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerPropChangeNotify.prop_delta)
}

// -------------------------------------------------------------------

// SetPlayerNameReq

// string nick_name = 1;
inline void SetPlayerNameReq::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerNameReq::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameReq.nick_name)
  return nick_name_.GetNoArena();
}
inline void SetPlayerNameReq::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameReq.nick_name)
}
#if LANG_CXX11
inline void SetPlayerNameReq::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNameReq.nick_name)
}
#endif
inline void SetPlayerNameReq::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNameReq.nick_name)
}
inline void SetPlayerNameReq::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNameReq.nick_name)
}
inline ::std::string* SetPlayerNameReq::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNameReq.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerNameReq::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNameReq.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerNameReq::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNameReq.nick_name)
}

// -------------------------------------------------------------------

// SetPlayerNameRsp

// int32 retcode = 1;
inline void SetPlayerNameRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetPlayerNameRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameRsp.retcode)
  return retcode_;
}
inline void SetPlayerNameRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameRsp.retcode)
}

// string nick_name = 2;
inline void SetPlayerNameRsp::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerNameRsp::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNameRsp.nick_name)
  return nick_name_.GetNoArena();
}
inline void SetPlayerNameRsp::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNameRsp.nick_name)
}
#if LANG_CXX11
inline void SetPlayerNameRsp::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNameRsp.nick_name)
}
#endif
inline void SetPlayerNameRsp::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNameRsp.nick_name)
}
inline void SetPlayerNameRsp::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNameRsp.nick_name)
}
inline ::std::string* SetPlayerNameRsp::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNameRsp.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerNameRsp::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNameRsp.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerNameRsp::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNameRsp.nick_name)
}

// -------------------------------------------------------------------

// SetOpenStateReq

// uint32 key = 1;
inline void SetOpenStateReq::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 SetOpenStateReq::key() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateReq.key)
  return key_;
}
inline void SetOpenStateReq::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateReq.key)
}

// uint32 value = 2;
inline void SetOpenStateReq::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 SetOpenStateReq::value() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateReq.value)
  return value_;
}
inline void SetOpenStateReq::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateReq.value)
}

// -------------------------------------------------------------------

// SetOpenStateRsp

// int32 retcode = 1;
inline void SetOpenStateRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SetOpenStateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.retcode)
  return retcode_;
}
inline void SetOpenStateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.retcode)
}

// uint32 key = 2;
inline void SetOpenStateRsp::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 SetOpenStateRsp::key() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.key)
  return key_;
}
inline void SetOpenStateRsp::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.key)
}

// uint32 value = 3;
inline void SetOpenStateRsp::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 SetOpenStateRsp::value() const {
  // @@protoc_insertion_point(field_get:proto.SetOpenStateRsp.value)
  return value_;
}
inline void SetOpenStateRsp::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetOpenStateRsp.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpenStateUpdateNotify

// map<uint32, uint32> open_state_map = 1;
inline int OpenStateUpdateNotify::open_state_map_size() const {
  return open_state_map_.size();
}
inline void OpenStateUpdateNotify::clear_open_state_map() {
  open_state_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OpenStateUpdateNotify::open_state_map() const {
  // @@protoc_insertion_point(field_map:proto.OpenStateUpdateNotify.open_state_map)
  return open_state_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OpenStateUpdateNotify::mutable_open_state_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OpenStateUpdateNotify.open_state_map)
  return open_state_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OpenStateChangeNotify

// map<uint32, uint32> open_state_map = 1;
inline int OpenStateChangeNotify::open_state_map_size() const {
  return open_state_map_.size();
}
inline void OpenStateChangeNotify::clear_open_state_map() {
  open_state_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OpenStateChangeNotify::open_state_map() const {
  // @@protoc_insertion_point(field_map:proto.OpenStateChangeNotify.open_state_map)
  return open_state_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OpenStateChangeNotify::mutable_open_state_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OpenStateChangeNotify.open_state_map)
  return open_state_map_.MutableMap();
}

// -------------------------------------------------------------------

// PlayerCookReq

// uint32 recipe_id = 1;
inline void PlayerCookReq::clear_recipe_id() {
  recipe_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookReq::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.recipe_id)
  return recipe_id_;
}
inline void PlayerCookReq::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.recipe_id)
}

// uint32 qte_quality = 2;
inline void PlayerCookReq::clear_qte_quality() {
  qte_quality_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookReq::qte_quality() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.qte_quality)
  return qte_quality_;
}
inline void PlayerCookReq::set_qte_quality(::google::protobuf::uint32 value) {
  
  qte_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.qte_quality)
}

// uint32 assist_avatar = 3;
inline void PlayerCookReq::clear_assist_avatar() {
  assist_avatar_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookReq::assist_avatar() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookReq.assist_avatar)
  return assist_avatar_;
}
inline void PlayerCookReq::set_assist_avatar(::google::protobuf::uint32 value) {
  
  assist_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookReq.assist_avatar)
}

// -------------------------------------------------------------------

// PlayerCookRsp

// uint32 retcode = 1;
inline void PlayerCookRsp::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.retcode)
  return retcode_;
}
inline void PlayerCookRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.retcode)
}

// .proto.CookRecipeData recipe_data = 2;
inline bool PlayerCookRsp::has_recipe_data() const {
  return this != internal_default_instance() && recipe_data_ != NULL;
}
inline void PlayerCookRsp::clear_recipe_data() {
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) delete recipe_data_;
  recipe_data_ = NULL;
}
inline const ::proto::CookRecipeData& PlayerCookRsp::recipe_data() const {
  const ::proto::CookRecipeData* p = recipe_data_;
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.recipe_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CookRecipeData*>(
      &::proto::_CookRecipeData_default_instance_);
}
inline ::proto::CookRecipeData* PlayerCookRsp::mutable_recipe_data() {
  
  if (recipe_data_ == NULL) {
    recipe_data_ = new ::proto::CookRecipeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.recipe_data)
  return recipe_data_;
}
inline ::proto::CookRecipeData* PlayerCookRsp::release_recipe_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerCookRsp.recipe_data)
  
  ::proto::CookRecipeData* temp = recipe_data_;
  recipe_data_ = NULL;
  return temp;
}
inline void PlayerCookRsp::set_allocated_recipe_data(::proto::CookRecipeData* recipe_data) {
  delete recipe_data_;
  recipe_data_ = recipe_data;
  if (recipe_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCookRsp.recipe_data)
}

// .proto.ItemParam item = 3;
inline bool PlayerCookRsp::has_item() const {
  return this != internal_default_instance() && item_ != NULL;
}
inline void PlayerCookRsp::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) delete item_;
  item_ = NULL;
}
inline const ::proto::ItemParam& PlayerCookRsp::item() const {
  const ::proto::ItemParam* p = item_;
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.item)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ItemParam*>(
      &::proto::_ItemParam_default_instance_);
}
inline ::proto::ItemParam* PlayerCookRsp::mutable_item() {
  
  if (item_ == NULL) {
    item_ = new ::proto::ItemParam;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCookRsp.item)
  return item_;
}
inline ::proto::ItemParam* PlayerCookRsp::release_item() {
  // @@protoc_insertion_point(field_release:proto.PlayerCookRsp.item)
  
  ::proto::ItemParam* temp = item_;
  item_ = NULL;
  return temp;
}
inline void PlayerCookRsp::set_allocated_item(::proto::ItemParam* item) {
  delete item_;
  item_ = item;
  if (item) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCookRsp.item)
}

// uint32 qte_quality = 4;
inline void PlayerCookRsp::clear_qte_quality() {
  qte_quality_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookRsp::qte_quality() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookRsp.qte_quality)
  return qte_quality_;
}
inline void PlayerCookRsp::set_qte_quality(::google::protobuf::uint32 value) {
  
  qte_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookRsp.qte_quality)
}

// -------------------------------------------------------------------

// PlayerRandomCookReq

// repeated .proto.ItemParam material_list = 1;
inline int PlayerRandomCookReq::material_list_size() const {
  return material_list_.size();
}
inline void PlayerRandomCookReq::clear_material_list() {
  material_list_.Clear();
}
inline const ::proto::ItemParam& PlayerRandomCookReq::material_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerRandomCookReq.material_list)
  return material_list_.Get(index);
}
inline ::proto::ItemParam* PlayerRandomCookReq::mutable_material_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerRandomCookReq.material_list)
  return material_list_.Mutable(index);
}
inline ::proto::ItemParam* PlayerRandomCookReq::add_material_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerRandomCookReq.material_list)
  return material_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
PlayerRandomCookReq::mutable_material_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerRandomCookReq.material_list)
  return &material_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
PlayerRandomCookReq::material_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerRandomCookReq.material_list)
  return material_list_;
}

// -------------------------------------------------------------------

// PlayerRandomCookRsp

// uint32 retcode = 1;
inline void PlayerRandomCookRsp::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 PlayerRandomCookRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerRandomCookRsp.retcode)
  return retcode_;
}
inline void PlayerRandomCookRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerRandomCookRsp.retcode)
}

// -------------------------------------------------------------------

// CookRecipeData

// uint32 recipe_id = 1;
inline void CookRecipeData::clear_recipe_id() {
  recipe_id_ = 0u;
}
inline ::google::protobuf::uint32 CookRecipeData::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.CookRecipeData.recipe_id)
  return recipe_id_;
}
inline void CookRecipeData::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CookRecipeData.recipe_id)
}

// uint32 proficiency = 2;
inline void CookRecipeData::clear_proficiency() {
  proficiency_ = 0u;
}
inline ::google::protobuf::uint32 CookRecipeData::proficiency() const {
  // @@protoc_insertion_point(field_get:proto.CookRecipeData.proficiency)
  return proficiency_;
}
inline void CookRecipeData::set_proficiency(::google::protobuf::uint32 value) {
  
  proficiency_ = value;
  // @@protoc_insertion_point(field_set:proto.CookRecipeData.proficiency)
}

// -------------------------------------------------------------------

// CookDataNotify

// uint32 grade = 1;
inline void CookDataNotify::clear_grade() {
  grade_ = 0u;
}
inline ::google::protobuf::uint32 CookDataNotify::grade() const {
  // @@protoc_insertion_point(field_get:proto.CookDataNotify.grade)
  return grade_;
}
inline void CookDataNotify::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.CookDataNotify.grade)
}

// repeated .proto.CookRecipeData recipe_data_list = 2;
inline int CookDataNotify::recipe_data_list_size() const {
  return recipe_data_list_.size();
}
inline void CookDataNotify::clear_recipe_data_list() {
  recipe_data_list_.Clear();
}
inline const ::proto::CookRecipeData& CookDataNotify::recipe_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Get(index);
}
inline ::proto::CookRecipeData* CookDataNotify::mutable_recipe_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Mutable(index);
}
inline ::proto::CookRecipeData* CookDataNotify::add_recipe_data_list() {
  // @@protoc_insertion_point(field_add:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >*
CookDataNotify::mutable_recipe_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CookDataNotify.recipe_data_list)
  return &recipe_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CookRecipeData >&
CookDataNotify::recipe_data_list() const {
  // @@protoc_insertion_point(field_list:proto.CookDataNotify.recipe_data_list)
  return recipe_data_list_;
}

// -------------------------------------------------------------------

// CookRecipeDataNotify

// .proto.CookRecipeData recipe_data = 1;
inline bool CookRecipeDataNotify::has_recipe_data() const {
  return this != internal_default_instance() && recipe_data_ != NULL;
}
inline void CookRecipeDataNotify::clear_recipe_data() {
  if (GetArenaNoVirtual() == NULL && recipe_data_ != NULL) delete recipe_data_;
  recipe_data_ = NULL;
}
inline const ::proto::CookRecipeData& CookRecipeDataNotify::recipe_data() const {
  const ::proto::CookRecipeData* p = recipe_data_;
  // @@protoc_insertion_point(field_get:proto.CookRecipeDataNotify.recipe_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CookRecipeData*>(
      &::proto::_CookRecipeData_default_instance_);
}
inline ::proto::CookRecipeData* CookRecipeDataNotify::mutable_recipe_data() {
  
  if (recipe_data_ == NULL) {
    recipe_data_ = new ::proto::CookRecipeData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CookRecipeDataNotify.recipe_data)
  return recipe_data_;
}
inline ::proto::CookRecipeData* CookRecipeDataNotify::release_recipe_data() {
  // @@protoc_insertion_point(field_release:proto.CookRecipeDataNotify.recipe_data)
  
  ::proto::CookRecipeData* temp = recipe_data_;
  recipe_data_ = NULL;
  return temp;
}
inline void CookRecipeDataNotify::set_allocated_recipe_data(::proto::CookRecipeData* recipe_data) {
  delete recipe_data_;
  recipe_data_ = recipe_data;
  if (recipe_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CookRecipeDataNotify.recipe_data)
}

// -------------------------------------------------------------------

// CookGradeDataNotify

// uint32 grade = 1;
inline void CookGradeDataNotify::clear_grade() {
  grade_ = 0u;
}
inline ::google::protobuf::uint32 CookGradeDataNotify::grade() const {
  // @@protoc_insertion_point(field_get:proto.CookGradeDataNotify.grade)
  return grade_;
}
inline void CookGradeDataNotify::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:proto.CookGradeDataNotify.grade)
}

// -------------------------------------------------------------------

// PlayerCompoundMaterialReq

// uint32 compound_id = 1;
inline void PlayerCompoundMaterialReq::clear_compound_id() {
  compound_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCompoundMaterialReq::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialReq.compound_id)
  return compound_id_;
}
inline void PlayerCompoundMaterialReq::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialReq.compound_id)
}

// uint32 count = 2;
inline void PlayerCompoundMaterialReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCompoundMaterialReq::count() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialReq.count)
  return count_;
}
inline void PlayerCompoundMaterialReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialReq.count)
}

// -------------------------------------------------------------------

// CompoundQueueData

// uint32 compound_id = 1;
inline void CompoundQueueData::clear_compound_id() {
  compound_id_ = 0u;
}
inline ::google::protobuf::uint32 CompoundQueueData::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.compound_id)
  return compound_id_;
}
inline void CompoundQueueData::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.compound_id)
}

// uint32 output_count = 2;
inline void CompoundQueueData::clear_output_count() {
  output_count_ = 0u;
}
inline ::google::protobuf::uint32 CompoundQueueData::output_count() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.output_count)
  return output_count_;
}
inline void CompoundQueueData::set_output_count(::google::protobuf::uint32 value) {
  
  output_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.output_count)
}

// uint32 wait_count = 3;
inline void CompoundQueueData::clear_wait_count() {
  wait_count_ = 0u;
}
inline ::google::protobuf::uint32 CompoundQueueData::wait_count() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.wait_count)
  return wait_count_;
}
inline void CompoundQueueData::set_wait_count(::google::protobuf::uint32 value) {
  
  wait_count_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.wait_count)
}

// uint32 output_time = 4;
inline void CompoundQueueData::clear_output_time() {
  output_time_ = 0u;
}
inline ::google::protobuf::uint32 CompoundQueueData::output_time() const {
  // @@protoc_insertion_point(field_get:proto.CompoundQueueData.output_time)
  return output_time_;
}
inline void CompoundQueueData::set_output_time(::google::protobuf::uint32 value) {
  
  output_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CompoundQueueData.output_time)
}

// -------------------------------------------------------------------

// PlayerCompoundMaterialRsp

// uint32 retcode = 1;
inline void PlayerCompoundMaterialRsp::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCompoundMaterialRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialRsp.retcode)
  return retcode_;
}
inline void PlayerCompoundMaterialRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCompoundMaterialRsp.retcode)
}

// .proto.CompoundQueueData compound_que_data = 2;
inline bool PlayerCompoundMaterialRsp::has_compound_que_data() const {
  return this != internal_default_instance() && compound_que_data_ != NULL;
}
inline void PlayerCompoundMaterialRsp::clear_compound_que_data() {
  if (GetArenaNoVirtual() == NULL && compound_que_data_ != NULL) delete compound_que_data_;
  compound_que_data_ = NULL;
}
inline const ::proto::CompoundQueueData& PlayerCompoundMaterialRsp::compound_que_data() const {
  const ::proto::CompoundQueueData* p = compound_que_data_;
  // @@protoc_insertion_point(field_get:proto.PlayerCompoundMaterialRsp.compound_que_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CompoundQueueData*>(
      &::proto::_CompoundQueueData_default_instance_);
}
inline ::proto::CompoundQueueData* PlayerCompoundMaterialRsp::mutable_compound_que_data() {
  
  if (compound_que_data_ == NULL) {
    compound_que_data_ = new ::proto::CompoundQueueData;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerCompoundMaterialRsp.compound_que_data)
  return compound_que_data_;
}
inline ::proto::CompoundQueueData* PlayerCompoundMaterialRsp::release_compound_que_data() {
  // @@protoc_insertion_point(field_release:proto.PlayerCompoundMaterialRsp.compound_que_data)
  
  ::proto::CompoundQueueData* temp = compound_que_data_;
  compound_que_data_ = NULL;
  return temp;
}
inline void PlayerCompoundMaterialRsp::set_allocated_compound_que_data(::proto::CompoundQueueData* compound_que_data) {
  delete compound_que_data_;
  compound_que_data_ = compound_que_data;
  if (compound_que_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerCompoundMaterialRsp.compound_que_data)
}

// -------------------------------------------------------------------

// TakeCompoundOutputReq

// uint32 compound_id = 1;
inline void TakeCompoundOutputReq::clear_compound_id() {
  compound_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeCompoundOutputReq::compound_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputReq.compound_id)
  return compound_id_;
}
inline void TakeCompoundOutputReq::set_compound_id(::google::protobuf::uint32 value) {
  
  compound_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputReq.compound_id)
}

// -------------------------------------------------------------------

// TakeCompoundOutputRsp

// uint32 retcode = 1;
inline void TakeCompoundOutputRsp::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 TakeCompoundOutputRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputRsp.retcode)
  return retcode_;
}
inline void TakeCompoundOutputRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeCompoundOutputRsp.retcode)
}

// repeated .proto.ItemParam item_list = 2;
inline int TakeCompoundOutputRsp::item_list_size() const {
  return item_list_.size();
}
inline void TakeCompoundOutputRsp::clear_item_list() {
  item_list_.Clear();
}
inline const ::proto::ItemParam& TakeCompoundOutputRsp::item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Get(index);
}
inline ::proto::ItemParam* TakeCompoundOutputRsp::mutable_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Mutable(index);
}
inline ::proto::ItemParam* TakeCompoundOutputRsp::add_item_list() {
  // @@protoc_insertion_point(field_add:proto.TakeCompoundOutputRsp.item_list)
  return item_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
TakeCompoundOutputRsp::mutable_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.TakeCompoundOutputRsp.item_list)
  return &item_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
TakeCompoundOutputRsp::item_list() const {
  // @@protoc_insertion_point(field_list:proto.TakeCompoundOutputRsp.item_list)
  return item_list_;
}

// -------------------------------------------------------------------

// CompoundDataNotify

// repeated uint32 unlock_compound_list = 1;
inline int CompoundDataNotify::unlock_compound_list_size() const {
  return unlock_compound_list_.size();
}
inline void CompoundDataNotify::clear_unlock_compound_list() {
  unlock_compound_list_.Clear();
}
inline ::google::protobuf::uint32 CompoundDataNotify::unlock_compound_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CompoundDataNotify.unlock_compound_list)
  return unlock_compound_list_.Get(index);
}
inline void CompoundDataNotify::set_unlock_compound_list(int index, ::google::protobuf::uint32 value) {
  unlock_compound_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CompoundDataNotify.unlock_compound_list)
}
inline void CompoundDataNotify::add_unlock_compound_list(::google::protobuf::uint32 value) {
  unlock_compound_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CompoundDataNotify.unlock_compound_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CompoundDataNotify::unlock_compound_list() const {
  // @@protoc_insertion_point(field_list:proto.CompoundDataNotify.unlock_compound_list)
  return unlock_compound_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CompoundDataNotify::mutable_unlock_compound_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CompoundDataNotify.unlock_compound_list)
  return &unlock_compound_list_;
}

// repeated .proto.CompoundQueueData compound_que_data_list = 2;
inline int CompoundDataNotify::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
inline void CompoundDataNotify::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
inline const ::proto::CompoundQueueData& CompoundDataNotify::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
inline ::proto::CompoundQueueData* CompoundDataNotify::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
inline ::proto::CompoundQueueData* CompoundDataNotify::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
CompoundDataNotify::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CompoundDataNotify.compound_que_data_list)
  return &compound_que_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
CompoundDataNotify::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.CompoundDataNotify.compound_que_data_list)
  return compound_que_data_list_;
}

// -------------------------------------------------------------------

// GetCompoundDataReq

// -------------------------------------------------------------------

// GetCompoundDataRsp

// uint32 retcode = 1;
inline void GetCompoundDataRsp::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 GetCompoundDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.retcode)
  return retcode_;
}
inline void GetCompoundDataRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetCompoundDataRsp.retcode)
}

// repeated uint32 unlock_compound_list = 2;
inline int GetCompoundDataRsp::unlock_compound_list_size() const {
  return unlock_compound_list_.size();
}
inline void GetCompoundDataRsp::clear_unlock_compound_list() {
  unlock_compound_list_.Clear();
}
inline ::google::protobuf::uint32 GetCompoundDataRsp::unlock_compound_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.unlock_compound_list)
  return unlock_compound_list_.Get(index);
}
inline void GetCompoundDataRsp::set_unlock_compound_list(int index, ::google::protobuf::uint32 value) {
  unlock_compound_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetCompoundDataRsp.unlock_compound_list)
}
inline void GetCompoundDataRsp::add_unlock_compound_list(::google::protobuf::uint32 value) {
  unlock_compound_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetCompoundDataRsp.unlock_compound_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetCompoundDataRsp::unlock_compound_list() const {
  // @@protoc_insertion_point(field_list:proto.GetCompoundDataRsp.unlock_compound_list)
  return unlock_compound_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetCompoundDataRsp::mutable_unlock_compound_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetCompoundDataRsp.unlock_compound_list)
  return &unlock_compound_list_;
}

// repeated .proto.CompoundQueueData compound_que_data_list = 3;
inline int GetCompoundDataRsp::compound_que_data_list_size() const {
  return compound_que_data_list_.size();
}
inline void GetCompoundDataRsp::clear_compound_que_data_list() {
  compound_que_data_list_.Clear();
}
inline const ::proto::CompoundQueueData& GetCompoundDataRsp::compound_que_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Get(index);
}
inline ::proto::CompoundQueueData* GetCompoundDataRsp::mutable_compound_que_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Mutable(index);
}
inline ::proto::CompoundQueueData* GetCompoundDataRsp::add_compound_que_data_list() {
  // @@protoc_insertion_point(field_add:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >*
GetCompoundDataRsp::mutable_compound_que_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetCompoundDataRsp.compound_que_data_list)
  return &compound_que_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CompoundQueueData >&
GetCompoundDataRsp::compound_que_data_list() const {
  // @@protoc_insertion_point(field_list:proto.GetCompoundDataRsp.compound_que_data_list)
  return compound_que_data_list_;
}

// -------------------------------------------------------------------

// PlayerTimeNotify

// bool is_paused = 1;
inline void PlayerTimeNotify::clear_is_paused() {
  is_paused_ = false;
}
inline bool PlayerTimeNotify::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.is_paused)
  return is_paused_;
}
inline void PlayerTimeNotify::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.is_paused)
}

// uint64 player_time = 2;
inline void PlayerTimeNotify::clear_player_time() {
  player_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerTimeNotify::player_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.player_time)
  return player_time_;
}
inline void PlayerTimeNotify::set_player_time(::google::protobuf::uint64 value) {
  
  player_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.player_time)
}

// uint64 server_time = 3;
inline void PlayerTimeNotify::clear_server_time() {
  server_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PlayerTimeNotify::server_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTimeNotify.server_time)
  return server_time_;
}
inline void PlayerTimeNotify::set_server_time(::google::protobuf::uint64 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTimeNotify.server_time)
}

// -------------------------------------------------------------------

// PlayerSetPauseReq

// bool is_paused = 1;
inline void PlayerSetPauseReq::clear_is_paused() {
  is_paused_ = false;
}
inline bool PlayerSetPauseReq::is_paused() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetPauseReq.is_paused)
  return is_paused_;
}
inline void PlayerSetPauseReq::set_is_paused(bool value) {
  
  is_paused_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetPauseReq.is_paused)
}

// -------------------------------------------------------------------

// PlayerSetPauseRsp

// uint32 retcode = 1;
inline void PlayerSetPauseRsp::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 PlayerSetPauseRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetPauseRsp.retcode)
  return retcode_;
}
inline void PlayerSetPauseRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetPauseRsp.retcode)
}

// -------------------------------------------------------------------

// PlayerSetLanguageReq

// uint32 language_type = 1;
inline void PlayerSetLanguageReq::clear_language_type() {
  language_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerSetLanguageReq::language_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetLanguageReq.language_type)
  return language_type_;
}
inline void PlayerSetLanguageReq::set_language_type(::google::protobuf::uint32 value) {
  
  language_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetLanguageReq.language_type)
}

// -------------------------------------------------------------------

// PlayerSetLanguageRsp

// uint32 retcode = 1;
inline void PlayerSetLanguageRsp::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 PlayerSetLanguageRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerSetLanguageRsp.retcode)
  return retcode_;
}
inline void PlayerSetLanguageRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerSetLanguageRsp.retcode)
}

// -------------------------------------------------------------------

// DataResVersionNotify

// uint32 client_data_version = 1;
inline void DataResVersionNotify::clear_client_data_version() {
  client_data_version_ = 0u;
}
inline ::google::protobuf::uint32 DataResVersionNotify::client_data_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_data_version)
  return client_data_version_;
}
inline void DataResVersionNotify::set_client_data_version(::google::protobuf::uint32 value) {
  
  client_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_data_version)
}

// uint32 client_silence_data_version = 2;
inline void DataResVersionNotify::clear_client_silence_data_version() {
  client_silence_data_version_ = 0u;
}
inline ::google::protobuf::uint32 DataResVersionNotify::client_silence_data_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_data_version)
  return client_silence_data_version_;
}
inline void DataResVersionNotify::set_client_silence_data_version(::google::protobuf::uint32 value) {
  
  client_silence_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_data_version)
}

// uint32 res_version = 3;
inline void DataResVersionNotify::clear_res_version() {
  res_version_ = 0u;
}
inline ::google::protobuf::uint32 DataResVersionNotify::res_version() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.res_version)
  return res_version_;
}
inline void DataResVersionNotify::set_res_version(::google::protobuf::uint32 value) {
  
  res_version_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.res_version)
}

// string client_md5 = 5;
inline void DataResVersionNotify::clear_client_md5() {
  client_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResVersionNotify::client_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_md5)
  return client_md5_.GetNoArena();
}
inline void DataResVersionNotify::set_client_md5(const ::std::string& value) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_md5)
}
#if LANG_CXX11
inline void DataResVersionNotify::set_client_md5(::std::string&& value) {
  
  client_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_md5)
}
#endif
inline void DataResVersionNotify::set_client_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_md5)
}
inline void DataResVersionNotify::set_client_md5(const char* value, size_t size) {
  
  client_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_md5)
}
inline ::std::string* DataResVersionNotify::mutable_client_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_md5)
  return client_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResVersionNotify::release_client_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_md5)
  
  return client_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResVersionNotify::set_allocated_client_md5(::std::string* client_md5) {
  if (client_md5 != NULL) {
    
  } else {
    
  }
  client_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_md5)
}

// string client_silence_md5 = 6;
inline void DataResVersionNotify::clear_client_silence_md5() {
  client_silence_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResVersionNotify::client_silence_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.client_silence_md5)
  return client_silence_md5_.GetNoArena();
}
inline void DataResVersionNotify::set_client_silence_md5(const ::std::string& value) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.client_silence_md5)
}
#if LANG_CXX11
inline void DataResVersionNotify::set_client_silence_md5(::std::string&& value) {
  
  client_silence_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.client_silence_md5)
}
#endif
inline void DataResVersionNotify::set_client_silence_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.client_silence_md5)
}
inline void DataResVersionNotify::set_client_silence_md5(const char* value, size_t size) {
  
  client_silence_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.client_silence_md5)
}
inline ::std::string* DataResVersionNotify::mutable_client_silence_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.client_silence_md5)
  return client_silence_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResVersionNotify::release_client_silence_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.client_silence_md5)
  
  return client_silence_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResVersionNotify::set_allocated_client_silence_md5(::std::string* client_silence_md5) {
  if (client_silence_md5 != NULL) {
    
  } else {
    
  }
  client_silence_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_silence_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.client_silence_md5)
}

// string res_md5 = 7;
inline void DataResVersionNotify::clear_res_md5() {
  res_md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DataResVersionNotify::res_md5() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.res_md5)
  return res_md5_.GetNoArena();
}
inline void DataResVersionNotify::set_res_md5(const ::std::string& value) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.res_md5)
}
#if LANG_CXX11
inline void DataResVersionNotify::set_res_md5(::std::string&& value) {
  
  res_md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.DataResVersionNotify.res_md5)
}
#endif
inline void DataResVersionNotify::set_res_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.DataResVersionNotify.res_md5)
}
inline void DataResVersionNotify::set_res_md5(const char* value, size_t size) {
  
  res_md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.DataResVersionNotify.res_md5)
}
inline ::std::string* DataResVersionNotify::mutable_res_md5() {
  
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.res_md5)
  return res_md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataResVersionNotify::release_res_md5() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.res_md5)
  
  return res_md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataResVersionNotify::set_allocated_res_md5(::std::string* res_md5) {
  if (res_md5 != NULL) {
    
  } else {
    
  }
  res_md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), res_md5);
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.res_md5)
}

// bool is_res_need_relogin = 9;
inline void DataResVersionNotify::clear_is_res_need_relogin() {
  is_res_need_relogin_ = false;
}
inline bool DataResVersionNotify::is_res_need_relogin() const {
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.is_res_need_relogin)
  return is_res_need_relogin_;
}
inline void DataResVersionNotify::set_is_res_need_relogin(bool value) {
  
  is_res_need_relogin_ = value;
  // @@protoc_insertion_point(field_set:proto.DataResVersionNotify.is_res_need_relogin)
}

// .proto.ResVersionConfig res_version_config = 10;
inline bool DataResVersionNotify::has_res_version_config() const {
  return this != internal_default_instance() && res_version_config_ != NULL;
}
inline void DataResVersionNotify::clear_res_version_config() {
  if (GetArenaNoVirtual() == NULL && res_version_config_ != NULL) delete res_version_config_;
  res_version_config_ = NULL;
}
inline const ::proto::ResVersionConfig& DataResVersionNotify::res_version_config() const {
  const ::proto::ResVersionConfig* p = res_version_config_;
  // @@protoc_insertion_point(field_get:proto.DataResVersionNotify.res_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ResVersionConfig*>(
      &::proto::_ResVersionConfig_default_instance_);
}
inline ::proto::ResVersionConfig* DataResVersionNotify::mutable_res_version_config() {
  
  if (res_version_config_ == NULL) {
    res_version_config_ = new ::proto::ResVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.DataResVersionNotify.res_version_config)
  return res_version_config_;
}
inline ::proto::ResVersionConfig* DataResVersionNotify::release_res_version_config() {
  // @@protoc_insertion_point(field_release:proto.DataResVersionNotify.res_version_config)
  
  ::proto::ResVersionConfig* temp = res_version_config_;
  res_version_config_ = NULL;
  return temp;
}
inline void DataResVersionNotify::set_allocated_res_version_config(::proto::ResVersionConfig* res_version_config) {
  delete res_version_config_;
  res_version_config_ = res_version_config;
  if (res_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DataResVersionNotify.res_version_config)
}

// -------------------------------------------------------------------

// DailyTaskInfo

// uint32 daily_task_id = 1;
inline void DailyTaskInfo::clear_daily_task_id() {
  daily_task_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskInfo::daily_task_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.daily_task_id)
  return daily_task_id_;
}
inline void DailyTaskInfo::set_daily_task_id(::google::protobuf::uint32 value) {
  
  daily_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.daily_task_id)
}

// uint32 reward_id = 2;
inline void DailyTaskInfo::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskInfo::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.reward_id)
  return reward_id_;
}
inline void DailyTaskInfo::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.reward_id)
}

// uint32 progress = 3;
inline void DailyTaskInfo::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.progress)
  return progress_;
}
inline void DailyTaskInfo::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.progress)
}

// uint32 finish_progress = 4;
inline void DailyTaskInfo::clear_finish_progress() {
  finish_progress_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskInfo::finish_progress() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.finish_progress)
  return finish_progress_;
}
inline void DailyTaskInfo::set_finish_progress(::google::protobuf::uint32 value) {
  
  finish_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.finish_progress)
}

// bool is_finished = 5;
inline void DailyTaskInfo::clear_is_finished() {
  is_finished_ = false;
}
inline bool DailyTaskInfo::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskInfo.is_finished)
  return is_finished_;
}
inline void DailyTaskInfo::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskInfo.is_finished)
}

// -------------------------------------------------------------------

// DailyTaskDataNotify

// uint32 score_reward_id = 3;
inline void DailyTaskDataNotify::clear_score_reward_id() {
  score_reward_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskDataNotify::score_reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.score_reward_id)
  return score_reward_id_;
}
inline void DailyTaskDataNotify::set_score_reward_id(::google::protobuf::uint32 value) {
  
  score_reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.score_reward_id)
}

// bool is_taken_score_reward = 4;
inline void DailyTaskDataNotify::clear_is_taken_score_reward() {
  is_taken_score_reward_ = false;
}
inline bool DailyTaskDataNotify::is_taken_score_reward() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.is_taken_score_reward)
  return is_taken_score_reward_;
}
inline void DailyTaskDataNotify::set_is_taken_score_reward(bool value) {
  
  is_taken_score_reward_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.is_taken_score_reward)
}

// uint32 finished_num = 5;
inline void DailyTaskDataNotify::clear_finished_num() {
  finished_num_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskDataNotify::finished_num() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskDataNotify.finished_num)
  return finished_num_;
}
inline void DailyTaskDataNotify::set_finished_num(::google::protobuf::uint32 value) {
  
  finished_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskDataNotify.finished_num)
}

// -------------------------------------------------------------------

// DailyTaskProgressNotify

// .proto.DailyTaskInfo info = 1;
inline bool DailyTaskProgressNotify::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void DailyTaskProgressNotify::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::proto::DailyTaskInfo& DailyTaskProgressNotify::info() const {
  const ::proto::DailyTaskInfo* p = info_;
  // @@protoc_insertion_point(field_get:proto.DailyTaskProgressNotify.info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DailyTaskInfo*>(
      &::proto::_DailyTaskInfo_default_instance_);
}
inline ::proto::DailyTaskInfo* DailyTaskProgressNotify::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::proto::DailyTaskInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.DailyTaskProgressNotify.info)
  return info_;
}
inline ::proto::DailyTaskInfo* DailyTaskProgressNotify::release_info() {
  // @@protoc_insertion_point(field_release:proto.DailyTaskProgressNotify.info)
  
  ::proto::DailyTaskInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void DailyTaskProgressNotify::set_allocated_info(::proto::DailyTaskInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.DailyTaskProgressNotify.info)
}

// -------------------------------------------------------------------

// DailyTaskScoreRewardNotify

// uint32 reward_id = 1;
inline void DailyTaskScoreRewardNotify::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 DailyTaskScoreRewardNotify::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.DailyTaskScoreRewardNotify.reward_id)
  return reward_id_;
}
inline void DailyTaskScoreRewardNotify::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DailyTaskScoreRewardNotify.reward_id)
}

// -------------------------------------------------------------------

// WorldOwnerDailyTaskNotify

// repeated .proto.DailyTaskInfo task_list = 1;
inline int WorldOwnerDailyTaskNotify::task_list_size() const {
  return task_list_.size();
}
inline void WorldOwnerDailyTaskNotify::clear_task_list() {
  task_list_.Clear();
}
inline const ::proto::DailyTaskInfo& WorldOwnerDailyTaskNotify::task_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Get(index);
}
inline ::proto::DailyTaskInfo* WorldOwnerDailyTaskNotify::mutable_task_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Mutable(index);
}
inline ::proto::DailyTaskInfo* WorldOwnerDailyTaskNotify::add_task_list() {
  // @@protoc_insertion_point(field_add:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >*
WorldOwnerDailyTaskNotify::mutable_task_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.WorldOwnerDailyTaskNotify.task_list)
  return &task_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::DailyTaskInfo >&
WorldOwnerDailyTaskNotify::task_list() const {
  // @@protoc_insertion_point(field_list:proto.WorldOwnerDailyTaskNotify.task_list)
  return task_list_;
}

// -------------------------------------------------------------------

// AddRandTaskInfoNotify

// uint32 rand_task_id = 1;
inline void AddRandTaskInfoNotify::clear_rand_task_id() {
  rand_task_id_ = 0u;
}
inline ::google::protobuf::uint32 AddRandTaskInfoNotify::rand_task_id() const {
  // @@protoc_insertion_point(field_get:proto.AddRandTaskInfoNotify.rand_task_id)
  return rand_task_id_;
}
inline void AddRandTaskInfoNotify::set_rand_task_id(::google::protobuf::uint32 value) {
  
  rand_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRandTaskInfoNotify.rand_task_id)
}

// .proto.Vector pos = 2;
inline bool AddRandTaskInfoNotify::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void AddRandTaskInfoNotify::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::Vector& AddRandTaskInfoNotify::pos() const {
  const ::proto::Vector* p = pos_;
  // @@protoc_insertion_point(field_get:proto.AddRandTaskInfoNotify.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Vector*>(
      &::proto::_Vector_default_instance_);
}
inline ::proto::Vector* AddRandTaskInfoNotify::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::Vector;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddRandTaskInfoNotify.pos)
  return pos_;
}
inline ::proto::Vector* AddRandTaskInfoNotify::release_pos() {
  // @@protoc_insertion_point(field_release:proto.AddRandTaskInfoNotify.pos)
  
  ::proto::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void AddRandTaskInfoNotify::set_allocated_pos(::proto::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddRandTaskInfoNotify.pos)
}

// -------------------------------------------------------------------

// RemoveRandTaskInfoNotify

// uint32 rand_task_id = 1;
inline void RemoveRandTaskInfoNotify::clear_rand_task_id() {
  rand_task_id_ = 0u;
}
inline ::google::protobuf::uint32 RemoveRandTaskInfoNotify::rand_task_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.rand_task_id)
  return rand_task_id_;
}
inline void RemoveRandTaskInfoNotify::set_rand_task_id(::google::protobuf::uint32 value) {
  
  rand_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.rand_task_id)
}

// bool is_succ = 2;
inline void RemoveRandTaskInfoNotify::clear_is_succ() {
  is_succ_ = false;
}
inline bool RemoveRandTaskInfoNotify::is_succ() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.is_succ)
  return is_succ_;
}
inline void RemoveRandTaskInfoNotify::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.is_succ)
}

// .proto.RemoveRandTaskInfoNotify.FinishReason reason = 3;
inline void RemoveRandTaskInfoNotify::clear_reason() {
  reason_ = 0;
}
inline ::proto::RemoveRandTaskInfoNotify_FinishReason RemoveRandTaskInfoNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.RemoveRandTaskInfoNotify.reason)
  return static_cast< ::proto::RemoveRandTaskInfoNotify_FinishReason >(reason_);
}
inline void RemoveRandTaskInfoNotify::set_reason(::proto::RemoveRandTaskInfoNotify_FinishReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveRandTaskInfoNotify.reason)
}

// -------------------------------------------------------------------

// TakePlayerLevelRewardReq

// uint32 level = 1;
inline void TakePlayerLevelRewardReq::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 TakePlayerLevelRewardReq::level() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardReq.level)
  return level_;
}
inline void TakePlayerLevelRewardReq::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardReq.level)
}

// -------------------------------------------------------------------

// TakePlayerLevelRewardRsp

// int32 retcode = 1;
inline void TakePlayerLevelRewardRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 TakePlayerLevelRewardRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.retcode)
  return retcode_;
}
inline void TakePlayerLevelRewardRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.retcode)
}

// uint32 level = 2;
inline void TakePlayerLevelRewardRsp::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 TakePlayerLevelRewardRsp::level() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.level)
  return level_;
}
inline void TakePlayerLevelRewardRsp::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.level)
}

// uint32 reward_id = 3;
inline void TakePlayerLevelRewardRsp::clear_reward_id() {
  reward_id_ = 0u;
}
inline ::google::protobuf::uint32 TakePlayerLevelRewardRsp::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.TakePlayerLevelRewardRsp.reward_id)
  return reward_id_;
}
inline void TakePlayerLevelRewardRsp::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakePlayerLevelRewardRsp.reward_id)
}

// -------------------------------------------------------------------

// PlayerLevelRewardUpdateNotify

// repeated uint32 level_list = 1;
inline int PlayerLevelRewardUpdateNotify::level_list_size() const {
  return level_list_.size();
}
inline void PlayerLevelRewardUpdateNotify::clear_level_list() {
  level_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerLevelRewardUpdateNotify::level_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerLevelRewardUpdateNotify.level_list)
  return level_list_.Get(index);
}
inline void PlayerLevelRewardUpdateNotify::set_level_list(int index, ::google::protobuf::uint32 value) {
  level_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerLevelRewardUpdateNotify.level_list)
}
inline void PlayerLevelRewardUpdateNotify::add_level_list(::google::protobuf::uint32 value) {
  level_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerLevelRewardUpdateNotify.level_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerLevelRewardUpdateNotify::level_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerLevelRewardUpdateNotify.level_list)
  return level_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerLevelRewardUpdateNotify::mutable_level_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerLevelRewardUpdateNotify.level_list)
  return &level_list_;
}

// -------------------------------------------------------------------

// GivingRecord

// uint32 giving_id = 1;
inline void GivingRecord::clear_giving_id() {
  giving_id_ = 0u;
}
inline ::google::protobuf::uint32 GivingRecord::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.giving_id)
  return giving_id_;
}
inline void GivingRecord::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.giving_id)
}

// bool is_finished = 2;
inline void GivingRecord::clear_is_finished() {
  is_finished_ = false;
}
inline bool GivingRecord::is_finished() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.is_finished)
  return is_finished_;
}
inline void GivingRecord::set_is_finished(bool value) {
  
  is_finished_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.is_finished)
}

// uint32 last_group_id = 3;
inline void GivingRecord::clear_last_group_id() {
  last_group_id_ = 0u;
}
inline ::google::protobuf::uint32 GivingRecord::last_group_id() const {
  // @@protoc_insertion_point(field_get:proto.GivingRecord.last_group_id)
  return last_group_id_;
}
inline void GivingRecord::set_last_group_id(::google::protobuf::uint32 value) {
  
  last_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GivingRecord.last_group_id)
}

// -------------------------------------------------------------------

// GivingRecordNotify

// repeated .proto.GivingRecord giving_record_list = 1;
inline int GivingRecordNotify::giving_record_list_size() const {
  return giving_record_list_.size();
}
inline void GivingRecordNotify::clear_giving_record_list() {
  giving_record_list_.Clear();
}
inline const ::proto::GivingRecord& GivingRecordNotify::giving_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Get(index);
}
inline ::proto::GivingRecord* GivingRecordNotify::mutable_giving_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Mutable(index);
}
inline ::proto::GivingRecord* GivingRecordNotify::add_giving_record_list() {
  // @@protoc_insertion_point(field_add:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >*
GivingRecordNotify::mutable_giving_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GivingRecordNotify.giving_record_list)
  return &giving_record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::GivingRecord >&
GivingRecordNotify::giving_record_list() const {
  // @@protoc_insertion_point(field_list:proto.GivingRecordNotify.giving_record_list)
  return giving_record_list_;
}

// -------------------------------------------------------------------

// GivingRecordChangeNotify

// .proto.GivingRecord giving_record = 1;
inline bool GivingRecordChangeNotify::has_giving_record() const {
  return this != internal_default_instance() && giving_record_ != NULL;
}
inline void GivingRecordChangeNotify::clear_giving_record() {
  if (GetArenaNoVirtual() == NULL && giving_record_ != NULL) delete giving_record_;
  giving_record_ = NULL;
}
inline const ::proto::GivingRecord& GivingRecordChangeNotify::giving_record() const {
  const ::proto::GivingRecord* p = giving_record_;
  // @@protoc_insertion_point(field_get:proto.GivingRecordChangeNotify.giving_record)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GivingRecord*>(
      &::proto::_GivingRecord_default_instance_);
}
inline ::proto::GivingRecord* GivingRecordChangeNotify::mutable_giving_record() {
  
  if (giving_record_ == NULL) {
    giving_record_ = new ::proto::GivingRecord;
  }
  // @@protoc_insertion_point(field_mutable:proto.GivingRecordChangeNotify.giving_record)
  return giving_record_;
}
inline ::proto::GivingRecord* GivingRecordChangeNotify::release_giving_record() {
  // @@protoc_insertion_point(field_release:proto.GivingRecordChangeNotify.giving_record)
  
  ::proto::GivingRecord* temp = giving_record_;
  giving_record_ = NULL;
  return temp;
}
inline void GivingRecordChangeNotify::set_allocated_giving_record(::proto::GivingRecord* giving_record) {
  delete giving_record_;
  giving_record_ = giving_record;
  if (giving_record) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GivingRecordChangeNotify.giving_record)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ItemGivingReq

// uint32 giving_id = 1;
inline void ItemGivingReq::clear_giving_id() {
  giving_id_ = 0u;
}
inline ::google::protobuf::uint32 ItemGivingReq::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.giving_id)
  return giving_id_;
}
inline void ItemGivingReq::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingReq.giving_id)
}

// repeated .proto.ItemParam item_param_list = 2;
inline int ItemGivingReq::item_param_list_size() const {
  return item_param_list_.size();
}
inline void ItemGivingReq::clear_item_param_list() {
  item_param_list_.Clear();
}
inline const ::proto::ItemParam& ItemGivingReq::item_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Get(index);
}
inline ::proto::ItemParam* ItemGivingReq::mutable_item_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Mutable(index);
}
inline ::proto::ItemParam* ItemGivingReq::add_item_param_list() {
  // @@protoc_insertion_point(field_add:proto.ItemGivingReq.item_param_list)
  return item_param_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ItemGivingReq::mutable_item_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ItemGivingReq.item_param_list)
  return &item_param_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ItemGivingReq::item_param_list() const {
  // @@protoc_insertion_point(field_list:proto.ItemGivingReq.item_param_list)
  return item_param_list_;
}

// map<uint64, uint32> item_guid_count_map = 3;
inline int ItemGivingReq::item_guid_count_map_size() const {
  return item_guid_count_map_.size();
}
inline void ItemGivingReq::clear_item_guid_count_map() {
  item_guid_count_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
ItemGivingReq::item_guid_count_map() const {
  // @@protoc_insertion_point(field_map:proto.ItemGivingReq.item_guid_count_map)
  return item_guid_count_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
ItemGivingReq::mutable_item_guid_count_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ItemGivingReq.item_guid_count_map)
  return item_guid_count_map_.MutableMap();
}

// -------------------------------------------------------------------

// ItemGivingRsp

// int32 retcode = 1;
inline void ItemGivingRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ItemGivingRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.retcode)
  return retcode_;
}
inline void ItemGivingRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.retcode)
}

// uint32 giving_id = 2;
inline void ItemGivingRsp::clear_giving_id() {
  giving_id_ = 0u;
}
inline ::google::protobuf::uint32 ItemGivingRsp::giving_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemGivingRsp.giving_id)
  return giving_id_;
}
inline void ItemGivingRsp::set_giving_id(::google::protobuf::uint32 value) {
  
  giving_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemGivingRsp.giving_id)
}

// -------------------------------------------------------------------

// PlayerCookArgsReq

// uint32 recipe_id = 1;
inline void PlayerCookArgsReq::clear_recipe_id() {
  recipe_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookArgsReq::recipe_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsReq.recipe_id)
  return recipe_id_;
}
inline void PlayerCookArgsReq::set_recipe_id(::google::protobuf::uint32 value) {
  
  recipe_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsReq.recipe_id)
}

// uint32 assist_avatar = 2;
inline void PlayerCookArgsReq::clear_assist_avatar() {
  assist_avatar_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookArgsReq::assist_avatar() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsReq.assist_avatar)
  return assist_avatar_;
}
inline void PlayerCookArgsReq::set_assist_avatar(::google::protobuf::uint32 value) {
  
  assist_avatar_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsReq.assist_avatar)
}

// -------------------------------------------------------------------

// PlayerCookArgsRsp

// uint32 retcode = 1;
inline void PlayerCookArgsRsp::clear_retcode() {
  retcode_ = 0u;
}
inline ::google::protobuf::uint32 PlayerCookArgsRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsRsp.retcode)
  return retcode_;
}
inline void PlayerCookArgsRsp::set_retcode(::google::protobuf::uint32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsRsp.retcode)
}

// float qte_range_ratio = 2;
inline void PlayerCookArgsRsp::clear_qte_range_ratio() {
  qte_range_ratio_ = 0;
}
inline float PlayerCookArgsRsp::qte_range_ratio() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCookArgsRsp.qte_range_ratio)
  return qte_range_ratio_;
}
inline void PlayerCookArgsRsp::set_qte_range_ratio(float value) {
  
  qte_range_ratio_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCookArgsRsp.qte_range_ratio)
}

// -------------------------------------------------------------------

// PlayerLuaShellNotify

// uint32 id = 1;
inline void PlayerLuaShellNotify::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLuaShellNotify::id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.id)
  return id_;
}
inline void PlayerLuaShellNotify::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.id)
}

// bytes lua_shell = 2;
inline void PlayerLuaShellNotify::clear_lua_shell() {
  lua_shell_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerLuaShellNotify::lua_shell() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLuaShellNotify.lua_shell)
  return lua_shell_.GetNoArena();
}
inline void PlayerLuaShellNotify::set_lua_shell(const ::std::string& value) {
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerLuaShellNotify.lua_shell)
}
#if LANG_CXX11
inline void PlayerLuaShellNotify::set_lua_shell(::std::string&& value) {
  
  lua_shell_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerLuaShellNotify.lua_shell)
}
#endif
inline void PlayerLuaShellNotify::set_lua_shell(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerLuaShellNotify.lua_shell)
}
inline void PlayerLuaShellNotify::set_lua_shell(const void* value, size_t size) {
  
  lua_shell_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerLuaShellNotify.lua_shell)
}
inline ::std::string* PlayerLuaShellNotify::mutable_lua_shell() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerLuaShellNotify.lua_shell)
  return lua_shell_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerLuaShellNotify::release_lua_shell() {
  // @@protoc_insertion_point(field_release:proto.PlayerLuaShellNotify.lua_shell)
  
  return lua_shell_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerLuaShellNotify::set_allocated_lua_shell(::std::string* lua_shell) {
  if (lua_shell != NULL) {
    
  } else {
    
  }
  lua_shell_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lua_shell);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerLuaShellNotify.lua_shell)
}

// -------------------------------------------------------------------

// ServerDisconnectClientNotify

// uint32 data = 1;
inline void ServerDisconnectClientNotify::clear_data() {
  data_ = 0u;
}
inline ::google::protobuf::uint32 ServerDisconnectClientNotify::data() const {
  // @@protoc_insertion_point(field_get:proto.ServerDisconnectClientNotify.data)
  return data_;
}
inline void ServerDisconnectClientNotify::set_data(::google::protobuf::uint32 value) {
  
  data_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDisconnectClientNotify.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GetPlayerTokenReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetPlayerTokenReq_CmdId>() {
  return ::proto::GetPlayerTokenReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetPlayerTokenRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetPlayerTokenRsp_CmdId>() {
  return ::proto::GetPlayerTokenRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerLoginReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLoginReq_CmdId>() {
  return ::proto::PlayerLoginReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerLoginRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLoginRsp_CmdId>() {
  return ::proto::PlayerLoginRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerLogoutReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLogoutReq_CmdId>() {
  return ::proto::PlayerLogoutReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerLogoutReq_Reason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLogoutReq_Reason>() {
  return ::proto::PlayerLogoutReq_Reason_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerLogoutRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLogoutRsp_CmdId>() {
  return ::proto::PlayerLogoutRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerLogoutNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLogoutNotify_CmdId>() {
  return ::proto::PlayerLogoutNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerDataNotify_CmdId>() {
  return ::proto::PlayerDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeGameTimeReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeGameTimeReq_CmdId>() {
  return ::proto::ChangeGameTimeReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ChangeGameTimeRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ChangeGameTimeRsp_CmdId>() {
  return ::proto::ChangeGameTimeRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerGameTimeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerGameTimeNotify_CmdId>() {
  return ::proto::PlayerGameTimeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerPropNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerPropNotify_CmdId>() {
  return ::proto::PlayerPropNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ClientTriggerEventNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ClientTriggerEventNotify_CmdId>() {
  return ::proto::ClientTriggerEventNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerPropReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerPropReq_CmdId>() {
  return ::proto::SetPlayerPropReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerPropRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerPropRsp_CmdId>() {
  return ::proto::SetPlayerPropRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerBornDataReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerBornDataReq_CmdId>() {
  return ::proto::SetPlayerBornDataReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerBornDataRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerBornDataRsp_CmdId>() {
  return ::proto::SetPlayerBornDataRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DoSetPlayerBornDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DoSetPlayerBornDataNotify_CmdId>() {
  return ::proto::DoSetPlayerBornDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerPropChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerPropChangeNotify_CmdId>() {
  return ::proto::PlayerPropChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerNameReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerNameReq_CmdId>() {
  return ::proto::SetPlayerNameReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetPlayerNameRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetPlayerNameRsp_CmdId>() {
  return ::proto::SetPlayerNameRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetOpenStateReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetOpenStateReq_CmdId>() {
  return ::proto::SetOpenStateReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::SetOpenStateRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SetOpenStateRsp_CmdId>() {
  return ::proto::SetOpenStateRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::OpenStateUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OpenStateUpdateNotify_CmdId>() {
  return ::proto::OpenStateUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::OpenStateChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OpenStateChangeNotify_CmdId>() {
  return ::proto::OpenStateChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerCookReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerCookReq_CmdId>() {
  return ::proto::PlayerCookReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerCookRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerCookRsp_CmdId>() {
  return ::proto::PlayerCookRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerRandomCookReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerRandomCookReq_CmdId>() {
  return ::proto::PlayerRandomCookReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerRandomCookRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerRandomCookRsp_CmdId>() {
  return ::proto::PlayerRandomCookRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CookDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CookDataNotify_CmdId>() {
  return ::proto::CookDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CookRecipeDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CookRecipeDataNotify_CmdId>() {
  return ::proto::CookRecipeDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CookGradeDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CookGradeDataNotify_CmdId>() {
  return ::proto::CookGradeDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerCompoundMaterialReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerCompoundMaterialReq_CmdId>() {
  return ::proto::PlayerCompoundMaterialReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerCompoundMaterialRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerCompoundMaterialRsp_CmdId>() {
  return ::proto::PlayerCompoundMaterialRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeCompoundOutputReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeCompoundOutputReq_CmdId>() {
  return ::proto::TakeCompoundOutputReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakeCompoundOutputRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakeCompoundOutputRsp_CmdId>() {
  return ::proto::TakeCompoundOutputRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::CompoundDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CompoundDataNotify_CmdId>() {
  return ::proto::CompoundDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetCompoundDataReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetCompoundDataReq_CmdId>() {
  return ::proto::GetCompoundDataReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GetCompoundDataRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GetCompoundDataRsp_CmdId>() {
  return ::proto::GetCompoundDataRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerTimeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerTimeNotify_CmdId>() {
  return ::proto::PlayerTimeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerSetPauseReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerSetPauseReq_CmdId>() {
  return ::proto::PlayerSetPauseReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerSetPauseRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerSetPauseRsp_CmdId>() {
  return ::proto::PlayerSetPauseRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerSetLanguageReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerSetLanguageReq_CmdId>() {
  return ::proto::PlayerSetLanguageReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerSetLanguageRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerSetLanguageRsp_CmdId>() {
  return ::proto::PlayerSetLanguageRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DataResVersionNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DataResVersionNotify_CmdId>() {
  return ::proto::DataResVersionNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DailyTaskDataNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DailyTaskDataNotify_CmdId>() {
  return ::proto::DailyTaskDataNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DailyTaskProgressNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DailyTaskProgressNotify_CmdId>() {
  return ::proto::DailyTaskProgressNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::DailyTaskScoreRewardNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::DailyTaskScoreRewardNotify_CmdId>() {
  return ::proto::DailyTaskScoreRewardNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::WorldOwnerDailyTaskNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::WorldOwnerDailyTaskNotify_CmdId>() {
  return ::proto::WorldOwnerDailyTaskNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::AddRandTaskInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AddRandTaskInfoNotify_CmdId>() {
  return ::proto::AddRandTaskInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::RemoveRandTaskInfoNotify_FinishReason> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RemoveRandTaskInfoNotify_FinishReason>() {
  return ::proto::RemoveRandTaskInfoNotify_FinishReason_descriptor();
}
template <> struct is_proto_enum< ::proto::RemoveRandTaskInfoNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RemoveRandTaskInfoNotify_CmdId>() {
  return ::proto::RemoveRandTaskInfoNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakePlayerLevelRewardReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakePlayerLevelRewardReq_CmdId>() {
  return ::proto::TakePlayerLevelRewardReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::TakePlayerLevelRewardRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::TakePlayerLevelRewardRsp_CmdId>() {
  return ::proto::TakePlayerLevelRewardRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerLevelRewardUpdateNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLevelRewardUpdateNotify_CmdId>() {
  return ::proto::PlayerLevelRewardUpdateNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GivingRecordNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GivingRecordNotify_CmdId>() {
  return ::proto::GivingRecordNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::GivingRecordChangeNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GivingRecordChangeNotify_CmdId>() {
  return ::proto::GivingRecordChangeNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ItemGivingReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ItemGivingReq_CmdId>() {
  return ::proto::ItemGivingReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ItemGivingRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ItemGivingRsp_CmdId>() {
  return ::proto::ItemGivingRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerCookArgsReq_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerCookArgsReq_CmdId>() {
  return ::proto::PlayerCookArgsReq_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerCookArgsRsp_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerCookArgsRsp_CmdId>() {
  return ::proto::PlayerCookArgsRsp_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerLuaShellNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerLuaShellNotify_CmdId>() {
  return ::proto::PlayerLuaShellNotify_CmdId_descriptor();
}
template <> struct is_proto_enum< ::proto::ServerDisconnectClientNotify_CmdId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ServerDisconnectClientNotify_CmdId>() {
  return ::proto::ServerDisconnectClientNotify_CmdId_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmd_2fcmd_5fplayer_2eproto__INCLUDED
